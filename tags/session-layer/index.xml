<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Session-Layer</title><link>https://buenhyden.github.io/tags/session-layer/</link><description>Recent content in Session-Layer on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 25 Sep 2024 07:17:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/session-layer/index.xml" rel="self" type="application/rss+xml"/><item><title>OSI 7 Layers - 5. Session Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-5-session-layer/</link><pubDate>Wed, 25 Sep 2024 07:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-5-session-layer/</guid><description>
&lt;h2>Session Layer(세션 계층)&lt;/h2>&lt;p>세션 계층은 OSI 모델의 5번째 계층으로, 통신 세션을 구성하는 계층이다.&lt;br>
응용 프로그램 간의 대화를 유지하기 위한 구조를 제공하고, 프로세스들의 논리적인 연결을 담당한다.&lt;/p>
&lt;p>세션 계층은 네트워크 통신에서 연결의 지속성과 신뢰성을 보장하는 중요한 역할을 수행한다.&lt;br>
특히 장기간 지속되는 연결이 필요한 애플리케이션에서 중요한 기능을 제공한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi_model_session_layer_5.png"
alt="Session Layer"
title="Session Layer"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ol>
&lt;li>세션 연결 설정 및 유지, 종료&lt;/li>
&lt;li>데이터 교환 동기화&lt;/li>
&lt;li>체크포인팅을 통한 데이터 복구&lt;/li>
&lt;li>대화 제어 (Duplex, Half-duplex, Full-duplex 통신)&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>TCP/IP 세션을 관리하고 연결을 유지한다.&lt;/li>
&lt;li>양방향 통신을 지원합니다.&lt;/li>
&lt;li>인증과 권한 부여 기능을 제공할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위&lt;/h3>&lt;p>세션 계층의 데이터 단위는 일반적으로 &amp;ldquo;메시지&amp;quot;라고 불린다.&lt;/p>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>세션 설정: 통신하려는 양쪽 응용 프로그램 간에 세션을 설정한다.
&lt;ol>
&lt;li>연결 요청&lt;/li>
&lt;li>매개변수 협상&lt;/li>
&lt;li>연결 확인&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>데이터 전송: 설정된 세션을 통해 데이터를 주고받는다.
&lt;ol>
&lt;li>동기화 지점 확인&lt;/li>
&lt;li>데이터 전송&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>동기화: 데이터 전송 중 체크포인트를 설정하여 오류 발생 시 복구할 수 있게 한다.&lt;/li>
&lt;li>세션 종료: 통신이 끝나면 세션을 종료한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 프로토콜&lt;/h3>&lt;ul>
&lt;li>NetBIOS (Network Basic Input/Output System)&lt;/li>
&lt;li>RPC (Remote Procedure Call)&lt;/li>
&lt;li>NFS (Network File System)&lt;/li>
&lt;/ul>
&lt;h3>주의 사항&lt;/h3>&lt;ul>
&lt;li>세션 계층은 현재 TCP/IP 모델에서는 응용 계층에 통합되어 있어, 실제 구현에서는 명확히 구분되지 않을 수 있다.&lt;/li>
&lt;li>세션 관리의 중요성을 인식하고, 적절한 세션 유지 및 종료 메커니즘을 구현해야 한다.
&lt;ul>
&lt;li>세션 타임아웃 관리&lt;/li>
&lt;li>리소스 사용량 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 최적화
&lt;ul>
&lt;li>적절한 체크포인트 간격 설정&lt;/li>
&lt;li>효율적인 동기화 메커니즘 사용&lt;/li>
&lt;li>리소스 사용량 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>참고 및 출처&lt;/h3></description></item></channel></rss>