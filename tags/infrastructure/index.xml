<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Infrastructure on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/infrastructure/</link>
    <description>Recent content in Infrastructure on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 18 Jul 2025 05:58:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/infrastructure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Virtualization Softwares</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/softwares/</link>
      <pubDate>Mon, 11 Nov 2024 13:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/softwares/</guid>
      <description>컴퓨터 리소스의 추상화를 가능하게 하는 기술</description>
    </item>
    <item>
      <title>Infrastructure</title>
      <link>https://buenhyden.github.io/posts/system-design/system-design-fundamentals/infrastructure/</link>
      <pubDate>Sun, 10 Nov 2024 01:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-design-fundamentals/infrastructure/</guid>
      <description>Infrastructure(인프라스트럭처)는 조직의 IT 환경을 지원하고 운영하는 데 필요한 기본적인 구성 요소들의 집합이다. 이는 하드웨어, 소프트웨어, 네트워크 리소스 및 서비스를 포함한다.</description>
    </item>
    <item>
      <title>Cloud vs. On-Premise</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-vs-on-premise/</link>
      <pubDate>Sun, 10 Nov 2024 10:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-vs-on-premise/</guid>
      <description>Cloud와 On-Premise는 기업의 IT 인프라를 구축하고 관리하는 두 가지 주요 방식을 설명하는 개념이다.</description>
    </item>
    <item>
      <title>Event Broker</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/event-brokers-vs-message-brokers/event-broker/</link>
      <pubDate>Fri, 18 Jul 2025 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/event-brokers-vs-message-brokers/event-broker/</guid>
      <description>이벤트 브로커는 이벤트 발행자와 구독자 간의 메시지 교환을 중개하는 미들웨어로, 비동기 통신, 실시간 데이터 분배, 서비스 간 결합도 감소, 확장성 및 장애 복원력을 제공한다. Pub/Sub, 스트리밍, 다양한 QoS(서비스 품질) 와 같은 고급 기능을 지원하며, 현대 백엔드 아키텍처의 핵심 역할을 담당한다.</description>
    </item>
    <item>
      <title>Message Broker</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/event-brokers-vs-message-brokers/message-broker/</link>
      <pubDate>Fri, 18 Jul 2025 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/event-brokers-vs-message-brokers/message-broker/</guid>
      <description>메시지 브로커 (Message Broker) 는 송신자 (Sender) 와 수신자 (Receiver) 간의 메시지를 비동기적으로 중개하고 라우팅하는 미들웨어이다. 큐 (Queue) 나 토픽 (Topic) 기반의 메시지 전달로 시스템 간 결합도를 낮추고, 신뢰성, 확장성, 장애 복원력 있는 데이터 통신을 지원한다.</description>
    </item>
    <item>
      <title>Systems and Infrastructure</title>
      <link>https://buenhyden.github.io/posts/system-design/system-design-fundamentals/infrastructure/systems-and-infrastructure/</link>
      <pubDate>Sun, 15 Jun 2025 05:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-design-fundamentals/infrastructure/systems-and-infrastructure/</guid>
      <description>시스템 및 인프라스트럭처 (Infrastructure) 는 하드웨어, 네트워크, 스토리지, 가상화, 보안, 클라우드, 운영체제 등을 포함해 컴퓨팅 리소스를 효율적이고 안정적으로 운영하는 핵심 기반이며, 확장성·가용성·비용·보안 요구사항을 충족하도록 설계 및 구현되어야 한다.</description>
    </item>
    <item>
      <title>Queue vs. Topic</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/event-brokers-vs-message-brokers/queue-vs-topic/</link>
      <pubDate>Tue, 22 Apr 2025 13:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/event-brokers-vs-message-brokers/queue-vs-topic/</guid>
      <description>Queue 와 Topic 은 메시징 시스템의 핵심 통신 패턴으로, Queue 는 point-to-point 모델을 통해 단일 소비자에게 메시지를 전달하는 반면, Topic 은 publish-subscribe 모델을 사용하여 다중 구독자에게 메시지를 브로드캐스트한다. 각각 다른 사용 사례와 특성을 가지며 분산 시스템 설계에서 중요한 역할을 담당한다.</description>
    </item>
    <item>
      <title>Virtualization</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/</link>
      <pubDate>Mon, 11 Nov 2024 13:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/</guid>
      <description>컴퓨터 리소스의 추상화를 가능하게 하는 기술</description>
    </item>
    <item>
      <title>VMware</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/softwares/vmware/</link>
      <pubDate>Mon, 11 Nov 2024 12:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/softwares/vmware/</guid>
      <description>가상화 소프트웨어로, 물리적 컴퓨터에서 여러 가상 머신(VM)을 실행할 수 있게 해주는 도구</description>
    </item>
    <item>
      <title>VirtualBox</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/softwares/virtualbox/</link>
      <pubDate>Mon, 11 Nov 2024 04:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/virtualization/softwares/virtualbox/</guid>
      <description>가상화 소프트웨어로, 물리적 컴퓨터에서 여러 가상 머신(VM)을 실행할 수 있게 해주는 도구</description>
    </item>
    <item>
      <title>AWS</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-providers/aws/</link>
      <pubDate>Sun, 10 Nov 2024 15:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-providers/aws/</guid>
      <description>AWS(Amazon Web Services)는 Amazon이 제공하는 클라우드 컴퓨팅 플랫폼으로, 2006년에 시작되어 현재 전 세계적으로 가장 포괄적이고 널리 채택된 클라우드 플랫폼이다.</description>
    </item>
    <item>
      <title>Cloud Providers</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-providers/</link>
      <pubDate>Sun, 10 Nov 2024 10:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-providers/</guid>
      <description>네이버 클라우드 플랫폼(NCP)과 AWS, Azure, Google Cloud Platform(GCP)의 주요 서비스를 비교하여 설명</description>
    </item>
    <item>
      <title>온프레미스(On-Premise)</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-vs-on-premise/on-premise/</link>
      <pubDate>Sun, 10 Nov 2024 10:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-vs-on-premise/on-premise/</guid>
      <description>On-Premise는 기업이 자체적으로 보유한 시설이나 건물에 IT 인프라를 구축하고 운영하는 방식을 의미한다.</description>
    </item>
    <item>
      <title>Cloud</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-vs-on-premise/cloud/</link>
      <pubDate>Sun, 10 Nov 2024 06:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/cloud-vs-on-premise/cloud/</guid>
      <description>클라우드 컴퓨팅은 컴퓨팅 리소스(서버, 스토리지, 데이터베이스, 네트워킹, 소프트웨어 등)를 인터넷을 통해 필요에 따라 제공하고 사용하는 기술</description>
    </item>
  </channel>
</rss>
