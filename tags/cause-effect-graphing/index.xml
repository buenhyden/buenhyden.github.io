<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Cause-Effect-Graphing</title><link>https://buenhyden.github.io/tags/cause-effect-graphing/</link><description>Recent content in Cause-Effect-Graphing on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 12 Dec 2024 09:58:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/cause-effect-graphing/index.xml" rel="self" type="application/rss+xml"/><item><title>Cause-Effect Graphing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/cause-effect-graphing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/cause-effect-graphing/</guid><description>
&lt;h2>원인-결과 그래프 검사(Cause-Effect Graph Testing)&lt;/h2>&lt;p>원인-결과 그래프 검사(Cause-Effect Graph Testing)는 블랙박스 테스트 기법 중 하나로, 입력 조건(원인)과 출력 결과(결과) 사이의 관계를 체계적으로 분석하고 모델링하여 효과적인 테스트 케이스를 도출하는 방법.&lt;/p>
&lt;p>원인-결과 그래프 검사는 입력 데이터 간의 관계와 출력에 미치는 영향을 그래프로 표현하여 분석하는 기법.&lt;br>
이 방법은 여러 입력 조건을 결합해서 하나 이상의 결과를 얻는 것으로, 복잡한 입력 환경을 고려할 수 있는 장점이 있다.&lt;/p>
&lt;h3>원인-결과 그래프 검사의 목적&lt;/h3>&lt;ol>
&lt;li>복잡한 입력 값들 간의 관계를 체계적으로 분석&lt;/li>
&lt;li>입력 조건에 따른 출력의 적절성 확인&lt;/li>
&lt;li>효율성이 높은 테스트 케이스 선정&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 절차&lt;/h3>&lt;ol>
&lt;li>&lt;strong>원인과 결과 식별&lt;/strong>: 요구사항 명세서, 설계서, 프로그램에서 원인(입력 조건)과 결과(출력 조건)를 찾아 식별한다.&lt;/li>
&lt;li>&lt;strong>그래프 작성&lt;/strong>: 원인과 결과를 연결하는 boolean 그래프를 작성한다. 이 그래프는 AND, OR, NOT 같은 boolean 연산자를 사용하여 원인과 결과 간의 논리적 관계를 표현한다.&lt;/li>
&lt;li>&lt;strong>제약 조건 표시&lt;/strong>: 불가능한 원인 조합 또는 결과 조합을 나타내는 제약(constraints)을 그래프에 표시한다.&lt;/li>
&lt;li>&lt;strong>의사결정 테이블 작성&lt;/strong>: 원인-결과 그래프를 의사결정 테이블(decision table)로 변환한다.&lt;/li>
&lt;li>&lt;strong>테스트 케이스 도출&lt;/strong>: 의사결정 테이블의 각 열을 테스트 케이스로 변환한다.&lt;/li>
&lt;/ol>
&lt;h3>그래프의 구성 요소&lt;/h3>&lt;p>원인-결과 그래프는 다음과 같은 기본 요소들로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>원인(Causes): 시스템에 대한 입력 조건을 나타낸다. 예를 들어, 로그인 시스템에서 &amp;lsquo;사용자 ID 입력&amp;rsquo;, &amp;lsquo;비밀번호 입력&amp;rsquo; 등이 원인이 될 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과(Effects): 시스템의 출력이나 반응을 나타낸다. &amp;lsquo;로그인 성공&amp;rsquo;, &amp;lsquo;에러 메시지 표시&amp;rsquo; 등이 결과의 예시이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>논리 연산자: 원인과 결과를 연결하는 논리적 관계를 표현한다:&lt;/p>
&lt;ul>
&lt;li>AND: 모든 조건이 만족되어야 함&lt;/li>
&lt;li>OR: 하나 이상의 조건이 만족되면 됨&lt;/li>
&lt;li>NOT: 조건의 부정&lt;/li>
&lt;li>XOR: 상호 배타적 조건&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>제약 조건: 원인들 사이의 관계를 제한하는 조건:&lt;/p>
&lt;ul>
&lt;li>배타(E): 동시에 발생할 수 없는 조건&lt;/li>
&lt;li>포함(I): 한 조건이 다른 조건을 필요로 함&lt;/li>
&lt;li>단일(O): 여러 조건 중 하나만 발생 가능&lt;/li>
&lt;li>필수(R): 반드시 발생해야 하는 조건&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프의 표기법&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>노드&lt;/strong>: 원인(입력 조건)은 그래프의 좌측에, 결과(출력 조건)는 우측에 위치시킨다. 각 노드는 1(참 또는 있음)과 0(거짓 또는 없음)의 두 가지 상태를 가진다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>연산자&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IDENTITY: 원인과 결과가 동일한 상태를 가짐을 나타낸다.&lt;/li>
&lt;li>AND: 여러 원인이 모두 참일 때 결과가 참임을 나타내다.&lt;/li>
&lt;li>OR: 하나 이상의 원인이 참일 때 결과가 참임을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>제약 심볼&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>R 제약: 한 원인이 참이면 다른 원인도 반드시 참이어야 함을 나타낸다.&lt;/li>
&lt;li>E 제약: 많아야 1개의 원인이 참일 수 있음을 나타낸다.&lt;/li>
&lt;li>O 제약: 정확히 1개의 원인만 참이어야 함을 나타낸다.&lt;/li>
&lt;li>M(Mask): 한 결과가 참이면 다른 결과는 강제로 거짓이 됨을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 장점&lt;/h3>&lt;ol>
&lt;li>입력 조건과 출력 결과 간의 관계를 시각적으로 표현하여 이해하기 쉽다.&lt;/li>
&lt;li>복잡한 입력 환경을 체계적으로 분석할 수 있다.&lt;/li>
&lt;li>효율적인 테스트 케이스를 도출할 수 있어 테스트의 품질을 향상시킬 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 한계&lt;/h3>&lt;ol>
&lt;li>대규모 시스템에서는 그래프가 복잡해질 수 있어 적용이 어려울 수 있다.&lt;/li>
&lt;li>테스트 설계자의 경험과 지식에 따라 그래프의 품질이 달라질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;/h3>&lt;p>로그인 시스템에 대한 원인-결과 그래프 검사를 예로 들어보자.&lt;/p>
&lt;p>원인(입력 조건):&lt;/p>
&lt;ul>
&lt;li>C1: 아이디 입력됨&lt;/li>
&lt;li>C2: 아이디가 DB에 존재&lt;/li>
&lt;li>C3: 비밀번호 입력됨&lt;/li>
&lt;li>C4: 비밀번호가 일치&lt;/li>
&lt;/ul>
&lt;p>결과(출력 조건):&lt;/p>
&lt;ul>
&lt;li>E1: 로그인 성공&lt;/li>
&lt;li>E2: &amp;ldquo;아이디를 입력하세요&amp;rdquo; 메시지&lt;/li>
&lt;li>E3: &amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo; 메시지&lt;/li>
&lt;li>E4: &amp;ldquo;비밀번호를 입력하세요&amp;rdquo; 메시지&lt;/li>
&lt;li>E5: &amp;ldquo;비밀번호가 일치하지 않습니다&amp;rdquo; 메시지&lt;/li>
&lt;/ul>
&lt;p>논리적 관계의 예:&lt;/p>
&lt;ul>
&lt;li>로그인 성공(E1)이 되려면: 아이디 입력(C1) AND 아이디 존재(C2) AND 비밀번호 입력(C3) AND 비밀번호 일치(C4)&lt;/li>
&lt;li>&amp;ldquo;아이디를 입력하세요&amp;rdquo;(E2) 메시지는: NOT 아이디 입력(C1)&lt;/li>
&lt;li>&amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo;(E3) 메시지는: 아이디 입력(C1) AND NOT 아이디 존재(C2)&lt;/li>
&lt;/ul>
&lt;p>제약조건의 예:&lt;/p>
&lt;ul>
&lt;li>비밀번호가 일치(C4)하려면 반드시 비밀번호가 입력(C3)되어야 함&lt;/li>
&lt;li>아이디가 존재(C2)하려면 반드시 아이디가 입력(C1)되어야 함&lt;/li>
&lt;/ul>
&lt;p>이러한 관계를 그래프로 표현하면 다음과 같은 테스트 케이스를 도출할 수 있다:&lt;/p>
&lt;p>테스트 케이스 1: 아이디 미입력&lt;/p>
&lt;ul>
&lt;li>입력: 아이디 입력하지 않음&lt;/li>
&lt;li>예상 결과: &amp;ldquo;아이디를 입력하세요&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 2: 존재하지 않는 아이디&lt;/p>
&lt;ul>
&lt;li>입력: 존재하지 않는 아이디 입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 3: 비밀번호 미입력&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디 입력, 비밀번호 미입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;비밀번호를 입력하세요&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 4: 비밀번호 불일치&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디, 잘못된 비밀번호 입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;비밀번호가 일치하지 않습니다&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 5: 로그인 성공&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디와 비밀번호 입력&lt;/li>
&lt;li>예상 결과: 로그인 성공&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>