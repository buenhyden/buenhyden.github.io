<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – TCP-IP-4-Layers</title><link>https://buenhyden.github.io/tags/tcp-ip-4-layers/</link><description>Recent content in TCP-IP-4-Layers on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 27 Sep 2024 05:58:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/tcp-ip-4-layers/index.xml" rel="self" type="application/rss+xml"/><item><title>TCP/IP 4 Layers - 1. Network Access Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-1-network-access-layer/</link><pubDate>Fri, 27 Sep 2024 05:57:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-1-network-access-layer/</guid><description>
&lt;h2>네트워크 접근 계층 (Network Access Layer)&lt;span class="hx-absolute -hx-mt-20" id="네트워크-접근-계층-network-access-layer">&lt;/span>
&lt;a href="#%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac-%ec%a0%91%ea%b7%bc-%ea%b3%84%ec%b8%b5-network-access-layer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>네트워크 접근 계층(Network Access Layer)은 TCP/IP 4계층 모델에서 가장 하위 계층으로&lt;br>
OSI 7계층 모델의 물리 계층(1계층)과 데이터 링크 계층(2계층)에 해당한다.&lt;br>
데이터를 전송 매체에 맞게 포맷팅하고 물리적 하드웨어 주소를 기반으로 데이터를 주소 지정한다.&lt;br>
&lt;img src="../tcp-ip-model-vs-osi.png" alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_." loading="lazy" />&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>주요 기능과 역할&lt;span class="hx-absolute -hx-mt-20" id="주요-기능과-역할">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5%ea%b3%bc-%ec%97%ad%ed%95%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>네트워크 접근 계층은 세 가지 핵심적인 기능을 수행한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>프레임 캡슐화&lt;br>
데이터를 전기 신호로 변환하기 전에, 상위 계층에서 받은 데이터를 프레임이라는 단위로 캡슐화한다.&lt;br>
프레임에는 출발지와 목적지의 물리 주소(MAC 주소)가 포함되어 있어, 데이터가 올바른 목적지로 전달될 수 있도록 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>오류 제어&lt;br>
전송 중에 발생할 수 있는 데이터 손상을 감지하고 수정하는 메커니즘을 제공한다.&lt;br>
체크섬(checksum)이나 순환 중복 검사(CRC)와 같은 기술을 사용하여 데이터의 무결성을 보장한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>흐름 제어&lt;br>
송신자와 수신자 사이의 데이터 전송 속도를 조절한다.&lt;br>
수신자가 처리할 수 있는 속도보다 빠르게 데이터가 전송되는 것을 방지하여 데이터 손실을 예방한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>IP 데이터그램을 물리적 네트워크로 전송하는 방법을 정의한다.&lt;/li>
&lt;li>물리적 네트워크와의 인터페이스를 제공한다.&lt;/li>
&lt;li>데이터를 전송 매체에 맞게 포맷팅하고 물리적 하드웨어 주소를 기반으로 데이터를 주소 지정한다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위&lt;span class="hx-absolute -hx-mt-20" id="데이터-단위">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%8b%a8%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>단위: 프레임(Frame)&lt;/li>
&lt;li>구조: 프레임 헤더 + 패킷 + 프레임 트레일러&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[프레임 헤더(14바이트)] [IP 패킷] [FCS(4바이트)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">┌──────────────┬──────────────┬────────────┬──────────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ 목적지 MAC │ 출발지 MAC │ 타입/길이 │ 데이터 │ FCS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ (6바이트) │ (6바이트) │ (2바이트) │ │ (4바이트)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└──────────────┴──────────────┴────────────┴──────────┘&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>데이터 전송 과정&lt;span class="hx-absolute -hx-mt-20" id="데이터-전송-과정">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%a0%84%ec%86%a1-%ea%b3%bc%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>네트워크 접근 계층에서의 데이터 전송 과정은 다음과 같이 이루어진다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>프레임 생성&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[프레임 시작 구분자] [목적지 MAC 주소] [출발지 MAC 주소] [데이터] [오류 검사] [프레임 종료 구분자]&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>물리적 주소 지정&lt;br>
MAC 주소를 사용하여 데이터의 출발지와 목적지를 지정한다.&lt;br>
MAC 주소는 네트워크 인터페이스 카드(NIC)에 고유하게 할당된 48비트 주소이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>매체 접근 제어&lt;br>
여러 장치가 동시에 네트워크를 사용하려 할 때, 충돌을 방지하기 위한 제어 메커니즘을 제공한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>네트워크 접근 계층의 중요성&lt;span class="hx-absolute -hx-mt-20" id="네트워크-접근-계층의-중요성">&lt;/span>
&lt;a href="#%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac-%ec%a0%91%ea%b7%bc-%ea%b3%84%ec%b8%b5%ec%9d%98-%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>신뢰성 보장&lt;br>
물리적 레벨에서의 오류 감지와 복구를 통해 데이터 전송의 신뢰성을 보장한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>상호운용성 제공&lt;br>
서로 다른 하드웨어와 소프트웨어 간의 통신을 가능하게 하는 표준화된 인터페이스를 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>성능 최적화&lt;br>
네트워크 리소스의 효율적인 사용을 위한 다양한 최적화 메커니즘을 제공한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>네트워크 접근 계층은 TCP/IP 프로토콜 스택의 기반이 되는 중요한 계층으로, 상위 계층의 모든 통신이 이 계층을 통해 이루어진다.&lt;br>
따라서 이 계층의 효율적인 동작은 전체 네트워크의 성능과 안정성에 직접적인 영향을 미친다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>TCP/IP 4계층 - 2. Internet Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-2-internet-layer/</link><pubDate>Fri, 27 Sep 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-2-internet-layer/</guid><description>
&lt;h2>Internet Layer&lt;span class="hx-absolute -hx-mt-20" id="internet-layer">&lt;/span>
&lt;a href="#internet-layer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 계층은 TCP/IP 프로토콜 스택에서 네트워크 간의 통신을 담당하는 핵심 계층이다.&lt;br>
OSI 7계층 모델의 네트워크 계층(3계층)에 해당하며, 이 계층은 네트워크 간 데이터 전송을 담당하며, 데이터 패킷이 출발지에서 목적지까지 효율적으로 전달되도록 라우팅과 주소 지정(Addressing)을 수행한다.&lt;br>
&lt;img src="../tcp-ip-model-vs-osi.png" alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_." loading="lazy" />&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>Internet Layer의 주요 역할&lt;span class="hx-absolute -hx-mt-20" id="internet-layer의-주요-역할">&lt;/span>
&lt;a href="#internet-layer%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%97%ad%ed%95%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>패킷 전달 및 라우팅&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>데이터 패킷을 발신지에서 목적지로 전달하며, 중간 네트워크 장치(예: 라우터)를 통해 최적 경로를 선택한다.&lt;/li>
&lt;li>네트워크 간 경로를 설정하고, 데이터가 올바른 목적지에 도달하도록 보장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>주소 지정(Addressing)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IP 주소를 사용하여 발신지와 목적지를 식별한다.&lt;/li>
&lt;li>논리적 주소 체계를 활용하여 서로 다른 네트워크 간 통신을 가능하게 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>패킷 캡슐화 및 디캡슐화&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>상위 계층(전송 계층)에서 받은 데이터를 IP 패킷으로 캡슐화하여 전송한다.&lt;/li>
&lt;li>수신 측에서는 IP 패킷을 디캡슐화하여 상위 계층으로 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>프로토콜 관리&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>다양한 프로토콜(IP, ARP, ICMP 등)을 통해 데이터 전송 및 네트워크 제어를 수행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Internet Layer의 특징&lt;span class="hx-absolute -hx-mt-20" id="internet-layer의-특징">&lt;/span>
&lt;a href="#internet-layer%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>비연결형 서비스&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IP는 비연결형 프로토콜로, 데이터를 송신하기 전에 연결을 설정하지 않는다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>라우팅 기능&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>여러 네트워크 간 경로를 설정하고 최적화를 수행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>독립적인 전송&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>각 패킷은 독립적으로 처리되며, 목적지에 도달할 때 순서가 바뀔 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>확장성&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>인터넷 규모의 대규모 네트워크 환경에서도 효율적으로 작동하도록 설계되었다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Internet Layer의 데이터 단위&lt;span class="hx-absolute -hx-mt-20" id="internet-layer의-데이터-단위">&lt;/span>
&lt;a href="#internet-layer%ec%9d%98-%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%8b%a8%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>단위: 패킷(Packet)&lt;/li>
&lt;li>구조: IP 헤더 + 전송 계층 세그먼트/데이터그램&lt;br>
상위 계층(전송 계층)에서 받은 세그먼트를 IP 헤더와 함께 캡슐화하여 패킷으로 만든다.&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[IP 헤더(20바이트)] [TCP/UDP 세그먼트]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">┌────┬────┬────────┬──────┬────┬────────┬──────────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│Ver │IHL │ ToS │길이 │ID │플래그 │ TTL │ …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│(4) │(4) │ (8) │(16) │(16)│ (16) │ (8) │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└────┴────┴────────┴──────┴────┴────────┴──────────┘&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Internet Layer의 한계&lt;span class="hx-absolute -hx-mt-20" id="internet-layer의-한계">&lt;/span>
&lt;a href="#internet-layer%ec%9d%98-%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>신뢰성 부족: 데이터 전송의 신뢰성을 보장하지 않으며, 패킷 손실이나 순서 변경이 발생할 수 있다.&lt;/li>
&lt;li>오류 복구 부재: 오류 검출 및 복구는 상위 계층(전송 계층)에서 처리해야 한다.&lt;/li>
&lt;/ul>
&lt;h3>Internet Layer의 중요성&lt;span class="hx-absolute -hx-mt-20" id="internet-layer의-중요성">&lt;/span>
&lt;a href="#internet-layer%ec%9d%98-%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Internet Layer는 네트워크 간 데이터를 효율적으로 전달하고 글로벌 인터넷 연결성을 보장하는 핵심 계층이다.&lt;br>
IP와 같은 프로토콜은 인터넷 통신의 기반을 제공하며, 라우팅 및 주소 지정 기능은 현대 네트워크 시스템에서 필수적이다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>TCP/IP 4계층 - 3. Transport Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-3-transport-layer/</link><pubDate>Fri, 27 Sep 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-3-transport-layer/</guid><description>
&lt;h2>Transport Layer&lt;span class="hx-absolute -hx-mt-20" id="transport-layer">&lt;/span>
&lt;a href="#transport-layer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>전송 계층은 서로 다른 호스트에서 동작하는 애플리케이션 프로세스 간의 논리적 통신을 제공한다.&lt;br>
이 계층은 애플리케이션 계층과 인터넷 계층 사이에 위치하여 두 계층을 이어주는 역할을 수행하며, 데이터가 목적지 애플리케이션까지 안전하게 전달되도록 한다.&lt;br>
&lt;img src="../tcp-ip-model-vs-osi.png" alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_." loading="lazy" />&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>주요 기능&lt;span class="hx-absolute -hx-mt-20" id="주요-기능">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터 분할 및 재조립: 애플리케이션 계층에서 받은 데이터를 세그먼트로 분할하고, 수신 측에서 다시 조립한다.&lt;/li>
&lt;li>포트 번호 관리: 애플리케이션을 구분하기 위해 포트 번호를 사용한다.&lt;/li>
&lt;li>연결 제어: TCP의 경우 연결 지향적 통신을 제공한다.&lt;/li>
&lt;li>신뢰성 있는 데이터 전송: TCP는 데이터의 정확한 전달과 순서를 보장한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>종단 간 통신: 전송 계층 프로토콜은 네트워크 라우터가 아닌 종단 시스템에서 구현된다.&lt;/li>
&lt;li>다중화와 역다중화: 여러 애플리케이션의 데이터를 하나의 연결로 전송하고, 수신 측에서 다시 분리한다.&lt;/li>
&lt;li>흐름 제어와 혼잡 제어: TCP의 경우 이러한 기능을 제공하여 네트워크의 효율성을 높인다.&lt;/li>
&lt;/ol>
&lt;h3>데이터 단위&lt;span class="hx-absolute -hx-mt-20" id="데이터-단위">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%8b%a8%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>단위: 세그먼트(TCP) / 데이터그램(UDP)&lt;/li>
&lt;li>구조: TCP/UDP 헤더 + 응용 계층 메시지&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[TCP 헤더(20바이트)] [응용 계층 데이터]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">┌──────────┬──────────┬────────┬────────┬──────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│출발지 포트│목적지 포트│시퀀스 번호│확인 응답│윈도우│ …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ (16비트) │ (16비트) │(32비트) │(32비트)│(16비트)│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└──────────┴──────────┴────────┴────────┴──────┘&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>전송 계층의 서비스 품질&lt;span class="hx-absolute -hx-mt-20" id="전송-계층의-서비스-품질">&lt;/span>
&lt;a href="#%ec%a0%84%ec%86%a1-%ea%b3%84%ec%b8%b5%ec%9d%98-%ec%84%9c%eb%b9%84%ec%8a%a4-%ed%92%88%ec%a7%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>전송 계층은 다양한 서비스 품질(QoS) 요구사항을 지원한다:&lt;/p>
&lt;ol>
&lt;li>신뢰성이 필요한 경우: TCP 사용
&lt;ul>
&lt;li>파일 전송&lt;/li>
&lt;li>이메일&lt;/li>
&lt;li>웹 브라우징&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>속도가 중요한 경우: UDP 사용
&lt;ul>
&lt;li>실시간 스트리밍&lt;/li>
&lt;li>온라인 게임&lt;/li>
&lt;li>VoIP 통화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>TCP/IP 4계층 - 4. Application Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-4-application-layer/</link><pubDate>Fri, 27 Sep 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-4-application-layer/</guid><description>
&lt;h2>Application Layer&lt;span class="hx-absolute -hx-mt-20" id="application-layer">&lt;/span>
&lt;a href="#application-layer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>TCP/IP 프로토콜 스택에서 가장 상위 계층으로, 사용자와 가장 가까운 계층이다.&lt;br>
이메일, 웹 서핑, 파일 전송 등의 서비스를 위한 프로토콜들이 모여 있는 계층이다.&lt;/p>
&lt;p>
&lt;img src="../tcp-ip-model-vs-osi.png" alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_." loading="lazy" />&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>주요 기능&lt;span class="hx-absolute -hx-mt-20" id="주요-기능">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>사용자가 네트워크 서비스를 이용할 수 있도록 인터페이스를 제공한다.&lt;/li>
&lt;li>응용 프로그램 간의 데이터 통신을 위한 프로토콜을 정의한다.&lt;/li>
&lt;li>하위 계층의 서비스에 접근할 수 있는 기능을 제공한다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위&lt;span class="hx-absolute -hx-mt-20" id="데이터-단위">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%eb%8b%a8%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>단위: 메시지(Message) / 데이터(Data)&lt;/li>
&lt;li>구조: 순수한 애플리케이션 데이터&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>클라이언트-서버 모델이나 P2P 구조로 구현될 수 있다.&lt;/li>
&lt;li>소켓을 통해 전송 계층과 통신한다.&lt;/li>
&lt;li>OSI 7계층 모델의 세션 계층, 표현 계층, 응용 계층을 포함한다.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Application Layer에서 소켓(Socket)의 역할:&lt;/p>
&lt;ol>
&lt;li>인터페이스 제공: 소켓은 Application Layer와 Transport Layer 사이의 인터페이스 역할을 한다. 이를 통해 애플리케이션이 네트워크 통신을 할 수 있게 한다.&lt;/li>
&lt;li>데이터 전송 제어: 프로세스에서 전달하는 데이터와 프로세스로 전달되는 데이터를 제어한다.&lt;/li>
&lt;li>API 제공: 소켓은 프로세스가 메시지를 송수신할 수 있는 API나 함수를 제공한다.&lt;/li>
&lt;li>운영체제와의 연결: 애플리케이션에서 생성된 메시지를 운영체제의 커널로 전달하는 역할을 한다.&lt;/li>
&lt;li>프로토콜 사용 지원: 개발자가 TCP나 UDP와 같은 전송 프로토콜을 간접적으로 사용할 수 있게 한다.&lt;/li>
&lt;li>프로세스 간 통신 지원: 소켓을 통해 서로 다른 호스트의 프로세스들이 통신할 수 있다.&lt;br>
소켓은 애플리케이션 개발자가 네트워크 통신을 구현할 때 필수적인 요소로, 복잡한 하위 계층의 동작을 추상화하여 사용하기 쉬운 인터페이스를 제공한다.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h3>주소 체계&lt;span class="hx-absolute -hx-mt-20" id="주소-체계">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%86%8c-%ec%b2%b4%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>port (포트)&lt;br>
네트워크에서 서로 다른 프로세스들이 통신할 수 있도록 구분해주는 논리적인 접속 위치.&lt;br>
각 포트는 16 비트 숫자로 표현되며, 범위는 0~65535&lt;br>
역할&lt;/p>
&lt;ul>
&lt;li>데이터 트래픽 분류: 포트는 컴퓨터가 받는 네트워크 트래픽을 종류별로 구분하는 데 도움을 준다.&lt;/li>
&lt;li>서비스 식별: 각 포트는 특정 서비스나 애플리케이션과 연결되어 있어, 데이터가 어떤 서비스로 전달되어야 하는 식별&lt;/li>
&lt;li>다중화 (Multiplexing): 하나의 네트워크 연결을 통해 여러 서비스나 애플리케이션이 동시에 통신할 수 있게 됨.&lt;br>
기능&lt;/li>
&lt;li>통신 엔드포인트 제공: 네트워크 상의 특정 서비스나 프로세스와의 통신을 위한 엔드포인트&lt;/li>
&lt;li>데이터 라우팅: 들어오는 데이터를 올바른 애플리케이션이나 서비스로 전달&lt;/li>
&lt;li>프로토콜 구분: 각 포트는 특정 네트워크 프로토콜 (예: HTTP(80), HTTPS(443), FTP(21), SMTP(25)) 과 연관되어 있어 프로토콜 별 통신을 가능하게 함.&lt;/li>
&lt;li>동시 연결 관리: 하나의 IP 주소에서 여러 개의 네트워크 연결을 동시에 관리할 수 있게 한다.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>포트 번호를 사용하여 특정 애플리케이션이나 프로세스를 식별한다.&lt;/li>
&lt;/ul>
&lt;p>Application Layer는 사용자가 직접 상호작용하는 계층으로, 다양한 네트워크 서비스를 제공하고 하위 계층과의 통신을 담당하는 중요한 역할을 수행한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>