<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Application-Layer-Protocols on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/application-layer-protocols/</link>
    <description>Recent content in Application-Layer-Protocols on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 31 Jan 2025 13:34:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/application-layer-protocols/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MIME(Multipurpose Internet Mail Extensions)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/mime/</link>
      <pubDate>Fri, 31 Jan 2025 13:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/mime/</guid>
      <description>인터넷에서 다양한 형식의 데이터를 전송할 수 있게 해주는 인터넷 표준이다.</description>
    </item>
    <item>
      <title>DKIM (DomainKeys Identified Mail)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dkim/</link>
      <pubDate>Sat, 14 Dec 2024 09:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dkim/</guid>
      <description>DKIM은 이메일 인증을 위한 중요한 기술로, 이메일이 전송 과정에서 변조되지 않았으며 실제로 발신자가 주장하는 도메인에서 보낸 것임을 확인할 수 있게 해준다.  디지털 서명을 사용하여 이메일의 무결성과 출처를 검증하는 방식으로 작동한다.</description>
    </item>
    <item>
      <title>DMARC (Domain-based Message Authentication, Reporting, and Conformance)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dmarc/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dmarc/</guid>
      <description>DMARC는 이메일 인증 프로토콜로, SPF(Sender Policy Framework)와 DKIM(DomainKeys Identified Mail)을 기반으로 작동한다.</description>
    </item>
    <item>
      <title>Domain Keys</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/domain-keys/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/domain-keys/</guid>
      <description>도메인 키(DomainKeys)는 이메일 발신자의 도메인을 확인하고 메시지 무결성을 보장하기 위해 설계된 이메일 인증 방법</description>
    </item>
    <item>
      <title>Sender Policy Framework (SPF)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/spf/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/spf/</guid>
      <description>SPF(Sender Policy Framework)는 이메일 스푸핑과 스팸을 방지하기 위해 설계된 이메일 인증 방법으로 이메일 도메인 소유자가 어떤 메일 서버가 해당 도메인에서 이메일을 보낼 수 있는 권한이 있는지 지정할 수 있게 해주는 중요한 보안 메커니즘이다.</description>
    </item>
    <item>
      <title>이메일 필터링 방식: White Listing vs. Grey Listing</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/white-listing-vs-grey-listing/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/white-listing-vs-grey-listing/</guid>
      <description>Whitelisting과 Greylisting은 이메일 보안 및 스팸 방지를 위해 사용되는 두 가지 주요 접근 방식</description>
    </item>
    <item>
      <title>AMQP</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/amqp/</link>
      <pubDate>Sun, 20 Oct 2024 05:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/amqp/</guid>
      <description>AMQP(Advanced Message Queuing Protocol)는 메시지 지향 미들웨어를 위한 개방형 표준 응용 계층 프로토콜이다.</description>
    </item>
    <item>
      <title>MQTT</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/mqtt/</link>
      <pubDate>Sun, 20 Oct 2024 04:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/mqtt/</guid>
      <description>MQTT(Message Queuing Telemetry Transport)는 IoT 환경에서 널리 사용되는 경량 메시징 프로토콜이다.</description>
    </item>
    <item>
      <title>멱등성 (Idempotency)과 안전한 메서드 (Safe Methods)의 비교</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/idempotency-and-safe-methods/</link>
      <pubDate>Sat, 19 Oct 2024 00:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/idempotency-and-safe-methods/</guid>
      <description>멱등성과 안전한 메서드는 HTTP 메서드의 중요한 특성으로, 서버의 상태 변화와 관련이 있다.</description>
    </item>
    <item>
      <title>안전한 메서드 (Safe Methods)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/safe-methods/</link>
      <pubDate>Fri, 18 Oct 2024 16:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/safe-methods/</guid>
      <description>서버의 상태를 변경하지 않는 HTTP 메서드</description>
    </item>
    <item>
      <title>Cookies</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cookies/</link>
      <pubDate>Fri, 18 Oct 2024 07:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cookies/</guid>
      <description>웹사이트가 사용자의 브라우저에 저장하는 작은 텍스트 파일</description>
    </item>
    <item>
      <title>HTTP Cache</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cache/</link>
      <pubDate>Fri, 18 Oct 2024 07:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cache/</guid>
      <description>웹 브라우저나 서버에서 데이터를 임시 저장하는 기술</description>
    </item>
    <item>
      <title>HTTP Methods</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/</link>
      <pubDate>Fri, 18 Oct 2024 07:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/</guid>
      <description>클라이언트가 서버에 특정 작업을 요청하기 위해 사용하는 방식</description>
    </item>
    <item>
      <title>HTTP Status Code</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/status-code/</link>
      <pubDate>Fri, 18 Oct 2024 07:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/status-code/</guid>
      <description>서버가 클라이언트의 요청에 대한 응답 상태를 나타내는 3자리 숫자.</description>
    </item>
    <item>
      <title>HTTP (HyperText Transfer Protocol)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/</link>
      <pubDate>Fri, 18 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/</guid>
      <description>웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다</description>
    </item>
  </channel>
</rss>
