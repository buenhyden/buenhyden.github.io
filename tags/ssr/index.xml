<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – SSR</title><link>https://buenhyden.github.io/tags/ssr/</link><description>Recent content in SSR on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 03 Nov 2024 12:28:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/ssr/index.xml" rel="self" type="application/rss+xml"/><item><title>CSR vs SSR</title><link>https://buenhyden.github.io/til/2024/11/csr-vs-ssr/</link><pubDate>Sun, 03 Nov 2024 12:28:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/csr-vs-ssr/</guid><description>
&lt;h2>CSR (Client Side Rendering) Vs SSR (Server Side Rendering)&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Client Side Rendering (CSR)&lt;/th>
&lt;th>Server Side Rendering (SSR)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>렌더링 방식&lt;/td>
&lt;td>브라우저에서 JavaScript를 실행하여 콘텐츠를 렌더링&lt;/td>
&lt;td>서버에서 HTML을 생성하여 클라이언트에 전달&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>초기 로딩 시간&lt;/td>
&lt;td>상대적으로 긺 (JavaScript 번들을 모두 다운로드하고 실행해야 함)&lt;/td>
&lt;td>상대적으로 빠름 (이미 렌더링된 HTML을 받음)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>초기 컨텐츠 표시&lt;/td>
&lt;td>빈 페이지 후 로딩&lt;/td>
&lt;td>즉시 컨텐츠 표시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 부하&lt;/td>
&lt;td>낮음 (정적 파일만 제공)&lt;/td>
&lt;td>높음 (매 요청마다 HTML 생성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SEO 친화성&lt;/td>
&lt;td>낮음 (JavaScript 실행 전까지 빈 HTML)&lt;/td>
&lt;td>높음 (완성된 HTML이 검색 엔진에 제공)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상호작용성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>후속 페이지 로딩&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>각 요청마다 서버 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Time to First Paint (TFP)&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>빠름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Time to Interactive (TTI)&lt;/td>
&lt;td>JavaScript 로드 후 빠름&lt;/td>
&lt;td>JavaScript 로드 필요시 추가 시간 소요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 사용량&lt;/td>
&lt;td>클라이언트 측 높음&lt;/td>
&lt;td>서버 측 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 경험&lt;/td>
&lt;td>초기 로딩 후 빠른 페이지 전환&lt;/td>
&lt;td>페이지 전환마다 서버 요청 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱 전략&lt;/td>
&lt;td>JavaScript 파일과 정적 자원 캐싱 용이&lt;/td>
&lt;td>동적 HTML 캐싱이 복잡할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개발 복잡도&lt;/td>
&lt;td>상대적으로 단순 (단일 JavaScript 애플리케이션)&lt;/td>
&lt;td>상대적으로 복잡 (서버와 클라이언트 로직 모두 관리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>중요 로직이 클라이언트에 노출될 수 있음&lt;/td>
&lt;td>중요 로직을 서버에서 처리하여 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오프라인 기능&lt;/td>
&lt;td>구현 용이&lt;/td>
&lt;td>제한적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 업데이트&lt;/td>
&lt;td>실시간 업데이트 용이&lt;/td>
&lt;td>페이지 새로고침 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>초기에 높음, 이후 낮음&lt;/td>
&lt;td>지속적으로 중간 수준&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 인프라 요구사항&lt;/td>
&lt;td>낮음 (정적 호스팅 가능)&lt;/td>
&lt;td>높음 (동적 서버 필요)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리소스 사용&lt;/td>
&lt;td>클라이언트 리소스 많이 사용&lt;/td>
&lt;td>서버 리소스 많이 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 업데이트&lt;/td>
&lt;td>실시간 업데이트 용이&lt;/td>
&lt;td>페이지 새로고침 필요할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 사용 사례&lt;/td>
&lt;td>대시보드, SPA, 관리자 패널&lt;/td>
&lt;td>블로그, 뉴스 사이트, 전자상거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프레임워크 예시&lt;/td>
&lt;td>React, Vue, Angular&lt;/td>
&lt;td>Next.js, Nuxt.js, Angular Universal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수성&lt;/td>
&lt;td>프론트엔드 중심 유지보수&lt;/td>
&lt;td>프론트엔드와 백엔드 모두 유지보수 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 방식은 각각의 장단점이 있으며, 최근에는 이들의 장점을 결합한 하이브리드 렌더링 방식(예: Next.js의 정적 생성과 서버 사이드 렌더링 조합)이 많이 사용되고 있다.&lt;br>
프로젝트의 요구사항과 특성에 따라 적절한 렌더링 방식을 선택하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>SSR</title><link>https://buenhyden.github.io/posts/frontend/ssr/</link><pubDate>Tue, 29 Oct 2024 03:44:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/frontend/ssr/</guid><description>
&lt;h2>SSR(Server-Side Rendering)&lt;/h2>&lt;p>웹 페이지의 초기 로드 시 서버에서 페이지를 렌더링하여 클라이언트에게 전달하는 웹 렌더링 기술.&lt;br>
이 방식은 전통적인 웹 개발 방식으로, 최근 단일 페이지 애플리케이션(SPA)의 등장으로 CSR(Client-Side Rendering)과 대비되어 주목받고 있다.&lt;/p>
&lt;h3>작동 원리&lt;/h3>&lt;ol>
&lt;li>사용자가 웹사이트에 접속하여 페이지를 요청한다.&lt;/li>
&lt;li>서버는 요청받은 페이지에 대한 HTML을 생성한다.&lt;/li>
&lt;li>서버는 필요한 데이터를 조회하고 이를 HTML에 포함시킨다.&lt;/li>
&lt;li>완성된 HTML, CSS, JavaScript 파일을 클라이언트(브라우저)로 전송한다.&lt;/li>
&lt;li>브라우저는 받은 HTML을 즉시 렌더링하여 사용자에게 보여준다.&lt;/li>
&lt;li>이후 JavaScript가 로드되면 페이지가 완전히 인터랙티브해진다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>초기 로딩 속도 개선&lt;/strong>: 서버에서 렌더링된 HTML을 바로 받아 볼 수 있어 초기 페이지 로드 시간이 빠르다.&lt;/li>
&lt;li>&lt;strong>검색 엔진 최적화(SEO) 향상&lt;/strong>: 검색 엔진 크롤러가 완성된 HTML 콘텐츠를 쉽게 읽을 수 있어 SEO에 유리하다.&lt;/li>
&lt;li>&lt;strong>보안성 향상&lt;/strong>: 서버에서 렌더링이 이루어지므로 클라이언트 측 보안 취약점을 줄일 수 있다.&lt;/li>
&lt;li>&lt;strong>성능 개선&lt;/strong>: 클라이언트의 하드웨어 성능에 덜 의존적이다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>서버 부하 증가&lt;/strong>: 모든 요청마다 서버에서 렌더링을 수행하므로 서버에 부담이 될 수 있다.&lt;/li>
&lt;li>&lt;strong>개발 복잡도 증가&lt;/strong>: 서버와 클라이언트 양쪽을 고려한 개발이 필요하여 복잡도가 높아진다.&lt;/li>
&lt;li>&lt;strong>전체 페이지 리로드&lt;/strong>: 페이지 전환 시 전체 페이지를 다시 로드해야 할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;p>SSR은 다음과 같은 상황에서 주로 사용된다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>콘텐츠 중심 웹사이트&lt;/strong>: 블로그, 뉴스 사이트, 정보 제공 플랫폼 등.&lt;/li>
&lt;li>&lt;strong>SEO가 중요한 웹사이트&lt;/strong>: 검색 엔진을 통한 유입이 중요한 경우.&lt;/li>
&lt;li>&lt;strong>초기 로딩 속도가 중요한 경우&lt;/strong>: 사용자의 첫 인상이 중요한 서비스.&lt;/li>
&lt;li>&lt;strong>동적 콘텐츠가 많은 웹사이트&lt;/strong>: 실시간으로 변경되는 데이터를 표시해야 하는 경우.&lt;/li>
&lt;/ol>
&lt;h3>구현 방법&lt;/h3>&lt;p>React와 같은 프레임워크에서 SSR을 구현하기 위해서는 서버 측에서 ReactDOMServer.renderToString() 메서드를 사용하여 컴포넌트를 HTML 문자열로 변환한다.&lt;br>
이후 클라이언트 측에서는 React.hydrateRoot() 메서드를 사용하여 서버에서 렌더링된 HTML에 이벤트 리스너를 연결하고 완전한 인터랙티브 앱으로 만든다.&lt;/p>
&lt;p>SSR을 효과적으로 사용하기 위한 전략들:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>하이브리드 렌더링:&lt;br>
정적 콘텐츠와 동적 콘텐츠를 구분하여 처리합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Next.js의 하이브리드 렌더링 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">HomePage&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">staticData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">dynamicData&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">setData&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dynamicData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 클라이언트에서 실시간 데이터 업데이트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">useEffect&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">connectToWebSocket&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;update&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newData&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">setData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">newData&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="p">[]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">StaticContent&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">staticData&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">DynamicContent&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>스트리밍 SSR:&lt;br>
큰 페이지를 작은 청크로 나누어 점진적으로 전송합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// React 18의 Streaming SSR 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Suspense&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;react&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">Page&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">div&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Header&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Suspense&lt;/span> &lt;span class="nx">fallback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">LoadingMain&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">MainContent&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Suspense&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Suspense&lt;/span> &lt;span class="nx">fallback&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">LoadingComments&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">Comments&lt;/span> &lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/Suspense&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/div&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>성능 최적화:&lt;br>
적절한 캐싱 전략과 코드 분할을 통해 서버 성능을 최적화합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Redis를 사용한 분산 캐싱 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">Redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ioredis&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Redis&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">getPageData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pageId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">cachedData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`page:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">pageId&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">cachedData&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cachedData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetchPageData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">pageId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">redis&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`page:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">pageId&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3600&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>