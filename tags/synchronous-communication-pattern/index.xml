<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Synchronous-Communication-Pattern :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/synchronous-communication-pattern.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Sat, 28 Dec 2024 12:41:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/synchronous-communication-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Communication Patterns</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication.html</link><pubDate>Sat, 28 Dec 2024 12:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication.html</guid><description>통신 패턴들은 마이크로서비스 아키텍처에서 서비스 간의 효율적인 통신을 가능하게 하며, 시스템의 확장성, 유연성, 성능을 향상시키는 데 중요한 역할을 한다.</description></item><item><title>Event-Driven Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/event-driven-pattern.html</link><pubDate>Sat, 28 Dec 2024 10:05:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/event-driven-pattern.html</guid><description>이 패턴은 시스템의 상태 변화를 이벤트로 표현하고, 이를 기반으로 서비스 간 통신을 구현하는 방식이다.</description></item><item><title>Synchronous Communication Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/synchronous-communication-pattern.html</link><pubDate>Sat, 28 Dec 2024 03:56:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/synchronous-communication-pattern.html</guid><description>Synchronous Communication Pattern은 한 서비스가 다른 서비스에 요청을 보내고 응답을 받을 때까지 기다리는 방식이다.</description></item></channel></rss>