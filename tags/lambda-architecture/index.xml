<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Lambda-Architecture on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/lambda-architecture/</link>
    <description>Recent content in Lambda-Architecture on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Jul 2025 10:13:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/lambda-architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lambda Architecture</title>
      <link>https://buenhyden.github.io/posts/software-engineering/design-and-architecture/architecture-styles-and-patterns/architecture-styles/data-centric/lambda-architecture/</link>
      <pubDate>Sun, 06 Jul 2025 10:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/design-and-architecture/architecture-styles-and-patterns/architecture-styles/data-centric/lambda-architecture/</guid>
      <description>Lambda Architecture 는 배치 처리 (Batch Processing) 와 실시간 스트림 처리 (Real-time Stream Processing) 를 결합하여 대용량 데이터를 효과적으로 처리하는 하이브리드 아키텍처 패턴이다. 배치 레이어 (Batch Layer), 스피드 레이어 (Speed Layer), 서빙 레이어 (Serving Layer) 세 계층으로 구성되어 높은 처리량과 낮은 지연시간을 동시에 제공한다.</description>
    </item>
  </channel>
</rss>
