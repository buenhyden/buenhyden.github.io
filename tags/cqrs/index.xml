<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CQRS on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/cqrs/</link>
    <description>Recent content in CQRS on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2024 10:06:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/cqrs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CQRS</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-design-and-architecture/architecture-patterns/application-architecture-patterns/data-management-patterns/cqrs/</link>
      <pubDate>Sat, 16 Nov 2024 10:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-design-and-architecture/architecture-patterns/application-architecture-patterns/data-management-patterns/cqrs/</guid>
      <description>CQRS는 쓰기(명령)와 읽기(조회)를 별도 모델로 분리해 각자 최적화·독립적 확장을 가능하게 하는 아키텍처 패턴이다. 읽기 전용 뷰·비대칭 스케일링에 유리하고 보안/검증 경계도 선명해진다. 다만 복잡성과 동기화 비용이 늘며, ES와의 결합은 선택 사항이다.</description>
    </item>
  </channel>
</rss>
