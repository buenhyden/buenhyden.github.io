<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thread :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/thread.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Mon, 14 Oct 2024 08:30:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/thread/index.xml" rel="self" type="application/rss+xml"/><item><title>Process vs Thread</title><link>https://buenhyden.github.io/til/2024/10/process-vs-thread.html</link><pubDate>Mon, 14 Oct 2024 08:30:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/10/process-vs-thread.html</guid><description>Process란 실행 중인 프로그램의 인스턴스를 이야기하며, Thread란 프로세스 내에서 실행되는 더 작은 실행 단위를 말한다.</description></item><item><title>Process vs Thread vs Coroutine</title><link>https://buenhyden.github.io/til/2024/10/process-vs-thread-vs-coroutine.html</link><pubDate>Mon, 14 Oct 2024 08:30:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/10/process-vs-thread-vs-coroutine.html</guid><description>Process란 실행 중인 프로그램의 인스턴스를 이야기하며, Thread란 프로세스 내에서 실행되는 더 작은 실행 단위를 말한다.</description></item><item><title>Thread</title><link>https://buenhyden.github.io/posts/computer-system/system-execution-models/threads-and-multithreading/thread.html</link><pubDate>Thu, 26 Sep 2024 23:32:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/computer-system/system-execution-models/threads-and-multithreading/thread.html</guid><description>Thread는 프로그램 실행의 기본 단위로, 프로세스 내에서 실행되는 독립적인 작업 흐름을 의미한다.</description></item></channel></rss>