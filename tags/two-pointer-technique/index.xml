<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Two-Pointer-Technique on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/two-pointer-technique/</link>
    <description>Recent content in Two-Pointer-Technique on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Jan 2025 00:46:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/two-pointer-technique/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Two Pointer Technique</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/two-pointer-technique/</link>
      <pubDate>Fri, 24 Jan 2025 00:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/two-pointer-technique/</guid>
      <description>&lt;h2 id=&#34;투-포인터-기법-two-pointer-technique&#34;&gt;투 포인터 기법 (Two Pointer Technique)&lt;/h2&gt;
&lt;p&gt;투 포인터 기법은 배열이나 문자열과 같은 선형 데이터 구조에서 효율적으로 문제를 해결하기 위한 알고리즘 패러다임이다. 이 기법은 두 개의 포인터를 사용하여 데이터를 순회하면서 시간 복잡도를 줄이는 방법으로, 특히 검색, 정렬, 부분 배열 연산 등에서 자주 활용된다.&lt;/p&gt;
&lt;p&gt;투 포인터 기법은 배열, 문자열, 연결 리스트와 같은 선형 데이터 구조에서 효율적인 알고리즘을 설계하기 위한 강력한 도구이다.&lt;br&gt;
이 기법은 중첩된 반복문을 사용하는 O(n²) 해법을 O(n) 시간 복잡도로 최적화할 수 있게 해준다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two Pointer Technique vs. Sliding Window Technique</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/two-pointer-technique/two-pointer-technique-vs-sliding-window-technique/</link>
      <pubDate>Fri, 24 Jan 2025 00:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/two-pointer-technique/two-pointer-technique-vs-sliding-window-technique/</guid>
      <description>&lt;h2 id=&#34;투-포인터two-pointer와-슬라이딩-윈도우sliding-window&#34;&gt;투 포인터(Two Pointer)와 슬라이딩 윈도우(Sliding Window)&lt;/h2&gt;
&lt;p&gt;투 포인터와 슬라이딩 윈도우 기법은 모두 배열이나 문자열과 같은 선형 데이터 구조에서 효율적인 탐색과 연산을 가능하게 하는 강력한 알고리즘 패러다임이다.&lt;br&gt;
이 두 기법은 중첩된 반복문을 사용하는 O(n²) 해법을 O(n) 시간 복잡도로 최적화할 수 있게 해주어, 성능이 중요한 애플리케이션에서 필수적인 도구가 된다.&lt;/p&gt;
&lt;p&gt;투 포인터 기법은 더 일반적이고 유연한 접근 방식으로, 두 포인터가 독립적으로 이동할 수 있어 다양한 문제 유형에 적용 가능하다. 반면, 슬라이딩 윈도우 기법은 연속된 요소들의 집합을 효율적으로 처리하는 데 특화되어 있으며, 투 포인터의 특수한 형태로 볼 수 있다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
