<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>System-Architecture-and-Design on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/system-architecture-and-design/</link>
    <description>Recent content in System-Architecture-and-Design on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Sep 2025 04:33:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/system-architecture-and-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Containerization</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/containerization/</link>
      <pubDate>Mon, 08 Sep 2025 04:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/containerization/</guid>
      <description>컨테이너화는 애플리케이션과 의존성을 경량 이미지로 패키징해 운영체제 커널을 공유하며 격리 실행하는 기술이다. 네임스페이스·cgroups로 격리·자원제어를 수행하고, OCI 규격의 이미지·런타임·레지스트리와 Kubernetes 등 오케스트레이션, CI/CD가 결합되어 이식성·일관성·자동화된 확장성을 제공한다. 커널 공유에 따른 보안·격리 한계는 설계 시 고려해야 한다.</description>
    </item>
    <item>
      <title>Advanced Features</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/advanced-features/</link>
      <pubDate>Sun, 24 Aug 2025 04:02:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/advanced-features/</guid>
      <description></description>
    </item>
    <item>
      <title>System Architecture &amp; Design</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/</link>
      <pubDate>Fri, 22 Aug 2025 06:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/</guid>
      <description></description>
    </item>
    <item>
      <title>Container Orchestration</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/</link>
      <pubDate>Thu, 08 May 2025 04:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/</guid>
      <description>컨테이너 오케스트레이션은 컨테이너화된 워크로드의 배포, 스케줄링, 자동 스케일링, 네트워킹, 스토리지 연동 및 장애 복구를 자동화하는 플랫폼 계층이다. Kubernetes가 표준으로 자리잡았고 CRI/CNI/CSI·Gateway API 등으로 생태계와 상호운용성이 발전했다.</description>
    </item>
    <item>
      <title>Circuit Breaker</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/reliability--resilience/fault-tolerance/circuit-breaker/</link>
      <pubDate>Sun, 17 Nov 2024 10:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/reliability--resilience/fault-tolerance/circuit-breaker/</guid>
      <description>서킷 브레이커 패턴(Circuit Breaker Pattern)은 마이크로서비스 아키텍처에서 시스템의 안정성과 복원력을 향상시키기 위해 사용되는 디자인 패턴이다.</description>
    </item>
    <item>
      <title>Helm</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/helm/</link>
      <pubDate>Mon, 11 Nov 2024 06:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/helm/</guid>
      <description>쿠버네티스를 위한 패키지 관리자로, 복잡한 쿠버네티스 애플리케이션의 배포와 관리를 간소화하는 도구</description>
    </item>
  </channel>
</rss>
