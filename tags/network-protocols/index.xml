<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Network-Protocols on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/network-protocols/</link>
    <description>Recent content in Network-Protocols on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 13 Mar 2025 14:11:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/network-protocols/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Addressing</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/</link>
      <pubDate>Thu, 13 Mar 2025 14:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/</guid>
      <description>&lt;h2 id=&#34;addressing&#34;&gt;Addressing&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Diagnostics</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/diagnostics/</link>
      <pubDate>Thu, 13 Mar 2025 14:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/diagnostics/</guid>
      <description>&lt;h2 id=&#34;diagnostics&#34;&gt;Diagnostics&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>DDS</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/dds/</link>
      <pubDate>Thu, 13 Mar 2025 14:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/dds/</guid>
      <description>&lt;h2 id=&#34;dds&#34;&gt;DDS&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>DCCP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connectionless/dccp/</link>
      <pubDate>Thu, 13 Mar 2025 13:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connectionless/dccp/</guid>
      <description>&lt;h2 id=&#34;dccp&#34;&gt;DCCP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Web Service</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/</link>
      <pubDate>Thu, 13 Mar 2025 13:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/</guid>
      <description>&lt;h2 id=&#34;web-service&#34;&gt;Web Service&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>MIME</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/mime/</link>
      <pubDate>Thu, 13 Mar 2025 13:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/mime/</guid>
      <description>&lt;h2 id=&#34;mime&#34;&gt;MIME&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Exterior Routing</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/exterior-routing/</link>
      <pubDate>Mon, 30 Dec 2024 14:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/exterior-routing/</guid>
      <description>&lt;h2 id=&#34;exterior-routing&#34;&gt;Exterior Routing&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>QUIC</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connection-oriented/quic/</link>
      <pubDate>Mon, 30 Dec 2024 02:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connection-oriented/quic/</guid>
      <description>&lt;h2 id=&#34;quic&#34;&gt;QUIC&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>BGP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/exterior-routing/bgp/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/exterior-routing/bgp/</guid>
      <description>&lt;h2 id=&#34;bgp&#34;&gt;BGP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>FTP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/ftp/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/ftp/</guid>
      <description>&lt;h2 id=&#34;ftp&#34;&gt;FTP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>OSPF</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/interior-routing/ospf/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/interior-routing/ospf/</guid>
      <description>&lt;h2 id=&#34;ospf&#34;&gt;OSPF&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>RIP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/interior-routing/rip/rip/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/routing/interior-routing/rip/rip/</guid>
      <description>&lt;h2 id=&#34;rip&#34;&gt;RIP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>SCP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/scp/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/scp/</guid>
      <description>&lt;h2 id=&#34;scp&#34;&gt;SCP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>SFTP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/sftp/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/sftp/</guid>
      <description>&lt;h2 id=&#34;sftp&#34;&gt;SFTP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>TFTP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/tftp/</link>
      <pubDate>Mon, 30 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/tftp/</guid>
      <description>&lt;h2 id=&#34;tftp&#34;&gt;TFTP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>RDP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/rdp/</link>
      <pubDate>Mon, 30 Dec 2024 02:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/rdp/</guid>
      <description>&lt;h2 id=&#34;rdp&#34;&gt;RDP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>SMB</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-sharing/smb/smb/</link>
      <pubDate>Mon, 30 Dec 2024 02:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-sharing/smb/smb/</guid>
      <description>&lt;h2 id=&#34;smb&#34;&gt;SMB&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>File Transfer Protocols</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/</link>
      <pubDate>Mon, 30 Dec 2024 02:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/file-transfer/</guid>
      <description>&lt;h2 id=&#34;file-transfer-protocols&#34;&gt;File Transfer Protocols&lt;/h2&gt;
&lt;h3 id=&#34;ftp--sftp--scp--tftp&#34;&gt;FTP / SFTP / SCP / TFTP&lt;/h3&gt;
&lt;p&gt;이 프로토콜들은 모두 파일 전송을 위한 것이지만, 각각의 특성과 보안 수준, 기능의 복잡성에서 차이가 있다.&lt;br&gt;
FTP는 가장 오래되고 널리 사용되는 프로토콜이지만 보안에 취약하다.&lt;br&gt;
SFTP와 SCP는 SSH를 기반으로 하여 보안성이 높다.&lt;br&gt;
TFTP는 가장 단순한 구조로, 제한된 환경에서 사용된다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;FTP (File Transfer Protocol)&lt;/th&gt;
          &lt;th&gt;SFTP (SSH File Transfer Protocol)&lt;/th&gt;
          &lt;th&gt;SCP (Secure Copy Protocol)&lt;/th&gt;
          &lt;th&gt;TFTP (Trivial File Transfer Protocol)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OSI 7계층 위치&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TCP/IP 4계층 위치&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;기본 포트&lt;/td&gt;
          &lt;td&gt;20(데이터), 21(제어)&lt;/td&gt;
          &lt;td&gt;22&lt;/td&gt;
          &lt;td&gt;22&lt;/td&gt;
          &lt;td&gt;69&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;전송 프로토콜&lt;/td&gt;
          &lt;td&gt;TCP&lt;/td&gt;
          &lt;td&gt;TCP&lt;/td&gt;
          &lt;td&gt;TCP&lt;/td&gt;
          &lt;td&gt;UDP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;보안 특성&lt;/td&gt;
          &lt;td&gt;암호화 없음 (기본)&lt;/td&gt;
          &lt;td&gt;SSH 기반 암호화&lt;/td&gt;
          &lt;td&gt;SSH 기반 암호화&lt;/td&gt;
          &lt;td&gt;암호화 없음&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 역할&lt;/td&gt;
          &lt;td&gt;일반 파일 전송 및 관리&lt;/td&gt;
          &lt;td&gt;보안 파일 전송 및 관리&lt;/td&gt;
          &lt;td&gt;보안 파일 복사&lt;/td&gt;
          &lt;td&gt;단순 파일 전송&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;연결 특성&lt;/td&gt;
          &lt;td&gt;- 제어 연결과 데이터 연결 분리&lt;br&gt;- 능동/수동 모드 지원&lt;br&gt;- 지속적 연결&lt;/td&gt;
          &lt;td&gt;- 단일 암호화 연결&lt;br&gt;SSH 터널링 사용&lt;br&gt;- 지속적 연결&lt;/td&gt;
          &lt;td&gt;- 단일 암호화 연결&lt;br&gt;- 일회성 연결&lt;br&gt;- 비대화형&lt;/td&gt;
          &lt;td&gt;- 단순 연결&lt;br&gt;- 비연결형&lt;br&gt;- 최소한의 기능&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 기능&lt;/td&gt;
          &lt;td&gt;- 파일 업로드/다운로드&lt;br&gt;- 디렉토리 탐색&lt;br&gt;- 파일 관리&lt;br&gt;- 권한 관리&lt;/td&gt;
          &lt;td&gt;- 파일 업로드/다운로드&lt;br&gt;- 디렉토리 관리&lt;br&gt;- 파일 권한 제어&lt;br&gt;- 원격 파일 조작&lt;/td&gt;
          &lt;td&gt;- 파일 복사&lt;br&gt;- 디렉토리 복사&lt;br&gt;- 재귀적 복사&lt;br&gt;- 보존 모드 지원&lt;/td&gt;
          &lt;td&gt;- 파일 읽기/쓰기&lt;br&gt;- 단순 전송&lt;br&gt;- 최소 메모리 사용&lt;br&gt;- 간단한 구현&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;인증 방식&lt;/td&gt;
          &lt;td&gt;사용자명/비밀번호&lt;/td&gt;
          &lt;td&gt;- SSH 키 기반&lt;br&gt;- 비밀번호&lt;br&gt;- 인증서&lt;/td&gt;
          &lt;td&gt;- SSH 키 기반&lt;br&gt;- 비밀번호&lt;/td&gt;
          &lt;td&gt;인증 없음 (기본)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;특징&lt;/td&gt;
          &lt;td&gt;- 다양한 명령어 지원&lt;br&gt;- 세션 유지&lt;br&gt;ASCII/이진 모드&lt;br&gt;- 재시작 기능&lt;/td&gt;
          &lt;td&gt;- 풍부한 파일 작업&lt;br&gt;- 플랫폼 독립적&lt;br&gt;- 강력한 보안&lt;br&gt;- 세션 관리&lt;/td&gt;
          &lt;td&gt;- 간단한 사용법&lt;br&gt;- 빠른 전송&lt;br&gt;- 명령행 기반&lt;br&gt;- 최소한의 기능&lt;/td&gt;
          &lt;td&gt;- 단순한 구조&lt;br&gt;- 최소한의 메모리&lt;br&gt;- 쉬운 구현&lt;br&gt;- 빠른 시작&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;장점&lt;/td&gt;
          &lt;td&gt;- 널리 지원됨&lt;br&gt;- 다양한 기능&lt;br&gt;- 유연한 사용&lt;br&gt;- 재시작 가능&lt;/td&gt;
          &lt;td&gt;- 강력한 보안&lt;br&gt;- 다양한 기능&lt;br&gt;- 호환성&lt;br&gt;- 신뢰성&lt;/td&gt;
          &lt;td&gt;- 간단한 사용&lt;br&gt;- 높은 보안&lt;br&gt;- 빠른 속도&lt;br&gt;- 적은 오버헤드&lt;/td&gt;
          &lt;td&gt;- 단순한 구현&lt;br&gt;- 적은 메모리&lt;br&gt;- 빠른 전송&lt;br&gt;ROM 부팅 가능&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;단점&lt;/td&gt;
          &lt;td&gt;- 보안 취약&lt;br&gt;- 복잡한 설정&lt;br&gt;- 방화벽 문제&lt;br&gt;- 오버헤드 큼&lt;/td&gt;
          &lt;td&gt;- 구현 복잡&lt;br&gt;- 높은 오버헤드&lt;br&gt;- 느린 속도&lt;br&gt;- 리소스 많이 사용&lt;/td&gt;
          &lt;td&gt;- 제한된 기능&lt;br&gt;- 진행률 표시 없음&lt;br&gt;- 세션 관리 없음&lt;br&gt;- 유연성 부족&lt;/td&gt;
          &lt;td&gt;- 보안 없음&lt;br&gt;- 큰 파일 부적합&lt;br&gt;- 신뢰성 낮음&lt;br&gt;- 기능 제한적&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;일반적 사용 사례&lt;/td&gt;
          &lt;td&gt;- 웹 호스팅&lt;br&gt;- 파일 공유&lt;br&gt;- 백업&lt;br&gt;- 일반 파일 전송&lt;/td&gt;
          &lt;td&gt;- 보안 파일 전송&lt;br&gt;- 원격 파일 관리&lt;br&gt;- 자동화된 전송&lt;br&gt;- 기업 환경&lt;/td&gt;
          &lt;td&gt;- 서버 간 파일 복사&lt;br&gt;- 백업&lt;br&gt;- 스크립트 자동화&lt;br&gt;- 단순 전송&lt;/td&gt;
          &lt;td&gt;- 네트워크 부팅&lt;br&gt;- 펌웨어 업데이트&lt;br&gt;- 설정 파일 전송&lt;br&gt;- 임베디드 시스템&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이들 프로토콜은 다음과 같은 상황에서 선택적으로 사용된다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remote Access Protocols</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/</link>
      <pubDate>Mon, 30 Dec 2024 02:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/</guid>
      <description>&lt;h2 id=&#34;remote-access-protocols&#34;&gt;Remote Access Protocols&lt;/h2&gt;
&lt;h3 id=&#34;telnet--ssh&#34;&gt;Telnet / SSH&lt;/h3&gt;
&lt;p&gt;네트워크를 통해 원격 시스템에 접속하여 명령어를 실행할 수 있게 해주는 프로토콜.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;TELNET (TELecommunication NETwork)&lt;/th&gt;
          &lt;th&gt;SSH (Secure Shell)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OSI 7계층 위치&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TCP/IP 4계층 위치&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;기본 포트&lt;/td&gt;
          &lt;td&gt;23&lt;/td&gt;
          &lt;td&gt;22&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;전송 프로토콜&lt;/td&gt;
          &lt;td&gt;TCP&lt;/td&gt;
          &lt;td&gt;TCP&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;보안 특성&lt;/td&gt;
          &lt;td&gt;- 암호화 없음&lt;br&gt;- 평문 전송&lt;br&gt;- 기본적인 인증만 제공&lt;br&gt;- 보안 취약&lt;/td&gt;
          &lt;td&gt;- 강력한 암호화&lt;br&gt;- 다중 인증 방식&lt;br&gt;- 데이터 무결성 검증&lt;br&gt;- 키 기반 인증&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 기능&lt;/td&gt;
          &lt;td&gt;- 원격 터미널 접속&lt;br&gt;- 텍스트 기반 통신&lt;br&gt;- 간단한 명령어 실행&lt;br&gt;- 기본적인 세션 관리&lt;/td&gt;
          &lt;td&gt;- 보안 원격 접속&lt;br&gt;- 파일 전송(SFTP/SCP)&lt;br&gt;- 포트 포워딩&lt;br&gt;X11 포워딩&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;인증 방식&lt;/td&gt;
          &lt;td&gt;- 사용자명/비밀번호&lt;br&gt;- 평문 전송&lt;br&gt;- 단순 인증&lt;/td&gt;
          &lt;td&gt;- 공개키/개인키&lt;br&gt;- 비밀번호&lt;br&gt;- 다중 인증&lt;br&gt;- 인증서 기반&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;데이터 전송 특성&lt;/td&gt;
          &lt;td&gt;- 평문 전송&lt;br&gt;- 압축 없음&lt;br&gt;- 무결성 검사 없음&lt;br&gt;- 중간자 공격 취약&lt;/td&gt;
          &lt;td&gt;- 암호화 전송&lt;br&gt;- 압축 지원&lt;br&gt;- 무결성 검사&lt;br&gt;- 중간자 공격 방지&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;세션 관리&lt;/td&gt;
          &lt;td&gt;- 단순한 세션 관리&lt;br&gt;- 연결 유지 기능 제한&lt;br&gt;- 재접속 시 새로운 세션&lt;/td&gt;
          &lt;td&gt;- 고급 세션 관리&lt;br&gt;- 연결 유지 기능&lt;br&gt;- 세션 재사용 가능&lt;br&gt;- 다중 채널 지원&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 특징&lt;/td&gt;
          &lt;td&gt;- 단순한 구조&lt;br&gt;- 적은 리소스 사용&lt;br&gt;- 빠른 연결&lt;br&gt;- 호환성 높음&lt;/td&gt;
          &lt;td&gt;- 강력한 보안&lt;br&gt;- 다양한 기능&lt;br&gt;- 확장성&lt;br&gt;- 현대적 설계&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;장점&lt;/td&gt;
          &lt;td&gt;- 간단한 구현&lt;br&gt;- 낮은 리소스 요구&lt;br&gt;- 빠른 응답 속도&lt;br&gt;- 널리 지원됨&lt;/td&gt;
          &lt;td&gt;- 높은 보안성&lt;br&gt;- 다양한 기능&lt;br&gt;- 신뢰성&lt;br&gt;- 표준화된 프로토콜&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;단점&lt;/td&gt;
          &lt;td&gt;- 보안 취약&lt;br&gt;- 기능 제한&lt;br&gt;- 현대 환경 부적합&lt;br&gt;- 데이터 노출 위험&lt;/td&gt;
          &lt;td&gt;- 높은 리소스 사용&lt;br&gt;- 구현 복잡성&lt;br&gt;- 초기 설정 필요&lt;br&gt;- 상대적으로 느림&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;동작 방식&lt;/td&gt;
          &lt;td&gt;1. TCP 연결 수립&lt;br&gt;2. 사용자 인증&lt;br&gt;3. 터미널 에뮬레이션&lt;br&gt;4. 명령어 전송/수신&lt;/td&gt;
          &lt;td&gt;1. TCP 연결 수립&lt;br&gt;2. 버전 협상&lt;br&gt;3. 키 교환&lt;br&gt;4. 인증&lt;br&gt;5. 채널 설정&lt;br&gt;6. 암호화된 통신&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;일반적 사용 사례&lt;/td&gt;
          &lt;td&gt;- 레거시 시스템 관리&lt;br&gt;- 간단한 원격 접속&lt;br&gt;- 제한된 환경&lt;br&gt;- 테스트 목적&lt;/td&gt;
          &lt;td&gt;- 서버 관리&lt;br&gt;- 보안 파일 전송&lt;br&gt;- 원격 명령 실행&lt;br&gt;- 터널링&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;현재 상태&lt;/td&gt;
          &lt;td&gt;사용 권장되지 않음&lt;/td&gt;
          &lt;td&gt;현재 표준으로 사용 중&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;SSH의 주요 보안 기능:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Routing Protocols</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/</link>
      <pubDate>Mon, 30 Dec 2024 02:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/</guid>
      <description>&lt;h2 id=&#34;routing-protocols&#34;&gt;Routing Protocols&lt;/h2&gt;
&lt;h3 id=&#34;rip--ripv2--ripng--ospf--eigrp--is-is--bgp&#34;&gt;RIP / RIPv2 / RIPng / OSPF / EIGRP / IS-IS / BGP&lt;/h3&gt;
&lt;p&gt;각 라우팅 프로토콜의 주요 특성을 요약한 것이다.&lt;br&gt;
각 프로토콜은 네트워크의 규모와 요구사항에 따라 선택되어 사용된다.&lt;br&gt;
예를 들어, RIP는 소규모 네트워크에 적합하고, OSPF와 IS-IS는 대규모 네트워크에 적합하며, BGP는 인터넷 백본과 같은 초대규모 네트워크에 사용된다.&lt;/p&gt;
&lt;p&gt;라우팅 프로토콜들의 특징을 체계적으로 비교 분석하여 표로 정리해드리겠습니다. 각 프로토콜의 특성과 동작 방식을 상세하게 설명하여 이해를 돕도록 하겠습니다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;RIP (Routing Information Protocol) / RIPv2 (Routing Information Protocol version 2)&lt;/th&gt;
          &lt;th&gt;RIPng (Routing Information Protocol next generation)&lt;/th&gt;
          &lt;th&gt;OSPF (Open Shortest Path First)&lt;/th&gt;
          &lt;th&gt;EIGRP (Enhanced Interior Gateway Routing Protocol)&lt;/th&gt;
          &lt;th&gt;IS-IS (Intermediate System to Intermediate System)&lt;/th&gt;
          &lt;th&gt;BGP (Border Gateway Protocol)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OSI 7계층 위치&lt;/td&gt;
          &lt;td&gt;네트워크 계층 (3계층)&lt;/td&gt;
          &lt;td&gt;네트워크 계층 (3계층)&lt;/td&gt;
          &lt;td&gt;네트워크 계층 (3계층)&lt;/td&gt;
          &lt;td&gt;네트워크 계층 (3계층)&lt;/td&gt;
          &lt;td&gt;네트워크 계층 (3계층)&lt;/td&gt;
          &lt;td&gt;네트워크 계층 (3계층)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TCP/IP 4계층 위치&lt;/td&gt;
          &lt;td&gt;인터넷 계층&lt;/td&gt;
          &lt;td&gt;인터넷 계층&lt;/td&gt;
          &lt;td&gt;인터넷 계층&lt;/td&gt;
          &lt;td&gt;인터넷 계층&lt;/td&gt;
          &lt;td&gt;인터넷 계층&lt;/td&gt;
          &lt;td&gt;인터넷 계층&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;프로토콜 유형&lt;/td&gt;
          &lt;td&gt;내부 게이트웨이 프로토콜(IGP)&lt;/td&gt;
          &lt;td&gt;내부 게이트웨이 프로토콜(IGP)&lt;/td&gt;
          &lt;td&gt;내부 게이트웨이 프로토콜(IGP)&lt;/td&gt;
          &lt;td&gt;내부 게이트웨이 프로토콜(IGP)&lt;/td&gt;
          &lt;td&gt;내부 게이트웨이 프로토콜(IGP)&lt;/td&gt;
          &lt;td&gt;외부 게이트웨이 프로토콜(EGP)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;라우팅 알고리즘&lt;/td&gt;
          &lt;td&gt;거리 벡터&lt;/td&gt;
          &lt;td&gt;거리 벡터&lt;/td&gt;
          &lt;td&gt;링크 스테이트&lt;/td&gt;
          &lt;td&gt;하이브리드(DUAL)&lt;/td&gt;
          &lt;td&gt;링크 스테이트&lt;/td&gt;
          &lt;td&gt;경로 벡터&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;메트릭 계산 방식&lt;/td&gt;
          &lt;td&gt;홉 카운트&lt;/td&gt;
          &lt;td&gt;홉 카운트&lt;/td&gt;
          &lt;td&gt;비용(대역폭)&lt;/td&gt;
          &lt;td&gt;복합 메트릭(대역폭, 지연, 부하, 신뢰성)&lt;/td&gt;
          &lt;td&gt;비용&lt;/td&gt;
          &lt;td&gt;다양한 속성(AS 경로, 로컬 선호도 등)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;최대 홉 카운트&lt;/td&gt;
          &lt;td&gt;15&lt;/td&gt;
          &lt;td&gt;15&lt;/td&gt;
          &lt;td&gt;제한 없음&lt;/td&gt;
          &lt;td&gt;제한 없음&lt;/td&gt;
          &lt;td&gt;제한 없음&lt;/td&gt;
          &lt;td&gt;제한 없음&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;수렴 속도&lt;/td&gt;
          &lt;td&gt;느림&lt;/td&gt;
          &lt;td&gt;느림&lt;/td&gt;
          &lt;td&gt;빠름&lt;/td&gt;
          &lt;td&gt;매우 빠름&lt;/td&gt;
          &lt;td&gt;빠름&lt;/td&gt;
          &lt;td&gt;느림&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;업데이트 방식&lt;/td&gt;
          &lt;td&gt;주기적(30초)&lt;/td&gt;
          &lt;td&gt;주기적(30초)&lt;/td&gt;
          &lt;td&gt;변경 시&lt;/td&gt;
          &lt;td&gt;변경 시&lt;/td&gt;
          &lt;td&gt;변경 시&lt;/td&gt;
          &lt;td&gt;변경 시&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;네트워크 규모&lt;/td&gt;
          &lt;td&gt;소규모&lt;/td&gt;
          &lt;td&gt;소규모&lt;/td&gt;
          &lt;td&gt;대규모&lt;/td&gt;
          &lt;td&gt;중대규모&lt;/td&gt;
          &lt;td&gt;대규모&lt;/td&gt;
          &lt;td&gt;초대규모(인터넷)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;특징&lt;/td&gt;
          &lt;td&gt;- 구현 간단&lt;br&gt;- 설정 쉬움&lt;br&gt;- 제한된 확장성&lt;br&gt;- 카운팅 투 인피니티 문제&lt;/td&gt;
          &lt;td&gt;- IPv6 지원&lt;br&gt;RIPv2 기반&lt;br&gt;- 향상된 보안&lt;br&gt;- 동일한 제한사항&lt;/td&gt;
          &lt;td&gt;- 영역 기반 계층구조&lt;br&gt;- 빠른 수렴&lt;br&gt;- 대규모 확장성&lt;br&gt;- 정확한 토폴로지 정보&lt;/td&gt;
          &lt;td&gt;- Cisco 전용&lt;br&gt;- 빠른 수렴&lt;br&gt;- 효율적인 대역폭 사용&lt;br&gt;- 유연한 경로 선택&lt;/td&gt;
          &lt;td&gt;- 계층적 구조&lt;br&gt;- 벤더 중립적&lt;br&gt;- 대규모 확장성&lt;br&gt;- 빠른 수렴&lt;/td&gt;
          &lt;td&gt;- 정책 기반 라우팅&lt;br&gt;- 대규모 확장성&lt;br&gt;- 풍부한 경로 속성&lt;br&gt;AS 간 라우팅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;장점&lt;/td&gt;
          &lt;td&gt;- 이해하기 쉬움&lt;br&gt;- 적은 리소스 사용&lt;br&gt;- 간단한 구현&lt;br&gt;- 모든 벤더 지원&lt;/td&gt;
          &lt;td&gt;- IPv6 네이티브 지원&lt;br&gt;- 보안 강화&lt;br&gt;- 간단한 구현&lt;br&gt;- 기존 RIP 호환&lt;/td&gt;
          &lt;td&gt;- 효율적인 대역폭 사용&lt;br&gt;- 빠른 수렴&lt;br&gt;- 계층적 설계&lt;br&gt;- 뛰어난 확장성&lt;/td&gt;
          &lt;td&gt;- 빠른 수렴&lt;br&gt;- 효율적인 리소스 사용&lt;br&gt;- 유연한 토폴로지&lt;br&gt;- 부분 업데이트&lt;/td&gt;
          &lt;td&gt;- 높은 확장성&lt;br&gt;- 벤더 중립성&lt;br&gt;- 효율적인 라우팅&lt;br&gt;IPv4/IPv6 통합 지원&lt;/td&gt;
          &lt;td&gt;- 강력한 정책 제어&lt;br&gt;- 뛰어난 확장성&lt;br&gt;- 풍부한 경로 정보&lt;br&gt;- 정교한 경로 선택&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;단점&lt;/td&gt;
          &lt;td&gt;- 느린 수렴&lt;br&gt;- 제한된 확장성&lt;br&gt;- 비효율적 라우팅&lt;br&gt;- 대역폭 낭비&lt;/td&gt;
          &lt;td&gt;- 느린 수렴&lt;br&gt;- 제한된 확장성&lt;br&gt;IPv4 미지원&lt;br&gt;- 홉 제한&lt;/td&gt;
          &lt;td&gt;- 복잡한 설정&lt;br&gt;- 높은 리소스 요구&lt;br&gt;- 복잡한 트러블슈팅&lt;br&gt;- 많은 CPU/메모리 사용&lt;/td&gt;
          &lt;td&gt;- Cisco 전용&lt;br&gt;- 복잡한 메트릭&lt;br&gt;- 라이센스 비용&lt;br&gt;- 트러블슈팅 어려움&lt;/td&gt;
          &lt;td&gt;- 복잡한 설정&lt;br&gt;- 높은 학습 곡선&lt;br&gt;- 복잡한 트러블슈팅&lt;br&gt;- 전문성 요구&lt;/td&gt;
          &lt;td&gt;- 복잡한 설정&lt;br&gt;- 느린 수렴&lt;br&gt;- 높은 리소스 요구&lt;br&gt;- 전문성 요구&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;적용 환경&lt;/td&gt;
          &lt;td&gt;소규모 네트워크&lt;/td&gt;
          &lt;td&gt;IPv6 소규모 네트워크&lt;/td&gt;
          &lt;td&gt;중대형 엔터프라이즈 네트워크&lt;/td&gt;
          &lt;td&gt;Cisco 기반 네트워크&lt;/td&gt;
          &lt;td&gt;대형 서비스 제공자 네트워크&lt;/td&gt;
          &lt;td&gt;인터넷 서비스 제공자&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Telnet</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/telnet/</link>
      <pubDate>Mon, 30 Dec 2024 02:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/telnet/</guid>
      <description>&lt;h2 id=&#34;telnet&#34;&gt;Telnet&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Messaging Protocols</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/</link>
      <pubDate>Sun, 15 Dec 2024 03:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/</guid>
      <description>&lt;h2 id=&#34;messaging-protocol&#34;&gt;Messaging Protocol&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>UDP vs. TCP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connectionless/udp/udp-vs-tcp/</link>
      <pubDate>Sun, 15 Dec 2024 03:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connectionless/udp/udp-vs-tcp/</guid>
      <description>&lt;h2 id=&#34;udp-vs-tcp&#34;&gt;UDP vs. TCP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>CoAP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/specialized-protocols/internet-of-things/coap/</link>
      <pubDate>Sun, 15 Dec 2024 03:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/specialized-protocols/internet-of-things/coap/</guid>
      <description>&lt;h2 id=&#34;coap&#34;&gt;CoAP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>SOAP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/soap/</link>
      <pubDate>Sun, 15 Dec 2024 03:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/soap/</guid>
      <description>&lt;h2 id=&#34;soap-simple-object-access-protocol&#34;&gt;SOAP (Simple Object Access Protocol)&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>STOMP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/stomp/</link>
      <pubDate>Sun, 15 Dec 2024 03:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/stomp/</guid>
      <description>&lt;h2 id=&#34;stomp-simple-text-oriented-messaging-protocol&#34;&gt;STOMP (Simple Text Oriented Messaging Protocol)&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>XMPP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/xmpp/</link>
      <pubDate>Sun, 15 Dec 2024 03:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/xmpp/</guid>
      <description>&lt;h2 id=&#34;xmpp-extensible-messaging-and-presence-protocol&#34;&gt;XMPP (Extensible Messaging and Presence Protocol)&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Email Protocols</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/</link>
      <pubDate>Sat, 14 Dec 2024 12:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/</guid>
      <description>&lt;h2 id=&#34;email-protocols&#34;&gt;Email Protocols&lt;/h2&gt;
&lt;h3 id=&#34;smtp--pop3--imap&#34;&gt;SMTP / POP3 / IMAP&lt;/h3&gt;
&lt;p&gt;이 세 프로토콜은 모두 이메일 통신에 중요한 역할을 하며, 각각의 특성에 따라 이메일 전송, 수신, 관리 기능을 제공한다.&lt;br&gt;
SMTP는 이메일 전송을, POP3와 IMAP은 이메일 수신을 담당하지만, IMAP이 더 현대적이고 유연한 기능을 제공한다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;SMTP (Simple Mail Transfer Protocol)&lt;/th&gt;
          &lt;th&gt;POP3 (Post Office Protocol 3)&lt;/th&gt;
          &lt;th&gt;IMAP (Internet Message Access Protocol)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;OSI 7계층 위치&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
          &lt;td&gt;응용 계층 (7계층)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;TCP/IP 4계층 위치&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
          &lt;td&gt;응용 계층&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;기본 포트&lt;/td&gt;
          &lt;td&gt;25 (일반), 587 (TLS/SSL)&lt;/td&gt;
          &lt;td&gt;110 (일반), 995 (TLS/SSL)&lt;/td&gt;
          &lt;td&gt;143 (일반), 993 (TLS/SSL)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 역할&lt;/td&gt;
          &lt;td&gt;이메일 발송 및 전달&lt;/td&gt;
          &lt;td&gt;이메일 다운로드 및 삭제&lt;/td&gt;
          &lt;td&gt;서버상의 이메일 관리 및 접근&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;통신 방향&lt;/td&gt;
          &lt;td&gt;클라이언트 → 서버&lt;br&gt;서버 → 서버&lt;/td&gt;
          &lt;td&gt;클라이언트 ← 서버&lt;/td&gt;
          &lt;td&gt;양방향 (클라이언트 ↔ 서버)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;기본 동작 방식&lt;/td&gt;
          &lt;td&gt;1. 연결 수립&lt;br&gt;2. 송신자 확인&lt;br&gt;3. 수신자 확인&lt;br&gt;4. 메시지 전송&lt;br&gt;5. 연결 종료&lt;/td&gt;
          &lt;td&gt;1. 서버 접속&lt;br&gt;2. 인증&lt;br&gt;3. 메일 다운로드&lt;br&gt;4. 서버에서 메일 삭제(옵션)&lt;br&gt;5. 연결 종료&lt;/td&gt;
          &lt;td&gt;1. 서버 접속&lt;br&gt;2. 인증&lt;br&gt;3. 메일함 선택&lt;br&gt;4. 메일 조작(읽기/이동/삭제 등)&lt;br&gt;5. 상태 동기화&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 특징&lt;/td&gt;
          &lt;td&gt;- 텍스트 기반 프로토콜&lt;br&gt;- 메일 릴레이 가능&lt;br&gt;- 단순한 명령어 체계&lt;br&gt;- 확장 가능한 구조&lt;/td&gt;
          &lt;td&gt;- 단순한 구조&lt;br&gt;- 오프라인 접근 가능&lt;br&gt;- 서버 저장공간 최소화&lt;br&gt;- 한 기기에서만 접근&lt;/td&gt;
          &lt;td&gt;- 서버 중심 관리&lt;br&gt;- 다중 기기 접근&lt;br&gt;- 폴더 구조 지원&lt;br&gt;- 실시간 동기화&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;메일 저장 위치&lt;/td&gt;
          &lt;td&gt;전달 중계 역할만 수행&lt;/td&gt;
          &lt;td&gt;로컬 장치&lt;/td&gt;
          &lt;td&gt;메일 서버&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;다중 기기 지원&lt;/td&gt;
          &lt;td&gt;해당 없음&lt;/td&gt;
          &lt;td&gt;제한적 (한 기기에서만 관리)&lt;/td&gt;
          &lt;td&gt;완벽 지원 (모든 기기 동기화)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;서버 자원 사용&lt;/td&gt;
          &lt;td&gt;낮음&lt;/td&gt;
          &lt;td&gt;낮음&lt;/td&gt;
          &lt;td&gt;높음&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;대역폭 사용&lt;/td&gt;
          &lt;td&gt;메일 전송 시에만 사용&lt;/td&gt;
          &lt;td&gt;전체 메일 다운로드로 많이 사용&lt;/td&gt;
          &lt;td&gt;필요한 부분만 동기화하여 효율적&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;장점&lt;/td&gt;
          &lt;td&gt;- 단순한 구현&lt;br&gt;- 안정적인 전달&lt;br&gt;- 낮은 리소스 사용&lt;br&gt;- 높은 호환성&lt;/td&gt;
          &lt;td&gt;- 단순한 구조&lt;br&gt;- 오프라인 사용 가능&lt;br&gt;- 서버 부하 낮음&lt;br&gt;- 구현 용이&lt;/td&gt;
          &lt;td&gt;- 유연한 메일 관리&lt;br&gt;- 다중 기기 지원&lt;br&gt;- 서버 백업 용이&lt;br&gt;- 부분 동기화 가능&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;단점&lt;/td&gt;
          &lt;td&gt;- 기본 보안 기능 없음&lt;br&gt;- 인증 제한적&lt;br&gt;- 스팸 메일 취약&lt;br&gt;- 첨부파일 크기 제한&lt;/td&gt;
          &lt;td&gt;- 한 기기에서만 관리&lt;br&gt;- 메일 동기화 어려움&lt;br&gt;- 폴더 구조 제한&lt;br&gt;- 유연성 부족&lt;/td&gt;
          &lt;td&gt;- 복잡한 구현&lt;br&gt;- 높은 서버 부하&lt;br&gt;- 느린 초기 접속&lt;br&gt;- 많은 서버 자원 필요&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;보안 기능&lt;/td&gt;
          &lt;td&gt;기본적으로 없음 (SMTPS로 보안 추가 가능)&lt;/td&gt;
          &lt;td&gt;기본적으로 없음 (POP3S로 보안 추가 가능)&lt;/td&gt;
          &lt;td&gt;기본적으로 없음 (IMAPS로 보안 추가 가능)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;주요 명령어&lt;/td&gt;
          &lt;td&gt;- HELO/EHLO&lt;br&gt;MAIL FROM&lt;br&gt;RCPT TO&lt;br&gt;DATA&lt;br&gt;QUIT&lt;/td&gt;
          &lt;td&gt;- USER&lt;br&gt;PASS&lt;br&gt;LIST&lt;br&gt;RETR&lt;br&gt;DELE&lt;/td&gt;
          &lt;td&gt;- SELECT&lt;br&gt;FETCH&lt;br&gt;STORE&lt;br&gt;SEARCH&lt;br&gt;EXPUNGE&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이러한 이메일 프로토콜들은 다음과 같이 함께 동작한다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTPS (HyperText Transfer Protocol Secure)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/https/</link>
      <pubDate>Sat, 14 Dec 2024 03:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/https/</guid>
      <description>&lt;h2 id=&#34;https&#34;&gt;https&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>DMARC</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/dmarc/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/dmarc/</guid>
      <description>&lt;h2 id=&#34;dmarc&#34;&gt;DMARC&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Domain Keys</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/domain-keys/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/domain-keys/</guid>
      <description>&lt;h2 id=&#34;domain-keys&#34;&gt;Domain Keys&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>IMAP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/imap/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/imap/</guid>
      <description>&lt;h2 id=&#34;imap&#34;&gt;IMAP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Pop3s</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/pop3s/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/pop3s/</guid>
      <description>&lt;h2 id=&#34;pop3s&#34;&gt;Pop3s&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>SMTP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/smtp/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/smtp/</guid>
      <description>&lt;h2 id=&#34;smtp&#34;&gt;SMTP&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>SPF</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/spf/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/spf/</guid>
      <description>&lt;h2 id=&#34;spf&#34;&gt;SPF&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>White Listing vs Grey Listing</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/white-listing-vs-grey-listing/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/email/white-listing-vs-grey-listing/</guid>
      <description>&lt;h2 id=&#34;white-listing-vs-grey-listing&#34;&gt;White Listing vs Grey Listing&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>AMQP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/amqp/</link>
      <pubDate>Sun, 20 Oct 2024 05:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/amqp/</guid>
      <description>AMQP(Advanced Message Queuing Protocol)는 메시지 지향 미들웨어를 위한 개방형 표준 응용 계층 프로토콜이다.</description>
    </item>
    <item>
      <title>MQTT</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/mqtt/</link>
      <pubDate>Sun, 20 Oct 2024 04:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/messaging-protocols/mqtt/</guid>
      <description>MQTT(Message Queuing Telemetry Transport)는 IoT 환경에서 널리 사용되는 경량 메시징 프로토콜이다.</description>
    </item>
    <item>
      <title>멱등성 (Idempotency)과 안전한 메서드 (Safe Methods)의 비교</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/idempotency/idempotency-and-safe-methods/</link>
      <pubDate>Sat, 19 Oct 2024 00:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/idempotency/idempotency-and-safe-methods/</guid>
      <description>멱등성과 안전한 메서드는 HTTP 메서드의 중요한 특성으로, 서버의 상태 변화와 관련이 있다.</description>
    </item>
    <item>
      <title>멱등성 (Idempotency)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/idempotency/</link>
      <pubDate>Fri, 18 Oct 2024 16:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/idempotency/</guid>
      <description>일한 동요청을 여러 번 수행해도 시스템의 상태가 한 번 수행한 것과 동일한 결과를 보장하는 속성</description>
    </item>
    <item>
      <title>안전한 메서드 (Safe Methods)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/safe-methods/</link>
      <pubDate>Fri, 18 Oct 2024 16:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/safe-methods/</guid>
      <description>서버의 상태를 변경하지 않는 HTTP 메서드</description>
    </item>
    <item>
      <title>SSH (Secure Shell)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/ssh/</link>
      <pubDate>Fri, 18 Oct 2024 12:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/remote-access-protocols/ssh/</guid>
      <description>SSH는 네트워크 상의 다른 컴퓨터에 안전하게 접속하기 위한 암호화 네트워크 프로토콜.</description>
    </item>
    <item>
      <title>SSL and TLS</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/security-and-authentication-protocols/data-protection/ssl-and-tls/</link>
      <pubDate>Fri, 18 Oct 2024 08:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/security-and-authentication-protocols/data-protection/ssl-and-tls/</guid>
      <description>인터넷 상에서 데이터를 안전하게 전송하기 위한 암호화 프로토콜.</description>
    </item>
    <item>
      <title>CORS</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/cors/</link>
      <pubDate>Fri, 18 Oct 2024 07:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/cors/</guid>
      <description>다른 출처(Origin)의 리소스를 공유하기 위한 보안 메커니즘</description>
    </item>
    <item>
      <title>Cookies</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/cookies/</link>
      <pubDate>Fri, 18 Oct 2024 07:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/cookies/</guid>
      <description>웹사이트가 사용자의 브라우저에 저장하는 작은 텍스트 파일</description>
    </item>
    <item>
      <title>HTTP Cache</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-cache/</link>
      <pubDate>Fri, 18 Oct 2024 07:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-cache/</guid>
      <description>웹 브라우저나 서버에서 데이터를 임시 저장하는 기술</description>
    </item>
    <item>
      <title>HTTP Headers</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-headers/</link>
      <pubDate>Fri, 18 Oct 2024 07:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-headers/</guid>
      <description>HTTP 요청이나 응답에서 전달할 부가적인 정보를 담는 데이터</description>
    </item>
    <item>
      <title>HTTP Methods</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-methods/</link>
      <pubDate>Fri, 18 Oct 2024 07:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-methods/</guid>
      <description>클라이언트가 서버에 특정 작업을 요청하기 위해 사용하는 방식</description>
    </item>
    <item>
      <title>HTTP Status Code</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-status-code/</link>
      <pubDate>Fri, 18 Oct 2024 07:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/http-status-code/</guid>
      <description>서버가 클라이언트의 요청에 대한 응답 상태를 나타내는 3자리 숫자.</description>
    </item>
    <item>
      <title>URI</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/uri/</link>
      <pubDate>Fri, 18 Oct 2024 04:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/uri/</guid>
      <description>인터넷 상의 자원을 고유하게 식별하기 위한 문자열로 URL과 URN은 모두 URI의 하위 개념이라고 볼 수 있다.</description>
    </item>
    <item>
      <title>WebSocket</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/websocket/</link>
      <pubDate>Fri, 18 Oct 2024 04:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/websocket/</guid>
      <description>&lt;h2 id=&#34;websocket&#34;&gt;WebSocket&lt;/h2&gt;
&lt;p&gt;OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;/p&gt;
&lt;p&gt;WebSocket은 HTTP를 기반으로 한 통신 프로토콜이지만, 연결이 수립된 후에는 HTTP와는 독립적으로 동작한다.&lt;br&gt;
HTTP가 단방향 통신만을 지원하는 것과 달리, WebSocket은 전이중(Full-duplex) 통신을 지원한다.&lt;br&gt;
이는 전화 통화처럼 양쪽에서 동시에 데이터를 주고받을 수 있다는 의미이다.&lt;br&gt;
즉, 클라이언트와 서버 간의 지속적인 연결을 통해 양방향, 실시간 통신을 가능하게 하는 컴퓨터 통신 프로토콜이다.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;img alt=&#34;Web Socket&#34; loading=&#34;lazy&#34; src=&#34;https://buenhyden.github.io/img/web-socket.png&#34;&gt;&lt;figcaption&gt;Source: https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;주요-특징&#34;&gt;주요 특징&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;전이중 통신: 클라이언트와 서버가 동시에 데이터를 주고받을 수 있습니다.&lt;/li&gt;
&lt;li&gt;지속적 연결: 한 번 연결이 수립되면 계속 유지됩니다.&lt;/li&gt;
&lt;li&gt;실시간 데이터 전송: 서버에서 클라이언트로 요청 없이도 데이터를 전송할 수 있습니다.&lt;/li&gt;
&lt;li&gt;낮은 지연 시간: 연결이 유지되므로 데이터 전송 시 지연이 적습니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;장점&#34;&gt;장점&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;실시간 통신: 채팅, 게임, 실시간 협업 도구 등에 적합하다.&lt;/li&gt;
&lt;li&gt;효율성: HTTP에 비해 오버헤드가 적어 네트워크 리소스를 효율적으로 사용한다.&lt;/li&gt;
&lt;li&gt;양방향 통신: 서버에서 클라이언트로의 푸시 알림이 가능하다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;단점&#34;&gt;단점&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;복잡성: 연결 관리, 오류 처리 등 구현이 복잡할 수 있다.&lt;/li&gt;
&lt;li&gt;브라우저 지원: 일부 구형 브라우저에서는 지원되지 않을 수 있다.&lt;/li&gt;
&lt;li&gt;서버 부하: 많은 동시 연결을 유지해야 하므로 서버 리소스 사용이 증가할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;동작-방식&#34;&gt;동작 방식&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;핸드셰이크:&lt;br&gt;
웹소켓 연결은 HTTP를 통해 시작된다.&lt;br&gt;
클라이언트가 &amp;ldquo;Upgrade: websocket&amp;rdquo; 헤더를 포함한 요청을 보내면, 서버는 이를 수락하여 웹소켓 연결로 전환한다.&lt;/li&gt;
&lt;li&gt;데이터 전송:&lt;br&gt;
연결이 수립된 후, 클라이언트와 서버는 웹소켓 프로토콜을 사용하여 데이터를 주고받는다.&lt;br&gt;
데이터는 프레임 단위로 전송된다.&lt;/li&gt;
&lt;li&gt;연결 종료:&lt;br&gt;
클라이언트나 서버 중 어느 한 쪽이 연결을 종료할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;연결-수립-과정-handshake&#34;&gt;연결 수립 과정 (Handshake)&lt;/h4&gt;
&lt;p&gt;연결 수립 과정(Handshake)에 대해서 조금더 자세히 알아보도록 하자.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP (HyperText Transfer Protocol)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/</link>
      <pubDate>Fri, 18 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/application-layer-protocols/web-service/http/</guid>
      <description>웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다</description>
    </item>
    <item>
      <title>서브넷팅 (Subnetting)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/subnetting/</link>
      <pubDate>Thu, 17 Oct 2024 13:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/subnetting/</guid>
      <description>서브넷팅(Subnetting)은 네트워크를 더 작은 단위의 네트워크로 분할하는 기술로 IP 주소의 효율적인 사용과 네트워크 관리를 개선하기 위해 사용된다.</description>
    </item>
    <item>
      <title>네트워크 주소 변환 (NAT, Network Address Translation)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/nat/</link>
      <pubDate>Thu, 17 Oct 2024 13:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/nat/</guid>
      <description>네트워크 주소 변환(NAT, Network Address Translation)은 IP 패킷의 TCP/UDP 포트 번호와 소스 및 목적지의 IP 주소를 재기록하면서 라우터를 통해 네트워크 트래픽을 주고받는 기술이다.</description>
    </item>
    <item>
      <title>CIDR (Classless Inter-Domain Routing)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/cidr/</link>
      <pubDate>Thu, 17 Oct 2024 11:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/cidr/</guid>
      <description>CIDR는 도메인 간 라우팅에 사용되는 인터넷 주소를 기존의 IP 주소 클래스 체계보다 더 유연하게 할당하고 지정하는 방식</description>
    </item>
    <item>
      <title>IP Delivery Modes</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/ip-delivery-modes/</link>
      <pubDate>Thu, 17 Oct 2024 07:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/ip-delivery-modes/</guid>
      <description>네트워크에서 데이터를 전송하는 다양한 방식.</description>
    </item>
    <item>
      <title>DNS 캐싱 (DNS Caching)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/dns-caching/</link>
      <pubDate>Thu, 17 Oct 2024 07:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/dns-caching/</guid>
      <description>DNS 캐싱은 이전에 조회한 도메인 이름과 IP 주소의 매핑 정보를 임시로 저장하는 메커니즘이다.</description>
    </item>
    <item>
      <title>DNS Records</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/dns-records/</link>
      <pubDate>Thu, 17 Oct 2024 07:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/dns-records/</guid>
      <description>DNS Records는 도메인 이름 시스템(DNS)에서 사용되는 데이터 구조로, 도메인과 관련된 다양한 정보를 저장한다.</description>
    </item>
    <item>
      <title>TCP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connection-oriented/tcp/</link>
      <pubDate>Thu, 17 Oct 2024 04:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connection-oriented/tcp/</guid>
      <description>TCP는 연결 지향적이며, 신뢰성 있는 데이터 전송을 보장하는 전송 계층 프로토콜</description>
    </item>
    <item>
      <title>UDP</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connectionless/udp/</link>
      <pubDate>Thu, 17 Oct 2024 04:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/data-transport-protocols/connectionless/udp/</guid>
      <description>연결 설정 과정 없이 데이터그램 단위로 전송하며, 신뢰성보다는 속도와 실시간 처리가 중요한 애플리케이션에서 주로 사용한다</description>
    </item>
    <item>
      <title>DNS(Domain Name System)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/</guid>
      <description>도메인은 인터넷 상의 주소 체계를 의미하며, 웹사이트나 네트워크 리소스를 식별하는 고유한 이름이며, dns는 특정 컴퓨터(또는 네트워크로 연결된 임의의 장치)의 주소를 찾기 위해, 사람이 이해하기 쉬운 호스트 이름(예: www.example.com)을  실제 네트워크 상에서 사용하는 IP주소(예: 192.168.1.1)로 변환하고 해당 IP 주소로 접속하는 일련의 시스템</description>
    </item>
    <item>
      <title>Domain</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/domain/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/domain-name-system/domain/</guid>
      <description>도메인(Domain)은 인터넷 상의 계층적 주소 체계로, 사용자가 이해하기 쉬운 형태의 웹사이트 주소를 제공한다.</description>
    </item>
    <item>
      <title>IP(Internet Protocol)</title>
      <link>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-knowledge/network-protocols/network-control-and-routing-protocols/addressing/ip/</guid>
      <description>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합</description>
    </item>
  </channel>
</rss>
