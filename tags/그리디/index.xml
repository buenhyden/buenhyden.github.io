<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>그리디 on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94/</link>
    <description>Recent content in 그리디 on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.4</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Mar 2025 03:30:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 1007 - Minimum Domino Rotations For Equal Row</title>
      <link>https://buenhyden.github.io/coding-test/2025/03/leetcode-1007---minimum-domino-rotations-for-equal-row/</link>
      <pubDate>Sun, 16 Mar 2025 03:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/03/leetcode-1007---minimum-domino-rotations-for-equal-row/</guid>
      <description>도미노 두 줄에서 최소 회전 횟수로 한 줄을 같은 숫자로 맞추는 문제</description>
    </item>
    <item>
      <title>LeetCode 1167. Minimum Cost to Connect Sticks</title>
      <link>https://buenhyden.github.io/coding-test/2025/03/leetcode-1167.-minimum-cost-to-connect-sticks/</link>
      <pubDate>Wed, 12 Mar 2025 01:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/03/leetcode-1167.-minimum-cost-to-connect-sticks/</guid>
      <description>매번 가장 작은 두 개의 막대를 연결하면 최소 비용을 유지할 수 있음</description>
    </item>
    <item>
      <title>LeetCode 871. Minimum Number of Refueling Stops</title>
      <link>https://buenhyden.github.io/coding-test/2025/02/leetcode-871.-minimum-number-of-refueling-stops/</link>
      <pubDate>Fri, 28 Feb 2025 00:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/02/leetcode-871.-minimum-number-of-refueling-stops/</guid>
      <description>주어진 연료 충전소에서 최소한의 충전으로 목적지까지 도달하는 문제</description>
    </item>
    <item>
      <title>LeetCode 45. Jump Game II</title>
      <link>https://buenhyden.github.io/coding-test/2025/02/leetcode-45.-jump-game-ii/</link>
      <pubDate>Wed, 26 Feb 2025 01:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/02/leetcode-45.-jump-game-ii/</guid>
      <description>각 인덱스에서 점프할 수 있는 최대 거리가 주어질 때, 첫 번째 인덱스에서 마지막 인덱스로 이동하는 최소 점프 횟수를 구하는 문제</description>
    </item>
    <item>
      <title>LeetCode 55. Jump Game</title>
      <link>https://buenhyden.github.io/coding-test/2025/02/leetcode-55.-jump-game/</link>
      <pubDate>Sat, 22 Feb 2025 01:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/02/leetcode-55.-jump-game/</guid>
      <description>배열의 각 위치에서 점프할 수 있는 최대 범위가 주어질 때, 마지막 인덱스에 도달할 수 있는지 판단하는 문제</description>
    </item>
    <item>
      <title>LeetCode 31. Next Permutation</title>
      <link>https://buenhyden.github.io/coding-test/2025/02/leetcode-31.-next-permutation/</link>
      <pubDate>Thu, 20 Feb 2025 07:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/02/leetcode-31.-next-permutation/</guid>
      <description>사전순으로 다음에 오는 순열을 찾는 문제</description>
    </item>
    <item>
      <title>LeetCode 453. Minimum Moves to Equal Array Elements</title>
      <link>https://buenhyden.github.io/coding-test/2025/02/leetcode-453.-minimum-moves-to-equal-array-elements/</link>
      <pubDate>Thu, 20 Feb 2025 07:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/02/leetcode-453.-minimum-moves-to-equal-array-elements/</guid>
      <description>모든 원소를 동일하게 만들기 위한 최소 이동 횟수를 찾는 문제</description>
    </item>
    <item>
      <title>LeetCode 134. Gas Station</title>
      <link>https://buenhyden.github.io/coding-test/2025/02/leetcode-134.-gas-station/</link>
      <pubDate>Wed, 19 Feb 2025 07:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/coding-test/2025/02/leetcode-134.-gas-station/</guid>
      <description>원형 배열 형태로 주유소를 순회하며 특정 지점에서 출발할 때 전체 순환이 가능한지 확인하는 문제</description>
    </item>
  </channel>
</rss>
