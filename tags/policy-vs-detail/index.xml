<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Policy-vs-Detail on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/policy-vs-detail/</link>
    <description>Recent content in Policy-vs-Detail on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Sat, 21 Dec 2024 04:49:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/policy-vs-detail/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Policy vs. Detail</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/design-fundamentals/architecture-principles/policy-vs-detail/</link>
      <pubDate>Sat, 21 Dec 2024 04:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/design-fundamentals/architecture-principles/policy-vs-detail/</guid>
      <description>Policy vs. Detail 은 소프트웨어 시스템을 고수준 정책 (비즈니스 규칙, 핵심 로직) 과 저수준 세부사항 (프레임워크, 데이터베이스, UI) 으로 분리하는 아키텍처 원칙이다. 의존성 규칙을 통해 세부사항이 정책에 의존하도록 하여 변경에 유연하고 테스트 가능한 시스템을 만들 수 있다.</description>
    </item>
  </channel>
</rss>
