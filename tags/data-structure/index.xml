<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Data-Structure on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/data-structure/</link>
    <description>Recent content in Data-Structure on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 Oct 2024 15:40:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>이진 검색 트리 (Binary Search Tree)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/data-structures/tree/binary-tree/binary-search-tree/</link>
      <pubDate>Mon, 07 Oct 2024 12:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/data-structures/tree/binary-tree/binary-search-tree/</guid>
      <description>BST는 계층적 데이터를 정렬된 방식으로 저장하고 조직하는 데 사용되는 특수한 이진 트리 구조이다.</description>
    </item>
    <item>
      <title>Suffix Array vs Suffix Tree vs Trie</title>
      <link>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/suffix-array-vs-suffix-tree-vs-trie/</link>
      <pubDate>Sat, 12 Oct 2024 15:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/suffix-array-vs-suffix-tree-vs-trie/</guid>
      <description>Suffix Array, Suffix Tree, 그리고 Trie는 모두 문자열 처리와 패턴 매칭을 위한 데이터 구조로, 각각 고유한 특성과 용도를 가지고 있다.</description>
    </item>
    <item>
      <title>Rope</title>
      <link>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/rope/</link>
      <pubDate>Fri, 11 Oct 2024 08:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/rope/</guid>
      <description>Rope는 대규모 문자열을 효율적으로 저장하고 조작하기 위해 설계된 트리 기반의 데이터 구조</description>
    </item>
    <item>
      <title>Suffix Tree</title>
      <link>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/suffix-tree/</link>
      <pubDate>Fri, 11 Oct 2024 08:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/suffix-tree/</guid>
      <description>Suffix Tree는 문자열의 모든 접미사를 효율적으로 저장하고 검색하는 특수한 트리 구조로, 문자열 처리와 패턴 매칭을 위해 사용되는 고급 데이터 구조이다.</description>
    </item>
    <item>
      <title>트라이 (Trie)</title>
      <link>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/trie/</link>
      <pubDate>Fri, 11 Oct 2024 08:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/trie/</guid>
      <description>문자열을 효율적으로 저장하고 검색할 수 있는 트리 기반의 자료구조</description>
    </item>
    <item>
      <title>디스조인트 셋 (Disjoint-Set)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/data-structures/advanced/disjoint-set/</link>
      <pubDate>Fri, 11 Oct 2024 07:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/data-structures/advanced/disjoint-set/</guid>
      <description>디스조인트 셋은 서로 겹치지 않는(disjoint) 부분 집합들로 나누어진 요소들의 집합을 표현하고 조작하는 데이터 구조이다.</description>
    </item>
    <item>
      <title>Suffix Array</title>
      <link>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/suffix-array/</link>
      <pubDate>Tue, 08 Oct 2024 13:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/string-search-and-manipulations/data-structures/suffix-array/</guid>
      <description>Suffix Array는 문자열의 모든 접미사를 효율적으로 저장하고 관리하는 특수한 배열 구조로, 문자열 처리와 패턴 매칭을 위해 사용되는 고급 데이터 구조이다.</description>
    </item>
    <item>
      <title>Skip List</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/data-structures/complex/skip-list/</link>
      <pubDate>Tue, 08 Oct 2024 12:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/data-structures/complex/skip-list/</guid>
      <description>Skip List는 정렬된 연결 리스트를 기반으로 하여 빠른 검색, 삽입, 삭제 연산을 지원하는 확률적 데이터 구조이다</description>
    </item>
  </channel>
</rss>
