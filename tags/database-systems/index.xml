<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Database-Systems on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/database-systems/</link>
    <description>Recent content in Database-Systems on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Oct 2024 06:27:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/database-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis와 Valkey</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/redis%EC%99%80-valkey/</link>
      <pubDate>Tue, 22 Oct 2024 01:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/redis%EC%99%80-valkey/</guid>
      <description>Redis와 Valkey 모두 인메모리 데이터베이스로, 빠른 읽기/쓰기 성능을 제공하나, Redis의 라이선스 정책 변경으로 인해 Valkey가 fork되어 새로운 프로젝트가 되었다.</description>
    </item>
    <item>
      <title>Connection Pool</title>
      <link>https://buenhyden.github.io/posts/databases/connection-pool/</link>
      <pubDate>Fri, 25 Oct 2024 06:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/connection-pool/</guid>
      <description>Connection pool은 데이터베이스 연결을 재사용 가능한 형태로 캐시하는 메커니즘이다.  이는 애플리케이션이 데이터베이스에 연결할 때마다 새로운 연결을 생성하는 대신, 미리 생성된 연결을 사용할 수 있게 해준다.</description>
    </item>
    <item>
      <title>레플리케이션 (replication)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/replication/</link>
      <pubDate>Wed, 30 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/replication/</guid>
      <description>하나의 데이터베이스(마스터 또는 프라이머리)의 데이터를 다른 데이터베이스(슬레이브 또는 세컨더리)로 복제하는 프로세스</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/database-clustering-and-replication/</link>
      <pubDate>Fri, 25 Oct 2024 15:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/database-clustering-and-replication/</guid>
      <description>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)은 데이터베이스의 가용성과 성능을 향상시키는 전략으로, 각각의 목적과 구현 방식에서 차이가 있다.</description>
    </item>
    <item>
      <title>데이터 불일치 (Data Inconsistency)</title>
      <link>https://buenhyden.github.io/posts/databases/data-inconsistency/</link>
      <pubDate>Fri, 25 Oct 2024 07:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/data-inconsistency/</guid>
      <description>동일한 데이터가 데이터베이스 내의 여러 위치에서 서로 다른 형식이나 값으로 존재하는 상황</description>
    </item>
    <item>
      <title>MySQL</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/</link>
      <pubDate>Thu, 24 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/</guid>
      <description>오픈 소스 관계형 데이터베이스 관리 시스템</description>
    </item>
    <item>
      <title>PostgreSQL</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/postgresql/</link>
      <pubDate>Thu, 24 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/postgresql/</guid>
      <description>오픈 소스 관계형 데이터베이스 관리 시스템</description>
    </item>
    <item>
      <title>프로시저 (Procedure)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/procedure/</link>
      <pubDate>Thu, 24 Oct 2024 09:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/procedure/</guid>
      <description>데이터베이스 프로시저(Database Procedure)는 데이터베이스 내에 저장되고 실행되는 일련의 SQL 문들의 집합이다.</description>
    </item>
    <item>
      <title>keyword</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/keywords/</link>
      <pubDate>Thu, 24 Oct 2024 07:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/keywords/</guid>
      <description>SQL(Structured Query Language)는 데이터베이스를 관리하고 조작하기 위한 표준 언어로, 다양한 **키워드**를 통해 데이터 정의, 조작, 제어, 트랜잭션 관리 등을 수행한다.</description>
    </item>
    <item>
      <title>RDBMS</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/</link>
      <pubDate>Thu, 24 Oct 2024 01:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/</guid>
      <description>데이터를 행과 열로 이루어진 테이블 형태로 저장하고 관리하는 시스템</description>
    </item>
    <item>
      <title>SQL (Structured Query Language)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/postgresql/syntax/</link>
      <pubDate>Thu, 24 Oct 2024 01:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/postgresql/syntax/</guid>
      <description>관계형 데이터베이스를 관리하고 조작하기 위한 표준화된 프로그래밍 언어.</description>
    </item>
    <item>
      <title>SQL (Structured Query Language)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/</link>
      <pubDate>Thu, 24 Oct 2024 01:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/</guid>
      <description>관계형 데이터베이스를 관리하고 조작하기 위한 표준화된 프로그래밍 언어.</description>
    </item>
    <item>
      <title>MongoDB</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/document-oriented/mongodb/</link>
      <pubDate>Wed, 23 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/document-oriented/mongodb/</guid>
      <description>크로스 플랫폼 도큐먼트 지향 데이터베이스 시스템</description>
    </item>
    <item>
      <title>Redis</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/redis/</link>
      <pubDate>Wed, 23 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/redis/</guid>
      <description>Remote Dictionary Server의 약자로서, &amp;#34;키-값&amp;#34; 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터베이스 관리 시스템</description>
    </item>
    <item>
      <title>Column Oriented</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/column-oriented/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/column-oriented/</guid>
      <description>컬럼형 데이터베이스(Columnar database) 또는 컬럼 지향 데이터베이스(Column-oriented database)는 NoSQL 데이터베이스의 한 유형으로, 데이터를 행이 아닌 열 단위로 저장하는 특징을 가지고 있다.</description>
    </item>
    <item>
      <title>Graph</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/graph/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/graph/</guid>
      <description>그래프 데이터베이스는 NoSQL 데이터베이스의 한 유형으로, 데이터를 노드(Node)와 엣지(Edge)로 구성된 그래프 구조로 저장하고 관리하는 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Time-Series</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/time-series/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/time-series/</guid>
      <description>시계열 데이터베이스(Time Series Database, TSDB)는 NoSQL 데이터베이스의 한 종류로, 시간에 따라 변화하는 데이터를 효율적으로 저장하고 관리하기 위해 특별히 설계된 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Vector</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/vector/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/vector/</guid>
      <description>벡터 데이터베이스(Vector Database)는 NoSQL 데이터베이스의 한 종류로, 고차원 벡터 데이터를 효율적으로 저장하고 검색하기 위해 설계된 특수한 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>NoSQL</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/</link>
      <pubDate>Wed, 23 Oct 2024 06:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/</guid>
      <description>NoSQL(Not Only SQL)은 전통적인 관계형 데이터베이스와는 다른 방식으로 데이터를 저장하고 처리하는 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Document Oriented</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/document-oriented/</link>
      <pubDate>Wed, 23 Oct 2024 06:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/document-oriented/</guid>
      <description>Document-Oriented Database는 NoSQL 데이터베이스의 한 유형으로, 데이터를 문서 형태로 저장하고 관리하는 시스템이다.</description>
    </item>
    <item>
      <title>Key-Value</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/</link>
      <pubDate>Wed, 23 Oct 2024 06:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/</guid>
      <description>In-Memory 데이터베이스는 데이터를 주 메모리(RAM)에 저장하고 관리하는 NoSQL 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Valkey</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/valkey/</link>
      <pubDate>Wed, 23 Oct 2024 01:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/valkey/</guid>
      <description>Valkey는 선택적 내구성을 갖춘 분산형 인메모리 키-값 데이터베이스, 캐시 및 메시지 브로커로 사용되는 오픈 소스 인메모리 스토리지.</description>
    </item>
    <item>
      <title>Cardinality</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/cardinality/</link>
      <pubDate>Tue, 22 Oct 2024 15:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/cardinality/</guid>
      <description>두 엔티티 간의 최대 연관성 혹은 특정 컬럼에 존재하는 고유한 값의 개수를 의미한다.</description>
    </item>
    <item>
      <title>분산 쿼리 (distributed query)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-query/</link>
      <pubDate>Tue, 22 Oct 2024 09:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-query/</guid>
      <description>여러 노드에 분산된 데이터를 대상으로 쿼리를 실행하고 결과를 얻는 과정</description>
    </item>
    <item>
      <title>분산 트랜잭션 (Distributed transaction)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-transaction/</link>
      <pubDate>Tue, 22 Oct 2024 09:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-transaction/</guid>
      <description>여러 분산된 데이터베이스 노드에서 수행되는 하나의 논리적 작업 단위를 의미한다</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링(Database Clustering)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/database-clustering/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/database-clustering/</guid>
      <description>하나의 데이터베이스를 여러 개의 서버 또는 인스턴스로 구성하여 운영하는 기술</description>
    </item>
    <item>
      <title>데이터베이스 파티셔닝 (Database Partitioning)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/partitioning/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/partitioning/</guid>
      <description>파티셔닝은 큰 테이블이나 인덱스를 더 작고 관리하기 쉬운 단위로 나누는 것</description>
    </item>
    <item>
      <title>샤딩 (sharding)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sharding/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sharding/</guid>
      <description>대규모 데이터베이스 시스템에서 데이터를 수평적으로 분할하여 여러 서버에 분산 저장하는 기술</description>
    </item>
    <item>
      <title>데이터베이스 캐싱 (Database Caching)</title>
      <link>https://buenhyden.github.io/posts/system-design/caching/types/database-caching/</link>
      <pubDate>Tue, 22 Oct 2024 06:25:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/caching/types/database-caching/</guid>
      <description>자주 사용되는 데이터를 빠르게 접근할 수 있는 메모리에 임시로 저장하는 기술</description>
    </item>
    <item>
      <title>분산 데이터베이스 (Distributed Database)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/</link>
      <pubDate>Tue, 22 Oct 2024 06:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/</guid>
      <description>물리적으로 여러 위치에 분산되어 있지만, 논리적으로는 하나의 데이터베이스처럼 동작하는 시스템</description>
    </item>
    <item>
      <title>데이터베이스 최적화 (Database Optimization)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/database-optimization/</link>
      <pubDate>Tue, 22 Oct 2024 06:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/database-optimization/</guid>
      <description>데이터베이스 시스템의 성능을 향상시키고 효율성을 높이기 위한 다양한 기법과 프로세스를 의미한다.</description>
    </item>
    <item>
      <title>SingleStore</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/singlestore/</link>
      <pubDate>Tue, 22 Oct 2024 03:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/singlestore/</guid>
      <description>&lt;h2 id=&#34;singlestore&#34;&gt;SingleStore&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;img alt=&#34;SingleStore&#34; loading=&#34;lazy&#34; src=&#34;https://buenhyden.github.io/img/singlestore-connect_diagram_cloud_img-1.webp&#34;&gt;&lt;figcaption&gt;https://www.singlestore.com/blog/singlestore-connect-for-real-time-enterprises/&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>데이터베이스 인덱싱 (Database Indexing)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/indexes/</link>
      <pubDate>Tue, 22 Oct 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/indexes/</guid>
      <description>인덱스는 테이블의 특정 컬럼에 대한 검색을 빠르게 수행할 수 있도록 도와주는 자료 구조</description>
    </item>
  </channel>
</rss>
