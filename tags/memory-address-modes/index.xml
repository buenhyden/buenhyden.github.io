<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Memory-Address-Modes</title><link>https://buenhyden.github.io/tags/memory-address-modes/</link><description>Recent content in Memory-Address-Modes on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 18 Dec 2024 08:04:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/memory-address-modes/index.xml" rel="self" type="application/rss+xml"/><item><title>메모리 주소 지정 방식 (Memory Address Modes)</title><link>https://buenhyden.github.io/posts/computer-system/computer-architecture/memory-architecture/memory-address-modes/</link><pubDate>Wed, 18 Dec 2024 08:04:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/computer-system/computer-architecture/memory-architecture/memory-address-modes/</guid><description>
&lt;h2>메모리 주소 지정 방식 (Memory Address Modes)&lt;/h2>&lt;p>메모리 주소 지정 방식(Memory Address Modes)은 CPU가 메모리의 특정 위치에 어떻게 접근하는지를 나타내는 방법이다.&lt;/p>
&lt;h3>유형&lt;/h3>&lt;ol>
&lt;li>
&lt;p>즉시 주소 지정 방식 (Immediate Addressing):&lt;/p>
&lt;ul>
&lt;li>데이터가 명령어 자체에 포함되어 있다.&lt;/li>
&lt;li>예: &amp;ldquo;5를 더해라&amp;rdquo; 라고 직접 지시하는 것과 같다.&lt;/li>
&lt;li>가장 빠르지만, 큰 데이터를 다루기 어렵다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>직접 주소 지정 방식 (Direct Addressing):&lt;/p>
&lt;ul>
&lt;li>명령어에 데이터가 있는 메모리 주소를 직접 지정한다.&lt;/li>
&lt;li>예: &amp;ldquo;주소 100번에 있는 값을 가져와라&amp;rdquo; 라고 지시하는 것과 같다.&lt;/li>
&lt;li>간단하고 이해하기 쉽다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>간접 주소 지정 방식 (Indirect Addressing):&lt;/p>
&lt;ul>
&lt;li>명령어에 주소를 담고 있는 메모리 위치를 지정한다.&lt;/li>
&lt;li>예: &amp;ldquo;주소 100번에 적힌 주소로 가서 그 값을 가져와라&amp;rdquo; 라고 지시하는 것과 같다.&lt;/li>
&lt;li>더 많은 메모리 위치에 접근할 수 있지만, 약간 복잡하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인덱스 주소 지정 방식 (Indexed Addressing):&lt;/p>
&lt;ul>
&lt;li>기본 주소에 인덱스를 더해 실제 주소를 계산한다.&lt;/li>
&lt;li>예: &amp;ldquo;주소 100번부터 시작해서 3번째 위치의 값을 가져와라&amp;rdquo; 라고 지시하는 것과 같다.&lt;/li>
&lt;li>배열이나 리스트 같은 데이터 구조를 다룰 때 유용하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>