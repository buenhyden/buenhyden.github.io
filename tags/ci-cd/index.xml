<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – CI-CD</title><link>https://buenhyden.github.io/tags/ci-cd/</link><description>Recent content in CI-CD on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 24 Sep 2024 15:44:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/ci-cd/index.xml" rel="self" type="application/rss+xml"/><item><title>Jenkins</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/jenkins/</link><pubDate>Tue, 24 Sep 2024 15:44:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/jenkins/</guid><description>
&lt;h2>Jenkins&lt;/h2>&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>오픈소스: 무료로 사용 가능하며 커뮤니티의 지원을 받습니다.&lt;/li>
&lt;li>플러그인 생태계: 다양한 플러그인을 통해 기능을 확장할 수 있습니다.&lt;/li>
&lt;li>분산 빌드: 여러 머신에서 빌드 작업을 분산하여 처리할 수 있습니다.&lt;/li>
&lt;li>크로스 플랫폼: Windows, Linux, macOS 등 다양한 운영 체제에서 실행 가능합니다.&lt;/li>
&lt;li>웹 인터페이스: 사용하기 쉬운 웹 기반 인터페이스를 제공합니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 기능&lt;/h3>&lt;ol>
&lt;li>자동화된 빌드 및 테스트&lt;/li>
&lt;li>지속적 통합 및 지속적 배포(CI/CD)&lt;/li>
&lt;li>코드 품질 분석&lt;/li>
&lt;li>배포 자동화&lt;/li>
&lt;li>모니터링 및 알림&lt;/li>
&lt;/ol>
&lt;h3>구성 요소&lt;/h3>&lt;ol>
&lt;li>Jenkins 서버: 중앙 제어 서버로 작업을 조정합니다.&lt;/li>
&lt;li>노드(Agents): 실제 작업을 수행하는 워커 머신입니다.&lt;/li>
&lt;li>잡(Jobs): 수행할 작업의 단위입니다.&lt;/li>
&lt;li>플러그인: Jenkins의 기능을 확장하는 추가 모듈입니다.&lt;/li>
&lt;li>파이프라인: 작업의 흐름을 정의하는 스크립트입니다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>유연성과 확장성&lt;/li>
&lt;li>광범위한 플러그인 지원&lt;/li>
&lt;li>활발한 커뮤니티 지원&lt;/li>
&lt;li>무료 오픈소스&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>초기 설정이 복잡할 수 있음&lt;/li>
&lt;li>학습 곡선이 가파름&lt;/li>
&lt;li>보안 설정에 주의가 필요함&lt;/li>
&lt;li>리소스 소비가 높을 수 있음&lt;/li>
&lt;/ol>
&lt;h3>Jenkins 설정 방법&lt;/h3>&lt;ol>
&lt;li>Jenkins 설치&lt;/li>
&lt;li>초기 설정 및 플러그인 설치&lt;/li>
&lt;li>보안 설정&lt;/li>
&lt;li>노드 구성&lt;/li>
&lt;li>잡 생성 및 파이프라인 설정&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;/h3>&lt;h4>간단한 CI/CD 파이프라인 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="line">&lt;span class="cl">&lt;span class="n">pipeline&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">agent&lt;/span> &lt;span class="n">any&lt;/span> &lt;span class="c1">// 어떤 Jenkins 에이전트에서도 실행 가능하도록 설정
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 환경변수 설정
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">environment&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DOCKER_IMAGE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;my-app:latest&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실행 단계 정의
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">stages&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 소스 코드 체크아웃 단계
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">stage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Checkout&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">steps&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// GitHub 저장소에서 코드 가져오기
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">git&lt;/span> &lt;span class="s1">&amp;#39;https://github.com/your-repo/your-project.git&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// maven 빌드 단계
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">stage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Build&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">steps&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Maven을 사용하여 프로젝트 빌드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh&lt;/span> &lt;span class="s1">&amp;#39;mvn clean package&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 테스트 단계
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">stage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Test&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">steps&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Maven을 사용하여 단위 테스트 실행
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh&lt;/span> &lt;span class="s1">&amp;#39;mvn test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Docker 이미지 빌드 단계
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">stage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Docker Build&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">steps&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Dockerfile을 사용하여 Docker 이미지 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh&lt;/span> &lt;span class="s1">&amp;#39;docker build -t your-image:${BUILD_NUMBER} .&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 배포 단계
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">stage&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Deploy&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">steps&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 생성된 Docker 이미지를 레지스트리에 푸시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh&lt;/span> &lt;span class="s1">&amp;#39;docker push your-registry/your-image:${BUILD_NUMBER}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Kubernetes에 새 이미지 배포
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh&lt;/span> &lt;span class="s1">&amp;#39;kubectl set image deployment/your-app your-container=your-registry/your-image:${BUILD_NUMBER}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 파이프라인 실행 후 작업
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">post&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">always&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">junit&lt;/span> &lt;span class="s1">&amp;#39;**/target/surefire-reports/*.xml&amp;#39;&lt;/span> &lt;span class="c1">// 테스트 결과 보고서 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">success&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 성공 시 슬랙 알림
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">slackSend&lt;/span> &lt;span class="nl">channel:&lt;/span> &lt;span class="s1">&amp;#39;#deploy&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">color:&lt;/span> &lt;span class="s1">&amp;#39;good&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">message:&lt;/span> &lt;span class="s2">&amp;#34;배포 성공: ${env.JOB_NAME} ${env.BUILD_NUMBER}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">failure&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실패 시 슬랙 알림
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">slackSend&lt;/span> &lt;span class="nl">channel:&lt;/span> &lt;span class="s1">&amp;#39;#deploy&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">color:&lt;/span> &lt;span class="s1">&amp;#39;danger&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nl">message:&lt;/span> &lt;span class="s2">&amp;#34;배포 실패: ${env.JOB_NAME} ${env.BUILD_NUMBER}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>Checkout: GitHub에서 소스 코드를 가져옵니다.&lt;/li>
&lt;li>Build: Maven을 사용하여 프로젝트를 빌드합니다.&lt;/li>
&lt;li>Test: 단위 테스트를 실행합니다.&lt;/li>
&lt;li>Docker Build: 애플리케이션의 Docker 이미지를 생성합니다.&lt;/li>
&lt;li>Deploy: 생성된 Docker 이미지를 레지스트리에 푸시하고 Kubernetes에 배포합니다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>Jenkins&lt;/h3>&lt;p>&lt;a href="https://www.jenkins.io/" target="_blank" rel="noopener">Jenkins Official Homepage&lt;/a>&lt;/p></description></item><item><title>Github Actions</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/github-actions/</link><pubDate>Tue, 24 Sep 2024 03:10:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/github-actions/</guid><description>
&lt;h2>Github Actions&lt;/h2>&lt;p>GitHub에서 제공하는 CI/CD 자동화 도구로, 코드 저장소에서 직접 소프트웨어 개발 워크플로우를 자동화할 수 있다.&lt;/p>
&lt;h3>주요 기능&lt;/h3>&lt;ol>
&lt;li>자동화된 워크플로우: 코드 변경, 풀 리퀘스트 생성, 이슈 생성 등 다양한 이벤트에 반응하여 자동으로 워크플로우를 실행할 수 있습니다&lt;/li>
&lt;li>CI/CD 파이프라인: 빌드, 테스트, 배포 과정을 자동화하여 지속적 통합 및 배포를 구현할 수 있습니다&lt;/li>
&lt;li>다양한 환경 지원: Linux, Windows, macOS 가상 머신에서 워크플로우를 실행할 수 있으며, 자체 호스팅 러너도 지원합니다&lt;/li>
&lt;li>재사용 가능한 액션: 복잡하지만 자주 반복되는 작업을 수행하는 사용자 지정 애플리케이션인 &amp;lsquo;액션&amp;rsquo;을 사용하여 워크플로우를 간소화할 수 있습니다&lt;/li>
&lt;li>GitHub 통합: GitHub 저장소와 완벽하게 통합되어 있어 코드 관리와 자동화를 원활하게 연결할 수 있습니다&lt;/li>
&lt;li>병렬 작업 실행: 여러 작업을 동시에 실행하여 효율성을 높일 수 있습니다&lt;/li>
&lt;li>보안 및 액세스 제어: GitHub의 보안 기능과 통합되어 안전한 워크플로우 실행을 보장합니다&lt;/li>
&lt;li>상세한 로깅 및 모니터링: 워크플로우 실행 상태와 결과를 쉽게 확인하고 문제를 진단할 수 있습니다&lt;/li>
&lt;/ol>
&lt;h3>구성 요소&lt;/h3>&lt;ol>
&lt;li>워크플로우(Workflow): 자동화된 전체 프로세스를 정의하는 가장 상위 개념입니다. YAML 파일로 작성되며 하나 이상의 작업을 포함합니다.&lt;/li>
&lt;li>이벤트(Event): 워크플로우를 트리거하는 특정 활동입니다. 예를 들어 push, pull request, issue 생성 등이 있습니다.&lt;/li>
&lt;li>작업(Job): 동일한 러너에서 실행되는 단계들의 집합입니다. 기본적으로 병렬로 실행되지만 순차적으로 실행되도록 설정할 수도 있습니다.&lt;/li>
&lt;li>단계(Step): 작업 내에서 실행되는 개별 작업 단위입니다. 쉘 명령어를 실행하거나 액션을 사용할 수 있습니다.&lt;/li>
&lt;li>액션(Action): 워크플로우에서 자주 반복되는 작업을 재사용 가능한 단위로 만든 것입니다. GitHub Marketplace에서 찾아 사용하거나 직접 만들 수 있습니다.&lt;/li>
&lt;li>러너(Runner): 워크플로우 작업이 실행되는 서버입니다. GitHub에서 호스팅하는 러너를 사용하거나 자체 호스팅 러너를 설정할 수 있습니다.&lt;br>
서로 연결되어 GitHub Actions의 자동화된 CI/CD 파이프라인을 구성한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>자동화: 코드 빌드, 테스트, 배포 등의 워크플로우를 자동화하여 시간과 노력을 절약할 수 있습니다&lt;/li>
&lt;li>GitHub와의 통합: GitHub 저장소와 완벽하게 통합되어 있어 개발 프로세스를 원활하게 관리할 수 있습니다&lt;/li>
&lt;li>유연성과 사용자 정의: YAML 파일을 사용하여 워크플로우를 쉽게 구성하고 사용자 정의할 수 있습니다&lt;/li>
&lt;li>광범위한 액션 생태계: GitHub Marketplace에서 다양한 사전 구축된 액션을 사용하거나 직접 만들 수 있습니다&lt;/li>
&lt;li>실시간 피드백: 풀 리퀘스트와 커밋에 대한 워크플로우 상태를 즉시 확인할 수 있습니다&lt;/li>
&lt;li>확장성: 다양한 규모의 프로젝트에 적용 가능하며, 여러 운영 체제와 환경에서 실행할 수 있습니다&lt;/li>
&lt;li>비용 효율성: 공개 저장소에서는 무료로 사용할 수 있으며, 개인 저장소에서도 일정량의 무료 사용 시간을 제공합니다&lt;/li>
&lt;li>커뮤니티 지원: 활발한 커뮤니티를 통해 다양한 액션과 지원을 받을 수 있습니다&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>복잡한 워크플로우 구성: 복잡한 워크플로우를 설계하고 유지보수하는 것이 어려울 수 있습니다, 특히 초보자에게는 더욱 그렇습니다&lt;/li>
&lt;li>리소스 제한: 실행 시간, 디스크 공간 등에 제한이 있어 리소스 집약적인 워크플로우에는 제약이 있을 수 있습니다&lt;/li>
&lt;li>GitHub 의존성: GitHub 플랫폼에 강하게 의존하기 때문에, GitHub의 중단이나 장애가 CI/CD 워크플로우에 영향을 줄 수 있습니다&lt;/li>
&lt;li>디버깅의 어려움: 워크플로우 실행 중 발생하는 문제를 디버깅하는 것이 어려울 수 있습니다&lt;/li>
&lt;li>학습 곡선: YAML 문법과 CI/CD 개념에 익숙하지 않은 사용자에게는 상당한 학습 시간이 필요할 수 있습니다&lt;/li>
&lt;li>실행 시간 제한: 각 작업은 최대 6시간까지만 실행할 수 있어, 매우 긴 작업에는 적합하지 않을 수 있습니다&lt;/li>
&lt;li>API 요청 제한: 시간당 API 요청 횟수에 제한이 있어, 대규모 프로젝트에서는 문제가 될 수 있습니다&lt;/li>
&lt;li>안정성 문제: 때때로 발생하는 중단이나 성능 저하로 인해 작업 시간을 잃을 수 있습니다&lt;/li>
&lt;/ol>
&lt;h3>워크플로우 설정 방법&lt;/h3>&lt;ol>
&lt;li>워크플로우 파일 생성:&lt;br>
프로젝트의 &lt;code>.github/workflows/&lt;/code> 디렉토리에 YAML 파일을 생성합니다. 이 파일에 워크플로우를 정의합니다.&lt;/li>
&lt;li>워크플로우 정의:&lt;br>
YAML 파일에 원하는 자동화 작업을 정의합니다. 주요 구성 요소는 다음과 같습니다:
&lt;ul>
&lt;li>이벤트 트리거 설정 (예: push, pull request 등)&lt;/li>
&lt;li>작업(jobs) 정의&lt;/li>
&lt;li>실행 환경 지정 (예: ubuntu-latest)&lt;/li>
&lt;li>단계(steps) 정의&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>커밋 및 푸시:&lt;br>
정의된 워크플로우 파일을 저장소에 커밋하고 푸시합니다.&lt;/li>
&lt;li>실행 확인:&lt;br>
GitHub 저장소의 Actions 탭에서 워크플로우 실행 상태를 확인할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h4>자주 사용하는 YAML 파일 예시&lt;/h4>&lt;ol>
&lt;li>&lt;code>name&lt;/code>: 워크플로우의 이름을 지정합니다.&lt;/li>
&lt;li>&lt;code>on&lt;/code>: 워크플로우를 트리거하는 이벤트를 정의합니다. 여기서는 main 브랜치에 대한 push와 pull request 이벤트에 반응합니다.&lt;/li>
&lt;li>&lt;code>jobs&lt;/code>: 실행할 작업들을 정의합니다. 여기서는 &amp;ldquo;build&amp;quot;라는 하나의 작업만 있습니다.&lt;/li>
&lt;li>&lt;code>runs-on&lt;/code>: 작업을 실행할 환경을 지정합니다. 여기서는 최신 Ubuntu 환경을 사용합니다.&lt;/li>
&lt;li>&lt;code>steps&lt;/code>: 작업 내에서 실행할 단계들을 정의합니다. 각 단계는 이름, 사용할 액션 또는 실행할 명령어를 포함합니다.&lt;/li>
&lt;li>&lt;code>uses&lt;/code>: 미리 정의된 액션을 사용합니다. 예를 들어, &lt;code>actions/checkout@v2&lt;/code>는 저장소의 코드를 체크아웃합니다.&lt;/li>
&lt;li>&lt;code>run&lt;/code>: 직접 셸 명령어를 실행합니다.&lt;/li>
&lt;li>&lt;code>if&lt;/code>: 조건부로 단계를 실행합니다. 여기서는 main 브랜치에 푸시된 경우에만 배포 단계를 실행합니다.&lt;/li>
&lt;li>&lt;code>env&lt;/code>: 환경 변수를 설정합니다. 여기서는 비밀 값을 환경 변수로 사용합니다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">CI/CD Pipeline&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout Repository&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Set up Node.js&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-node@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;14&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Install Dependencies &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm install&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run Tests&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy to Production&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PRODUCTION_URL&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.PRODUCTION_URL }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> echo &amp;#34;Deploying to production at $PRODUCTION_URL&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> # 프로덕션 환경에 배포하는 명령어&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>기본적인 Node.js 프로젝트 CI 워크플로우&lt;/h4>&lt;ul>
&lt;li>여러 Node.js 버전에서 테스트&lt;/li>
&lt;li>자동 의존성 설치 및 빌드&lt;/li>
&lt;li>테스트 자동 실행&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Node.js CI&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 워크플로우 트리거 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 실행 환경 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">14.&lt;/span>&lt;span class="l">x, 16.x, 18.x] &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트할 Node.js 버전들&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 소스코드 체크아웃&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Use Node.js ${{ matrix.node-version }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-node@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ matrix.node-version }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm ci &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 의존성 설치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm run build &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 빌드&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm test &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트 실행&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Docker 이미지 빌드 및 배포 워크플로우&lt;/h4>&lt;ul>
&lt;li>Docker Hub 자동 인증&lt;/li>
&lt;li>이미지 자동 빌드 및 푸시&lt;/li>
&lt;li>보안 자격 증명 사용&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Docker Build and Push&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Login to Docker Hub &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Docker Hub 로그인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/login-action@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DOCKERHUB_USERNAME }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.DOCKERHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build and push &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 이미지 빌드 및 푸시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/build-push-action@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">user/app:latest&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>자동화된 릴리스 생성 워크플로우&lt;/h4>&lt;ul>
&lt;li>태그 기반 트리거&lt;/li>
&lt;li>자동 릴리스 노트 생성&lt;/li>
&lt;li>GitHub 릴리스 자동화&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Create Release&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;v*&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># v로 시작하는 모든 태그에 대해 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Create Release &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># GitHub 릴리스 생성&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/create-release@v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">GITHUB_TOKEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tag_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">release_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Release ${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">draft&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prerelease&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>스케줄링된 작업 워크플로우&lt;/h4>&lt;ul>
&lt;li>Cron 기반 실행&lt;/li>
&lt;li>정기적인 유지보수 작업&lt;/li>
&lt;li>아티팩트 관리&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Scheduled Tasks&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">schedule&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">cron&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0 0 * * *&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 매일 자정에 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cleanup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Cleanup old artifacts &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 오래된 아티팩트 정리&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">c-hive/gha-remove-artifacts@v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;1 week&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">skip-recent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>PR 자동 리뷰 워크플로우&lt;/h4>&lt;ul>
&lt;li>자동 코드 검사&lt;/li>
&lt;li>테스트 실행&lt;/li>
&lt;li>코드 커버리지 리포트 생성&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PR Review&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">types&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">opened, synchronize]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">review&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run ESLint &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># ESLint 검사&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> npm install
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> npm run lint
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run tests &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Code Coverage &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 코드 커버리지 리포트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">codecov/codecov-action@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.CODECOV_TOKEN }}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>프라이빗 컨테이너 레지스트리를 사용하는 워크플로우 설정 방법&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build and Push to Harbor Registry&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 특정 태그에 대해서만 실행하고 싶다면 아래처럼 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># tags:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - &amp;#39;v*&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Harbor 레지스트리 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">REGISTRY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">harbor.example.com &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Harbor 레지스트리 주소&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">REPOSITORY&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">project-name/application &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Harbor 프로젝트와 이미지명&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">IMAGE_TAG&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.sha }} &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 이미지 태그 (커밋 해시 사용)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build-and-push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># QEMU 설정 (다중 아키텍처 빌드시 필요)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Set up QEMU&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/setup-qemu-action@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Docker Buildx 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Set up Docker Buildx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/setup-buildx-action@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Harbor 레지스트리 로그인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Login to Harbor&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/login-action@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">registry&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ env.REGISTRY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.HARBOR_USERNAME }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.HARBOR_PASSWORD }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 도커 메타데이터 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Extract Docker metadata&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">meta&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/metadata-action@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">images&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ env.REGISTRY }}/${{ env.REPOSITORY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> type=raw,value=${{ env.IMAGE_TAG }}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> type=raw,value=latest
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> type=ref,event=branch
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> type=ref,event=tag&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 이미지 빌드 및 푸시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build and push Docker image&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker/build-push-action@v4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">context&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ steps.meta.outputs.tags }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ steps.meta.outputs.labels }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">platforms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">linux/amd64,linux/arm64 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 필요한 플랫폼 지정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cache-from&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:buildcache&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cache-to&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY }}:buildcache,mode=max&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 배포 결과 알림 (선택사항)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Notify deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">success()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> echo &amp;#34;Image successfully built and pushed to Harbor:&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> echo &amp;#34;Registry: ${{ env.REGISTRY }}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> echo &amp;#34;Repository: ${{ env.REPOSITORY }}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> echo &amp;#34;Tags: ${{ steps.meta.outputs.tags }}&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>주요 설정 사항&lt;/h5>&lt;ol>
&lt;li>
&lt;p>환경 변수 설정&lt;/p>
&lt;ul>
&lt;li>&lt;code>REGISTRY&lt;/code>: Harbor 레지스트리의 URL을 설정합니다.&lt;/li>
&lt;li>&lt;code>REPOSITORY&lt;/code>: Harbor 내의 프로젝트명과 이미지명을 설정합니다.&lt;/li>
&lt;li>&lt;code>IMAGE_TAG&lt;/code>: 이미지 태그 전략을 설정합니다 (여기서는 Git commit hash를 사용).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>GitHub Secrets 설정&lt;br>
GitHub 레포지토리의 Settings -&amp;gt; Secrets and variables -&amp;gt; Actions에서 다음 시크릿을 설정해야 합니다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>HARBOR_USERNAME: Harbor 레지스트리 사용자명
HARBOR_PASSWORD: Harbor 레지스트리 비밀번호 또는 토큰&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>주요 기능 설명&lt;/p>
&lt;ul>
&lt;li>멀티 아키텍처 지원 (QEMU 및 Buildx 설정)&lt;/li>
&lt;li>레이어 캐싱을 통한 빌드 최적화&lt;/li>
&lt;li>다양한 태깅 전략 지원&lt;/li>
&lt;li>빌드 결과 알림&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>태그 전략&lt;br>
이 워크플로우는 다음과 같은 태그들을 생성합니다:&lt;/p>
&lt;ul>
&lt;li>Git commit hash 기반 태그&lt;/li>
&lt;li>latest 태그&lt;/li>
&lt;li>브랜치명 기반 태그&lt;/li>
&lt;li>Git 태그 기반 태그 (태그 푸시 시)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안 고려사항&lt;/p>
&lt;ul>
&lt;li>Harbor의 자체 서명 인증서를 사용하는 경우, 추가적인 인증서 설정이 필요할 수 있습니다.&lt;/li>
&lt;li>프라이빗 레지스트리 접근을 위한 자격 증명은 반드시 GitHub Secrets를 통해 관리해야 합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>확인할 사항들&lt;/p>
&lt;ol>
&lt;li>Harbor 레지스트리 URL을 올바르게 설정했는지 확인&lt;/li>
&lt;li>프로젝트명과 이미지명이 Harbor의 설정과 일치하는지 확인&lt;/li>
&lt;li>필요한 GitHub Secrets가 모두 설정되어 있는지 확인&lt;/li>
&lt;li>Harbor 프로젝트의 접근 권한이 올바르게 설정되어 있는지 확인&lt;/li>
&lt;/ol>
&lt;h3>커스텀 액션을 만드는 과정&lt;/h3>&lt;p>커스텀 액션은 두 가지 방식으로 만들 수 있습니다:&lt;/p>
&lt;ol>
&lt;li>별도의 레포지토리에 생성
&lt;ul>
&lt;li>버전 관리와 재사용이 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>워크플로우가 있는 프로젝트 내부에 생성
&lt;ul>
&lt;li>&lt;code>.github/actions/&lt;/code> 디렉토리에 위치시켜야 함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>커스텀 액션 생성 과정&lt;/h4>&lt;ol>
&lt;li>메타데이터 파일 작성:
&lt;ul>
&lt;li>&lt;code>action.yml&lt;/code> 또는 &lt;code>action.yaml&lt;/code> 파일을 생성합니다.&lt;/li>
&lt;li>액션의 이름, 설명, 입력, 출력 등을 정의합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>액션 유형 선택:
&lt;ul>
&lt;li>Docker 컨테이너 액션&lt;/li>
&lt;li>JavaScript 액션&lt;/li>
&lt;li>복합 액션&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>액션 로직 구현:
&lt;ul>
&lt;li>선택한 유형에 따라 코드를 작성합니다.&lt;/li>
&lt;li>Docker 액션의 경우 Dockerfile 작성&lt;/li>
&lt;li>JavaScript 액션의 경우 index.js 파일 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>README 파일 작성:
&lt;ul>
&lt;li>액션 사용 방법, 입력/출력 인자, 예시 등을 포함합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 및 빌드:
&lt;ul>
&lt;li>액션을 로컬에서 테스트하고 필요한 경우 빌드합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>버전 관리:
&lt;ul>
&lt;li>시맨틱 버저닝을 사용하여 액션 버전을 관리합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GitHub Marketplace에 게시 (선택사항):
&lt;ul>
&lt;li>액션을 공개하고 싶다면 Marketplace에 게시할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>예시 &lt;code>action.yml&lt;/code> 파일&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Hello World JS Action&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Greet someone and record the time&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">inputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">who-to-greet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;Who to greet&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">required&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;World&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">outputs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">time&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;The time we greeted you&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">runs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">using&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;node16&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">main&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;index.js&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>예시의 설정 파일을 이용하여 워크플로우에서 커스텀 액션을 사용하고자 할 때&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 해당 디렉토리 내의 `action.yml` 파일을 자동으로 찾아 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 여러 커스텀 액션이 있을 때 혼란 가능성 있음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Run Custom Greeting&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./.github/actions/ &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 로컬 액션 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;GitHub Actions&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 해당 디렉토리 내의 특정 액션을 직접 지정 &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 더 명확하고 유지보수가 용이&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Use custom greeting action&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./.github/actions/action &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 커스텀 액션 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;GitHub Actions&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>다른 저장소의 액션을 사용하는 방법&lt;/h4>&lt;ol>
&lt;li>특정 버전(태그) 사용:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/hello-world-action@v1 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># v1 태그 사용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>특정 커밋 SHA 사용:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/hello-world-action@67cbd44 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 커밋 해시 사용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="3">
&lt;li>브랜치 사용:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/hello-world-action@main &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># main 브랜치 사용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>보안과 안정성을 위해 특정 버전이나 커밋 SHA를 사용하는 것을 권장합니다. 브랜치를 사용하면 예기치 않은 변경으로 인한 워크플로우 실패 위험이 있습니다.&lt;/p>
&lt;h4>동일한 GitHub 계정의 다른 저장소에 있는 액션을 사용하는 경우의 설정 방법&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{&lt;span class="l">owner}/{repo-name}/path/to/action@{ref}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 메인 브랜치 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-username/shared-actions/.github/actions/hello-world@main&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 특정 태그 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-username/shared-actions/.github/actions/hello-world@v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 특정 커밋 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-username/shared-actions/.github/actions/hello-world@67cbd44&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>주의: 저장소가 private인 경우, Personal Access Token(PAT)이 필요할 수 있습니다.&lt;/p>
&lt;h3>테스트를 자동화하는 방법&lt;/h3>&lt;ol>
&lt;li>
&lt;p>워크플로우 파일 생성:&lt;br>
&lt;code>.github/workflows&lt;/code> 디렉토리에 YAML 파일(예: &lt;code>test.yml&lt;/code>)을 생성합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>트리거 이벤트 설정:&lt;br>
&lt;code>on&lt;/code> 키워드를 사용하여 워크플로우를 실행할 이벤트를 지정합니다. 예를 들어, push 이벤트나 pull request 이벤트에 반응하도록 설정할 수 있습니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>작업 정의:&lt;br>
&lt;code>jobs&lt;/code> 섹션에서 테스트 작업을 정의합니다. 실행 환경(예: ubuntu-latest)을 지정합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>단계 설정:&lt;/p>
&lt;ul>
&lt;li>코드 체크아웃: &lt;code>actions/checkout@v3&lt;/code>를 사용하여 저장소 코드를 가져옵니다.&lt;/li>
&lt;li>환경 설정: 필요한 런타임(예: Node.js)을 설정합니다.&lt;/li>
&lt;li>의존성 설치: 필요한 패키지를 설치합니다.&lt;/li>
&lt;li>테스트 실행: 테스트 명령어를 실행합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 결과 처리:&lt;br>
테스트 결과를 GitHub PR 코멘트로 추가하거나, 외부 도구로 보고할 수 있습니다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">push, pull_request]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-node@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;14&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm ci&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm test&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;p>&lt;a href="https://yozm.wishket.com/magazine/detail/1666/" target="_blank" rel="noopener">GitHub Actions로 App 자동으로 배포하기&lt;/a>&lt;br>
&lt;a href="https://github.com/features/actions" target="_blank" rel="noopener">GitHub Actions · GitHub&lt;/a>&lt;br>
&lt;a href="https://docs.github.com/ko/actions" target="_blank" rel="noopener">GitHub Actions 설명서 - GitHub Docs&lt;/a>&lt;/p></description></item><item><title>Gitlab CI</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/gitlab-ci/</link><pubDate>Tue, 24 Sep 2024 03:10:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/gitlab-ci/</guid><description>
&lt;h2>Gitlab CI&lt;/h2>&lt;p>GitLab에 내장된 지속적 통합/배포 도구로, &lt;code>.gitlab-ci.yml&lt;/code> 파일을 통해 파이프라인을 정의하고 관리&lt;/p>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>통합성: GitLab 저장소와 긴밀하게 통합되어 있어 별도의 도구 없이 CI/CD 파이프라인을 구축할 수 있습니다.&lt;/li>
&lt;li>유연성: YAML 파일을 통해 파이프라인을 구성할 수 있어 다양한 프로젝트 요구사항에 맞춤 설정이 가능합니다.&lt;/li>
&lt;li>확장성: 다양한 Runner 유형을 지원하여 다양한 환경에서 작업을 실행할 수 있습니다.&lt;/li>
&lt;li>가시성: 파이프라인 실행 상태와 결과를 GitLab 인터페이스에서 쉽게 확인할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>기능&lt;/h3>&lt;ol>
&lt;li>자동 빌드 및 테스트: 코드 변경 시 자동으로 빌드 및 테스트를 실행합니다.&lt;/li>
&lt;li>환경 배포: 다양한 환경(개발, 스테이징, 프로덕션 등)에 자동으로 배포할 수 있습니다.&lt;/li>
&lt;li>아티팩트 관리: 빌드 결과물을 저장하고 관리할 수 있습니다.&lt;/li>
&lt;li>병렬 실행: 여러 작업을 동시에 실행하여 파이프라인 속도를 향상시킵니다.&lt;/li>
&lt;li>환경 변수 관리: 민감한 정보를 안전하게 저장하고 사용할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>구성요소&lt;/h3>&lt;ol>
&lt;li>.gitlab-ci.yml: 파이프라인 구성 파일&lt;/li>
&lt;li>Runners: 작업을 실행하는 에이전트&lt;/li>
&lt;li>Jobs: 실행할 개별 작업&lt;/li>
&lt;li>Stages: 작업의 실행 순서를 정의하는 단계&lt;/li>
&lt;li>Pipeline: 전체 CI/CD 프로세스&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>GitLab과의 긴밀한 통합&lt;/li>
&lt;li>쉬운 설정과 사용&lt;/li>
&lt;li>확장성과 유연성&lt;/li>
&lt;li>무료로 사용 가능한 기능이 많음&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;/h3>&lt;ul>
&lt;li>GitLab에 종속적&lt;/li>
&lt;li>복잡한 워크플로우의 경우 설정이 복잡해질 수 있음&lt;/li>
&lt;li>일부 고급 기능은 유료 버전에서만 사용 가능&lt;/li>
&lt;/ul>
&lt;h3>설정 방법&lt;/h3>&lt;ol>
&lt;li>프로젝트 루트에.gitlab-ci.yml 파일 생성&lt;/li>
&lt;li>YAML 형식으로 파이프라인 구성 작성&lt;/li>
&lt;li>변경사항을 커밋하고 푸시&lt;/li>
&lt;li>GitLab에서 파이프라인 실행 확인&lt;/li>
&lt;/ol>
&lt;h4>&lt;code>.gitlab-ci.yml&lt;/code> 파일의 기본 구조&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">job1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Building the project...&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">job2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Running tests...&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">job3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Deploying to production...&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>주요 구성 요소&lt;/h5>&lt;ol>
&lt;li>&lt;strong>stages&lt;/strong>: 파이프라인의 실행 단계를 정의합니다. 각 단계는 순차적으로 실행됩니다.&lt;/li>
&lt;li>&lt;strong>jobs&lt;/strong>: 각 작업을 정의합니다. 작업은 특정 단계에 속하며, 실행할 스크립트를 포함합니다.&lt;/li>
&lt;li>&lt;strong>script&lt;/strong>: 작업에서 실행할 명령어들을 정의합니다.&lt;/li>
&lt;li>&lt;strong>image&lt;/strong>: 작업을 실행할 Docker 이미지를 지정합니다.&lt;/li>
&lt;li>&lt;strong>artifacts&lt;/strong>: 작업 결과물을 저장하고 다른 작업에서 사용할 수 있게 합니다.&lt;/li>
&lt;li>&lt;strong>cache&lt;/strong>: 작업 간에 공유할 파일이나 디렉토리를 지정합니다.&lt;/li>
&lt;/ol>
&lt;h5>고급 구성 옵션&lt;/h5>&lt;ol>
&lt;li>&lt;strong>only/except&lt;/strong>: 특정 브랜치나 태그에서만 작업을 실행하거나 제외할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>variables&lt;/strong>: 파이프라인 전체 또는 특정 작업에서 사용할 변수를 정의합니다.&lt;/li>
&lt;li>&lt;strong>before_script/after_script&lt;/strong>: 작업 실행 전후에 실행할 스크립트를 정의합니다.&lt;/li>
&lt;li>&lt;strong>environment&lt;/strong>: 배포 환경을 지정합니다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 파이프라인 단계 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 캐시 설정: node_modules 폴더를 캐시하여 빌드 속도 향상&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">cache&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">node_modules/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 빌드 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node:14 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Node.js 14 버전 이미지 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm install &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 의존성 설치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm run build &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 프로젝트 빌드&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">artifacts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">dist/ &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 빌드 결과물 저장&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 테스트 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node:14&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm install &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 의존성 설치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm test &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 배포 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">alpine:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">apk add --no-cache rsync openssh &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 배포에 필요한 도구 설치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mkdir -p ~/.ssh&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;$SSH_PRIVATE_KEY&amp;#34; | tr -d &amp;#39;\r&amp;#39; &amp;gt; ~/.ssh/id_rsa&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">chmod 600 ~/.ssh/id_rsa&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ssh-keyscan -H $DEPLOY_SERVER_IP &amp;gt;&amp;gt; ~/.ssh/known_hosts&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">rsync -avz --delete dist/ $DEPLOY_USER@$DEPLOY_SERVER_IP:/path/to/deployment/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># master 브랜치에 푸시될 때만 실행&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>&lt;code>stages&lt;/code>: 파이프라인의 단계를 정의합니다. 여기서는 build, test, deploy 세 단계로 구성됩니다.&lt;/li>
&lt;li>&lt;code>cache&lt;/code>: node_modules 폴더를 캐시하여 빌드 속도를 향상시킵니다.&lt;/li>
&lt;li>&lt;code>build&lt;/code> 작업:
&lt;ul>
&lt;li>&lt;code>stage: build&lt;/code>로 빌드 단계에 할당합니다.&lt;/li>
&lt;li>Node.js 14 버전 이미지를 사용합니다.&lt;/li>
&lt;li>npm install로 의존성을 설치하고, npm run build로 프로젝트를 빌드합니다.&lt;/li>
&lt;li>artifacts를 사용하여 빌드 결과물을 저장합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>test&lt;/code> 작업:
&lt;ul>
&lt;li>&lt;code>stage: test&lt;/code>로 테스트 단계에 할당합니다.&lt;/li>
&lt;li>npm test 명령으로 테스트를 실행합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>deploy&lt;/code> 작업:
&lt;ul>
&lt;li>&lt;code>stage: deploy&lt;/code>로 배포 단계에 할당합니다.&lt;/li>
&lt;li>Alpine Linux 이미지를 사용하여 가벼운 환경을 구성합니다.&lt;/li>
&lt;li>SSH 키를 설정하고 rsync를 사용하여 빌드 결과물을 서버에 배포합니다.&lt;/li>
&lt;li>&lt;code>only: - master&lt;/code>로 master 브랜치에 푸시될 때만 실행되도록 설정합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>기본 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># GitLab CI의 기본 설정 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node:16 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 기본 Docker 이미지 지정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 파이프라인 스테이지 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 캐시 설정 - node_modules 디렉토리를 캐시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">cache&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">node_modules/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 빌드 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 속한 스테이지 지정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm install &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 의존성 설치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm run build &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 빌드 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">artifacts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 빌드 결과물 저장&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">dist/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 테스트 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm run test &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dependencies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># build 작업의 결과물 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 배포 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Deploying application…&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm run deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># main 브랜치에서만 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>고급 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 환경변수와 조건부 실행이 포함된 고급 설정 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">DOCKER_IMAGE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Docker 이미지 태그 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 커스텀 도커 이미지 빌드&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build_image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker:20.10.16&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker:20.10.16-dind &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Docker-in-Docker 서비스&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Docker 레지스트리 로그인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Docker 이미지 빌드 및 푸시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker build -t $DOCKER_IMAGE .&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker push $DOCKER_IMAGE&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">$CI_COMMIT_BRANCH == &amp;#34;main&amp;#34; &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># main 브랜치에서만 실행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">never &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 그 외의 경우 실행하지 않음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 보안 스캔 작업&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">security_scan&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">security-scanner&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">scan-dependencies &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 의존성 취약점 검사&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">scan-code &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 코드 보안 검사&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">allow_failure&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 실패해도 파이프라인 계속 진행&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 스테이징 환경 배포&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy_staging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy-to-kubernetes.sh --env staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">$CI_COMMIT_BRANCH == &amp;#34;develop&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>환경별 배포 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 환경별 배포 구성 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">.deploy_template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">&amp;amp;deploy_template&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 재사용 가능한 배포 템플릿 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Deploying to $CI_ENVIRONMENT_NAME&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">kubectl apply -f k8s/$CI_ENVIRONMENT_NAME/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy_dev&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*deploy_template&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 템플릿 상속&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">development&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">$CI_COMMIT_BRANCH == &amp;#34;develop&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy_prod&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cp">*deploy_template&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">production&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">$CI_COMMIT_BRANCH == &amp;#34;main&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">manual &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 수동 승인 후 배포&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>병렬 작업 실행&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 병렬 테스트 실행 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">parallel&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 3개의 병렬 작업 생성&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">npm run test -- --split=$CI_NODE_INDEX/$CI_NODE_TOTAL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 매트릭스 작업 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test_matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">parallel&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matrix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">NODE_VERSION&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;14&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;16&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;18&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">DB_TYPE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;mysql&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;postgres&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker-compose run --rm -e NODE_VERSION=$NODE_VERSION -e DB_TYPE=$DB_TYPE test&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>캐시와 아티팩트 관리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 캐시와 아티팩트 관리 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cache&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${CI_COMMIT_REF_SLUG} &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 브랜치별 캐시 키&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">node_modules/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">.npm/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">policy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pull-push &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 캐시 정책 설정&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">artifacts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">dist/ &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 빌드 결과물&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">coverage/ &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트 커버리지 리포트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">reports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">junit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-results.xml &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 테스트 결과 리포트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">coverage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">coverage/lcov.info &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 커버리지 리포트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">expire_in&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">week &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 아티팩트 유효 기간&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이러한 설정들은 프로젝트의 요구사항과 규모에 따라 적절히 조정하여 사용할 수 있습니다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;p>&lt;a href="https://docs.gitlab.com/ee/ci/" target="_blank" rel="noopener">Fetching Title#zut7&lt;/a>&lt;/p></description></item><item><title>CI/CD</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/</link><pubDate>Sun, 22 Sep 2024 18:14:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/</guid><description>
&lt;h2>CI/CD (Continuous Integration/Continuous Delivery)&lt;/h2>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/CICD_pipelines_work.png"
alt="CI/CD Pipeline"
loading="lazy" />
&lt;/figure>&lt;br>
&lt;em>Source: &lt;a href="https://www.wallarm.com/what/what-is-ci-cd-concept-how-can-it-work" target="_blank" rel="noopener">What is CI/CD: Meaning, Definition &amp;amp; Pipeline Concepts&lt;/a>&lt;/em>&lt;/p>
&lt;h3>CI (Continuous Integration, 지속적 통합)&lt;/h3>&lt;p>개발자들이 개별적으로 작업한 코드를 주기적으로 공유 저장소에 통합하여, 자동화된 빌드와 테스트를 수행하는 프로세스.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Continuous_Integration-CI.png"
alt="Continuous Integration (CI)"
loading="lazy" />
&lt;/figure>&lt;br>
&lt;em>Source: &lt;a href="https://www.wallarm.com/what/what-is-ci-cd-concept-how-can-it-work" target="_blank" rel="noopener">https://www.wallarm.com/what/what-is-ci-cd-concept-how-can-it-work&lt;/a>&lt;/em>&lt;/p>
&lt;h4>주요 구성 요소&lt;/h4>&lt;ul>
&lt;li>공유 코드 저장소&lt;/li>
&lt;li>자동화된 빌드 프로세스&lt;/li>
&lt;li>자동화된 테스트 suite&lt;/li>
&lt;/ul>
&lt;h5>CI(Continuous Integration)를 구현할 때 필요한 주요 도구&lt;/h5>&lt;ol>
&lt;li>&lt;strong>버전 관리 시스템 (Version Control System)&lt;/strong>
&lt;ul>
&lt;li>Git, SVN, Mercurial 등&lt;/li>
&lt;li>코드 변경 사항을 추적하고 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CI 서버
&lt;ul>
&lt;li>Jenkins, GitLab CI, CircleCI, Travis CI 등&lt;/li>
&lt;li>자동화된 빌드와 테스트를 실행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>빌드 도구&lt;/strong>
&lt;ul>
&lt;li>Maven, Gradle, Ant (Java)&lt;/li>
&lt;li>npm, Webpack (Javascript)&lt;/li>
&lt;li>MSBuild (.NET)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>자동화된 테스트 프레임워크&lt;/strong>
&lt;ul>
&lt;li>JUnit, TestNG (Java)&lt;/li>
&lt;li>Mocha, Jest (Javascript)&lt;/li>
&lt;li>NUnit (.NET)&lt;/li>
&lt;li>Selenium (웹 애플리케이션 테스트)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 분석 도구
&lt;ul>
&lt;li>SonarQube, ESLint, Checkstyle&lt;/li>
&lt;li>코드 품질 메트릭을 측정하고 보고.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>아티팩트 저장소
&lt;ul>
&lt;li>Nexus, Artifactory&lt;/li>
&lt;li>빌드 결과물을 저장하고 관리.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>컨테이너화 도구
&lt;ul>
&lt;li>Docker, Kubernetes&lt;/li>
&lt;li>일관된 환경에서 빌드와 테스트 실행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>알림 도구
&lt;ul>
&lt;li>Slack, Email, MS Teams&lt;/li>
&lt;li>빌드 결과를 팀원들에게 통지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>구성 관리 도구
&lt;ul>
&lt;li>Ansible, Puppet, Chef&lt;/li>
&lt;li>환경 설정을 자동화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 도구
&lt;ul>
&lt;li>Grafana, Prometheus&lt;/li>
&lt;li>CI 파이프라인의 성능을 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>목적&lt;/h4>&lt;ul>
&lt;li>버그를 조기에 발경하고 품질 향상&lt;/li>
&lt;li>소프트웨어 품질 향상&lt;/li>
&lt;li>개발 주기 단축&lt;/li>
&lt;/ul>
&lt;h4>장점&lt;/h4>&lt;ul>
&lt;li>리스크 감소: 작은 변경사항을 자주 통합하여 큰 문제 예방&lt;/li>
&lt;li>버그 조기 발견: 자동화된 테스트로 빠른 피드백 제공&lt;/li>
&lt;li>팀 협업 개선: 투명한 개발 프로세스 촉진&lt;/li>
&lt;li>제품 품질 향상: 지속적인 코드 리뷰와 테스트&lt;/li>
&lt;li>배포 가능한 소프트웨어 상시 유지&lt;/li>
&lt;/ul>
&lt;h4>구현 단계&lt;/h4>&lt;ol>
&lt;li>공유 저장소 설정&lt;/li>
&lt;li>자동화된 빌드 구축&lt;/li>
&lt;li>자동화된 테스트 작성 및 통합&lt;/li>
&lt;li>CI 서버 구성 (예: Jenkins, GitLab CI)&lt;/li>
&lt;li>팀 작업 흐름 조정&lt;/li>
&lt;/ol>
&lt;h4>모범 사례&lt;/h4>&lt;ul>
&lt;li>작은 단위로 자주 커밋&lt;/li>
&lt;li>모든 커밋에 대해 빌드 실행&lt;/li>
&lt;li>빠른 빌드 유지 (10분 이내 권장)&lt;/li>
&lt;li>테스트 환경을 프로덕션과 유사하게 유지&lt;/li>
&lt;li>모든 테스트가 통과한 빌드만 허용.&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Continuous_Integration_workflow.jpg"
alt="Continuous Integration workflow"
loading="lazy" />
&lt;/figure>&lt;br>
&lt;em>Source: &lt;a href="https://www.wallarm.com/what/what-is-continuous-integration-ci-explainedby-wallarm" target="_blank" rel="noopener">https://www.wallarm.com/what/what-is-continuous-integration-ci-explainedby-wallarm&lt;/a>&lt;/em>&lt;/p>
&lt;h4>CI(Continuous Integration)를 구현할 때 가장 중요한 원칙&lt;/h4>&lt;ol>
&lt;li>단일 소스 저장소 사용: 모든 코드와 관련 파일을 하나의 중앙 저장소에서 관리한다.&lt;/li>
&lt;li>&lt;strong>자주 커밋하기&lt;/strong>: 개발자들이 작은 단위의 변경사항을 자주(하루에 여러 번) 메인 브랜치에 커밋한다.&lt;/li>
&lt;li>&lt;strong>자동화된 빌드&lt;/strong>: 모든 코드 변경사항에 대해 자동으로 빌드를 수행한다.&lt;/li>
&lt;li>&lt;strong>자동화된 테스트&lt;/strong>: 빌드 후 자동으로 테스트를 실행하여 변경사항의 품질을 검증한다.&lt;/li>
&lt;li>빠른 피드백: 빌드와 테스트 결과를 신속하게 개발자에게 전달한다.&lt;/li>
&lt;li>메인 브랜치 안정성 유지: 메인 브랜치는 항상 배포 가능한 상태를 유지해야 한다.&lt;/li>
&lt;li>테스트 환경 일관성: 개발, 테스트, 운영 환경을 최대한 유사하게 유지한다.&lt;/li>
&lt;li>가시성 확보: 빌드 상태와 테스트 결과를 팀 전체가 쉽게 확인할 수 있도록 한다.&lt;/li>
&lt;li>지속적인 개선: CI 프로세스를 지속적으로 모니터링하고 개선한다.&lt;/li>
&lt;/ol>
&lt;h4>CI(Continuous Integration)를 통한 코드 품질의 향상&lt;/h4>&lt;ol>
&lt;li>빠른 버그 발견과 수정:
&lt;ul>
&lt;li>자주 통합하고 테스트함으로써 버그를 조기에 발견하고 수정할 수 있다.&lt;/li>
&lt;li>작은 변경사항 단위로 테스트하므로 문제의 원인을 쉽게 파악할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>일관된 코드 스타일 유지
&lt;ul>
&lt;li>자동화된 코드 스타일 검사 도구를 CI 파이프라인에 통합하여 일관된 코딩 표준을 유지할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트 실행
&lt;ul>
&lt;li>모든 코드 변경에 대해 자동으로 테스트를 실행하여 기능 회귀를 방지한다.&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 성능 테스트 등 다양한 테스트를 자동으로 수행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 메트릭 모니터링
&lt;ul>
&lt;li>코드 복잡도, 중복도, 테스트 커버리지 등의 메트릭을 지속적으로 모니터링하고 개선할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 리뷰 프로세스 강화
&lt;ul>
&lt;li>CI 시스템과 연동된 코드 리뷰 프로세스를 통해 품질 관리를 강화할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적인 통합으로 인한 작은 변경 단위
&lt;ul>
&lt;li>작은 단위의 변경사항을 자주 통합함으로써 대규모 통합에 따른 리스크를 줄일 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문서화 및 주석 품질 향상
&lt;ul>
&lt;li>문서화와 주석 작성을 CI 프로세스의 일부로 포함시켜 코드의 가독성과 유지보수성을 향상시킬 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 취약점 조기 발견
&lt;ul>
&lt;li>보안 검사 도구를 CI 파이프라인에 통합하여 보안 취약점을 조기에 발견하고 수정할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>CI(Continuous Integration)의 도입을 통한 테스트 프로세스의 변화&lt;/h4>&lt;ol>
&lt;li>자동화의 증가
&lt;ul>
&lt;li>수동 테스트에서 자동화된 테스트로 전환.&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 기능 테스트 등이 자동화으로 실행.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빈번한 테스트 실행
&lt;ul>
&lt;li>코드 변경이 있을 때마다 자동으로 테스트가 실행된다.&lt;/li>
&lt;li>일일 또는 더 자주 전체 테스트 스위트가 실행된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빠른 피드백
&lt;ul>
&lt;li>개발자들이 코드 변경 후 즉시 테스트 결과를 받는다.&lt;/li>
&lt;li>버그를 조기에 발견하고 수정할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 범위 확대
&lt;ul>
&lt;li>더 많은 종류의 테스트를 포함할 수 있게 된다.&lt;/li>
&lt;li>성능 테스트, 보안 테스트 등도 CI 파이프라인에 통합된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 환경 일관성
&lt;ul>
&lt;li>모든 개발자와 CI 서버가 동일한 환경에서 테스트를 실행한다.&lt;/li>
&lt;li>환경 차이로 인한 &amp;ldquo;내 컴퓨터에서는 작동합니다&amp;quot;문제가 줄어든다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 코드 품질 향상
&lt;ul>
&lt;li>테스트 코드도 버전 관리되고 리뷰된다.&lt;/li>
&lt;li>테스트의 유지보수성과 신뢰성이 향상된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>회귀 테스트 강화
&lt;ul>
&lt;li>모든 변경사항에 대해 전체 테스트 스위트가 실행되어 회귀 오류를 빠르게 잡아낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 메트릭스 추적
&lt;ul>
&lt;li>테스트 커버리지, 성공률 등의 메트릭스를 지속적으로 모니터링한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 우선 개발 촉진
&lt;ul>
&lt;li>TDD(Test-Driven Development) 같은 방법론 적용이 용이해진다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>CI(Continuous Integration)를 도입할 때 발생할 수 있는 문제들&lt;/h4>&lt;ol>
&lt;li>문화적 저항
&lt;ul>
&lt;li>팀 구성원들이 새로운 프로세스와 도구 사용을 꺼려할 수 있다.&lt;/li>
&lt;li>해결책: 점진적 도입, 교육 제공, CI의 이점 명확히 설명&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 자동화 부족
&lt;ul>
&lt;li>적절한 자동화 테스트 없이 CI를 도입하면 효과가 제한적.&lt;/li>
&lt;li>해결책: 단위 테스트, 통합 테스트 등 자동화 테스트 구축에 투자&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빌드 시간 증가
&lt;ul>
&lt;li>CI 프로세스로 인해 빌드 시간이 길어질 수 있다.&lt;/li>
&lt;li>해결책: 병렬 빌드, 증분 빌드 등 최적화 기법 적용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인프라 관리 복잡성
&lt;ul>
&lt;li>CI 서버, 테스트 환경 등 추가 인프라 관리가 필요하다.&lt;/li>
&lt;li>해결책: 클라우드 서비스 활용, 인프라 자동화 도구 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 문제
&lt;ul>
&lt;li>CI 파이프라인에 민감한 정보가 노출될 위험이 있다.&lt;/li>
&lt;li>해결책: 보안 스캐닝 도구 통합, 비밀 정보 관리 시스템 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>과도한 알림
&lt;ul>
&lt;li>빈번한 빌드 실패 알림으로 피로도가 증가할 수 있다.&lt;/li>
&lt;li>해결책: 알림 정책 최적화, 중요 알림 필터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기존 프로젝트 통합 어려움
&lt;ul>
&lt;li>레거시 시스템에 CI를 적용하기 어려울 수 있다.&lt;/li>
&lt;li>해결책: 점진적 리팩토링, 모듈화 접근&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>리소스 부족
&lt;ul>
&lt;li>CI 구축과 유지에 필요한 시간과 인력이 부족할 수 있다.&lt;/li>
&lt;li>해결책: 경영진의 지원 확보, 우선순위 조정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CD (Continuous Delivery/Deployment, 지속적 전달/배포)&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/What_is_the_distinction_between_CICD.png"
alt="What is the distinction between CI/CD?"
loading="lazy" />
&lt;/figure>&lt;br>
&lt;em>Source: &lt;a href="https://www.wallarm.com/what/what-is-ci-cd-concept-how-can-it-work" target="_blank" rel="noopener">https://www.wallarm.com/what/what-is-ci-cd-concept-how-can-it-work&lt;/a>&lt;/em>&lt;/p>
&lt;p>CI(Continuous Integration)의 연장선상에 있는 소프트웨어 개발 방법론이다.&lt;br>
Continuous Delivery(지속적 전달)와 Continuous Deployment(지속적 배포) 2가지 의미로 사용된다.&lt;/p>
&lt;h4>Continuous Delivery(지속적 전달)&lt;/h4>&lt;p>소프트웨어를 언제든지 안정적으로 출시할 수 있는 상태로 유지하는 방법론&lt;/p>
&lt;ul>
&lt;li>자동화된 테스트와 배포 준비 과정을 거치지만, 최종 프로덕션 배포는 수동으로 진행.&lt;/li>
&lt;/ul>
&lt;h4>Continuous Deployment(지속적 배포)&lt;/h4>&lt;p>개발자의 변경사항이 자동으로 프로덕션 환경까지 배포되는 방법론&lt;/p>
&lt;ul>
&lt;li>전체 과정이 완전 자동화되어 있어 수동 개입 없이 프로덕션 배포가 이루어짐.&lt;/li>
&lt;/ul>
&lt;h4>주요 구성 요소&lt;/h4>&lt;ul>
&lt;li>자동화된 빌드 및 테스트 프로세스 (CI의 연장)&lt;/li>
&lt;li>자동화된 배포 파이프라인&lt;/li>
&lt;li>환경 설정 자동화&lt;/li>
&lt;li>모니터링 및 로깅 시스템&lt;/li>
&lt;/ul>
&lt;h4>목적&lt;/h4>&lt;ul>
&lt;li>소프트웨어 배포 프로세스의 리스크 감소&lt;/li>
&lt;li>더 빠른 시장 출시 (Time-to-Market) 달성&lt;/li>
&lt;li>지속적인 사용자 피드백 수집 및 반영&lt;/li>
&lt;li>개발팀의 생산성 향상&lt;/li>
&lt;/ul>
&lt;h4>장점&lt;/h4>&lt;ul>
&lt;li>배포 프로세스의 안정성 향상&lt;/li>
&lt;li>사용자에게 더 빠른 가치 전달&lt;/li>
&lt;li>개발자의 생산성 및 만족도 증가&lt;/li>
&lt;li>실험과 혁신을 촉진하는 환경 조성&lt;/li>
&lt;li>운영 부담 감소&lt;/li>
&lt;/ul>
&lt;h4>구현 단계&lt;/h4>&lt;ol>
&lt;li>CI 파이프라인 구축 (선행 조건)&lt;/li>
&lt;li>자동화된 테스트 확장 (단위, 통합, 성능, 보안 등)&lt;/li>
&lt;li>환경 설정 자동화 (Infrastructure as Code)&lt;/li>
&lt;li>배포 파이프라인 구축&lt;/li>
&lt;li>모니터링 및 피드백 시스템 통합&lt;/li>
&lt;/ol>
&lt;h4>모범 사례&lt;/h4>&lt;ul>
&lt;li>모든 환경에서 동일한 배포 프로세스 사용&lt;/li>
&lt;li>배포를 작은 단위로 자주 수행&lt;/li>
&lt;li>피처 플래그를 사용한 점진적 롤아웃&lt;/li>
&lt;li>블루-그린 배포나 카나리 배포 등의 안전한 배포 전략 사용&lt;/li>
&lt;li>철저한 모니터링 및 로깅 구현&lt;/li>
&lt;li>빠른 롤백 메커니즘 준비&lt;/li>
&lt;/ul>
&lt;h4>CD (Continuous Delivery/Deployment, 지속적 전달/배포)를 구축할 때 가장 중요한 요소&lt;/h4>&lt;ol>
&lt;li>자동화&lt;br>
CD 파이프라인의 핵심&lt;br>
코드 통합부터 테스트, 배포까지 전 과정을 자동화하여 인적 오류를 최소화하고 일관성을 유지해야 한다.&lt;/li>
&lt;li>보안&lt;br>
프로덕션 환경의 보안을 최우선으로 고려해야 한다.&lt;br>
접근 권한을 제한하고, 민감한 정보는 프로덕션 환경에만 저장하는 등의 보안 조치가 필요하다.&lt;/li>
&lt;li>환경 분리&lt;br>
개발, 테스트, 프로덕션 등 각 환경을 분리하여 관리하는 것이 중요하다.&lt;/li>
&lt;li>테스트 자동화&lt;br>
다양한 유형의 테스트(단위 테스트, 통합 테스트, 엔드-투-엔드 테스트 등)를 자동화하여 코드 품질을 지속적으로 검증해야 한다.&lt;/li>
&lt;li>모니터링 및 피드백 루프&lt;br>
배포된 애플리케이션의 성능과 동작을 실시간으로 모니터링하고, 이를 통해 얻은 인사이트를 개발 프로세스에 반영하는 피드백 루프를 구축해야 한다.&lt;/li>
&lt;li>협업 문화&lt;br>
개발자, 운영팀, QA 등 모든 팀 구성원이 CD 파이프라인의 성공에 책임감을 갖고 협업하는 문화를 조성해야 한다.&lt;/li>
&lt;li>지속적인 개선&lt;br>
파이프라인의 성능을 정기적으로 모니터링하고 최적화하는 과정이 필요하다.&lt;/li>
&lt;li>적절한 도구 선택&lt;br>
팀의 요구사항과 기존 인프라에 적합한 CI/CD 도구를 선택하는 것이 중요하다.&lt;/li>
&lt;li>점진적 배포 전략&lt;br>
카나리 배포나 블루-그린 배포 등의 전략을 활용하여 리스크를 최소화하면서 새로운 기능을 안전하게 출시할 수 있는 방법을 고려해야 한다.&lt;/li>
&lt;li>코드 리뷰 프로세스&lt;br>
코드 품질을 유지하고 잠재적인 문제를 조기에 발견하기 위해 철저한 코드 리뷰 프로세스를 구축해야 한다.&lt;/li>
&lt;/ol>
&lt;h4>CD (Continuous Delivery/Deployment, 지속적 전달/배포)를 구현할 때 주의해야 할 점&lt;/h4>&lt;ol>
&lt;li>충분한 테스트 자동화:
&lt;ul>
&lt;li>포괄적인 자동화된 테스트 없이는 안전한 배포가 어렵다.&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 성능 테스트 등을 구현해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 알림 시스템 구축:
&lt;ul>
&lt;li>배포 과정과 애플리케이션 성능을 실시간으로 모니터링해야 한다.&lt;/li>
&lt;li>문제 발생 시 신속한 대응을 위한 알림 시스템이 필요합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>롤백 전략 수립:
&lt;ul>
&lt;li>문제 발생 시 신속하게 이전 버전으로 돌아갈 수 있는 전략이 필요하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 통합:
&lt;ul>
&lt;li>보안 검사를 CD 파이프라인에 통합하여 취약점을 조기에 발견해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인프라 자동화:
&lt;ul>
&lt;li>인프라 구성을 코드로 관리하여 일관성과 재현성을 확보해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>점진적 배포 전략 사용:
&lt;ul>
&lt;li>블루-그린 배포, 카나리 릴리스 등의 전략을 활용하여 리스크를 최소화해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>팀 간 협업 강화:
&lt;ul>
&lt;li>개발, 운영, QA 팀 간의 원활한 소통과 협업이 필수적.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적인 개선:
&lt;ul>
&lt;li>파이프라인의 성능과 효율성을 지속적으로 모니터링하고 개선해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 일관성 유지:
&lt;ul>
&lt;li>개발, 테스트, 운영 환경 간의 일관성을 유지해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>비즈니스 의사결정 프로세스 통합:
&lt;ul>
&lt;li>배포 결정에 비즈니스 요구사항을 반영할 수 있는 프로세스가 필요하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>CD (Continuous Delivery/Deployment, 지속적 전달/배포)를 도입할 때 발생할 수 있는 문제들&lt;/h4>&lt;ol>
&lt;li>보안 문제
&lt;ul>
&lt;li>빠른 배포로 인한 보안 취약점 발생 가능성 증가&lt;/li>
&lt;li>민감한 데이터 노출 위험&lt;/li>
&lt;li>안전하지 않은 코드나 서드파티 구성요소 사용&lt;/li>
&lt;li>소스 코드 저장소나 빌드 도구에 대한 무단 접근&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>확장성 문제
&lt;ul>
&lt;li>증가하는 개발 팀과 프로젝트 규모에 대응하기 위한 인프라 확장 필요&lt;/li>
&lt;li>리소스 활용 최적화의 어려움&lt;/li>
&lt;li>성능 이슈 발생 가능성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 자동화 관련 문제
&lt;ul>
&lt;li>테스트 케이스 유지보수의 어려움&lt;/li>
&lt;li>효과적인 테스트 스크립트 작성의 복잡성&lt;/li>
&lt;li>다른 도구들과의 통합 문제&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 문제
&lt;ul>
&lt;li>복잡한 분산 시스템 모니터링의 어려움&lt;/li>
&lt;li>여러 환경에 걸친 애플리케이션 모니터링의 복잡성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문화와 프로세스 관련 문제
&lt;ul>
&lt;li>조직 내 변화에 대한 저항&lt;/li>
&lt;li>이해관계자들의 지지 부족&lt;/li>
&lt;li>기존 프로세스와의 충돌&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>릴리스 관리 문제
&lt;ul>
&lt;li>배포 일정 관리의 어려움&lt;/li>
&lt;li>롤백 절차 구현의 복잡성&lt;/li>
&lt;li>이해관계자와의 원활한 소통 부족&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 관리 문제
&lt;ul>
&lt;li>인프라 프로비저닝의 어려움&lt;/li>
&lt;li>환경 간 설정 동기화 문제&lt;/li>
&lt;li>데이터 무결성 보장의 어려움&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>버전 관리 문제
&lt;ul>
&lt;li>새로운 버전 업데이트로 인한 배포 프로세스 중단&lt;/li>
&lt;li>자동 업데이트로 인한 생산 환경 문제 발생 가능성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 저하 문제
&lt;ul>
&lt;li>CD 프로세스가 수동 작업보다 느려질 수 있는 상황 발생&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>타이트한 마감 기한과 릴리스 일정
&lt;ul>
&lt;li>빠른 개발과 배포로 인한 코드 품질 저하 가능성&lt;/li>
&lt;li>테스트와 품질 보증 과정의 축소로 인한 오류 증가 위험&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>CD (Continuous Delivery/Deployment, 지속적 전달/배포)를 구현할 때 주의해야 할 주요 단계&lt;/h4>&lt;ol>
&lt;li>보안 강화
&lt;ul>
&lt;li>코드 저장소와 빌드 서버의 보안을 철저히 관리해야 한다.&lt;/li>
&lt;li>민감한 데이터나 API 키가 노출되지 않도록 주의해야 한다.&lt;/li>
&lt;li>취약점이 있는 의존성 라이브러리를 사용하지 않도록 주의해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화 테스트 구축
&lt;ul>
&lt;li>단위 테스트, 통합 테스트 등 다양한 자동화된 테스트를 구현해야 한다.&lt;/li>
&lt;li>테스트 커버리지를 높여 코드 품질을 유지해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 일관성 유지
&lt;ul>
&lt;li>개발, 테스트, 프로덕션 환경을 일관되게 유지해야 한다.&lt;/li>
&lt;li>환경 간 설정 차이로 인한 문제를 방지해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 로깅 구현
&lt;ul>
&lt;li>배포된 애플리케이션의 성능과 안정성을 실시간으로 모니터링해야 한다.&lt;/li>
&lt;li>문제 발생 시 빠르게 대응할 수 있도록 로깅 시스템을 구축해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>롤백 전략 수립
&lt;ul>
&lt;li>배포 실패 시 신속하게 이전 버전으로 롤백할 수 있는 전략을 마련해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>점진적 배포 전략 적용
&lt;ul>
&lt;li>카나리 배포나 블루-그린 배포 등의 전략을 활용하여 리스크를 최소화해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인프라 확장성 고려&lt;br>
프로젝트 규모가 커질 때를 대비해 확장 가능한 인프라를 설계해야 한다.&lt;/li>
&lt;li>팀 간 커뮤니케이션 강화
&lt;ul>
&lt;li>개발, 운영, QA 팀 간의 원활한 소통을 위한 체계를 구축해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문서화&lt;br>
CD 파이프라인의 설정과 사용 방법을 명확히 문서화하여 팀원들이 쉽게 이해하고 사용할 수 있도록 해야 한다.&lt;/li>
&lt;li>지속적인 개선
&lt;ul>
&lt;li>파이프라인의 성능을 정기적으로 모니터링하고 최적화하는 과정이 필요하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI(Continuous Integration, 지속적 통합)와 CD (Continuous Delivery/Deployment, 지속적 전달/배포) 파이프라인의 주요 차이점&lt;/h3>&lt;p>CI 파이프라인은 코드 통합과 검증에 중점을 두는 반면, CD 파이프라인은 검증된 코드를 실제 운영 환경에 안정적으로 배포하는 데 초점을 맞춘다.&lt;/p>
&lt;ol>
&lt;li>목적
&lt;ul>
&lt;li>CI (Continuous Integration) 파이프라인:&lt;br>
코드 변경사항을 지속적으로 통합하고 테스트하는 것이 주 목적.&lt;br>
개발자들이 코드를 자주 병합하고 빌드 및 테스트를 자동화하여 문제를 조기에 발견하는 데 중점을 둔다.&lt;/li>
&lt;li>CD (Continuous Delivery/Deployment) 파이프라인:&lt;br>
검증된 코드를 자동으로 릴리즈하고 프로덕션 환경에 배포하는 것이 주 목적.&lt;br>
CI의 결과물을 받아 실제 운영 환경에 제공하는 과정을 자동화한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>프로세스 범위
&lt;ul>
&lt;li>CI 파이프라인: 코드 통합, 빌드, 테스트 단계까지 포함&lt;/li>
&lt;li>CD 파이프라인: CI 단계 이후의 릴리즈, 배포, 모니터링 단계까지 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화 수준
&lt;ul>
&lt;li>CI 파이프라인: 코드 통합부터 테스트까지 자동화&lt;/li>
&lt;li>CD 파이프라인: CI 단계에 더해 배포 과정까지 자동화. Continuous Delivery는 수동 승인 후 배포, Continuous Deployment는 완전 자동 배포를 의미.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>주요 활동
&lt;ul>
&lt;li>CI 파이프라인: 코드 병합, 빌드, 단위 테스트, 통합 테스트 등&lt;/li>
&lt;li>CD 파이프라인: 스테이징 환경 배포, 승인 프로세스, 프로덕션 배포, 모니터링 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>목표
&lt;ul>
&lt;li>CI 파이프라인: 코드 품질 향상, 버그 조기 발견&lt;/li>
&lt;li>CD 파이프라인: 빠른 릴리즈 주기, 안정적인 배포, 사용자 피드백 신속 반영&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI/CD 파이프라인의 주요 단계별로 수행되는 작업&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/cicd-pipeline-introduction-1024x422-1.jpg"
alt="Stages of a CI/CD pipeline"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://semaphoreci.com/blog/cicd-pipeline" target="_blank" rel="noopener">https://semaphoreci.com/blog/cicd-pipeline&lt;/a> _&lt;/p>
&lt;ol>
&lt;li>소스 코드 관리 (Source)
&lt;ul>
&lt;li>개발자가 코드를 작성하고 버전 관리 시스템(예: Git)에 커밋.&lt;/li>
&lt;li>코드 변경사항을 추적하고 기록.&lt;/li>
&lt;li>팀 간 협업을 위한 코드 공유가 이루어진다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빌드 (Build)
&lt;ul>
&lt;li>소스 코드를 컴파일하고 실행 가능한 아티팩트를 생성한다.&lt;/li>
&lt;li>의존성을 해결하고 필요한 라이브러리를 포함시킨다.&lt;/li>
&lt;li>빌드 과정에서 발생하는 오류를 확인한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단위 테스트 (Unit Test)
&lt;ul>
&lt;li>개별 코드 단위에 대한 자동화된 테스트를 실행한다.&lt;/li>
&lt;li>새로운 코드 변경이 기존 기능을 손상시키지 않았는지 확인한다.&lt;/li>
&lt;li>테스트 커버리지를 측정하고 보고한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 분석 (Code Quality Analysis)
&lt;ul>
&lt;li>정적 코드 분석 도구를 사용하여 코드 품질을 검사한다.&lt;/li>
&lt;li>보안 취약점, 코딩 표준 위반 등을 식별한다.&lt;/li>
&lt;li>코드 중복, 복잡도 등의 메트릭을 측정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>통합 테스트 (Integration Test)
&lt;ul>
&lt;li>여러 컴포넌트 간의 상호작용을 테스트한다.&lt;/li>
&lt;li>시스템 전체의 기능을 검증한다.&lt;/li>
&lt;li>외부 의존성과의 통합을 확인한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패키징 (Packaging)
&lt;ul>
&lt;li>애플리케이션과 필요한 모든 구성 요소를 배포 가능한 형태로 패키징한다.&lt;/li>
&lt;li>컨테이너 이미지 생성 등의 작업이 포함될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>스테이징 배포 (Staging Deployment)
&lt;ul>
&lt;li>프로덕션과 유사한 환경에 애플리케이션을 배포한다.&lt;/li>
&lt;li>성능 테스트, 사용자 수용 테스트 등을 수행한다.&lt;/li>
&lt;li>최종 검증을 위한 환경을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>승인 (Approval)
&lt;ul>
&lt;li>프로덕션 배포 전 필요한 승인 절차를 거친다.&lt;/li>
&lt;li>자동 또는 수동 승인 프로세스가 포함될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>프로덕션 배포 (Production Deployment)
&lt;ul>
&lt;li>검증된 애플리케이션을 실제 운영 환경에 배포한다.&lt;/li>
&lt;li>무중단 배포, 롤백 전략 등을 적용할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 피드백 (Monitoring and Feedback)
&lt;ul>
&lt;li>배포된 애플리케이션의 성능과 안정성을 모니터링한다.&lt;/li>
&lt;li>사용자 피드백을 수집하고 분석한다.&lt;/li>
&lt;li>필요한 경우 빠른 대응과 개선을 위한 정보를 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI/CD 파이프라인의 Build 단계에서 수행되는 작업&lt;/h3>&lt;ol>
&lt;li>코드 컴파일
&lt;ul>
&lt;li>소스 코드를 실행 가능한 형태로 변환&lt;/li>
&lt;li>컴파일 언어의 경우 바이너리 파일을 생성하고, 인터프리터 언어의 경우 필요한 의존성과 도구를 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>의존성 해결
&lt;ul>
&lt;li>프로젝트에 필요한 라이브러리와 패키지를 다운로드하고 설치&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>린팅(Linting)
&lt;ul>
&lt;li>코드의 문법적, 스타일적 오류를 검사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정적 코드 분석
&lt;ul>
&lt;li>자동화된 도구를 사용하여 코드 품질을 검사&lt;/li>
&lt;li>보안 취약점, 코딩 표준 위반 등을 식별&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>아티팩트 생성
&lt;ul>
&lt;li>배포 가능한 형태의 패키지를 생성&lt;/li>
&lt;li>이는 바이너리 파일, 코드 압축 파일, 설치 가능한 패키지, 웹사이트, 컨테이너 이미지 등이 될 수 있다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빌드 환경 설정
&lt;ul>
&lt;li>필요한 도구와 언어 버전을 설정&lt;/li>
&lt;li>예: Java 버전 설정, Maven 또는 Gradle 사용 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>캐싱
&lt;ul>
&lt;li>다운로드한 라이브러리, 중간 파일, 컴파일된 파일 등을 저장하여 향후 빌드 속도를 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빌드 결과 검증
&lt;ul>
&lt;li>빌드 과정이 성공적으로 완료되었는지 확인&lt;/li>
&lt;li>실패 시 개발 팀에 알림을 보낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI/CD 파이프라인의 Test 단계에 포함되는 테스트&lt;/h3>&lt;ol>
&lt;li>단위 테스트 (Unit Testing)
&lt;ul>
&lt;li>개별 코드 단위나 함수의 정확성을 검증.&lt;/li>
&lt;li>빠르고 가벼우며, 주로 개발자가 작성하고 실행.&lt;/li>
&lt;li>높은 테스트 커버리지가 바람직.&lt;/li>
&lt;li>도구: JUnit (Java), NUnit (.NET), pytest (Python) 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>통합 테스트 (Integration Testing)
&lt;ul>
&lt;li>애플리케이션의 다른 모듈이나 서비스 간 상호작용을 검증.&lt;/li>
&lt;li>데이터베이스, API, 외부 시스템과의 상호작용을 테스트.&lt;/li>
&lt;li>단위 테스트보다 복잡하고 시간이 더 걸린다.&lt;/li>
&lt;li>도구: TestNG (Java), pytest (Python), JUnit (Java) 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기능 테스트 (Functional Testing)
&lt;ul>
&lt;li>애플리케이션의 기능적 요구사항을 평가.&lt;/li>
&lt;li>사용자 시나리오와 워크플로우에 초점을 맞춘다.&lt;/li>
&lt;li>사용자 상호작용을 시뮬레이션하는 도구를 사용하여 자동화.&lt;/li>
&lt;li>도구: Selenium, Cypress, QTP/UFT 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>회귀 테스트 (Regression Testing)
&lt;ul>
&lt;li>새로운 코드 변경이 기존 기능에 부정적인 영향을 미치지 않는지 확인.&lt;/li>
&lt;li>기존 테스트를 재실행하여 이전에 작동하던 기능을 검증.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 테스트 (Performance Testing)
&lt;ul>
&lt;li>다양한 조건에서 애플리케이션의 성능을 측정.&lt;/li>
&lt;li>부하 테스트, 스트레스 테스트, 확장성 테스트 등이 포함.&lt;/li>
&lt;li>성능 병목 현상을 식별하고 예상 트래픽을 처리할 수 있는지 확인.&lt;/li>
&lt;li>도구: JMeter, LoadRunner, Gatling 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 테스트 (Security Testing)
&lt;ul>
&lt;li>취약점을 식별하고 잠재적인 공격에 대한 애플리케이션의 견고성을 확인.&lt;/li>
&lt;li>자동화된 보안 스캐닝, 침투 테스트, 취약점 평가 등이 포함.&lt;/li>
&lt;li>도구: OWASP ZAP, SonarQube (보안 규칙) 등&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 수용 테스트 (User Acceptance Testing)
&lt;ul>
&lt;li>실제 사용자 시나리오를 기반으로 애플리케이션의 기능과 사용성을 검증.&lt;/li>
&lt;li>일반적으로 파이프라인의 후반부에 수행.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>기능 테스트를 자동화할 때 주의해야 할 주요 사항&lt;/h4>&lt;ol>
&lt;li>명확한 자동화 전략 수립
&lt;ul>
&lt;li>자동화의 목적과 범위를 명확히 정의&lt;/li>
&lt;li>어떤 종류의 테스트를 자동화할지 결정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>우선순위 설정
&lt;ul>
&lt;li>자주 실행되고 영향력이 큰 테스트를 우선적으로 자동화&lt;/li>
&lt;li>비용 대비 효과를 고려하여 자동화할 테스트를 선별&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>적절한 도구 선택
&lt;ul>
&lt;li>프로젝트 요구사항에 맞는 자동화 도구를 선택&lt;/li>
&lt;li>팀의 기술 스택과 호환되는 도구를 고려&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모듈화 및 재사용 가능한 테스트 스크립트 설계
&lt;ul>
&lt;li>유지보수가 용이하고 재사용 가능한 테스트 스크립트를 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 유지보수 고려
&lt;ul>
&lt;li>자동화된 테스트의 지속적인 유지보수 계획을 수립&lt;/li>
&lt;li>애플리케이션 변경에 따라 테스트 스크립트를 업데이트.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 통합(CI) 구현
&lt;ul>
&lt;li>자동화된 테스트를 CI/CD 파이프라인에 통합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 주도 테스팅 구현
&lt;ul>
&lt;li>다양한 데이터 세트로 테스트를 실행할 수 있도록 설계&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>병렬 테스팅 활용
&lt;ul>
&lt;li>테스트 실행 시간을 단축하기 위해 병렬 테스팅을 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>크로스 브라우저 및 크로스 플랫폼 테스팅 보장
&lt;ul>
&lt;li>다양한 브라우저와 플랫폼에서 일관된 동작을 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>균형 잡힌 테스트 자동화 피라미드 유지
&lt;ul>
&lt;li>단위 테스트, 통합 테스트, E2E 테스트의 적절한 비율을 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>수동 테스트와의 균형
&lt;ul>
&lt;li>자동화 테스트와 수동 테스트를 적절히 조합하여 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>성능 테스트를 수행할 때 고려해야할 요소&lt;/h4>&lt;ol>
&lt;li>테스트 목표 및 성능 기준 설정
&lt;ul>
&lt;li>명확한 성능 목표와 허용 가능한 기준을 정의.&lt;/li>
&lt;li>응답 시간, 처리량, 리소스 사용률 등의 주요 성능 지표를 설정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 환경 구성
&lt;ul>
&lt;li>실제 운영 환경과 최대한 유사한 테스트 환경을 구축.&lt;/li>
&lt;li>하드웨어, 소프트웨어, 네트워크 구성 등을 실제 환경과 일치.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 시나리오 및 데이터 준비
&lt;ul>
&lt;li>실제 사용자 패턴을 반영한 다양한 테스트 시나리오를 설계.&lt;/li>
&lt;li>현실적인 테스트 데이터를 준비.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>부하 모델 설계
&lt;ul>
&lt;li>예상 사용자 수, 동시 접속자 수, 트랜잭션 볼륨 등을 고려한 부하 모델을 설계.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 계획 수립
&lt;ul>
&lt;li>CPU, 메모리, 디스크 I/O, 네트워크 등 시스템 리소스 사용률을 모니터링.&lt;/li>
&lt;li>애플리케이션 성능 지표를 실시간으로 모니터링할 수 있는 도구를 준비.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 도구 선정
&lt;ul>
&lt;li>목적에 맞는 적절한 성능 테스트 도구를 선택.&lt;/li>
&lt;li>도구의 기능, 확장성, 사용 편의성 등을 고려.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>점진적 부하 증가
&lt;ul>
&lt;li>낮은 부하에서 시작하여 점진적으로 부하를 증가시키며 테스트를 수행.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>다양한 테스트 유형 고려
&lt;ul>
&lt;li>부하 테스트, 스트레스 테스트, 내구성 테스트 등 다양한 유형의 테스트를 수행.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>결과 분석 및 보고
&lt;ul>
&lt;li>테스트 결과를 철저히 분석하고 문제점을 식별.&lt;/li>
&lt;li>명확하고 이해하기 쉬운 보고서를 작성.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적인 성능 모니터링
&lt;ul>
&lt;li>테스트 후에도 지속적으로 성능을 모니터링하고 최적화.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>성능 테스트 시나리오를 다양하게 설정하는 방법&lt;/h4>&lt;ol>
&lt;li>실제 사용자 행동 분석
&lt;ul>
&lt;li>실제 사용자의 행동 패턴을 분석하여 시나리오에 반영.&lt;/li>
&lt;li>가장 자주 사용되는 기능과 사용자 경로를 파악하여 핵심 시나리오를 구성.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>다양한 사용자 유형 고려
&lt;ul>
&lt;li>신규 사용자, 기존 사용자, 로그인/비로그인 사용자 등 다양한 유형의 사용자 행동을 시나리오에 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>부하 수준 변화
&lt;ul>
&lt;li>정상 부하, 최대 부하, 스트레스 수준 등 다양한 부하 조건을 시나리오에 포함.&lt;/li>
&lt;li>점진적 부하 증가 시나리오를 통해 시스템의 성능 한계를 파악합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>시간대별 트래픽 패턴 반영
&lt;ul>
&lt;li>피크 시간대, 평상시, 특정 이벤트 기간 등 시간대별 트래픽 패턴을 시나리오에 반영.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>다양한 데이터 세트 사용
&lt;ul>
&lt;li>실제 데이터와 유사한 다양한 테스트 데이터를 준비하여 시나리오에 적용.&lt;/li>
&lt;li>데이터의 크기와 복잡성을 변화시켜 다양한 조건을 테스트.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>예외 상황 및 에러 처리 포함
&lt;ul>
&lt;li>시스템 오류, 네트워크 지연, 데이터베이스 락 등 예외 상황을 시나리오에 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>동시 사용자 수 변화
&lt;ul>
&lt;li>동시 접속자 수를 다양하게 설정하여 시스템의 확장성을 테스트.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>복합 시나리오 구성
&lt;ul>
&lt;li>여러 기능을 연계한 복합적인 시나리오를 구성하여 실제 사용 환경을 모방.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장기 실행 시나리오
&lt;ul>
&lt;li>시스템의 장기적인 안정성을 테스트하기 위한 장시간 실행 시나리오를 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지역별 접속 시뮬레이션
&lt;ul>
&lt;li>다양한 지역에서의 접속을 시뮬레이션하여 글로벌 서비스의 성능을 테스트.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>성능 테스트 결과를 효과적으로 피드백하는 방법&lt;/h4>&lt;ol>
&lt;li>명확하고 이해하기 쉬운 형식 선택
&lt;ul>
&lt;li>그래프, 차트, 표 등을 활용하여 데이터를 시각화.&lt;/li>
&lt;li>핵심 정보를 한눈에 파악할 수 있는 대시보드 형태의 보고서를 작성.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관련 핵심 성능 지표(KPI) 포함
&lt;ul>
&lt;li>총 테스트 케이스 수, 실행된 케이스 수, 통과/실패 케이스 수 등의 기본 지표를 포함.&lt;/li>
&lt;li>응답 시간, 리소스 사용률, 부하 및 스트레스 지표 등 성능 관련 핵심 지표를 제시.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>대상 독자를 고려한 보고서 작성
&lt;ul>
&lt;li>경영진, 개발자, QA 팀 등 각 대상에 맞는 정보와 상세 수준을 제공.&lt;/li>
&lt;li>기술적 용어는 필요한 경우에만 사용하고, 사용 시 설명을 덧붙인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>객관적이고 편견 없는 보고
&lt;ul>
&lt;li>정확한 수치와 데이터를 제시하고, 추정이나 가정을 배제.&lt;/li>
&lt;li>&amp;ldquo;우수함&amp;rdquo;, &amp;ldquo;나쁨&amp;rdquo; 등의 주관적 표현을 피하고 실제 결과를 설명.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>실행 가능한 인사이트와 권장사항 제시
&lt;ul>
&lt;li>발견된 문제점과 그 심각도를 명확히 설명.&lt;/li>
&lt;li>데이터에 기반한 개선 권장사항을 제시.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>요약 및 세부 정보의 균형
&lt;ul>
&lt;li>주요 발견사항과 지표를 포함한 간결한 요약을 제공.&lt;/li>
&lt;li>필요한 경우 상세한 기술적 정보를 첨부합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>상호작용적이고 협력적인 접근
&lt;ul>
&lt;li>보고서 설계 단계에서 이해관계자들의 의견을 수렴.&lt;/li>
&lt;li>결과에 대해 토론하고 질문에 답할 수 있는 기회를 제공.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>비즈니스 목표와의 연계
&lt;ul>
&lt;li>테스트 결과가 비즈니스 목표에 어떤 영향을 미치는지 설명.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>후속 조치 계획 수립
&lt;ul>
&lt;li>발견된 문제점에 대한 구체적인 개선 계획을 제시.&lt;/li>
&lt;li>향후 테스트 계획에 대한 제안을 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>성능 테스트에서 리소스 관리&lt;/h4>&lt;ol>
&lt;li>리소스 사용량 모니터링
&lt;ul>
&lt;li>CPU, 메모리, 네트워크 대역폭, 저장 공간 등 주요 시스템 리소스의 사용량을 지속적으로 모니터링&lt;/li>
&lt;li>모니터링 소프트웨어, 프로파일링 도구, 성능 카운터 등을 활용하여 리소스 사용량을 추적&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>병목 현상 식별 및 최적화
&lt;ul>
&lt;li>리소스 사용량이 높은 영역을 식별하고 최적화&lt;/li>
&lt;li>코드 최적화, 캐싱, 불필요한 데이터베이스 쿼리 감소 등의 기법을 적용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>현실적인 시나리오 사용
&lt;ul>
&lt;li>실제 사용자 행동과 워크로드 패턴을 정확히 시뮬레이션하는 시나리오를 사용&lt;/li>
&lt;li>이를 통해 실제 환경에서의 성능 문제를 식별하고 리소스 활용을 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>가상화 기술 활용
&lt;ul>
&lt;li>단일 물리적 머신에서 여러 테스트 환경을 생성하여 리소스 활용도를 극대화하고 하드웨어 비용을 절감&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적인 모니터링 및 테스트
&lt;ul>
&lt;li>정기적인 성능 테스트를 통해 시간이 지남에 따라 리소스 사용량을 최적화&lt;/li>
&lt;li>지속적인 모니터링을 통해 잠재적인 성능 문제를 조기에 발견하고 해결&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>리소스 활용도 분석 및 보고
&lt;ul>
&lt;li>리소스 관리 분석 및 보고를 통해 리소스 활용도에 대한 귀중한 통찰력을 얻는다.&lt;/li>
&lt;li>이 정보를 바탕으로 리소스 활용도 개선에 대한 정보에 기반한 결정을 내린다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화 적용
&lt;ul>
&lt;li>자동화 기능을 활용하여 리소스 활용도를 최적화하고 관리 작업을 줄인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>클라우드 기반 테스트 서비스 고려
&lt;ul>
&lt;li>필요에 따라 리소스를 동적으로 확장하거나 축소할 수 있는 클라우드 기반 테스트 서비스의 사용을 고려한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>성능 테스트에서 모니터링 도구를 선택할 때 고려해야 할 요소&lt;/h4>&lt;ol>
&lt;li>확장성 (Scalability)
&lt;ul>
&lt;li>증가하는 부하와 데이터 양을 처리할 수 있는 능력&lt;/li>
&lt;li>대규모 시스템과 분산 환경을 지원하는지 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>실시간 모니터링 기능
&lt;ul>
&lt;li>성능 데이터를 실시간으로 수집하고 분석하는 능력&lt;/li>
&lt;li>즉각적인 문제 감지와 대응을 위한 실시간 알림 기능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>종합적인 메트릭 수집
&lt;ul>
&lt;li>CPU, 메모리, 디스크 I/O, 네트워크 등 다양한 시스템 리소스 모니터링&lt;/li>
&lt;li>응답 시간, 처리량, 오류율 등 애플리케이션 성능 지표 수집&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 분석 및 시각화 기능
&lt;ul>
&lt;li>수집된 데이터를 의미 있는 인사이트로 변환하는 분석 도구&lt;/li>
&lt;li>직관적인 대시보드와 보고서 생성 기능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>통합 및 호환성
&lt;ul>
&lt;li>기존 인프라 및 도구들과의 통합 용이성&lt;/li>
&lt;li>다양한 플랫폼과 기술 스택 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 편의성
&lt;ul>
&lt;li>직관적인 사용자 인터페이스&lt;/li>
&lt;li>설정 및 관리의 용이성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>비용 효율성
&lt;ul>
&lt;li>라이선스 비용 및 총소유비용(TCO) 고려&lt;/li>
&lt;li>필요한 기능과 예산의 균형&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 및 규정 준수
&lt;ul>
&lt;li>데이터 암호화 및 접근 제어 기능&lt;/li>
&lt;li>관련 규정 및 표준 준수 여부&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>커스터마이징 및 확장성
&lt;ul>
&lt;li>사용자 정의 메트릭 및 대시보드 생성 가능성&lt;/li>
&lt;li>API 및 플러그인을 통한 기능 확장 옵션&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>벤더 지원 및 커뮤니티
&lt;ul>
&lt;li>기술 지원의 품질 및 대응성&lt;/li>
&lt;li>활발한 사용자 커뮤니티 및 문서화 수준&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장기 데이터 보존 및 분석
&lt;ul>
&lt;li>과거 성능 데이터의 장기 보관 능력&lt;/li>
&lt;li>트렌드 분석 및 용량 계획을 위한 기능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI/CD 파이프라인의 모니터링 단계에서 수집되는 정보들&lt;/h3>&lt;ol>
&lt;li>배포 빈도 (Deployment Frequency)
&lt;ul>
&lt;li>일/주 단위로 성공적으로 배포된 횟수를 측정.&lt;/li>
&lt;li>이를 통해 개발 팀의 생산성과 파이프라인의 효율성을 파악.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>배포 시간 (Deployment Time)
&lt;ul>
&lt;li>각 배포 작업의 실행 시간을 측정.&lt;/li>
&lt;li>개발/테스트 환경에서 프로덕션 환경으로 릴리스를 이동시키는 데 걸리는 시간을 파악.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>변경 리드 타임 (Change Lead Time)
&lt;ul>
&lt;li>코드 변경 결정부터 실제 구현 및 배포까지 걸리는 시간을 측정.&lt;/li>
&lt;li>팀의 개발 및 배포 속도를 나타내는 중요한 지표.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>평균 복구 시간 (Mean Time to Recovery, MTTR)
&lt;ul>
&lt;li>프로덕션 환경에서 문제 발생 시 수정 사항을 배포하는 데 걸리는 시간을 측정.&lt;/li>
&lt;li>팀의 문제 해결 능력과 파이프라인의 효율성을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>변경 실패율 (Change Failure Rate)
&lt;ul>
&lt;li>배포 시도 중 실패한 비율을 측정.&lt;/li>
&lt;li>테스트나 기타 이유로 성공적으로 배포되지 못한 변경 사항의 비율.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>진행 중인 작업량 (Work in Progress)
&lt;ul>
&lt;li>특정 시점에 파이프라인에서 진행 중인 코드 또는 구성 변경 사항의 수를 측정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빌드 시간 및 테스트 실행 시간
&lt;ul>
&lt;li>각 빌드와 테스트 단계에 소요되는 시간을 측정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>테스트 커버리지 및 성공률
&lt;ul>
&lt;li>자동화된 테스트의 코드 커버리지와 성공/실패율을 측정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>리소스 사용량
&lt;ul>
&lt;li>CPU, 메모리, 디스크 I/O 등 파이프라인 실행에 사용되는 리소스를 모니터링.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>오류 및 경고 로그
&lt;ul>
&lt;li>파이프라인 실행 중 발생하는 오류와 경고 메시지를 수집.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI/CD 파이프라인의 각 단계별 사용되는 도구&lt;/h3>&lt;ol>
&lt;li>소스 코드 관리 (Source Code Management)
&lt;ul>
&lt;li>Git, GitHub, GitLab, Bitbucket&lt;/li>
&lt;li>SVN (Subversion)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>빌드 (Build)
&lt;ul>
&lt;li>Maven, Gradle (Java)&lt;/li>
&lt;li>npm, Webpack (JavaScript)&lt;/li>
&lt;li>MSBuild (.NET)&lt;/li>
&lt;li>Docker (컨테이너화)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단위 테스트 (Unit Testing)
&lt;ul>
&lt;li>JUnit, TestNG (Java)&lt;/li>
&lt;li>Jest, Mocha (JavaScript)&lt;/li>
&lt;li>NUnit (.NET)&lt;/li>
&lt;li>PyTest (Python)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 분석 (Code Quality Analysis)
&lt;ul>
&lt;li>SonarQube&lt;/li>
&lt;li>ESLint (JavaScript)&lt;/li>
&lt;li>Checkstyle (Java)&lt;/li>
&lt;li>PMD&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>통합 테스트 (Integration Testing)
&lt;ul>
&lt;li>Selenium&lt;/li>
&lt;li>Postman&lt;/li>
&lt;li>REST Assured (API 테스팅)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패키징 (Packaging)
&lt;ul>
&lt;li>Docker&lt;/li>
&lt;li>Helm (Kubernetes 패키징)&lt;/li>
&lt;li>Maven, Gradle (Java 애플리케이션 패키징)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>배포 (Deployment)
&lt;ul>
&lt;li>Kubernetes&lt;/li>
&lt;li>Docker Swarm&lt;/li>
&lt;li>AWS Elastic Beanstalk&lt;/li>
&lt;li>Heroku&lt;/li>
&lt;li>Ansible, Puppet, Chef (구성 관리)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 (Monitoring)
&lt;ul>
&lt;li>Prometheus&lt;/li>
&lt;li>Grafana&lt;/li>
&lt;li>ELK Stack (Elasticsearch, Logstash, Kibana)&lt;/li>
&lt;li>New Relic&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CI/CD 오케스트레이션 도구
&lt;ul>
&lt;li>Jenkins&lt;/li>
&lt;li>GitLab CI/CD&lt;/li>
&lt;li>CircleCI&lt;/li>
&lt;li>Travis CI&lt;/li>
&lt;li>Azure DevOps&lt;/li>
&lt;li>AWS CodePipeline&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 검사 (Security Scanning)
&lt;ul>
&lt;li>OWASP ZAP&lt;/li>
&lt;li>SonarQube (보안 규칙)&lt;/li>
&lt;li>Snyk&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 테스트 (Performance Testing)
&lt;ul>
&lt;li>Apache JMeter&lt;/li>
&lt;li>Gatling&lt;/li>
&lt;li>LoadRunner&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>CI/CD 구현을 위한 자동화 도구들&lt;/h3>&lt;ol>
&lt;li>Jenkins
&lt;ul>
&lt;li>가장 널리 사용되는 오픈소스 CI 도구&lt;/li>
&lt;li>다양한 플러그인 지원으로 확장성이 뛰어남&lt;/li>
&lt;li>커스터마이징이 용이하고 다양한 환경에서 사용 가능.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GitLab CI/CD
&lt;ul>
&lt;li>GitLab과 통합된 CI/CD 솔루션&lt;/li>
&lt;li>설정이 간단하고 GitLab 저장소와의 연동이 쉬움.&lt;/li>
&lt;li>컨테이너 기반 실행 환경 제공.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CircleCI
&lt;ul>
&lt;li>클라우드 기반의 CI/CD 서비스&lt;/li>
&lt;li>빠른 빌드 속도와 병령 실행 지원&lt;/li>
&lt;li>GitHub, Bitbucket과의 쉬운 통합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Travis CI
&lt;ul>
&lt;li>오픈소스 프로젝트에 인기 있는 CI 도구&lt;/li>
&lt;li>GitHub와의 연동이 쉽고 설정이 간단함.&lt;/li>
&lt;li>다양한 언어와 환경 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TeamCity
&lt;ul>
&lt;li>JetBrains에서 개발한 CI/CD 서버&lt;/li>
&lt;li>사용자 친화적인 인터페이스&lt;/li>
&lt;li>지능형 빌드 구성 기능 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Bamboo
&lt;ul>
&lt;li>Atlassian 제품군과 잘 통합되는 CI/CD 도구&lt;/li>
&lt;li>자체 호스팅 및 클라우드 옵션 제공&lt;/li>
&lt;li>복잡한 빌드 및 배포 시나리오 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GitHub Actions
&lt;ul>
&lt;li>GitHub와 긴밀히 통합된 CI/CD 도구&lt;/li>
&lt;li>YAML 기반의 워크플로우 정의가 간편함.&lt;/li>
&lt;li>GitHub 생태계 내에서 쉽게 사용 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Azure DevOps
&lt;ul>
&lt;li>Microsoft의 종합적인 DevOps 플랫폼으로, CI/CD 기능을 포함.&lt;/li>
&lt;li>Azure 클라우드 서비스와의 긴밀한 통합이 장점.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Codefresh
&lt;ul>
&lt;li>Kubernetes와 컨테이너 기반 애플리케이션에 최적화된 현대적인 CI/CD 플랫폼.&lt;/li>
&lt;li>GitOps 기반의 배포 전략을 지원.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Semaphore
&lt;ul>
&lt;li>빠른 성능을 자랑하는 CI/CD 플랫폼.&lt;/li>
&lt;li>Docker, Kubernetes, iOS 지원 등 다양한 기능을 제공.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>CI/CD&lt;/h3>&lt;p>&lt;a href="https://seosh817.tistory.com/104" target="_blank" rel="noopener">SH&amp;rsquo;s Devlog&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=164937&amp;amp;boardType=" target="_blank" rel="noopener">Kubernetes 기반의 어플리케이션 배포 시스템 구축 방법&lt;/a>&lt;br>
&lt;a href="https://blog.banksalad.com/tech/how-we-have-built-alice/" target="_blank" rel="noopener">폐쇄망 환경의 배포 시스템 개발기&lt;/a>&lt;br>
&lt;a href="https://aws.amazon.com/ko/devops/continuous-integration/" target="_blank" rel="noopener">AWS Amazone CI&lt;/a>&lt;br>
&lt;a href="https://seosh817.tistory.com/104" target="_blank" rel="noopener">SH&amp;rsquo;s Devlog&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/2010/" target="_blank" rel="noopener">깃옵스(GitOps)를 여행하려는 입문자를 위한 안내서&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/2197/" target="_blank" rel="noopener">깃허브 액션으로 CI/CD 구현하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/2184/" target="_blank" rel="noopener">CI/CD 개념과 깃허브 리포지터리 생성하기&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/blog/techBoardDetail.do?ID=165513&amp;amp;boardType=techBlog&amp;amp;ref=codenary" target="_blank" rel="noopener">CI/CD와 Gitflow 그리고 QA&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/blog/techBoardDetail.do?ID=165211&amp;amp;boardType=techBlog" target="_blank" rel="noopener">ArgoCD + AWS EKS + CodeCommmit + CodeBuild 로 CI/CD 구축하기&lt;/a>&lt;br>
&lt;a href="https://akuity.io/blog/gitops-best-practices-whitepaper/" target="_blank" rel="noopener">GitOps Best Practices Whitepaper&lt;/a>&lt;br>
&lt;a href="https://artist-developer.tistory.com/24?category=965473" target="_blank" rel="noopener">CI/CD란 무엇인가 (Feat. DevOps 엔지니어)&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=164937&amp;amp;boardType=" target="_blank" rel="noopener">Kubernetes 기반의 어플리케이션 배포 시스템 구축 방법&lt;/a>&lt;br>
&lt;a href="https://blog.banksalad.com/tech/how-we-have-built-alice/" target="_blank" rel="noopener">폐쇄망 환경의 배포 시스템 개발기&lt;/a>&lt;/p></description></item><item><title>Git Branch 전략</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git-branch-%EC%A0%84%EB%9E%B5/</link><pubDate>Sun, 22 Sep 2024 10:28:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git-branch-%EC%A0%84%EB%9E%B5/</guid><description>
&lt;h2>Git Branch 전략&lt;/h2>&lt;h3>Git Flow&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/git-model@2x.png"
alt="Git Flow"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="noopener">https://nvie.com/posts/a-successful-git-branching-model/&lt;/a> _&lt;/p>
&lt;h4>특징&lt;/h4>&lt;ul>
&lt;li>Vincent Driessen이 2010년에 제안한 브랜치 전략&lt;/li>
&lt;li>엄격하고 체계적인 브랜치 관리 구조&lt;/li>
&lt;li>장기적인 릴리즈 주기와 버전 관리에 적합&lt;/li>
&lt;li>여러 개의 프로덕션 버전을 동시에 지원.&lt;/li>
&lt;li>명확한 역할 분담과 작업 흐름 제공.&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;/h4>&lt;ol>
&lt;li>&lt;code>master(main)&lt;/code> 브랜치는 항상 배포 가능한 상태로 유지&lt;/li>
&lt;li>모든 개발은 &lt;code>develop&lt;/code> 브랜치를 기반으로 진행&lt;/li>
&lt;li>새로운 기능 개발은 항상 &lt;code>feature&lt;/code> 브랜치에서 수행&lt;/li>
&lt;li>&lt;code>release&lt;/code> 브랜치는 릴리즈 준비가 완료된 후에만 &lt;code>master&lt;/code>로 병합&lt;/li>
&lt;/ol>
&lt;h4>구조 및 Branch 종류&lt;/h4>&lt;h5>주요 브랜치&lt;/h5>&lt;ol>
&lt;li>&lt;code>master(main)&lt;/code>: 제품 출시 버전을 관리
&lt;ol>
&lt;li>항상 배포 가능한 상태를 유지&lt;/li>
&lt;li>모든 커밋에 태그로 버전 번호 부여&lt;/li>
&lt;li>직접적인 커밋 금지&lt;/li>
&lt;li>&lt;code>release&lt;/code> 또는 &lt;code>hotfix&lt;/code>에서 병합만 가능&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>develop&lt;/code>: 다음 버전 개발 코드 관리
&lt;ol>
&lt;li>&lt;code>feature&lt;/code> 브랜치의 기준점.&lt;/li>
&lt;li>기능 개발 완료된 코드 통합&lt;/li>
&lt;li>다음 릴리즈를 위한 코드베이스&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h5>보조 브랜치&lt;/h5>&lt;ol>
&lt;li>&lt;code>feature&lt;/code>: 새로운 기능 개발
&lt;ol>
&lt;li>&lt;code>develop&lt;/code>에서 분기&lt;/li>
&lt;li>기능 단위로 생성&lt;/li>
&lt;li>개발 완료 후 &lt;code>develop&lt;/code>에 병합&lt;/li>
&lt;li>네이밍: &lt;code>feature/기능명&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>release&lt;/code>: 출시 준비
&lt;ol>
&lt;li>&lt;code>develop&lt;/code>에서 분기&lt;/li>
&lt;li>버그 수정, 문서 작업 등 릴리즈 준비 작업만 허용&lt;/li>
&lt;li>완료시 &lt;code>master(main)&lt;/code>와 &lt;code>develop&lt;/code>에 병합&lt;/li>
&lt;li>네이밍: &lt;code>release-버전&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>hotfix&lt;/code>: 긴급 버그 수정
&lt;ol>
&lt;li>&lt;code>master(main)&lt;/code>에서 분기&lt;/li>
&lt;li>수정 후 &lt;code>master(main)&lt;/code>와 &lt;code>develop&lt;/code>에 병합&lt;/li>
&lt;li>네이밍: hotfix-버전&lt;br>
각 브랜치의 명명 규칙을 정하여 따르도록 한다.&lt;br>
예)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;code>feature/*&lt;/code>: 기능 이름 사용&lt;/li>
&lt;li>&lt;code>release/*&lt;/code>: 버전 번호 사용&lt;/li>
&lt;li>&lt;code>hotfix/*&lt;/code>: 버그 식별자 사용&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;/h4>&lt;h5>신규 시나리오&lt;/h5>&lt;ol>
&lt;li>develop 브랜치에서 시작&lt;/li>
&lt;li>feature 브랜치 생성&lt;/li>
&lt;li>기능 개발 및 테스트&lt;/li>
&lt;li>develop에 병합&lt;/li>
&lt;li>feature 브랜치 삭제&lt;/li>
&lt;/ol>
&lt;h5>릴리즈 프로세스&lt;/h5>&lt;ol>
&lt;li>develop에서 release 브랜치 생성&lt;/li>
&lt;li>버전 번호 업데이트&lt;/li>
&lt;li>최종 테스트 및 버그 수정&lt;/li>
&lt;li>master와 develop에 병합&lt;/li>
&lt;li>태그 생성 및 release 브랜치 삭제&lt;/li>
&lt;/ol>
&lt;h5>긴급 버그 수정&lt;/h5>&lt;ol>
&lt;li>master에서 hotfix 브랜치 생성&lt;/li>
&lt;li>버그 수정 및 버전 업데이트&lt;/li>
&lt;li>master와 develop에 병합&lt;/li>
&lt;li>태그 생성 및 hotfix 브랜치 삭제&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>체계적이고 예측 가능한 개발 프로세스&lt;br>버전 관리와 유지보수가 용이&lt;br>대규모 프로젝트와 팀에 적합&lt;br>릴리즈 주기가 긴 프로젝트에 효과적&lt;br>엄격한 코드 품질 관리&lt;br>명확한 역할 분담&lt;/td>
&lt;td>복잡한 브랜치 구조로 인한 학습 곡선&lt;br>소규모 프로젝트나 빠른 배포가 필요한 경우 과도할 수 있다.&lt;br>브랜치 관리에 시간과 노력이 많이 소요될 수 있음.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>중대형 프로젝트&lt;/td>
&lt;td>5인 이상&lt;/td>
&lt;td>주/월 단위 정기적인 릴리즈&lt;/td>
&lt;td>높은 수준의 QA 프로세스 필요&lt;br>체계적인 테스트 체계 필요&lt;br>코드 리뷰 문화 필수&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>장기 실행 브랜치의 병합 충돌&lt;br>&lt;code>feature&lt;/code> 브랜치 간의 의존성&lt;br>큰 규모의 병합으로 인한 위험&lt;/td>
&lt;td>복잡한 배포 프로세스&lt;br>릴리즈 준비 기간 장기화&lt;br>&lt;code>hotfix&lt;/code> 적용의 복잡성&lt;/td>
&lt;td>브랜치 간 코드 동기화 문제&lt;br>테스트 커버리지 확보 어려움&lt;br>코드 리뷰 병목 현상&lt;/td>
&lt;td>브랜치 관리에 많은 시간이 노력이 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;/h5>&lt;ul>
&lt;li>다양한 종류의 브랜치 사용&lt;/li>
&lt;li>엄격한 브랜치 생성 및 병합 규칙&lt;/li>
&lt;li>릴리스 및 핫픽스 프로세스의 복잡성&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;/h4>&lt;ul>
&lt;li>자동화된 테스트 시스템&lt;/li>
&lt;li>각 브랜치 별 자동 빌드 및 테스트 환경&lt;/li>
&lt;li>릴리즈 브랜치에 대한 자동 배포 파이프라인&lt;/li>
&lt;li>브랜치 상태 모니터링 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;/h5>&lt;ol>
&lt;li>브랜치 전략과 CI/CD 파이프라인 연동
&lt;ul>
&lt;li>&lt;code>master(main)&lt;/code>와 &lt;code>develop&lt;/code> 브랜치에 대한 자동 빌드 및 테스트 파이프라인 구성&lt;/li>
&lt;li>&lt;code>feature&lt;/code>, &lt;code>release&lt;/code>, &lt;code>hotfix&lt;/code> 브랜치에 대한 별도의 CI 파이프라인 설정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트
&lt;ul>
&lt;li>모든 브랜치에 대해 자동화된 단위 테스트, 통합 테스트 실행&lt;/li>
&lt;li>&lt;code>develop&lt;/code> 브랜치로의 병합 시 추가적인 테스트 수행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경별 배포
&lt;ul>
&lt;li>&lt;code>develop&lt;/code> 브랜치는 개발/테스트 환경에 자동 배포&lt;/li>
&lt;li>&lt;code>release&lt;/code> 브랜치는 스테이징 환경에 배포&lt;/li>
&lt;li>&lt;code>master&lt;/code> 브랜치는 프로덕션 환경에 배포&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 리뷰 프로세스
&lt;ul>
&lt;li>Pull Request 생성 시 자동으로 CI 파이프라인 실행&lt;/li>
&lt;li>코드 리뷰 승인 후 자동 병합 및 배포&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>버전 관리
&lt;ul>
&lt;li>&lt;code>release&lt;/code> 브랜치 생성 시 자동으로 버전 태그 생성&lt;/li>
&lt;li>배포 시 해당 버전 정보 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 롤백
&lt;ul>
&lt;li>배포 후 자동화된 모니터링 시스템 연동&lt;/li>
&lt;li>문제 발생 시 빠른 롤백 메커니즘 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문서화
&lt;ul>
&lt;li>CI/CD 파이프라인 실행 결과 자동 문서화&lt;/li>
&lt;li>릴리즈 노트 자동 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;/h4>&lt;h5>버전 관리 체계&lt;/h5>&lt;p>Semantic Versioning(SemVer)을 사용&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">MAJOR.MINOR.PATCH&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>주 버전(Major): 호환성이 깨지는 변경사항&lt;/li>
&lt;li>부 버전(Minor): 기능 추가&lt;/li>
&lt;li>패치 버전(Patch): 버그 수정&lt;br>
예: 1.2.3 (주 버전 1, 부 버전 2, 패치 3)&lt;/li>
&lt;/ul>
&lt;h5>태그 관리&lt;/h5>&lt;ul>
&lt;li>모든 릴리즈에 태그 부여&lt;/li>
&lt;li>버전 정보 포함&lt;/li>
&lt;li>릴리즈 노트 연결&lt;/li>
&lt;/ul>
&lt;h5>이력 관리&lt;/h5>&lt;ul>
&lt;li>릴리즈 노트 작성&lt;/li>
&lt;li>변경 이력 문서화&lt;/li>
&lt;li>주요 변경 사항 추적&lt;/li>
&lt;/ul>
&lt;h3>GitHub Flow&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/48032310-63842400-e114-11e8-8db0-06dc0504dcb5.png"
alt="Github Flow"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://github.com/SvanBoxel/release-based-workflow/issues/1" target="_blank" rel="noopener">https://github.com/SvanBoxel/release-based-workflow/issues/1&lt;/a> _&lt;/p>
&lt;h4>특징&lt;/h4>&lt;ul>
&lt;li>단순한 브랜치 전략&lt;/li>
&lt;li>&lt;code>main&lt;/code> 브랜치 중심의 지속적 배포&lt;/li>
&lt;li>Pull Request 기반 코드 리뷰&lt;/li>
&lt;li>빠른 피드백과 지속적 통합&lt;/li>
&lt;li>자동화된 테스트와 배포 강조&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;/h4>&lt;ol>
&lt;li>main 브랜치는 항상 배포 가능한 상태 유지&lt;/li>
&lt;li>새로운 작업은 항상 기능 브랜치에서 수행&lt;/li>
&lt;li>기능 브랜치는 자주 push하고 Pull Request 생성&lt;/li>
&lt;li>Pull Request를 통한 코드 리뷰 필수&lt;/li>
&lt;li>승인된 Pull Request는 즉시 main에 병합&lt;/li>
&lt;li>main에 병합된 변경사항은 즉시 배포&lt;/li>
&lt;/ol>
&lt;h4>구조 및 Branch 종류&lt;/h4>&lt;h5>&lt;code>main (master)&lt;/code>&lt;/h5>&lt;ul>
&lt;li>항상 배포 가능한 상태 유지&lt;/li>
&lt;li>모든 코드는 리뷰를 거쳐 병합&lt;/li>
&lt;/ul>
&lt;h5>&lt;code>feature Branches&lt;/code>&lt;/h5>&lt;ul>
&lt;li>모든 개발은 &lt;code>feature&lt;/code> 브랜치에서 진행&lt;/li>
&lt;li>기능/버그수정/문서 등 모든 변경사항.&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;/h4>&lt;h5>새로운 기능 개발&lt;/h5>&lt;ol>
&lt;li>main에서 feature 브랜치 생성&lt;/li>
&lt;li>기능 개발 및 테스트&lt;/li>
&lt;li>PR 생성 및 리뷰&lt;/li>
&lt;li>main에 병합 및 배포&lt;/li>
&lt;/ol>
&lt;h5>버그 수정&lt;/h5>&lt;ol>
&lt;li>main에서 hotfix 브랜치 생성&lt;/li>
&lt;li>수정 및 테스트&lt;/li>
&lt;li>PR 생성 및 긴급 리뷰&lt;/li>
&lt;li>main에 병합 및 즉시 배포&lt;/li>
&lt;/ol>
&lt;h5>실험적 기능&lt;/h5>&lt;ol>
&lt;li>prototype 브랜치 생성&lt;/li>
&lt;li>기능 구현 및 검증&lt;/li>
&lt;li>성공 시 정식 feature로 전환&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>간단하고 이해하기 쉬움&lt;br> 빠른 개발과 배포 주기 지원&lt;br> 지속적인 통합과 배포 용이&lt;br> 코드 리뷰 문화 강화&lt;/td>
&lt;td>버전 관리가 명시적이지 않음&lt;br>대규모 프로젝트나 복잡한 릴리스 관리에는 부적합할 수 있음&lt;br>hotfix 처리를 위한 별도 프로세스 부재&lt;br>환경별 배포 관리 어려움&lt;br>롤백 복잡성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>소규모 ~ 중규모 프로젝트&lt;/td>
&lt;td>작은 팀 ~ 중간 규모 팀 (5-20명)&lt;/td>
&lt;td>매우 빈번 (일 단위 또는 그 이상)&lt;/td>
&lt;td>자동화된 테스트 필수&lt;br>코드 리뷰 문화 중요&lt;br>CI/CD 파이프라인 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>동시 다발적 PR 충돌&lt;br>테스트 커버리지 부족&lt;br>리뷰 병목 현상&lt;br>&lt;br>&lt;/td>
&lt;td>잦은 배포로 인한 불안정성&lt;br>롤백 복잡성&lt;br>환경 설정 관리 어려움&lt;br>&lt;br>&lt;/td>
&lt;td>빠른 개발로 인한 품질 저하&lt;br>문서화 부족&lt;br>기술 부채 누적&lt;br>&lt;br>&lt;/td>
&lt;td>명시적인 버전 관리의 어려움&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;/h5>&lt;ul>
&lt;li>동시 진행 PR 수 증가&lt;/li>
&lt;li>팀 규모 증가&lt;/li>
&lt;li>환경 설정 다양화&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;/h4>&lt;ul>
&lt;li>자동화된 빌드 및 테스트 시스템&lt;/li>
&lt;li>지속적 통합(CI) 도구 (예: Jenkins, GitHub Actions)&lt;/li>
&lt;li>자동화된 배포 파이프라인&lt;/li>
&lt;li>코드 품질 검사 도구 (예: SonarQube)&lt;/li>
&lt;li>모니터링 및 로깅 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;/h5>&lt;ol>
&lt;li>GitHub Actions 활용:
&lt;ul>
&lt;li>GitHub에서 제공하는 CI/CD 도구인 GitHub Actions를 사용하여 워크플로우를 자동화&lt;/li>
&lt;li>.github/workflows 디렉토리에 YAML 파일로 워크플로우를 정의.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트 구현:
&lt;ul>
&lt;li>풀 리퀘스트가 생성될 때마다 자동으로 빌드 및 테스트를 실행하도록 설정.&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 코드 스타일 검사 등을 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 통합 (CI) 설정:
&lt;ul>
&lt;li>모든 코드 변경사항에 대해 자동으로 빌드와 테스트를 실행.&lt;/li>
&lt;li>메인 브랜치에 병합하기 전에 모든 테스트를 통과해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 배포 (CD) 구현:
&lt;ul>
&lt;li>테스트를 통과한 코드를 자동으로 스테이징 또는 프로덕션 환경에 배포.&lt;/li>
&lt;li>필요에 따라 수동 승인 단계를 추가할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 변수 및 시크릿 관리:
&lt;ul>
&lt;li>GitHub의 시크릿 기능을 사용하여 민감한 정보를 안전하게 관리.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 알림 설정:
&lt;ul>
&lt;li>워크플로우 상태, 실패, 중요 이벤트에 대한 알림을 설정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 검사 통합:
&lt;ul>
&lt;li>정적 코드 분석, 코드 커버리지 검사 등을 워크플로우에 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>병렬 실행 및 매트릭스 빌드 활용:
&lt;ul>
&lt;li>여러 환경에서 동시에 테스트를 실행하여 효율성을 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>캐싱 활용:
&lt;ul>
&lt;li>의존성 및 빌드 결과물을 캐싱하여 빌드 시간을 단축한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정기적인 워크플로우 검토 및 최적화:
&lt;ul>
&lt;li>CI/CD 파이프라인을 주기적으로 검토하고 개선한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;/h4>&lt;ul>
&lt;li>명시적인 버전 관리보다는 커밋 해시나 배포 시간을 이용&lt;/li>
&lt;li>필요시 Git 태그를 활용하여 주요 릴리스 표시&lt;/li>
&lt;/ul>
&lt;h3>GitLab Flow&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/image-9.png"
alt="Gitlab Flow"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://blog.programster.org/git-workflows" target="_blank" rel="noopener">https://blog.programster.org/git-workflows&lt;/a> _&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/image-10-1024x707.png"
alt="Gitlab Flow"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.linkedin.com/pulse/gitlab-flow-jadson-santos" target="_blank" rel="noopener">https://www.linkedin.com/pulse/gitlab-flow-jadson-santos&lt;/a> _&lt;/p>
&lt;h4>특징&lt;/h4>&lt;ul>
&lt;li>Git Flow의 복잡성을 줄이고, GitHub Flow의 단순성을 결합&lt;/li>
&lt;li>환경별 브랜치 전략 채택&lt;/li>
&lt;li>지속적 배포와 안정성 균형&lt;/li>
&lt;li>단방향 워크플로우
&lt;ul>
&lt;li>&lt;code>main&lt;/code> → &lt;code>staging&lt;/code> → &lt;code>pre-production&lt;/code> → &lt;code>production&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개발, 스테이징, 프로덕션 환경을 위한 브랜치 구조 지원&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;/h4>&lt;ul>
&lt;li>모든 코드 변경은 이슈 트래킹 시스템과 연결&lt;/li>
&lt;li>&lt;code>main&lt;/code> 브랜치는 항상 안정적이고 배포 가능한 상태 유지&lt;/li>
&lt;li>환경별로 명확한 테스트 및 배포 절차 준수&lt;/li>
&lt;li>Merge Request를 통한 코드 리뷰 필수&lt;/li>
&lt;/ul>
&lt;h4>구조 및 Branch 종류&lt;/h4>&lt;h5>Main&lt;/h5>&lt;ul>
&lt;li>개발의 기준점&lt;/li>
&lt;li>통합된 코드 관리&lt;/li>
&lt;li>CI 통과 필수&lt;/li>
&lt;li>&lt;code>feature&lt;/code> 브랜치의 병합 대상&lt;/li>
&lt;/ul>
&lt;h5>Production&lt;/h5>&lt;ul>
&lt;li>실제 운영 환경 코드&lt;/li>
&lt;li>안정성 검증 완료&lt;/li>
&lt;li>배포 이력 관리&lt;/li>
&lt;li>&lt;code>main&lt;/code>에서 테스트 완료된 코드를 병합&lt;/li>
&lt;/ul>
&lt;h5>pre-production/staging&lt;/h5>&lt;ul>
&lt;li>운영 환경 검증용&lt;/li>
&lt;li>QA 테스트 진행&lt;/li>
&lt;li>성능/부하 테스트&lt;/li>
&lt;li>&lt;code>main&lt;/code>에서 분기하여 테스트 후 &lt;code>production&lt;/code>으로 병합.&lt;/li>
&lt;/ul>
&lt;h5>Feature&lt;/h5>&lt;ul>
&lt;li>기능 개발용&lt;/li>
&lt;li>&lt;code>main&lt;/code>에서 분기하여 작업 후 Merge Request 생성.&lt;/li>
&lt;/ul>
&lt;h5>Hotfix&lt;/h5>&lt;ul>
&lt;li>긴급 버그 수정&lt;/li>
&lt;li>&lt;code>production&lt;/code>에서 분기&lt;/li>
&lt;li>모든 환경에 반영&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;/h4>&lt;h5>새로운 기능 개발&lt;/h5>&lt;ol>
&lt;li>Main에서 Feature 브랜치 생성&lt;/li>
&lt;li>개발 및 테스트&lt;/li>
&lt;li>Main에 MR 생성&lt;/li>
&lt;li>리뷰 및 CI 통과&lt;/li>
&lt;li>단계적 환경 배포&lt;/li>
&lt;/ol>
&lt;h5>버그 수정&lt;/h5>&lt;ol>
&lt;li>Production에서 Hotfix 브랜치 생성&lt;/li>
&lt;li>수정 및 테스트&lt;/li>
&lt;li>Production에 병합&lt;/li>
&lt;li>하위 환경에 백포트&lt;/li>
&lt;/ol>
&lt;h5>정기 배포&lt;/h5>&lt;ol>
&lt;li>Main 브랜치 안정화&lt;/li>
&lt;li>Staging 환경 배포&lt;/li>
&lt;li>QA 검증&lt;/li>
&lt;li>Pre-production 검증&lt;/li>
&lt;li>Production 배포&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>유연한 환경 관리&lt;br>이슈 트래킹과의 통합으로 투명한 개발 프로세스&lt;br>다양한 배포 시나리오 지원&lt;br>안정성&lt;/td>
&lt;td>Git Flow보다는 단순하지만 GitHub Flow보다는 복잡&lt;br>환경별 브랜치 관리에 따른 추가 작업 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>중소규모 ~ 대규모 프로젝트&lt;/td>
&lt;td>5-50명 정도의 중소규모 팀&lt;/td>
&lt;td>주 단위 또는 2주 단위 배포&lt;/td>
&lt;td>중간 ~ 높은 수준의 품질 관리 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>브랜치 간 동기화 문제&lt;br>환경별 설정 불일치&lt;br>병합 충돌&lt;/td>
&lt;td>환경별 배포 실패&lt;br>설정 오류&lt;br>성능 저하&lt;/td>
&lt;td>여러 환경에서의 일관된 품질 유지 필요&lt;/td>
&lt;td>브랜치 관리 복잡성&lt;br>환경 설정 부담&lt;br>문서화 필요성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;/h5>&lt;ul>
&lt;li>&lt;strong>브랜치 관리&lt;/strong>
&lt;ul>
&lt;li>다중 환경 구성&lt;/li>
&lt;li>동기화 필요성&lt;/li>
&lt;li>버전 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>배포 프로세스&lt;/strong>
&lt;ul>
&lt;li>단계적 검증&lt;/li>
&lt;li>환경별 설정&lt;/li>
&lt;li>롤백 절차&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>설정 관리&lt;/strong>
&lt;ul>
&lt;li>환경별 변수&lt;/li>
&lt;li>접근 권한&lt;/li>
&lt;li>보안 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;/h4>&lt;ul>
&lt;li>자동화된 테스트 시스템&lt;/li>
&lt;li>환경별 자동 배포 파이프라인&lt;/li>
&lt;li>코드 품질 검사 도구&lt;/li>
&lt;li>모니터링 및 로깅 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;/h5>&lt;ol>
&lt;li>.gitlab-ci.yml 파일 생성:
&lt;ul>
&lt;li>프로젝트 루트에.gitlab-ci.yml 파일을 생성하여 CI/CD 파이프라인을 정의한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>파이프라인 구조 정의:
&lt;ul>
&lt;li>stages를 정의하여 파이프라인의 단계를 구성한다 (예: build, test, deploy).&lt;/li>
&lt;li>각 stage에 해당하는 job을 정의한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>브랜치별 파이프라인 설정:
&lt;ul>
&lt;li>main, production 등 주요 브랜치에 대한 파이프라인을 별도로 구성한다.&lt;/li>
&lt;li>rules 키워드를 사용하여 브랜치별로 다른 job을 실행하도록 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트 구현:
&lt;ul>
&lt;li>단위 테스트, 통합 테스트 등을 파이프라인에 포함시킨다.&lt;/li>
&lt;li>test stage에서 다양한 테스트를 실행하도록 구성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경별 배포 자동화:
&lt;ul>
&lt;li>개발, 스테이징, 프로덕션 환경에 대한 자동 배포 job을 구성한다.&lt;/li>
&lt;li>environment 키워드를 사용하여 배포 환경을 지정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>품질 검사 도구 통합:
&lt;ul>
&lt;li>코드 품질, 보안 검사 등을 수행하는 job을 추가한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>아티팩트 및 캐시 활용:
&lt;ul>
&lt;li>artifacts와 cache를 사용하여 빌드 결과물을 저장하고 재사용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CI/CD 변수 활용:
&lt;ul>
&lt;li>GitLab의 CI/CD 변수 기능을 사용하여 민감한 정보를 안전하게 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 알림 설정:
&lt;ul>
&lt;li>파이프라인 실행 결과에 대한 알림을 구성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GitLab Runner 설정:
&lt;ul>
&lt;li>프로젝트에 적합한 Runner를 구성하여 CI/CD 작업을 실행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;/h4>&lt;ul>
&lt;li>시맨틱 버저닝 (MAJOR.MINOR.PATCH)&lt;/li>
&lt;li>환경별 태그 관리&lt;/li>
&lt;li>배포 이력 추적&lt;/li>
&lt;/ul>
&lt;h3>Scaled Trunk-Based Development&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/trunk1c.png"
alt="Scaled Trunk-Based Development"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://trunkbaseddevelopment.com/" target="_blank" rel="noopener">https://trunkbaseddevelopment.com/&lt;/a> _&lt;/p>
&lt;h4>특징&lt;/h4>&lt;ul>
&lt;li>단일 메인 브랜치(trunk)를 중심으로 개발&lt;/li>
&lt;li>짧은 수명의 기능 브랜치 사용&lt;/li>
&lt;li>빈번한 통합과 배포&lt;/li>
&lt;li>기능 플래그를 활용한 기능 관리&lt;/li>
&lt;li>대규모 팀과 프로젝트에 적합&lt;/li>
&lt;li>마이크로서비스 아키텍처 지원&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;/h4>&lt;ul>
&lt;li>trunk는 항상 안정적이고 배포 가능한 상태 유지&lt;/li>
&lt;li>기능 브랜치는 짧게 유지 (1-2일 이내)&lt;/li>
&lt;li>빈번한 통합과 배포&lt;/li>
&lt;li>자동화된 테스트와 CI/CD 파이프라인 필수&lt;/li>
&lt;li>기능 플래그를 활용한 미완성 기능 관리&lt;/li>
&lt;/ul>
&lt;h4>구조 및 Branch 종류&lt;/h4>&lt;ul>
&lt;li>
&lt;p>Trunk 브랜치:&lt;/p>
&lt;ul>
&lt;li>항상 배포 가능한 상태 유지&lt;/li>
&lt;li>모든 개발 작업의 최종 목적지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>기능 브랜치:&lt;/p>
&lt;ul>
&lt;li>개별 기능 개발을 위해 trunk에서 분기&lt;/li>
&lt;li>빠르게 개발 완료 후 trunk로 병합 (보통 1-2일 이내)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>릴리스 브랜치:&lt;/p>
&lt;ul>
&lt;li>필요시에만 생성&lt;/li>
&lt;li>릴리스 준비 및 핫픽스를 위해 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;/h4>&lt;h5>새로운 기능 개발&lt;/h5>&lt;ol>
&lt;li>Feature Flag 생성&lt;/li>
&lt;li>임시 브랜치 생성&lt;/li>
&lt;li>기능 구현 (1-2일)&lt;/li>
&lt;li>테스트 및 리뷰&lt;/li>
&lt;li>main 병합&lt;/li>
&lt;li>단계적 Flag 활성화&lt;/li>
&lt;/ol>
&lt;h5>긴급 수정&lt;/h5>&lt;ol>
&lt;li>main에서 직접 수정&lt;/li>
&lt;li>테스트 자동화&lt;/li>
&lt;li>즉시 배포&lt;/li>
&lt;li>모니터링&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>빠른 통합과 피드백&lt;br>병합 충돌 최소화&lt;br>지속적 배포 용이&lt;br>대규모 팀 협업에 적합&lt;/td>
&lt;td>높은 수준의 자동화 필요&lt;br>기능 플래그 관리의 복잡성&lt;br>팀원들의 높은 기술력과 규율 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>중대형 프로젝트&lt;/td>
&lt;td>대규모 팀 (50명 이상)&lt;/td>
&lt;td>매우 빈번 (일일 또는 그 이상)&lt;/td>
&lt;td>높은 수준의 자동화된 테스트 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>빈번한 통합으로 인한 일시적 불안정성&lt;/td>
&lt;td>잦은 배포로 인한 운영 부담 증가&lt;/td>
&lt;td>빠른 개발 주기로 인한 품질 저하 가능성&lt;/td>
&lt;td>기능 플래그 관리의 복잡성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;/h5>&lt;ul>
&lt;li>전반적으로 중간 수준의 복잡도&lt;/li>
&lt;li>기능 플래그 관리와 대규모 팀 조정에서 복잡도 증가&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;/h4>&lt;ul>
&lt;li>강력한 자동화된 테스트 시스템&lt;/li>
&lt;li>빠른 빌드 및 배포 파이프라인&lt;/li>
&lt;li>코드 품질 검사 도구&lt;/li>
&lt;li>실시간 모니터링 시스템&lt;/li>
&lt;li>기능 플래그 관리 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;/h5>&lt;ol>
&lt;li>자동화된 빌드 및 테스트 파이프라인 구축:
&lt;ul>
&lt;li>모든 커밋에 대해 자동으로 빌드 및 테스트를 실행하는 CI 파이프라인 구성&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 성능 테스트 등 다양한 테스트 자동화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>짧은 수명의 기능 브랜치 사용:
&lt;ul>
&lt;li>기능 브랜치에서 작업 후 빠르게 trunk로 병합 (보통 1-2일 이내)&lt;/li>
&lt;li>각 기능 브랜치에 대해 자동화된 테스트 실행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>트렁크 브랜치 보호:
&lt;ul>
&lt;li>트렁크 브랜치에 직접 푸시 금지&lt;/li>
&lt;li>모든 변경사항은 코드 리뷰와 자동화된 테스트를 거친 후 병합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 배포(CD) 구현:
&lt;ul>
&lt;li>트렁크 브랜치에 병합된 코드를 자동으로 스테이징 환경에 배포&lt;/li>
&lt;li>스테이징 환경에서 추가 테스트 후 문제가 없으면 프로덕션 환경으로 자동 배포&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기능 플래그 사용:
&lt;ul>
&lt;li>미완성 기능을 트렁크에 안전하게 병합할 수 있도록 기능 플래그 구현&lt;/li>
&lt;li>CI/CD 파이프라인에서 기능 플래그 상태를 제어&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 롤백 메커니즘:
&lt;ul>
&lt;li>배포 후 실시간 모니터링 시스템 구축&lt;/li>
&lt;li>문제 발생 시 빠른 롤백이 가능한 시스템 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>릴리스 관리 자동화:
&lt;ul>
&lt;li>버전 관리 및 릴리스 노트 생성 자동화&lt;/li>
&lt;li>릴리스 프로세스를 CI/CD 파이프라인에 통합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 검사 통합:
&lt;ul>
&lt;li>정적 코드 분석 도구를 CI/CD 파이프라인에 통합&lt;/li>
&lt;li>코드 커버리지, 복잡도 등의 메트릭을 지속적으로 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 구성 관리:
&lt;ul>
&lt;li>인프라스트럭처 as 코드(IaC) 도구를 사용하여 환경 구성 자동화&lt;/li>
&lt;li>개발, 스테이징, 프로덕션 환경의 일관성 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;/h4>&lt;ul>
&lt;li>지속적 배포로 인해 세밀한 버전 관리가 필요&lt;/li>
&lt;li>Semantic Versioning 사용 권장&lt;/li>
&lt;li>자동화된 버전 증가 시스템 구축&lt;/li>
&lt;/ul>
&lt;h3>Feature Branch Workflow Vs Trunk-Based Development 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>Feature Branch Workflow&lt;/th>
&lt;th>Trunk-Based Development&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 철학&lt;/strong>&lt;/td>
&lt;td>기능별 격리 개발&lt;/td>
&lt;td>통합 중심 개발&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>브랜치 수명&lt;/strong>&lt;/td>
&lt;td>긴 수명 (days-weeks)&lt;/td>
&lt;td>짧은 수명 (hours-days)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 브랜치&lt;/strong>&lt;/td>
&lt;td>main, feature, release 등&lt;/td>
&lt;td>main(trunk) 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>코드 리뷰&lt;/strong>&lt;/td>
&lt;td>PR/MR 기반 공식 리뷰&lt;/td>
&lt;td>실시간/페어 리뷰&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 주기&lt;/strong>&lt;/td>
&lt;td>계획된 정기 배포&lt;/td>
&lt;td>수시 배포 (continuous)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합 팀 규모&lt;/strong>&lt;/td>
&lt;td>중/대규모 (5인 이상)&lt;/td>
&lt;td>소규모 (5인 이하)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>품질 관리&lt;/strong>&lt;/td>
&lt;td>단계적 검증&lt;/td>
&lt;td>자동화된 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>통합 빈도&lt;/strong>&lt;/td>
&lt;td>낮음 (주단위)&lt;/td>
&lt;td>높음 (일단위)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>자동화 수준&lt;/strong>&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>버그 수정&lt;/strong>&lt;/td>
&lt;td>bugfix/hotfix 브랜치&lt;/td>
&lt;td>직접 main 수정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>기능 격리&lt;/strong>&lt;/td>
&lt;td>브랜치로 격리&lt;/td>
&lt;td>Feature Toggle 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>충돌 관리&lt;/strong>&lt;/td>
&lt;td>병합 시 해결&lt;/td>
&lt;td>수시로 해결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>릴리즈 관리&lt;/strong>&lt;/td>
&lt;td>명시적 릴리즈&lt;/td>
&lt;td>지속적 릴리즈&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복잡도&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 곡선&lt;/strong>&lt;/td>
&lt;td>가파름&lt;/td>
&lt;td>완만함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CI/CD 요구사항&lt;/strong>&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>롤백 전략&lt;/strong>&lt;/td>
&lt;td>브랜치 전환&lt;/td>
&lt;td>Feature Toggle/배포 롤백&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>문서화 수준&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합 프로젝트&lt;/strong>&lt;/td>
&lt;td>복잡한 대형 프로젝트&lt;/td>
&lt;td>단순한 소형 프로젝트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 안정성&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>변동적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>계열&lt;/td>
&lt;td>Git Flow&lt;br>GitHub Flow&lt;br>GitLab Flow&lt;br>기본 Feature Branch Workflow&lt;/td>
&lt;td>Single Trunk Development&lt;br>Scaled Trunk Development&lt;br>Short-Lived Feature Branches&lt;br>Release Branch Model&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>핵심 차이점&lt;/h4>&lt;h5>개발 프로세스&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 격리 → 개발 → 리뷰 → 병합 → 배포&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 개발 → 통합 → 배포 → 모니터링&lt;/li>
&lt;/ul>
&lt;h5>품질 관리&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 사전 검증 중심&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 사후 모니터링 중심&lt;/li>
&lt;/ul>
&lt;h5>배포 전략&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 계획적 배포&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 지속적 배포&lt;/li>
&lt;/ul>
&lt;h5>팀 문화&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 체계적/계획적&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 애자일/유연함&lt;/li>
&lt;/ul>
&lt;h5>도구 요구사항&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 브랜치 관리 도구&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 자동화 도구&lt;/li>
&lt;/ul>
&lt;h3>Git Branch 전략별 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Git Flow&lt;/th>
&lt;th>GitHub Flow&lt;/th>
&lt;th>GitLab Flow&lt;/th>
&lt;th>Scaled Trunk-Based&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>특징&lt;/strong>&lt;/td>
&lt;td>엄격한 브랜치 관리&lt;br>장기 릴리즈 주기&lt;br>체계적 구조&lt;/td>
&lt;td>단순한 구조&lt;br>지속적 배포&lt;br>PR 기반 리뷰&lt;/td>
&lt;td>환경별 브랜치&lt;br>단방향 워크플로우&lt;br>이슈 트래킹 통합&lt;/td>
&lt;td>단일 트렁크 중심&lt;br>짧은 브랜치 수명&lt;br>기능 플래그 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>브랜치 종류&lt;/strong>&lt;/td>
&lt;td>master&lt;br>develop&lt;br>feature&lt;br>release&lt;br>hotfix&lt;/td>
&lt;td>main&lt;br>feature&lt;/td>
&lt;td>main&lt;br>production&lt;br>pre-production&lt;br>feature&lt;br>hotfix&lt;/td>
&lt;td>trunk&lt;br>feature(1-2일)&lt;br>release&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>핵심 원칙&lt;/strong>&lt;/td>
&lt;td>master 안정성&lt;br>develop 기반 개발&lt;br>feature 격리&lt;/td>
&lt;td>main 안정성&lt;br>feature 분리&lt;br>PR 필수&lt;/td>
&lt;td>환경별 배포&lt;br>단방향 흐름&lt;br>MR 필수&lt;/td>
&lt;td>빠른 통합&lt;br>짧은 브랜치&lt;br>기능 플래그&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장점&lt;/strong>&lt;/td>
&lt;td>체계적 버전관리&lt;br>안정적 배포&lt;br>명확한 역할구분&lt;/td>
&lt;td>단순성&lt;br>빠른 배포&lt;br>쉬운 학습곡선&lt;/td>
&lt;td>환경 관리 용이&lt;br>단계적 배포&lt;br>안정성&lt;/td>
&lt;td>빠른 통합&lt;br>최소 충돌&lt;br>지속적 배포&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단점&lt;/strong>&lt;/td>
&lt;td>복잡한 구조&lt;br>느린 배포&lt;br>관리 부담&lt;/td>
&lt;td>버전관리 어려움&lt;br>복잡한 릴리즈&lt;br>환경구분 없음&lt;/td>
&lt;td>복잡한 구조&lt;br>관리 부담&lt;br>느린 배포&lt;/td>
&lt;td>높은 자동화 필요&lt;br>기능플래그 복잡성&lt;br>높은 기술력 요구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합 규모&lt;/strong>&lt;/td>
&lt;td>중대형 프로젝트&lt;br>5인 이상 팀&lt;/td>
&lt;td>소중규모 프로젝트&lt;br>5-20인 팀&lt;/td>
&lt;td>중대형 프로젝트&lt;br>5-50인 팀&lt;/td>
&lt;td>대규모 프로젝트&lt;br>50인 이상 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 주기&lt;/strong>&lt;/td>
&lt;td>주/월 단위&lt;/td>
&lt;td>수시 배포&lt;/td>
&lt;td>주/2주 단위&lt;/td>
&lt;td>매일/수시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CI/CD 요구사항&lt;/strong>&lt;/td>
&lt;td>중간 수준&lt;br>브랜치별 파이프라인&lt;/td>
&lt;td>높은 수준&lt;br>자동화 필수&lt;/td>
&lt;td>높은 수준&lt;br>환경별 파이프라인&lt;/td>
&lt;td>매우 높은 수준&lt;br>완전 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>버전 관리&lt;/strong>&lt;/td>
&lt;td>Semantic Versioning&lt;br>태그 필수&lt;/td>
&lt;td>커밋 해시/배포시간&lt;/td>
&lt;td>환경별 태그&lt;br>Semantic Versioning&lt;/td>
&lt;td>지속적 버전관리&lt;br>자동화된 증가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복잡도&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>중간-높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Git Branch 전략 선택 시 고려사항&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>영역&lt;/th>
&lt;th>주요 고려사항&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>프로젝트 컨텍스트&lt;/strong>&lt;/td>
&lt;td>• 프로젝트 규모/복잡도&lt;br>• 안정성 요구사항&lt;br>• 릴리스 주기&lt;br>• 마이크로서비스 여부&lt;br>• 유지보수 용이성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>팀 구성 및 문화&lt;/strong>&lt;/td>
&lt;td>• 팀 규모 (현재/미래)&lt;br>• Git 사용 경험 수준&lt;br>• 개발자 숙련도&lt;br>• 분산 팀 여부&lt;br>• 협업/코드 리뷰 문화&lt;br>• 학습 곡선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 프로세스&lt;/strong>&lt;/td>
&lt;td>• 배포 빈도&lt;br>• 환경 구성&lt;br>• 롤백 필요성&lt;br>• 버전 관리 요구사항&lt;br>• 무중단 배포 필요성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>품질 관리&lt;/strong>&lt;/td>
&lt;td>• 테스트 자동화 수준&lt;br>• 코드 리뷰 정책&lt;br>• 품질 게이트&lt;br>• 문서화 요구사항&lt;br>• 모니터링 체계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인프라 및 기술&lt;/strong>&lt;/td>
&lt;td>• CI/CD 인프라 수준&lt;br>• 자동화 도구 활용&lt;br>• 테스트 인프라&lt;br>• 운영 환경 구성&lt;br>• 기존 시스템 호환성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>비즈니스 요구사항&lt;/strong>&lt;/td>
&lt;td>• Time to Market&lt;br>• 고객 피드백 반영&lt;br>• 버그 수정 우선순위&lt;br>• 보안/규제 요구사항&lt;br>• 회사 정책&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리스크 관리&lt;/strong>&lt;/td>
&lt;td>• 통합 리스크&lt;br>• 배포 리스크&lt;br>• 품질 리스크&lt;br>• 운영 리스크&lt;br>• 롤백 계획&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성&lt;/strong>&lt;/td>
&lt;td>• 팀/프로젝트 확장 계획&lt;br>• 기술 스택 변화 대응&lt;br>• 요구사항 변화 대응&lt;br>• 장기적 유지보수&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Git의 고급 기능</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git%EC%9D%98-%EA%B3%A0%EA%B8%89-%EA%B8%B0%EB%8A%A5/</link><pubDate>Sat, 21 Sep 2024 07:28:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git%EC%9D%98-%EA%B3%A0%EA%B8%89-%EA%B8%B0%EB%8A%A5/</guid><description>
&lt;h2>Git의 고급 기능&lt;/h2>&lt;h3>태그&lt;/h3>&lt;p>프로젝트의 특정 시점을 표시하는 중요한 기능&lt;br>
릴리스 버전 관리나 중요한 커밋 지점을 식별하기 위해 사용된다.&lt;br>
두 가지 종류의 태그가 있으며 각각의 사용 목적과 특징이 다르다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>태그의 종류&lt;/h4>&lt;ol>
&lt;li>Lightweight 태그
&lt;ul>
&lt;li>특정 커밋에 대한 참조로 단순히 커밋에 이름을 부여하는 형태이다.&lt;/li>
&lt;li>커밋 체크섬만을 저장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Annotated 태그
&lt;ul>
&lt;li>태그 생성자 정보, 날짜, 메시지 등 추가 메타데이터를 저장한다.&lt;/li>
&lt;li>Git 데이터베이스에 완전한 객체로 저장된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>태그 생성하기&lt;/h4>&lt;ol>
&lt;li>Lightweight 태그&lt;br>
Lightweight 태그를 만들 때는 &lt;code>-a&lt;/code>, &lt;code>-s&lt;/code>, &lt;code>-m&lt;/code> 옵션을 사용하지 않는다.&lt;br>
&lt;code>git tag &amp;lt;tagname&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git tag v1.0.0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>Annotated 태그&lt;br>
&lt;code>tag&lt;/code> 명령을 실행할 때 &lt;code>-a&lt;/code> 옵션을 추가&lt;br>
&lt;code>-m&lt;/code> 옵션으로 태그를 저장할 때 메시지를 함께 저장할 수 있다.&lt;br>
&lt;code>git tag -a &amp;lt;tagname&amp;gt; -m &amp;quot;Message&amp;quot;&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git tag -a v1.4 -m &lt;span class="s2">&amp;#34;my version 1.4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.4&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>특정 커밋에 태그 생성&lt;/h5>&lt;p>예전 커밋에 대해서도 태그할 수 있다. 커밋 히스토리는 아래와 같다고 가정한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git log --pretty&lt;span class="o">=&lt;/span>oneline
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch &lt;span class="s1">&amp;#39;experiment&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a6b4c97498bd301d84096da251c98a07c7723e65 beginning write support
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0d52aaab4479697da7686c15f77a3d64d9165190 one more thing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">6d52a271eda8725415634dd79daabbc4d9b6008e Merge branch &lt;span class="s1">&amp;#39;experiment&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0b7434d86859cc7b8c3d5e1dddfed66ff742fcbc added a commit &lt;span class="k">function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4682c3261057305bdd616e23b64b0857d832627b added a todo file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">166ae0c4d3f420721acbb115cc33848dfcc2121a started write support
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">964f16d36dfccde844893cac5b347e7b3d44abbc commit the todo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8a5cbc430f1a9c3d00faaeffd07798508422908a updated readme&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&amp;ldquo;updated rakefile&amp;rdquo; 커밋을 v1.2.0로 태그하지 못했다고 가정했을때,&lt;br>
명령의 끝에 커밋 체크섬을 명시한다(긴 체크섬을 전부 사용할 필요는 없다).&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git tag -a v1.2.0 9fceb02 -m &lt;span class="s2">&amp;#34;Release version 1.2.0&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>태그 조회하기&lt;/h4>&lt;h5>모든 태그 조회&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>패턴으로 태그 검색&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git tag -l &lt;span class="s2">&amp;#34;v1.8.5*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5-rc0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5-rc1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5-rc2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5-rc3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.8.5.5&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>태그 상세 정보 조회&lt;/h5>&lt;p>Annotated 태그의 경우, 태그 정보(태그를 만든 사람, 언제 태그를 만들었는지 태그 메시지)와 커밋 정보를 모두 확인할 수 있다.&lt;br>
Lightweight 태그의 경우, 커밋의 정보만 보여준다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git show v1.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tag v1.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Tagger: Ben Straub &amp;lt;ben@straub.cc&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Sat May &lt;span class="m">3&lt;/span> 20:19:12 &lt;span class="m">2014&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">my version 1.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit ca82a6dff817ec66f44342007202690a93763949
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Mon Mar &lt;span class="m">17&lt;/span> 21:52:11 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> changed the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git tag v1.4-lw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.4-lw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v1.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git show v1.4-lw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit ca82a6dff817ec66f44342007202690a93763949
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Mon Mar &lt;span class="m">17&lt;/span> 21:52:11 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> changed the version number&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>태그 공유 및 가져오기&lt;/h4>&lt;p>&lt;code>git push&lt;/code> 명령은 자동으로 리모트 서버에 태그를 전송하지 않는다.&lt;br>
태그를 만들었으면 서버에 별도로 Push 해야 한다.&lt;/p>
&lt;h5>특정 태그 원격 저장소로 내보내기&lt;/h5>&lt;p>&lt;code>git push origin &amp;lt;태그 이름&amp;gt;&lt;/code> 을 실행한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git push origin v1.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 14, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Delta compression using up to &lt;span class="m">8&lt;/span> threads.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compressing objects: 100% &lt;span class="o">(&lt;/span>12/12&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>14/14&lt;span class="o">)&lt;/span>, 2.05 KiB &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> bytes/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">14&lt;/span> &lt;span class="o">(&lt;/span>delta 3&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To git@github.com:schacon/simplegit.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * &lt;span class="o">[&lt;/span>new tag&lt;span class="o">]&lt;/span> v1.5 -&amp;gt; v1.5&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>모든 태그를 원격 저장소로 내보내기&lt;/h5>&lt;p>한 번에 태그를 여러 개 Push 하고 싶으면 &lt;code>--tags&lt;/code> 옵션을 추가하여 &lt;code>git push&lt;/code> 명령을 실행한다.&lt;br>
이 명령으로 리모트 서버에 없는 태그를 모두 전송할 수 있다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git push origin --tags
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 1, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>1/1&lt;span class="o">)&lt;/span>, &lt;span class="m">160&lt;/span> bytes &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> bytes/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To git@github.com:schacon/simplegit.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * &lt;span class="o">[&lt;/span>new tag&lt;span class="o">]&lt;/span> v1.4 -&amp;gt; v1.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * &lt;span class="o">[&lt;/span>new tag&lt;span class="o">]&lt;/span> v1.4-lw -&amp;gt; v1.4-lw&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>원격 저장소의 태그 가져오기&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git fetch origin --tags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>태그 삭제하기&lt;/h4>&lt;h5>태그 삭제하기&lt;/h5>&lt;p>&lt;code>git tag -d &amp;lt;tagname&amp;gt;&lt;/code>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git tag -d v1.4&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>원격 저장소의 태그 삭제하기&lt;/h5>&lt;p>&lt;code>git push origin --delete &amp;lt;tagname&amp;gt;&lt;/code>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git push origin --delete v1.4&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>태그를 이용해서 Checkout 하기&lt;/h4>&lt;p>주로 특정 버전의 코드를 확인할 때 사용한다.&lt;/p>
&lt;h5>태그로 직접 Checkout 하는 경우&lt;/h5>&lt;p>태그가 특정 버전을 가리키고 있고, 특정 버전의 파일을 체크아웃 해서 확인하고 싶다면 다음과 같이 실행한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git checkout &amp;lt;tagname&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>태그를 체크아웃하면 &amp;ldquo;detached HEAD&amp;rdquo;(떨어져나온 HEAD) 상태가 된다.&lt;br>
일부 Git 관련 작업이 브랜치에서 작업하는 것과 다르게 동작할 수 있다.&lt;br>
&amp;ldquo;detached HEAD&amp;rdquo; 상태: 현재 HEAD가 브랜치가 아닌 특정 커밋을 직접 가리키는 상태&lt;br>
코드를 살펴보거나 변경 사항을 테스트하기 적합.&lt;br>
실험적인 변경이 가능&lt;br>
변경 후 커밋해도 기존 브랜치에 영향을 주지 않음.&lt;br>
다른 브랜치로 체크아웃하면 이 커밋들에 접근하기 어려움.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout 2.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Note: checking out &lt;span class="s1">&amp;#39;2.0.0&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You are in &lt;span class="s1">&amp;#39;detached HEAD&amp;#39;&lt;/span> state. You can look around, make experimental
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">changes and commit them, and you can discard any commits you make in this
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">state without impacting any branches by performing another checkout.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">If you want to create a new branch to retain commits you create, you may
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">do&lt;/span> so &lt;span class="o">(&lt;/span>now or later&lt;span class="o">)&lt;/span> by using -b with the checkout &lt;span class="nb">command&lt;/span> again. Example:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git checkout -b &amp;lt;new-branch&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAD is now at 99ada87… Merge pull request &lt;span class="c1">#89 from schacon/appendix-final&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git checkout 2.0-beta-0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Previous HEAD position was 99ada87… Merge pull request &lt;span class="c1">#89 from schacon/appendix-final&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAD is now at df3f601… add atlas.json and cover image&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>태그를 기반으로 하여 새 브랜치를 생성하여 작업&lt;/h5>&lt;p>태그가 가리키는 커밋에서 새로운 브랜치 생성&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout -b version2 v2.0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to a new branch &lt;span class="s1">&amp;#39;version2&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>안전하게 새로운 작업 가능&lt;br>
커밋 이력 추적 가능&lt;br>
변경 사항을 저장하고 관리하기 용이&lt;br>
다른 브랜치와의 병합 작업 가능&lt;/p>
&lt;h4>태그와 브랜치의 동작&lt;/h4>&lt;p>브랜치는 커밋이 추가될 때마다 자동으로 갱신되는 포인터&lt;br>
태그는 특정 커밋을 가리키는 고정 포인터&lt;/p>
&lt;h3>Stashing과 Cleaning&lt;/h3>&lt;h4>Stash&lt;/h4>&lt;p>작업 중인 변경사항을 임시로 저장하는 기능&lt;br>
브랜치 전환 시 유용하게 사용된다.&lt;br>
Modified이면서 Tracked 상태인 파일과 Staging Area의 파일을 저장한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 stash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash 또는 git stash save &lt;span class="c1"># 현재 변경사항을 스택에 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Saved working directory and index state &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;WIP on master: 049d078 added the index file&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAD is now at 049d078 added the index file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>To restore them &lt;span class="nb">type&lt;/span> &lt;span class="s2">&amp;#34;git stash apply&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># stash 관리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash list &lt;span class="c1"># 저장된 stash 목록 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stash@&lt;span class="o">{&lt;/span>0&lt;span class="o">}&lt;/span>: WIP on master: 049d078 added the index file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stash@&lt;span class="o">{&lt;/span>1&lt;span class="o">}&lt;/span>: WIP on master: c264051 Revert &lt;span class="s2">&amp;#34;added file_size&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stash@&lt;span class="o">{&lt;/span>2&lt;span class="o">}&lt;/span>: WIP on master: 21d80a5 added number to log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash apply &lt;span class="c1"># 가장 최근 stash 적용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">On branch master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changes not staged &lt;span class="k">for&lt;/span> commit:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to update what will be committed&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git checkout -- &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to discard changes in working directory&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modified: index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modified: lib/simplegit.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">no changes added to commit &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add&amp;#34;&lt;/span> and/or &lt;span class="s2">&amp;#34;git commit -a&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash apply --index &lt;span class="c1"># Staged 상태까지 적용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">On branch master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changes to be committed:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git reset HEAD &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to unstage&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modified: index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changes not staged &lt;span class="k">for&lt;/span> commit:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to update what will be committed&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git checkout -- &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to discard changes in working directory&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> modified: lib/simplegit.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash drop &lt;span class="c1"># 가장 최근 stash 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash drop stash@&lt;span class="o">{&lt;/span>0&lt;span class="o">}&lt;/span> &lt;span class="c1"># 특정 stash 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Dropped stash@&lt;span class="o">{&lt;/span>0&lt;span class="o">}&lt;/span> &lt;span class="o">(&lt;/span>364e91f3f268f0900bc3ee613f9f733e82aaed43&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash pop &lt;span class="c1"># stash 적용하고 즉시 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 stash 적용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash apply stash@&lt;span class="o">{&lt;/span>2&lt;span class="o">}&lt;/span> &lt;span class="c1"># 특정 stash 선택 적용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>고급 옵션&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 다양한 stash 옵션들&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash --keep-index &lt;span class="c1"># Staging Area에 있는 파일은 제외하고 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash -u &lt;span class="c1"># 추적하지 않는 파일도 포함해서 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash --include-untracked &lt;span class="c1"># 추적하지 않는 파일도 포함해서 저장 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash --patch &lt;span class="c1"># 변경사항을 대화형으로 선택해서 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git stash branch &amp;lt;name&amp;gt; &lt;span class="c1"># stash를 새로운 브랜치에 적용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>주의 사항&lt;/h5>&lt;ul>
&lt;li>스택 구조이므로 적용 순서 주의&lt;/li>
&lt;li>가능하면 의미 있는 설명과 함께 저장&lt;/li>
&lt;li>오래된 stash는 정기적으로 정리&lt;/li>
&lt;li>복잡한 변경사항은 브랜치 사용 권장&lt;/li>
&lt;/ul>
&lt;h4>Clean&lt;/h4>&lt;p>추적하지 않는 파일들을 워킹 디렉토리에서 삭제&lt;br>
빌드 산출물이나 임시 파일 제거에 유용하다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 clean 명령어&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -f &lt;span class="c1"># 추적하지 않는 파일 강제 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -d &lt;span class="c1"># 디렉토리까지 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -n &lt;span class="c1"># 삭제될 파일 미리보기 (dry run)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -i &lt;span class="c1"># 대화형 모드로 실행&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>고급 옵션&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git clean -f -d &lt;span class="c1"># 추적하지 않는 파일과 디렉토리 모두 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -x &lt;span class="c1"># .gitignore에 명시된 파일도 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -d -n &lt;span class="c1"># 삭제될 파일과 디렉토리 미리보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Would remove test.o
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Would remove tmp/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -x -i &lt;span class="c1"># .gitignore 파일 포함 대화형 삭제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Would remove the following items:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> build.TMP test.o
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*** Commands ***
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1: clean 2: filter by pattern 3: &lt;span class="k">select&lt;/span> by numbers 4: ask each 5: quit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 6: &lt;span class="nb">help&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">What now&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clean -n -d -x &lt;span class="c1"># .gitignore 파일 포함 삭제될 파일과 디렉토리 미리보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Would remove build.TMP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Would remove test.o
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Would remove tmp/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>주의사항&lt;/h5>&lt;ul>
&lt;li>삭제는 되돌릴 수 없으므로 항상 &lt;code>-n&lt;/code>옵션으로 미리 확인&lt;/li>
&lt;li>중요한 파일 삭제 방지를 위해 &lt;code>.gitignore&lt;/code> 정확히 관리&lt;/li>
&lt;li>가능하면 대화형 모드(&lt;code>-i&lt;/code>) 사용 권장&lt;/li>
&lt;li>완전 삭제 전 &lt;code>git stash -all&lt;/code> 고려&lt;/li>
&lt;/ul>
&lt;h3>Rebase&lt;/h3>&lt;p>커밋을 정리하고, 브랜치 히스토리를 명확하게 하는 데 유용함.&lt;br>
다른 브랜치에 있는 커밋을 현재 브랜치에 통합할 때 사용된다.&lt;br>
커밋 히스토리가 직렬화되어 프로젝트 이력을 깔끔하게 유지할 수 있는 장점이 있다.&lt;/p>
&lt;h4>Rebase의 작동 방식&lt;/h4>&lt;ol>
&lt;li>공통 조상 커밋을 찾는다.&lt;/li>
&lt;li>이동할 브랜치의 커밋들을 임시로 저장한다.&lt;/li>
&lt;li>기준 브랜치의 최신 커밋으로 이동한다.&lt;/li>
&lt;li>저장해둔 커밋들을 순서대로 적용한다.&lt;/li>
&lt;/ol>
&lt;h4>Rebase의 장점과 주의사항&lt;/h4>&lt;h5>장점&lt;/h5>&lt;ul>
&lt;li>깔끔한 프로젝트 히스토리: 선형적인 커밋 히스토리를 만들어준다.&lt;/li>
&lt;li>충돌 해결 용이: 각 커밋마다 충돌을 해결할 수 있어 세밀한 제어가 가능함&lt;/li>
&lt;li>최신 변경사항 반영: 공유 브랜치의 최신 변경사항을 즉시 반영할 수 있다.&lt;/li>
&lt;/ul>
&lt;h5>주의사항&lt;/h5>&lt;ul>
&lt;li>공개 브랜치 rebase 금지&lt;/li>
&lt;li>복잡한 rebase 전 백업 브랜치 생성&lt;/li>
&lt;li>충돌 해결 시 신중하게 진행&lt;/li>
&lt;li>커밋 해시를 변경하므로 주의가 필요함.&lt;/li>
&lt;/ul>
&lt;h4>Rebase 명령어의 기본 사용법&lt;/h4>&lt;p>현재 브랜치를 &lt;code>master&lt;/code> 브랜치의 최신 커밋 위에 다시 작성한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 문법&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase &amp;lt;base-branch&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># rebase 중 충돌 해결&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase --continue &lt;span class="c1"># 충돌 해결 후 계속&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase --abort &lt;span class="c1"># rebase 취소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase --skip &lt;span class="c1"># 현재 커밋 건너뛰기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 rebase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git checkout experiment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase master&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-rebase-1.png"
alt="두 개의 브랜치로 나누어진 커밋 히스토리"
loading="lazy" />
&lt;/figure>.png) _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-Rebase-%ed%95%98%ea%b8%b0" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-Rebase-%ed%95%98%ea%b8%b0&lt;/a> _&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-rebase-3.png"
alt="C4의 변경사항을 C3에 적용하는 Rebase 과정"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-Rebase-%ed%95%98%ea%b8%b0" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-Rebase-%ed%95%98%ea%b8%b0&lt;/a> _&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-rebase-4.png"
alt="master 브랜치를 Fast-forward시키기"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-Rebase-%ed%95%98%ea%b8%b0" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-Rebase-%ed%95%98%ea%b8%b0&lt;/a> _&lt;/p>
&lt;h5>대화형 Rebase&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 대화형 rebase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase -i HEAD~3 &lt;span class="c1"># 최근 3개 커밋 수정&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>대화형 Rebase의 주요 명령어&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pick &lt;span class="c1"># 커밋 유지&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">reword &lt;span class="c1"># 커밋 메시지 수정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">edit &lt;span class="c1"># 커밋 수정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">squash &lt;span class="c1"># 이전 커밋과 합치기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fixup &lt;span class="c1"># 메시지 없이 이전 커밋과 합치기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drop &lt;span class="c1"># 커밋 삭제&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>고급 Rebase 기능&lt;/h4>&lt;h5>특정 커밋부터 Rebase&lt;/h5>&lt;p>&lt;code>git rebase --onto &amp;lt;base-branch&amp;gt; &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>base-branch&lt;/code>: 최종적으로 재배치할 기준 브랜치 (master)&lt;/li>
&lt;li>&lt;code>upstream&lt;/code>: 복사할 커밋들의 시작점을 결정하는 커밋 또는 브랜치 (server)&lt;br>
이 커밋 이후부터 &lt;code>branch&lt;/code>의 변경사항만 적용됨.&lt;/li>
&lt;li>&lt;code>branch&lt;/code>: 재배치할 커밋들이 있는 브랜치 (client)&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git rebase --onto master feature1 feature2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>master&lt;/code>: 새로운 기반 브랜치&lt;/li>
&lt;li>&lt;code>feature1&lt;/code>: &lt;code>feature2&lt;/code>에서 옮길 커밋을 시작하는 지점. &lt;code>feature1&lt;/code> 이후의 커밋들(&lt;code>H&lt;/code>, &lt;code>I&lt;/code>)이 이동 대상.&lt;/li>
&lt;li>&lt;strong>&lt;code>feature2&lt;/code>&lt;/strong>: 실제로 &lt;code>rebase&lt;/code>가 적용될 브랜치&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"># 시작 상태:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">A---B---C---F---G (master)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> D---E (feature1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> H---I (feature2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># 실행 결과:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">A---B---C---F---G (master)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \ \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> D---E H&amp;#39;---I&amp;#39; (feature2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (feature1)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>원본 커밋H, I는 남아있지만 더 이상 참조되지 않음.&lt;/li>
&lt;li>H&amp;rsquo;, I&amp;rsquo;는 새로운 해시를 가진 새 커밋&lt;/li>
&lt;li>feature2 브랜치가 I&amp;rsquo;를 가리키도록 이동&lt;/li>
&lt;li>master와 feature1 브랜치는 변화 없음&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 원격 브랜치 rebase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git pull --rebase origin master&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Rebase 문제 해결&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># rebase 충돌 시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status &lt;span class="c1"># 충돌 파일 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 충돌 해결&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase --continue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># rebase 실수 복구&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reflog &lt;span class="c1"># 이전 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --hard HEAD@&lt;span class="o">{&lt;/span>5&lt;span class="o">}&lt;/span> &lt;span class="c1"># 특정 시점으로 복구&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Rebase 사용 시 모범 사례&lt;/h4>&lt;ul>
&lt;li>작은 단위로 자주 rebase&lt;/li>
&lt;li>의미 있는 커밋 메시지 유지&lt;/li>
&lt;li>feature 브랜치는 작게 유지&lt;/li>
&lt;li>rebase 전 변경사항 커밋 또는 stash&lt;/li>
&lt;/ul>
&lt;h4>Rebase Vs Merge&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Merge&lt;/th>
&lt;th>Rebase&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>통합 방식&lt;/td>
&lt;td>두 브랜치의 최종 결과물을 하나로 합침&lt;/td>
&lt;td>한 브랜치의 커밋들을 다른 브랜치 끝에 재배열&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>히스토리 관리&lt;/td>
&lt;td>병렬적 히스토리 유지 (분기와 병합 지점 모두 보존)&lt;/td>
&lt;td>선형적 히스토리 생성 (마치 처음부터 한 브랜치에서 작업한 것처럼)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커밋 처리&lt;/td>
&lt;td>하나의 새로운 Merge 커밋 생성&lt;/td>
&lt;td>재배열된 모든 커밋에 대해 새로운 커밋 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>원본 이력&lt;/td>
&lt;td>원본 브랜치 히스토리가 그대로 유지됨&lt;/td>
&lt;td>원본 커밋은 남지만 새로운 커밋 해시값 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>작업 흐름&lt;/td>
&lt;td>브랜치 작업 내역을 확실히 구분하여 파악 가능&lt;/td>
&lt;td>마치 하나의 브랜치에서 작업한 것처럼 깔끔한 히스토리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>충돌 해결&lt;/td>
&lt;td>한 번에 모든 충돌 해결&lt;/td>
&lt;td>커밋별로 순차적 충돌 해결 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Submodule&lt;/h3>&lt;p>한 프로젝트 안에서 다른 프로젝트를 디렉토리로 분리해 관리하는 것.&lt;br>
특정 버전을 고정할 수 있음.&lt;br>
각 프로젝트를 별도 저장소로 관리.&lt;br>
메트 프로젝트와 서브 프로젝트를 독립적으로 버전 관리.&lt;/p>
&lt;h4>Submodule의 주요 특징&lt;/h4>&lt;ul>
&lt;li>독립적인 Git 저장소로 관리&lt;/li>
&lt;li>메인 프로젝트는 Submodule의 특정 커밋을 참조&lt;/li>
&lt;li>Submodule의 변경사항은 별도로 추적/관리&lt;/li>
&lt;li>메인 프로젝트와 Submodule은 각각의.git 디렉토리를 가짐.&lt;/li>
&lt;/ul>
&lt;h4>장점&lt;/h4>&lt;ul>
&lt;li>코드 재사용성 향상&lt;/li>
&lt;li>프로젝트 모듈화 용이&lt;/li>
&lt;li>버전 관리의 유연성&lt;/li>
&lt;li>종속성 관리 용이&lt;/li>
&lt;/ul>
&lt;h4>단점&lt;/h4>&lt;ul>
&lt;li>복잡한 관리 과정&lt;/li>
&lt;li>학습 곡선이 있음&lt;/li>
&lt;li>실수하기 쉬운 구조&lt;/li>
&lt;li>클론 및 업데이트 과정이 추가됨&lt;/li>
&lt;/ul>
&lt;h4>Submodule 명령어&lt;/h4>&lt;h5>Submodule 생성 및 추가&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Submodule 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule add &amp;lt;저장소 URL&amp;gt; &amp;lt;경로&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 브랜치를 submodule로 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule add -b &amp;lt;branch_name&amp;gt; &amp;lt;repository_url&amp;gt; &lt;span class="o">[&lt;/span>path&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Submodule이 있는 프로젝트 클론&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Submodule이 있는 프로젝트 클론&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone &amp;lt;저장소 URL&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 또는 한번에 클론&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone --recurse-submodules &amp;lt;저장소 URL&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Submodule 상태 및 정보 확인&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 변경사항 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git diff --submodule
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 상세 로그 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git diff --submodule&lt;span class="o">=&lt;/span>log&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Submodule 업데이트&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 업데이트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --remote
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 병합 옵션 포함 업데이트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --remote --merge
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 서브모듈만 업데이트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --remote --merge &amp;lt;path&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 재귀적 업데이트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --init --recursive&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Submodule 일괄 명령 실행&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 형식&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule foreach &lt;span class="s1">&amp;#39;&amp;lt;git command&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 예시: 새 브랜치 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule foreach &lt;span class="s1">&amp;#39;git checkout -b featureA&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 예시: 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule foreach &lt;span class="s1">&amp;#39;git status&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Submodule 설정관리&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># URL 동기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule sync
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule sync --recursive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># URL 변경 후 업데이트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule sync
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --remote --merge&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Submodule 제거&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 서브모듈 제거 과정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule deinit &amp;lt;path&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rm &amp;lt;path&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>권장 작업 패턴&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 클론 시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone --recurse-submodules &amp;lt;url&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 작업 전 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 푸시 전 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push --recurse-submodules&lt;span class="o">=&lt;/span>check&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>문제 해결&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 초기화 문제 해결 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --init --recursive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># URL 동기화 문제 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule sync --recursive
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 충돌 해결 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git submodule update --remote --merge&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>&lt;code>.gitmodules&lt;/code> 파일&lt;/h4>&lt;ul>
&lt;li>Git 서브모듈 설정을 저장하는 설정 파일.&lt;/li>
&lt;li>프로젝트 루트 디렉토리에 위치한다.&lt;/li>
&lt;li>&lt;strong>서브모듈의 위치 정보 제공&lt;/strong>: 서브모듈이 저장될 경로를 지정하여 주 저장소의 어느 위치에 서브모듈이 있는지 명확히 한다.&lt;/li>
&lt;li>&lt;strong>서브모듈의 원격 URL 정보 제공&lt;/strong>: 서브모듈이 참조할 원격 저장소의 URL을 지정하여, 서브모듈을 업데이트하거나 클론할 때 올바른 원격 저장소와 연결되도록 한다.&lt;/li>
&lt;li>&lt;strong>동기화 및 업데이트 용이성&lt;/strong>: 주 저장소와 서브모듈의 설정이 일관되도록 하여 &lt;code>git submodule sync&lt;/code>와 같은 명령어로 서브모듈의 원격 URL을 쉽게 업데이트할 수 있다.&lt;/li>
&lt;/ul>
&lt;h5>주요 설정 항목&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"># 기본 형식
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[submodule &amp;#34;&amp;lt;name&amp;gt;&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> path = &amp;lt;로컬 경로&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> url = &amp;lt;원격 저장소 URL&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branch = &amp;lt;추적할 브랜치&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> update = &amp;lt;업데이트 전략&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ignore = &amp;lt;무시 설정&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>[submodule &amp;quot;&amp;lt;name&amp;gt;&amp;quot;]&lt;/code>: Submodule의 식별자&lt;br>
프로젝트 내에서 고유한 이름이어야 한다.&lt;/li>
&lt;li>&lt;code>path&lt;/code>: Submodule이 저장될 경로.&lt;br>
주 저장소의 루트에서 상대 경로로 지정되며, Submodule이 이 위치에 체크아웃된다.&lt;br>
기존 경로와 충돌하지 않도록 주의한다.&lt;/li>
&lt;li>&lt;code>url&lt;/code>: Submodule의 원격 저장소 주소&lt;br>
HTTPS / SSH URL 사용 가능&lt;br>
접근 권한 있는 URL 사용&lt;/li>
&lt;li>&lt;code>branch&lt;/code>: Submodule이 추적할 원격 브랜치 지정&lt;br>
생략 시 기본값은 &lt;code>master&lt;/code>/&lt;code>main&lt;/code>&lt;br>
접근 권한 있는 URL 사용&lt;/li>
&lt;li>&lt;code>update&lt;/code>: Submodule 업데이트 시 사용할 전략 지정.&lt;br>
팀의 작업 방식에 맞는 전략 선택&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 가능한 값들: &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">update&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">merge # merge 전략 사용 (로컬 변경사항 유지)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> update = rebase # rebase 전략 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> update = checkout # 강제로 원격 버전으로 체크아웃 (기본값)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> update = none # 자동 업데이트 하지 않음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>ignore&lt;/code>: Submodule의 변경사항 추적 방식 설정&lt;br>
프로젝트 요구사항에 따라 신중히 선택&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 가능한 값들:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">ignore&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">none # 모든 변경사항 추적 (기본값)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ignore = dirty # 수정된 내용 무시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ignore = untracked # 추적되지 않는 파일 무시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ignore = all # 모든 변경사항 무시&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>예시&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 실제 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 단일 서브모듈&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>submodule &lt;span class="s2">&amp;#34;library&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">path&lt;/span> &lt;span class="o">=&lt;/span> lib/library
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">url&lt;/span> &lt;span class="o">=&lt;/span> https://github.com/org/library.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">branch&lt;/span> &lt;span class="o">=&lt;/span> main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 여러 서브모듈&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>submodule &lt;span class="s2">&amp;#34;auth&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">path&lt;/span> &lt;span class="o">=&lt;/span> modules/auth
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">url&lt;/span> &lt;span class="o">=&lt;/span> https://github.com/org/auth.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">branch&lt;/span> &lt;span class="o">=&lt;/span> stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>submodule &lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">path&lt;/span> &lt;span class="o">=&lt;/span> modules/db
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">url&lt;/span> &lt;span class="o">=&lt;/span> https://github.com/org/database.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">branch&lt;/span> &lt;span class="o">=&lt;/span> develop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 안정적인 라이브러리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>submodule &lt;span class="s2">&amp;#34;stable-lib&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">path&lt;/span> &lt;span class="o">=&lt;/span> lib/stable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">url&lt;/span> &lt;span class="o">=&lt;/span> https://github.com/org/stable-lib.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">branch&lt;/span> &lt;span class="o">=&lt;/span> master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">update&lt;/span> &lt;span class="o">=&lt;/span> checkout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ignore&lt;/span> &lt;span class="o">=&lt;/span> none
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 개발 중인 모듈&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>submodule &lt;span class="s2">&amp;#34;dev-module&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">path&lt;/span> &lt;span class="o">=&lt;/span> modules/dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">url&lt;/span> &lt;span class="o">=&lt;/span> git@github.com:org/dev-module.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">branch&lt;/span> &lt;span class="o">=&lt;/span> develop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">update&lt;/span> &lt;span class="o">=&lt;/span> merge
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ignore&lt;/span> &lt;span class="o">=&lt;/span> dirty&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>추가 옵션&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[submodule &amp;#34;complete-example&amp;#34;]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">lib/complete
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> url = https://github.com/org/complete-lib.git
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> branch = main
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> update = merge
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ignore = dirty
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> fetchRecurseSubmodules = on-demand
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> shallow = true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> registered = true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> template = path/to/template
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> remote = origin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> pushRemote = push-origin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> fetchJobs = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> active = true&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>성능 최적화가 필요할 때&lt;/h6>&lt;ul>
&lt;li>fetchRecurseSubmodules: 서브모듈의 재귀적 페치(fetched recursively) 설정을 제어&lt;br>
필요한 서브모듈만 페치하여 페치 속도를 최적화
&lt;ul>
&lt;li>true: 항상 서브모듈까지 fetch&lt;/li>
&lt;li>false: 서브모듈 fetch 하지 않음&lt;/li>
&lt;li>on-demand: 필요할 때만 fetch&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>shallow: 서브모듈을 얕은 클론(최소 커밋만 가져오는 방식)으로 클론할 때 설정&lt;br>
전체 히스토리가 아닌 최신 커밋만 클론하여, 네트워크 트래픽을 줄이고 속도를 높인다.&lt;/li>
&lt;li>fetchJobs: 페치 작업에 사용할 병렬 작업(job) 수를 설정.&lt;br>
여러 병렬 작업을 통해 페치 속도를 높이며, 특히 대규모 리포지토리에서 네트워크 성능과 페치 효율성을 높이는 데 유리&lt;/li>
&lt;/ul>
&lt;h6>복잡한 워크플로우 관리&lt;/h6>&lt;ul>
&lt;li>template: Submodule 디렉토리에 대한 템플릿 디렉토리를 지정한다.&lt;br>
Submodule 초기화 시 이 템플릿의 파일들이 복사된다.&lt;br>
특정 디렉토리와 파일을 템플릿으로 적용하여 새로운 프로젝트 초기화 시 일관성을 유지&lt;/li>
&lt;li>remote: Submodule의 원격 저장소 URL을 지정한다.&lt;br>
복수의 원격이 있을 때 각 서브모듈이 연결할 원격을 명확히 설정&lt;/li>
&lt;li>pushRemote: &lt;code>push&lt;/code>할 원격 저장소를 지정한다.&lt;br>
서브모듈이나 리포지토리에서 기본 &lt;code>push&lt;/code> 원격을 변경할 수 있어, 배포용 또는 협업용 원격을 명확히 구분&lt;/li>
&lt;/ul>
&lt;h6>보안 설정&lt;/h6>&lt;ul>
&lt;li>registered: 현재 Submodule이 Git에 등록되어 있는지 나타내는 옵션으로 Submodule의 관리 상태를 확인할 때 사용.&lt;br>
서브모듈이 Git에 등록되어 있는지 표시하여, 프로젝트 관리자가 서브모듈의 상태를 확인&lt;/li>
&lt;li>active: Submodule의 활성화 여부&lt;br>
서브모듈이 활성화 상태인지 표시하여, 필요한 서브모듈만 활성화할 수 있게 해준다.&lt;/li>
&lt;/ul>
&lt;h6>대규모 프로젝트&lt;/h6>&lt;ul>
&lt;li>fetchRecurseSubmodulesMaxCount: 재귀적으로 서브모듈을 가져올 때 최대 깊이를 지정&lt;br>
서브모듈 깊이를 제한하여 페치 속도와 성능을 최적화&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;p>&lt;a href="https://git-scm.com/book/ko/v2" target="_blank" rel="noopener">Git&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">시작하기 - Git 기초&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%B5%9C%EC%B4%88-%EC%84%A4%EC%A0%95" target="_blank" rel="noopener">Git 시작하기 - 최초 설정&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%8F%84%EA%B5%AC-%EC%84%9C%EB%B8%8C%EB%AA%A8%EB%93%88" target="_blank" rel="noopener">Git Submodule&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=165172&amp;amp;boardType=" target="_blank" rel="noopener">Git Submodule 사용하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1743/" target="_blank" rel="noopener">Git 200% 활용하기&lt;/a>&lt;br>
&lt;a href="https://subicura.com/git/?utm_source=subicura.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=blog" target="_blank" rel="noopener">Git / GitHub 안내서 핵심만 제대로 배우기&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/blog/techBoardDetail.do?ID=163875&amp;amp;boardType=techBlog" target="_blank" rel="noopener">git 충돌 해결..어떤 시각적 비교 도구 쓰시나요?&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11595" target="_blank" rel="noopener">Git 워크플로 향상하는 15가지 팁&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11403" target="_blank" rel="noopener">Git 형상관리 잘하는 법&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11232" target="_blank" rel="noopener">GN⁺: .git 디렉토리안에는 무엇이 있을까?&lt;/a>&lt;br>
&lt;a href="https://blog.ull.im/engineering/2019/03/10/logs-on-git.html" target="_blank" rel="noopener">좋은 git commit 메시지를 위한 영어 사전&lt;/a>&lt;br>
&lt;a href="https://subicura.com/git/" target="_blank" rel="noopener">Git / GitHub 안내서 핵심만 제대로 배우기&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-1%ed%8e%b8-%ec%a0%95%ec%9d%98%ec%99%80-%ea%b0%9c%eb%85%90/" target="_blank" rel="noopener">Git 기본 정복 실전 연습 – 1편 : 정의와 개념&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-2%ed%8e%b8-%ea%b8%b0%eb%b3%b8%eb%aa%85%eb%a0%b9%ec%96%b4/" target="_blank" rel="noopener">Git 기본 정복 실전 연습 – 2편 : 기본명령어&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-1%ed%8e%b8-2%ed%8e%b8-%ea%b0%9c%eb%b4%89/" target="_blank" rel="noopener">Git 실전 연습 1편 + 2편 개봉!&lt;/a>&lt;/p></description></item><item><title>Version Control</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/version-control/</link><pubDate>Fri, 20 Sep 2024 15:45:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/version-control/</guid><description>
&lt;h2>Version Control&lt;/h2>&lt;p>파일의 변경 이력을 시간에 따라 기록하여, 특정 시점의 버전을 다시 꺼내올 수 있는 시스템.&lt;br>
소프트웨어 소스 코드뿐만 아니라, 그래픽 디자이너나 웹 디자이너가 작업하는 이미지나 레이아웃 등 거의 모든 컴퓨터 파일의 버전을 관리할 수 있다.&lt;/p>
&lt;h3>기능&lt;/h3>&lt;ul>
&lt;li>&lt;strong>이전 상태로 되돌리기&lt;/strong>:각 파일이나 전체 프로젝트를 이전 상태로 복원할 수 있다.&lt;/li>
&lt;li>&lt;strong>변경 내용 비교:&lt;/strong> 시간에 따른 수정 내용을 비교하여, 누가 언제 어떤 변경을 했는지 추적할 수 있다.&lt;/li>
&lt;li>&lt;strong>문제 원인 파악:&lt;/strong> 문제를 일으킨 변경 사항을 추적하여, 누가 언제 이슈를 발생시켰는지 알 수 있다.&lt;/li>
&lt;li>&lt;strong>복구 용이성:&lt;/strong> 파일을 잃어버리거나 잘못 수정했을 때도 쉽게 복구할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>종류&lt;/h3>&lt;h4>로컬 버전관리(Local VCS)&lt;/h4>&lt;p>데이터베이스를 사용해서 파일의 변경 정보를 관리하는 시스템&lt;br>
RCS(Revision Control System)은 파일에서 변경되는 부분(Patch)만 기억해 용량 문제를 해결&lt;br>
RCS에서 버전 변경은 해당 버전까지의 일련의 변화들(Patch Set)을 적용/해제하는 식으로 동작&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/local-vcs.png"
alt="Distributed version control"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control" target="_blank" rel="noopener">https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control&lt;/a> _&lt;/p>
&lt;h4>중앙집중식 버전관리(CVCS)&lt;/h4>&lt;p>중앙 서버가 별도로 파일들과 이들의 변경 이력을 관리하고 클라이언트는 서버에 접속해서 특정 버전의 스냅샷(snapshot)을 받아서 사용하는 형태로 동작.&lt;br>
클라이언트가 서버로부터 특정 버전의 스냅샷을 받아 사용하는 것을 체크아웃(Checkout)이라 한다.&lt;/p>
&lt;ul>
&lt;li>단점
&lt;ul>
&lt;li>모든 버전 관리 관련 동작은 서버에서 처리되어야 하므로 서버의 부하가 크다&lt;/li>
&lt;li>서버가 죽거나 장애가 발생하면 버전 관리가 이루어지지 않는다&lt;/li>
&lt;li>오프라인 상태에서는 버전 관리 시스템을 사용할 수 없다&lt;/li>
&lt;li>모든 버전 관리 관련 동작은 적어도 한 번 서버를 경유해야 하므로 속도가 느리다.&lt;/li>
&lt;li>서버에서 데이터가 망가지거나 삭제되면 복구하기 어렵다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/cvcs.png"
alt="Distributed version control"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control" target="_blank" rel="noopener">https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control&lt;/a> _&lt;/p>
&lt;h4>분산 버전관리 시스템(DVCS)&lt;/h4>&lt;p>파일의 마지막 스냅샷을 Checkout 하지 않고 저장소를 히스토리와 더불어 전부 복제&lt;br>
서버에 문제가 발생하면 이 복제물로 다시 작업을 시작할 수 있고 클라이언트 중에서 아무거나 골라도 서버를 복원할 수 있음&lt;br>
또한 많은 수의 리모트 저장소를 가질 수 있어 다양한 방법으로 협업이 가능&lt;/p>
&lt;ul>
&lt;li>단점
&lt;ul>
&lt;li>중앙 집중식 버전 관리 시스템에 비해 복잡하다&lt;/li>
&lt;li>동기화 문제가 있다&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/distributed-version-control.png"
alt="Distributed version control"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control" target="_blank" rel="noopener">https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control&lt;/a> _&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>각 버전 관리 시스템의 특징, 장단점&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>도구&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>적합한 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Git&lt;/td>
&lt;td>- 분산형 VCS &lt;br>- 강력한 브랜칭/머징 &lt;br>- 빠른 성능&lt;/td>
&lt;td>- 대규모 분산 팀에 적합 &lt;br>- 복잡한 워크플로우 처리 &lt;br>- 오픈소스 생태계&lt;/td>
&lt;td>- 학습 곡선이 가파름 &lt;br>- 대규모 팀에서 관리 복잡&lt;/td>
&lt;td>- 오픈소스 프로젝트 &lt;br>- 빈번한 브랜칭이 필요한 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subversion (SVN)&lt;/td>
&lt;td>- 중앙집중식 VCS &lt;br>- 간단한 사용법&lt;/td>
&lt;td>- 초보자에게 적합 &lt;br>- 간단하고 직관적&lt;/td>
&lt;td>- 대규모 프로젝트에 비효율적 &lt;br>Git에 비해 브랜칭 기능 제한적&lt;/td>
&lt;td>- 소규모 팀 &lt;br>- 버전 관리 입문 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mercurial&lt;/td>
&lt;td>- 분산형 VCS &lt;br>Git와 SVN의 중간&lt;/td>
&lt;td>Git보다 학습 용이 &lt;br>- 빠른 성능&lt;/td>
&lt;td>Git에 비해 사용자 기반 작음&lt;/td>
&lt;td>Git의 복잡성을 원치 않는 팀 &lt;br>- 중간 규모 프로젝트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GitLab&lt;/td>
&lt;td>Git 기반 &lt;br>CI/CD, 이슈 추적 통합&lt;/td>
&lt;td>- 종합적인 DevOps 도구 &lt;br>- 자체 호스팅 가능&lt;/td>
&lt;td>- 일부 고급 기능은 유료&lt;/td>
&lt;td>- 통합된 개발 환경을 원하는 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GitHub&lt;/td>
&lt;td>Git 기반 &lt;br>- 협업 도구 풍부&lt;/td>
&lt;td>- 대규모 커뮤니티 &lt;br>- 오픈소스 프로젝트에 적합&lt;/td>
&lt;td>- 비공개 저장소는 유료&lt;/td>
&lt;td>- 오픈소스 프로젝트 &lt;br>- 코드 리뷰 중심 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bitbucket&lt;/td>
&lt;td>Git/Mercurial 지원 &lt;br>Atlassian 도구와 통합&lt;/td>
&lt;td>Jira 등과 연동 용이 &lt;br>- 비공개 저장소 무료 제공&lt;/td>
&lt;td>GitHub에 비해 커뮤니티 작음&lt;/td>
&lt;td>Atlassian 도구 사용 팀 &lt;br>- 비공개 프로젝트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Perforce Helix Core&lt;/td>
&lt;td>- 중앙집중식/분산식 하이브리드 &lt;br>- 대용량 파일 처리&lt;/td>
&lt;td>- 대규모 프로젝트에 적합 &lt;br>- 강력한 보안 기능&lt;/td>
&lt;td>- 비용이 높음 &lt;br>- 소규모 프로젝트에는 과도&lt;/td>
&lt;td>- 대기업 &lt;br>- 대용량 바이너리 파일 다루는 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS CodeCommit&lt;/td>
&lt;td>Git 기반 &lt;br>AWS 서비스와 통합&lt;/td>
&lt;td>AWS 환경에서 보안성 &lt;br>- 다른 AWS 서비스와 연동&lt;/td>
&lt;td>AWS에 종속적 &lt;br>Git 지식 필요&lt;/td>
&lt;td>AWS 사용 팀 &lt;br>- 클라우드 기반&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>Version Control&lt;/h3>&lt;p>&lt;a href="https://heekangpark.github.io/git/vcs" target="_blank" rel="noopener">Reinventing the Wheel&lt;/a>&lt;br>
&lt;a href="https://yoongrammer.tistory.com/17" target="_blank" rel="noopener">yoongrammer&lt;/a>&lt;/p></description></item><item><title>Git 기본 사용법</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/</link><pubDate>Fri, 20 Sep 2024 07:28:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/</guid><description>
&lt;h2>Git&lt;/h2>&lt;p>분산 버전 관리 시스템(DVCS)으로, 소프트웨어 개발에서 소스 코드의 변경 사항을 추적하고 여러 사용자 간의 작업을 조율하는 데 사용된다.&lt;/p>
&lt;ul>
&lt;li>Git은 데이터를 &lt;strong>파일 시스템 스냅샷(snapshot)의 연속&lt;/strong>으로 취급하고 크기가 아주 작다.&lt;/li>
&lt;li>Git은 커밋(commit)하거나 프로젝트의 상태를 저장할 때마다 파일이 존재하는 그 순간을 중요하게 여긴다.
&lt;ul>
&lt;li>파일이 달라지지 않았으면 Git은 성능을 위해서 파일을 새로 저장하지 않고 이전 상태의 파일에 대한 링크만 저장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Git은 데이터를 저장하기 전에 항상 체크섬(checksum)을 구하고 그 체크섬(checksum)으로 데이터를 관리한다.
&lt;ul>
&lt;li>체크섬(checksum)을 이해하는 Git없이는 어떠한 파일이나 디렉토리도 변경할 수 없다&lt;/li>
&lt;li>체크섬(checksum)은 Git에서 사용하는 가장 기본적인 데이터 단위이자 Git의 기본 철학이다
&lt;ul>
&lt;li>Git없이는 체크섬을 다룰 수 없어서 파일의 상태도 알 수 없고 심지어 데이터를 잃어버릴 수도 없다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>세 가지 상태
&lt;ul>
&lt;li>Git은 파일을 &lt;strong>Committed, Modified, Staged&lt;/strong> 세 가지 상태로 관리하는데 Git 프로젝트의 세 가지 단계와 연결되어 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Status Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Committed&lt;/td>
&lt;td>데이터가 로컬 데이터베이스에 안전하게 저장됐다는 것을 의미&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Modified&lt;/td>
&lt;td>수정한 파일을 아직 로컬 데이터베이스에 커밋하지 않은 것을 의미&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Staged&lt;/td>
&lt;td>현재 수정한 파일을 곧 커밋할 것이라고 표시한 상태&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/git-status.png"
alt="Git Status"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F" target="_blank" rel="noopener">https://git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F&lt;/a> _&lt;/p>
&lt;h3>Git 설치 및 초기 설정&lt;/h3>&lt;h4>Git 설치 방법&lt;/h4>&lt;p>Git은 다양한 운영 체제에서 사용할 수 있으며, 공식 웹사이트에서 설치 파일을 다운로드할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>OS&lt;/th>
&lt;th>설치 방법&lt;/th>
&lt;th>명령어/방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Windows&lt;/td>
&lt;td>공식 사이트&lt;/td>
&lt;td>- git-scm.com 에서 다운로드&lt;br>- 설치 프로그램 실행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>macOS&lt;/td>
&lt;td>Homebrew&lt;/td>
&lt;td>&lt;code>brew install git&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ubuntu&lt;/td>
&lt;td>apt&lt;/td>
&lt;td>&lt;code>sudo apt-get install git&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CentOS&lt;/td>
&lt;td>yum&lt;/td>
&lt;td>&lt;code>sudo yum install git&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>초기 설정 - 사용자 정보&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 전역 사용자 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global user.name &lt;span class="s2">&amp;#34;Your Name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global user.email &lt;span class="s2">&amp;#34;your.email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 저장소 사용자 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config user.name &lt;span class="s2">&amp;#34;Your Name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config user.email &lt;span class="s2">&amp;#34;your.email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 설정 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user.name&lt;span class="o">=&lt;/span>John Doe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user.email&lt;span class="o">=&lt;/span>johndoe@example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">color.status&lt;span class="o">=&lt;/span>auto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">color.branch&lt;span class="o">=&lt;/span>auto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">color.interactive&lt;span class="o">=&lt;/span>auto
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">color.diff&lt;span class="o">=&lt;/span>auto&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>기본 환경 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 브랜치 이름 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global init.defaultBranch main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 편집기 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global core.editor &lt;span class="s2">&amp;#34;vim&amp;#34;&lt;/span> &lt;span class="c1"># vim 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global core.editor &lt;span class="s2">&amp;#34;code --wait&amp;#34;&lt;/span> &lt;span class="c1"># VS Code 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 줄바꿈 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global core.autocrlf &lt;span class="nb">true&lt;/span> &lt;span class="c1"># Windows&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global core.autocrlf input &lt;span class="c1"># macOS/Linux&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Git 저장소 초기화&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 새 저장소 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 원격 저장소 복제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone &amp;lt;repository-url&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 원격 저장소 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote add origin &amp;lt;repository-url&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>주요 설정 옵션&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>설정&lt;/th>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>색상 설정&lt;/td>
&lt;td>&lt;code>git config --global color.ui auto&lt;/code>&lt;/td>
&lt;td>Git 출력 색상 활성화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>별칭 설정&lt;/td>
&lt;td>&lt;code>git config --global alias.co checkout&lt;/code>&lt;/td>
&lt;td>자주 사용하는 명령어 별칭&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Merge 도구&lt;/td>
&lt;td>&lt;code>git config --global merge.tool vimdiff&lt;/code>&lt;/td>
&lt;td>병합 충돌 해결 도구 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 캐시&lt;/td>
&lt;td>&lt;code>git config --global credential.helper cache&lt;/code>&lt;/td>
&lt;td>인증 정보 캐싱&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>&lt;code>.gitignore&lt;/code> 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .gitignore 파일 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ touch .gitignore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 일반적인 제외 패턴&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node_modules/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.DS_Store
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.env
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 확장자가 &amp;#34;.o&amp;#34; 나 &amp;#34;.a&amp;#34; 인 파일을 무시하라&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*.&lt;span class="o">[&lt;/span>oa&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># `~` 로 끝나는 모든 파일을 무시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*~&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>.gitignore&lt;/code> 파일에 입력하는 패턴은 아래 규칙을 따른다.&lt;/p>
&lt;ul>
&lt;li>아무것도 없는 라인이나, &lt;code>#&lt;/code> 로 시작하는 라인은 무시한다.&lt;/li>
&lt;li>표준 Glob 패턴을 사용한다. 이는 프로젝트 전체에 적용된다.&lt;/li>
&lt;li>슬래시(&lt;code>/&lt;/code>)로 시작하면 하위 디렉토리에 적용되지(Recursivity) 않는다.&lt;/li>
&lt;li>디렉토리는 슬래시(&lt;code>/&lt;/code>)를 끝에 사용하는 것으로 표현한다.&lt;/li>
&lt;li>느낌표(&lt;code>!&lt;/code>)로 시작하는 패턴의 파일은 무시하지 않는다.&lt;/li>
&lt;/ul>
&lt;h4>Git 설정 파일 위치&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>범위&lt;/th>
&lt;th>파일 위치&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>시스템&lt;/td>
&lt;td>/etc/gitconfig&lt;/td>
&lt;td>모든 사용자와 저장소에 적용&lt;br>&lt;code>git config --system&lt;/code> 옵션으로 이 파일을 읽고 쓸 수 있다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전역&lt;/td>
&lt;td>~/.gitconfig&lt;/td>
&lt;td>현재 사용자의 모든 저장소에 적용&lt;br>&lt;code>git config --global&lt;/code> 옵션으로 이 파일을 일고 쓸 수 있다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>로컬&lt;/td>
&lt;td>.git/config&lt;/td>
&lt;td>현재 저장소에만 적용&lt;br>&lt;code>git config --local&lt;/code> 옵션으로 이 파일을 일고 쓸 수 있다.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 설정은 역순으로 우선시된다.&lt;/p>
&lt;h4>유용한 설정 예시&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 자동 줄바꿈 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global core.whitespace trailing-space,space-before-tab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Pull 기본 전략 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global pull.rebase &lt;span class="nb">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Push 기본 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global push.default simple
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 병합 충돌 스타일 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global merge.conflictstyle diff3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>설정 확인 및 관리&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업&lt;/th>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>설정 확인&lt;/td>
&lt;td>&lt;code>git config --list --show-origin&lt;/code>&lt;/td>
&lt;td>설정값과 출처 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특정 설정 확인&lt;/td>
&lt;td>&lt;code>git config user.name&lt;/code>&lt;/td>
&lt;td>특정 설정값만 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 삭제&lt;/td>
&lt;td>&lt;code>git config --global --unset user.name&lt;/code>&lt;/td>
&lt;td>설정 제거&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 편집&lt;/td>
&lt;td>&lt;code>git config --global --edit&lt;/code>&lt;/td>
&lt;td>설정 파일 직접 편집&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>문제 해결 팁&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>문제&lt;/th>
&lt;th>해결 방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>인증 오류&lt;/td>
&lt;td>- SSH 키 재설정&lt;br>- 인증 캐시 클리어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>줄바꿈 문제&lt;/td>
&lt;td>- core.autocrlf 설정 확인&lt;br>-.gitattributes 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>한글 경로 문제&lt;/td>
&lt;td>- core.quotepath 설정 변경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프록시 설정&lt;/td>
&lt;td>- http.proxy 설정 추가&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>SSH 키 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SSH 키 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;your.email@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 공개키 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SSH 연결 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ssh -T git@github.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>보안 관련 설정&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 안전한 디렉토리 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global --add safe.directory *
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 자격 증명 저장 방식 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global credential.helper store &lt;span class="c1"># 영구 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git config --global credential.helper cache --timeout&lt;span class="o">=&lt;/span>&lt;span class="m">3600&lt;/span> &lt;span class="c1"># 1시간 캐시&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Git의 기본 사용법&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/git-init.jpg"
alt="Git Init"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://medium.com/@nmpegetis/git-how-to-start-code-changes-commit-and-push-changes-when-working-in-a-team-dbc6da3cd34c" target="_blank" rel="noopener">https://medium.com/@nmpegetis/git-how-to-start-code-changes-commit-and-push-changes-when-working-in-a-team-dbc6da3cd34c&lt;/a> _&lt;/p>
&lt;h4>Git 저장소 만들기&lt;/h4>&lt;ol>
&lt;li>
&lt;p>아직 버전관리를 하지 않는 로컬 디렉토리 하나를 선택해서 Git 저장소를 적용하는 방법&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ mkdir project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git init&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>다른 어딘가에서 Git 저장소를 Clone하는 방법&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git clone &amp;lt;url&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># libgit2 라이브러리 소스코드를 Clone&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone https://github.com/libgit2/libgit2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># libgit2 라이브러리 소스코드를 특정 폴더에 Clone&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone https://github.com/libgit2/libgit2 mylibgit&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h4>Workspace 관련 명령어&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>추가 옵션&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git add&lt;/td>
&lt;td>파일을 스테이징 영역에 추가&lt;/td>
&lt;td>&lt;code>-A&lt;/code>: 모든 변경사항 추가&lt;br>&lt;code>-p&lt;/code>: 변경사항을 부분적으로 추가&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git mv&lt;/td>
&lt;td>파일 이동/이름 변경&lt;/td>
&lt;td>&lt;code>git mv old new&lt;/code>: 파일명 변경&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git rm&lt;/td>
&lt;td>파일 삭제&lt;/td>
&lt;td>&lt;code>--cached&lt;/code>: 실제 파일은 유지하고 Git에서만 삭제&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Staging Area 관련 명령어&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 스테이징 영역에 파일 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add &amp;lt;file&amp;gt; git add. &lt;span class="c1"># 현재 디렉토리의 모든 변경사항 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add -u &lt;span class="c1"># 추적 중인 파일의 변경사항만&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 커밋 생성 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span> &lt;span class="c1"># 메시지와 함께 커밋 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -a -m &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span> &lt;span class="c1"># add와 commit 동시에` &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Local Repository 관련 명령어&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>사용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git commit&lt;/td>
&lt;td>변경사항을 로컬 저장소에 저장&lt;/td>
&lt;td>&lt;code>git commit -m &amp;quot;Add feature&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git reset&lt;/td>
&lt;td>특정 상태로 되돌리기&lt;/td>
&lt;td>&lt;code>git reset --hard HEAD~1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git push&lt;/td>
&lt;td>원격 저장소로 변경사항 전송&lt;/td>
&lt;td>&lt;code>git push origin main&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Remote Repository 관련 명령어&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 원격 저장소 조작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push &lt;span class="c1"># 로컬 변경사항을 원격에 반영&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git fetch &lt;span class="c1"># 원격 변경사항 가져오기 (병합은 X)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git pull &lt;span class="c1"># fetch + merge&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone &lt;span class="c1"># 원격 저장소 복제&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>상태 확인 명령어&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>주요 옵션&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git diff&lt;/td>
&lt;td>변경사항 확인&lt;/td>
&lt;td>&lt;code>--staged&lt;/code>: 스테이징된 변경사항&lt;br>&lt;code>HEAD&lt;/code>: 마지막 커밋과 비교&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git status&lt;/td>
&lt;td>현재 상태 확인&lt;/td>
&lt;td>&lt;code>-s&lt;/code>: 간단한 상태 표시&lt;br>&lt;code>-b&lt;/code>: 브랜치 정보 포함&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Reset 관련 명령어&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파일별 리셋&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset &amp;lt;file&amp;gt; &lt;span class="c1"># 스테이징 취소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --soft HEAD~1 &lt;span class="c1"># 커밋만 취소 (변경사항 유지)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --mixed HEAD~1 &lt;span class="c1"># 커밋과 스테이징 취소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --hard HEAD~1 &lt;span class="c1"># 모든 변경사항 제거&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>주요 워크플로우 시나리오&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 일반적인 작업 흐름&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;작업 내용&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push origin main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 변경사항 되돌리기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --hard HEAD~1 &lt;span class="c1"># 이전 커밋으로 되돌리기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -f origin main &lt;span class="c1"># 원격 저장소에 강제 푸시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3. 원격 저장소 동기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git fetch origin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git merge origin/main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 또는&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git pull origin main&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>고급 사용법과 주의사항&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>영역&lt;/th>
&lt;th>주의사항&lt;/th>
&lt;th>권장사항&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>스테이징&lt;/td>
&lt;td>- 불필요한 파일 스테이징 주의&lt;br>- 큰 파일 처리 주의&lt;/td>
&lt;td>-.gitignore 활용&lt;br>- 작은 단위로 스테이징&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커밋&lt;/td>
&lt;td>- 커밋 메시지 품질&lt;br>- 커밋 단위&lt;/td>
&lt;td>- 명확한 메시지 작성&lt;br>- 논리적 단위로 커밋&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리셋&lt;/td>
&lt;td>- hard 리셋 주의&lt;br>- 원격 저장소 영향&lt;/td>
&lt;td>- 필요시 백업&lt;br>- 안전한 옵션 사용&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>푸시&lt;/td>
&lt;td>- 강제 푸시 주의&lt;br>- 브랜치 관리&lt;/td>
&lt;td>- 팀 규칙 준수&lt;br>- 코드 리뷰 활용&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>문제 해결 팁&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 실수로 커밋한 경우&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --soft HEAD~1 &lt;span class="c1"># 마지막 커밋 취소 (변경사항 유지)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 잘못된 파일을 스테이징한 경우&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset &amp;lt;file&amp;gt; &lt;span class="c1"># 특정 파일 스테이징 취소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 원격 저장소와 동기화 문제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git fetch origin &lt;span class="c1"># 원격 정보 가져오기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git reset --hard origin/main &lt;span class="c1"># 원격 상태로 강제 동기화&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>파일의 상태 확인하기&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 자세한 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 간단한 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status --short
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 브랜치 정보 포함&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status -b&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>기본 상태 메시지&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상태 메시지&lt;/th>
&lt;th>의미&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&amp;ldquo;working directory clean&amp;rdquo;&lt;/td>
&lt;td>깨끗한 작업 디렉토리&lt;/td>
&lt;td>- 수정된 파일 없음&lt;br>- 모든 파일이 추적 중&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ldquo;Untracked files&amp;rdquo;&lt;/td>
&lt;td>추적되지 않는 파일&lt;/td>
&lt;td>Git이 관리하지 않는 파일&lt;br>add 명령어로 추적 시작 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ldquo;Changes not staged&amp;rdquo;&lt;/td>
&lt;td>스테이징되지 않은 변경사항&lt;/td>
&lt;td>- 추적 중인 파일이 수정됨&lt;br>- 아직 스테이징되지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ldquo;Changes to be committed&amp;rdquo;&lt;/td>
&lt;td>커밋될 변경사항&lt;/td>
&lt;td>- 스테이징된 파일&lt;br>- 다음 커밋에 포함될 변경사항&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>상태표시&lt;/h5>&lt;p>&lt;code>git status -s&lt;/code> 또는 &lt;code>git status --short&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상태 코드&lt;/th>
&lt;th>의미&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>??&lt;/td>
&lt;td>추적되지 않음&lt;/td>
&lt;td>- 새로운 파일&lt;br>Git이 아직 관리하지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>추가됨&lt;/td>
&lt;td>- 새 파일이 스테이징됨&lt;br>- 다음 커밋에 포함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>M (좌측)&lt;/td>
&lt;td>스테이징됨&lt;/td>
&lt;td>- 수정되고 스테이징된 파일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>M (우측)&lt;/td>
&lt;td>수정됨&lt;/td>
&lt;td>- 수정되었지만 아직 스테이징되지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MM&lt;/td>
&lt;td>스테이징 후 재수정&lt;/td>
&lt;td>- 스테이징된 후 다시 수정된 파일&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git status -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> M README &lt;span class="c1"># 수정되었지만 스테이징되지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MM Rakefile &lt;span class="c1"># 스테이징된 후 다시 수정됨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">A lib/git.rb &lt;span class="c1"># 새로 추가되고 스테이징됨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">M lib/simplegit.rb &lt;span class="c1"># 수정되고 스테이징됨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">?? LICENSE.txt &lt;span class="c1"># 새 파일, 아직 추적되지 않음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>수정하고 저장소에 저장하기&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/lifecycle.png"
alt="파일의 라이프사이클"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git%ec%9d%98-%ea%b8%b0%ec%b4%88-%ec%88%98%ec%a0%95%ed%95%98%ea%b3%a0-%ec%a0%80%ec%9e%a5%ec%86%8c%ec%97%90-%ec%a0%80%ec%9e%a5%ed%95%98%ea%b8%b0" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git%ec%9d%98-%ea%b8%b0%ec%b4%88-%ec%88%98%ec%a0%95%ed%95%98%ea%b3%a0-%ec%a0%80%ec%9e%a5%ec%86%8c%ec%97%90-%ec%a0%80%ec%9e%a5%ed%95%98%ea%b8%b0&lt;/a> _&lt;/p>
&lt;h4>파일 상태 추적&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>상태 변화&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git add &amp;lt;file&amp;gt;&lt;/code>&lt;/td>
&lt;td>Untracked → Staged&lt;/td>
&lt;td>새 파일 추적 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git add &amp;lt;file&amp;gt;&lt;/code>&lt;/td>
&lt;td>Modified → Staged&lt;/td>
&lt;td>수정된 파일 스테이징&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>파일 상태 종류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상태&lt;/th>
&lt;th>의미&lt;/th>
&lt;th>다음 단계&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Untracked&lt;/td>
&lt;td>Git이 관리하지 않는 파일&lt;/td>
&lt;td>add → Staged&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Modified&lt;/td>
&lt;td>수정되었지만 아직 스테이징되지 않음&lt;/td>
&lt;td>add → Staged&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Staged&lt;/td>
&lt;td>커밋될 준비가 된 상태&lt;/td>
&lt;td>commit → Committed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Committed&lt;/td>
&lt;td>저장소에 안전하게 저장된 상태&lt;/td>
&lt;td>modify → Modified&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>상태 확인 명령어&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 변경 내용 확인 (워킹 디렉토리 vs Staged)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git diff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index 8ebb991.e24f &lt;span class="m">100644&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--- a/CONTRIBUTING.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+++ b/CONTRIBUTING.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@ -65,7 +65,8 @@ branch directly, things can get messy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Please include a nice description of your changes when you submit your PR&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> we have to &lt;span class="nb">read&lt;/span> the whole diff to figure out why you&lt;span class="s1">&amp;#39;re contributing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> in the first place, you&amp;#39;&lt;/span>re less likely to get feedback and have your change
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-merged in.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+merged in. Also, split your changes into comprehensive chunks &lt;span class="k">if&lt;/span> your patch is
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+longer than a dozen lines.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> If you are starting to work on a particular area, feel free to submit a PR
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> that highlights your work in progress &lt;span class="o">(&lt;/span>and note in the PR title that it&lt;span class="err">&amp;#39;&lt;/span>s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Staged 상태의 변경 내용 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git diff --staged
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff --git a/README b/README
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">new file mode &lt;span class="m">100644&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index 0000000.a1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--- /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+++ b/README
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@ -0,0 +1 @@
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+My Project&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Git Diff 명령어 비교&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>비교 대상&lt;/th>
&lt;th>보여주는 내용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git diff&lt;/code>&lt;/td>
&lt;td>워킹 디렉토리 vs Staged&lt;/td>
&lt;td>아직 스테이징되지 않은 변경사항&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git diff --staged&lt;/code>&lt;/td>
&lt;td>Staged vs 최종 커밋&lt;/td>
&lt;td>커밋될 예정인 변경사항&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>상태 변화 시나리오&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 새 파일 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add README &lt;span class="c1"># Untracked → Staged&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;Add README&amp;#34;&lt;/span> &lt;span class="c1"># Staged → Committed&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 파일 수정 # CONTRIBUTING.md 수정 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status &lt;span class="c1"># Modified 상태 확인 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add CONTRIBUTING.md &lt;span class="c1"># Modified → Staged&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>이중 상태 케이스&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파일이 Staged 상태인 후 다시 수정된 경우&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add file.txt &lt;span class="c1"># 첫 번째 수정 스테이징&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파일 다시 수정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status &lt;span class="c1"># 동시에 Staged와 Modified 상태 표시&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>주요 특징과 주의사항&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>주의사항&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>스테이징 후 수정&lt;/td>
&lt;td>파일이 두 가지 상태로 존재 가능&lt;/td>
&lt;td>커밋 시 스테이징된 버전만 커밋됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git diff&lt;/td>
&lt;td>Unstaged 변경사항만 표시&lt;/td>
&lt;td>전체 변경사항을 보려면 다른 옵션 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커밋 시점&lt;/td>
&lt;td>마지막 add 시점의 내용이 커밋됨&lt;/td>
&lt;td>최신 수정사항은 다시 add 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>모범 사례&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업&lt;/th>
&lt;th>권장사항&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>상태 확인&lt;/td>
&lt;td>커밋 전 항상 status 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>변경사항 확인&lt;/td>
&lt;td>diff 명령어로 변경 내용 검토&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>스테이징&lt;/td>
&lt;td>논리적 단위로 변경사항 스테이징&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커밋&lt;/td>
&lt;td>스테이징된 내용 확인 후 커밋&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>파일 삭제하기&lt;/h4>&lt;p>작업 디렉토리에서 파일을 삭제하고 Git에서 해당 삭제 내역을 추적하려면 파일을 삭제한 후 Staging Area에 변경 사항을 추가해야 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ rm PROJECTS.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">On branch master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your branch is up-to-date with &lt;span class="s1">&amp;#39;origin/master&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changes not staged &lt;span class="k">for&lt;/span> commit:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add/rm &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to update what will be committed&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git checkout -- &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to discard changes in working directory&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deleted: PROJECTS.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">no changes added to commit &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add&amp;#34;&lt;/span> and/or &lt;span class="s2">&amp;#34;git commit -a&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 명령어를 실행하면, 삭제한 파일이 &amp;ldquo;Changes not staged for commit&amp;rdquo; 섹션에 표시된다.&lt;/p>
&lt;h5>Staging Area에서만 파일 제거하기&lt;/h5>&lt;p>파일을 Git의 Staging Area에서만 제거하고, 작업 디렉토리에는 파일을 남겨두려면 &lt;code>--cached&lt;/code> 옵션을 사용한다.&lt;br>
&lt;code>.gitignore&lt;/code> 파일에 추가하는 것을 깜빡했거나, 대용량 로그 파일 또는 컴파일된 파일을 실수로 Git에 추가했을 때 유용하다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git rm --cached README&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 명령어를 사용하면 Git은 해당 파일을 추적하지 않지만, 작업 디렉토리에는 그대로 남아 있다. 이때 &lt;code>.gitignore&lt;/code> 파일에 추가해 두면 이후 해당 파일이 Git에 추가되지 않는다.&lt;/p>
&lt;h3>변경 이력 확인&lt;/h3>&lt;p>&lt;code>git log&lt;/code> 명령을 실행하면 저장소의 커밋 히스토리를 시간순으로 보여준다&lt;br>
각 커밋의 SHA-1 체크섬, 저자 이름, 저자 이메일, 커밋한 날짜, 커밋 메시지를 보여준다.&lt;/p>
&lt;h4>기본 히스토리 조회 (git log)&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>용도&lt;/th>
&lt;th>명령어&lt;/th>
&lt;th>출력 내용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본 조회&lt;/td>
&lt;td>&lt;code>git log&lt;/code>&lt;/td>
&lt;td>- 커밋 해시&lt;br>- 저자 정보&lt;br>- 날짜&lt;br>- 커밋 메시지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>변경 내용 포함&lt;/td>
&lt;td>&lt;code>git log -p&lt;/code>&lt;/td>
&lt;td>- 기본 정보 + 각 커밋의 diff&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통계 정보&lt;/td>
&lt;td>&lt;code>git log --stat&lt;/code>&lt;/td>
&lt;td>- 수정된 파일 목록&lt;br>- 변경된 라인 수&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit ca82a6dff817ec66f44342007202690a93763949
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Mon Mar &lt;span class="m">17&lt;/span> 21:52:11 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> changed the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Sat Mar &lt;span class="m">15&lt;/span> 16:40:33 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> removed unnecessary test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git log -p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit ca82a6dff817ec66f44342007202690a93763949
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Mon Mar &lt;span class="m">17&lt;/span> 21:52:11 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> changed the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff --git a/Rakefile b/Rakefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index a874b73.f94139 &lt;span class="m">100644&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--- a/Rakefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+++ b/Rakefile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@ -5,7 +5,7 @@ require &lt;span class="s1">&amp;#39;rake/gempackagetask&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">spec&lt;/span> &lt;span class="o">=&lt;/span> Gem::Specification.new &lt;span class="k">do&lt;/span> &lt;span class="p">|&lt;/span>s&lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s.platform &lt;span class="o">=&lt;/span> Gem::Platform::RUBY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s.name &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;simplegit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- s.version &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0.1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+ s.version &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0.1.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s.author &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Scott Chacon&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s.email &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;schacon@gee-mail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> s.summary &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;A simple gem for using Git in Ruby code.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Sat Mar &lt;span class="m">15&lt;/span> 16:40:33 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> removed unnecessary &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">diff --git a/lib/simplegit.rb b/lib/simplegit.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index a0a60ae.c6340 &lt;span class="m">100644&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--- a/lib/simplegit.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+++ b/lib/simplegit.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@@ -18,8 +18,3 @@ class SimpleGit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-if &lt;span class="nv">$0&lt;/span> &lt;span class="o">==&lt;/span> __FILE__
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- &lt;span class="nv">git&lt;/span> &lt;span class="o">=&lt;/span> SimpleGit.new
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- puts git.show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-end&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git log --stat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit ca82a6dff817ec66f44342007202690a93763949
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Mon Mar &lt;span class="m">17&lt;/span> 21:52:11 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> changed the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Rakefile &lt;span class="p">|&lt;/span> &lt;span class="m">2&lt;/span> +1 file changed, &lt;span class="m">1&lt;/span> insertion&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>, &lt;span class="m">1&lt;/span> deletion&lt;span class="o">(&lt;/span>-&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">commit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Author: Scott Chacon &amp;lt;schacon@gee-mail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Date: Sat Mar &lt;span class="m">15&lt;/span> 16:40:33 &lt;span class="m">2008&lt;/span> -0700
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> removed unnecessary &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lib/simplegit.rb &lt;span class="p">|&lt;/span> &lt;span class="m">5&lt;/span> -----
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">1&lt;/span> file changed, &lt;span class="m">5&lt;/span> deletions&lt;span class="o">(&lt;/span>-&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Pretty 옵션을 이용한 다양한 포맷&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 한 줄로 표시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git log --pretty&lt;span class="o">=&lt;/span>oneline
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ca82a6dff817ec66f44342007202690a93763949 changed the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 removed unnecessary &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a11bef06a3f659402fe7563abf99ad00de2209e6 first commit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 커스텀 포맷&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git log --pretty&lt;span class="o">=&lt;/span>format:&lt;span class="s2">&amp;#34;%h - %an, %ar : %s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ca82a6d - Scott Chacon, &lt;span class="m">6&lt;/span> years ago : changed the version number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">085bb3b - Scott Chacon, &lt;span class="m">6&lt;/span> years ago : removed unnecessary &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a11bef0 - Scott Chacon, &lt;span class="m">6&lt;/span> years ago : first commit&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Format 옵션 상세&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>옵션&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>%H&lt;/td>
&lt;td>커밋 해시&lt;/td>
&lt;td>ca82a6dff817…&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%h&lt;/td>
&lt;td>짧은 해시&lt;/td>
&lt;td>ca82a6d&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%an&lt;/td>
&lt;td>저자 이름&lt;/td>
&lt;td>Scott Chacon&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ae&lt;/td>
&lt;td>저자 메일&lt;/td>
&lt;td>&lt;a href="mailto:schacon@gmail.com" >schacon@gmail.com&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ad&lt;/td>
&lt;td>저자 시각&lt;/td>
&lt;td>Mon Mar 17 21:52:11 2008&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ar&lt;/td>
&lt;td>상대적 시각&lt;/td>
&lt;td>2 days ago&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%s&lt;/td>
&lt;td>커밋 메시지&lt;/td>
&lt;td>initial commit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%T&lt;/td>
&lt;td>트리 해시&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%t&lt;/td>
&lt;td>짧은 길이 트리 해시&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%P&lt;/td>
&lt;td>부모 해시&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%p&lt;/td>
&lt;td>짧은 길이 부모 해시&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%cn&lt;/td>
&lt;td>커미터 이름&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%ce&lt;/td>
&lt;td>커미터 메일&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%cd&lt;/td>
&lt;td>커미터 시각&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%cr&lt;/td>
&lt;td>커미터 상대적 시각&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>조회 범위 제한 옵션&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>옵션&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>-(n)&lt;/td>
&lt;td>최근 n개 커밋&lt;/td>
&lt;td>&lt;code>git log -2&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ndash;since, &amp;ndash;after&lt;/td>
&lt;td>특정 날짜 이후&lt;/td>
&lt;td>&lt;code>git log --since=&amp;quot;2 weeks ago&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ndash;until, &amp;ndash;before&lt;/td>
&lt;td>특정 날짜 이전&lt;/td>
&lt;td>&lt;code>git log --until=&amp;quot;2024-01-01&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ndash;author&lt;/td>
&lt;td>저자 검색&lt;/td>
&lt;td>&lt;code>git log --author=&amp;quot;Scott&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;ndash;grep&lt;/td>
&lt;td>커밋 메시지 검색&lt;/td>
&lt;td>&lt;code>git log --grep=&amp;quot;bug&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-S&lt;/td>
&lt;td>코드 변경 내용 검색&lt;/td>
&lt;td>&lt;code>git log -S&amp;quot;function_name&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>주요 사용 예시&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 최근 2개의 커밋 상세 내용 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log -p -2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 통계와 함께 한 줄로 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log --stat --oneline
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 기간 동안의 커밋 검색&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log --since&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1 week ago&amp;#34;&lt;/span> --until&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;yesterday&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 저자의 커밋만 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log --author&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span> --pretty&lt;span class="o">=&lt;/span>format:&lt;span class="s2">&amp;#34;%h - %s&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>고급 필터링 옵션&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 병합 커밋 제외&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log --no-merges
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 파일의 히스토리만 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log -- path/to/file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 브랜치의 커밋만 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log branch_name&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>시각화 옵션&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 그래프로 표시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log --graph
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 그래프와 한 줄 표시 조합&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git log --graph --oneline --decorate&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>되돌리기&lt;/h4>&lt;p>커밋을 너무 일찍 했거나, 파일을 빠뜨리거나, 커밋 메시지를 잘못 입력한 경우, 최근 커밋을 수정할 수 있다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git commit --amend&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>수정하고 싶은 파일을 변경한 뒤 &lt;code>git add &amp;lt;file&amp;gt;&lt;/code>로 Staging Area에 추가한 후 위 명령어를 사용하면 커밋을 재작성할 수 있다.&lt;/li>
&lt;/ul>
&lt;h5>파일 상태를 Unstage로 변경하기&lt;/h5>&lt;p>이미 &lt;code>git add&lt;/code> 명령어로 Staging Area에 추가된 파일을 다시 Unstage 상태로 변경하고 싶을 때 사용한다.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>파일을 Unstage로 되돌리는 명령어:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git reset HEAD &amp;lt;file&amp;gt; &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h5>Modified 파일 되돌리기&lt;/h5>&lt;p>파일을 수정했지만 해당 파일을 최근 커밋된 상태(또는 처음 클론된 상태)로 되돌리고 싶을 때 사용한다.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>수정된 파일을 원래 상태로 되돌리는 명령어:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout -- &amp;lt;file&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>Git&lt;/h3>&lt;p>&lt;a href="https://git-scm.com/book/ko/v2" target="_blank" rel="noopener">Git&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">시작하기 - Git 기초&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%B5%9C%EC%B4%88-%EC%84%A4%EC%A0%95" target="_blank" rel="noopener">Git 시작하기 - 최초 설정&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%8F%84%EA%B5%AC-%EC%84%9C%EB%B8%8C%EB%AA%A8%EB%93%88" target="_blank" rel="noopener">Git Submodule&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=165172&amp;amp;boardType=" target="_blank" rel="noopener">Git Submodule 사용하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1743/" target="_blank" rel="noopener">Git 200% 활용하기&lt;/a>&lt;br>
&lt;a href="https://subicura.com/git/?utm_source=subicura.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=blog" target="_blank" rel="noopener">Git / GitHub 안내서 핵심만 제대로 배우기&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/blog/techBoardDetail.do?ID=163875&amp;amp;boardType=techBlog" target="_blank" rel="noopener">git 충돌 해결..어떤 시각적 비교 도구 쓰시나요?&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11595" target="_blank" rel="noopener">Git 워크플로 향상하는 15가지 팁&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11403" target="_blank" rel="noopener">Git 형상관리 잘하는 법&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11232" target="_blank" rel="noopener">GN⁺: .git 디렉토리안에는 무엇이 있을까?&lt;/a>&lt;br>
&lt;a href="https://blog.ull.im/engineering/2019/03/10/logs-on-git.html" target="_blank" rel="noopener">좋은 git commit 메시지를 위한 영어 사전&lt;/a>&lt;br>
&lt;a href="https://subicura.com/git/" target="_blank" rel="noopener">Git / GitHub 안내서 핵심만 제대로 배우기&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-1%ed%8e%b8-%ec%a0%95%ec%9d%98%ec%99%80-%ea%b0%9c%eb%85%90/" target="_blank" rel="noopener">Git 기본 정복 실전 연습 – 1편 : 정의와 개념&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-2%ed%8e%b8-%ea%b8%b0%eb%b3%b8%eb%aa%85%eb%a0%b9%ec%96%b4/" target="_blank" rel="noopener">Git 기본 정복 실전 연습 – 2편 : 기본명령어&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-1%ed%8e%b8-2%ed%8e%b8-%ea%b0%9c%eb%b4%89/" target="_blank" rel="noopener">Git 실전 연습 1편 + 2편 개봉!&lt;/a>&lt;/p></description></item><item><title>Git 원격 저장소와 Branch</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git-%EC%9B%90%EA%B2%A9-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%99%80-branch/</link><pubDate>Fri, 20 Sep 2024 07:28:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git-%EC%9B%90%EA%B2%A9-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%99%80-branch/</guid><description>
&lt;h2>Git의 원격 저장소와 Branch&lt;/h2>&lt;h3>원격 저장소와 협업&lt;/h3>&lt;h4>원격 저장소 기본 명령어&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>사용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git remote&lt;/td>
&lt;td>원격 저장소 목록 조회&lt;/td>
&lt;td>&lt;code>git remote&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git remote -v&lt;/td>
&lt;td>상세 정보(URL) 조회&lt;/td>
&lt;td>&lt;code>git remote -v&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git remote add&lt;/td>
&lt;td>원격 저장소 추가&lt;/td>
&lt;td>&lt;code>git remote add origin &amp;lt;url&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git remote rename&lt;/td>
&lt;td>원격 저장소 이름 변경&lt;/td>
&lt;td>&lt;code>git remote rename old new&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git remote remove&lt;/td>
&lt;td>원격 저장소 삭제&lt;/td>
&lt;td>&lt;code>git remote remove name&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>원격 저장소 목록 조회&lt;/h5>&lt;p>&lt;code>git remote&lt;/code> 명령으로 현재 프로젝트에 등록된 리모트 저장소를 확인&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git remote
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>원격 저장소 URL 조회&lt;/h5>&lt;p>리모트 저장소가 여러 개 있다면 이 명령은 등록된 전부를 보여준다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git remote -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin https://github.com/schacon/ticgit &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin https://github.com/schacon/ticgit &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>원격 저장소 추가하기&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git remote add pb https://github.com/paulboone/ticgit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git remote -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin https://github.com/schacon/ticgit &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">origin https://github.com/schacon/ticgit &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pb https://github.com/paulboone/ticgit &lt;span class="o">(&lt;/span>fetch&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pb https://github.com/paulboone/ticgit &lt;span class="o">(&lt;/span>push&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>원격 저장소 이름을 바꾸기&lt;/h5>&lt;p> ```bash&lt;br>
$ git remote rename pb paul&lt;br>
$ git remote&lt;br>
origin&lt;br>
paul&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>
##### 원격 저장소 삭제하기
 원격 저장소를 삭제하면 해당 원격 저장소에 관련된 추적 브랜치 정보나 모든 설정 내용도 함께 삭제된다.
 
```bash
$ git remote remove paul
$ git remote
origin&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>원격 저장소에서 데이터 가져오기&lt;/h4>&lt;p>데이터 가져오기: &lt;code>git fetch &amp;lt;remote&amp;gt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>git fetch&lt;/code> 명령을 실행하면 서버에는 존재하지만, 로컬에는 아직 없는 데이터를 받아와서 저장한다.
&lt;ul>
&lt;li>이 때 워킹 디렉토리의 파일 내용은 변경되지 않고 그대로 남는다.&lt;/li>
&lt;li>서버로부터 데이터를 가져와서 저장해두고 사용자가 Merge 하도록 준비만 해둔다.&lt;br>
데이터 가져오기 및 병합: &lt;code>git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&lt;/code>&lt;br>
&lt;code>git fetch&lt;/code> 명령을 실행하고 나서 자동으로 &lt;code>git merge&lt;/code> 명령을 수행&lt;br>
추적 브랜치가 설정되면 &lt;code>git pull&lt;/code> 명령은 서버로부터 데이터를 가져와서 현재 로컬 브랜치와 서버의 추적 브랜치를 Merge 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>일반적으로 &lt;code>fetch&lt;/code> 와 &lt;code>merge&lt;/code> 명령을 명시적으로 사용하는 것이 &lt;code>pull&lt;/code> 명령으로 한번에 두 작업을 하는 것보다 낫다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 원격 데이터 가져오기만 (병합 없음)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git fetch origin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 가져오기 + 자동 병합&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git pull origin master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 브랜치만 가져오기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git fetch origin branch-name&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>원격 저장소에 데이터 내보내기&lt;/h4>&lt;p>로컬 브랜치에서 작업한 내용을 서버로 전송하려면 원격 서버에 Push해야 한다.&lt;br>
명시적으로 브랜치를 정해서 Push해야 정보가 전송된다.&lt;/p>
&lt;p> &lt;code>git push &amp;lt;리모트 저장소 이름&amp;gt; &amp;lt;브랜치 이름&amp;gt;&lt;/code>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 기본 푸시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push origin master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push origin serverfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Counting objects: 24, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Delta compression using up to &lt;span class="m">8&lt;/span> threads.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Compressing objects: 100% &lt;span class="o">(&lt;/span>15/15&lt;span class="o">)&lt;/span>, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing objects: 100% &lt;span class="o">(&lt;/span>24/24&lt;span class="o">)&lt;/span>, 1.91 KiB &lt;span class="p">|&lt;/span> &lt;span class="m">0&lt;/span> bytes/s, &lt;span class="k">done&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Total &lt;span class="m">24&lt;/span> &lt;span class="o">(&lt;/span>delta 2&lt;span class="o">)&lt;/span>, reused &lt;span class="m">0&lt;/span> &lt;span class="o">(&lt;/span>delta 0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">To https://github.com/schacon/simplegit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> * &lt;span class="o">[&lt;/span>new branch&lt;span class="o">]&lt;/span> serverfix -&amp;gt; serverfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 새 브랜치 푸시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -u origin new-branch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 강제 푸시 (주의 필요)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push -f origin master&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>원격 저장소 상세 정보 확인&lt;/h4>&lt;p>&lt;code>git remote show &amp;lt;리모트 저장소 이름&amp;gt;&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>명령어&lt;/th>
&lt;th>보여주는 정보&lt;/th>
&lt;th>용도&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git remote show origin&lt;/code>&lt;/td>
&lt;td>- 원격 URL&lt;br>- 브랜치 정보&lt;br>- 추적 관계&lt;/td>
&lt;td>저장소 구성 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git remote show origin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* remote origin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Fetch URL: https://github.com/schacon/ticgit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Push URL: https://github.com/schacon/ticgit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HEAD branch: master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Remote branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> master tracked
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dev-branch tracked
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Local branch configured &lt;span class="k">for&lt;/span> &lt;span class="s1">&amp;#39;git pull&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> master merges with remote master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Local ref configured &lt;span class="k">for&lt;/span> &lt;span class="s1">&amp;#39;git push&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> master pushes to master &lt;span class="o">(&lt;/span>up to date&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>협업 워크플로우&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 원격 저장소 복제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone &amp;lt;url&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 브랜치 생성 및 작업&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git checkout -b feature-branch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3. 변경사항 커밋&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s2">&amp;#34;Add feature&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 4. 원격 저장소 최신화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git fetch origin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git rebase origin/master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 5. 변경사항 푸시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git push origin feature-branch&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>주요 협업 시나리오&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>시나리오&lt;/th>
&lt;th>명령어 sequence&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>코드 리뷰&lt;/td>
&lt;td>1. &lt;code>git push&lt;/code>&lt;br>2. Pull Request 생성&lt;br>3. 리뷰 및 토론&lt;br>4. 변경사항 반영&lt;/td>
&lt;td>팀 협업시 코드 품질 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>충돌 해결&lt;/td>
&lt;td>1. &lt;code>git pull&lt;/code>&lt;br>2. 충돌 해결&lt;br>3. &lt;code>git add&lt;/code>&lt;br>4. &lt;code>git commit&lt;/code>&lt;br>5. &lt;code>git push&lt;/code>&lt;/td>
&lt;td>동시 수정으로 인한 충돌 처리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>모범 사례와 주의사항&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>영역&lt;/th>
&lt;th>권장사항&lt;/th>
&lt;th>주의사항&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>푸시 전&lt;/td>
&lt;td>fetch/pull로 최신화&lt;br>- 로컬 테스트 수행&lt;/td>
&lt;td>- 강제 푸시 주의&lt;br>- 대용량 파일 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브랜치 관리&lt;/td>
&lt;td>- 기능별 브랜치 사용&lt;br>- 정기적인 동기화&lt;/td>
&lt;td>- 오래된 브랜치 정리&lt;br>- 명확한 이름 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>충돌 관리&lt;/td>
&lt;td>- 작은 단위로 커밋&lt;br>- 정기적인 동기화&lt;/td>
&lt;td>- 충돌 해결 시 신중&lt;br>- 팀과 소통&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Branch&lt;/h3>&lt;h4>브랜치의 기본 개념과 내부 구조&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구성 요소&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>특징&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>커밋 객체&lt;/td>
&lt;td>- 파일의 스냅샷&lt;br>- 메타데이터&lt;br>- 이전 커밋 포인터&lt;/td>
&lt;td>변경 이력 추적의 기본 단위&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브랜치 포인터&lt;/td>
&lt;td>- 특정 커밋을 가리키는 포인터&lt;br>- 최신 커밋을 추적&lt;/td>
&lt;td>가볍고 빠른 전환 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HEAD&lt;/td>
&lt;td>- 현재 작업 중인 브랜치를 가리킴&lt;br>- 워킹 디렉토리의 기준&lt;/td>
&lt;td>브랜치 전환의 기준점&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>브랜치 작업 흐름&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>단계&lt;/th>
&lt;th>명령어&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>브랜치 생성&lt;/td>
&lt;td>&lt;code>git branch &amp;lt;name&amp;gt;&lt;/code>&lt;/td>
&lt;td>새 브랜치 생성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브랜치 전환&lt;/td>
&lt;td>&lt;code>git checkout &amp;lt;name&amp;gt;&lt;/code>&lt;/td>
&lt;td>작업 브랜치 변경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>생성과 전환&lt;/td>
&lt;td>&lt;code>git checkout -b &amp;lt;name&amp;gt;&lt;/code>&lt;/td>
&lt;td>생성과 전환을 동시에&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>변경사항 커밋&lt;/td>
&lt;td>&lt;code>git commit -m &amp;quot;message&amp;quot;&lt;/code>&lt;/td>
&lt;td>브랜치에 변경사항 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브랜치 병합&lt;/td>
&lt;td>&lt;code>git merge &amp;lt;branch&amp;gt;&lt;/code>&lt;/td>
&lt;td>다른 브랜치 내용 통합&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>Branch 생성&lt;/h5>&lt;p>새로 만든 브랜치는 지금 작업하고 있던 마지막 커밋을 가리킨다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git branch testing&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/head-to-master.png"
alt="현재 작업 중인 브랜치를 가리키는 HEAD"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/p>
&lt;ul>
&lt;li>파일이 3개 있는 디렉토리가 하나 있고 이 파일을 Staging Area에 저장하고 커밋하는 예제&lt;br>
&lt;code>git commit&lt;/code>으로 커밋하면 먼저 루트 디렉토리와 각 하위 디렉토리의 트리 개체를 체크섬과 함께 저장소에 저장한다.&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git add README test.rb LICENSE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -m &lt;span class="s1">&amp;#39;The initial commit of my project&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>그 다음에 커밋 개체를 만들고 메타데이터와 루트 디렉토리 트리 개체를 가리키는 포인터 정보를 커밋 개체에 넣어 저장한다.&lt;br>
Git 저장소에는 다섯 개의 데이터 개체가 생긴다.&lt;/p>
&lt;ul>
&lt;li>각 파일에 대한 Blob 세 개&lt;/li>
&lt;li>파일과 디렉토리 구조가 들어 있는 트리 개체 하나&lt;/li>
&lt;li>메타데이터와 루트 트리를 가리키는 포인터가 담긴 커밋 개체 하나.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/commit-and-tree.png"
alt="커밋과 트리 데이터"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/li>
&lt;/ul>
&lt;p>파일을 수정하고 커밋하면 이전 커밋이 무엇인지도 저장한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/commits-and-parents.png"
alt="커밋과 이전 커밋"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/p>
&lt;h5>Branch 전환하기&lt;/h5>&lt;p>&lt;code>git checkout&lt;/code> 명령으로 다른 브랜치로 이동할 수 있다&lt;br>
HEAD는 testing 브랜치를 가리킨다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout testing&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/head-to-testing.png"
alt="HEAD는 testijng 브랜치를 가리킴"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/p>
&lt;p>브랜치를 만들면서 Checkout까지 한 번에 하려면 &lt;code>git checkout&lt;/code> 명령에 &lt;code>-b&lt;/code> 라는 옵션을 추가한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout -b testing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to a new branch &lt;span class="s2">&amp;#34;testing&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>변경사항 커밋&lt;/h5>&lt;p>파일을 수정하고 새롭게 커밋을 하면,&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vim test.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -a -m &lt;span class="s1">&amp;#39;made a change&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/advance-testing.png"
alt="HEAD가 가리키는 testing 브랜치가 새 커밋을 가리킴"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout master&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>다시, master 브랜치로 되돌아가서,&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/checkout-master.png"
alt="HEAD가 Checkout한 브랜치로 이동함"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/p>
&lt;p>파일을 수정하고, 다시 커밋을 하면,&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ vim test.rb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -a -m &lt;span class="s1">&amp;#39;made other changes&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/advance-master.png"
alt="갈라지는 브랜치"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%b8%8c%eb%9e%9c%ec%b9%98%eb%9e%80-%eb%ac%b4%ec%97%87%ec%9d%b8%ea%b0%80&lt;/a> _&lt;/p>
&lt;p>두 작업 내용은 서로 독립적으로 각 브랜치에 존재한다.&lt;/p>
&lt;p>&lt;code>git log&lt;/code> 명령으로 현재 브랜치가 가리키고 있는 히스토리가 무엇이고 어떻게 갈라져 나왔는지 확인할 수 있다.&lt;br>
&lt;code>git log --oneline --decorate --graph --all&lt;/code> 이라고 실행하면 히스토리를 출력한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git log --oneline --decorate --graph --all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* c2b9e &lt;span class="o">(&lt;/span>HEAD, master&lt;span class="o">)&lt;/span> made other changes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> * 87ab2 &lt;span class="o">(&lt;/span>testing&lt;span class="o">)&lt;/span> made a change
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* f30ab add feature &lt;span class="c1">#32 - ability to add new formats to the&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* 34ac2 fixed bug &lt;span class="c1">#1328 - stack overflow under certain conditions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* 98ca9 initial commit of my project&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>브랜치 병합하기&lt;/h5>&lt;h6>Fast-forward Merge&lt;/h6>&lt;p>: 브랜치가 가리키는 커밋이 현재 브랜치 이후의 커밋인 경우&lt;br>
브랜치와 Merge의 기본적인 진행 전략은&lt;/p>
&lt;ol>
&lt;li>
&lt;p>웹사이트가 있고 작업을 진행중임.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>새로운 이슈를 처리할 새 Branch를 하나 생성함.&lt;br>
새로운 이슈를 위한 브랜치 이름은 iss53이라고 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> $ git checkout -b iss53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Switched to a new branch &lt;span class="s2">&amp;#34;iss53&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $ git branch iss53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $ git checkout iss53&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-branching-2.png"
alt="브랜치 포인터를 새로 만듦"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88&lt;/a> _&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>새로 만든 Branch에서 작업을 진행함.&lt;br>
&lt;code>iss53&lt;/code> 브랜치를 Checkout 했기 때문에(즉, &lt;code>HEAD&lt;/code> 는 &lt;code>iss53&lt;/code> 브랜치를 가리킨다) 작업을 하고 커밋을 하면 &lt;code>iss53&lt;/code> 브랜치가 앞으로 나아간다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-branching-3.png"
alt="진행 중인 iss53 브랜치"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88&lt;/a> _&lt;/p>
&lt;p>이 상황에서 문제를 해결해야할 상황이 생겨 Hotfix를 해야할 상황이라고 가정해보자.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>새로운 이슈를 처리하기 이전의 운영(Production) 브랜치로 이동한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to branch &lt;span class="s1">&amp;#39;master&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Hotfix 브랜치를 새로 하나 생성한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout -b hotfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to a new branch &lt;span class="s1">&amp;#39;hotfix&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git commit -a -m &lt;span class="s1">&amp;#39;fixed the broken email address&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>hotfix 1fb7853&lt;span class="o">]&lt;/span> fixed the broken email address
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">1&lt;/span> file changed, &lt;span class="m">2&lt;/span> insertions&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-branching-4.png"
alt="master 브랜치에서 갈라져 나온 hotfix 브랜치"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88&lt;/a> _&lt;/p>
&lt;pre>&lt;code>3. 수정한 Hotfix 테스트를 마치고 운영 브랜치로 Merge한다.
```bash
$ git checkout master
$ git merge hotfix
Updating f42c576.a0874c
Fast-forward
index.html | 2 ++
1 file changed, 2 insertions(+)
```
Merge 메시지에서 &amp;quot;Fast-forward&amp;quot;
`hotfix` 브랜치가 가리키는 `C4` 커밋이 `C2` 커밋에 기반한 브랜치이기 때문에 브랜치 포인터는 Merge 과정 없이 최신 커밋으로 이동한다.
A 브랜치에서 다른 B 브랜치를 Merge 할 때 B 브랜치가 A 브랜치 이후의 커밋을 가리키고 있으면 그저 A 브랜치가 B 브랜치와 동일한 커밋을 가리키도록 이동시킬 뿐이다.
&lt;/code>&lt;/pre>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-branching-5.png"
alt="Merge후 hotfix와 같은 것을 가리키는 master 브랜치"
loading="lazy" />
&lt;/figure>&lt;/p>
&lt;pre>&lt;code> 문제를 해결하고  `master` 브랜치에 적용하고 나면 다시 일하던 브랜치로 돌아가야 한다. 이제 더 이상 필요없는 `hotfix` 브랜치는 삭제한다.
```bash
$ git branch -d hotfix
Deleted branch hotfix (3a0874c).
```
4. 다시 작업하던 브랜치로 옮겨가서 하던 일을 진행한다.
```bash
$ git checkout iss53
Switched to branch &amp;quot;iss53&amp;quot;
$ vim index.html
$ git commit -a -m 'finished the new footer [issue 53]'
[iss53 ad82d7a] finished the new footer [issue 53]
1 file changed, 1 insertion(+)
```
&lt;/code>&lt;/pre>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-branching-6.png"
alt="master와 별개로 진행하는 iss53 브랜치"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88&lt;/a> _&lt;/p>
&lt;h6>3-way Merge&lt;/h6>&lt;p>: 각 브랜치의 커밋 두 개와 공통 조상 하나를 사용하여 병합&lt;br>
53번 이슈를 다 구현하고 master 브랜치에 Merge를 한다고 가정해보자.&lt;br>
&lt;code>git merge&lt;/code> 명령으로 합칠 브랜치에서 합쳐질 브랜치를 Merge 하면 된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to branch &lt;span class="s1">&amp;#39;master&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git merge iss53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Merge made by the &lt;span class="s1">&amp;#39;recursive&amp;#39;&lt;/span> strategy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html &lt;span class="p">|&lt;/span> &lt;span class="m">1&lt;/span> +
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> file changed, &lt;span class="m">1&lt;/span> insertion&lt;span class="o">(&lt;/span>+&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>현재 브랜치가 가리키는 커밋이 Merge 할 브랜치의 조상이 아니므로 Git은 &amp;lsquo;Fast-forward&amp;rsquo;로 Merge 하지 않는다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-merging-1.png"
alt="커밋 3개를 Merge"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88&lt;/a> _&lt;/p>
&lt;p>3-way Merge 의 결과를 별도의 커밋으로 만들고 나서 해당 브랜치가 그 커밋을 가리키도록 이동시킨다. 그래서 이런 커밋은 부모가 여러 개고 Merge 커밋이라고 부른다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/basic-merging-2.png"
alt="Merge 커밋"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%99%80-Merge-%EC%9D%98-%EA%B8%B0%EC%B4%88&lt;/a> _&lt;/p>
&lt;p>iss53 브랜치를 master에 Merge 하고 나면 더는 iss53 브랜치가 필요 없다. 다음 명령으로 브랜치를 삭제하고 이슈의 상태를 처리 완료로 표시한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch -d iss53&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>충돌&lt;/h6>&lt;p>3-way Merge가 실패할 때가 있다.&lt;br>
Merge 하는 두 브랜치에서 같은 파일의 한 부분을 동시에 수정하고 Merge 하면 Git은 해당 부분을 Merge 하지 못한다. 예를 들어, 53번 이슈와 &lt;code>hotfix&lt;/code> 가 같은 부분을 수정했다면 Git은 Merge 하지 못하고 아래와 같은 충돌(Conflict) 메시지를 출력한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git merge iss53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Auto-merging index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">CONFLICT &lt;span class="o">(&lt;/span>content&lt;span class="o">)&lt;/span>: Merge conflict in index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Automatic merge failed&lt;span class="p">;&lt;/span> fix conflicts and &lt;span class="k">then&lt;/span> commit the result.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Git은 자동으로 Merge 하지 못해서 새 커밋이 생기지 않는다.&lt;br>
변경사항의 충돌을 개발자가 해결하지 않는 한 Merge 과정을 진행할 수 없다.&lt;br>
Merge 충돌이 일어났을 때 Git이 어떤 파일을 Merge 할 수 없었는지 살펴보려면 &lt;code>git status&lt;/code> 명령을 이용한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">On branch master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You have unmerged paths.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>fix conflicts and run &lt;span class="s2">&amp;#34;git commit&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Unmerged paths:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add &amp;lt;file&amp;gt;…&amp;#34;&lt;/span> to mark resolution&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> both modified: index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">no changes added to commit &lt;span class="o">(&lt;/span>use &lt;span class="s2">&amp;#34;git add&amp;#34;&lt;/span> and/or &lt;span class="s2">&amp;#34;git commit -a&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>충돌이 일어난 파일은 unmerged 상태로 표시된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD:index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;div id=&amp;#34;footer&amp;#34;&amp;gt;contact : email.support@github.com&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=======
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;div id=&amp;#34;footer&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> please contact us at support@github.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; iss53:index.html&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>=======&lt;/code> 기준으로&lt;br>
위쪽의 내용은 &lt;code>HEAD&lt;/code> 버전(merge 명령을 실행할 때 작업하던 &lt;code>master&lt;/code> 브랜치)의 내용&lt;br>
아래쪽은 &lt;code>iss53&lt;/code> 브랜치의 내용&lt;br>
충돌을 해결하려면 위쪽이나 아래쪽 내용 중에서 고르거나 새로 작성하여 Merge 한다&lt;br>
그리고 &lt;code>&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code>, &lt;code>=======&lt;/code>, &lt;code>&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code> 가 포함된 행을 삭제&lt;/p>
&lt;p>Merge 도구도 충돌을 해결할 수 있다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git mergetool
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">This message is displayed because &lt;span class="s1">&amp;#39;merge.tool&amp;#39;&lt;/span> is not configured.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">See &lt;span class="s1">&amp;#39;git mergetool --tool-help&amp;#39;&lt;/span> or &lt;span class="s1">&amp;#39;git help config&amp;#39;&lt;/span> &lt;span class="k">for&lt;/span> more details.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;git mergetool&amp;#39;&lt;/span> will now attempt to use one of the following tools:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">opendiff kdiff3 tkdiff xxdiff meld tortoisemerge gvimdiff diffuse diffmerge ecmerge p4merge araxis bc3 codecompare vimdiff emerge
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Merging:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Normal merge conflict &lt;span class="k">for&lt;/span> &lt;span class="s1">&amp;#39;index.html&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>local&lt;span class="o">}&lt;/span>: modified file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">{&lt;/span>remote&lt;span class="o">}&lt;/span>: modified file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hit &lt;span class="k">return&lt;/span> to start merge resolution tool &lt;span class="o">(&lt;/span>opendiff&lt;span class="o">)&lt;/span>:&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>브랜치 관리&lt;/h4>&lt;h5>브랜치의 목록&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> iss53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* master
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testing&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>*&lt;/code> 기호가 붙어 있는 &lt;code>master&lt;/code> 브랜치는 현재 Checkout 해서 작업하는 브랜치.&lt;br>
지금 수정한 내용을 커밋하면 &lt;code>master&lt;/code> 브랜치에 커밋되고 포인터가 앞으로 한 단계 나아간다.&lt;/p>
&lt;h5>브랜치마다 마지막 커밋 메시지 확인&lt;/h5>&lt;p>각 브랜치가 지금 어떤 상태인지 확인하기에 좋은 옵션&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> iss53 93b412c fix javascript issue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* master 7a98805 Merge branch &lt;span class="s1">&amp;#39;iss53&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testing 782fd34 add scott to the author list in the readmes&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Merge한 브랜치 목록&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch --merged
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> iss53
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* master&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>iss53&lt;/code> 브랜치는 앞에서 이미 Merge 했기 때문에 목록에 나타난다.&lt;br>
&lt;code>*&lt;/code> 기호가 붙어 있지 않은 브랜치는 &lt;code>git branch -d&lt;/code> 명령으로 삭제해도 되는 브랜치다.&lt;br>
이미 다른 브랜치와 Merge 했기 때문에 삭제해도 정보를 잃지 않는다.&lt;/p>
&lt;h5>현재 Checkout한 브랜치에 Merge하지 않은 브랜치 목록&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch --no-merged
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testing&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>아직 Merge 하지 않은 커밋을 담고 있기 때문에 &lt;code>git branch -d&lt;/code> 명령으로 삭제되지 않는다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch -d testing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">error: The branch &lt;span class="s1">&amp;#39;testing&amp;#39;&lt;/span> is not fully merged.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">If you are sure you want to delete it, run &lt;span class="s1">&amp;#39;git branch -D testing&amp;#39;&lt;/span>.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Merge 하지 않은 브랜치를 강제로 삭제하려면 &lt;code>-D&lt;/code> 옵션으로 삭제한다.&lt;/p>
&lt;h4>Remote 브랜치&lt;/h4>&lt;ul>
&lt;li>&lt;strong>리모트 Refs&lt;/strong>: 원격 저장소에 있는 포인터인 레퍼런스로 원격 저장소에 있는 브랜치, 태그 등등을 의미.&lt;/li>
&lt;li>&lt;strong>리모트 트래킹 브랜치&lt;/strong>: 리모트 트래킹 브랜치는 리모트 브랜치를 추적하는 레퍼런스이며 브랜치이다.
&lt;ul>
&lt;li>로컬에 있지만 임의로 움직일 수 없다.&lt;/li>
&lt;li>리모트 서버에 연결할 때마다 리모트의 브랜치 업데이트 내용에 따라서 자동으로 갱신만 된다.&lt;/li>
&lt;li>리모트 저장소에 마지막으로 연결했던 순간에 브랜치가 무슨 커밋을 가리키고 있었는지를 나타낸다.&lt;/li>
&lt;li>&lt;code>&amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code> 형식으로 원격 저장소 &lt;code>origin&lt;/code> 의 &lt;code>master&lt;/code> 브랜치를 보고 싶다면 &lt;code>origin/master&lt;/code> 라는 이름으로 브랜치를 확인하면 된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>git ls-remote [remote]&lt;/code> 명령으로 모든 리모트 Refs를 조회할 수 있다.&lt;br>
&lt;code>git remote show [remote]&lt;/code> 명령은 모든 리모트 브랜치와 그 정보를 보여준다.&lt;/p>
&lt;p> &lt;code>git.ourcompany.com&lt;/code> 이라는 Git 서버가 있고 이 서버의 저장소를 하나 Clone 하면 Git은 자동으로 &lt;code>origin&lt;/code> 이라는 이름을 붙인다. &lt;code>origin&lt;/code> 으로부터 저장소 데이터를 모두 내려받고 &lt;code>master&lt;/code> 브랜치를 가리키는 포인터를 만든다. 이 포인터는 &lt;code>origin/master&lt;/code> 라고 부르고 멋대로 조종할 수 없다. 그리고 Git은 로컬의 &lt;code>master&lt;/code> 브랜치가 &lt;code>origin/master&lt;/code> 를 가리키게 한다. 이제 이 &lt;code>master&lt;/code> 브랜치에서 작업을 시작할 수 있다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/remote-branches-1.png"
alt="Clone 이후 서버와 로컬의 master 브랜치"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%a6%ac%eb%aa%a8%ed%8a%b8-%eb%b8%8c%eb%9e%9c%ec%b9%98" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%a6%ac%eb%aa%a8%ed%8a%b8-%eb%b8%8c%eb%9e%9c%ec%b9%98&lt;/a> _&lt;/p>
&lt;p>로컬 저장소에 작업중 동시에 다른 팀원이 &lt;code>git.ourcompany.com&lt;/code> 서버에 push하고 &lt;code>master&lt;/code> 브랜치를 업데이트하면 팀원 간의 히스토리는 달라진다.&lt;br>
로컬과 원격 서버의 커밋 히스토리는 독립적으로 이뤄지며 원격 서버로부터 저장소 정보를 동기화하려면 &lt;code>git fetch origin&lt;/code> 명령을 사용한다.&lt;br>
&amp;ldquo;origin&amp;rdquo; 서버의 주소 정보를 찾아서, 현재 로컬 저장소가 갖고 있지 않은 새로운 정보가 있으면 모두 내려받고, 받은 데이터를 로컬 저장소에 업데이트하고 나서, &lt;code>origin/master&lt;/code> 포인터의 위치를 최신 커밋으로 이동시킨다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/remote-branches-3.png"
alt="git fetch 명령은 리모트 브랜치 정보를 업데이트"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%a6%ac%eb%aa%a8%ed%8a%b8-%eb%b8%8c%eb%9e%9c%ec%b9%98" target="_blank" rel="noopener">https://git-scm.com/book/ko/v2/Git-%eb%b8%8c%eb%9e%9c%ec%b9%98-%eb%a6%ac%eb%aa%a8%ed%8a%b8-%eb%b8%8c%eb%9e%9c%ec%b9%98&lt;/a> _&lt;/p>
&lt;p>원격 저장소를 여러 개 운영하는 상황을 가정해서 확인해보면,&lt;br>
&lt;code>git remote add&lt;/code> 명령을 통해 새로운 원격 저장소를 추가한다.&lt;br>
그리고, &lt;code>git fetch teamone&lt;/code> 명령을 실행해도 &lt;code>teamone&lt;/code> 서버의 데이터는 모두 &lt;code>origin&lt;/code> 서버에도 있는 것들이라서 아무것도 내려받지 않는다.&lt;br>
리모트 트래킹 브랜치 &lt;code>teamone/master&lt;/code> 가 &lt;code>teamone&lt;/code> 서버의 &lt;code>master&lt;/code> 브랜치가 가리키는 커밋을 가리키게 한다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Software%20Development%20and%20Maintenance/DevOps/CI%20and%20CD/Git/remote-branches-5.png"
alt="teamone/master의 리모트 트래킹 브랜치"
loading="lazy" />
&lt;/figure>&lt;/p>
&lt;h5>브랜치 추적&lt;/h5>&lt;p>리모트 트래킹 브랜치를 로컬 브랜치로 Checkout 하면 자동으로 &amp;ldquo;트래킹(Tracking) 브랜치&amp;rdquo; 가 만들어진다 (트래킹 하는 대상 브랜치를 &amp;ldquo;Upstream 브랜치&amp;rdquo; 라고 부른다).&lt;br>
트래킹 브랜치는 리모트 브랜치와 직접적인 연결고리가 있는 로컬 브랜치이다.&lt;br>
트래킹 브랜치에서 &lt;code>git pull&lt;/code> 명령을 내리면 리모트 저장소로부터 데이터를 내려받아 연결된 리모트 브랜치와 자동으로 Merge 한다.&lt;/p>
&lt;p>서버로부터 저장소를 Clone을 하면 Git은 자동으로 &lt;code>master&lt;/code> 브랜치를 &lt;code>origin/master&lt;/code> 브랜치의 트래킹 브랜치로 만든다.&lt;br>
트래킹 브랜치를 직접 만들 수 있는데 리모트를 &lt;code>origin&lt;/code> 이 아닌 다른 리모트로 할 수도 있고, 브랜치도 &lt;code>master&lt;/code> 가 아닌 다른 브랜치로 추적하게 할 수 있다.&lt;br>
&lt;code>git checkout -b &amp;lt;branch&amp;gt; &amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code> 명령으로 간단히 트래킹 브랜치를 만들 수 있다.&lt;br>
&lt;code>--track&lt;/code> 옵션을 사용하여 로컬 브랜치 이름을 자동으로 생성할 수 있다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout --track origin/serverfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch serverfix &lt;span class="nb">set&lt;/span> up to track remote branch serverfix from origin.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to a new branch &lt;span class="s1">&amp;#39;serverfix&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 명령은 매우 자주 쓰여서 더 생략할 수 있다. 입력한 브랜치가 있는 (a) 리모트가 딱 하나 있고 (b) 로컬에는 없으면 Git은 트래킹 브랜치를 만들어 준다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout serverfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch serverfix &lt;span class="nb">set&lt;/span> up to track remote branch serverfix from origin.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to a new branch &lt;span class="s1">&amp;#39;serverfix&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>리모트 브랜치와 다른 이름으로 브랜치를 만들려면 로컬 브랜치의 이름을 아래와 같이 다르게 지정한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git checkout -b sf origin/serverfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch sf &lt;span class="nb">set&lt;/span> up to track remote branch serverfix from origin.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Switched to a new branch &lt;span class="s1">&amp;#39;sf&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 &lt;code>sf&lt;/code> 브랜치에서 Push 나 Pull 하면 자동으로 &lt;code>origin/serverfix&lt;/code> 로 데이터를 보내거나 가져온다.&lt;/p>
&lt;h6>로컬 브랜치가 특정 Remote 브랜치를 추적하게 하기&lt;/h6>&lt;p>로컬에 존재하는 브랜치가 리모트의 특정 브랜치를 추적하게 하려면 &lt;code>git branch&lt;/code> 명령에 &lt;code>-u&lt;/code> 나 &lt;code>--set-upstream-to&lt;/code> 옵션을 붙여서 아래와 같이 설정한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch -u origin/serverfix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Branch serverfix &lt;span class="nb">set&lt;/span> up to track remote branch serverfix from origin.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>추적 브랜치가 현재 어떻게 설정되어 있는지 확인하려면 &lt;code>git branch&lt;/code> 명령에 &lt;code>-vv&lt;/code> 옵션을 더한다.&lt;br>
이 명령을 실행하면 로컬 브랜치 목록과 로컬 브랜치가 추적하고 있는 리모트 브랜치도 함께 보여준다.&lt;br>
게다가, 로컬 브랜치가 앞서가는지 뒤쳐지는지에 대한 내용도 보여준다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git branch -vv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> iss53 7e424c3 &lt;span class="o">[&lt;/span>origin/iss53: ahead 2&lt;span class="o">]&lt;/span> forgot the brackets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> master 1ae2a45 &lt;span class="o">[&lt;/span>origin/master&lt;span class="o">]&lt;/span> deploying index fix
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* serverfix f8674d9 &lt;span class="o">[&lt;/span>teamone/server-fix-good: ahead 3, behind 1&lt;span class="o">]&lt;/span> this should &lt;span class="k">do&lt;/span> it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testing 5ea463a trying something new&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>iss53&lt;/code> 브랜치:
&lt;ul>
&lt;li>&lt;code>origin/iss53&lt;/code> 리모트 브랜치를 추적&lt;/li>
&lt;li>&amp;ldquo;ahead&amp;rdquo; 표시를 통해 로컬 브랜치가 커밋 2개 앞서 있다(리모트 브랜치에는 없는 커밋이 로컬에는 존재)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>master&lt;/code> 브랜치:
&lt;ul>
&lt;li>&lt;code>origin/master&lt;/code> 브랜치를 추적&lt;/li>
&lt;li>두 브랜치가 가리키는 커밋 내용이 같은 상태.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>serverfix&lt;/code> 브랜치:
&lt;ul>
&lt;li>&lt;code>server-fix-good&lt;/code> 이라는 &lt;code>teamone&lt;/code> 리모트 서버의 브랜치를 추적&lt;/li>
&lt;li>커밋 3개 앞서 있으며 동시에 커밋 1개로 뒤쳐져 있다.
&lt;ul>
&lt;li>&lt;code>serverfix&lt;/code> 브랜치에 서버로 보내지 않은 커밋이 3개, 서버의 브랜치에서 아직 로컬 브랜치로 머지하지 않은 커밋이 1개 있다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>testing&lt;/code> 브랜치: 추적하는 브랜치가 없는 상태.&lt;/li>
&lt;/ul>
&lt;p>여기서 중요한 점은 &lt;strong>명령을 실행했을 때 나타나는 결과는 모두 마지막으로 서버에서 데이터를 가져온(fetch) 시점을 바탕으로 계산한다&lt;/strong>.&lt;br>
서버의 최신 데이터를 반영하지는 않으며 로컬에 저장된 서버의 캐시 데이터를 사용한다.&lt;br>
현재 시점에서 진짜 최신 데이터로 추적 상황을 알아보려면 먼저 서버로부터 최신 데이터를 받아온 후에 추적 상황을 확인해야 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ git fetch --all&lt;span class="p">;&lt;/span> git branch -vv&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>원격 브랜치 삭제&lt;/h5>&lt;p>&lt;code>git push&lt;/code> 명령에 &lt;code>--delete&lt;/code> 옵션을 사용하여 리모트 브랜치를 삭제할 수 있다.&lt;br>
&lt;code>serverfix&lt;/code> 라는 리모트 브랜치를 삭제하려면 아래와 같이 실행한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-b" data-lang="b">&lt;span class="line">&lt;span class="cl">&lt;span class="c">$ git push origin &lt;/span>&lt;span class="nb">--&lt;/span>&lt;span class="c">delete serverfix
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">To https://github&lt;/span>&lt;span class="nt">.&lt;/span>&lt;span class="c">com/schacon/simplegit
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> &lt;/span>&lt;span class="nb">-&lt;/span>&lt;span class="c"> &lt;/span>&lt;span class="k">[&lt;/span>&lt;span class="c">deleted&lt;/span>&lt;span class="k">]&lt;/span>&lt;span class="c"> serverfix&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>위 명령을 실행하면 서버에서 브랜치(즉 커밋을 가리키는 포인터) 하나가 사라진다.&lt;br>
서버에서 가비지 컬렉터가 동작하지 않는 한 데이터는 사라지지 않기 때문에 종종 의도치 않게 삭제한 경우에도 커밋한 데이터를 살릴 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>Git&lt;/h3>&lt;p>&lt;a href="https://git-scm.com/book/ko/v2" target="_blank" rel="noopener">Git&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EA%B8%B0%EC%B4%88" target="_blank" rel="noopener">시작하기 - Git 기초&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%B5%9C%EC%B4%88-%EC%84%A4%EC%A0%95" target="_blank" rel="noopener">Git 시작하기 - 최초 설정&lt;/a>&lt;br>
&lt;a href="https://git-scm.com/book/ko/v2/Git-%EB%8F%84%EA%B5%AC-%EC%84%9C%EB%B8%8C%EB%AA%A8%EB%93%88" target="_blank" rel="noopener">Git Submodule&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=165172&amp;amp;boardType=" target="_blank" rel="noopener">Git Submodule 사용하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1743/" target="_blank" rel="noopener">Git 200% 활용하기&lt;/a>&lt;br>
&lt;a href="https://subicura.com/git/?utm_source=subicura.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=blog" target="_blank" rel="noopener">Git / GitHub 안내서 핵심만 제대로 배우기&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/blog/techBoardDetail.do?ID=163875&amp;amp;boardType=techBlog" target="_blank" rel="noopener">git 충돌 해결..어떤 시각적 비교 도구 쓰시나요?&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11595" target="_blank" rel="noopener">Git 워크플로 향상하는 15가지 팁&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11403" target="_blank" rel="noopener">Git 형상관리 잘하는 법&lt;/a>&lt;br>
&lt;a href="https://news.hada.io/topic?id=11232" target="_blank" rel="noopener">GN⁺: .git 디렉토리안에는 무엇이 있을까?&lt;/a>&lt;br>
&lt;a href="https://blog.ull.im/engineering/2019/03/10/logs-on-git.html" target="_blank" rel="noopener">좋은 git commit 메시지를 위한 영어 사전&lt;/a>&lt;br>
&lt;a href="https://subicura.com/git/" target="_blank" rel="noopener">Git / GitHub 안내서 핵심만 제대로 배우기&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-1%ed%8e%b8-%ec%a0%95%ec%9d%98%ec%99%80-%ea%b0%9c%eb%85%90/" target="_blank" rel="noopener">Git 기본 정복 실전 연습 – 1편 : 정의와 개념&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-2%ed%8e%b8-%ea%b8%b0%eb%b3%b8%eb%aa%85%eb%a0%b9%ec%96%b4/" target="_blank" rel="noopener">Git 기본 정복 실전 연습 – 2편 : 기본명령어&lt;/a>&lt;br>
&lt;a href="https://www.hanl.tech/blog/git-%ea%b8%b0%eb%b3%b8-%ec%a0%95%eb%b3%b5-%ec%8b%a4%ec%a0%84-%ec%97%b0%ec%8a%b5-1%ed%8e%b8-2%ed%8e%b8-%ea%b0%9c%eb%b4%89/" target="_blank" rel="noopener">Git 실전 연습 1편 + 2편 개봉!&lt;/a>&lt;/p></description></item></channel></rss>