<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Algorithms on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/algorithms/</link>
    <description>Recent content in Algorithms on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Mar 2025 03:13:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>정렬 알고리즘 (Sorting Algorithms)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/</link>
      <pubDate>Mon, 14 Oct 2024 01:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/</guid>
      <description>정렬 알고리즘은 데이터를 특정 순서로 배열하는 알고리즘으로, 컴퓨터 과학에서 매우 중요한 역할을 한다.</description>
    </item>
    <item>
      <title>검색 알고리즘 (Searching Algorithms)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/</link>
      <pubDate>Mon, 14 Oct 2024 01:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/</guid>
      <description>데이터 집합에서 특정 항목을 찾는 방법을 정의하는 알고리즘</description>
    </item>
    <item>
      <title>Minimum Spanning Tree</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/minimum-spanning-tree/</link>
      <pubDate>Sun, 02 Mar 2025 03:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/minimum-spanning-tree/</guid>
      <description>&lt;h2 id=&#34;minimum-spanning-tree&#34;&gt;Minimum Spanning Tree&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Shortest Path</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/</link>
      <pubDate>Sun, 02 Mar 2025 03:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/</guid>
      <description>&lt;h2 id=&#34;shortest-path&#34;&gt;Shortest Path&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Floyd-Warshall Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/floyd-warshall-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 13:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/floyd-warshall-algorithm/</guid>
      <description>&lt;h2 id=&#34;floyd-warshall-algorithm&#34;&gt;Floyd-Warshall Algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Rabin-Karp’s algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/rabin-karps-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/rabin-karps-algorithm/</guid>
      <description>&lt;h2 id=&#34;rabin-karps-algorithm&#34;&gt;Rabin-Karp’s algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Finding Hamiltonian Paths</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/finding-hamiltonian-paths/</link>
      <pubDate>Sat, 01 Mar 2025 04:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/finding-hamiltonian-paths/</guid>
      <description>&lt;h2 id=&#34;finding-hamiltonian-paths&#34;&gt;Finding Hamiltonian Paths&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Huffman Coding</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/huffman-coding/</link>
      <pubDate>Sat, 01 Mar 2025 04:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/huffman-coding/</guid>
      <description>&lt;h2 id=&#34;huffman-coding&#34;&gt;Huffman Coding&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Knight’s Tour Problem</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/knights-tour-problem/</link>
      <pubDate>Sat, 01 Mar 2025 04:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/knights-tour-problem/</guid>
      <description>&lt;h2 id=&#34;knights-tour-problem&#34;&gt;Knight’s Tour Problem&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Maze Solving Problem</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/maze-solving-problem/</link>
      <pubDate>Sat, 01 Mar 2025 04:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/maze-solving-problem/</guid>
      <description>&lt;h2 id=&#34;maze-solving-problem&#34;&gt;Maze Solving Problem&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Solving n Queen Problem</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/solving-n-queen-problem/</link>
      <pubDate>Sat, 01 Mar 2025 04:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/solving-n-queen-problem/</guid>
      <description>&lt;h2 id=&#34;solving-n-queen-problem&#34;&gt;Solving n Queen Problem&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Ford Fulkerson Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/ford-fulkerson-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/ford-fulkerson-algorithm/</guid>
      <description>&lt;h2 id=&#34;ford-fulkerson-algorithm&#34;&gt;Ford Fulkerson Algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>A* Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/a-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/a-algorithm/</guid>
      <description>&lt;h2 id=&#34;a-algorithm&#34;&gt;A* Algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Bellman Ford algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/bellman-ford-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/bellman-ford-algorithm/</guid>
      <description>&lt;h2 id=&#34;bellman-ford-algorithm&#34;&gt;Bellman Ford algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Kruskal’s Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/minimum-spanning-tree/kruskals-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/minimum-spanning-tree/kruskals-algorithm/</guid>
      <description>&lt;h2 id=&#34;kruskals-algorithm&#34;&gt;Kruskal’s Algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Prim’s Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/minimum-spanning-tree/prims-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/minimum-spanning-tree/prims-algorithm/</guid>
      <description>&lt;h2 id=&#34;prims-algorithm&#34;&gt;Prim’s Algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Dijkstra’s Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/dijkstras-algorithm/</link>
      <pubDate>Sat, 01 Mar 2025 04:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/shortest-path/dijkstras-algorithm/</guid>
      <description>&lt;h2 id=&#34;dijkstras-algorithm&#34;&gt;Dijkstra’s Algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Incremental Collection</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/incremental-collection/</link>
      <pubDate>Fri, 28 Feb 2025 06:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/incremental-collection/</guid>
      <description>&lt;h2 id=&#34;incremental-collection&#34;&gt;Incremental Collection&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Mark-Sweep</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/mark-sweep/</link>
      <pubDate>Fri, 28 Feb 2025 06:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/mark-sweep/</guid>
      <description>&lt;h2 id=&#34;mark-sweep&#34;&gt;Mark-Sweep&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Generational Collection</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/generational-collection/</link>
      <pubDate>Wed, 26 Feb 2025 02:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/generational-collection/</guid>
      <description>&lt;h2 id=&#34;generational-collection&#34;&gt;Generational Collection&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Reference Counting</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/reference-counting/</link>
      <pubDate>Wed, 26 Feb 2025 02:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/garbage-collection/algorithms/reference-counting/</guid>
      <description>&lt;h2 id=&#34;reference-counting&#34;&gt;Reference Counting&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>보간 검색 (Interpolation Search)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/interpolation-search/</link>
      <pubDate>Tue, 15 Oct 2024 12:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/interpolation-search/</guid>
      <description>이진 탐색(Binary Search)과 유사하지만, 데이터 분포를 고려해 탐색 위치를 예측함으로써 평균적으로 더 빠른 성능을 보인다. 특히 균등한 데이터 분포에서 효과적이다.</description>
    </item>
    <item>
      <title>버블 정렬 (Bubble Sort)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/bubble-sort/</link>
      <pubDate>Tue, 15 Oct 2024 08:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/bubble-sort/</guid>
      <description>버블 정렬(Bubble Sort)은 인접한 요소를 반복적으로 비교하고 교환하여 정렬하는 간단한 알고리즘이다.</description>
    </item>
    <item>
      <title>삽입 정렬 (Insertion Sort)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/insertion-sort/</link>
      <pubDate>Tue, 15 Oct 2024 08:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/insertion-sort/</guid>
      <description>삽입 정렬(Insertion Sort)은 배열을 정렬된 부분과 정렬되지 않은 부분으로 나누어, 정렬되지 않은 부분의 요소를 하나씩 가져와 정렬된 부분의 적절한 위치에 삽입하는 방식으로 동작하는 정렬 알고리즘이다.</description>
    </item>
    <item>
      <title>선택 정렬 (Selection Sort)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/selection-sort/</link>
      <pubDate>Tue, 15 Oct 2024 08:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/selection-sort/</guid>
      <description>선택 정렬(Selection Sort)은 간단한 비교 기반 정렬 알고리즘으로, 작은 데이터 세트에서 효율적이며 메모리 사용이 최소화되는 특징을 갖는다.  전체 배열을 정렬된 부분과 정렬되지 않은 부분으로 나누고, 매번 정렬되지 않은 부분에서 최솟값을 선택해 정렬된 부분의 끝에 배치하는 방식으로 동작한다.</description>
    </item>
    <item>
      <title>퀵 정렬 (Quick Sort)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/quick-sort/</link>
      <pubDate>Tue, 15 Oct 2024 08:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/quick-sort/</guid>
      <description>퀵 정렬(Quick Sort)은 분할 정복(divide and conquer) 전략을 사용하는 고성능 정렬 알고리즘이다.</description>
    </item>
    <item>
      <title>힙 정렬 (Heap Sort)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/heap-sort/</link>
      <pubDate>Tue, 15 Oct 2024 08:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/sorting/heap-sort/</guid>
      <description>힙 정렬(Heap Sort)은 이진 힙(binary heap) 자료 구조를 활용한 비교 기반 정렬 알고리즘이다.</description>
    </item>
    <item>
      <title>깊이 우선 탐색 (Depth-First Search)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/depth-first-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/depth-first-search/</guid>
      <description>그래프나 트리 구조에서 하나의 경로를 끝까지 탐색한 후 다음 경로를 탐색하는 알고리즘.</description>
    </item>
    <item>
      <title>너비 우선 탐색 (Breadth-First Search)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/breadth-first-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/breadth-first-search/</guid>
      <description>BFS는 그래프나 트리 구조에서 가까운 노드부터 탐색하는 알고리즘</description>
    </item>
    <item>
      <title>이진 검색 (Binary Search)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/binary-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/binary-search/</guid>
      <description>리스트의 중간 값을 선택하고, 찾고자 하는 값과 비교하여 탐색 범위를 반으로 줄여가며 검색을 수행한다</description>
    </item>
    <item>
      <title>해시 검색 (Hash Search)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/hash-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/hash-search/</guid>
      <description>해시 검색은 키(key)를 해시 함수(hash function)에 통과시켜 얻은 해시 값(hash value)을 인덱스로 사용하여 데이터에 직접 접근하는 방식.</description>
    </item>
    <item>
      <title>선형 검색(Linear Search)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/linear-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/algorithms/searching/linear-search/</guid>
      <description>순차 검색은 데이터 집합을 처음부터 끝까지 차례대로 하나씩 검색하는 방법으로 선형 검색(Linear Search)으로도 불리며, 리스트에서 순차적으로 탐색하면서 원하는 값을 찾아내는 알고리즘.</description>
    </item>
  </channel>
</rss>
