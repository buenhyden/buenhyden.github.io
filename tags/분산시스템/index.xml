<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – 분산시스템</title><link>https://buenhyden.github.io/tags/%EB%B6%84%EC%82%B0%EC%8B%9C%EC%8A%A4%ED%85%9C/</link><description>Recent content in 분산시스템 on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 09 Nov 2024 02:51:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/%EB%B6%84%EC%82%B0%EC%8B%9C%EC%8A%A4%ED%85%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>분산 시스템 (Distributed System)</title><link>https://buenhyden.github.io/posts/system-design/distributed-system/</link><pubDate>Sat, 09 Nov 2024 02:51:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/distributed-system/</guid><description>
&lt;h2>분산 시스템 (Distributed System)&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템-distributed-system">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c-distributed-system" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>분산 시스템은 네트워크로 연결된 여러 독립적인 컴퓨터들이 하나의 통합된 시스템처럼 작동하는 컴퓨팅 환경을 말한다.&lt;br>
마치 여러 사람이 각자 맡은 일을 하면서도 하나의 팀으로 협력하는 것처럼, 분산 시스템의 각 컴퓨터들도 서로 메시지를 주고받으며 협력하여 작업을 수행한다.&lt;/p>
&lt;h3>분산 시스템의 주요 특징&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-주요-특징">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>동시성(Concurrency):&lt;br>
여러 컴포넌트가 동시에 작동하면서 자원을 공유하고 작업을 처리한다.&lt;br>
예를 들어, 온라인 쇼핑몰에서 수많은 사용자가 동시에 주문을 처리할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>확장성(Scalability):&lt;br>
시스템의 크기와 성능을 필요에 따라 쉽게 확장할 수 있다.&lt;br>
수평적 확장(더 많은 컴퓨터 추가)과 수직적 확장(더 강력한 컴퓨터로 교체) 모두 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>내결함성(Fault Tolerance):&lt;br>
일부 컴포넌트에 문제가 발생해도 전체 시스템은 계속 작동할 수 있다.&lt;br>
이는 마치 한 직원이 휴가를 가도 회사가 계속 운영되는 것과 비슷하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>투명성(Transparency):&lt;br>
사용자는 시스템의 복잡한 내부 구조를 알 필요 없이 마치 하나의 시스템을 사용하는 것처럼 서비스를 이용할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 구성 요소와 작동 방식&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-구성-요소와-작동-방식">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c%ec%99%80-%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>통신 메커니즘&lt;br>
분산 시스템에서 컴포넌트들은 다양한 방식으로 통신한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 패싱의 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Node&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">destination&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메시지 전송 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">destination&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">receive_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메시지 수신 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">receive&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>동기화와 조정&lt;br>
시스템 전체의 일관성을 유지하기 위해 다양한 동기화 메커니즘이 사용된다:&lt;br>
- 시계 동기화: 모든 노드가 동일한 시간을 참조할 수 있도록 한다.&lt;br>
- 분산 락: 공유 자원에 대한 접근을 조정한다.&lt;br>
- 합의 알고리즘: 여러 노드가 특정 값이나 상태에 대해 합의를 이룬다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 관리&lt;br>
분산 시스템에서는 데이터를 여러 노드에 분산하여 저장하고 관리한다:&lt;br>
- 복제(Replication): 데이터를 여러 노드에 복사하여 안정성과 가용성을 높인다.&lt;br>
- 샤딩(Sharding): 데이터를 여러 조각으로 나누어 저장한다.&lt;br>
- 일관성 모델: 데이터의 일관성을 유지하기 위한 규칙을 정의한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 아키텍처&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-아키텍처">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%95%84%ed%82%a4%ed%85%8d%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>분산 시스템은 다양한 아키텍처를 가질 수 있다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>클라이언트-서버&lt;/strong>: 클라이언트가 서버에 서비스를 요청하고 서버가 응답하는 구조.&lt;/li>
&lt;li>&lt;strong>피어-투-피어(P2P)&lt;/strong>: 각 노드가 클라이언트와 서버 역할을 동시에 수행한다.&lt;/li>
&lt;li>&lt;strong>다중 티어&lt;/strong>: 클라이언트-서버 모델을 확장하여 여러 계층으로 구성된다.&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 실제 응용 사례&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-실제-응용-사례">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%8b%a4%ec%a0%9c-%ec%9d%91%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>클라우드 컴퓨팅&lt;br>
AWS, Google Cloud, Azure와 같은 클라우드 서비스는 대규모 분산 시스템의 대표적인 예이다.&lt;br>
이들은 전 세계에 데이터센터를 두고 서비스를 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>분산 데이터베이스&lt;br>
분산 데이터베이스는 데이터를 여러 노드에 분산 저장하여 처리한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 분산 데이터베이스의 샤딩 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users_shard_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PARTITION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RANGE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>분산 파일 시스템&lt;br>
HDFS(Hadoop Distributed File System)와 같은 시스템은 대용량 파일을 여러 노드에 나누어 저장한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 장점&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-장점">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>분산 시스템은 다음과 같은 장점을 제공한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>성능 향상&lt;/strong>: 여러 컴퓨터의 리소스를 활용하여 처리 능력을 높인다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 필요에 따라 시스템을 쉽게 확장할 수 있다.&lt;/li>
&lt;li>&lt;strong>fault tolerance&lt;/strong>: 일부 노드에 장애가 발생해도 시스템이 계속 작동할 수 있다.&lt;/li>
&lt;li>&lt;strong>비용 효율성&lt;/strong>: 고성능 단일 시스템보다 여러 저비용 시스템을 사용하는 것이 경제적일 수 있다.&lt;/li>
&lt;li>&lt;strong>지리적 유연성&lt;/strong>: 전 세계적으로 분산된 리소스를 활용할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 단점&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-단점">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>분산 시스템에는 다음과 같은 단점도 있다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>복잡성&lt;/strong>: 여러 노드 간의 조정과 통신이 필요하여 시스템이 복잡해진다.&lt;/li>
&lt;li>&lt;strong>보안 취약성&lt;/strong>: 여러 노드로 인해 공격 표면이 넓어질 수 있다.&lt;/li>
&lt;li>&lt;strong>동기화 문제&lt;/strong>: 여러 노드 간의 데이터 일관성 유지가 어려울 수 있다.&lt;/li>
&lt;li>&lt;strong>디버깅의 어려움&lt;/strong>: 분산된 환경에서 문제를 찾고 해결하기가 더 어렵다.&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 과제와 해결 방안&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-과제와-해결-방안">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ea%b3%bc%ec%a0%9c%ec%99%80-%ed%95%b4%ea%b2%b0-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>일관성과 가용성의 균형&lt;br>
CAP 이론에 따르면, 분산 시스템에서는 일관성(Consistency), 가용성(Availability), 분할 내성(Partition Tolerance) 중 세 가지를 동시에 만족할 수 없다. 시스템의 목적에 따라 적절한 타협점을 찾아야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네트워크 지연과 실패 처리&lt;br>
네트워크 문제로 인한 지연이나 실패는 피할 수 없으므로, 이를 고려한 설계가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 재시도 메커니즘 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">reliable_operation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_retries&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">attempt&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_retries&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 작업 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">perform_operation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="n">NetworkError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">attempt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">max_retries&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="n">attempt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 지수 백오프&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보안과 인증&lt;br>
분산된 환경에서는 보안과 인증이 더욱 중요하다.&lt;br>
SSL/TLS, 분산 인증 시스템 등이 사용된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처-1">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>