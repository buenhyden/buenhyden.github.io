<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – CDMA</title><link>https://buenhyden.github.io/tags/cdma/</link><description>Recent content in CDMA on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 02 Oct 2024 02:03:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/cdma/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Protocol</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/</link><pubDate>Wed, 02 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/</guid><description>
&lt;h2>Network Protocol&lt;span class="hx-absolute -hx-mt-20" id="network-protocol">&lt;/span>
&lt;a href="#network-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식과 규칙의 체계.&lt;/li>
&lt;li>신호 체계, 인증, 그리고 오류 감지 및 수정 기능을 포함한다.&lt;/li>
&lt;li>데이터 교환 방식을 정의하여 서로 다른 시스템 간의 원활한 통신을 가능하게 한다.&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>표준화&lt;/strong>: 프로토콜은 표준화된 규칙을 제공하여 다양한 기기 간 호환성을 보장합니다.&lt;/li>
&lt;li>&lt;strong>계층화&lt;/strong>: OSI 7계층 모델이나 TCP/IP 4계층 모델과 같이 계층별로 구분되어 모듈화된 구조를 가집니다.&lt;/li>
&lt;li>&lt;strong>캡슐화&lt;/strong>: 각 계층에서 데이터에 헤더 정보를 추가하여 패킷을 구성합니다.&lt;/li>
&lt;li>&lt;strong>흐름 제어&lt;/strong>: 데이터 전송 속도를 조절하여 수신측의 처리 능력에 맞춥니다.&lt;/li>
&lt;li>&lt;strong>오류 제어&lt;/strong>: 데이터 전송 중 발생할 수 있는 오류를 검출하고 정정합니다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="TCP-IP-protocol-suit.png" alt="seven layers of the OSI model." loading="lazy" />&lt;br>
_Source: &lt;a href="https://techwavehub.net/protocol/" target="_blank" rel="noopener">https://techwavehub.net/protocol/&lt;/a> _&lt;/p>
&lt;h3>Physical Protocol&lt;span class="hx-absolute -hx-mt-20" id="physical-protocol">&lt;/span>
&lt;a href="#physical-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>물리 프로토콜은 실제 데이터가 물리적 매체를 통해 전송되는 방식을 정의한다.&lt;br>
이는 전기 신호, 광신호, 전파 등의 형태로 데이터를 전송하는 방법을 다룬다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로토콜&lt;/th>
&lt;th>OSI 계층&lt;/th>
&lt;th>TCP/IP 계층&lt;/th>
&lt;th>역할 및 기능&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>동작 방식&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Ethernet&lt;/td>
&lt;td>물리 계층, 데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>LAN에서 데이터 전송&lt;/td>
&lt;td>MAC 주소 사용, CSMA/CD 방식&lt;/td>
&lt;td>빠르고 안정적, 비용 효율적&lt;/td>
&lt;td>패킷 교환 방식, 스위치 기반 데이터 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Frame Relay&lt;/td>
&lt;td>데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>가상 회로를 통한 데이터 전송&lt;/td>
&lt;td>DLCI 사용, 간소화된 프로토콜&lt;/td>
&lt;td>X.25보다 효율적, 고속 데이터 전송&lt;/td>
&lt;td>가상 회로 기반, LMI 신호로 상태 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ATM&lt;/td>
&lt;td>데이터 링크 계층, 네트워크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>음성, 비디오, 데이터 통합 전송&lt;/td>
&lt;td>53바이트 셀 단위 전송, QoS 보장&lt;/td>
&lt;td>멀티미디어 데이터 전송에 적합, 하드웨어 기반 스위칭&lt;/td>
&lt;td>셀 기반 스위칭, 가상 회로 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SONET&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>광섬유 기반 고속 데이터 전송&lt;/td>
&lt;td>동기식 전송, STS 프레임 사용&lt;/td>
&lt;td>고속 전송, 표준화된 인터페이스&lt;/td>
&lt;td>프레임 기반 동기 전송, 다중화 기술 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SDH&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>SONET의 국제 표준 버전&lt;/td>
&lt;td>STM 프레임 사용&lt;/td>
&lt;td>글로벌 호환성, 유연한 대역폭 할당&lt;/td>
&lt;td>SONET와 유사한 동기 전송 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PDH&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>디지털 계위 신호 전송&lt;/td>
&lt;td>비동기식 다중화&lt;/td>
&lt;td>기존 네트워크와의 호환성&lt;/td>
&lt;td>준동기식 전송, 비트 스터핑 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CDMA&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>무선 통신에서 다중 접속&lt;/td>
&lt;td>코드 분할 다중 접속&lt;/td>
&lt;td>높은 용량, 간섭 저항성&lt;/td>
&lt;td>확산 스펙트럼 기술 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GSM&lt;/td>
&lt;td>물리 계층, 데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>디지털 셀룰러 이동통신&lt;/td>
&lt;td>TDMA 기반, SIM 카드 사용&lt;/td>
&lt;td>글로벌 로밍, 음성 및 데이터 서비스&lt;/td>
&lt;td>시분할 다중 접속, 주파수 호핑&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>추가 설명:&lt;/p>
&lt;ol>
&lt;li>Ethernet은 현재 가장 널리 사용되는 LAN 프로토콜로, CSMA/CD 방식을 통해 데이터 충돌을 관리하며, 비교적 단순한 구조로 높은 효율성을 제공한다.&lt;/li>
&lt;li>Token Ring은 IBM이 개발한 프로토콜로, 토큰을 사용하여 충돌 없는 데이터 전송을 보장하지만, 현재는 Ethernet에 비해 사용빈도가 낮다.&lt;/li>
&lt;li>Frame Relay는 패킷 스위칭 기술을 사용하는 WAN 프로토콜로, 가상 회선을 통해 효율적인 데이터 전송을 제공한다.&lt;/li>
&lt;li>ATM은 고정 크기의 셀을 사용하여 다양한 형태의 트래픽을 통합 전송할 수 있으며, QoS를 보장하는 특징이 있다.&lt;/li>
&lt;li>SONET/SDH는 광통신 네트워크의 표준 프로토콜로, 높은 신뢰성과 관리 용이성을 제공한다.&lt;/li>
&lt;li>PDH는 SONET/SDH 이전에 사용된 디지털 전송 방식으로, 비동기식 특성으로 인해 관리가 다소 복잡할 수 있다.&lt;/li>
&lt;li>CDMA는 코드분할 방식을 사용하는 무선통신 프로토콜로, 높은 보안성과 간섭 저항성이 특징이다.&lt;/li>
&lt;li>GSM은 글로벌 이동통신 표준으로, SIM 카드를 통한 사용자 인증과 글로벌 로밍 서비스를 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>Logical Protocol&lt;span class="hx-absolute -hx-mt-20" id="logical-protocol">&lt;/span>
&lt;a href="#logical-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>논리 프로토콜은 데이터의 논리적인 주소 지정, 라우팅, 흐름 제어 등을 담당한다.&lt;br>
이는 실제 물리적 연결과는 독립적으로 동작한다.&lt;/p>
&lt;h4>IP / IPSec&lt;span class="hx-absolute -hx-mt-20" id="ip--ipsec">&lt;/span>
&lt;a href="#ip--ipsec" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>IP는 인터넷 통신의 기본이 되는 프로토콜로, 데이터 패킷의 주소 지정과 라우팅을 담당한다.&lt;br>
반면 IPsec은 IP 통신에 보안 기능을 추가하여 데이터의 기밀성, 무결성, 인증을 제공한다.&lt;br>
IPsec은 VPN 구현에 널리 사용되며, 네트워크 계층에서 작동하여 전체 네트워크 트래픽을 보호할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IP (Internet Protocol)&lt;/th>
&lt;th>IPsec (Internet Protocol Security)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>데이터그램 기반의 패킷 전달 및 라우팅&lt;/td>
&lt;td>IP 통신의 보안성 제공 (인증, 암호화, 무결성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 특성&lt;/td>
&lt;td>- 비연결형 서비스&lt;br>- 최선형 전달&lt;br>- 독립적 패킷 라우팅&lt;br>- 단편화/재조립 지원&lt;/td>
&lt;td>- 종단간 보안&lt;br>- 투명한 보안 서비스&lt;br>- 유연한 구성&lt;br>- 호환성 유지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 패킷 라우팅&lt;br>- 주소 지정&lt;br>- 단편화/재조립&lt;br>- 헤더 처리&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 패킷 인증&lt;br>- 무결성 보장&lt;br>- 키 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 모드&lt;/td>
&lt;td>- 데이터그램 방식&lt;br>- 패킷 독립 처리&lt;br>- 헤더 기반 라우팅&lt;br>TTL 기반 제어&lt;/td>
&lt;td>- 전송 모드&lt;br>- 터널 모드&lt;br>ESP/AH 프로토콜&lt;br>IKE 키 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 기본 보안 없음&lt;br>- 평문 전송&lt;br>- 위조/변조 가능&lt;br>- 도청 가능&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 패킷 인증&lt;br>- 재전송 방지&lt;br>- 키 관리 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 구조&lt;/td>
&lt;td>- 버전&lt;br>- 헤더 길이&lt;br>- 서비스 유형&lt;br>- 전체 길이&lt;br>- 식별자&lt;br>- 플래그&lt;br>- 단편화 오프셋&lt;br>TTL&lt;br>- 프로토콜&lt;br>- 체크섬&lt;br>- 출발지/목적지 주소&lt;/td>
&lt;td>- AH 헤더 (인증)&lt;br>ESP 헤더 (암호화)&lt;br>- 보안 연관(SA) 정보&lt;br>- 시퀀스 번호&lt;br>- 무결성 체크값&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 효율적인 라우팅&lt;br>- 높은 확장성&lt;br>- 상호운용성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 투명한 적용&lt;br>- 유연한 구성&lt;br>- 표준화된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 신뢰성 없음&lt;br>- 보안성 없음&lt;br>QoS 보장 없음&lt;br>- 혼잡 제어 없음&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 성능 오버헤드&lt;br>- 키 관리 부담&lt;br>NAT 통과 문제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>활용 분야&lt;/td>
&lt;td>- 인터넷 통신&lt;br>- 기본 네트워킹&lt;br>- 패킷 전달&lt;br>- 라우팅&lt;/td>
&lt;td>- VPN 구축&lt;br>- 기업 네트워크&lt;br>- 원격 접속&lt;br>- 보안 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>표준화 기구&lt;/td>
&lt;td>IETF&lt;/td>
&lt;td>IETF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>관련 프로토콜&lt;/td>
&lt;td>IPv4, IPv6&lt;/td>
&lt;td>ESP, AH, IKE&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 차이점과 상호 관계는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>기본 동작과 보안:&lt;/p>
&lt;ul>
&lt;li>IP: 기본적인 패킷 전달에 중점&lt;/li>
&lt;li>IPsec: IP 통신에 보안 기능을 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현 복잡성:&lt;/p>
&lt;ul>
&lt;li>IP: 단순하고 기본적인 구현&lt;/li>
&lt;li>IPsec: 복잡한 보안 메커니즘 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능과 오버헤드:&lt;/p>
&lt;ul>
&lt;li>IP: 최소한의 오버헤드&lt;/li>
&lt;li>IPsec: 보안 처리로 인한 추가 오버헤드&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>응용 환경:&lt;/p>
&lt;ul>
&lt;li>IP: 모든 인터넷 통신의 기본&lt;/li>
&lt;li>IPsec: 보안이 중요한 특수한 환경&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>IP와 IPsec은 서로 보완적인 관계에 있으며, 현대 네트워크에서는 요구사항에 따라 적절히 선택하여 사용된다.&lt;/p>
&lt;h4>TCP / UDP&lt;span class="hx-absolute -hx-mt-20" id="tcp--udp">&lt;/span>
&lt;a href="#tcp--udp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>TCP는 신뢰성 있는 데이터 전송을 보장하며, 연결 지향적인 프로토콜이다.&lt;br>
3-way handshake를 통해 연결을 설정하고, 데이터의 순서를 보장하며, 오류 발생 시 재전송을 수행한다.&lt;br>
흐름 제어와 혼잡 제어 기능을 통해 네트워크의 안정성을 유지한다.&lt;/p>
&lt;p>UDP는 비연결 지향적이며 단순한 데이터 전송에 중점을 둔다.&lt;br>
연결 설정 과정이 없어 빠른 전송이 가능하지만, 데이터의 신뢰성과 순서를 보장하지 않는다.&lt;br>
실시간 스트리밍이나 게임 등 속도가 중요한 애플리케이션에서 주로 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>TCP (Transmission Control Protocol)&lt;/th>
&lt;th>UDP (User Datagram Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>전송 계층 (4계층)&lt;/td>
&lt;td>전송 계층 (4계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>전송 계층&lt;/td>
&lt;td>전송 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 특성&lt;/td>
&lt;td>연결형 프로토콜 (Connection-oriented)&lt;br>- 데이터 전송 전 연결 설정&lt;br>- 순차적 데이터 전송&lt;br>- 신뢰성 보장&lt;/td>
&lt;td>비연결형 프로토콜 (Connectionless)&lt;br>- 연결 설정 없음&lt;br>- 독립적 데이터 전송&lt;br>- 신뢰성 미보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 흐름 제어&lt;br>- 혼잡 제어&lt;br>- 오류 검출 및 복구&lt;br>- 데이터 순서 보장&lt;br>- 데이터 분할 및 재조립&lt;/td>
&lt;td>- 단순한 데이터 전송&lt;br>- 최소한의 오류 검출&lt;br>- 빠른 전송 속도&lt;br>- 실시간 데이터 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>세그먼트(Segment) 단위로 분할 전송&lt;br>3-way 핸드셰이킹&lt;br>- 순차번호 부여&lt;br>- 확인응답 사용&lt;/td>
&lt;td>데이터그램(Datagram) 단위로 독립 전송&lt;br>- 연결 설정 없음&lt;br>- 순차번호 없음&lt;br>- 확인응답 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성 보장&lt;/td>
&lt;td>- 데이터 손실 시 재전송&lt;br>- 중복 데이터 제거&lt;br>- 순서 보장&lt;br>- 데이터 완전성 검증&lt;/td>
&lt;td>- 데이터 손실 가능&lt;br>- 중복 데이터 가능&lt;br>- 순서 보장 없음&lt;br>- 최소한의 오류 검출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>속도 특성&lt;/td>
&lt;td>- 상대적으로 느림&lt;br>- 오버헤드 큼&lt;br>- 처리 시간 많이 소요&lt;/td>
&lt;td>- 상대적으로 빠름&lt;br>- 오버헤드 작음&lt;br>- 처리 시간 적게 소요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 분야&lt;/td>
&lt;td>- 파일 전송&lt;br>- 이메일&lt;br>- 웹 브라우징&lt;br>- 원격 접속&lt;/td>
&lt;td>- 실시간 스트리밍&lt;br>- 온라인 게임&lt;br>VoIP&lt;br>DNS 쿼리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 데이터 순서 보장&lt;br>- 혼잡 제어 기능&lt;br>- 완전성 보장&lt;/td>
&lt;td>- 빠른 전송 속도&lt;br>- 적은 지연 시간&lt;br>- 단순한 구조&lt;br>- 적은 시스템 부하&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 느린 전송 속도&lt;br>- 많은 시스템 자원 사용&lt;br>- 큰 프로토콜 오버헤드&lt;br>- 지연 시간 발생&lt;/td>
&lt;td>- 데이터 손실 가능&lt;br>- 신뢰성 부족&lt;br>- 순서 보장 없음&lt;br>- 혼잡 제어 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60 바이트&lt;/td>
&lt;td>8 바이트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 설정&lt;/td>
&lt;td>필요 (3-way handshaking)&lt;/td>
&lt;td>불필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>순서 제어&lt;/td>
&lt;td>있음 (순차번호 사용)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>흐름 제어&lt;/td>
&lt;td>있음 (윈도우 크기 조절)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>혼잡 제어&lt;/td>
&lt;td>있음 (혼잡 윈도우 사용)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>HTTP / HTTPS&lt;span class="hx-absolute -hx-mt-20" id="http--https">&lt;/span>
&lt;a href="#http--https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>HTTP와 HTTPS는 모두 웹 통신에 사용되는 프로토콜이지만, HTTPS는 보안 기능이 추가되어 더 안전한 통신을 제공한다.&lt;br>
두 프로토콜 모두 OSI 모델과 TCP/IP 모델의 최상위 계층에서 동작하며, 웹 브라우저와 서버 간의 데이터 교환을 담당한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>HTTP (Hypertext Transfer Protocol)&lt;/th>
&lt;th>HTTPS (Hypertext Transfer Protocol Secure)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>80&lt;/td>
&lt;td>443&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 계층&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>SSL/TLS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>웹 브라우저와 웹 서버 간의 통신&lt;/td>
&lt;td>보안이 강화된 웹 브라우저와 웹 서버 간의 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>평문 전송&lt;/td>
&lt;td>암호화된 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 과정&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. HTTP 요청 전송&lt;br>3. HTTP 응답 수신&lt;br>4. 연결 종료&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. SSL/TLS 핸드셰이크&lt;br>3. 암호화된 HTTP 요청 전송&lt;br>4. 암호화된 HTTP 응답 수신&lt;br>5. 연결 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- Stateless 프로토콜&lt;br>- 확장 가능한 구조&lt;br>- 단순한 요청-응답 모델&lt;br>- 텍스트 기반 통신&lt;/td>
&lt;td>- HTTP에 보안 계층 추가&lt;br>- 데이터 암호화&lt;br>- 서버 인증&lt;br>- 데이터 무결성 보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 웹 페이지 전송&lt;br>- 파일 전송&lt;br>- 폼 데이터 전송&lt;br>API 통신&lt;/td>
&lt;td>- 보안 웹 페이지 전송&lt;br>- 암호화된 파일 전송&lt;br>- 보안 API 통신&lt;br>- 전자 상거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HTTP 메소드 지원&lt;/td>
&lt;td>GET, POST, PUT, DELETE, HEAD, OPTIONS, TRACE, PATCH&lt;/td>
&lt;td>동일한 HTTP 메소드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 데이터 노출 위험&lt;br>- 중간자 공격 취약&lt;br>- 데이터 변조 가능&lt;br>- 서버 인증 없음&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 중간자 공격 방지&lt;br>- 데이터 무결성 보장&lt;br>- 서버 인증 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>- 빠른 통신 속도&lt;br>- 적은 리소스 사용&lt;br>- 낮은 서버 부하&lt;br>- 단순한 구현&lt;/td>
&lt;td>- 상대적으로 느린 속도&lt;br>- 더 많은 리소스 사용&lt;br>- 높은 서버 부하&lt;br>- 복잡한 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 빠른 속도&lt;br>- 적은 오버헤드&lt;br>- 쉬운 디버깅&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 데이터 보호&lt;br>- 신뢰성 있는 통신&lt;br>SEO 이점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안성 부족&lt;br>- 데이터 노출&lt;br>- 신뢰성 부족&lt;br>- 무결성 보장 없음&lt;/td>
&lt;td>- 추가 처리 시간&lt;br>- 높은 리소스 사용&lt;br>- 인증서 비용&lt;br>- 복잡한 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>- 일반 웹사이트&lt;br>- 비중요 정보 전송&lt;br>- 내부 네트워크 통신&lt;br>- 테스트 환경&lt;/td>
&lt;td>- 전자상거래&lt;br>- 온라인 뱅킹&lt;br>- 민감한 정보 전송&lt;br>- 기업 웹사이트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 특성&lt;/td>
&lt;td>일반 텍스트 헤더&lt;/td>
&lt;td>암호화된 헤더&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱 가능 여부&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>가능 (보안 고려 필요)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>HTTP/HTTPS의 발전 과정을 보면 다음과 같은 주요 버전들이 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>HTTP/1.0&lt;/p>
&lt;ul>
&lt;li>기본적인 요청-응답 모델&lt;/li>
&lt;li>연결당 하나의 요청만 처리&lt;/li>
&lt;li>단순한 헤더 구조&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/1.1&lt;/p>
&lt;ul>
&lt;li>지속적 연결 지원&lt;/li>
&lt;li>파이프라이닝 도입&lt;/li>
&lt;li>호스트 헤더 필수화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/2&lt;/p>
&lt;ul>
&lt;li>멀티플렉싱 지원&lt;/li>
&lt;li>헤더 압축&lt;/li>
&lt;li>서버 푸시&lt;/li>
&lt;li>스트림 우선순위&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/3 (최신)&lt;/p>
&lt;ul>
&lt;li>QUIC 프로토콜 기반&lt;/li>
&lt;li>향상된 성능&lt;/li>
&lt;li>개선된 보안&lt;/li>
&lt;li>더 나은 모바일 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 웹 프로토콜들은 현대 인터넷의 근간을 이루며, 특히 HTTPS는 보안이 중요시되는 현대 웹 환경에서 필수적인 프로토콜로 자리잡았다.&lt;/p>
&lt;h4>SSL / TLS&lt;span class="hx-absolute -hx-mt-20" id="ssl--tls">&lt;/span>
&lt;a href="#ssl--tls" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>SSL과 TLS는 모두 웹 통신의 보안을 위해 설계된 프로토콜로, 데이터의 암호화, 인증, 무결성을 보장한다.&lt;br>
TLS는 SSL의 후속 버전으로, 더 강력한 보안 기능과 성능 개선을 제공한다.&lt;br>
현재는 SSL이 더 이상 사용되지 않고 TLS가 널리 사용되고 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SSL (Secure Sockets Layer)&lt;/th>
&lt;th>TLS (Transport Layer Security)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>표현 계층(6계층) / 세션 계층(5계층)&lt;/td>
&lt;td>표현 계층(6계층) / 세션 계층(5계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>네트워크 통신의 종단간 보안 제공&lt;/td>
&lt;td>네트워크 통신의 종단간 보안 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 상태&lt;/td>
&lt;td>더 이상 사용되지 않음 (Deprecated)&lt;/td>
&lt;td>현재 표준으로 사용 중&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>최신 버전&lt;/td>
&lt;td>SSL 3.0 (사용 중단)&lt;/td>
&lt;td>TLS 1.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 인증&lt;br>- 무결성 검증&lt;br>- 키 교환&lt;/td>
&lt;td>- 향상된 데이터 암호화&lt;br>- 강화된 인증&lt;br>- 개선된 무결성 검증&lt;br>- 최적화된 키 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핸드셰이크 과정&lt;/td>
&lt;td>1. Client Hello&lt;br>2. Server Hello&lt;br>3. 인증서 교환&lt;br>4. 키 교환&lt;br>5. 암호화 통신 시작&lt;/td>
&lt;td>1. Client Hello&lt;br>2. Server Hello + 인증서 + 키 교환&lt;br>3. 클라이언트 완료&lt;br>4. 암호화 통신 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지원 암호화 알고리즘&lt;/td>
&lt;td>- RC4&lt;br>DES&lt;br>3DES&lt;br>AES&lt;/td>
&lt;td>- AES&lt;br>ChaCha20&lt;br>Poly1305&lt;br>- 최신 암호화 알고리즘&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특징&lt;/td>
&lt;td>- 기본적인 암호화 제공&lt;br>- 취약한 암호화 알고리즘 포함&lt;br>- 알려진 보안 취약점 존재&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 취약한 알고리즘 제거&lt;br>- 최신 보안 기능 추가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>- 상대적으로 느린 핸드셰이크&lt;br>- 더 많은 라운드 트립 필요&lt;br>- 높은 지연 시간&lt;/td>
&lt;td>- 최적화된 핸드셰이크&lt;br>0-RTT 재개 지원&lt;br>- 낮은 지연 시간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 구현 단순&lt;br>- 광범위한 호환성&lt;br>- 기본적인 보안 제공&lt;/td>
&lt;td>- 향상된 보안&lt;br>- 더 나은 성능&lt;br>- 현대적 암호화&lt;br>- 지속적인 개선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 알려진 취약점&lt;br>- 낮은 성능&lt;br>- 사용 중단됨&lt;br>- 더 이상의 개선 없음&lt;/td>
&lt;td>- 이전 버전과의 호환성 문제&lt;br>- 구현 복잡성&lt;br>- 더 많은 리소스 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>(현재는 사용하지 않음)&lt;/td>
&lt;td>- HTTPS 웹 통신&lt;br>- 이메일 보안&lt;br>VPN&lt;br>- 금융 거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 강도&lt;/td>
&lt;td>취약 (더 이상 안전하지 않음)&lt;/td>
&lt;td>매우 강력 (현재 표준)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증서 지원&lt;/td>
&lt;td>X 인증서&lt;/td>
&lt;td>X 인증서 (향상된 검증)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>키 교환 방식&lt;/td>
&lt;td>- RSA&lt;br>Diffie-Hellman&lt;/td>
&lt;td>- ECDHE&lt;br>DHE&lt;br>- 향상된 키 교환 방식&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>TLS의 발전 과정을 보면 다음과 같은 주요 개선사항들이 있었다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>TLS 1.0&lt;/p>
&lt;ul>
&lt;li>SSL 3.0을 기반으로 개발&lt;/li>
&lt;li>기본적인 보안 개선&lt;/li>
&lt;li>HMAC 도입&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.1&lt;/p>
&lt;ul>
&lt;li>CBC 공격 방어&lt;/li>
&lt;li>명시적 IV 사용&lt;/li>
&lt;li>에러 처리 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.2&lt;/p>
&lt;ul>
&lt;li>SHA-256 지원&lt;/li>
&lt;li>암호화 스위트 개선&lt;/li>
&lt;li>의사난수 함수 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.3 (최신)&lt;/p>
&lt;ul>
&lt;li>핸드셰이크 최적화&lt;/li>
&lt;li>0-RTT 재개&lt;/li>
&lt;li>취약한 알고리즘 제거&lt;/li>
&lt;li>향상된 개인정보 보호&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 보안 프로토콜들은 현대 인터넷 보안의 근간을 이루며, 특히 TLS는 지속적인 개선을 통해 더욱 안전하고 효율적인 보안 통신을 가능하게 하고 있다.&lt;/p>
&lt;h4>FTP / SFTP / SCP / TFTP&lt;span class="hx-absolute -hx-mt-20" id="ftp--sftp--scp--tftp">&lt;/span>
&lt;a href="#ftp--sftp--scp--tftp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 프로토콜들은 모두 파일 전송을 위한 것이지만, 각각의 특성과 보안 수준, 기능의 복잡성에서 차이가 있다.&lt;br>
FTP는 가장 오래되고 널리 사용되는 프로토콜이지만 보안에 취약하다.&lt;br>
SFTP와 SCP는 SSH를 기반으로 하여 보안성이 높다.&lt;br>
TFTP는 가장 단순한 구조로, 제한된 환경에서 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>FTP (File Transfer Protocol)&lt;/th>
&lt;th>SFTP (SSH File Transfer Protocol)&lt;/th>
&lt;th>SCP (Secure Copy Protocol)&lt;/th>
&lt;th>TFTP (Trivial File Transfer Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>20(데이터), 21(제어)&lt;/td>
&lt;td>22&lt;/td>
&lt;td>22&lt;/td>
&lt;td>69&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>암호화 없음 (기본)&lt;/td>
&lt;td>SSH 기반 암호화&lt;/td>
&lt;td>SSH 기반 암호화&lt;/td>
&lt;td>암호화 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>일반 파일 전송 및 관리&lt;/td>
&lt;td>보안 파일 전송 및 관리&lt;/td>
&lt;td>보안 파일 복사&lt;/td>
&lt;td>단순 파일 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 특성&lt;/td>
&lt;td>- 제어 연결과 데이터 연결 분리&lt;br>- 능동/수동 모드 지원&lt;br>- 지속적 연결&lt;/td>
&lt;td>- 단일 암호화 연결&lt;br>SSH 터널링 사용&lt;br>- 지속적 연결&lt;/td>
&lt;td>- 단일 암호화 연결&lt;br>- 일회성 연결&lt;br>- 비대화형&lt;/td>
&lt;td>- 단순 연결&lt;br>- 비연결형&lt;br>- 최소한의 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 파일 업로드/다운로드&lt;br>- 디렉토리 탐색&lt;br>- 파일 관리&lt;br>- 권한 관리&lt;/td>
&lt;td>- 파일 업로드/다운로드&lt;br>- 디렉토리 관리&lt;br>- 파일 권한 제어&lt;br>- 원격 파일 조작&lt;/td>
&lt;td>- 파일 복사&lt;br>- 디렉토리 복사&lt;br>- 재귀적 복사&lt;br>- 보존 모드 지원&lt;/td>
&lt;td>- 파일 읽기/쓰기&lt;br>- 단순 전송&lt;br>- 최소 메모리 사용&lt;br>- 간단한 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 방식&lt;/td>
&lt;td>사용자명/비밀번호&lt;/td>
&lt;td>- SSH 키 기반&lt;br>- 비밀번호&lt;br>- 인증서&lt;/td>
&lt;td>- SSH 키 기반&lt;br>- 비밀번호&lt;/td>
&lt;td>인증 없음 (기본)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 다양한 명령어 지원&lt;br>- 세션 유지&lt;br>ASCII/이진 모드&lt;br>- 재시작 기능&lt;/td>
&lt;td>- 풍부한 파일 작업&lt;br>- 플랫폼 독립적&lt;br>- 강력한 보안&lt;br>- 세션 관리&lt;/td>
&lt;td>- 간단한 사용법&lt;br>- 빠른 전송&lt;br>- 명령행 기반&lt;br>- 최소한의 기능&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 최소한의 메모리&lt;br>- 쉬운 구현&lt;br>- 빠른 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 지원됨&lt;br>- 다양한 기능&lt;br>- 유연한 사용&lt;br>- 재시작 가능&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 다양한 기능&lt;br>- 호환성&lt;br>- 신뢰성&lt;/td>
&lt;td>- 간단한 사용&lt;br>- 높은 보안&lt;br>- 빠른 속도&lt;br>- 적은 오버헤드&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 적은 메모리&lt;br>- 빠른 전송&lt;br>ROM 부팅 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약&lt;br>- 복잡한 설정&lt;br>- 방화벽 문제&lt;br>- 오버헤드 큼&lt;/td>
&lt;td>- 구현 복잡&lt;br>- 높은 오버헤드&lt;br>- 느린 속도&lt;br>- 리소스 많이 사용&lt;/td>
&lt;td>- 제한된 기능&lt;br>- 진행률 표시 없음&lt;br>- 세션 관리 없음&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 보안 없음&lt;br>- 큰 파일 부적합&lt;br>- 신뢰성 낮음&lt;br>- 기능 제한적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 사용 사례&lt;/td>
&lt;td>- 웹 호스팅&lt;br>- 파일 공유&lt;br>- 백업&lt;br>- 일반 파일 전송&lt;/td>
&lt;td>- 보안 파일 전송&lt;br>- 원격 파일 관리&lt;br>- 자동화된 전송&lt;br>- 기업 환경&lt;/td>
&lt;td>- 서버 간 파일 복사&lt;br>- 백업&lt;br>- 스크립트 자동화&lt;br>- 단순 전송&lt;/td>
&lt;td>- 네트워크 부팅&lt;br>- 펌웨어 업데이트&lt;br>- 설정 파일 전송&lt;br>- 임베디드 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이들 프로토콜은 다음과 같은 상황에서 선택적으로 사용된다:&lt;/p>
&lt;ol>
&lt;li>일반적인 파일 전송이 필요한 경우: FTP&lt;/li>
&lt;li>보안이 중요한 파일 전송: SFTP 또는 SCP&lt;/li>
&lt;li>제한된 리소스 환경에서의 단순 전송: TFTP&lt;/li>
&lt;/ol>
&lt;p>각 프로토콜은 자신의 고유한 용도와 장점이 있으며, 네트워크 환경과 보안 요구사항에 따라 적절한 프로토콜을 선택하는 것이 중요하다.&lt;/p>
&lt;h4>SMTP / POP3 / IMAP&lt;span class="hx-absolute -hx-mt-20" id="smtp--pop3--imap">&lt;/span>
&lt;a href="#smtp--pop3--imap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 세 프로토콜은 모두 이메일 통신에 중요한 역할을 하며, 각각의 특성에 따라 이메일 전송, 수신, 관리 기능을 제공한다.&lt;br>
SMTP는 이메일 전송을, POP3와 IMAP은 이메일 수신을 담당하지만, IMAP이 더 현대적이고 유연한 기능을 제공한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SMTP (Simple Mail Transfer Protocol)&lt;/th>
&lt;th>POP3 (Post Office Protocol 3)&lt;/th>
&lt;th>IMAP (Internet Message Access Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>25 (일반), 587 (TLS/SSL)&lt;/td>
&lt;td>110 (일반), 995 (TLS/SSL)&lt;/td>
&lt;td>143 (일반), 993 (TLS/SSL)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>이메일 발송 및 전달&lt;/td>
&lt;td>이메일 다운로드 및 삭제&lt;/td>
&lt;td>서버상의 이메일 관리 및 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 방향&lt;/td>
&lt;td>클라이언트 → 서버&lt;br>서버 → 서버&lt;/td>
&lt;td>클라이언트 ← 서버&lt;/td>
&lt;td>양방향 (클라이언트 ↔ 서버)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 동작 방식&lt;/td>
&lt;td>1. 연결 수립&lt;br>2. 송신자 확인&lt;br>3. 수신자 확인&lt;br>4. 메시지 전송&lt;br>5. 연결 종료&lt;/td>
&lt;td>1. 서버 접속&lt;br>2. 인증&lt;br>3. 메일 다운로드&lt;br>4. 서버에서 메일 삭제(옵션)&lt;br>5. 연결 종료&lt;/td>
&lt;td>1. 서버 접속&lt;br>2. 인증&lt;br>3. 메일함 선택&lt;br>4. 메일 조작(읽기/이동/삭제 등)&lt;br>5. 상태 동기화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 텍스트 기반 프로토콜&lt;br>- 메일 릴레이 가능&lt;br>- 단순한 명령어 체계&lt;br>- 확장 가능한 구조&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 오프라인 접근 가능&lt;br>- 서버 저장공간 최소화&lt;br>- 한 기기에서만 접근&lt;/td>
&lt;td>- 서버 중심 관리&lt;br>- 다중 기기 접근&lt;br>- 폴더 구조 지원&lt;br>- 실시간 동기화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메일 저장 위치&lt;/td>
&lt;td>전달 중계 역할만 수행&lt;/td>
&lt;td>로컬 장치&lt;/td>
&lt;td>메일 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>다중 기기 지원&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>제한적 (한 기기에서만 관리)&lt;/td>
&lt;td>완벽 지원 (모든 기기 동기화)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 자원 사용&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>메일 전송 시에만 사용&lt;/td>
&lt;td>전체 메일 다운로드로 많이 사용&lt;/td>
&lt;td>필요한 부분만 동기화하여 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 안정적인 전달&lt;br>- 낮은 리소스 사용&lt;br>- 높은 호환성&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 오프라인 사용 가능&lt;br>- 서버 부하 낮음&lt;br>- 구현 용이&lt;/td>
&lt;td>- 유연한 메일 관리&lt;br>- 다중 기기 지원&lt;br>- 서버 백업 용이&lt;br>- 부분 동기화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 기본 보안 기능 없음&lt;br>- 인증 제한적&lt;br>- 스팸 메일 취약&lt;br>- 첨부파일 크기 제한&lt;/td>
&lt;td>- 한 기기에서만 관리&lt;br>- 메일 동기화 어려움&lt;br>- 폴더 구조 제한&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 높은 서버 부하&lt;br>- 느린 초기 접속&lt;br>- 많은 서버 자원 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>기본적으로 없음 (SMTPS로 보안 추가 가능)&lt;/td>
&lt;td>기본적으로 없음 (POP3S로 보안 추가 가능)&lt;/td>
&lt;td>기본적으로 없음 (IMAPS로 보안 추가 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 명령어&lt;/td>
&lt;td>- HELO/EHLO&lt;br>MAIL FROM&lt;br>RCPT TO&lt;br>DATA&lt;br>QUIT&lt;/td>
&lt;td>- USER&lt;br>PASS&lt;br>LIST&lt;br>RETR&lt;br>DELE&lt;/td>
&lt;td>- SELECT&lt;br>FETCH&lt;br>STORE&lt;br>SEARCH&lt;br>EXPUNGE&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 이메일 프로토콜들은 다음과 같이 함께 동작한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>이메일 발송 과정:&lt;/p>
&lt;ul>
&lt;li>사용자가 이메일 작성&lt;/li>
&lt;li>SMTP를 통해 발송 서버로 전송&lt;/li>
&lt;li>발송 서버가 수신 서버로 SMTP를 통해 전달&lt;/li>
&lt;li>수신 서버에 메일 저장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이메일 수신 과정:&lt;/p>
&lt;ul>
&lt;li>POP3 사용 시: 모든 메일을 로컬로 다운로드&lt;/li>
&lt;li>IMAP 사용 시: 서버와 실시간 동기화하며 필요한 메일만 접근&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 프로토콜들의 조합으로 현대의 이메일 시스템이 안정적으로 작동하며, 특히 최근에는 보안과 다중 기기 지원이 중요해지면서 IMAP의 사용이 증가하는 추세이다.&lt;/p>
&lt;h4>SNMP / ICMP / NTP / RMON&lt;span class="hx-absolute -hx-mt-20" id="snmp--icmp--ntp--rmon">&lt;/span>
&lt;a href="#snmp--icmp--ntp--rmon" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>SNMP는 네트워크 장치의 상태를 모니터링하고 관리하는 데 사용되며, MIB를 통해 정보를 구조화한다.&lt;br>
Manager와 Agent 간의 통신으로 동작한다.&lt;/p>
&lt;p>ICMP는 네트워크 문제를 진단하고 오류를 보고하는 데 사용된다.&lt;br>
Ping과 Traceroute 같은 도구에서 활용되며, 연결 없이 메시지를 전송한다.&lt;/p>
&lt;p>NTP는 네트워크 상의 장치들 간에 시간을 동기화하는 데 사용된다.&lt;br>
계층적 구조를 통해 정확한 시간 정보를 전파하며, 네트워크 지연을 고려하여 시간을 조정한다.&lt;/p>
&lt;p>RMON은 SNMP의 확장된 형태로, 더 상세한 네트워크 모니터링 기능을 제공한다.&lt;/p>
&lt;p>모두 네트워크 관리와 운영에 중요한 역할을 하며, 각각의 특성에 따라 다양한 네트워크 기능을 지원한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SNMP (Simple Network Management Protocol)&lt;/th>
&lt;th>ICMP (Internet Control Message Protocol)&lt;/th>
&lt;th>NTP (Network Time Protocol)&lt;/th>
&lt;th>RMON (Remote Network Monitoring)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>네트워크 장비 및 시스템 관리 및 모니터링&lt;/td>
&lt;td>네트워크 오류 보고 및 진단&lt;/td>
&lt;td>컴퓨터 시스템 간 시간 동기화&lt;/td>
&lt;td>원격 네트워크 모니터링 및 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 네트워크 모니터링&lt;br>- 성능 관리&lt;br>- 장비 구성 관리&lt;br>- 문제 감지 및 보고&lt;/td>
&lt;td>- 오류 메시지 전송&lt;br>- 네트워크 연결성 테스트&lt;br>- 경로 진단&lt;br>- 라우터 광고/요청&lt;/td>
&lt;td>- 시간 정보 동기화&lt;br>- 지연시간 측정&lt;br>- 시간 서버 계층 구조 관리&lt;br>- 정밀한 시간 조정&lt;/td>
&lt;td>- 트래픽 모니터링&lt;br>- 통계 수집&lt;br>- 이력 데이터 관리&lt;br>- 알람 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 관리자/에이전트 구조&lt;br>GET/SET 명령 사용&lt;br>MIB 기반 정보 관리&lt;br>- 트랩 메시지 사용&lt;/td>
&lt;td>- IP 프로토콜 기반&lt;br>- 요청/응답 메시지&lt;br>- 타입과 코드로 메시지 구분&lt;br>TTL 기반 작동&lt;/td>
&lt;td>- 계층적 서버 구조&lt;br>UDP 포트 123 사용&lt;br>- 폴링 방식&lt;br>- 지터 버퍼 사용&lt;/td>
&lt;td>- SNMP 기반 동작&lt;br>- 프로브/콘솔 구조&lt;br>- 지속적 데이터 수집&lt;br>- 이벤트 기반 알림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- UDP 기반 통신&lt;br>- 비연결형 서비스&lt;br>- 간단한 구조&lt;br>- 확장 가능한 구조&lt;/td>
&lt;td>- IP의 필수 구성요소&lt;br>- 신뢰성 없는 전송&lt;br>- 제어 메시지 전용&lt;br>- 낮은 우선순위&lt;/td>
&lt;td>- 정밀한 시간 동기화&lt;br>- 계층적 구조&lt;br>- 지연 보상&lt;br>- 신뢰성 있는 동기화&lt;/td>
&lt;td>- 분산 모니터링&lt;br>- 상세한 통계&lt;br>- 이력 데이터 저장&lt;br>- 유연한 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 버전 1, 2c, 3 존재&lt;br>- 보안 기능 강화(v3)&lt;br>- 표준화된 관리 체계&lt;br>- 다양한 플랫폼 지원&lt;/td>
&lt;td>- Echo 요청/응답&lt;br>- 도달 불가 메시지&lt;br>- 리다이렉션 메시지&lt;br>- 시간 초과 메시지&lt;/td>
&lt;td>- 스트라텀 레벨 구조&lt;br>- 밀리초 단위 정확도&lt;br>- 서머타임 자동 조정&lt;br>- 루트 지연 계산&lt;/td>
&lt;td>- 상세한 모니터링&lt;br>- 이력 데이터 관리&lt;br>- 유연한 분석&lt;br>- 선제적 대응 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 쉬운 구현&lt;br>- 낮은 네트워크 부하&lt;br>- 통합 관리 가능&lt;br>- 자동화된 모니터링&lt;/td>
&lt;td>- 간단한 구조&lt;br>- 필수적인 오류 보고&lt;br>- 네트워크 진단 용이&lt;br>- 빠른 응답&lt;/td>
&lt;td>- 높은 정확도&lt;br>- 안정적인 동기화&lt;br>- 확장성&lt;br>- 자동 조정&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 구현 복잡성&lt;br>- 높은 저장공간 요구&lt;br>- 관리 부담&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 보안(v1,v2c)&lt;br>- 복잡한 설정(v3)&lt;br>- 대역폭 제한&lt;br>- 확장성 제한&lt;/td>
&lt;td>- 보안 취약성&lt;br>- 신뢰성 부족&lt;br>- 제한된 기능&lt;br>- 차단 가능성&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 네트워크 지연 영향&lt;br>- 보안 취약성&lt;br>- 높은 자원 사용&lt;/td>
&lt;td>- 네트워크 성능 분석&lt;br>- 트래픽 모니터링&lt;br>- 장애 예방&lt;br>- 용량 계획&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 포트&lt;/td>
&lt;td>UDP 161(요청), 162(트랩)&lt;/td>
&lt;td>IP 프로토콜 타입 1&lt;/td>
&lt;td>UDP 123&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>- 커뮤니티 문자열(v1,v2c)&lt;br>- 인증/암호화(v3)&lt;br>- 접근 제어&lt;br>- 보안 모델&lt;/td>
&lt;td>- 기본 보안 기능 없음&lt;br>- 필터링 필요&lt;br>- 제한된 보안&lt;/td>
&lt;td>- 인증 지원&lt;br>- 대칭키 암호화&lt;br>- 접근 제어&lt;br>NTPv4 보안 강화&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 네트워크 모니터링&lt;br>- 성능 관리&lt;br>- 장애 관리&lt;br>- 구성 관리&lt;/td>
&lt;td>- Ping 테스트&lt;br>- 경로 추적&lt;br>- 오류 보고&lt;br>- 네트워크 진단&lt;/td>
&lt;td>- 서버 시간 동기화&lt;br>- 로그 시간 동기화&lt;br>- 금융 거래 시간 동기화&lt;br>- 네트워크 시간 관리&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>ARP / RARP / DHCP / DNS&lt;span class="hx-absolute -hx-mt-20" id="arp--rarp--dhcp--dns">&lt;/span>
&lt;a href="#arp--rarp--dhcp--dns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이러한 프로토콜들은 각각의 고유한 역할을 통해 현대 네트워크의 기반을 형성한다.&lt;br>
특히:&lt;/p>
&lt;ul>
&lt;li>ARP는 로컬 네트워크에서의 주소 해석을 담당&lt;/li>
&lt;li>RARP는 역방향 주소 해석을 제공했으나 현재는 거의 사용되지 않음&lt;/li>
&lt;li>DHCP는 네트워크 구성의 자동화를 담당&lt;/li>
&lt;li>DNS는 도메인 이름 시스템의 근간을 형성&lt;br>
이들은 서로 보완적인 관계를 가지며, 현대 네트워크에서 필수적인 역할을 수행한다.&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>ARP (Address Resolution Protocol)&lt;/th>
&lt;th>RARP (Reverse ARP)&lt;/th>
&lt;th>DHCP (Dynamic Host Configuration Protocol)&lt;/th>
&lt;th>DNS (Domain Name System)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>UDP 67(서버), 68(클라이언트)&lt;/td>
&lt;td>UDP/TCP 53&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>IP 주소를 MAC 주소로 변환&lt;/td>
&lt;td>MAC 주소를 IP 주소로 변환&lt;/td>
&lt;td>자동 네트워크 구성&lt;/td>
&lt;td>도메인 이름을 IP 주소로 변환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- MAC 주소 검색&lt;br>ARP 캐시 관리&lt;br>- 브로드캐스트 요청&lt;br>- 유니캐스트 응답&lt;/td>
&lt;td>- IP 주소 요청&lt;br>- 부팅 시 IP 할당&lt;br>- 서버 기반 주소 관리&lt;br>- 하드웨어 주소 매핑&lt;/td>
&lt;td>- IP 주소 자동 할당&lt;br>- 네트워크 설정 제공&lt;br>- 임대 시간 관리&lt;br>- 주소 풀 관리&lt;/td>
&lt;td>- 이름 해석&lt;br>- 계층적 네임스페이스&lt;br>- 분산 데이터베이스&lt;br>- 캐싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. ARP 요청 브로드캐스트&lt;br>2. 대상 호스트 응답&lt;br>3. ARP 캐시 업데이트&lt;br>4. 통신 시작&lt;/td>
&lt;td>1. RARP 요청 브로드캐스트&lt;br>2. RARP 서버 응답&lt;br>3. IP 주소 할당&lt;br>4. 부팅 계속&lt;/td>
&lt;td>1. DHCP 발견&lt;br>2. DHCP 제안&lt;br>3. DHCP 요청&lt;br>4. DHCP 승인&lt;/td>
&lt;td>1. DNS 쿼리 전송&lt;br>2. 재귀적/반복적 검색&lt;br>3. 응답 수신&lt;br>4. 캐시 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 브로드캐스트 기반&lt;br>- 로컬 네트워크 한정&lt;br>- 캐시 사용&lt;br>- 자동 갱신&lt;/td>
&lt;td>- 서버 필요&lt;br>- 제한된 사용&lt;br>- 단순한 구조&lt;br>- 레거시 프로토콜&lt;/td>
&lt;td>- 클라이언트-서버 모델&lt;br>- 자동화된 설정&lt;br>- 중앙 관리&lt;br>- 동적 할당&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 분산 시스템&lt;br>- 캐시 메커니즘&lt;br>- 이중화 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 자동 주소 매핑&lt;br>- 간단한 구현&lt;br>- 효율적 동작&lt;br>- 자가 갱신&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 쉬운 구현&lt;br>- 중앙 관리&lt;br>- 일관성 보장&lt;/td>
&lt;td>- 자동화된 관리&lt;br>- 효율적인 주소 사용&lt;br>- 유연한 설정&lt;br>- 중앙 관리 용이&lt;/td>
&lt;td>- 사용자 친화적&lt;br>- 확장성&lt;br>- 유연성&lt;br>- 신뢰성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약성&lt;br>- 브로드캐스트 부하&lt;br>- 로컬 네트워크 제한&lt;br>ARP 스푸핑 위험&lt;/td>
&lt;td>- 서버 의존성&lt;br>- 제한된 기능&lt;br>- 확장성 부족&lt;br>- 현대 환경 부적합&lt;/td>
&lt;td>- 단일 장애점&lt;br>- 설정 복잡성&lt;br>- 보안 이슈&lt;br>- 서버 부하&lt;/td>
&lt;td>- 캐시 포이즈닝&lt;br>DNS 증폭 공격&lt;br>- 지연 가능성&lt;br>- 복잡한 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- LAN 통신&lt;br>IP 네트워킹&lt;br>- 게이트웨이 통신&lt;br>- 네트워크 연결&lt;/td>
&lt;td>- 디스크리스 워크스테이션&lt;br>- 단순 네트워크 구성&lt;br>- 레거시 시스템&lt;br>- 제한된 환경&lt;/td>
&lt;td>- 네트워크 자동 구성&lt;br>IP 주소 관리&lt;br>- 네트워크 설정 배포&lt;br>- 대규모 네트워크 관리&lt;/td>
&lt;td>- 웹 브라우징&lt;br>- 이메일 시스템&lt;br>- 네트워크 서비스&lt;br>- 도메인 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>IGMP / PIM&lt;span class="hx-absolute -hx-mt-20" id="igmp--pim">&lt;/span>
&lt;a href="#igmp--pim" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>두 프로토콜은 멀티캐스트 통신에서 서로 다른 역할을 수행하며 상호 보완적으로 동작한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>IGMP는 로컬 네트워크에서 멀티캐스트 그룹 관리를 담당하며:&lt;/p>
&lt;ul>
&lt;li>호스트의 그룹 가입/탈퇴 처리&lt;/li>
&lt;li>라우터의 그룹 멤버십 추적&lt;/li>
&lt;li>효율적인 멀티캐스트 전달 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>PIM은 네트워크 전반에서 멀티캐스트 라우팅을 담당하며:&lt;/p>
&lt;ul>
&lt;li>효율적인 멀티캐스트 트리 구성&lt;/li>
&lt;li>최적의 멀티캐스트 경로 계산&lt;/li>
&lt;li>다양한 네트워크 환경 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이 두 프로토콜의 조합으로 효율적인 멀티캐스트 통신이 가능해진다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IGMP (Internet Group Management Protocol)&lt;/th>
&lt;th>PIM (Protocol Independent Multicast)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 유형&lt;/td>
&lt;td>멀티캐스트 관리 프로토콜&lt;/td>
&lt;td>멀티캐스트 라우팅 프로토콜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>호스트와 라우터 간의 멀티캐스트 그룹 관리&lt;/td>
&lt;td>멀티캐스트 트래픽의 효율적인 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 모드&lt;/td>
&lt;td>- IGMPv1: 기본 질의/응답&lt;br>IGMPv2: 빠른 탈퇴 추가&lt;br>IGMPv3: 소스 필터링 지원&lt;/td>
&lt;td>- Dense Mode (DM)&lt;br>Sparse Mode (SM)&lt;br>Sparse-Dense Mode&lt;br>Bidirectional Mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 그룹 가입/탈퇴 관리&lt;br>- 멤버십 보고&lt;br>- 주기적인 질의&lt;br>- 그룹 상태 추적&lt;/td>
&lt;td>- 멀티캐스트 트리 구성&lt;br>- 최적 경로 계산&lt;br>RPF 확인&lt;br>RP 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 로컬 서브넷 범위&lt;br>IPv4/IPv6 지원&lt;br>- 질의/응답 기반&lt;br>- 상태 기반 프로토콜&lt;/td>
&lt;td>- 프로토콜 독립적&lt;br>- 유니캐스트 라우팅 활용&lt;br>- 확장성&lt;br>- 유연한 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 메시지 유형&lt;/td>
&lt;td>- Membership Query&lt;br>Membership Report&lt;br>Leave Group&lt;br>Group-Specific Query&lt;/td>
&lt;td>- Hello&lt;br>Join/Prune&lt;br>Assert&lt;br>Bootstrap&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. 라우터의 주기적 질의&lt;br>2. 호스트의 멤버십 보고&lt;br>3. 그룹 상태 유지&lt;br>4. 필요시 빠른 탈퇴&lt;/td>
&lt;td>1. 이웃 탐색&lt;br>2. 트리 구성&lt;br>3. 경로 최적화&lt;br>4. 주기적 갱신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 효율적인 그룹 관리&lt;br>- 빠른 응답성&lt;br>- 낮은 오버헤드&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 효율적인 트래픽 전달&lt;br>- 유연한 토폴로지&lt;br>- 다양한 모드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 범위&lt;br>- 보안 취약성&lt;br>- 버전 호환성 문제&lt;br>- 대역폭 제한&lt;/td>
&lt;td>- 복잡한 구성&lt;br>- 높은 리소스 사용&lt;br>- 관리 부담&lt;br>- 초기 설정 복잡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 환경&lt;/td>
&lt;td>- 로컬 네트워크&lt;br>- 엔드 시스템&lt;br>- 액세스 네트워크&lt;br>- 마지막 홉 라우터&lt;/td>
&lt;td>- 기업 네트워크&lt;br>- 서비스 제공자&lt;br>- 백본 네트워크&lt;br>- 대규모 네트워크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 버전별 기능 향상&lt;br>MLD와의 통합&lt;br>- 빠른 응답 메커니즘&lt;br>- 그룹별 관리&lt;/td>
&lt;td>- 다양한 동작 모드&lt;br>RP 기반 동작&lt;br>- 자동 RP 탐색&lt;br>- 경로 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 고려사항&lt;/td>
&lt;td>- 무단 가입 위험&lt;br>- 스누핑 취약성&lt;br>DoS 공격 가능성&lt;br>- 인증 메커니즘 부재&lt;/td>
&lt;td>- 인증 필요&lt;br>RP 보안&lt;br>- 경로 검증&lt;br>- 액세스 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Telnet / SSH&lt;span class="hx-absolute -hx-mt-20" id="telnet--ssh">&lt;/span>
&lt;a href="#telnet--ssh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>네트워크를 통해 원격 시스템에 접속하여 명령어를 실행할 수 있게 해주는 프로토콜.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>TELNET (TELecommunication NETwork)&lt;/th>
&lt;th>SSH (Secure Shell)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>23&lt;/td>
&lt;td>22&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 암호화 없음&lt;br>- 평문 전송&lt;br>- 기본적인 인증만 제공&lt;br>- 보안 취약&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 다중 인증 방식&lt;br>- 데이터 무결성 검증&lt;br>- 키 기반 인증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 원격 터미널 접속&lt;br>- 텍스트 기반 통신&lt;br>- 간단한 명령어 실행&lt;br>- 기본적인 세션 관리&lt;/td>
&lt;td>- 보안 원격 접속&lt;br>- 파일 전송(SFTP/SCP)&lt;br>- 포트 포워딩&lt;br>X11 포워딩&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 방식&lt;/td>
&lt;td>- 사용자명/비밀번호&lt;br>- 평문 전송&lt;br>- 단순 인증&lt;/td>
&lt;td>- 공개키/개인키&lt;br>- 비밀번호&lt;br>- 다중 인증&lt;br>- 인증서 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 특성&lt;/td>
&lt;td>- 평문 전송&lt;br>- 압축 없음&lt;br>- 무결성 검사 없음&lt;br>- 중간자 공격 취약&lt;/td>
&lt;td>- 암호화 전송&lt;br>- 압축 지원&lt;br>- 무결성 검사&lt;br>- 중간자 공격 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>세션 관리&lt;/td>
&lt;td>- 단순한 세션 관리&lt;br>- 연결 유지 기능 제한&lt;br>- 재접속 시 새로운 세션&lt;/td>
&lt;td>- 고급 세션 관리&lt;br>- 연결 유지 기능&lt;br>- 세션 재사용 가능&lt;br>- 다중 채널 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 적은 리소스 사용&lt;br>- 빠른 연결&lt;br>- 호환성 높음&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 다양한 기능&lt;br>- 확장성&lt;br>- 현대적 설계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 낮은 리소스 요구&lt;br>- 빠른 응답 속도&lt;br>- 널리 지원됨&lt;/td>
&lt;td>- 높은 보안성&lt;br>- 다양한 기능&lt;br>- 신뢰성&lt;br>- 표준화된 프로토콜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약&lt;br>- 기능 제한&lt;br>- 현대 환경 부적합&lt;br>- 데이터 노출 위험&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 구현 복잡성&lt;br>- 초기 설정 필요&lt;br>- 상대적으로 느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. 사용자 인증&lt;br>3. 터미널 에뮬레이션&lt;br>4. 명령어 전송/수신&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. 버전 협상&lt;br>3. 키 교환&lt;br>4. 인증&lt;br>5. 채널 설정&lt;br>6. 암호화된 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 사용 사례&lt;/td>
&lt;td>- 레거시 시스템 관리&lt;br>- 간단한 원격 접속&lt;br>- 제한된 환경&lt;br>- 테스트 목적&lt;/td>
&lt;td>- 서버 관리&lt;br>- 보안 파일 전송&lt;br>- 원격 명령 실행&lt;br>- 터널링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 상태&lt;/td>
&lt;td>사용 권장되지 않음&lt;/td>
&lt;td>현재 표준으로 사용 중&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>SSH의 주요 보안 기능:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>암호화&lt;/p>
&lt;ul>
&lt;li>대칭키 암호화&lt;/li>
&lt;li>비대칭키 암호화&lt;/li>
&lt;li>완벽한 전방 비밀성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인증 메커니즘&lt;/p>
&lt;ul>
&lt;li>공개키 인증&lt;/li>
&lt;li>비밀번호 인증&lt;/li>
&lt;li>호스트 기반 인증&lt;/li>
&lt;li>다중 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 무결성&lt;/p>
&lt;ul>
&lt;li>MAC (Message Authentication Code)&lt;/li>
&lt;li>해시 함수&lt;/li>
&lt;li>디지털 서명&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 원격 접속 프로토콜들은 시간이 지남에 따라 보안의 중요성이 증가하면서, TELNET에서 SSH로 대체되는 추세를 보이고 있다. 특히 기업 환경에서는 보안상의 이유로 SSH의 사용이 필수적이 되었다.&lt;/p>
&lt;h4>RIP / RIPv2 / RIPng / OSPF / EIGRP / IS-IS / BGP&lt;span class="hx-absolute -hx-mt-20" id="rip--ripv2--ripng--ospf--eigrp--is-is--bgp">&lt;/span>
&lt;a href="#rip--ripv2--ripng--ospf--eigrp--is-is--bgp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>각 라우팅 프로토콜의 주요 특성을 요약한 것이다.&lt;br>
각 프로토콜은 네트워크의 규모와 요구사항에 따라 선택되어 사용된다.&lt;br>
예를 들어, RIP는 소규모 네트워크에 적합하고, OSPF와 IS-IS는 대규모 네트워크에 적합하며, BGP는 인터넷 백본과 같은 초대규모 네트워크에 사용된다.&lt;/p>
&lt;p>라우팅 프로토콜들의 특징을 체계적으로 비교 분석하여 표로 정리해드리겠습니다. 각 프로토콜의 특성과 동작 방식을 상세하게 설명하여 이해를 돕도록 하겠습니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RIP (Routing Information Protocol) / RIPv2 (Routing Information Protocol version 2)&lt;/th>
&lt;th>RIPng (Routing Information Protocol next generation)&lt;/th>
&lt;th>OSPF (Open Shortest Path First)&lt;/th>
&lt;th>EIGRP (Enhanced Interior Gateway Routing Protocol)&lt;/th>
&lt;th>IS-IS (Intermediate System to Intermediate System)&lt;/th>
&lt;th>BGP (Border Gateway Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 유형&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>외부 게이트웨이 프로토콜(EGP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 알고리즘&lt;/td>
&lt;td>거리 벡터&lt;/td>
&lt;td>거리 벡터&lt;/td>
&lt;td>링크 스테이트&lt;/td>
&lt;td>하이브리드(DUAL)&lt;/td>
&lt;td>링크 스테이트&lt;/td>
&lt;td>경로 벡터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메트릭 계산 방식&lt;/td>
&lt;td>홉 카운트&lt;/td>
&lt;td>홉 카운트&lt;/td>
&lt;td>비용(대역폭)&lt;/td>
&lt;td>복합 메트릭(대역폭, 지연, 부하, 신뢰성)&lt;/td>
&lt;td>비용&lt;/td>
&lt;td>다양한 속성(AS 경로, 로컬 선호도 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>최대 홉 카운트&lt;/td>
&lt;td>15&lt;/td>
&lt;td>15&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수렴 속도&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>매우 빠름&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>업데이트 방식&lt;/td>
&lt;td>주기적(30초)&lt;/td>
&lt;td>주기적(30초)&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 규모&lt;/td>
&lt;td>소규모&lt;/td>
&lt;td>소규모&lt;/td>
&lt;td>대규모&lt;/td>
&lt;td>중대규모&lt;/td>
&lt;td>대규모&lt;/td>
&lt;td>초대규모(인터넷)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 구현 간단&lt;br>- 설정 쉬움&lt;br>- 제한된 확장성&lt;br>- 카운팅 투 인피니티 문제&lt;/td>
&lt;td>- IPv6 지원&lt;br>RIPv2 기반&lt;br>- 향상된 보안&lt;br>- 동일한 제한사항&lt;/td>
&lt;td>- 영역 기반 계층구조&lt;br>- 빠른 수렴&lt;br>- 대규모 확장성&lt;br>- 정확한 토폴로지 정보&lt;/td>
&lt;td>- Cisco 전용&lt;br>- 빠른 수렴&lt;br>- 효율적인 대역폭 사용&lt;br>- 유연한 경로 선택&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 벤더 중립적&lt;br>- 대규모 확장성&lt;br>- 빠른 수렴&lt;/td>
&lt;td>- 정책 기반 라우팅&lt;br>- 대규모 확장성&lt;br>- 풍부한 경로 속성&lt;br>AS 간 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 이해하기 쉬움&lt;br>- 적은 리소스 사용&lt;br>- 간단한 구현&lt;br>- 모든 벤더 지원&lt;/td>
&lt;td>- IPv6 네이티브 지원&lt;br>- 보안 강화&lt;br>- 간단한 구현&lt;br>- 기존 RIP 호환&lt;/td>
&lt;td>- 효율적인 대역폭 사용&lt;br>- 빠른 수렴&lt;br>- 계층적 설계&lt;br>- 뛰어난 확장성&lt;/td>
&lt;td>- 빠른 수렴&lt;br>- 효율적인 리소스 사용&lt;br>- 유연한 토폴로지&lt;br>- 부분 업데이트&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 벤더 중립성&lt;br>- 효율적인 라우팅&lt;br>IPv4/IPv6 통합 지원&lt;/td>
&lt;td>- 강력한 정책 제어&lt;br>- 뛰어난 확장성&lt;br>- 풍부한 경로 정보&lt;br>- 정교한 경로 선택&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 느린 수렴&lt;br>- 제한된 확장성&lt;br>- 비효율적 라우팅&lt;br>- 대역폭 낭비&lt;/td>
&lt;td>- 느린 수렴&lt;br>- 제한된 확장성&lt;br>IPv4 미지원&lt;br>- 홉 제한&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 리소스 요구&lt;br>- 복잡한 트러블슈팅&lt;br>- 많은 CPU/메모리 사용&lt;/td>
&lt;td>- Cisco 전용&lt;br>- 복잡한 메트릭&lt;br>- 라이센스 비용&lt;br>- 트러블슈팅 어려움&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 학습 곡선&lt;br>- 복잡한 트러블슈팅&lt;br>- 전문성 요구&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 느린 수렴&lt;br>- 높은 리소스 요구&lt;br>- 전문성 요구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 환경&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>IPv6 소규모 네트워크&lt;/td>
&lt;td>중대형 엔터프라이즈 네트워크&lt;/td>
&lt;td>Cisco 기반 네트워크&lt;/td>
&lt;td>대형 서비스 제공자 네트워크&lt;/td>
&lt;td>인터넷 서비스 제공자&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>RTP / RTCP / RTSP / SIP / H.323 / WebRTC / WebSocket&lt;span class="hx-absolute -hx-mt-20" id="rtp--rtcp--rtsp--sip--h323--webrtc--websocket">&lt;/span>
&lt;a href="#rtp--rtcp--rtsp--sip--h323--webrtc--websocket" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>RTP와 RTCP는 실시간 미디어 전송에 중점을 두고 있으며, RTSP는 스트리밍 미디어의 원격 제어에 사용된다.&lt;br>
SIP와 H.323은 VoIP와 화상 회의 등의 멀티미디어 통신 세션 설정에 사용되며, WebRTC는 웹 브라우저 기반의 실시간 통신을 WebSocket은 웹에서의 실시간 양방향 통신을 가능하게 한다.&lt;br>
각 프로토콜은 OSI 모델과 TCP/IP 모델에서 주로 응용 계층에 위치하지만, 실제 구현에서는 하위 계층의 프로토콜들과 함께 사용된다.&lt;br>
예를 들어, RTP는 주로 UDP를 기반으로 사용되며, SIP는 TCP나 UDP를 사용할 수 있다.&lt;br>
이러한 프로토콜들은 실시간 통신, 스트리밍 미디어, 인터넷 전화, 화상 회의 등 다양한 멀티미디어 애플리케이션에서 중요한 역할을 한다.&lt;br>
각 프로토콜의 특성과 장단점을 이해하면 적절한 상황에 맞는 프로토콜을 선택하여 효율적인 네트워크 통신을 구현할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RTP (Real-time Transport Protocol)&lt;/th>
&lt;th>RTCP (RTP Control Protocol)&lt;/th>
&lt;th>RTSP (Real Time Streaming Protocol)&lt;/th>
&lt;th>SIP (Session Initiation Protocol)&lt;/th>
&lt;th>H.323 (ITU-T H)&lt;/th>
&lt;th>WebRTC (Web Real-Time Communication)&lt;/th>
&lt;th>WebSocket&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>세션 계층 (5계층) / 표현 계층 (6계층)&lt;/td>
&lt;td>세션 계층 (5계층) / 표현 계층 (6계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>실시간 오디오/비디오 데이터 전송&lt;/td>
&lt;td>RTP 세션 모니터링 및 제어&lt;/td>
&lt;td>스트리밍 미디어 제어&lt;/td>
&lt;td>멀티미디어 세션 관리&lt;/td>
&lt;td>종합적인 멀티미디어 통신 제어&lt;/td>
&lt;td>브라우저 기반 실시간 통신&lt;/td>
&lt;td>웹 브라우저와 서버 간의 양방향 실시간 통신 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- 순차 번호 부여&lt;br>- 타임스탬프 관리&lt;br>- 페이로드 타입 식별&lt;br>- 미디어 동기화&lt;/td>
&lt;td>- QoS 모니터링&lt;br>- 세션 통계 수집&lt;br>- 참가자 식별&lt;br>- 세션 제어&lt;/td>
&lt;td>- 미디어 전송 제어&lt;br>- 재생/일시정지/정지&lt;br>- 세션 설정/해제&lt;br>- 미디어 속성 협상&lt;/td>
&lt;td>- 세션 설정/수정/종료&lt;br>- 사용자 위치 관리&lt;br>- 미디어 협상&lt;br>- 참가자 관리&lt;/td>
&lt;td>- 호 설정/해제&lt;br>- 대역폭 관리&lt;br>- 멀티포인트 제어&lt;br>- 보안 관리&lt;/td>
&lt;td>- P2P 연결&lt;br>- 미디어 스트리밍&lt;br>- 데이터 채널&lt;br>NAT 통과&lt;/td>
&lt;td>- 전이중 통신 지원&lt;br>- 실시간 양방향 데이터 교환&lt;br>- 단일 TCP 연결 유지&lt;br>- 연결 상태 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- UDP 기반 전송&lt;br>- 실시간 전송 최적화&lt;br>- 낮은 지연&lt;br>- 손실 허용&lt;/td>
&lt;td>- 주기적 보고&lt;br>- 제어 정보 전송&lt;br>- 대역폭 제한&lt;br>RTP 보완&lt;/td>
&lt;td>- TCP 기반&lt;br>- 상태 기반 프로토콜&lt;br>- 클라이언트-서버 모델&lt;br>HTTP 유사 구문&lt;/td>
&lt;td>- 텍스트 기반&lt;br>- 확장 가능&lt;br>- 독립적 동작&lt;br>- 모듈화 설계&lt;/td>
&lt;td>- 이진 프로토콜&lt;br>- 복잡한 구조&lt;br>- 종합적 기능&lt;br>- 엄격한 표준&lt;/td>
&lt;td>- 브라우저 내장&lt;br>- 표준 기반&lt;br>- 플러그인 불필요&lt;br>- 보안 중심&lt;/td>
&lt;td>- HTTP 기반 호환성&lt;br>- 지속적 연결 유지&lt;br>- 낮은 지연시간&lt;br>- 헤더 오버헤드 최소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 패킷 단위 전송&lt;br>- 헤더 정보 처리&lt;br>- 스트리밍 최적화&lt;br>- 버퍼 관리&lt;/td>
&lt;td>- 주기적 리포트 전송&lt;br>- 피드백 제공&lt;br>- 통계 수집&lt;br>- 성능 모니터링&lt;/td>
&lt;td>- 요청/응답 방식&lt;br>- 세션 추적&lt;br>- 상태 관리&lt;br>- 명령어 처리&lt;/td>
&lt;td>- 요청/응답 방식&lt;br>- 프록시 서버 활용&lt;br>- 등록 관리&lt;br>- 다이얼로그 관리&lt;/td>
&lt;td>- 게이트키퍼 중심&lt;br>- 엔드포인트 등록&lt;br>- 대역폭 제어&lt;br>- 서비스 품질 관리&lt;/td>
&lt;td>- ICE/STUN/TURN 활용&lt;br>- 미디어 협상&lt;br>- 시그널링 서버 활용&lt;br>- 보안 연결 수립&lt;/td>
&lt;td>- HTTP 핸드셰이크로 시작&lt;br>- 웹소켓 프로토콜로 업그레이드&lt;br>- 양방향 채널 수립&lt;br>- 프레임 기반 메시지 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 실시간 전송 최적화&lt;br>- 유연한 구조&lt;br>- 다양한 코덱 지원&lt;br>- 효율적 전송&lt;/td>
&lt;td>- 세션 품질 관리&lt;br>- 문제 진단 용이&lt;br>- 확장 가능&lt;br>- 효과적 모니터링&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 방화벽 통과 용이&lt;br>- 표준화된 제어&lt;br>- 확장성&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 높은 확장성&lt;br>- 쉬운 구현&lt;br>- 유연성&lt;/td>
&lt;td>- 완벽한 기능 세트&lt;br>- 높은 안정성&lt;br>QoS 보장&lt;br>- 표준화&lt;/td>
&lt;td>- 쉬운 통합&lt;br>- 강력한 보안&lt;br>- 개방형 표준&lt;br>- 크로스 플랫폼&lt;/td>
&lt;td>- 실시간성 보장&lt;br>- 서버 푸시 가능&lt;br>- 효율적인 리소스 사용&lt;br>HTTP 호환성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- QoS 보장 없음&lt;br>- 보안 기능 부족&lt;br>- 대역폭 오버헤드&lt;br>- 복잡한 구현&lt;/td>
&lt;td>- 추가 대역폭 필요&lt;br>- 제한된 제어&lt;br>- 지연 발생&lt;br>- 구현 복잡성&lt;/td>
&lt;td>- 상태 관리 부담&lt;br>TCP 지연&lt;br>- 제한된 기능&lt;br>- 보안 취약성&lt;/td>
&lt;td>- 초기 지연&lt;br>NAT 문제&lt;br>- 복잡한 보안&lt;br>- 오버헤드&lt;/td>
&lt;td>- 높은 복잡도&lt;br>- 무거운 구현&lt;br>- 높은 비용&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 브라우저 제한&lt;br>- 리소스 소모&lt;br>- 구형 브라우저 미지원&lt;br>- 복잡한 디버깅&lt;/td>
&lt;td>- 이전 브라우저 지원 제한&lt;br>- 연결 유지 부담&lt;br>- 프록시/방화벽 제한&lt;br>- 재연결 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 스트리밍 서비스&lt;br>VoIP&lt;br>- 화상 회의&lt;br>- 실시간 방송&lt;/td>
&lt;td>- 스트리밍 품질 관리&lt;br>- 네트워크 모니터링&lt;br>- 성능 최적화&lt;br>- 문제 해결&lt;/td>
&lt;td>- 동영상 스트리밍&lt;br>- 미디어 서버 제어&lt;br>- 온디맨드 서비스&lt;br>- 라이브 방송&lt;/td>
&lt;td>- VoIP 서비스&lt;br>- 화상 통화&lt;br>- 인스턴트 메시징&lt;br>- 화상 회의&lt;/td>
&lt;td>- 기업용 화상 회의&lt;br>- 텔레프레즌스&lt;br>- 통합 커뮤니케이션&lt;br>- 원격 교육&lt;/td>
&lt;td>- 웹 기반 화상 채팅&lt;br>- 파일 공유&lt;br>- 실시간 게임&lt;br>- 원격 지원&lt;/td>
&lt;td>- 실시간 채팅&lt;br>- 실시간 데이터 피드&lt;br>- 온라인 게임&lt;br>- 실시간 모니터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>RADIUS / TACACS+&lt;span class="hx-absolute -hx-mt-20" id="radius--tacacs">&lt;/span>
&lt;a href="#radius--tacacs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>두 프로토콜 모두 네트워크 접근 제어와 보안 강화에 중요한 역할을 한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RADIUS (Remote Authentication Dial-In User Service)&lt;/th>
&lt;th>TACACS+ (Terminal Access Controller Access Control System Plus)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>UDP 1812(인증), 1813(과금)&lt;/td>
&lt;td>TCP 49&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>UDP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>네트워크 접근 인증, 권한 부여, 과금 관리&lt;/td>
&lt;td>네트워크 장비 접근 제어, 인증, 권한 부여, 감사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 사용자 인증&lt;br>- 접근 권한 부여&lt;br>- 서비스 과금&lt;br>- 네트워크 정책 적용&lt;/td>
&lt;td>- 상세한 명령어 제어&lt;br>- 세분화된 권한 관리&lt;br>- 감사 로깅&lt;br>- 중앙집중식 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. 클라이언트 접근 요청&lt;br>2. RADIUS 서버 인증&lt;br>3. 권한 부여&lt;br>4. 과금 정보 수집&lt;/td>
&lt;td>1. 사용자 로그인&lt;br>2. 명령어 권한 검증&lt;br>3. 상세 로깅&lt;br>4. 세션 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 패킷 헤더만 암호화&lt;br>- 통합된 인증/권한부여&lt;br>- 확장 가능한 속성&lt;br>- 간단한 구현&lt;/td>
&lt;td>- 전체 패킷 암호화&lt;br>- 분리된 AAA 기능&lt;br>- 상세한 명령어 제어&lt;br>- 강력한 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 패스워드만 암호화&lt;br>- 기본적인 보안&lt;br>- 제한된 암호화&lt;br>UDP 기반 취약성&lt;/td>
&lt;td>- 전체 세션 암호화&lt;br>- 강력한 보안&lt;br>TCP 기반 신뢰성&lt;br>- 상세한 감사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 사용됨&lt;br>- 구현 용이&lt;br>- 다양한 벤더 지원&lt;br>- 과금 기능 제공&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 상세한 제어&lt;br>- 명확한 감사&lt;br>- 확장성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 보안&lt;br>UDP 신뢰성 문제&lt;br>- 기본적 명령어 제어&lt;br>- 제한된 감사&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 복잡한 구성&lt;br>- 단일 벤더 의존&lt;br>- 높은 비용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AAA 기능 구현&lt;/td>
&lt;td>- 통합된 인증/권한부여&lt;br>- 단순한 과금&lt;br>- 기본적인 감사&lt;br>- 제한된 로깅&lt;/td>
&lt;td>- 분리된 AAA 처리&lt;br>- 상세한 권한 제어&lt;br>comprehensive 감사&lt;br>- 풍부한 로깅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>- 속성-값 쌍 확장&lt;br>- 벤더 특화 속성&lt;br>- 유연한 정책 설정&lt;br>- 다중 서버 지원&lt;/td>
&lt;td>- 상세한 명령어 제어&lt;br>- 계층적 권한 관리&lt;br>- 다양한 인증 방식&lt;br>- 그룹 기반 정책&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- ISP 서비스&lt;br>- 무선 네트워크&lt;br>VPN 접근&lt;br>- 원격 접속&lt;/td>
&lt;td>- 네트워크 장비 관리&lt;br>- 기업 인프라&lt;br>- 보안 중요 환경&lt;br>- 상세 접근 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 차이점과 용도는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>RADIUS는:&lt;/p>
&lt;ul>
&lt;li>대중적이고 광범위한 사용&lt;/li>
&lt;li>ISP 환경에 적합&lt;/li>
&lt;li>과금 기능 중심&lt;/li>
&lt;li>다양한 벤더 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TACACS+는:&lt;/p>
&lt;ul>
&lt;li>상세한 명령어 제어&lt;/li>
&lt;li>기업 네트워크 관리에 적합&lt;/li>
&lt;li>강력한 보안 기능&lt;/li>
&lt;li>Cisco 환경에 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>선택 시 고려사항:&lt;/p>
&lt;ul>
&lt;li>보안 요구사항&lt;/li>
&lt;li>네트워크 규모&lt;/li>
&lt;li>관리 복잡도&lt;/li>
&lt;li>비용 효율성&lt;/li>
&lt;/ul>
&lt;p>이러한 특성을 고려하여 환경에 맞는 프로토콜을 선택하는 것이 중요하다.&lt;/p>
&lt;h4>PPPoE / L2TP&lt;span class="hx-absolute -hx-mt-20" id="pppoe--l2tp">&lt;/span>
&lt;a href="#pppoe--l2tp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>PPPoE는 이더넷 상에서 PPP 연결을 제공하여 효율적인 사용자 접근 제어와 과금을 가능하게 한다.&lt;br>
L2TP는 VPN 구현에 사용되며, 다양한 L2 데이터 유형을 IP 네트워크를 통해 전송할 수 있게 해준다.&lt;br>
두 프로토콜 모두 네트워크 액세스에 중요한 역할을 하며, 각각의 특성에 따라 다양한 네트워크 환경에서 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>PPPoE (Point-to-Point Protocol over Ethernet)&lt;/th>
&lt;th>L2TP (Layer 2 Tunneling Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>데이터링크 계층 (2계층)&lt;/td>
&lt;td>데이터링크 계층 (2계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>네트워크 접근 계층&lt;/td>
&lt;td>네트워크 접근 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>이더넷 상에서 PPP 프레임 전송 및 세션 관리&lt;/td>
&lt;td>가상 사설망(VPN) 구현을 위한 터널링 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- PPP 세션 설정/해제&lt;br>- 인증 및 암호화&lt;br>- 대역폭 관리&lt;br>- 서비스 과금 지원&lt;/td>
&lt;td>- 터널 생성/관리&lt;br>- 데이터 캡슐화&lt;br>- 세션 관리&lt;br>- 멀티프로토콜 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 단계&lt;/td>
&lt;td>1. 발견 단계&lt;br>2. 세션 설정&lt;br>3. PPP 세션 시작&lt;br>4. 데이터 전송&lt;br>5. 세션 종료&lt;/td>
&lt;td>1. 터널 설정&lt;br>2. 세션 설정&lt;br>3. 데이터 전송&lt;br>4. 터널 유지관리&lt;br>5. 세션 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 연결 지향적&lt;br>- 세션 기반&lt;br>- 이더넷 프레임 사용&lt;br>- 점대점 연결&lt;/td>
&lt;td>- 터널링 프로토콜&lt;br>- 제어/데이터 분리&lt;br>UDP 기반&lt;br>- 다중 세션 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- PAP/CHAP 인증&lt;br>- 기본적인 암호화&lt;br>- 세션 격리&lt;br>- 접근 제어&lt;/td>
&lt;td>- 자체 보안 없음&lt;br>IPSec 결합 필요&lt;br>- 터널 인증&lt;br>- 데이터 무결성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 구조&lt;/td>
&lt;td>- PPPoE 헤더&lt;br>PPP 헤더&lt;br>- 이더넷 프레임&lt;br>- 페이로드&lt;/td>
&lt;td>- L2TP 헤더&lt;br>UDP 헤더&lt;br>IP 헤더&lt;br>- 페이로드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 널리 사용됨&lt;br>- 안정적인 연결&lt;br>- 과금 용이&lt;/td>
&lt;td>- 유연한 터널링&lt;br>- 프로토콜 독립적&lt;br>- 확장성&lt;br>NAT 통과 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 추가 오버헤드&lt;br>MTU 크기 제한&lt;br>- 성능 저하&lt;br>- 확장성 제한&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 보안 부족&lt;br>- 오버헤드&lt;br>- 추가 보안 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 광대역 인터넷 접속&lt;br>ADSL 서비스&lt;br>- 가정용 인터넷&lt;br>- 소규모 사무실&lt;/td>
&lt;td>- 기업 VPN&lt;br>- 원격 접속&lt;br>ISP 서비스&lt;br>- 사이트 간 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>- 기본적인 QoS&lt;br>- 대역폭 제어&lt;br>- 우선순위 지원&lt;br>- 세션별 제어&lt;/td>
&lt;td>- QoS 태그 전달&lt;br>- 터널 수준 QoS&lt;br>- 세션별 QoS&lt;br>DSCP 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>- 비교적 단순&lt;br>- 표준화된 구현&lt;br>- 쉬운 트러블슈팅&lt;br>- 적은 설정 필요&lt;/td>
&lt;td>- 상대적으로 복잡&lt;br>- 다양한 설정 필요&lt;br>- 전문성 요구&lt;br>- 세밀한 설정 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 활용 시나리오는 다음과 같다:&lt;/p>
&lt;p>PPPoE는:&lt;/p>
&lt;ul>
&lt;li>가정용 광대역 인터넷 연결&lt;/li>
&lt;li>ADSL/VDSL 서비스&lt;/li>
&lt;li>소규모 사무실 네트워크&lt;/li>
&lt;li>ISP 가입자 관리&lt;/li>
&lt;/ul>
&lt;p>L2TP는:&lt;/p>
&lt;ul>
&lt;li>기업용 VPN 구축&lt;/li>
&lt;li>원격 사무실 연결&lt;/li>
&lt;li>보안 터널링 요구 환경&lt;/li>
&lt;li>복잡한 네트워크 구성&lt;/li>
&lt;/ul>
&lt;p>이러한 특성을 고려하여 네트워크 환경과 요구사항에 맞는 프로토콜을 선택하는 것이 중요하다.&lt;br>
PPPoE는 단순하고 안정적인 연결이 필요한 경우에, L2TP는 더 복잡하고 유연한 터널링이 필요한 경우에 적합하다.&lt;/p>
&lt;h4>LDAP / SAML / Kerberos / OpenID Connect / SCIM&lt;span class="hx-absolute -hx-mt-20" id="ldap--saml--kerberos--openid-connect--scim">&lt;/span>
&lt;a href="#ldap--saml--kerberos--openid-connect--scim" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 프로토콜들은 모두 사용자 인증, 권한 부여, 또는 ID 관리와 관련된 기능을 제공하며, 주로 응용 계층에서 동작한다.&lt;br>
각 프로토콜은 특정 사용 사례와 환경에 맞게 설계되어 있어, 조직의 요구사항에 따라 적절한 프로토콜을 선택하여 사용할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>LDAP (Lightweight Directory Access Protocol)&lt;/th>
&lt;th>SAML (Security Assertion Markup Language)&lt;/th>
&lt;th>Kerberos&lt;/th>
&lt;th>OpenID Connect&lt;/th>
&lt;th>SCIM (System for Cross-domain Identity Management)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>TCP 389 (LDAPS: 636)&lt;/td>
&lt;td>HTTP 기반&lt;/td>
&lt;td>TCP 88&lt;/td>
&lt;td>HTTPS 기반&lt;/td>
&lt;td>HTTPS 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>디렉터리 서비스 접근 및 관리&lt;/td>
&lt;td>기업 간 SSO 인증&lt;/td>
&lt;td>네트워크 인증&lt;/td>
&lt;td>OAuth 2.0 기반 인증 및 인가&lt;/td>
&lt;td>사용자 신원 정보 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- 디렉터리 검색&lt;br>- 사용자/그룹 관리&lt;br>- 속성 조회/수정&lt;br>- 조직 구조 관리&lt;/td>
&lt;td>- SSO 제공&lt;br>- 인증 정보 교환&lt;br>- 권한 위임&lt;br>- 페더레이션&lt;/td>
&lt;td>- 티켓 기반 인증&lt;br>- 상호 인증&lt;br>- 세션 관리&lt;br>- 키 분배&lt;/td>
&lt;td>- 인증&lt;br>- 사용자 정보 제공&lt;br>- 토큰 관리&lt;br>OAuth 2.0 확장&lt;/td>
&lt;td>- 신원 정보 동기화&lt;br>- 프로비저닝&lt;br>- 사용자 관리&lt;br>API 표준화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 클라이언트-서버 모델&lt;br>- 바인딩 및 검색&lt;br>- 트리 구조 탐색&lt;br>- 필터링&lt;/td>
&lt;td>- XML 기반 통신&lt;br>IdP-SP 모델&lt;br>- 어설션 교환&lt;br>- 메타데이터 공유&lt;/td>
&lt;td>- 티켓 발급/검증&lt;br>TGT/ST 사용&lt;br>- 대칭키 암호화&lt;br>- 시간 동기화&lt;/td>
&lt;td>- REST/JSON 기반&lt;br>OAuth 2.0 흐름&lt;br>JWT 사용&lt;br>- 스코프 기반&lt;/td>
&lt;td>- REST API 기반&lt;br>JSON 스키마&lt;br>CRUD 작업&lt;br>- 벌크 작업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 확장 가능한 스키마&lt;br>- 읽기 최적화&lt;br>- 표준화된 인터페이스&lt;/td>
&lt;td>- 플랫폼 독립적&lt;br>XML 기반&lt;br>- 높은 보안성&lt;br>- 기업용 표준&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 단일 로그인&lt;br>- 시간 기반&lt;br>- 상호 인증&lt;/td>
&lt;td>- 경량화&lt;br>- 모바일 친화적&lt;br>OAuth 호환&lt;br>- 사용 편의성&lt;/td>
&lt;td>- 표준화된 API&lt;br>- 확장 가능&lt;br>- 플랫폼 독립적&lt;br>RESTful&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 사용됨&lt;br>- 효율적인 검색&lt;br>- 표준화&lt;br>- 확장성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 기업 환경 적합&lt;br>- 풍부한 생태계&lt;br>- 상호운용성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 중앙화된 인증&lt;br>- 검증된 방식&lt;br>- 효율적 관리&lt;/td>
&lt;td>- 구현 용이&lt;br>- 모던 웹 적합&lt;br>- 유연성&lt;br>JSON 기반&lt;/td>
&lt;td>- 표준화된 관리&lt;br>- 자동화 용이&lt;br>- 확장성&lt;br>- 통합 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 보안 취약성&lt;br>- 쓰기 성능&lt;br>- 변경 관리 어려움&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 높은 오버헤드&lt;br>XML 복잡성&lt;br>- 설정 어려움&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 시간 동기화 필요&lt;br>- 확장 어려움&lt;br>- 초기 설정 복잡&lt;/td>
&lt;td>- 보안 고려 필요&lt;br>- 표준 준수 중요&lt;br>- 토큰 관리&lt;br>- 범위 제한&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 표준 해석 차이&lt;br>- 보안 고려 필요&lt;br>- 초기 도입 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 기업 디렉터리&lt;br>- 사용자 관리&lt;br>- 인증/인가&lt;br>- 조직 정보 관리&lt;/td>
&lt;td>- 기업 SSO&lt;br>- 클라우드 서비스&lt;br>B2B 통합&lt;br>- 페더레이션&lt;/td>
&lt;td>- 윈도우 도메인&lt;br>- 기업 네트워크&lt;br>- 내부 시스템&lt;br>- 보안 환경&lt;/td>
&lt;td>- 소비자 서비스&lt;br>- 모바일 앱&lt;br>- 웹 서비스&lt;br>API 보안&lt;/td>
&lt;td>- ID 관리 자동화&lt;br>- 클라우드 통합&lt;br>- 사용자 동기화&lt;br>HR 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 프로토콜들은 각각의 용도에 따라 다음과 같이 활용된다:&lt;/p>
&lt;ol>
&lt;li>LDAP: 기업 내부의 디렉터리 서비스와 사용자 관리에 주로 사용된다.&lt;/li>
&lt;li>SAML: 기업 환경에서의 SSO와 페더레이션에 적합하다.&lt;/li>
&lt;li>Kerberos: 네트워크 수준의 강력한 인증이 필요한 환경에서 사용된다.&lt;/li>
&lt;li>OpenID Connect: 현대적인 웹/모바일 서비스의 인증에 적합하다.&lt;/li>
&lt;li>SCIM: 여러 시스템 간의 신원 정보 동기화에 사용된다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>