<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>System-Components on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/system-components/</link>
    <description>Recent content in System-Components on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Sep 2025 04:33:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/system-components/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Server</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/</link>
      <pubDate>Mon, 21 Oct 2024 05:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/</guid>
      <description>웹 서버 (Web Server) 는 HTTP 프로토콜을 통해 클라이언트의 요청을 받아 정적 또는 동적 웹 콘텐츠를 제공하는 서버 소프트웨어이다. 요청 - 응답 아키텍처를 기반으로 HTML, CSS, JavaScript 등의 웹 리소스를 전달하며, 현대 웹 애플리케이션의 핵심 인프라로 활용된다.</description>
    </item>
    <item>
      <title>Web Application Server</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/application--execution-core/web-application-servers/</link>
      <pubDate>Mon, 21 Oct 2024 15:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/application--execution-core/web-application-servers/</guid>
      <description>웹 애플리케이션 서버(Web Application Server, WAS)는 웹 애플리케이션의 실행 환경을 제공하고, 동적인 콘텐츠를 처리하며, 데이터베이스와의 연동을 지원하는 소프트웨어 프레임워크이다.</description>
    </item>
    <item>
      <title>Search Engines</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/application--execution-core/search-engines/</link>
      <pubDate>Mon, 21 Oct 2024 05:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/application--execution-core/search-engines/</guid>
      <description>방대한 양의 정보에서 필요한 데이터를 효율적으로 찾아내는 특화된 시스템이다. 단순한 키워드 매칭을 넘어서, 오늘날의 검색 엔진은 복잡한 데이터 분석과 실시간 처리를 위한 고도화된 기술을 구현하고 있다.</description>
    </item>
    <item>
      <title>Containerization</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/containerization/</link>
      <pubDate>Mon, 08 Sep 2025 04:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/containerization/</guid>
      <description>컨테이너화는 애플리케이션과 의존성을 경량 이미지로 패키징해 운영체제 커널을 공유하며 격리 실행하는 기술이다. 네임스페이스·cgroups로 격리·자원제어를 수행하고, OCI 규격의 이미지·런타임·레지스트리와 Kubernetes 등 오케스트레이션, CI/CD가 결합되어 이식성·일관성·자동화된 확장성을 제공한다. 커널 공유에 따른 보안·격리 한계는 설계 시 고려해야 한다.</description>
    </item>
    <item>
      <title>Advanced Features</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/advanced-features/</link>
      <pubDate>Sun, 24 Aug 2025 04:02:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/advanced-features/</guid>
      <description></description>
    </item>
    <item>
      <title>Ingress Controller</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/ingress-controller/</link>
      <pubDate>Fri, 25 Jul 2025 05:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/ingress-controller/</guid>
      <description>인그레스 컨트롤러 (Ingress Controller) 는 쿠버네티스를 포함한 클라우드 네이티브 환경에서 외부 트래픽을 클러스터 내부 서비스로 안전하고 효율적으로 라우팅하는 핵심 컴포넌트다. 다양한 라우팅 규칙, 인증, SSL 종료 등 고급 트래픽 관리 기능도 함께 제공한다.</description>
    </item>
    <item>
      <title>Istio</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/service-mesh/implementations/istio/</link>
      <pubDate>Fri, 25 Jul 2025 05:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/service-mesh/implementations/istio/</guid>
      <description>Istio 는 컨테이너 오케스트레이션 환경에서 마이크로서비스 간 트래픽 관리, 보안, 정책, 관측을 위해 제공되는 대표적인 서비스 메시 솔루션으로, 애플리케이션 코드 변경 없이 다양한 네트워크 기능을 지원하여 시스템의 일관성과 안정성을 높인다.</description>
    </item>
    <item>
      <title>Forward Proxy</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/proxy/forward-proxy/</link>
      <pubDate>Wed, 23 Jul 2025 09:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/proxy/forward-proxy/</guid>
      <description>순방향 프록시 (Forward Proxy) 는 클라이언트가 외부 인터넷에 직접 접근하지 않고 프록시 서버를 통해 요청을 중계하도록 하는 시스템 컴포넌트다. 이를 통해 보안 강화, 정책적 접근 통제, 캐싱, 익명성 등 다양한 네트워크 관리 및 보호 기능을 실현한다.</description>
    </item>
    <item>
      <title>Container Orchestration</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/</link>
      <pubDate>Thu, 08 May 2025 04:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/</guid>
      <description>컨테이너 오케스트레이션은 컨테이너화된 워크로드의 배포, 스케줄링, 자동 스케일링, 네트워킹, 스토리지 연동 및 장애 복구를 자동화하는 플랫폼 계층이다. Kubernetes가 표준으로 자리잡았고 CRI/CNI/CSI·Gateway API 등으로 생태계와 상호운용성이 발전했다.</description>
    </item>
    <item>
      <title>Reverse Proxy</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/proxy/reverse-proxy/</link>
      <pubDate>Fri, 18 Apr 2025 15:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/proxy/reverse-proxy/</guid>
      <description>Reverse Proxy 는 클라이언트 요청을 받아 내부 서버에 전달하고, 그 응답을 다시 클라이언트에 반환하는 중간 서버로, 로드 밸런싱, 보안, 캐싱 등 다양한 기능을 수행한다.</description>
    </item>
    <item>
      <title>Implementations of API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/</link>
      <pubDate>Sun, 23 Mar 2025 04:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/</guid>
      <description>API 게이트웨이는 현대적인 애플리케이션 아키텍처의 핵심 구성 요소로, 클라이언트 요청을 처리하고 다양한 마이크로서비스로 라우팅하는 중앙 진입점 역할을 한다.</description>
    </item>
    <item>
      <title>Apache APISIX</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/apache-apisix/</link>
      <pubDate>Sun, 23 Mar 2025 01:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/apache-apisix/</guid>
      <description>Apache APISIX는 고성능 클라우드 네이티브 API 게이트웨이로, 2019년 CNCF(Cloud Native Computing Foundation) 샌드박스 프로젝트로 시작되어 2022년 10월에는 CNCF 인큐베이팅 프로젝트로 승격되었다.</description>
    </item>
    <item>
      <title>KrakenD</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/krakend/</link>
      <pubDate>Sun, 23 Mar 2025 01:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/krakend/</guid>
      <description>KrakenD는 고성능 API 게이트웨이로, 2016년에 오픈 소스 프로젝트로 시작되었으며 현재는 KrakenD 회사에서 개발 및 유지보수하고 있다. Go 언어로 작성되었으며, 마이크로서비스 아키텍처에서 백엔드 API들을 통합하고 최적화하기 위해 설계되었다.</description>
    </item>
    <item>
      <title>Tyk</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/tyk-gateway/</link>
      <pubDate>Sun, 23 Mar 2025 01:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/tyk-gateway/</guid>
      <description>Tyk는 강력한 오픈 소스 API 관리 플랫폼으로, 2014년 Martin Buhr에 의해 설립된 Tyk Technologies에서 개발했다. Go 언어로 작성되었으며, API 게이트웨이, 개발자 포털, API 분석 대시보드를 포함한 완전한 API 관리 솔루션을 제공한다.</description>
    </item>
    <item>
      <title>Kong</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/kong-gateway/</link>
      <pubDate>Sun, 23 Mar 2025 01:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/kong-gateway/</guid>
      <description>Kong은 마이크로서비스 아키텍처를 위한 클라우드 네이티브, 오픈 소스 API 게이트웨이 및 서비스 메시이다.</description>
    </item>
    <item>
      <title>Traefik</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/traefik/</link>
      <pubDate>Sun, 23 Mar 2025 01:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/api-gateway/implementations/traefik/</guid>
      <description>Traefik(트래픽이라고 발음)은 2015년 Containous(현재 Traefik Labs)에서 개발한 오픈 소스 API 게이트웨이이자 엣지 라우터이다.</description>
    </item>
    <item>
      <title>Load Balancer</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/load-balancer/</link>
      <pubDate>Mon, 17 Feb 2025 04:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/load-balancer/</guid>
      <description>로드 밸런서 (Load Balancer) 는 복수의 서버에 트래픽을 효율적으로 분산하여 시스템 부하를 균등하게 분배하고, 장애 발생 시에도 서비스 연속성을 보장하는 장치 또는 기술이다. 다양한 알고리즘과 유형을 활용하여 확장성과 고가용성, 탄력성을 제공하는 시스템 핵심 구성 요소이다.</description>
    </item>
    <item>
      <title>Content Delivery Networks</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/network-infrastructure/internet-infrastructure/content-delivery-networks/</link>
      <pubDate>Mon, 17 Feb 2025 04:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/network-infrastructure/internet-infrastructure/content-delivery-networks/</guid>
      <description>콘텐츠 전송 네트워크 (CDN) 는 전 세계에 분산된 서버 네트워크를 통해 웹 콘텐츠를 사용자와 지리적으로 가까운 위치에서 제공함으로써 로딩 시간을 단축하고 대역폭 비용을 절감하는 기술이다. 정적/동적 콘텐츠 캐싱, 로드 밸런싱, 보안 기능을 제공하며, 엣지 컴퓨팅과 결합하여 더욱 발전하고 있다.</description>
    </item>
    <item>
      <title>Service Mesh</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/cloud-native-architecture/container-based/service-mesh/</link>
      <pubDate>Wed, 13 Nov 2024 09:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/cloud-native-architecture/container-based/service-mesh/</guid>
      <description>서비스 메시는 **마이크로서비스 간 통신을 Sidecar 프록시 기반 Data Plane**으로 추상화하고, **Control Plane**에서 정책·보안·관찰 기능을 외부화하는 인프라 계층이다.  이를 통해 서비스 간 보안 (mTLS), 로드밸런싱, 리트라이, 트래픽 제어, 모니터링 등을 코드 수정 없이 적용할 수 있다.</description>
    </item>
    <item>
      <title>Helm</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/helm/</link>
      <pubDate>Mon, 11 Nov 2024 06:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/container-orchestration/kubernetes/helm/</guid>
      <description>쿠버네티스를 위한 패키지 관리자로, 복잡한 쿠버네티스 애플리케이션의 배포와 관리를 간소화하는 도구</description>
    </item>
    <item>
      <title>Apache HTTP Server</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/implementations/apache-http-server/</link>
      <pubDate>Mon, 21 Oct 2024 11:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/implementations/apache-http-server/</guid>
      <description>Apache HTTP Server는 가장 널리 사용되는 오픈 소스 웹 서버 소프트웨어이다.</description>
    </item>
    <item>
      <title>Caddy</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/implementations/caddy/</link>
      <pubDate>Mon, 21 Oct 2024 08:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/implementations/caddy/</guid>
      <description>Caddy는 Go 언어로 작성된 현대적이고 강력한 오픈 소스 웹 서버이다.</description>
    </item>
    <item>
      <title>Nginx</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/implementations/nginx/</link>
      <pubDate>Mon, 21 Oct 2024 08:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/web-server/implementations/nginx/</guid>
      <description>Nginx는 고성능의 오픈 소스 웹 서버 소프트웨어로, 웹 서버, 리버스 프록시, 로드 밸런서 등 다양한 기능을 제공한다.</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/service-integration/api-gateway/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/service-integration/api-gateway/</guid>
      <description>API Gateway 는 마이크로서비스 아키텍처에서 핵심 라우터이자 진입점 역할을 수행한다. 요청의 인증, 라우팅, 로드 밸런싱, 변환, 모니터링 등을 통합적으로 처리하여 클라이언트와 백엔드 서비스 간의 결합도를 낮추고 보안/운영 효율성을 높인다.</description>
    </item>
    <item>
      <title>프록시(Proxy)</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/proxy/</link>
      <pubDate>Sat, 19 Oct 2024 08:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/access--network-entry/proxy/</guid>
      <description>프록시 (Proxy) 는 클라이언트와 서버 사이에서 중개자 역할을 수행하는 서버로, 요청을 대신 처리하고 응답을 전달한다.  포워드 프록시 (Forward Proxy) 는 클라이언트를 보호하고, 리버스 프록시 (Reverse Proxy) 는 서버를 보호하며, 로드 밸런싱, 캐싱, 보안, SSL 종료 등의 기능을 제공한다.</description>
    </item>
    <item>
      <title>DNS(Domain Name System)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/network-services/dns/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/network-services/dns/</guid>
      <description>Domain Name System(도메인 네임 시스템, DNS) 은 사용자가 기억하기 쉬운 도메인 명을 실제 IP 주소로 변환해주는 핵심 인터넷 인프라 서비스이다. DNS 를 통해 네트워크상의 다양한 자원에 쉽고 신뢰성 있게 접근할 수 있으며, 분산된 아키텍처와 계층적 구조로 빠르고 안정적인 네임 해석을 제공한다.</description>
    </item>
    <item>
      <title>캐시 (Cache)</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/data--state-management/cache/</link>
      <pubDate>Mon, 30 Sep 2024 13:25:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/data--state-management/cache/</guid>
      <description>캐시 (Cache) 는 자주 접근하는 데이터를 빠른 저장소에 임시 보관하여 시스템 성능을 향상시키는 하드웨어 또는 소프트웨어 구성 요소이다. CPU 캐시부터 웹 캐시까지 다양한 계층에서 활용되며, 지역성 원리를 기반으로 데이터 접근 속도를 대폭 개선한다.</description>
    </item>
  </channel>
</rss>
