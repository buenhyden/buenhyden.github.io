<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Scalability on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/scalability/</link>
    <description>Recent content in Scalability on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Apr 2025 08:37:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/scalability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>분산 시스템(Distributed Systems)</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/</link>
      <pubDate>Mon, 11 Nov 2024 02:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/</guid>
      <description>분산 시스템은 여러 독립적인 컴퓨터 (노드) 가 네트워크를 통해 상호작용하며, 하나의 통합된 시스템처럼 동작하도록 설계된 구조이다. 확장성, 장애 허용성, 자원 효율성, 고가용성 등 현대 IT 인프라의 핵심 요구사항을 충족한다.</description>
    </item>
    <item>
      <title>N-Tier Architecture</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/distributed-architecture/traditional-patterns/n-tier/</link>
      <pubDate>Sun, 27 Apr 2025 08:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/distributed-architecture/traditional-patterns/n-tier/</guid>
      <description>N‑Tier Architecture 는 애플리케이션을 프레젠테이션, 비즈니스 로직, 데이터 저장 계층 등 여러 계층으로 논리적으로 구분하고, 이를 물리적으로도 분리해 확장성·보안·유지보수성을 확보한 클라이언트‑서버 아키텍처이다.</description>
    </item>
    <item>
      <title>Load Balancer</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/load-balancer/</link>
      <pubDate>Mon, 17 Feb 2025 04:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/traffic-control-and-routing/load-balancer/</guid>
      <description>로드 밸런서 (Load Balancer) 는 복수의 서버에 트래픽을 효율적으로 분산하여 시스템 부하를 균등하게 분배하고, 장애 발생 시에도 서비스 연속성을 보장하는 장치 또는 기술이다. 다양한 알고리즘과 유형을 활용하여 확장성과 고가용성, 탄력성을 제공하는 시스템 핵심 구성 요소이다.</description>
    </item>
  </channel>
</rss>
