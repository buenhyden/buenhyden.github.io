<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Branch-Condition-Combination-Testing</title><link>https://buenhyden.github.io/tags/branch-condition-combination-testing/</link><description>Recent content in Branch-Condition-Combination-Testing on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 10 Dec 2024 10:08:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/branch-condition-combination-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>다중 조건 테스팅 (Branch Condition Combination Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/branch-condition-combination-testing/</link><pubDate>Tue, 10 Dec 2024 10:08:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/branch-condition-combination-testing/</guid><description>
&lt;h2>다중 조건 테스팅 (Branch Condition Combination Testing)&lt;span class="hx-absolute -hx-mt-20" id="다중-조건-테스팅-branch-condition-combination-testing">&lt;/span>
&lt;a href="#%eb%8b%a4%ec%a4%91-%ec%a1%b0%ea%b1%b4-%ed%85%8c%ec%8a%a4%ed%8c%85-branch-condition-combination-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>다중 조건 테스팅은 각 결정문에서 가능한 모든 조건 조합을 테스트하는 기법이다.&lt;br>
이는 조건 커버리지의 확장된 형태로, 가능한 모든 부울 조건 조합을 테스트하는 것을 목표로 한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>완전한 조건 조합&lt;/strong>: 결정문 내의 모든 개별 조건식에 대해 가능한 모든 true/false 조합을 테스트한다.&lt;/li>
&lt;li>&lt;strong>높은 커버리지&lt;/strong>: 100% 다중 조건 커버리지를 달성하면 결정 커버리지와 조건 커버리지도 100% 달성된다.&lt;/li>
&lt;li>&lt;strong>복잡한 로직 테스트&lt;/strong>: 여러 조건이 복합적으로 사용되는 복잡한 의사결정 구조를 철저히 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>철저한 테스트&lt;/strong>: 모든 가능한 조건 조합을 테스트하므로 누락된 경우의 수 없이 철저한 테스트가 가능하다.&lt;/li>
&lt;li>&lt;strong>숨겨진 버그 발견&lt;/strong>: 특정 조건 조합에서만 발생하는 오류를 찾아낼 수 있다.&lt;/li>
&lt;li>&lt;strong>로직 오류 검출&lt;/strong>: 복잡한 조건문의 로직 오류를 효과적으로 발견할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스트 케이스 증가&lt;/strong>: 조건의 수가 증가할수록 테스트 케이스의 수가 기하급수적으로 늘어난다.&lt;/li>
&lt;li>&lt;strong>시간과 비용&lt;/strong>: 많은 테스트 케이스로 인해 테스트 수행 시간과 비용이 증가한다.&lt;/li>
&lt;li>&lt;strong>복잡성&lt;/strong>: 조건이 많은 경우 모든 조합을 고려하는 것이 매우 복잡해질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다중 조건 테스팅은 다음과 같은 상황에서 특히 유용하다:&lt;/p>
&lt;ol>
&lt;li>안전 중요 시스템: 모든 가능한 시나리오를 철저히 테스트해야 하는 경우&lt;/li>
&lt;li>금융 시스템: 복잡한 조건에 따라 중요한 결정이 이루어지는 경우&lt;/li>
&lt;li>복잡한 비즈니스 로직: 여러 조건이 복합적으로 작용하는 경우&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다음과 같은 코드가 있다고 가정해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">purchase_amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">is_student&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mf">0.2&lt;/span> &lt;span class="c1"># 20% discount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mf">0.1&lt;/span> &lt;span class="c1"># 10% discount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># No discount&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수에 대한 다중 조건 테스트 케이스는 다음과 같이 구성될 수 있다:&lt;/p>
&lt;ol>
&lt;li>age &amp;lt; 18, is_student = True, purchase_amount &amp;gt; 100&lt;/li>
&lt;li>age &amp;lt; 18, is_student = True, purchase_amount &amp;lt;= 100&lt;/li>
&lt;li>age &amp;lt; 18, is_student = False, purchase_amount &amp;gt; 100&lt;/li>
&lt;li>age &amp;gt;= 18, age &amp;lt; 60, purchase_amount &amp;gt; 200&lt;/li>
&lt;li>age &amp;gt;= 18, age &amp;lt; 60, purchase_amount &amp;lt;= 200&lt;/li>
&lt;li>age &amp;gt;= 60, purchase_amount &amp;gt; 200&lt;/li>
&lt;li>age &amp;gt;= 60, purchase_amount &amp;lt;= 200&lt;/li>
&lt;/ol>
&lt;p>이렇게 모든 가능한 조건 조합을 테스트함으로써, 함수의 모든 경로와 로직을 철저히 검증할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>