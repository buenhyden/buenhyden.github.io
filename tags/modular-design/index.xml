<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Modular-Design on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/modular-design/</link>
    <description>Recent content in Modular-Design on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Jul 2025 14:33:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/modular-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pipe-and-Filter</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-design-and-architecture/data-architecture/data-flow-architecture/flow-styles/pipe-and-filter/</link>
      <pubDate>Tue, 08 Jul 2025 14:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-design-and-architecture/data-architecture/data-flow-architecture/flow-styles/pipe-and-filter/</guid>
      <description>Pipe-and-Filter 는 데이터를 여러 독립적인 처리 단계 (필터) 로 분할하고, 각 필터를 파이프를 통해 연결하여 데이터가 연속적으로 흐르며 가공되는 구조이다. 높은 모듈성, 재사용성, 확장성을 갖추어 데이터 처리 파이프라인, 컴파일러, ETL 등 다양한 분야에서 활용된다.</description>
    </item>
    <item>
      <title>Component-Based Architecture</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-design-and-architecture/architecture/architecture-styles/component-based-architecture/</link>
      <pubDate>Thu, 26 Sep 2024 11:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-design-and-architecture/architecture/architecture-styles/component-based-architecture/</guid>
      <description>컴포넌트 기반 아키텍처 (Component-Based Architecture) 는 소프트웨어 시스템을 독립적이고 재사용 가능한 컴포넌트 (구성 요소) 단위로 분할하여, 변화에 유연하며 유지보수가 용이한 구조를 지향한다. 인터페이스를 통한 결합으로 확장성과 재사용성이 뛰어나다.</description>
    </item>
  </channel>
</rss>
