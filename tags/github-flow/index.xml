<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Github-Flow</title><link>https://buenhyden.github.io/tags/github-flow/</link><description>Recent content in Github-Flow on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 22 Sep 2024 10:28:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/github-flow/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Branch 전략</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git-branch-%EC%A0%84%EB%9E%B5/</link><pubDate>Sun, 22 Sep 2024 10:28:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/ci-and-cd/git/git-branch-%EC%A0%84%EB%9E%B5/</guid><description>
&lt;h2>Git Branch 전략&lt;span class="hx-absolute -hx-mt-20" id="git-branch-전략">&lt;/span>
&lt;a href="#git-branch-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Git Flow&lt;span class="hx-absolute -hx-mt-20" id="git-flow">&lt;/span>
&lt;a href="#git-flow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>
&lt;img src="../git-model@2x.png" alt="Git Flow" loading="lazy" /> _Source: &lt;a href="https://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="noopener">https://nvie.com/posts/a-successful-git-branching-model/&lt;/a> _&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Vincent Driessen이 2010년에 제안한 브랜치 전략&lt;/li>
&lt;li>엄격하고 체계적인 브랜치 관리 구조&lt;/li>
&lt;li>장기적인 릴리즈 주기와 버전 관리에 적합&lt;/li>
&lt;li>여러 개의 프로덕션 버전을 동시에 지원.&lt;/li>
&lt;li>명확한 역할 분담과 작업 흐름 제공.&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;span class="hx-absolute -hx-mt-20" id="핵심-원칙">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ec%9b%90%ec%b9%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;code>master(main)&lt;/code> 브랜치는 항상 배포 가능한 상태로 유지&lt;/li>
&lt;li>모든 개발은 &lt;code>develop&lt;/code> 브랜치를 기반으로 진행&lt;/li>
&lt;li>새로운 기능 개발은 항상 &lt;code>feature&lt;/code> 브랜치에서 수행&lt;/li>
&lt;li>&lt;code>release&lt;/code> 브랜치는 릴리즈 준비가 완료된 후에만 &lt;code>master&lt;/code>로 병합&lt;/li>
&lt;/ol>
&lt;h4>구조 및 Branch 종류&lt;span class="hx-absolute -hx-mt-20" id="구조-및-branch-종류">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%a1%b0-%eb%b0%8f-branch-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>주요 브랜치&lt;span class="hx-absolute -hx-mt-20" id="주요-브랜치">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%eb%b8%8c%eb%9e%9c%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;code>master(main)&lt;/code>: 제품 출시 버전을 관리
&lt;ol>
&lt;li>항상 배포 가능한 상태를 유지&lt;/li>
&lt;li>모든 커밋에 태그로 버전 번호 부여&lt;/li>
&lt;li>직접적인 커밋 금지&lt;/li>
&lt;li>&lt;code>release&lt;/code> 또는 &lt;code>hotfix&lt;/code>에서 병합만 가능&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>develop&lt;/code>: 다음 버전 개발 코드 관리
&lt;ol>
&lt;li>&lt;code>feature&lt;/code> 브랜치의 기준점.&lt;/li>
&lt;li>기능 개발 완료된 코드 통합&lt;/li>
&lt;li>다음 릴리즈를 위한 코드베이스&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h5>보조 브랜치&lt;span class="hx-absolute -hx-mt-20" id="보조-브랜치">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%a1%b0-%eb%b8%8c%eb%9e%9c%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;code>feature&lt;/code>: 새로운 기능 개발
&lt;ol>
&lt;li>&lt;code>develop&lt;/code>에서 분기&lt;/li>
&lt;li>기능 단위로 생성&lt;/li>
&lt;li>개발 완료 후 &lt;code>develop&lt;/code>에 병합&lt;/li>
&lt;li>네이밍: &lt;code>feature/기능명&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>release&lt;/code>: 출시 준비
&lt;ol>
&lt;li>&lt;code>develop&lt;/code>에서 분기&lt;/li>
&lt;li>버그 수정, 문서 작업 등 릴리즈 준비 작업만 허용&lt;/li>
&lt;li>완료시 &lt;code>master(main)&lt;/code>와 &lt;code>develop&lt;/code>에 병합&lt;/li>
&lt;li>네이밍: &lt;code>release-버전&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;code>hotfix&lt;/code>: 긴급 버그 수정
&lt;ol>
&lt;li>&lt;code>master(main)&lt;/code>에서 분기&lt;/li>
&lt;li>수정 후 &lt;code>master(main)&lt;/code>와 &lt;code>develop&lt;/code>에 병합&lt;/li>
&lt;li>네이밍: hotfix-버전&lt;br>
각 브랜치의 명명 규칙을 정하여 따르도록 한다.&lt;br>
예)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;code>feature/*&lt;/code>: 기능 이름 사용&lt;/li>
&lt;li>&lt;code>release/*&lt;/code>: 버전 번호 사용&lt;/li>
&lt;li>&lt;code>hotfix/*&lt;/code>: 버그 식별자 사용&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;span class="hx-absolute -hx-mt-20" id="작업-시나리오">&lt;/span>
&lt;a href="#%ec%9e%91%ec%97%85-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>신규 시나리오&lt;span class="hx-absolute -hx-mt-20" id="신규-시나리오">&lt;/span>
&lt;a href="#%ec%8b%a0%ea%b7%9c-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>develop 브랜치에서 시작&lt;/li>
&lt;li>feature 브랜치 생성&lt;/li>
&lt;li>기능 개발 및 테스트&lt;/li>
&lt;li>develop에 병합&lt;/li>
&lt;li>feature 브랜치 삭제&lt;/li>
&lt;/ol>
&lt;h5>릴리즈 프로세스&lt;span class="hx-absolute -hx-mt-20" id="릴리즈-프로세스">&lt;/span>
&lt;a href="#%eb%a6%b4%eb%a6%ac%ec%a6%88-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>develop에서 release 브랜치 생성&lt;/li>
&lt;li>버전 번호 업데이트&lt;/li>
&lt;li>최종 테스트 및 버그 수정&lt;/li>
&lt;li>master와 develop에 병합&lt;/li>
&lt;li>태그 생성 및 release 브랜치 삭제&lt;/li>
&lt;/ol>
&lt;h5>긴급 버그 수정&lt;span class="hx-absolute -hx-mt-20" id="긴급-버그-수정">&lt;/span>
&lt;a href="#%ea%b8%b4%ea%b8%89-%eb%b2%84%ea%b7%b8-%ec%88%98%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>master에서 hotfix 브랜치 생성&lt;/li>
&lt;li>버그 수정 및 버전 업데이트&lt;/li>
&lt;li>master와 develop에 병합&lt;/li>
&lt;li>태그 생성 및 hotfix 브랜치 삭제&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;span class="hx-absolute -hx-mt-20" id="장단점">&lt;/span>
&lt;a href="#%ec%9e%a5%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>체계적이고 예측 가능한 개발 프로세스&lt;br>버전 관리와 유지보수가 용이&lt;br>대규모 프로젝트와 팀에 적합&lt;br>릴리즈 주기가 긴 프로젝트에 효과적&lt;br>엄격한 코드 품질 관리&lt;br>명확한 역할 분담&lt;/td>
&lt;td>복잡한 브랜치 구조로 인한 학습 곡선&lt;br>소규모 프로젝트나 빠른 배포가 필요한 경우 과도할 수 있다.&lt;br>브랜치 관리에 시간과 노력이 많이 소요될 수 있음.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;span class="hx-absolute -hx-mt-20" id="적용-적합성">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%a0%81%ed%95%a9%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>중대형 프로젝트&lt;/td>
&lt;td>5인 이상&lt;/td>
&lt;td>주/월 단위 정기적인 릴리즈&lt;/td>
&lt;td>높은 수준의 QA 프로세스 필요&lt;br>체계적인 테스트 체계 필요&lt;br>코드 리뷰 문화 필수&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;span class="hx-absolute -hx-mt-20" id="리스크-요소">&lt;/span>
&lt;a href="#%eb%a6%ac%ec%8a%a4%ed%81%ac-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>장기 실행 브랜치의 병합 충돌&lt;br>&lt;code>feature&lt;/code> 브랜치 간의 의존성&lt;br>큰 규모의 병합으로 인한 위험&lt;/td>
&lt;td>복잡한 배포 프로세스&lt;br>릴리즈 준비 기간 장기화&lt;br>&lt;code>hotfix&lt;/code> 적용의 복잡성&lt;/td>
&lt;td>브랜치 간 코드 동기화 문제&lt;br>테스트 커버리지 확보 어려움&lt;br>코드 리뷰 병목 현상&lt;/td>
&lt;td>브랜치 관리에 많은 시간이 노력이 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;span class="hx-absolute -hx-mt-20" id="복잡도-증가-요인">&lt;/span>
&lt;a href="#%eb%b3%b5%ec%9e%a1%eb%8f%84-%ec%a6%9d%ea%b0%80-%ec%9a%94%ec%9d%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>다양한 종류의 브랜치 사용&lt;/li>
&lt;li>엄격한 브랜치 생성 및 병합 규칙&lt;/li>
&lt;li>릴리스 및 핫픽스 프로세스의 복잡성&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;span class="hx-absolute -hx-mt-20" id="cicd를-위한-요구-사항">&lt;/span>
&lt;a href="#cicd%eb%a5%bc-%ec%9c%84%ed%95%9c-%ec%9a%94%ea%b5%ac-%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>자동화된 테스트 시스템&lt;/li>
&lt;li>각 브랜치 별 자동 빌드 및 테스트 환경&lt;/li>
&lt;li>릴리즈 브랜치에 대한 자동 배포 파이프라인&lt;/li>
&lt;li>브랜치 상태 모니터링 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;span class="hx-absolute -hx-mt-20" id="통합-방법">&lt;/span>
&lt;a href="#%ed%86%b5%ed%95%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>브랜치 전략과 CI/CD 파이프라인 연동
&lt;ul>
&lt;li>&lt;code>master(main)&lt;/code>와 &lt;code>develop&lt;/code> 브랜치에 대한 자동 빌드 및 테스트 파이프라인 구성&lt;/li>
&lt;li>&lt;code>feature&lt;/code>, &lt;code>release&lt;/code>, &lt;code>hotfix&lt;/code> 브랜치에 대한 별도의 CI 파이프라인 설정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트
&lt;ul>
&lt;li>모든 브랜치에 대해 자동화된 단위 테스트, 통합 테스트 실행&lt;/li>
&lt;li>&lt;code>develop&lt;/code> 브랜치로의 병합 시 추가적인 테스트 수행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경별 배포
&lt;ul>
&lt;li>&lt;code>develop&lt;/code> 브랜치는 개발/테스트 환경에 자동 배포&lt;/li>
&lt;li>&lt;code>release&lt;/code> 브랜치는 스테이징 환경에 배포&lt;/li>
&lt;li>&lt;code>master&lt;/code> 브랜치는 프로덕션 환경에 배포&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 리뷰 프로세스
&lt;ul>
&lt;li>Pull Request 생성 시 자동으로 CI 파이프라인 실행&lt;/li>
&lt;li>코드 리뷰 승인 후 자동 병합 및 배포&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>버전 관리
&lt;ul>
&lt;li>&lt;code>release&lt;/code> 브랜치 생성 시 자동으로 버전 태그 생성&lt;/li>
&lt;li>배포 시 해당 버전 정보 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 롤백
&lt;ul>
&lt;li>배포 후 자동화된 모니터링 시스템 연동&lt;/li>
&lt;li>문제 발생 시 빠른 롤백 메커니즘 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문서화
&lt;ul>
&lt;li>CI/CD 파이프라인 실행 결과 자동 문서화&lt;/li>
&lt;li>릴리즈 노트 자동 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;span class="hx-absolute -hx-mt-20" id="버전-관리-방식">&lt;/span>
&lt;a href="#%eb%b2%84%ec%a0%84-%ea%b4%80%eb%a6%ac-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>버전 관리 체계&lt;span class="hx-absolute -hx-mt-20" id="버전-관리-체계">&lt;/span>
&lt;a href="#%eb%b2%84%ec%a0%84-%ea%b4%80%eb%a6%ac-%ec%b2%b4%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>Semantic Versioning(SemVer)을 사용&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">MAJOR.MINOR.PATCH&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>주 버전(Major): 호환성이 깨지는 변경사항&lt;/li>
&lt;li>부 버전(Minor): 기능 추가&lt;/li>
&lt;li>패치 버전(Patch): 버그 수정&lt;br>
예: 1.2.3 (주 버전 1, 부 버전 2, 패치 3)&lt;/li>
&lt;/ul>
&lt;h5>태그 관리&lt;span class="hx-absolute -hx-mt-20" id="태그-관리">&lt;/span>
&lt;a href="#%ed%83%9c%ea%b7%b8-%ea%b4%80%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>모든 릴리즈에 태그 부여&lt;/li>
&lt;li>버전 정보 포함&lt;/li>
&lt;li>릴리즈 노트 연결&lt;/li>
&lt;/ul>
&lt;h5>이력 관리&lt;span class="hx-absolute -hx-mt-20" id="이력-관리">&lt;/span>
&lt;a href="#%ec%9d%b4%eb%a0%a5-%ea%b4%80%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>릴리즈 노트 작성&lt;/li>
&lt;li>변경 이력 문서화&lt;/li>
&lt;li>주요 변경 사항 추적&lt;/li>
&lt;/ul>
&lt;h3>GitHub Flow&lt;span class="hx-absolute -hx-mt-20" id="github-flow">&lt;/span>
&lt;a href="#github-flow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>
&lt;img src="../48032310-63842400-e114-11e8-8db0-06dc0504dcb5.png" alt="Github Flow" loading="lazy" />&lt;br>
_Source: &lt;a href="https://github.com/SvanBoxel/release-based-workflow/issues/1" target="_blank" rel="noopener">https://github.com/SvanBoxel/release-based-workflow/issues/1&lt;/a> _&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징-1">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>단순한 브랜치 전략&lt;/li>
&lt;li>&lt;code>main&lt;/code> 브랜치 중심의 지속적 배포&lt;/li>
&lt;li>Pull Request 기반 코드 리뷰&lt;/li>
&lt;li>빠른 피드백과 지속적 통합&lt;/li>
&lt;li>자동화된 테스트와 배포 강조&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;span class="hx-absolute -hx-mt-20" id="핵심-원칙-1">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ec%9b%90%ec%b9%99-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>main 브랜치는 항상 배포 가능한 상태 유지&lt;/li>
&lt;li>새로운 작업은 항상 기능 브랜치에서 수행&lt;/li>
&lt;li>기능 브랜치는 자주 push하고 Pull Request 생성&lt;/li>
&lt;li>Pull Request를 통한 코드 리뷰 필수&lt;/li>
&lt;li>승인된 Pull Request는 즉시 main에 병합&lt;/li>
&lt;li>main에 병합된 변경사항은 즉시 배포&lt;/li>
&lt;/ol>
&lt;h4>구조 및 Branch 종류&lt;span class="hx-absolute -hx-mt-20" id="구조-및-branch-종류-1">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%a1%b0-%eb%b0%8f-branch-%ec%a2%85%eb%a5%98-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>&lt;code>main (master)&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="main-master">&lt;/span>
&lt;a href="#main-master" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>항상 배포 가능한 상태 유지&lt;/li>
&lt;li>모든 코드는 리뷰를 거쳐 병합&lt;/li>
&lt;/ul>
&lt;h5>&lt;code>feature Branches&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="feature-branches">&lt;/span>
&lt;a href="#feature-branches" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>모든 개발은 &lt;code>feature&lt;/code> 브랜치에서 진행&lt;/li>
&lt;li>기능/버그수정/문서 등 모든 변경사항.&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;span class="hx-absolute -hx-mt-20" id="작업-시나리오-1">&lt;/span>
&lt;a href="#%ec%9e%91%ec%97%85-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>새로운 기능 개발&lt;span class="hx-absolute -hx-mt-20" id="새로운-기능-개발">&lt;/span>
&lt;a href="#%ec%83%88%eb%a1%9c%ec%9a%b4-%ea%b8%b0%eb%8a%a5-%ea%b0%9c%eb%b0%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>main에서 feature 브랜치 생성&lt;/li>
&lt;li>기능 개발 및 테스트&lt;/li>
&lt;li>PR 생성 및 리뷰&lt;/li>
&lt;li>main에 병합 및 배포&lt;/li>
&lt;/ol>
&lt;h5>버그 수정&lt;span class="hx-absolute -hx-mt-20" id="버그-수정">&lt;/span>
&lt;a href="#%eb%b2%84%ea%b7%b8-%ec%88%98%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>main에서 hotfix 브랜치 생성&lt;/li>
&lt;li>수정 및 테스트&lt;/li>
&lt;li>PR 생성 및 긴급 리뷰&lt;/li>
&lt;li>main에 병합 및 즉시 배포&lt;/li>
&lt;/ol>
&lt;h5>실험적 기능&lt;span class="hx-absolute -hx-mt-20" id="실험적-기능">&lt;/span>
&lt;a href="#%ec%8b%a4%ed%97%98%ec%a0%81-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>prototype 브랜치 생성&lt;/li>
&lt;li>기능 구현 및 검증&lt;/li>
&lt;li>성공 시 정식 feature로 전환&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;span class="hx-absolute -hx-mt-20" id="장단점-1">&lt;/span>
&lt;a href="#%ec%9e%a5%eb%8b%a8%ec%a0%90-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>간단하고 이해하기 쉬움&lt;br> 빠른 개발과 배포 주기 지원&lt;br> 지속적인 통합과 배포 용이&lt;br> 코드 리뷰 문화 강화&lt;/td>
&lt;td>버전 관리가 명시적이지 않음&lt;br>대규모 프로젝트나 복잡한 릴리스 관리에는 부적합할 수 있음&lt;br>hotfix 처리를 위한 별도 프로세스 부재&lt;br>환경별 배포 관리 어려움&lt;br>롤백 복잡성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;span class="hx-absolute -hx-mt-20" id="적용-적합성-1">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%a0%81%ed%95%a9%ec%84%b1-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>소규모 ~ 중규모 프로젝트&lt;/td>
&lt;td>작은 팀 ~ 중간 규모 팀 (5-20명)&lt;/td>
&lt;td>매우 빈번 (일 단위 또는 그 이상)&lt;/td>
&lt;td>자동화된 테스트 필수&lt;br>코드 리뷰 문화 중요&lt;br>CI/CD 파이프라인 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;span class="hx-absolute -hx-mt-20" id="리스크-요소-1">&lt;/span>
&lt;a href="#%eb%a6%ac%ec%8a%a4%ed%81%ac-%ec%9a%94%ec%86%8c-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>동시 다발적 PR 충돌&lt;br>테스트 커버리지 부족&lt;br>리뷰 병목 현상&lt;br>&lt;br>&lt;/td>
&lt;td>잦은 배포로 인한 불안정성&lt;br>롤백 복잡성&lt;br>환경 설정 관리 어려움&lt;br>&lt;br>&lt;/td>
&lt;td>빠른 개발로 인한 품질 저하&lt;br>문서화 부족&lt;br>기술 부채 누적&lt;br>&lt;br>&lt;/td>
&lt;td>명시적인 버전 관리의 어려움&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;span class="hx-absolute -hx-mt-20" id="복잡도-증가-요인-1">&lt;/span>
&lt;a href="#%eb%b3%b5%ec%9e%a1%eb%8f%84-%ec%a6%9d%ea%b0%80-%ec%9a%94%ec%9d%b8-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>동시 진행 PR 수 증가&lt;/li>
&lt;li>팀 규모 증가&lt;/li>
&lt;li>환경 설정 다양화&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;span class="hx-absolute -hx-mt-20" id="cicd를-위한-요구-사항-1">&lt;/span>
&lt;a href="#cicd%eb%a5%bc-%ec%9c%84%ed%95%9c-%ec%9a%94%ea%b5%ac-%ec%82%ac%ed%95%ad-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>자동화된 빌드 및 테스트 시스템&lt;/li>
&lt;li>지속적 통합(CI) 도구 (예: Jenkins, GitHub Actions)&lt;/li>
&lt;li>자동화된 배포 파이프라인&lt;/li>
&lt;li>코드 품질 검사 도구 (예: SonarQube)&lt;/li>
&lt;li>모니터링 및 로깅 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;span class="hx-absolute -hx-mt-20" id="통합-방법-1">&lt;/span>
&lt;a href="#%ed%86%b5%ed%95%a9-%eb%b0%a9%eb%b2%95-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>GitHub Actions 활용:
&lt;ul>
&lt;li>GitHub에서 제공하는 CI/CD 도구인 GitHub Actions를 사용하여 워크플로우를 자동화&lt;/li>
&lt;li>.github/workflows 디렉토리에 YAML 파일로 워크플로우를 정의.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트 구현:
&lt;ul>
&lt;li>풀 리퀘스트가 생성될 때마다 자동으로 빌드 및 테스트를 실행하도록 설정.&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 코드 스타일 검사 등을 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 통합 (CI) 설정:
&lt;ul>
&lt;li>모든 코드 변경사항에 대해 자동으로 빌드와 테스트를 실행.&lt;/li>
&lt;li>메인 브랜치에 병합하기 전에 모든 테스트를 통과해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 배포 (CD) 구현:
&lt;ul>
&lt;li>테스트를 통과한 코드를 자동으로 스테이징 또는 프로덕션 환경에 배포.&lt;/li>
&lt;li>필요에 따라 수동 승인 단계를 추가할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 변수 및 시크릿 관리:
&lt;ul>
&lt;li>GitHub의 시크릿 기능을 사용하여 민감한 정보를 안전하게 관리.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 알림 설정:
&lt;ul>
&lt;li>워크플로우 상태, 실패, 중요 이벤트에 대한 알림을 설정.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 검사 통합:
&lt;ul>
&lt;li>정적 코드 분석, 코드 커버리지 검사 등을 워크플로우에 포함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>병렬 실행 및 매트릭스 빌드 활용:
&lt;ul>
&lt;li>여러 환경에서 동시에 테스트를 실행하여 효율성을 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>캐싱 활용:
&lt;ul>
&lt;li>의존성 및 빌드 결과물을 캐싱하여 빌드 시간을 단축한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정기적인 워크플로우 검토 및 최적화:
&lt;ul>
&lt;li>CI/CD 파이프라인을 주기적으로 검토하고 개선한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;span class="hx-absolute -hx-mt-20" id="버전-관리-방식-1">&lt;/span>
&lt;a href="#%eb%b2%84%ec%a0%84-%ea%b4%80%eb%a6%ac-%eb%b0%a9%ec%8b%9d-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>명시적인 버전 관리보다는 커밋 해시나 배포 시간을 이용&lt;/li>
&lt;li>필요시 Git 태그를 활용하여 주요 릴리스 표시&lt;/li>
&lt;/ul>
&lt;h3>GitLab Flow&lt;span class="hx-absolute -hx-mt-20" id="gitlab-flow">&lt;/span>
&lt;a href="#gitlab-flow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>
&lt;img src="../image-9.png" alt="Gitlab Flow" loading="lazy" />&lt;br>
_Source: &lt;a href="https://blog.programster.org/git-workflows" target="_blank" rel="noopener">https://blog.programster.org/git-workflows&lt;/a> _&lt;/p>
&lt;p>
&lt;img src="../image-10-1024x707.png" alt="Gitlab Flow" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.linkedin.com/pulse/gitlab-flow-jadson-santos" target="_blank" rel="noopener">https://www.linkedin.com/pulse/gitlab-flow-jadson-santos&lt;/a> _&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징-2">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>Git Flow의 복잡성을 줄이고, GitHub Flow의 단순성을 결합&lt;/li>
&lt;li>환경별 브랜치 전략 채택&lt;/li>
&lt;li>지속적 배포와 안정성 균형&lt;/li>
&lt;li>단방향 워크플로우
&lt;ul>
&lt;li>&lt;code>main&lt;/code> → &lt;code>staging&lt;/code> → &lt;code>pre-production&lt;/code> → &lt;code>production&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개발, 스테이징, 프로덕션 환경을 위한 브랜치 구조 지원&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;span class="hx-absolute -hx-mt-20" id="핵심-원칙-2">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ec%9b%90%ec%b9%99-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>모든 코드 변경은 이슈 트래킹 시스템과 연결&lt;/li>
&lt;li>&lt;code>main&lt;/code> 브랜치는 항상 안정적이고 배포 가능한 상태 유지&lt;/li>
&lt;li>환경별로 명확한 테스트 및 배포 절차 준수&lt;/li>
&lt;li>Merge Request를 통한 코드 리뷰 필수&lt;/li>
&lt;/ul>
&lt;h4>구조 및 Branch 종류&lt;span class="hx-absolute -hx-mt-20" id="구조-및-branch-종류-2">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%a1%b0-%eb%b0%8f-branch-%ec%a2%85%eb%a5%98-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>Main&lt;span class="hx-absolute -hx-mt-20" id="main">&lt;/span>
&lt;a href="#main" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>개발의 기준점&lt;/li>
&lt;li>통합된 코드 관리&lt;/li>
&lt;li>CI 통과 필수&lt;/li>
&lt;li>&lt;code>feature&lt;/code> 브랜치의 병합 대상&lt;/li>
&lt;/ul>
&lt;h5>Production&lt;span class="hx-absolute -hx-mt-20" id="production">&lt;/span>
&lt;a href="#production" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>실제 운영 환경 코드&lt;/li>
&lt;li>안정성 검증 완료&lt;/li>
&lt;li>배포 이력 관리&lt;/li>
&lt;li>&lt;code>main&lt;/code>에서 테스트 완료된 코드를 병합&lt;/li>
&lt;/ul>
&lt;h5>pre-production/staging&lt;span class="hx-absolute -hx-mt-20" id="pre-productionstaging">&lt;/span>
&lt;a href="#pre-productionstaging" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>운영 환경 검증용&lt;/li>
&lt;li>QA 테스트 진행&lt;/li>
&lt;li>성능/부하 테스트&lt;/li>
&lt;li>&lt;code>main&lt;/code>에서 분기하여 테스트 후 &lt;code>production&lt;/code>으로 병합.&lt;/li>
&lt;/ul>
&lt;h5>Feature&lt;span class="hx-absolute -hx-mt-20" id="feature">&lt;/span>
&lt;a href="#feature" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>기능 개발용&lt;/li>
&lt;li>&lt;code>main&lt;/code>에서 분기하여 작업 후 Merge Request 생성.&lt;/li>
&lt;/ul>
&lt;h5>Hotfix&lt;span class="hx-absolute -hx-mt-20" id="hotfix">&lt;/span>
&lt;a href="#hotfix" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>긴급 버그 수정&lt;/li>
&lt;li>&lt;code>production&lt;/code>에서 분기&lt;/li>
&lt;li>모든 환경에 반영&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;span class="hx-absolute -hx-mt-20" id="작업-시나리오-2">&lt;/span>
&lt;a href="#%ec%9e%91%ec%97%85-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>새로운 기능 개발&lt;span class="hx-absolute -hx-mt-20" id="새로운-기능-개발-1">&lt;/span>
&lt;a href="#%ec%83%88%eb%a1%9c%ec%9a%b4-%ea%b8%b0%eb%8a%a5-%ea%b0%9c%eb%b0%9c-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Main에서 Feature 브랜치 생성&lt;/li>
&lt;li>개발 및 테스트&lt;/li>
&lt;li>Main에 MR 생성&lt;/li>
&lt;li>리뷰 및 CI 통과&lt;/li>
&lt;li>단계적 환경 배포&lt;/li>
&lt;/ol>
&lt;h5>버그 수정&lt;span class="hx-absolute -hx-mt-20" id="버그-수정-1">&lt;/span>
&lt;a href="#%eb%b2%84%ea%b7%b8-%ec%88%98%ec%a0%95-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Production에서 Hotfix 브랜치 생성&lt;/li>
&lt;li>수정 및 테스트&lt;/li>
&lt;li>Production에 병합&lt;/li>
&lt;li>하위 환경에 백포트&lt;/li>
&lt;/ol>
&lt;h5>정기 배포&lt;span class="hx-absolute -hx-mt-20" id="정기-배포">&lt;/span>
&lt;a href="#%ec%a0%95%ea%b8%b0-%eb%b0%b0%ed%8f%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Main 브랜치 안정화&lt;/li>
&lt;li>Staging 환경 배포&lt;/li>
&lt;li>QA 검증&lt;/li>
&lt;li>Pre-production 검증&lt;/li>
&lt;li>Production 배포&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;span class="hx-absolute -hx-mt-20" id="장단점-2">&lt;/span>
&lt;a href="#%ec%9e%a5%eb%8b%a8%ec%a0%90-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>유연한 환경 관리&lt;br>이슈 트래킹과의 통합으로 투명한 개발 프로세스&lt;br>다양한 배포 시나리오 지원&lt;br>안정성&lt;/td>
&lt;td>Git Flow보다는 단순하지만 GitHub Flow보다는 복잡&lt;br>환경별 브랜치 관리에 따른 추가 작업 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;span class="hx-absolute -hx-mt-20" id="적용-적합성-2">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%a0%81%ed%95%a9%ec%84%b1-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>중소규모 ~ 대규모 프로젝트&lt;/td>
&lt;td>5-50명 정도의 중소규모 팀&lt;/td>
&lt;td>주 단위 또는 2주 단위 배포&lt;/td>
&lt;td>중간 ~ 높은 수준의 품질 관리 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;span class="hx-absolute -hx-mt-20" id="리스크-요소-2">&lt;/span>
&lt;a href="#%eb%a6%ac%ec%8a%a4%ed%81%ac-%ec%9a%94%ec%86%8c-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>브랜치 간 동기화 문제&lt;br>환경별 설정 불일치&lt;br>병합 충돌&lt;/td>
&lt;td>환경별 배포 실패&lt;br>설정 오류&lt;br>성능 저하&lt;/td>
&lt;td>여러 환경에서의 일관된 품질 유지 필요&lt;/td>
&lt;td>브랜치 관리 복잡성&lt;br>환경 설정 부담&lt;br>문서화 필요성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;span class="hx-absolute -hx-mt-20" id="복잡도-증가-요인-2">&lt;/span>
&lt;a href="#%eb%b3%b5%ec%9e%a1%eb%8f%84-%ec%a6%9d%ea%b0%80-%ec%9a%94%ec%9d%b8-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>브랜치 관리&lt;/strong>
&lt;ul>
&lt;li>다중 환경 구성&lt;/li>
&lt;li>동기화 필요성&lt;/li>
&lt;li>버전 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>배포 프로세스&lt;/strong>
&lt;ul>
&lt;li>단계적 검증&lt;/li>
&lt;li>환경별 설정&lt;/li>
&lt;li>롤백 절차&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>설정 관리&lt;/strong>
&lt;ul>
&lt;li>환경별 변수&lt;/li>
&lt;li>접근 권한&lt;/li>
&lt;li>보안 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;span class="hx-absolute -hx-mt-20" id="cicd를-위한-요구-사항-2">&lt;/span>
&lt;a href="#cicd%eb%a5%bc-%ec%9c%84%ed%95%9c-%ec%9a%94%ea%b5%ac-%ec%82%ac%ed%95%ad-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>자동화된 테스트 시스템&lt;/li>
&lt;li>환경별 자동 배포 파이프라인&lt;/li>
&lt;li>코드 품질 검사 도구&lt;/li>
&lt;li>모니터링 및 로깅 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;span class="hx-absolute -hx-mt-20" id="통합-방법-2">&lt;/span>
&lt;a href="#%ed%86%b5%ed%95%a9-%eb%b0%a9%eb%b2%95-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>.gitlab-ci.yml 파일 생성:
&lt;ul>
&lt;li>프로젝트 루트에.gitlab-ci.yml 파일을 생성하여 CI/CD 파이프라인을 정의한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>파이프라인 구조 정의:
&lt;ul>
&lt;li>stages를 정의하여 파이프라인의 단계를 구성한다 (예: build, test, deploy).&lt;/li>
&lt;li>각 stage에 해당하는 job을 정의한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>브랜치별 파이프라인 설정:
&lt;ul>
&lt;li>main, production 등 주요 브랜치에 대한 파이프라인을 별도로 구성한다.&lt;/li>
&lt;li>rules 키워드를 사용하여 브랜치별로 다른 job을 실행하도록 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>자동화된 테스트 구현:
&lt;ul>
&lt;li>단위 테스트, 통합 테스트 등을 파이프라인에 포함시킨다.&lt;/li>
&lt;li>test stage에서 다양한 테스트를 실행하도록 구성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경별 배포 자동화:
&lt;ul>
&lt;li>개발, 스테이징, 프로덕션 환경에 대한 자동 배포 job을 구성한다.&lt;/li>
&lt;li>environment 키워드를 사용하여 배포 환경을 지정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>품질 검사 도구 통합:
&lt;ul>
&lt;li>코드 품질, 보안 검사 등을 수행하는 job을 추가한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>아티팩트 및 캐시 활용:
&lt;ul>
&lt;li>artifacts와 cache를 사용하여 빌드 결과물을 저장하고 재사용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CI/CD 변수 활용:
&lt;ul>
&lt;li>GitLab의 CI/CD 변수 기능을 사용하여 민감한 정보를 안전하게 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 알림 설정:
&lt;ul>
&lt;li>파이프라인 실행 결과에 대한 알림을 구성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GitLab Runner 설정:
&lt;ul>
&lt;li>프로젝트에 적합한 Runner를 구성하여 CI/CD 작업을 실행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;span class="hx-absolute -hx-mt-20" id="버전-관리-방식-2">&lt;/span>
&lt;a href="#%eb%b2%84%ec%a0%84-%ea%b4%80%eb%a6%ac-%eb%b0%a9%ec%8b%9d-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>시맨틱 버저닝 (MAJOR.MINOR.PATCH)&lt;/li>
&lt;li>환경별 태그 관리&lt;/li>
&lt;li>배포 이력 추적&lt;/li>
&lt;/ul>
&lt;h3>Scaled Trunk-Based Development&lt;span class="hx-absolute -hx-mt-20" id="scaled-trunk-based-development">&lt;/span>
&lt;a href="#scaled-trunk-based-development" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>
&lt;img src="../trunk1c.png" alt="Scaled Trunk-Based Development" loading="lazy" />&lt;br>
_Source: &lt;a href="https://trunkbaseddevelopment.com/" target="_blank" rel="noopener">https://trunkbaseddevelopment.com/&lt;/a> _&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징-3">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>단일 메인 브랜치(trunk)를 중심으로 개발&lt;/li>
&lt;li>짧은 수명의 기능 브랜치 사용&lt;/li>
&lt;li>빈번한 통합과 배포&lt;/li>
&lt;li>기능 플래그를 활용한 기능 관리&lt;/li>
&lt;li>대규모 팀과 프로젝트에 적합&lt;/li>
&lt;li>마이크로서비스 아키텍처 지원&lt;/li>
&lt;/ul>
&lt;h4>핵심 원칙&lt;span class="hx-absolute -hx-mt-20" id="핵심-원칙-3">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ec%9b%90%ec%b9%99-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>trunk는 항상 안정적이고 배포 가능한 상태 유지&lt;/li>
&lt;li>기능 브랜치는 짧게 유지 (1-2일 이내)&lt;/li>
&lt;li>빈번한 통합과 배포&lt;/li>
&lt;li>자동화된 테스트와 CI/CD 파이프라인 필수&lt;/li>
&lt;li>기능 플래그를 활용한 미완성 기능 관리&lt;/li>
&lt;/ul>
&lt;h4>구조 및 Branch 종류&lt;span class="hx-absolute -hx-mt-20" id="구조-및-branch-종류-3">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%a1%b0-%eb%b0%8f-branch-%ec%a2%85%eb%a5%98-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>
&lt;p>Trunk 브랜치:&lt;/p>
&lt;ul>
&lt;li>항상 배포 가능한 상태 유지&lt;/li>
&lt;li>모든 개발 작업의 최종 목적지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>기능 브랜치:&lt;/p>
&lt;ul>
&lt;li>개별 기능 개발을 위해 trunk에서 분기&lt;/li>
&lt;li>빠르게 개발 완료 후 trunk로 병합 (보통 1-2일 이내)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>릴리스 브랜치:&lt;/p>
&lt;ul>
&lt;li>필요시에만 생성&lt;/li>
&lt;li>릴리스 준비 및 핫픽스를 위해 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>작업 시나리오&lt;span class="hx-absolute -hx-mt-20" id="작업-시나리오-3">&lt;/span>
&lt;a href="#%ec%9e%91%ec%97%85-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>새로운 기능 개발&lt;span class="hx-absolute -hx-mt-20" id="새로운-기능-개발-2">&lt;/span>
&lt;a href="#%ec%83%88%eb%a1%9c%ec%9a%b4-%ea%b8%b0%eb%8a%a5-%ea%b0%9c%eb%b0%9c-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Feature Flag 생성&lt;/li>
&lt;li>임시 브랜치 생성&lt;/li>
&lt;li>기능 구현 (1-2일)&lt;/li>
&lt;li>테스트 및 리뷰&lt;/li>
&lt;li>main 병합&lt;/li>
&lt;li>단계적 Flag 활성화&lt;/li>
&lt;/ol>
&lt;h5>긴급 수정&lt;span class="hx-absolute -hx-mt-20" id="긴급-수정">&lt;/span>
&lt;a href="#%ea%b8%b4%ea%b8%89-%ec%88%98%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>main에서 직접 수정&lt;/li>
&lt;li>테스트 자동화&lt;/li>
&lt;li>즉시 배포&lt;/li>
&lt;li>모니터링&lt;/li>
&lt;/ol>
&lt;h4>장단점&lt;span class="hx-absolute -hx-mt-20" id="장단점-3">&lt;/span>
&lt;a href="#%ec%9e%a5%eb%8b%a8%ec%a0%90-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>빠른 통합과 피드백&lt;br>병합 충돌 최소화&lt;br>지속적 배포 용이&lt;br>대규모 팀 협업에 적합&lt;/td>
&lt;td>높은 수준의 자동화 필요&lt;br>기능 플래그 관리의 복잡성&lt;br>팀원들의 높은 기술력과 규율 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>적용 적합성&lt;span class="hx-absolute -hx-mt-20" id="적용-적합성-3">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%a0%81%ed%95%a9%ec%84%b1-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로젝트 규모&lt;/th>
&lt;th>팀 규모&lt;/th>
&lt;th>배포 빈도&lt;/th>
&lt;th>품질 관리 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>중대형 프로젝트&lt;/td>
&lt;td>대규모 팀 (50명 이상)&lt;/td>
&lt;td>매우 빈번 (일일 또는 그 이상)&lt;/td>
&lt;td>높은 수준의 자동화된 테스트 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>리스크 요소&lt;span class="hx-absolute -hx-mt-20" id="리스크-요소-3">&lt;/span>
&lt;a href="#%eb%a6%ac%ec%8a%a4%ed%81%ac-%ec%9a%94%ec%86%8c-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통합 리스크&lt;/th>
&lt;th>배포 리스크&lt;/th>
&lt;th>품질 리스크&lt;/th>
&lt;th>관리 리스크&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>빈번한 통합으로 인한 일시적 불안정성&lt;/td>
&lt;td>잦은 배포로 인한 운영 부담 증가&lt;/td>
&lt;td>빠른 개발 주기로 인한 품질 저하 가능성&lt;/td>
&lt;td>기능 플래그 관리의 복잡성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>복잡도 증가 요인&lt;span class="hx-absolute -hx-mt-20" id="복잡도-증가-요인-3">&lt;/span>
&lt;a href="#%eb%b3%b5%ec%9e%a1%eb%8f%84-%ec%a6%9d%ea%b0%80-%ec%9a%94%ec%9d%b8-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>전반적으로 중간 수준의 복잡도&lt;/li>
&lt;li>기능 플래그 관리와 대규모 팀 조정에서 복잡도 증가&lt;/li>
&lt;/ul>
&lt;h4>CI/CD를 위한 요구 사항&lt;span class="hx-absolute -hx-mt-20" id="cicd를-위한-요구-사항-3">&lt;/span>
&lt;a href="#cicd%eb%a5%bc-%ec%9c%84%ed%95%9c-%ec%9a%94%ea%b5%ac-%ec%82%ac%ed%95%ad-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>강력한 자동화된 테스트 시스템&lt;/li>
&lt;li>빠른 빌드 및 배포 파이프라인&lt;/li>
&lt;li>코드 품질 검사 도구&lt;/li>
&lt;li>실시간 모니터링 시스템&lt;/li>
&lt;li>기능 플래그 관리 시스템&lt;/li>
&lt;/ul>
&lt;h5>통합 방법&lt;span class="hx-absolute -hx-mt-20" id="통합-방법-3">&lt;/span>
&lt;a href="#%ed%86%b5%ed%95%a9-%eb%b0%a9%eb%b2%95-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>자동화된 빌드 및 테스트 파이프라인 구축:
&lt;ul>
&lt;li>모든 커밋에 대해 자동으로 빌드 및 테스트를 실행하는 CI 파이프라인 구성&lt;/li>
&lt;li>단위 테스트, 통합 테스트, 성능 테스트 등 다양한 테스트 자동화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>짧은 수명의 기능 브랜치 사용:
&lt;ul>
&lt;li>기능 브랜치에서 작업 후 빠르게 trunk로 병합 (보통 1-2일 이내)&lt;/li>
&lt;li>각 기능 브랜치에 대해 자동화된 테스트 실행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>트렁크 브랜치 보호:
&lt;ul>
&lt;li>트렁크 브랜치에 직접 푸시 금지&lt;/li>
&lt;li>모든 변경사항은 코드 리뷰와 자동화된 테스트를 거친 후 병합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>지속적 배포(CD) 구현:
&lt;ul>
&lt;li>트렁크 브랜치에 병합된 코드를 자동으로 스테이징 환경에 배포&lt;/li>
&lt;li>스테이징 환경에서 추가 테스트 후 문제가 없으면 프로덕션 환경으로 자동 배포&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기능 플래그 사용:
&lt;ul>
&lt;li>미완성 기능을 트렁크에 안전하게 병합할 수 있도록 기능 플래그 구현&lt;/li>
&lt;li>CI/CD 파이프라인에서 기능 플래그 상태를 제어&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 및 롤백 메커니즘:
&lt;ul>
&lt;li>배포 후 실시간 모니터링 시스템 구축&lt;/li>
&lt;li>문제 발생 시 빠른 롤백이 가능한 시스템 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>릴리스 관리 자동화:
&lt;ul>
&lt;li>버전 관리 및 릴리스 노트 생성 자동화&lt;/li>
&lt;li>릴리스 프로세스를 CI/CD 파이프라인에 통합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>코드 품질 검사 통합:
&lt;ul>
&lt;li>정적 코드 분석 도구를 CI/CD 파이프라인에 통합&lt;/li>
&lt;li>코드 커버리지, 복잡도 등의 메트릭을 지속적으로 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>환경 구성 관리:
&lt;ul>
&lt;li>인프라스트럭처 as 코드(IaC) 도구를 사용하여 환경 구성 자동화&lt;/li>
&lt;li>개발, 스테이징, 프로덕션 환경의 일관성 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>버전 관리 방식&lt;span class="hx-absolute -hx-mt-20" id="버전-관리-방식-3">&lt;/span>
&lt;a href="#%eb%b2%84%ec%a0%84-%ea%b4%80%eb%a6%ac-%eb%b0%a9%ec%8b%9d-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>지속적 배포로 인해 세밀한 버전 관리가 필요&lt;/li>
&lt;li>Semantic Versioning 사용 권장&lt;/li>
&lt;li>자동화된 버전 증가 시스템 구축&lt;/li>
&lt;/ul>
&lt;h3>Feature Branch Workflow Vs Trunk-Based Development 비교&lt;span class="hx-absolute -hx-mt-20" id="feature-branch-workflow-vs-trunk-based-development-비교">&lt;/span>
&lt;a href="#feature-branch-workflow-vs-trunk-based-development-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>Feature Branch Workflow&lt;/th>
&lt;th>Trunk-Based Development&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 철학&lt;/strong>&lt;/td>
&lt;td>기능별 격리 개발&lt;/td>
&lt;td>통합 중심 개발&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>브랜치 수명&lt;/strong>&lt;/td>
&lt;td>긴 수명 (days-weeks)&lt;/td>
&lt;td>짧은 수명 (hours-days)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 브랜치&lt;/strong>&lt;/td>
&lt;td>main, feature, release 등&lt;/td>
&lt;td>main(trunk) 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>코드 리뷰&lt;/strong>&lt;/td>
&lt;td>PR/MR 기반 공식 리뷰&lt;/td>
&lt;td>실시간/페어 리뷰&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 주기&lt;/strong>&lt;/td>
&lt;td>계획된 정기 배포&lt;/td>
&lt;td>수시 배포 (continuous)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합 팀 규모&lt;/strong>&lt;/td>
&lt;td>중/대규모 (5인 이상)&lt;/td>
&lt;td>소규모 (5인 이하)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>품질 관리&lt;/strong>&lt;/td>
&lt;td>단계적 검증&lt;/td>
&lt;td>자동화된 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>통합 빈도&lt;/strong>&lt;/td>
&lt;td>낮음 (주단위)&lt;/td>
&lt;td>높음 (일단위)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>자동화 수준&lt;/strong>&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>버그 수정&lt;/strong>&lt;/td>
&lt;td>bugfix/hotfix 브랜치&lt;/td>
&lt;td>직접 main 수정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>기능 격리&lt;/strong>&lt;/td>
&lt;td>브랜치로 격리&lt;/td>
&lt;td>Feature Toggle 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>충돌 관리&lt;/strong>&lt;/td>
&lt;td>병합 시 해결&lt;/td>
&lt;td>수시로 해결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>릴리즈 관리&lt;/strong>&lt;/td>
&lt;td>명시적 릴리즈&lt;/td>
&lt;td>지속적 릴리즈&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복잡도&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 곡선&lt;/strong>&lt;/td>
&lt;td>가파름&lt;/td>
&lt;td>완만함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CI/CD 요구사항&lt;/strong>&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>롤백 전략&lt;/strong>&lt;/td>
&lt;td>브랜치 전환&lt;/td>
&lt;td>Feature Toggle/배포 롤백&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>문서화 수준&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합 프로젝트&lt;/strong>&lt;/td>
&lt;td>복잡한 대형 프로젝트&lt;/td>
&lt;td>단순한 소형 프로젝트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 안정성&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>변동적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>계열&lt;/td>
&lt;td>Git Flow&lt;br>GitHub Flow&lt;br>GitLab Flow&lt;br>기본 Feature Branch Workflow&lt;/td>
&lt;td>Single Trunk Development&lt;br>Scaled Trunk Development&lt;br>Short-Lived Feature Branches&lt;br>Release Branch Model&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>핵심 차이점&lt;span class="hx-absolute -hx-mt-20" id="핵심-차이점">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ec%b0%a8%ec%9d%b4%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>개발 프로세스&lt;span class="hx-absolute -hx-mt-20" id="개발-프로세스">&lt;/span>
&lt;a href="#%ea%b0%9c%eb%b0%9c-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 격리 → 개발 → 리뷰 → 병합 → 배포&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 개발 → 통합 → 배포 → 모니터링&lt;/li>
&lt;/ul>
&lt;h5>품질 관리&lt;span class="hx-absolute -hx-mt-20" id="품질-관리">&lt;/span>
&lt;a href="#%ed%92%88%ec%a7%88-%ea%b4%80%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 사전 검증 중심&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 사후 모니터링 중심&lt;/li>
&lt;/ul>
&lt;h5>배포 전략&lt;span class="hx-absolute -hx-mt-20" id="배포-전략">&lt;/span>
&lt;a href="#%eb%b0%b0%ed%8f%ac-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 계획적 배포&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 지속적 배포&lt;/li>
&lt;/ul>
&lt;h5>팀 문화&lt;span class="hx-absolute -hx-mt-20" id="팀-문화">&lt;/span>
&lt;a href="#%ed%8c%80-%eb%ac%b8%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 체계적/계획적&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 애자일/유연함&lt;/li>
&lt;/ul>
&lt;h5>도구 요구사항&lt;span class="hx-absolute -hx-mt-20" id="도구-요구사항">&lt;/span>
&lt;a href="#%eb%8f%84%ea%b5%ac-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>Feature Branch&lt;/strong>: 브랜치 관리 도구&lt;/li>
&lt;li>&lt;strong>Trunk-Based&lt;/strong>: 자동화 도구&lt;/li>
&lt;/ul>
&lt;h3>Git Branch 전략별 비교&lt;span class="hx-absolute -hx-mt-20" id="git-branch-전략별-비교">&lt;/span>
&lt;a href="#git-branch-%ec%a0%84%eb%9e%b5%eb%b3%84-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Git Flow&lt;/th>
&lt;th>GitHub Flow&lt;/th>
&lt;th>GitLab Flow&lt;/th>
&lt;th>Scaled Trunk-Based&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>특징&lt;/strong>&lt;/td>
&lt;td>엄격한 브랜치 관리&lt;br>장기 릴리즈 주기&lt;br>체계적 구조&lt;/td>
&lt;td>단순한 구조&lt;br>지속적 배포&lt;br>PR 기반 리뷰&lt;/td>
&lt;td>환경별 브랜치&lt;br>단방향 워크플로우&lt;br>이슈 트래킹 통합&lt;/td>
&lt;td>단일 트렁크 중심&lt;br>짧은 브랜치 수명&lt;br>기능 플래그 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>브랜치 종류&lt;/strong>&lt;/td>
&lt;td>master&lt;br>develop&lt;br>feature&lt;br>release&lt;br>hotfix&lt;/td>
&lt;td>main&lt;br>feature&lt;/td>
&lt;td>main&lt;br>production&lt;br>pre-production&lt;br>feature&lt;br>hotfix&lt;/td>
&lt;td>trunk&lt;br>feature(1-2일)&lt;br>release&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>핵심 원칙&lt;/strong>&lt;/td>
&lt;td>master 안정성&lt;br>develop 기반 개발&lt;br>feature 격리&lt;/td>
&lt;td>main 안정성&lt;br>feature 분리&lt;br>PR 필수&lt;/td>
&lt;td>환경별 배포&lt;br>단방향 흐름&lt;br>MR 필수&lt;/td>
&lt;td>빠른 통합&lt;br>짧은 브랜치&lt;br>기능 플래그&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장점&lt;/strong>&lt;/td>
&lt;td>체계적 버전관리&lt;br>안정적 배포&lt;br>명확한 역할구분&lt;/td>
&lt;td>단순성&lt;br>빠른 배포&lt;br>쉬운 학습곡선&lt;/td>
&lt;td>환경 관리 용이&lt;br>단계적 배포&lt;br>안정성&lt;/td>
&lt;td>빠른 통합&lt;br>최소 충돌&lt;br>지속적 배포&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단점&lt;/strong>&lt;/td>
&lt;td>복잡한 구조&lt;br>느린 배포&lt;br>관리 부담&lt;/td>
&lt;td>버전관리 어려움&lt;br>복잡한 릴리즈&lt;br>환경구분 없음&lt;/td>
&lt;td>복잡한 구조&lt;br>관리 부담&lt;br>느린 배포&lt;/td>
&lt;td>높은 자동화 필요&lt;br>기능플래그 복잡성&lt;br>높은 기술력 요구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합 규모&lt;/strong>&lt;/td>
&lt;td>중대형 프로젝트&lt;br>5인 이상 팀&lt;/td>
&lt;td>소중규모 프로젝트&lt;br>5-20인 팀&lt;/td>
&lt;td>중대형 프로젝트&lt;br>5-50인 팀&lt;/td>
&lt;td>대규모 프로젝트&lt;br>50인 이상 팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 주기&lt;/strong>&lt;/td>
&lt;td>주/월 단위&lt;/td>
&lt;td>수시 배포&lt;/td>
&lt;td>주/2주 단위&lt;/td>
&lt;td>매일/수시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CI/CD 요구사항&lt;/strong>&lt;/td>
&lt;td>중간 수준&lt;br>브랜치별 파이프라인&lt;/td>
&lt;td>높은 수준&lt;br>자동화 필수&lt;/td>
&lt;td>높은 수준&lt;br>환경별 파이프라인&lt;/td>
&lt;td>매우 높은 수준&lt;br>완전 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>버전 관리&lt;/strong>&lt;/td>
&lt;td>Semantic Versioning&lt;br>태그 필수&lt;/td>
&lt;td>커밋 해시/배포시간&lt;/td>
&lt;td>환경별 태그&lt;br>Semantic Versioning&lt;/td>
&lt;td>지속적 버전관리&lt;br>자동화된 증가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복잡도&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>중간-높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Git Branch 전략 선택 시 고려사항&lt;span class="hx-absolute -hx-mt-20" id="git-branch-전략-선택-시-고려사항">&lt;/span>
&lt;a href="#git-branch-%ec%a0%84%eb%9e%b5-%ec%84%a0%ed%83%9d-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>영역&lt;/th>
&lt;th>주요 고려사항&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>프로젝트 컨텍스트&lt;/strong>&lt;/td>
&lt;td>• 프로젝트 규모/복잡도&lt;br>• 안정성 요구사항&lt;br>• 릴리스 주기&lt;br>• 마이크로서비스 여부&lt;br>• 유지보수 용이성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>팀 구성 및 문화&lt;/strong>&lt;/td>
&lt;td>• 팀 규모 (현재/미래)&lt;br>• Git 사용 경험 수준&lt;br>• 개발자 숙련도&lt;br>• 분산 팀 여부&lt;br>• 협업/코드 리뷰 문화&lt;br>• 학습 곡선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 프로세스&lt;/strong>&lt;/td>
&lt;td>• 배포 빈도&lt;br>• 환경 구성&lt;br>• 롤백 필요성&lt;br>• 버전 관리 요구사항&lt;br>• 무중단 배포 필요성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>품질 관리&lt;/strong>&lt;/td>
&lt;td>• 테스트 자동화 수준&lt;br>• 코드 리뷰 정책&lt;br>• 품질 게이트&lt;br>• 문서화 요구사항&lt;br>• 모니터링 체계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>인프라 및 기술&lt;/strong>&lt;/td>
&lt;td>• CI/CD 인프라 수준&lt;br>• 자동화 도구 활용&lt;br>• 테스트 인프라&lt;br>• 운영 환경 구성&lt;br>• 기존 시스템 호환성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>비즈니스 요구사항&lt;/strong>&lt;/td>
&lt;td>• Time to Market&lt;br>• 고객 피드백 반영&lt;br>• 버그 수정 우선순위&lt;br>• 보안/규제 요구사항&lt;br>• 회사 정책&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리스크 관리&lt;/strong>&lt;/td>
&lt;td>• 통합 리스크&lt;br>• 배포 리스크&lt;br>• 품질 리스크&lt;br>• 운영 리스크&lt;br>• 롤백 계획&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성&lt;/strong>&lt;/td>
&lt;td>• 팀/프로젝트 확장 계획&lt;br>• 기술 스택 변화 대응&lt;br>• 요구사항 변화 대응&lt;br>• 장기적 유지보수&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>