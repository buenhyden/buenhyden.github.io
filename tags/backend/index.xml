<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Backend on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/backend/</link>
    <description>Recent content in Backend on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Mar 2025 03:23:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/backend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>데이터베이스 (Database)</title>
      <link>https://buenhyden.github.io/posts/databases/</link>
      <pubDate>Tue, 22 Oct 2024 19:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/</guid>
      <description>구조화된 정보 또는 데이터의 조직화된 모음으로, 일반적으로 컴퓨터 시스템에 전자적으로 저장된다.</description>
    </item>
    <item>
      <title>TCP/IP 4 Layers - 1. Network Access Layer</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-1-network-access-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-1-network-access-layer/</guid>
      <description>데이터를 전송 매체에 맞게 포맷팅하고 물리적 하드웨어 주소를 기반으로 데이터를 주소 지정한다</description>
    </item>
    <item>
      <title>TCP/IP 4계층 - 2. Internet Layer</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-2-internet-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-2-internet-layer/</guid>
      <description>인터넷 계층은 TCP/IP 프로토콜 스택에서 네트워크 간의 통신을 담당하는 핵심 계층으로, 네트워크 간 데이터 전송을 담당하며, 데이터 패킷이 출발지에서 목적지까지 효율적으로 전달되도록 라우팅과 주소 지정(Addressing)을 수행한다.</description>
    </item>
    <item>
      <title>TCP/IP 4계층 - 3. Transport Layer</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-3-transport-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-3-transport-layer/</guid>
      <description>전송 계층은 서로 다른 호스트에서 동작하는 애플리케이션 프로세스 간의 논리적 통신을 제공한다.</description>
    </item>
    <item>
      <title>Network Layer - TCP/IP 4 Layers</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/</guid>
      <description>인터넷 프로토콜 스위트의 구조를 설명하는 계층화된 모델.</description>
    </item>
    <item>
      <title>Web Server</title>
      <link>https://buenhyden.github.io/posts/backend/web-servers/</link>
      <pubDate>Mon, 21 Oct 2024 05:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/web-servers/</guid>
      <description>인터넷을 통해 클라이언트의 요청을 받아 처리하고 응답하는 소프트웨어 또는 하드웨어 시스템</description>
    </item>
    <item>
      <title>Backend</title>
      <link>https://buenhyden.github.io/posts/backend/</link>
      <pubDate>Mon, 21 Oct 2024 01:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/</guid>
      <description>웹 애플리케이션이나 소프트웨어의 서버 측 개발을 담당하는 영역</description>
    </item>
    <item>
      <title>TCP/IP 4계층 - 4. Application Layer</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-4-application-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/tcp-ip-4-layers/tcpip-4-layers-4-application-layer/</guid>
      <description>TCP/IP 프로토콜 스택에서 가장 상위 계층으로, 사용자와 가장 가까운 계층으로 이메일, 웹 서핑, 파일 전송 등의 서비스를 위한 프로토콜들이 모여 있는 계층이다.</description>
    </item>
    <item>
      <title>Web Application Server</title>
      <link>https://buenhyden.github.io/posts/backend/was/</link>
      <pubDate>Mon, 21 Oct 2024 15:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/was/</guid>
      <description>웹 애플리케이션 서버(Web Application Server, WAS)는 웹 애플리케이션의 실행 환경을 제공하고, 동적인 콘텐츠를 처리하며, 데이터베이스와의 연동을 지원하는 소프트웨어 프레임워크이다.</description>
    </item>
    <item>
      <title>APIs</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/</link>
      <pubDate>Sat, 19 Oct 2024 17:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/</guid>
      <description>소프트웨어 애플리케이션 간의 통신을 가능하게 하는 중요한 도구</description>
    </item>
    <item>
      <title>Search Engines</title>
      <link>https://buenhyden.github.io/posts/backend/search-engines/</link>
      <pubDate>Mon, 21 Oct 2024 05:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/search-engines/</guid>
      <description>방대한 데이터를 효율적으로 찾을 수 있도록 데이터를 분석하고, 색인을 만들어 관리한다.</description>
    </item>
    <item>
      <title>API Performance</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-performance/</link>
      <pubDate>Sat, 22 Feb 2025 14:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-performance/</guid>
      <description>&lt;h2 id=&#34;api-performance&#34;&gt;API Performance&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;roadmap&#34;&gt;Roadmap&lt;/h2&gt;
&lt;h2 id=&#34;roadmap---api-performance&#34;&gt;&lt;a href=&#34;https://roadmap.sh/best-practices/backend-performance&#34;&gt;Roadmap - API Performance&lt;/a&gt;&lt;/h2&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Real-time APIs</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/</link>
      <pubDate>Sun, 23 Feb 2025 15:02:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/</guid>
      <description>&lt;h2 id=&#34;real-time-apis&#34;&gt;Real-time APIs&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Synchronous vs Asynchronous APIs</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>Nginx vs Apache HTTP Server vs Caddy</title>
      <link>https://buenhyden.github.io/posts/backend/web-servers/nginx-vs-apache-tomcat-vs-caddy/</link>
      <pubDate>Tue, 22 Oct 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/web-servers/nginx-vs-apache-tomcat-vs-caddy/</guid>
      <description>Nginx, Apache HTTP Server, 그리고 Caddy는 모두 웹 서버 소프트웨어이다.</description>
    </item>
    <item>
      <title>Kafka vs RabbitMQ</title>
      <link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/kafka-vs-rabbitmq/</link>
      <pubDate>Tue, 22 Oct 2024 11:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/kafka-vs-rabbitmq/</guid>
      <description>Kafka와 RabbitMQ는 모두 메시지 브로커 시스템으로, 분산 시스템에서 데이터를 효율적으로 전송하고 처리하는 역할을 한다.</description>
    </item>
    <item>
      <title>Redis와 Valkey</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/redis%EC%99%80-valkey/</link>
      <pubDate>Tue, 22 Oct 2024 01:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/redis%EC%99%80-valkey/</guid>
      <description>Redis와 Valkey 모두 인메모리 데이터베이스로, 빠른 읽기/쓰기 성능을 제공하나, Redis의 라이선스 정책 변경으로 인해 Valkey가 fork되어 새로운 프로젝트가 되었다.</description>
    </item>
    <item>
      <title>마이그레이션 (Migration)</title>
      <link>https://buenhyden.github.io/posts/backend/scalability/migration/</link>
      <pubDate>Thu, 19 Sep 2024 15:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/scalability/migration/</guid>
      <description>IT 분야에서 데이터, 시스템, 애플리케이션 등을 한 환경에서 다른 환경으로 이동하는 과정</description>
    </item>
    <item>
      <title>Connection Pool</title>
      <link>https://buenhyden.github.io/til/2024/10/25/connection-pool/</link>
      <pubDate>Fri, 25 Oct 2024 06:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/25/connection-pool/</guid>
      <description>Connection pool은 데이터베이스 연결을 재사용 가능한 형태로 캐시하는 메커니즘이다.  이는 애플리케이션이 데이터베이스에 연결할 때마다 새로운 연결을 생성하는 대신, 미리 생성된 연결을 사용할 수 있게 해준다.</description>
    </item>
    <item>
      <title>ER(Entity-Relationship) 모델링</title>
      <link>https://buenhyden.github.io/til/2024/10/25/entity-relationship-modeling/</link>
      <pubDate>Fri, 25 Oct 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/25/entity-relationship-modeling/</guid>
      <description>실제 세계의 데이터를 개체(Entity), 관계(Relationship), 속성(Attribute)으로 표현하여 데이터베이스를 설계하는 방법</description>
    </item>
    <item>
      <title>API Gateways</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/api-gateways/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/api-gateways/</guid>
      <description>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트</description>
    </item>
    <item>
      <title>Elasticsearch and Opensearch</title>
      <link>https://buenhyden.github.io/posts/backend/search-engines/elasticsearch-and-opensearch/</link>
      <pubDate>Tue, 22 Oct 2024 06:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/search-engines/elasticsearch-and-opensearch/</guid>
      <description>Elasticsearch는 Apache Lucene 기반의 오픈소스 검색엔진이며, Opensearch는 Elasticsearch의 포크 버전</description>
    </item>
    <item>
      <title>Web Application Server (WAS) and Web Server</title>
      <link>https://buenhyden.github.io/posts/backend/web-application-server-and-web-server/</link>
      <pubDate>Tue, 22 Oct 2024 07:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/web-application-server-and-web-server/</guid>
      <description>Web Application Server와 Web Server 비교 분석한다.</description>
    </item>
    <item>
      <title>Message Queue vs Message Broker vs Event Broker</title>
      <link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/message-queue-vs-message-broker-vs-event-broker/</link>
      <pubDate>Tue, 22 Oct 2024 07:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/message-queue-vs-message-broker-vs-event-broker/</guid>
      <description>Message Queue의 Event Broker와 Message Broker를 비교한다.</description>
    </item>
    <item>
      <title>Guest OS</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/guest-os/</link>
      <pubDate>Sun, 02 Mar 2025 03:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/guest-os/</guid>
      <description>&lt;h2 id=&#34;guest-os&#34;&gt;Guest OS&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Hypervisor</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/hypervisor/</link>
      <pubDate>Sun, 02 Mar 2025 03:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/hypervisor/</guid>
      <description>&lt;h2 id=&#34;hypervisor&#34;&gt;Hypervisor&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>esxi</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/esxi/</link>
      <pubDate>Sun, 02 Mar 2025 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/esxi/</guid>
      <description>&lt;h2 id=&#34;esxi&#34;&gt;esxi&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Host OS</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/host-os/</link>
      <pubDate>Sun, 02 Mar 2025 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/host-os/</guid>
      <description>&lt;h2 id=&#34;host-os&#34;&gt;Host OS&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>proxmox</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/proxmox/</link>
      <pubDate>Sun, 02 Mar 2025 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/proxmox/</guid>
      <description>&lt;h2 id=&#34;proxmox&#34;&gt;proxmox&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>VM</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/vm/</link>
      <pubDate>Sun, 02 Mar 2025 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/vm/</guid>
      <description>&lt;h2 id=&#34;vm&#34;&gt;VM&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Rate Limiting and Throttling</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-performance/rate-limiting-and-throttling/</link>
      <pubDate>Tue, 25 Feb 2025 13:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-performance/rate-limiting-and-throttling/</guid>
      <description>&lt;h2 id=&#34;rate-limiting-and-throttling&#34;&gt;Rate Limiting and Throttling&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Webhooks vs Polling</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/</link>
      <pubDate>Sun, 23 Feb 2025 15:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/</guid>
      <description>&lt;h2 id=&#34;webhooks-vs-polling&#34;&gt;Webhooks vs Polling&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/orchestration/tools/kubernetes/</link>
      <pubDate>Mon, 11 Nov 2024 15:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/orchestration/tools/kubernetes/</guid>
      <description>컨테이너화된 애플리케이션의 배포, 확장 및 관리를 자동화하는 오픈소스 컨테이너 오케스트레이션 플랫폼</description>
    </item>
    <item>
      <title>Docker</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/tools/docker/</link>
      <pubDate>Mon, 11 Nov 2024 15:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/tools/docker/</guid>
      <description>빠르게 애플리케이션을 구축, 테스트 및 배포할 수 있도록 도와주는 컨테이너 런타임 기술</description>
    </item>
    <item>
      <title>Portainer</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/tools/portainer/</link>
      <pubDate>Mon, 11 Nov 2024 15:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/tools/portainer/</guid>
      <description>컨테이너 환경을 관리하기 위한 오픈소스 웹 기반 GUI 도구</description>
    </item>
    <item>
      <title>Virtualization</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/</link>
      <pubDate>Mon, 11 Nov 2024 13:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/</guid>
      <description>컴퓨터 리소스의 추상화를 가능하게 하는 기술</description>
    </item>
    <item>
      <title>VMware</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/vmware/</link>
      <pubDate>Mon, 11 Nov 2024 12:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/vmware/</guid>
      <description>가상화 소프트웨어로, 물리적 컴퓨터에서 여러 가상 머신(VM)을 실행할 수 있게 해주는 도구</description>
    </item>
    <item>
      <title>Envoy</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/orchestration/tools/kubernetes/envoy/</link>
      <pubDate>Mon, 11 Nov 2024 11:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/orchestration/tools/kubernetes/envoy/</guid>
      <description>Kubernetes 환경에서 널리 사용되는 고성능 프록시 서버</description>
    </item>
    <item>
      <title>Container</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/container/</link>
      <pubDate>Mon, 11 Nov 2024 06:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/container/</guid>
      <description>애플리케이션과 그 종속성을 격리된 환경에서 실행할 수 있게 해주는 경량화된 가상화 기술</description>
    </item>
    <item>
      <title>Helm</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/orchestration/tools/kubernetes/helm/</link>
      <pubDate>Mon, 11 Nov 2024 06:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/containerization/orchestration/tools/kubernetes/helm/</guid>
      <description>쿠버네티스를 위한 패키지 관리자로, 복잡한 쿠버네티스 애플리케이션의 배포와 관리를 간소화하는 도구</description>
    </item>
    <item>
      <title>VirtualBox</title>
      <link>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/virtualbox/</link>
      <pubDate>Mon, 11 Nov 2024 04:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/containerization-and-virtualization/virtualization/tools/virtualbox/</guid>
      <description>가상화 소프트웨어로, 물리적 컴퓨터에서 여러 가상 머신(VM)을 실행할 수 있게 해주는 도구</description>
    </item>
    <item>
      <title>레플리케이션 (replication)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/replication/</link>
      <pubDate>Wed, 30 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/replication/</guid>
      <description>하나의 데이터베이스(마스터 또는 프라이머리)의 데이터를 다른 데이터베이스(슬레이브 또는 세컨더리)로 복제하는 프로세스</description>
    </item>
    <item>
      <title>PCI DSS(Payment Card Industry Data Security Standard)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/standards-and-compliance/pci-dss/</link>
      <pubDate>Sun, 27 Oct 2024 13:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/standards-and-compliance/pci-dss/</guid>
      <description>PCI DSS(Payment Card Industry Data Security Standard)는 신용카드 결제 과정에서 카드 소유자의 데이터를 안전하게 보호하기 위해 주요 글로벌 카드 브랜드(Visa, MasterCard, American Express, Discover, JCB)가 공동으로 제정한 국제 보안 표준이다.</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)</title>
      <link>https://buenhyden.github.io/til/2024/10/25/database-clustering-and-replication/</link>
      <pubDate>Fri, 25 Oct 2024 15:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/25/database-clustering-and-replication/</guid>
      <description>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)은 데이터베이스의 가용성과 성능을 향상시키는 전략으로, 각각의 목적과 구현 방식에서 차이가 있다.</description>
    </item>
    <item>
      <title>데이터 불일치 (Data Inconsistency)</title>
      <link>https://buenhyden.github.io/til/2024/10/25/data-inconsistency/</link>
      <pubDate>Fri, 25 Oct 2024 07:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/25/data-inconsistency/</guid>
      <description>동일한 데이터가 데이터베이스 내의 여러 위치에서 서로 다른 형식이나 값으로 존재하는 상황</description>
    </item>
    <item>
      <title>MySQL</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/</link>
      <pubDate>Thu, 24 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/</guid>
      <description>오픈 소스 관계형 데이터베이스 관리 시스템</description>
    </item>
    <item>
      <title>PostgreSQL</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/postgresql/</link>
      <pubDate>Thu, 24 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/postgresql/</guid>
      <description>오픈 소스 관계형 데이터베이스 관리 시스템</description>
    </item>
    <item>
      <title>데이터베이스 잠금 (database lock)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/tracsaction/database-lock/</link>
      <pubDate>Thu, 24 Oct 2024 15:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/tracsaction/database-lock/</guid>
      <description>여러 사용자가 동시에 데이터에 접근할 때 데이터의 일관성과 무결성을 보장하기 위한 핵심적인 메커니즘</description>
    </item>
    <item>
      <title>트랜잭션 (Transaction)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/tracsaction/</link>
      <pubDate>Thu, 24 Oct 2024 13:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/tracsaction/</guid>
      <description>데이터베이스의 상태를 변화시키기 위해 수행하는 작업의 단위</description>
    </item>
    <item>
      <title>ACID</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/tracsaction/acid/</link>
      <pubDate>Thu, 24 Oct 2024 13:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/tracsaction/acid/</guid>
      <description>트랜잭션의 신뢰성과 일관성을 정의하는 네 가지 주요 특성</description>
    </item>
    <item>
      <title>N plus one problem</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/n-plus-one-problem/</link>
      <pubDate>Thu, 24 Oct 2024 11:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/n-plus-one-problem/</guid>
      <description>N&#43;1 문제는 하나의 쿼리로 N개의 엔티티를 조회한 후, 각 엔티티와 연관된 데이터를 조회하기 위해 N번의 추가 쿼리가 발생하는 현상을 말한다.</description>
    </item>
    <item>
      <title>프로시저 (Procedure)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/procedure/</link>
      <pubDate>Thu, 24 Oct 2024 09:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/procedure/</guid>
      <description>데이터베이스 프로시저(Database Procedure)는 데이터베이스 내에 저장되고 실행되는 일련의 SQL 문들의 집합이다.</description>
    </item>
    <item>
      <title>keyword</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/keywords/</link>
      <pubDate>Thu, 24 Oct 2024 07:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/keywords/</guid>
      <description>SQL(Structured Query Language)는 데이터베이스를 관리하고 조작하기 위한 표준 언어로, 다양한 **키워드**를 통해 데이터 정의, 조작, 제어, 트랜잭션 관리 등을 수행한다.</description>
    </item>
    <item>
      <title>ORM(Object-Relational Mapping)</title>
      <link>https://buenhyden.github.io/til/2024/10/24/orm/</link>
      <pubDate>Thu, 24 Oct 2024 03:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/24/orm/</guid>
      <description>객체 지향 프로그래밍 언어와 관계형 데이터베이스 사이의 불일치를 해결하기 위한 기술</description>
    </item>
    <item>
      <title>RDBMS</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/</link>
      <pubDate>Thu, 24 Oct 2024 01:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/</guid>
      <description>데이터를 행과 열로 이루어진 테이블 형태로 저장하고 관리하는 시스템</description>
    </item>
    <item>
      <title>SQL (Structured Query Language)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/</link>
      <pubDate>Thu, 24 Oct 2024 01:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/syntax/</guid>
      <description>관계형 데이터베이스를 관리하고 조작하기 위한 표준화된 프로그래밍 언어.</description>
    </item>
    <item>
      <title>MongoDB</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/document-oriented/mongodb/</link>
      <pubDate>Wed, 23 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/document-oriented/mongodb/</guid>
      <description>크로스 플랫폼 도큐먼트 지향 데이터베이스 시스템</description>
    </item>
    <item>
      <title>Redis</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/redis/</link>
      <pubDate>Wed, 23 Oct 2024 15:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/redis/</guid>
      <description>Remote Dictionary Server의 약자로서, &amp;#34;키-값&amp;#34; 구조의 비정형 데이터를 저장하고 관리하기 위한 오픈 소스 기반의 비관계형 데이터베이스 관리 시스템</description>
    </item>
    <item>
      <title>Column Oriented</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/column-oriented/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/column-oriented/</guid>
      <description>컬럼형 데이터베이스(Columnar database) 또는 컬럼 지향 데이터베이스(Column-oriented database)는 NoSQL 데이터베이스의 한 유형으로, 데이터를 행이 아닌 열 단위로 저장하는 특징을 가지고 있다.</description>
    </item>
    <item>
      <title>Graph</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/graph/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/graph/</guid>
      <description>그래프 데이터베이스는 NoSQL 데이터베이스의 한 유형으로, 데이터를 노드(Node)와 엣지(Edge)로 구성된 그래프 구조로 저장하고 관리하는 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Time-Series</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/time-series/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/time-series/</guid>
      <description>시계열 데이터베이스(Time Series Database, TSDB)는 NoSQL 데이터베이스의 한 종류로, 시간에 따라 변화하는 데이터를 효율적으로 저장하고 관리하기 위해 특별히 설계된 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Vector</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/vector/</link>
      <pubDate>Wed, 23 Oct 2024 12:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/vector/</guid>
      <description>벡터 데이터베이스(Vector Database)는 NoSQL 데이터베이스의 한 종류로, 고차원 벡터 데이터를 효율적으로 저장하고 검색하기 위해 설계된 특수한 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>NoSQL</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/</link>
      <pubDate>Wed, 23 Oct 2024 06:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/</guid>
      <description>NoSQL(Not Only SQL)은 전통적인 관계형 데이터베이스와는 다른 방식으로 데이터를 저장하고 처리하는 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Document Oriented</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/document-oriented/</link>
      <pubDate>Wed, 23 Oct 2024 06:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/document-oriented/</guid>
      <description>Document-Oriented Database는 NoSQL 데이터베이스의 한 유형으로, 데이터를 문서 형태로 저장하고 관리하는 시스템이다.</description>
    </item>
    <item>
      <title>Key-Value</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/</link>
      <pubDate>Wed, 23 Oct 2024 06:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/</guid>
      <description>In-Memory 데이터베이스는 데이터를 주 메모리(RAM)에 저장하고 관리하는 NoSQL 데이터베이스 시스템이다.</description>
    </item>
    <item>
      <title>Valkey</title>
      <link>https://buenhyden.github.io/posts/databases/nosql/key-value/valkey/</link>
      <pubDate>Wed, 23 Oct 2024 01:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/nosql/key-value/valkey/</guid>
      <description>Valkey는 선택적 내구성을 갖춘 분산형 인메모리 키-값 데이터베이스, 캐시 및 메시지 브로커로 사용되는 오픈 소스 인메모리 스토리지.</description>
    </item>
    <item>
      <title>Cardinality</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/cardinality/</link>
      <pubDate>Tue, 22 Oct 2024 15:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/cardinality/</guid>
      <description>두 엔티티 간의 최대 연관성 혹은 특정 컬럼에 존재하는 고유한 값의 개수를 의미한다.</description>
    </item>
    <item>
      <title>분산 쿼리 (distributed query)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-query/</link>
      <pubDate>Tue, 22 Oct 2024 09:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-query/</guid>
      <description>여러 노드에 분산된 데이터를 대상으로 쿼리를 실행하고 결과를 얻는 과정</description>
    </item>
    <item>
      <title>분산 트랜잭션 (Distributed transaction)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-transaction/</link>
      <pubDate>Tue, 22 Oct 2024 09:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/distributed-transaction/</guid>
      <description>여러 분산된 데이터베이스 노드에서 수행되는 하나의 논리적 작업 단위를 의미한다</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링(Database Clustering)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/database-clustering/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/database-clustering/</guid>
      <description>하나의 데이터베이스를 여러 개의 서버 또는 인스턴스로 구성하여 운영하는 기술</description>
    </item>
    <item>
      <title>데이터베이스 파티셔닝 (Database Partitioning)</title>
      <link>https://buenhyden.github.io/posts/databases/database-optimization/partitioning/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/database-optimization/partitioning/</guid>
      <description>파티셔닝은 큰 테이블이나 인덱스를 더 작고 관리하기 쉬운 단위로 나누는 것</description>
    </item>
    <item>
      <title>샤딩 (sharding)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sharding/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sharding/</guid>
      <description>대규모 데이터베이스 시스템에서 데이터를 수평적으로 분할하여 여러 서버에 분산 저장하는 기술</description>
    </item>
    <item>
      <title>데이터베이스 캐싱 (Database Caching)</title>
      <link>https://buenhyden.github.io/posts/system-design/caching/types/database-caching/</link>
      <pubDate>Tue, 22 Oct 2024 06:25:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/caching/types/database-caching/</guid>
      <description>자주 사용되는 데이터를 빠르게 접근할 수 있는 메모리에 임시로 저장하는 기술</description>
    </item>
    <item>
      <title>분산 데이터베이스 (Distributed Database)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/</link>
      <pubDate>Tue, 22 Oct 2024 06:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/distributed-database/</guid>
      <description>물리적으로 여러 위치에 분산되어 있지만, 논리적으로는 하나의 데이터베이스처럼 동작하는 시스템</description>
    </item>
    <item>
      <title>데이터베이스 최적화 (Database Optimization)</title>
      <link>https://buenhyden.github.io/posts/databases/database-optimization/</link>
      <pubDate>Tue, 22 Oct 2024 06:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/database-optimization/</guid>
      <description>데이터베이스 시스템의 성능을 향상시키고 효율성을 높이기 위한 다양한 기법과 프로세스를 의미한다.</description>
    </item>
    <item>
      <title>SingleStore</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/singlestore/</link>
      <pubDate>Tue, 22 Oct 2024 03:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/singlestore/</guid>
      <description>&lt;h2 id=&#34;singlestore&#34;&gt;SingleStore&lt;/h2&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;img alt=&#34;SingleStore&#34; loading=&#34;lazy&#34; src=&#34;https://buenhyden.github.io/img/singlestore-connect_diagram_cloud_img-1.webp&#34;&gt;&lt;figcaption&gt;https://www.singlestore.com/blog/singlestore-connect-for-real-time-enterprises/&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>데이터베이스 인덱싱 (Database Indexing)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/indexes/</link>
      <pubDate>Tue, 22 Oct 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/indexes/</guid>
      <description>인덱스는 테이블의 특정 컬럼에 대한 검색을 빠르게 수행할 수 있도록 도와주는 자료 구조</description>
    </item>
    <item>
      <title>데이터베이스 정규화 (Database Normalization)</title>
      <link>https://buenhyden.github.io/posts/databases/database-optimization/normalization/</link>
      <pubDate>Tue, 22 Oct 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/database-optimization/normalization/</guid>
      <description>관계형 데이터베이스의 설계를 체계화하고 최적화하는 과정</description>
    </item>
    <item>
      <title>Apache HTTP Server</title>
      <link>https://buenhyden.github.io/posts/backend/web-servers/apache-http-server/</link>
      <pubDate>Mon, 21 Oct 2024 11:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/web-servers/apache-http-server/</guid>
      <description>Apache HTTP Server는 가장 널리 사용되는 오픈 소스 웹 서버 소프트웨어이다.</description>
    </item>
    <item>
      <title>Caddy</title>
      <link>https://buenhyden.github.io/posts/backend/web-servers/caddy/</link>
      <pubDate>Mon, 21 Oct 2024 08:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/web-servers/caddy/</guid>
      <description>Caddy는 Go 언어로 작성된 현대적이고 강력한 오픈 소스 웹 서버이다.</description>
    </item>
    <item>
      <title>Nginx</title>
      <link>https://buenhyden.github.io/posts/backend/web-servers/nginx/</link>
      <pubDate>Mon, 21 Oct 2024 08:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/web-servers/nginx/</guid>
      <description>Nginx는 고성능의 오픈 소스 웹 서버 소프트웨어로, 웹 서버, 리버스 프록시, 로드 밸런서 등 다양한 기능을 제공한다.</description>
    </item>
    <item>
      <title>Message Queue</title>
      <link>https://buenhyden.github.io/posts/system-design/asynchronism/message-queues/</link>
      <pubDate>Mon, 21 Oct 2024 06:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/asynchronism/message-queues/</guid>
      <description>메시지 큐는 프로그램, 네트워크, 서비스 간에 데이터를 주고받을 때 사용하는 비동기 통신 방법</description>
    </item>
    <item>
      <title>Event Broker</title>
      <link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/event-broker/</link>
      <pubDate>Mon, 21 Oct 2024 06:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/event-broker/</guid>
      <description>이벤트 생성자(Producer)와 이벤트 소비자(Consumer) 사이에서 중개자 역할을 수행한다</description>
    </item>
    <item>
      <title>Message Broker</title>
      <link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/message-broker/</link>
      <pubDate>Mon, 21 Oct 2024 05:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/message-broker/</guid>
      <description>소프트웨어 애플리케이션, 시스템 및 서비스 간의 통신을 가능하게 하는 중간 소프트웨어 모듈</description>
    </item>
    <item>
      <title>Kafka</title>
      <link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/kafka/</link>
      <pubDate>Mon, 21 Oct 2024 00:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/kafka/</guid>
      <description>데이터 파이프라인을 구축하기 위한 분산 메시징 시스템으로, 실시간 데이터 파이프라인과 스트리밍 애플리케이션을 구축하는 데 사용된다.</description>
    </item>
    <item>
      <title>RabbitMQ</title>
      <link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/rabbitmq/</link>
      <pubDate>Mon, 21 Oct 2024 00:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/rabbitmq/</guid>
      <description>RabbitMQ는 오픈 소스 메시지 브로커 소프트웨어로, 다양한 애플리케이션, 서비스, 시스템 간의 통신을 용이하게 한다.</description>
    </item>
    <item>
      <title>폴링(Polling)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/polling/</link>
      <pubDate>Sun, 20 Oct 2024 16:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/polling/</guid>
      <description>폴링(Polling)은 소프트웨어 개발에서 중요한 통신 기법으로, 클라이언트가 주기적으로 서버에 데이터나 상태 변경을 요청하는 방식이다.</description>
    </item>
    <item>
      <title>웹훅 (Webhook)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/webhook/</link>
      <pubDate>Sat, 19 Oct 2024 06:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/webhook/</guid>
      <description>웹훅은 웹 애플리케이션에서 특정 이벤트가 발생했을 때 다른 애플리케이션에 실시간으로 정보를 전달하는 방법이다.</description>
    </item>
    <item>
      <title>WebRTC(Web Real-Time Communication) API</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/webrtc-api/</link>
      <pubDate>Sat, 19 Oct 2024 06:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/webrtc-api/</guid>
      <description>WebRTC(Web Real-Time Communication) API는 웹 브라우저 간에 플러그인 없이 실시간 통신을 가능하게 하는 기술.</description>
    </item>
    <item>
      <title>Server sent Events</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/server-sent-events/</link>
      <pubDate>Sat, 19 Oct 2024 06:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/server-sent-events/</guid>
      <description>SSE는 서버가 클라이언트로 단방향 실시간 이벤트 스트림을 전송할 수 있게 해주는 웹 기술</description>
    </item>
    <item>
      <title>WebSocket API</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/websocket-api/</link>
      <pubDate>Sat, 19 Oct 2024 05:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/real-time-apis/websocket-api/</guid>
      <description>WebSocket API는 WebSocket 프로토콜을 사용하여 클라이언트와 서버 간의 양방향, 실시간 통신을 가능하게 하는 웹 API이다.</description>
    </item>
    <item>
      <title>멱등성 (Idempotency)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/idempotency/</link>
      <pubDate>Fri, 18 Oct 2024 16:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/idempotency/</guid>
      <description>일한 동요청을 여러 번 수행해도 시스템의 상태가 한 번 수행한 것과 동일한 결과를 보장하는 속성</description>
    </item>
    <item>
      <title>안전한 메서드 (Safe Methods)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/safe-methods/</link>
      <pubDate>Fri, 18 Oct 2024 16:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/safe-methods/</guid>
      <description>서버의 상태를 변경하지 않는 HTTP 메서드</description>
    </item>
    <item>
      <title>CORS</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/cors/</link>
      <pubDate>Fri, 18 Oct 2024 07:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/cors/</guid>
      <description>다른 출처(Origin)의 리소스를 공유하기 위한 보안 메커니즘</description>
    </item>
    <item>
      <title>Cookies</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/cookies/</link>
      <pubDate>Fri, 18 Oct 2024 07:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/cookies/</guid>
      <description>웹사이트가 사용자의 브라우저에 저장하는 작은 텍스트 파일</description>
    </item>
    <item>
      <title>HTTP Cache</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-cache/</link>
      <pubDate>Fri, 18 Oct 2024 07:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-cache/</guid>
      <description>웹 브라우저나 서버에서 데이터를 임시 저장하는 기술</description>
    </item>
    <item>
      <title>HTTP Headers</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-headers/</link>
      <pubDate>Fri, 18 Oct 2024 07:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-headers/</guid>
      <description>HTTP 요청이나 응답에서 전달할 부가적인 정보를 담는 데이터</description>
    </item>
    <item>
      <title>HTTP Request Methods</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-request-methods/</link>
      <pubDate>Fri, 18 Oct 2024 07:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-request-methods/</guid>
      <description>클라이언트가 서버에 특정 작업을 요청하기 위해 사용하는 방식</description>
    </item>
    <item>
      <title>HTTP Status Code</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-status-code/</link>
      <pubDate>Fri, 18 Oct 2024 07:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/http-status-code/</guid>
      <description>서버가 클라이언트의 요청에 대한 응답 상태를 나타내는 3자리 숫자.</description>
    </item>
    <item>
      <title>URI</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/uri/</link>
      <pubDate>Fri, 18 Oct 2024 04:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/uri/</guid>
      <description>인터넷 상의 자원을 고유하게 식별하기 위한 문자열로 URL과 URN은 모두 URI의 하위 개념이라고 볼 수 있다.</description>
    </item>
    <item>
      <title>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/http/</link>
      <pubDate>Fri, 18 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/http/</guid>
      <description>웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다</description>
    </item>
    <item>
      <title>DNS 캐싱 (DNS Caching)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/dns-caching/</link>
      <pubDate>Thu, 17 Oct 2024 07:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/dns-caching/</guid>
      <description>DNS 캐싱은 이전에 조회한 도메인 이름과 IP 주소의 매핑 정보를 임시로 저장하는 메커니즘이다.</description>
    </item>
    <item>
      <title>DNS Records</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/dns-records/</link>
      <pubDate>Thu, 17 Oct 2024 07:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/dns-records/</guid>
      <description>DNS Records는 도메인 이름 시스템(DNS)에서 사용되는 데이터 구조로, 도메인과 관련된 다양한 정보를 저장한다.</description>
    </item>
    <item>
      <title>DNS(Domain Name System)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/</guid>
      <description>도메인은 인터넷 상의 주소 체계를 의미하며, 웹사이트나 네트워크 리소스를 식별하는 고유한 이름이며, dns는 특정 컴퓨터(또는 네트워크로 연결된 임의의 장치)의 주소를 찾기 위해, 사람이 이해하기 쉬운 호스트 이름(예: www.example.com)을  실제 네트워크 상에서 사용하는 IP주소(예: 192.168.1.1)로 변환하고 해당 IP 주소로 접속하는 일련의 시스템</description>
    </item>
    <item>
      <title>Domain</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/domain/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/basics/domain-name-system/domain/</guid>
      <description>도메인(Domain)은 인터넷 상의 계층적 주소 체계로, 사용자가 이해하기 쉬운 형태의 웹사이트 주소를 제공한다.</description>
    </item>
    <item>
      <title>동기(Synchronous)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/synchronous/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/synchronous/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>비동기(Asynchronous)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/asynchronous/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/asynchronous/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>Metric</title>
      <link>https://buenhyden.github.io/posts/backend/scalability/observability/metric/</link>
      <pubDate>Sat, 28 Sep 2024 02:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/scalability/observability/metric/</guid>
      <description>Metric는 시스템의 상태, 동작, 성능 등을 나타내는 수치화된 측정값</description>
    </item>
    <item>
      <title>Trace</title>
      <link>https://buenhyden.github.io/posts/backend/scalability/observability/trace/</link>
      <pubDate>Sat, 28 Sep 2024 02:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/scalability/observability/trace/</guid>
      <description>분산 시스템에서 요청이나 트랜잭션이 여러 서비스와 컴포넌트를 통과하는 전체 여정을 기록한 것</description>
    </item>
    <item>
      <title>Log</title>
      <link>https://buenhyden.github.io/posts/backend/scalability/observability/log/</link>
      <pubDate>Sat, 28 Sep 2024 02:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/scalability/observability/log/</guid>
      <description>Log는 애플리케이션 실행 시 생성되는 텍스트 기반의 기록이다. 이는 구조화된 형식(예: JSON)이나 비구조화된 텍스트 형식으로 제공될 수 있다.</description>
    </item>
    <item>
      <title>Observability</title>
      <link>https://buenhyden.github.io/posts/backend/scalability/observability/</link>
      <pubDate>Sat, 28 Sep 2024 02:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/scalability/observability/</guid>
      <description>외부 출력(로그, 메트릭, 트레이스)을 분석하여 시스템의 내부 상태를 이해하는 방식으로 단순한 모니터링을 넘어 텔레메트리 데이터를 수집, 분석, 해석 및 시각화한다.</description>
    </item>
  </channel>
</rss>
