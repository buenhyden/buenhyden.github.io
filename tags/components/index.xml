<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Components on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/components/</link>
    <description>Recent content in Components on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Jan 2025 14:20:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/components/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>State Representation</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/state-representation/</link>
      <pubDate>Tue, 21 Jan 2025 14:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/state-representation/</guid>
      <description>상태 표현은 문제 해결 과정에서 현재까지의 결정과 남은 선택지를 효과적으로 나타내는 방법이다.</description>
    </item>
    <item>
      <title>Branching Strategies</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/branching-strategies/</link>
      <pubDate>Tue, 21 Jan 2025 14:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/branching-strategies/</guid>
      <description>분기 전략은 현재 부분 문제를 더 작은 하위 문제로 분할하는 방식을 정의한다. 이 과정에서 해결책 공간은 상호 배타적인 부분 공간으로 나뉘며, 이들을 모두 합치면 원래의 해결책 공간을 완전히 포함한다.</description>
    </item>
    <item>
      <title>한계 함수(Bounding Functions)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/</link>
      <pubDate>Fri, 03 Jan 2025 11:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/</guid>
      <description>한계 함수는 분기한정법의 효율성을 결정짓는 중요한 요소로, 불필요한 탐색을 줄이고 최적해를 빠르게 찾는 데 결정적인 역할을 한다.</description>
    </item>
    <item>
      <title>Search Strategies</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/</link>
      <pubDate>Tue, 21 Jan 2025 06:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/</guid>
      <description>&lt;h2 id=&#34;search-strategies&#34;&gt;Search Strategies&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Hash Table</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/hashing/components/hash-table/</link>
      <pubDate>Thu, 23 Jan 2025 14:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/hashing/components/hash-table/</guid>
      <description>&lt;h2 id=&#34;hash-table&#34;&gt;Hash Table&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Base Case</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/dynamic-programming/components/base-case/</link>
      <pubDate>Wed, 22 Jan 2025 14:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/dynamic-programming/components/base-case/</guid>
      <description>&lt;h2 id=&#34;base-case&#34;&gt;Base Case&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>State Transition Equation</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/dynamic-programming/components/state-transition-equation/</link>
      <pubDate>Wed, 22 Jan 2025 14:02:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/dynamic-programming/components/state-transition-equation/</guid>
      <description>&lt;h2 id=&#34;state-transition-equation&#34;&gt;State Transition Equation&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Least Lower Bound</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/least-lower-bound/</link>
      <pubDate>Fri, 03 Jan 2025 11:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/least-lower-bound/</guid>
      <description>&lt;h2 id=&#34;least-lower-bound&#34;&gt;Least Lower Bound&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Best-First Search</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/best-first-search/</link>
      <pubDate>Fri, 03 Jan 2025 11:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/best-first-search/</guid>
      <description>&lt;h2 id=&#34;best-first-search&#34;&gt;Best-First Search&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Breadth-First Search</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/breadth-first-search/</link>
      <pubDate>Fri, 03 Jan 2025 11:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/breadth-first-search/</guid>
      <description>&lt;h2 id=&#34;breadth-first-search&#34;&gt;Breadth-First Search&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Depth-First Search</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/depth-first-search/</link>
      <pubDate>Fri, 03 Jan 2025 11:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/search-strategies/depth-first-search/</guid>
      <description>&lt;h2 id=&#34;depth-first-search&#34;&gt;Depth-First Search&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Lagrangian Relaxation</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/lagrangian-relaxation/</link>
      <pubDate>Fri, 03 Jan 2025 11:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/lagrangian-relaxation/</guid>
      <description>&lt;h2 id=&#34;lagrangian-relaxation&#34;&gt;Lagrangian Relaxation&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Linear Programming Relaxation</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/linear-programming-relaxation/</link>
      <pubDate>Fri, 03 Jan 2025 11:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/linear-programming-relaxation/</guid>
      <description>&lt;h2 id=&#34;linear-programming-relaxation&#34;&gt;Linear Programming Relaxation&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Relaxation</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/relaxation/</link>
      <pubDate>Fri, 03 Jan 2025 11:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/branch-and-bound/components/bounding-functions/relaxation/</guid>
      <description>&lt;h2 id=&#34;relaxation&#34;&gt;Relaxation&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>해시 함수 (Hash Function)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/hashing/components/hash-function/</link>
      <pubDate>Sat, 09 Nov 2024 21:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/hashing/components/hash-function/</guid>
      <description>임의의 길이의 데이터를 고정된 길이의 데이터로 매핑하는 함수</description>
    </item>
    <item>
      <title>컴퓨터 구성 요소 (Components of Computer Architecture)</title>
      <link>https://buenhyden.github.io/posts/computer-science/computer-system/computer-architecture/components-of-computer-architecture/</link>
      <pubDate>Sun, 29 Sep 2024 16:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/computer-system/computer-architecture/components-of-computer-architecture/</guid>
      <description>이 구성 요소들의 상호작용을 통해 컴퓨터가 작동하게 된다.</description>
    </item>
  </channel>
</rss>
