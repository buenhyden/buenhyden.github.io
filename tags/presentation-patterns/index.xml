<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Presentation-Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/presentation-patterns/</link>
    <description>Recent content in Presentation-Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Fri, 27 Sep 2024 11:26:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/presentation-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Model-View-ViewModel Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-styles/layered-architecture/presentation-patterns/mvvm/</link>
      <pubDate>Fri, 27 Sep 2024 11:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-styles/layered-architecture/presentation-patterns/mvvm/</guid>
      <description>MVVM(Model-View-ViewModel) 패턴은 소프트웨어 아키텍처 패턴 중 하나로, 사용자 인터페이스(UI)와 비즈니스 로직을 효과적으로 분리하여 코드의 유지보수성과 재사용성을 향상시키는 데 중점을 둔다.</description>
    </item>
    <item>
      <title>Model–view–presenter Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-styles/layered-architecture/presentation-patterns/mvp/</link>
      <pubDate>Fri, 27 Sep 2024 09:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-styles/layered-architecture/presentation-patterns/mvp/</guid>
      <description>Model-View-Presenter(MVP) 패턴은 사용자 인터페이스 개발을 위한 아키텍처 패턴으로, **관심사 분리** 원칙에 기반해 UI 로직과 비즈니스 로직을 분리한다.</description>
    </item>
    <item>
      <title>MVC (Model-View-Controller)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-styles/layered-architecture/presentation-patterns/mvc/</link>
      <pubDate>Fri, 27 Sep 2024 08:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-styles/layered-architecture/presentation-patterns/mvc/</guid>
      <description>MVC는 Trygve Reenskaug가 제안한 UI 아키텍처로, Model(데이터/로직), View(화면), Controller(입력 처리)를 분리하여 관심사를 분리하고, View는 Observer 패턴으로 Model 변화를 반영한다.</description>
    </item>
  </channel>
</rss>
