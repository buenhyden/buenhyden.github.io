<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Asynchronous-Communication-Pattern</title><link>https://buenhyden.github.io/tags/asynchronous-communication-pattern/</link><description>Recent content in Asynchronous-Communication-Pattern on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 28 Dec 2024 12:41:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/asynchronous-communication-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Communication Patterns</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/</link><pubDate>Sat, 28 Dec 2024 12:41:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/</guid><description>
&lt;h2>Communication Patterns&lt;span class="hx-absolute -hx-mt-20" id="communication-patterns">&lt;/span>
&lt;a href="#communication-patterns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>통신 패턴들은 마이크로서비스 아키텍처에서 서비스 간의 효율적인 통신을 가능하게 하며, 시스템의 확장성, 유연성, 성능을 향상시키는 데 중요한 역할을 한다. 각 패턴은 특정 상황과 요구사항에 따라 선택되어 사용되며, 때로는 여러 패턴을 조합하여 사용하기도 한다.&lt;/p>
&lt;p>비동기 통신 패턴과 메시지 기반 통신 패턴은 유사한 특성을 가지고 있으며, 둘 다 높은 확장성과 성능을 제공한다.&lt;br>
동기 통신 패턴은 구현이 간단하지만 확장성과 성능 면에서 제한적이다.&lt;br>
발행/구독 패턴은 가장 낮은 결합도와 높은 확장성을 제공하지만, 구현 복잡성이 높다.&lt;/p>
&lt;p>&lt;img src="1895.1550201849.png" alt="Illustrating the call flows of sync and async communication. Source: Walking Tree Technologies 2018." loading="lazy" />&lt;br>
_Source: &lt;a href="https://devopedia.org/inter-service-communication-for-microservices" target="_blank" rel="noopener">https://devopedia.org/inter-service-communication-for-microservices&lt;/a> _&lt;/p>
&lt;p>마이크로서비스 아키텍처에서는 서비스 간의 느슨한 결합과 높은 확장성이 중요하기 때문에, 비동기 통신 패턴, 메시지 기반 통신 패턴, 그리고 발행/구독 패턴이 더 널리 사용되는 경향이 있다.&lt;/p>
&lt;p>이러한 통신 패턴들은 다음과 같은 목적을 위해 사용된다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>유연성과 확장성 향상&lt;/strong>:&lt;br>
이러한 패턴들은 서비스 간의 결합도를 낮추어 시스템의 유연성과 확장성을 높인다.&lt;br>
특히 비동기 통신과 발행/구독 패턴은 서비스를 독립적으로 확장할 수 있게 해준다.&lt;/li>
&lt;li>&lt;strong>성능 최적화&lt;/strong>:&lt;br>
비동기 통신과 메시지 기반 통신은 시스템의 전반적인 성능을 향상시킬 수 있다.&lt;br>
서비스가 다른 서비스의 응답을 기다리지 않고 작업을 계속할 수 있어 리소스를 효율적으로 사용할 수 있다.&lt;/li>
&lt;li>&lt;strong>장애 격리&lt;/strong>:&lt;br>
이러한 패턴들은 서비스 간의 의존성을 줄여 한 서비스의 장애가 전체 시스템으로 전파되는 것을 방지한다.&lt;br>
특히 비동기 통신과 메시지 기반 통신은 일시적인 서비스 중단을 더 잘 처리할 수 있다.&lt;/li>
&lt;li>&lt;strong>이벤트 기반 아키텍처 지원&lt;/strong>:&lt;br>
발행/구독 패턴과 메시지 기반 통신은 이벤트 기반 아키텍처를 구현하는 데 매우 유용하다.&lt;br>
이는 시스템이 실시간으로 변화에 반응할 수 있게 해준다.&lt;/li>
&lt;li>&lt;strong>분산 시스템 구현&lt;/strong>:&lt;br>
이러한 패턴들은 분산 시스템을 구현하는 데 필수적이다.&lt;br>
서비스 간의 효율적인 통신을 가능하게 하여 복잡한 분산 시스템을 구축하고 관리할 수 있게 해준다.&lt;/li>
&lt;li>&lt;strong>비즈니스 요구사항 대응&lt;/strong>:&lt;br>
다양한 통신 패턴을 사용함으로써 다양한 비즈니스 요구사항에 더 잘 대응할 수 있다.&lt;br>
예를 들어, 실시간 처리가 필요한 경우 비동기 통신을, 즉각적인 응답이 필요한 경우 동기 통신을 사용할 수 있다.&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>항목&lt;/th>
&lt;th>Synchronous Communication&lt;/th>
&lt;th>Asynchronous Communication&lt;/th>
&lt;th>Request-Response Pattern&lt;/th>
&lt;th>Message-based Communication&lt;/th>
&lt;th>Publisher-Subscriber Pattern&lt;/th>
&lt;th>Event-Driven Pattern&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 개념&lt;/strong>&lt;/td>
&lt;td>- 요청-응답 기반 통신&lt;br>- 호출자가 응답을 기다림&lt;br>- 직접적인 서비스 간 통신&lt;/td>
&lt;td>- 비동기 요청-응답&lt;br>- 호출자가 응답을 기다리지 않음&lt;br>- 콜백이나 이벤트로 결과 처리&lt;/td>
&lt;td>- 클라이언트가 서버에 요청을 보내고 응답을 받음&lt;br>1:1 통신&lt;br>- 요청-응답 사이클 기반&lt;br>- 서비스 간 직접 통신&lt;/td>
&lt;td>- 메시지 큐를 통한 통신&lt;br>- 메시지 브로커 사용&lt;br>- 메시지 기반의 비동기 처리&lt;/td>
&lt;td>- 이벤트 기반 통신&lt;br>- 발행자와 구독자의 분리&lt;br>- 다대다 통신 지원&lt;/td>
&lt;td>- 이벤트 생성과 소비 기반&lt;br>- 이벤트 브로커 사용&lt;br>- 이벤트 중심 비즈니스 로직&lt;br>- 느슨한 결합 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>통신 방식&lt;/strong>&lt;/td>
&lt;td>- REST API&lt;br>gRPC&lt;br>GraphQL&lt;/td>
&lt;td>- 웹소켓&lt;br>Server-Sent Events&lt;br>Long Polling&lt;/td>
&lt;td>- HTTP/REST API&lt;br>gRPC&lt;br>GraphQL&lt;br>SOAP&lt;/td>
&lt;td>- Apache Kafka&lt;br>RabbitMQ&lt;br>Amazon SQS&lt;/td>
&lt;td>- Apache Kafka&lt;br>Redis Pub/Sub&lt;br>RabbitMQ&lt;/td>
&lt;td>- Event Bus&lt;br>Message Broker&lt;br>Event Stream&lt;br>Webhook&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장점&lt;/strong>&lt;/td>
&lt;td>- 구현이 단순&lt;br>- 즉각적인 응답&lt;br>- 직관적인 에러 처리&lt;br>- 트랜잭션 관리 용이&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 성능 향상&lt;br>- 서비스 간 느슨한 결합&lt;br>- 부하 분산 용이&lt;/td>
&lt;td>- 직관적인 구현&lt;br>- 즉각적인 피드백&lt;br>- 간단한 디버깅&lt;br>- 명확한 인터페이스&lt;/td>
&lt;td>- 안정적인 메시지 전달&lt;br>- 시스템 복원력 향상&lt;br>- 부하 처리 우수&lt;br>- 메시지 영속성&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 유연한 시스템 구조&lt;br>- 실시간 이벤트 처리&lt;br>- 다중 구독자 지원&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 느슨한 결합&lt;br>- 유연한 시스템 구조&lt;br>- 실시간 처리 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단점&lt;/strong>&lt;/td>
&lt;td>- 강한 결합&lt;br>- 확장성 제한&lt;br>- 지연 시간 증가&lt;br>- 단일 장애점 위험&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 디버깅 어려움&lt;br>- 일관성 보장 어려움&lt;br>- 추적성 관리 필요&lt;/td>
&lt;td>- 강한 결합도&lt;br>- 동기 처리의 제약&lt;br>- 확장성 제한&lt;br>- 대기 시간 증가&lt;/td>
&lt;td>- 메시지 브로커 의존성&lt;br>- 시스템 복잡도 증가&lt;br>- 추가 인프라 필요&lt;br>- 운영 비용 증가&lt;/td>
&lt;td>- 메시지 순서 보장 어려움&lt;br>- 시스템 복잡도 증가&lt;br>- 메시지 신뢰성 관리 필요&lt;br>- 구독자 관리 부담&lt;/td>
&lt;td>- 복잡한 이벤트 추적&lt;br>- 일관성 보장 어려움&lt;br>- 이벤트 순서 관리&lt;br>- 시스템 복잡도 증가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적용 사례&lt;/strong>&lt;/td>
&lt;td>- 사용자 인증&lt;br>- 결제 처리&lt;br>CRUD 작업&lt;br>- 실시간 조회&lt;/td>
&lt;td>- 알림 시스템&lt;br>- 로그 처리&lt;br>- 비동기 작업&lt;br>- 배치 처리&lt;/td>
&lt;td>- API 호출&lt;br>- 데이터 조회&lt;br>- 인증/인가&lt;br>- 단순 CRUD 작업&lt;/td>
&lt;td>- 주문 처리&lt;br>- 재고 관리&lt;br>- 이메일 발송&lt;br>- 작업 큐 관리&lt;/td>
&lt;td>- 실시간 모니터링&lt;br>- 이벤트 스트리밍&lt;br>- 로그 수집&lt;br>- 메트릭 수집&lt;/td>
&lt;td>- 실시간 분석&lt;br>- 워크플로우 관리&lt;br>- 도메인 이벤트 처리&lt;br>- 시스템 통합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- 낮은 지연 시간&lt;br>- 높은 일관성&lt;br>- 제한된 처리량&lt;br>- 리소스 사용 증가&lt;/td>
&lt;td>- 변동적 지연 시간&lt;br>- 높은 처리량&lt;br>- 리소스 효율성&lt;br>- 부하 분산 가능&lt;/td>
&lt;td>- 예측 가능한 지연시간&lt;br>- 높은 일관성&lt;br>- 제한된 처리량&lt;br>- 동시성 제약&lt;/td>
&lt;td>- 안정적인 처리량&lt;br>- 메시지 보장&lt;br>- 부하 조절 가능&lt;br>- 장애 복구 지원&lt;/td>
&lt;td>- 높은 처리량&lt;br>- 실시간 성능&lt;br>- 확장성 우수&lt;br>- 부하 분산 자동화&lt;/td>
&lt;td>- 높은 처리량&lt;br>- 비동기 처리&lt;br>- 확장성 우수&lt;br>- 이벤트 버퍼링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설계 고려사항&lt;/strong>&lt;/td>
&lt;td>- 타임아웃 설정&lt;br>- 서킷 브레이커 적용&lt;br>- 재시도 정책&lt;br>- 에러 처리&lt;/td>
&lt;td>- 메시지 순서&lt;br>- 상태 관리&lt;br>- 장애 처리&lt;br>- 모니터링&lt;/td>
&lt;td>- 타임아웃 설정&lt;br>- 재시도 정책&lt;br>- 서킷브레이커&lt;br>API 버전 관리&lt;/td>
&lt;td>- 메시지 포맷&lt;br>- 큐 관리&lt;br>- 데드레터 큐&lt;br>- 메시지 라우팅&lt;/td>
&lt;td>- 이벤트 스키마&lt;br>- 구독자 관리&lt;br>- 메시지 필터링&lt;br>- 장애 복구&lt;/td>
&lt;td>- 이벤트 스키마&lt;br>- 이벤트 저장소&lt;br>- 이벤트 라우팅&lt;br>- 실패 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모니터링/운영&lt;/strong>&lt;/td>
&lt;td>- 응답 시간&lt;br>- 에러율&lt;br>- 서비스 상태&lt;br>- 트래픽 패턴&lt;/td>
&lt;td>- 메시지 처리율&lt;br>- 큐 길이&lt;br>- 처리 지연&lt;br>- 실패율&lt;/td>
&lt;td>- 응답 시간&lt;br>- 요청 성공률&lt;br>API 사용량&lt;br>- 에러율&lt;/td>
&lt;td>- 큐 상태&lt;br>- 처리량&lt;br>- 브로커 상태&lt;br>- 메시지 적체&lt;/td>
&lt;td>- 이벤트 처리율&lt;br>- 구독자 상태&lt;br>- 전달 지연&lt;br>- 시스템 부하&lt;/td>
&lt;td>- 이벤트 처리율&lt;br>- 이벤트 지연시간&lt;br>- 이벤트 큐 상태&lt;br>consumer 상태&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Request-Response Pattern은 Synchronous Communication과 많은 특징을 공유하지만, 비동기적으로도 구현될 수 있어 더 유연하다.&lt;/li>
&lt;li>Event-Driven Pattern은 Publisher-Subscriber Pattern과 유사하나, 이벤트의 발생과 처리에 더 중점을 두며 시스템 전체의 아키텍처적 관점을 가진다.&lt;/li>
&lt;li>두 패턴 모두 다른 패턴들과 조합하여 사용될 수 있으며, 특히 마이크로서비스 아키텍처에서는 여러 패턴을 상황에 맞게 혼용하는 것이 일반적이다.&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>패턴 선택 기준&lt;/p>
&lt;ul>
&lt;li>실시간성이 필요한 경우: Synchronous Communication&lt;/li>
&lt;li>높은 확장성이 필요한 경우: Asynchronous 또는 Pub/Sub&lt;/li>
&lt;li>안정적인 메시지 전달이 중요한 경우: Message-based&lt;/li>
&lt;li>이벤트 기반 처리가 필요한 경우: Publisher-Subscriber&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>패턴 조합 사용&lt;/p>
&lt;ul>
&lt;li>실제 MSA 환경에서는 단일 패턴만 사용하지 않음&lt;/li>
&lt;li>요구사항에 따라 여러 패턴을 조합하여 사용&lt;/li>
&lt;li>각 패턴의 장점을 활용하고 단점을 보완&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현 시 고려사항&lt;/p>
&lt;ul>
&lt;li>시스템의 규모와 복잡도&lt;/li>
&lt;li>팀의 기술적 역량&lt;/li>
&lt;li>운영/모니터링 환경&lt;/li>
&lt;li>비용과 리소스 제약&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>MSA 환경에서는 이러한 통신 패턴들을 적절히 조합하여 사용하는 것이 중요하다.&lt;br>
각 서비스의 특성과 요구사항을 고려하여 최적의 패턴을 선택하고, 필요한 경우 여러 패턴을 함께 사용하는 것이 효과적이다.&lt;/p>
&lt;h3>Message-based Communication Vs Publisher-subscriber Pattern Vs Event-Driven Pattern&lt;span class="hx-absolute -hx-mt-20" id="message-based-communication-vs-publisher-subscriber-pattern-vs-event-driven-pattern">&lt;/span>
&lt;a href="#message-based-communication-vs-publisher-subscriber-pattern-vs-event-driven-pattern" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="event-driven-architecture-pubsub-1-comparison-overview.svg" alt="메시지 큐 모델과 Pub/Sub 이벤트 스트림 모델의 비교" loading="lazy" />&lt;br>
_Source: &lt;a href="https://cloud.google.com/solutions/event-driven-architecture-pubsub?hl=ko" target="_blank" rel="noopener">https://cloud.google.com/solutions/event-driven-architecture-pubsub?hl=ko&lt;/a> _&lt;/p>
&lt;p>Event-Driven Pattern은 이벤트 중심의 설계로, 상태 변화를 이벤트로 처리하고 비동기적으로 시스템 컴포넌트들이 반응하는 방식을 취한다.&lt;br>
이는 높은 확장성과 유연성을 제공하며, 복잡한 비즈니스 프로세스를 처리하는 데 적합하다.&lt;br>
Event-Driven Pattern은 다른 두 패턴과 비교하여 더 높은 수준의 추상화를 제공하며, 시스템의 전반적인 아키텍처에 영향을 미친다. 이 패턴은 마이크로서비스 아키텍처와 잘 어울리며, 실시간 데이터 처리와 복잡한 워크플로우 관리에 특히 유용하다.&lt;/p>
&lt;p>각 패턴은 고유한 장단점을 가지고 있으며, 시스템의 요구사항과 특성에 따라 적절한 패턴을 선택하거나 조합하여 사용할 수 있다.&lt;br>
예를 들어, 높은 신뢰성과 순서 보장이 필요한 경우 Message-based Communication을,&lt;br>
실시간 데이터 스트리밍이 필요한 경우 Publisher-Subscriber Pattern을,&lt;br>
그리고 복잡한 비즈니스 로직과 높은 확장성이 필요한 경우 Event-Driven Pattern을 선택할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Message-based Communication&lt;/th>
&lt;th>Publisher-Subscriber Pattern&lt;/th>
&lt;th>Event-Driven Pattern&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 개념&lt;/strong>&lt;/td>
&lt;td>- 메시지 큐를 통한 점대점(Point-to-Point) 통신&lt;br>- 단일 수신자 지향&lt;br>- 메시지는 한 번만 처리됨&lt;br>- 메시지 보존 및 순서 보장 중시&lt;/td>
&lt;td>- 이벤트 기반의 다대다 통신&lt;br>- 다중 수신자 지향&lt;br>- 동일 메시지 다수 구독자 처리 가능&lt;br>- 이벤트 전파와 실시간성 중시&lt;/td>
&lt;td>- 이벤트 중심의 비즈니스 로직&lt;br>- 상태 변화를 이벤트로 처리&lt;br>- 이벤트 소싱 가능&lt;br>- 도메인 이벤트 중심 설계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메시지 전달 방식&lt;/strong>&lt;/td>
&lt;td>- 큐 기반 전달&lt;br>FIFO 순서 보장&lt;br>- 메시지 영속성 지원&lt;br>- 메시지 손실 방지 메커니즘&lt;/td>
&lt;td>- 토픽/채널 기반 전달&lt;br>- 브로드캐스팅 방식&lt;br>- 실시간 스트리밍 가능&lt;br>- 이벤트 기반 라우팅&lt;/td>
&lt;td>- 이벤트 스트림 기반&lt;br>- 이벤트 소싱&lt;br>- 상태 변경 전파&lt;br>- 이벤트 저장소 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>수신자 처리&lt;/strong>&lt;/td>
&lt;td>- 단일 수신자가 메시지 처리&lt;br>- 메시지 처리 후 큐에서 제거&lt;br>- 작업 분배 패턴&lt;br>- 로드 밸런싱 용이&lt;/td>
&lt;td>- 다수의 구독자 동시 처리&lt;br>- 메시지 복사본 전달&lt;br>- 관심사 기반 구독&lt;br>- 동적 구독자 관리&lt;/td>
&lt;td>- 이벤트 핸들러 기반 처리&lt;br>- 이벤트 소스별 처리&lt;br>- 이벤트 재생 가능&lt;br>- 상태 재구성 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 지속성&lt;/strong>&lt;/td>
&lt;td>- 강력한 메시지 보존&lt;br>- 디스크 기반 저장&lt;br>- 장애 복구 지원&lt;br>- 트랜잭션 지원&lt;/td>
&lt;td>- 일시적 메시지 처리&lt;br>- 메모리 기반 처리&lt;br>- 실시간 전달 중심&lt;br>- 이벤트 스트리밍&lt;/td>
&lt;td>- 이벤트 저장소 영구 보존&lt;br>- 이벤트 히스토리 관리&lt;br>- 상태 스냅샷 지원&lt;br>- 이벤트 버전 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성 특성&lt;/strong>&lt;/td>
&lt;td>- 수직적 확장성&lt;br>- 큐 파티셔닝&lt;br>- 메시지 그룹핑&lt;br>- 처리량 제어&lt;/td>
&lt;td>- 수평적 확장성&lt;br>- 토픽 파티셔닝&lt;br>- 구독자 그룹&lt;br>- 동적 스케일링&lt;/td>
&lt;td>- 이벤트 소싱 기반 확장&lt;br>- 이벤트 파티셔닝&lt;br>CQRS 패턴 활용&lt;br>- 분산 처리 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 사용 사례&lt;/strong>&lt;/td>
&lt;td>- 주문 처리 시스템&lt;br>- 결제 처리&lt;br>- 배치 작업&lt;br>- 워크플로우 관리&lt;/td>
&lt;td>- 실시간 모니터링&lt;br>- 로그 수집&lt;br>- 알림 시스템&lt;br>- 실시간 분석&lt;/td>
&lt;td>- 도메인 이벤트 처리&lt;br>- 감사 로깅&lt;br>- 상태 추적&lt;br>- 비즈니스 프로세스 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>구현 도구&lt;/strong>&lt;/td>
&lt;td>- RabbitMQ&lt;br>ActiveMQ&lt;br>Amazon SQS&lt;br>Azure Service Bus&lt;/td>
&lt;td>- Apache Kafka&lt;br>Redis Pub/Sub&lt;br>Google Cloud Pub/Sub&lt;br>AWS SNS&lt;/td>
&lt;td>- Event Store&lt;br>Axon Framework&lt;br>Eventuate&lt;br>Apache Kafka Streams&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장점&lt;/strong>&lt;/td>
&lt;td>- 신뢰성 높은 메시지 전달&lt;br>- 트랜잭션 보장&lt;br>- 순서 보장&lt;br>- 장애 복구 용이&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 낮은 지연 시간&lt;br>- 유연한 구독 모델&lt;br>- 실시간 처리&lt;/td>
&lt;td>- 완벽한 감사 추적&lt;br>- 시스템 상태 재현&lt;br>- 높은 확장성&lt;br>- 도메인 중심 설계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단점&lt;/strong>&lt;/td>
&lt;td>- 상대적으로 높은 지연시간&lt;br>- 시스템 복잡도 증가&lt;br>- 운영 비용 증가&lt;br>- 큐 관리 부담&lt;/td>
&lt;td>- 메시지 순서 보장 어려움&lt;br>- 일시적 메시지 손실 가능&lt;br>- 구독자 관리 복잡&lt;br>- 중복 처리 가능성&lt;/td>
&lt;td>- 학습 곡선이 높음&lt;br>- 복잡한 이벤트 관리&lt;br>- 저장소 크기 증가&lt;br>- 이벤트 버전 관리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 중간~높은 지연시간&lt;br>- 보통 처리량&lt;br>- 리소스 사용량 높음&lt;/td>
&lt;td>- 낮은 지연시간&lt;br>- 매우 높은 처리량&lt;br>- 효율적 리소스 사용&lt;br>- 실시간 성능&lt;/td>
&lt;td>- 읽기 성능 우수&lt;br>- 쓰기 지연 가능&lt;br>- 이벤트 재생 부하&lt;br>- 스냅샷 처리 영향&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모니터링 중점&lt;/strong>&lt;/td>
&lt;td>- 큐 길이&lt;br>- 처리 지연&lt;br>- 메시지 상태&lt;br>- 실패율&lt;/td>
&lt;td>- 구독자 상태&lt;br>- 이벤트 처리율&lt;br>- 전달 지연&lt;br>- 시스템 부하&lt;/td>
&lt;td>- 이벤트 처리 상태&lt;br>- 이벤트 스토어 크기&lt;br>- 재생 성능&lt;br>- 스냅샷 생성 주기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장애 처리&lt;/strong>&lt;/td>
&lt;td>- 자동 재시도&lt;br>- 데드레터 큐&lt;br>- 장애 복구 메커니즘&lt;br>- 메시지 재처리&lt;/td>
&lt;td>- 구독자 재연결&lt;br>- 이벤트 재발행&lt;br>- 장애 격리&lt;br>- 백프레셔 처리&lt;/td>
&lt;td>- 이벤트 재생&lt;br>- 스냅샷 복구&lt;br>- 버전 충돌 해결&lt;br>- 이벤트 정합성 검증&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>세 패턴의 주요 차이점:&lt;/p>
&lt;ol>
&lt;li>메시지 전달 방식과 목적
&lt;ol>
&lt;li>Message-based Communication은 신뢰성 있는 메시지 전달에 중점을 둔다.&lt;br>
메시지는 큐에 저장되어 순차적으로 처리되며, 하나의 메시지는 단일 수신자에 의해서만 처리된다.&lt;br>
예를 들어, 주문 처리 시스템에서 각 주문은 정확히 한 번만 처리되어야 하므로 이 패턴이 적합하다.&lt;/li>
&lt;li>Publisher-Subscriber Pattern은 이벤트의 실시간 전파에 초점을 맞춘다.&lt;br>
하나의 이벤트가 여러 구독자에게 동시에 전달될 수 있으며, 구독자들은 자신의 관심사에 따라 필요한 이벤트만 수신한다.&lt;br>
실시간 모니터링 시스템이 좋은 예시이다. 시스템 상태 변경을 여러 모니터링 도구가 동시에 관찰해야 하는 경우에 효과적이다.&lt;/li>
&lt;li>Event-Driven Pattern은 비즈니스 로직을 이벤트 중심으로 구성한다.&lt;br>
시스템의 상태 변화를 이벤트로 표현하고, 이를 기반으로 다른 작업들이 트리거된다.&lt;br>
이는 도메인 이벤트를 중심으로 시스템을 설계하는 방식으로, 예를 들어 전자상거래 시스템에서 &amp;lsquo;주문완료&amp;rsquo; 이벤트가 발생하면 자동으로 재고 확인, 결제 처리, 배송 준비 등의 프로세스가 시작되는 방식이다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>데이터 처리와 저장
&lt;ol>
&lt;li>Message-based Communication은 메시지의 영속성과 순서를 보장한다.&lt;br>
모든 메시지는 디스크에 저장되어 장애 상황에서도 손실되지 않으며, FIFO(First In First Out) 순서가 유지된다.&lt;br>
이는 금융 거래와 같이 데이터 손실이 허용되지 않는 시스템에 적합하다.&lt;/li>
&lt;li>Publisher-Subscriber Pattern은 일반적으로 메모리 기반의 실시간 처리를 수행한다.&lt;br>
이벤트는 발생 즉시 구독자들에게 전달되며, 영속성보다는 전달 속도가 중요시된다.&lt;br>
실시간 채팅 시스템이나 주식 시세 정보 전달과 같은 용도에 적합하다.&lt;/li>
&lt;li>Event-Driven Pattern은 이벤트 저장소를 통해 모든 이벤트의 히스토리를 보관한다.&lt;br>
이를 통해 시스템의 상태를 언제든 재구성할 수 있으며, 감사(audit) 추적이 가능하다.&lt;br>
이는 규제가 엄격한 산업이나 변경 이력 추적이 중요한 시스템에 유용하다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>선택 기준:&lt;/p>
&lt;ol>
&lt;li>시스템 요구사항에 따른 선택 신뢰성이 최우선인 경우: Message-based Communication을 선택한다.&lt;br>
메시지 손실이 허용되지 않는 금융 거래, 주문 처리 등의 시스템에 적합하다.&lt;/li>
&lt;li>실시간성이 중요한 경우: Publisher-Subscriber Pattern이 적합하다.&lt;br>
실시간 알림, 모니터링, 로그 수집 등 즉각적인 데이터 전파가 필요한 상황에서 사용한다.&lt;/li>
&lt;li>비즈니스 프로세스 자동화가 필요한 경우: Event-Driven Pattern을 고려한다.&lt;br>
복잡한 업무 흐름을 이벤트 기반으로 자동화하고, 시스템의 상태 변화를 추적해야 하는 경우에 적합하다.&lt;/li>
&lt;li>기술적 고려사항 확장성 요구사항: Publisher-Subscriber Pattern과 Event-Driven Pattern은 높은 확장성을 제공한다.&lt;br>
구독자나 이벤트 핸들러를 독립적으로 확장할 수 있다.&lt;/li>
&lt;li>운영 복잡도:&lt;br>
Message-based Communication은 상대적으로 단순한 운영을 제공한다.&lt;br>
반면 Event-Driven Pattern은 복잡한 이벤트 관리와 버전 관리가 필요할 수 있다.&lt;/li>
&lt;li>리소스 사용:&lt;br>
Message-based Communication은 메시지 저장과 관리를 위해 더 많은 리소스를 필요로 한다.&lt;br>
Publisher-Subscriber Pattern은 메모리 기반 처리로 리소스 사용이 효율적이다.&lt;/li>
&lt;/ol>
&lt;p>실제 구현 시에는 이러한 패턴들을 조합하여 사용하는 것이 일반적이다. 예를 들어, 중요한 트랜잭션은 Message-based Communication으로 처리하고, 상태 변경 알림은 Publisher-Subscriber Pattern을 통해 전달하며, 전체 시스템의 워크플로우는 Event-Driven Pattern으로 관리하는 방식이다. 이를 통해 각 패턴의 장점을 최대한 활용하면서 시스템의 요구사항을 효과적으로 충족할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>비동기 통신 패턴(Asynchronous Communication Pattern)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/asynchronous-communication-pattern/</link><pubDate>Sat, 28 Dec 2024 03:56:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/asynchronous-communication-pattern/</guid><description>
&lt;h2>비동기 통신 패턴(Asynchronous Communication Pattern)&lt;span class="hx-absolute -hx-mt-20" id="비동기-통신-패턴asynchronous-communication-pattern">&lt;/span>
&lt;a href="#%eb%b9%84%eb%8f%99%ea%b8%b0-%ed%86%b5%ec%8b%a0-%ed%8c%a8%ed%84%b4asynchronous-communication-pattern" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Asynchronous Communication Pattern은 마이크로서비스 간 통신에서 메시지를 보내는 서비스가 즉각적인 응답을 기다리지 않고 계속해서 작업을 수행할 수 있게 하는 방식이다.&lt;br>
이 패턴은 서비스 간 느슨한 결합을 가능하게 하며, 시스템의 확장성과 탄력성을 향상시킨다.&lt;/p>
&lt;p>Asynchronous Communication Pattern은 MSA에서 서비스 간 효율적인 통신을 가능하게 하며, 시스템의 확장성과 탄력성을 크게 향상시킨다.&lt;br>
하지만 구현의 복잡성과 메시지 순서 관리 등의 도전 과제도 존재하므로, 이를 고려하여 적절히 설계하고 구현해야 한다.&lt;/p>
&lt;h3>Asynchronous Communication의 주요 특징&lt;span class="hx-absolute -hx-mt-20" id="asynchronous-communication의-주요-특징">&lt;/span>
&lt;a href="#asynchronous-communication%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>비동기 처리&lt;/strong>: 서비스는 메시지를 보낸 후 응답을 기다리지 않고 다음 작업을 수행한다.&lt;/li>
&lt;li>&lt;strong>메시지 브로커 사용&lt;/strong>: Kafka나 RabbitMQ와 같은 메시지 브로커를 통해 서비스 간 통신이 이루어진다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: 팀원들이 자신의 일정에 맞춰 작업할 수 있어 글로벌 팀이나 원격 근무에 적합하다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 서비스들이 독립적으로 메시지를 처리할 수 있어 더 나은 확장성을 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>Asynchronous Communication Pattern의 장점&lt;span class="hx-absolute -hx-mt-20" id="asynchronous-communication-pattern의-장점">&lt;/span>
&lt;a href="#asynchronous-communication-pattern%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>높은 확장성&lt;/strong>: 서비스들이 독립적으로 메시지를 처리할 수 있어 시스템 전체의 확장성이 향상된다.&lt;/li>
&lt;li>&lt;strong>향상된 장애 허용성&lt;/strong>: 서비스 간 결합도가 낮아 한 서비스의 실패가 다른 서비스에 즉각적인 영향을 미치지 않는다.&lt;/li>
&lt;li>&lt;strong>유연한 의존성 관리&lt;/strong>: 이벤트 기반 아키텍처를 통해 서비스 간 의존성을 줄일 수 있다.&lt;/li>
&lt;li>&lt;strong>높은 처리량&lt;/strong>: 서비스들이 동시에 메시지를 처리할 수 있어 전체적인 처리량이 증가한다.&lt;/li>
&lt;/ol>
&lt;h3>Asynchronous Communication 구현 방식&lt;span class="hx-absolute -hx-mt-20" id="asynchronous-communication-구현-방식">&lt;/span>
&lt;a href="#asynchronous-communication-%ea%b5%ac%ed%98%84-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>메시징 시스템&lt;/strong>: Kafka, RabbitMQ 등의 메시지 브로커를 사용한다.&lt;/li>
&lt;li>&lt;strong>이벤트 기반 아키텍처&lt;/strong>: 서비스들이 이벤트를 발행하고 구독하는 방식으로 통신한다.&lt;/li>
&lt;li>&lt;strong>비동기 프로토콜&lt;/strong>: AMQP와 같은 비동기 프로토콜을 사용하여 메시지를 전송한다.&lt;/li>
&lt;/ol>
&lt;h3>Asynchronous Communication Pattern의 사용 사례&lt;span class="hx-absolute -hx-mt-20" id="asynchronous-communication-pattern의-사용-사례">&lt;/span>
&lt;a href="#asynchronous-communication-pattern%ec%9d%98-%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>알림 시스템&lt;/strong>: SMS, 이메일 등의 알림을 보낼 때 사용된다.&lt;/li>
&lt;li>&lt;strong>주문 처리&lt;/strong>: 온라인 상점에서 주문 확인 메시지를 보낼 때 활용된다.&lt;/li>
&lt;li>&lt;strong>보고서 생성&lt;/strong>: 시간이 오래 걸리는 보고서 생성 작업에 적합하다.&lt;/li>
&lt;/ol>
&lt;h3>구현 시 고려사항&lt;span class="hx-absolute -hx-mt-20" id="구현-시-고려사항">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>메시지 순서&lt;/strong>: 메시지의 순서가 중요한 경우, 적절한 순서 보장 메커니즘을 구현해야 한다.&lt;/li>
&lt;li>&lt;strong>트랜잭션 관리&lt;/strong>: 클라이언트 측에서 트랜잭션을 관리하여 일관성을 유지해야 한다.&lt;/li>
&lt;li>&lt;strong>메시지 지속성&lt;/strong>: 시스템 장애 시에도 메시지가 손실되지 않도록 보장해야 한다.&lt;/li>
&lt;li>&lt;strong>모니터링 및 추적&lt;/strong>: 비동기 통신의 특성상 문제 발생 시 디버깅이 어려울 수 있으므로, 적절한 모니터링 및 추적 시스템을 구축해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>Asynchronous Communication Pattern을 활용한 실제 구현 예시&lt;span class="hx-absolute -hx-mt-20" id="asynchronous-communication-pattern을-활용한-실제-구현-예시">&lt;/span>
&lt;a href="#asynchronous-communication-pattern%ec%9d%84-%ed%99%9c%ec%9a%a9%ed%95%9c-%ec%8b%a4%ec%a0%9c-%ea%b5%ac%ed%98%84-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;pre class="mermaid hx-mt-6">%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '12px'}, 'flowchart': {'width': 400, 'height': 250, 'diagramPadding': 8}}}%%
sequenceDiagram
participant Client
participant OrderService
participant MessageQueue
participant PaymentService
participant NotificationService
Note over Client,NotificationService: Async Flow
Client->>OrderService: 1. Create Order
activate OrderService
OrderService-->>Client: 2. Accepted (202)
OrderService->>MessageQueue: 3. Publish Event
deactivate OrderService
MessageQueue->>PaymentService: 4a. Consume
activate PaymentService
PaymentService->>MessageQueue: 5a. Process
deactivate PaymentService
MessageQueue->>NotificationService: 4b. Consume
activate NotificationService
NotificationService-->>MessageQueue: 5b. Ack
deactivate NotificationService
MessageQueue->>OrderService: 6. Update
activate OrderService
OrderService->>MessageQueue: 7. Status
deactivate OrderService
MessageQueue->>NotificationService: 8. Send
activate NotificationService
NotificationService->>Client: 9. Push
deactivate NotificationService&lt;/pre>&lt;p>알림 시스템과 주문 처리 시스템&lt;br>
주요 컴포넌트와 특징:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>메시지 브로커 (MessageBroker):&lt;/p>
&lt;ul>
&lt;li>실제 메시지 큐잉 시스템(예: RabbitMQ, Kafka)을 시뮬레이션한다.&lt;/li>
&lt;li>발행/구독(pub/sub) 패턴을 구현하여 비동기 메시지 전달을 지원한다.&lt;/li>
&lt;li>여러 큐를 관리하고 메시지를 구독자들에게 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>주문 서비스 (OrderService):&lt;/p>
&lt;ul>
&lt;li>주문을 생성하고 상태를 관리한다.&lt;/li>
&lt;li>주문 관련 이벤트를 발행하여 다른 서비스에 알린다.&lt;/li>
&lt;li>비동기적으로 작동하여 주문 처리와 이벤트 발행이 독립적으로 실행된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>알림 서비스 (NotificationService):&lt;/p>
&lt;ul>
&lt;li>주문 이벤트를 구독하여 적절한 알림을 생성한다.&lt;/li>
&lt;li>이벤트 타입에 따라 다른 알림 메시지를 생성한다.&lt;/li>
&lt;li>실제 시스템에서는 이메일, SMS 등 외부 시스템과의 통합이 추가될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이 시스템의 장점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>느슨한 결합:&lt;/p>
&lt;ul>
&lt;li>주문 서비스와 알림 서비스는 서로에 대해 직접적인 의존성이 없다.&lt;/li>
&lt;li>메시지 브로커를 통해 간접적으로 통신한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>확장성:&lt;/p>
&lt;ul>
&lt;li>각 서비스는 독립적으로 확장할 수 있다.&lt;/li>
&lt;li>새로운 이벤트 구독자를 쉽게 추가할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>장애 격리:&lt;/p>
&lt;ul>
&lt;li>알림 서비스에 문제가 발생해도 주문 서비스는 정상적으로 작동한다.&lt;/li>
&lt;li>메시지 큐는 일시적인 장애 시 버퍼 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">asyncio&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">List&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">dataclasses&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">dataclass&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">asdict&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">asyncio&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Queue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">uuid&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">uuid4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 도메인 모델 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Order&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Dict&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">created_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Notification&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">notification_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">created_at&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 이벤트 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderEvent&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event_type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timestamp&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 브로커 시뮬레이션&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MessageBroker&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queues&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Queue&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribers&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queues&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Queue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">queue_name&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queues&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queues&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구독자들에게 메시지 전달&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">subscriber&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">subscriber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">subscribe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">queue_name&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribers&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_queue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">callback&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 주문 서비스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message_broker&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MessageBroker&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message_broker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">message_broker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">orders&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">create_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Dict&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">total_amount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Order&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Order&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">total_amount&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;PENDING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">created_at&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isoformat&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">orders&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 생성 이벤트 발행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OrderEvent&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ORDER_CREATED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timestamp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isoformat&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message_broker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;order_events&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">asdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">order&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">update_order_status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">order_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">order_id&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">orders&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">orders&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 상태 변경 이벤트 발행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OrderEvent&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ORDER_STATUS_UPDATED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timestamp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isoformat&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message_broker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;order_events&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">asdict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 알림 서비스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NotificationService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message_broker&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">MessageBroker&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message_broker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">message_broker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">notifications&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">handle_order_event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event_type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;event_type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;order&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 이벤트 타입에 따른 알림 메시지 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">event_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;ORDER_CREATED&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_notification&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;user_id&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;주문이 생성되었습니다. 주문번호: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;order_id&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ORDER_NOTIFICATION&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">event_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;ORDER_STATUS_UPDATED&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_notification&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;user_id&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;주문 상태가 &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">로 변경되었습니다. 주문번호: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;order_id&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;STATUS_UPDATE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">create_notification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Notification&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">notification&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Notification&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">notification_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">type&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">created_at&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">isoformat&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">notifications&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">notification&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">notification_id&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">notification&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 시스템에서는 여기서 이메일 발송, SMS 발송 등의 작업 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;알림 발송: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">notification&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">notification&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메인 애플리케이션&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 초기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message_broker&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">MessageBroker&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OrderService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message_broker&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">notification_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NotificationService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message_broker&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 알림 서비스를 주문 이벤트에 구독&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">message_broker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subscribe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;order_events&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">notification_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">handle_order_event&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 시나리오&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 주문 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">order_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_order&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;user123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">items&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[{&lt;/span>&lt;span class="s2">&amp;#34;product_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;prod1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;quantity&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;price&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">}],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 잠시 대기하여 알림 처리 시간 제공&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">asyncio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 주문 상태 업데이트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">order_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_order_status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;PROCESSING&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 알림 처리 시간 제공&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">asyncio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 애플리케이션 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asyncio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">main&lt;/span>&lt;span class="p">())&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 예시를 확장하거나 수정할 수 있는 방향:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>실제 메시지 브로커 통합&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># RabbitMQ 사용 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pika&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">RabbitMQBroker&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pika&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BlockingConnection&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pika&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConnectionParameters&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">queue_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basic_publish&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exchange&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">routing_key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">queue_name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>재시도 메커니즘 추가&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NotificationService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">handle_order_event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">event&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">max_retries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">retry_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">retry_count&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">max_retries&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_event&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">retry_count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">retry_count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">max_retries&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Dead Letter Queue로 이동&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">move_to_dlq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">asyncio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="n">retry_count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 지수 백오프&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>분산 트레이싱 추가&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">create_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Dict&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">total_amount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Order&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">trace_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 트레이싱 컨텍스트 시작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">tracer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start_span&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;create_order_&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">trace_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_create_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">total_amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">span&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_tag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;order_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">order&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>