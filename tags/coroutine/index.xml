<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Coroutine on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/coroutine/</link>
    <description>Recent content in Coroutine on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.4</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Oct 2024 08:30:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/coroutine/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Process vs Thread vs Coroutine</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/process-management/processes/process-vs-thread-vs-coroutine/</link>
      <pubDate>Sun, 06 Oct 2024 08:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/process-management/processes/process-vs-thread-vs-coroutine/</guid>
      <description>Process란 실행 중인 프로그램의 인스턴스를 이야기하며, Thread란 프로세스 내에서 실행되는 더 작은 실행 단위를 말한다.</description>
    </item>
    <item>
      <title>코루틴(Coroutine)</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/thread-management/coroutine/</link>
      <pubDate>Sat, 05 Oct 2024 06:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/thread-management/coroutine/</guid>
      <description>코루틴은 &amp;#34;협력적인 루틴&amp;#34;이라는 의미로, 여러 작업이 협력하여 실행되는 방식을 말한다. 일반 함수와 달리, 코루틴은 실행 중간에 일시 중단되었다가 나중에 다시 재개될 수 있다.</description>
    </item>
  </channel>
</rss>
