<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Performance-vs-Scalability on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/performance-vs-scalability/</link>
    <description>Recent content in Performance-vs-Scalability on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.3</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Apr 2025 15:32:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/performance-vs-scalability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Performance vs Scalability</title>
      <link>https://buenhyden.github.io/posts/system-design/fundamentals/performance-vs-scalability/</link>
      <pubDate>Tue, 18 Feb 2025 05:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/fundamentals/performance-vs-scalability/</guid>
      <description>성능 (Performance) 과 확장성 (Scalability) 은 시스템 설계에서 상호 보완적이면서도 때로는 상충하는 핵심 속성이다.  성능은 단일 작업을 얼마나 빠르게 처리할 수 있는지를 나타내는 반면, 확장성은 부하가 증가할 때 시스템이 이를 효과적으로 처리할 수 있는 능력을 의미한다.  성능이 좋은 시스템이 반드시 확장성이 좋은 것은 아니며, 그 반대도 마찬가지이다. 이 두 특성의 균형을 맞추는 것은 현대 시스템 설계의 핵심 과제로, 분산 시스템, 로드 밸런싱, 캐싱, 데이터베이스 샤딩 등의 기술을 통해 해결할 수 있다.</description>
    </item>
    <item>
      <title>Horizontal vs. Vertical Scaling</title>
      <link>https://buenhyden.github.io/posts/system-design/fundamentals/performance-vs-scalability/horizontal-vs-vertical-scaling/</link>
      <pubDate>Thu, 03 Apr 2025 15:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/fundamentals/performance-vs-scalability/horizontal-vs-vertical-scaling/</guid>
      <description>&lt;h2 id=&#34;horizontal-vs-vertical-scaling&#34;&gt;Horizontal vs. Vertical Scaling&lt;/h2&gt;
&lt;h3 id=&#34;1-주제-분류-적절성-검토&#34;&gt;1. 주제 분류 적절성 검토&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;Computer Science and Engineering &amp;gt; System Design &amp;gt; Fundamentals &amp;gt; Performance Vs Scalability&amp;rdquo;&lt;/strong&gt; 분류는 시스템 확장성 전략의 핵심 개념을 다루므로 적절합니다. 두 방식의 성능 - 확장성 트레이드오프를 명확히 구분합니다 [1][5].&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-200-자-요약&#34;&gt;2. 200 자 요약&lt;/h3&gt;
&lt;p&gt;수평 확장 (Horizontal Scaling) 은 서버 추가로 부하 분산하며 무한 확장 가능하나 복잡도가 높고, 수직 확장 (Vertical Scaling) 은 단일 서버 성능 강화로 간편하지만 물리적 한계가 존재합니다. 클라우드 환경에서는 2025 년 기준 AI 기반 자동 확장 (Auto-scaling) 과 서버리스 아키텍처가 주류로 부상하며, 메타 (구 페이스북) 광고 시스템은 수평 확장 전략으로 초당 100 만 개 이상의 광고 요청을 처리합니다 [7][18].&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
