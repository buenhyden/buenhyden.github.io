<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Fault-Tolerance on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/fault-tolerance/</link>
    <description>Recent content in Fault-Tolerance on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Nov 2024 10:05:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/fault-tolerance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>분산 시스템(Distributed Systems)</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/</link>
      <pubDate>Mon, 11 Nov 2024 02:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/</guid>
      <description>분산 시스템은 여러 독립적인 컴퓨터 (노드) 가 네트워크를 통해 상호작용하며, 하나의 통합된 시스템처럼 동작하도록 설계된 구조이다. 확장성, 장애 허용성, 자원 효율성, 고가용성 등 현대 IT 인프라의 핵심 요구사항을 충족한다.</description>
    </item>
    <item>
      <title>Circuit Breaker</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/reliability--resilience/fault-tolerance/circuit-breaker/</link>
      <pubDate>Sun, 17 Nov 2024 10:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/reliability--resilience/fault-tolerance/circuit-breaker/</guid>
      <description>서킷 브레이커 패턴(Circuit Breaker Pattern)은 마이크로서비스 아키텍처에서 시스템의 안정성과 복원력을 향상시키기 위해 사용되는 디자인 패턴이다.</description>
    </item>
  </channel>
</rss>
