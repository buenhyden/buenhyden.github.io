<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Network-Models on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/network-models/</link>
    <description>Recent content in Network-Models on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 12 May 2025 03:31:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/network-models/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSI Model</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/</link>
      <pubDate>Wed, 16 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/</guid>
      <description>OSI 7계층은 통신 기능을 물리→데이터링크→네트워크→전송→세션→표현→응용의 7단계로 분리한 개념적 참조모델(ISO/IEC 7498-1)이다. 계층별 캡슐화와 표준화로 상호운용성·문제추적·설계 기준을 제공하며, 실제 구현은 TCP/IP 모델과 혼재되어 사용된다.</description>
    </item>
    <item>
      <title>TCP/IP Model</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/</guid>
      <description>TCP/IP 4계층 모델은 네트워크 액세스·인터넷·전송·응용의 네 계층으로 구성된 실무 기준 프로토콜 스택이다. 각 계층은 캡슐화로 역할을 분리해 주소 지정·라우팅·신뢰성·서비스 제공을 담당하며, QUIC/HTTP3 같은 현대 전송 기술도 이 구조 내에서 기능적으로 자리잡는다.</description>
    </item>
    <item>
      <title>OSI vs.TCP/IP Model</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-vs-tcp-ip-model/</link>
      <pubDate>Sat, 19 Oct 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-vs-tcp-ip-model/</guid>
      <description>TCP/IP는 인터넷의 실무적 구현을 지배하는 간결한 4계층 모델로 프로토콜 매핑과 상호운용성에 최적화되어 있다. OSI는 7계층으로 개념적 분해와 교육·설계에 유리하다. 실무에선 TCP/IP를 기준으로 구현하되 OSI 사고틀로 설계·분석하는 병행 접근이 효과적이다.</description>
    </item>
    <item>
      <title>Cross-Layer Functions</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/cross-layer-functions/</link>
      <pubDate>Mon, 12 May 2025 03:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/cross-layer-functions/</guid>
      <description>Cross-Layer Functions는 계층 경계의 정보를 선택적으로 공유·연동해 성능, 지연, 전력, 보안 등을 전역 최적화하는 설계 방식이다. 무선·IoT·V2X·엣지 AI 등에서 활용되며, DiffServ/ECN/PMTUD/QUIC/5G QoS 등 표준과의 연계 및 SDN·미들웨어 기반 제어로 구현된다. 이점(효율·QoS 향상)과 리스크(복잡성·상호운용성·보안)를 균형 있게 설계해야 효과적이다</description>
    </item>
  </channel>
</rss>
