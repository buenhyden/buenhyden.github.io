<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Distributed-Systems on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/distributed-systems/</link>
    <description>Recent content in Distributed-Systems on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Mon, 07 Jul 2025 14:52:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>분산 시스템(Distributed Systems)</title>
      <link>https://buenhyden.github.io/posts/system-design/distributed-systems/</link>
      <pubDate>Mon, 11 Nov 2024 02:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/distributed-systems/</guid>
      <description>분산 시스템은 여러 독립적인 컴퓨터 (노드) 가 네트워크를 통해 상호작용하며, 하나의 통합된 시스템처럼 동작하도록 설계된 구조이다. 확장성, 장애 허용성, 자원 효율성, 고가용성 등 현대 IT 인프라의 핵심 요구사항을 충족한다.</description>
    </item>
    <item>
      <title>System Design</title>
      <link>https://buenhyden.github.io/posts/system-design/</link>
      <pubDate>Tue, 27 May 2025 08:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/</guid>
      <description>System Design 은 사용자의 요구사항을 바탕으로 시스템의 전반적인 아키텍처를 설계하는 작업으로, 컴포넌트 간의 인터페이스, 데이터 흐름, 확장성, 성능, 가용성, 유지보수를 고려한 설계이다. 이 과정은 견고한 시스템 구축 및 운영 효율성 확보에 필수적이다.</description>
    </item>
    <item>
      <title>System Design Overview</title>
      <link>https://buenhyden.github.io/posts/system-design/overview/</link>
      <pubDate>Tue, 27 May 2025 08:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/overview/</guid>
      <description>System Design 은 사용자의 요구사항을 바탕으로 시스템의 전반적인 아키텍처를 설계하는 작업으로, 컴포넌트 간의 인터페이스, 데이터 흐름, 확장성, 성능, 가용성, 유지보수를 고려한 설계이다. 이 과정은 견고한 시스템 구축 및 운영 효율성 확보에 필수적이다.</description>
    </item>
    <item>
      <title>Distributed Coordination</title>
      <link>https://buenhyden.github.io/posts/system-design/distributed-systems/distributed-concurrency/distributed-coordination/</link>
      <pubDate>Mon, 07 Jul 2025 14:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/distributed-systems/distributed-concurrency/distributed-coordination/</guid>
      <description>Distributed Coordination 은 다중 노드 환경에서 **합의 (consensus)**, **리더 선출 (leader election)**, **락 (locking)**, **상태 동기화 (state synchronization)** 등을 통해 **일관성과 안정성**을 보장하는 필수 메커니즘으로, Paxos·Raft·2PC 같은 프로토콜을 기반으로 구성된다.</description>
    </item>
    <item>
      <title>Container-Based Architecture</title>
      <link>https://buenhyden.github.io/posts/system-design/distributed-systems/container-based-architecture/</link>
      <pubDate>Sat, 05 Jul 2025 05:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/distributed-systems/container-based-architecture/</guid>
      <description>Container-Based Architecture는 애플리케이션과 종속성을 격리된 컨테이너 단위로 패키징하여 일관성 있는 실행 환경을 제공하는 아키텍처 패턴이다. 마이크로서비스, 클라우드 네이티브 환경에서 확장성, 이식성, 자동화를 실현하며 현대적 소프트웨어 배포의 핵심 기반이 된다.</description>
    </item>
    <item>
      <title>Cloud Computing</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-computing/</link>
      <pubDate>Sun, 15 Jun 2025 07:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-computing/</guid>
      <description>클라우드 컴퓨팅은 가상화된 서버, 스토리지, 네트워킹, 데이터베이스, 분석 툴 등을 온디맨드 방식으로 서비스 형태로 제공하는 모델이다. 이를 통해 기업은 초기 투자 없이 빠르게 확장 가능하며, 글로벌 접근성, 비용 효율성과 혁신 가속화가 가능하다.</description>
    </item>
    <item>
      <title>Messaging Systems</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/</link>
      <pubDate>Tue, 22 Apr 2025 13:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/</guid>
      <description>메시징 시스템은 분산 애플리케이션의 구성 요소 간 비동기 통신을 지원하여 결합도를 낮추고, 신뢰성·확장성·유연성을 제공합니다. 메시지 큐, 이벤트 스트리밍, 태스크 큐 등 다양한 형태가 존재하며, 실시간 데이터 처리, 작업 분산, 장애 복원력 등 다양한 요구에 대응한다.</description>
    </item>
    <item>
      <title>Microservices Architecture</title>
      <link>https://buenhyden.github.io/posts/software-engineering/design-and-architecture/architecture-styles-and-patterns/architecture-styles/cloud-native/microservices-architecture/</link>
      <pubDate>Sat, 01 Feb 2025 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/design-and-architecture/architecture-styles-and-patterns/architecture-styles/cloud-native/microservices-architecture/</guid>
      <description>마이크로서비스 아키텍처는 하나의 애플리케이션을 독립적으로 배포 가능한 작은 서비스들의 집합으로 구성하는 소프트웨어 아키텍처 스타일이다. 각 서비스는 특정 비즈니스 기능을 담당하며, API 를 통해 통신하고, 자체 데이터베이스를 보유한다. 확장성, 유연성, 기술적 다양성을 제공하여 현대 클라우드 네이티브 애플리케이션 개발의 핵심 방식으로 자리잡았다.</description>
    </item>
  </channel>
</rss>
