<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Object-Pooling on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/object-pooling/</link>
    <description>Recent content in Object-Pooling on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Jun 2025 10:55:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/object-pooling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Object Pooling</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/performance--scalability/performance-design/algorithm--data-structures/object-pooling/</link>
      <pubDate>Tue, 24 Jun 2025 10:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/performance--scalability/performance-design/algorithm--data-structures/object-pooling/</guid>
      <description>Object Pooling 은 객체의 생성과 소멸 비용을 줄이기 위해 미리 생성된 객체들을 풀 (Pool) 에 보관하고 재사용하는 성능 최적화 디자인 패턴이다.  메모리 할당/해제 오버헤드를 줄이고 가비지 컬렉션 압력을 감소시켜 시스템 성능을 향상시킨다.</description>
    </item>
  </channel>
</rss>
