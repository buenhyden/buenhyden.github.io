<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Traffic-Control-and-Routing on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/traffic-control-and-routing/</link>
    <description>Recent content in Traffic-Control-and-Routing on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Jul 2025 05:48:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/traffic-control-and-routing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ingress Controller</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/ingress-controller/</link>
      <pubDate>Fri, 25 Jul 2025 05:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/ingress-controller/</guid>
      <description>인그레스 컨트롤러 (Ingress Controller) 는 쿠버네티스를 포함한 클라우드 네이티브 환경에서 외부 트래픽을 클러스터 내부 서비스로 안전하고 효율적으로 라우팅하는 핵심 컴포넌트다. 다양한 라우팅 규칙, 인증, SSL 종료 등 고급 트래픽 관리 기능도 함께 제공한다.</description>
    </item>
    <item>
      <title>Istio</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/implementations/istio/</link>
      <pubDate>Fri, 25 Jul 2025 05:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/implementations/istio/</guid>
      <description>Istio 는 컨테이너 오케스트레이션 환경에서 마이크로서비스 간 트래픽 관리, 보안, 정책, 관측을 위해 제공되는 대표적인 서비스 메시 솔루션으로, 애플리케이션 코드 변경 없이 다양한 네트워크 기능을 지원하여 시스템의 일관성과 안정성을 높인다.</description>
    </item>
    <item>
      <title>Traffic Control and Routing</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/</link>
      <pubDate>Wed, 23 Jul 2025 14:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/</guid>
      <description></description>
    </item>
    <item>
      <title>Implementations of API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/</link>
      <pubDate>Sun, 23 Mar 2025 04:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/</guid>
      <description>API 게이트웨이는 현대적인 애플리케이션 아키텍처의 핵심 구성 요소로, 클라이언트 요청을 처리하고 다양한 마이크로서비스로 라우팅하는 중앙 진입점 역할을 한다.</description>
    </item>
    <item>
      <title>Apache APISIX</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/apache-apisix/</link>
      <pubDate>Sun, 23 Mar 2025 01:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/apache-apisix/</guid>
      <description>Apache APISIX는 고성능 클라우드 네이티브 API 게이트웨이로, 2019년 CNCF(Cloud Native Computing Foundation) 샌드박스 프로젝트로 시작되어 2022년 10월에는 CNCF 인큐베이팅 프로젝트로 승격되었다.</description>
    </item>
    <item>
      <title>KrakenD</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/krakend/</link>
      <pubDate>Sun, 23 Mar 2025 01:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/krakend/</guid>
      <description>KrakenD는 고성능 API 게이트웨이로, 2016년에 오픈 소스 프로젝트로 시작되었으며 현재는 KrakenD 회사에서 개발 및 유지보수하고 있다. Go 언어로 작성되었으며, 마이크로서비스 아키텍처에서 백엔드 API들을 통합하고 최적화하기 위해 설계되었다.</description>
    </item>
    <item>
      <title>Tyk</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/tyk/</link>
      <pubDate>Sun, 23 Mar 2025 01:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/tyk/</guid>
      <description>Tyk는 강력한 오픈 소스 API 관리 플랫폼으로, 2014년 Martin Buhr에 의해 설립된 Tyk Technologies에서 개발했다. Go 언어로 작성되었으며, API 게이트웨이, 개발자 포털, API 분석 대시보드를 포함한 완전한 API 관리 솔루션을 제공한다.</description>
    </item>
    <item>
      <title>Kong</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/kong/</link>
      <pubDate>Sun, 23 Mar 2025 01:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/kong/</guid>
      <description>Kong은 마이크로서비스 아키텍처를 위한 클라우드 네이티브, 오픈 소스 API 게이트웨이 및 서비스 메시이다.</description>
    </item>
    <item>
      <title>Traefik</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/traefik/</link>
      <pubDate>Sun, 23 Mar 2025 01:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/traefik/</guid>
      <description>Traefik(트래픽이라고 발음)은 2015년 Containous(현재 Traefik Labs)에서 개발한 오픈 소스 API 게이트웨이이자 엣지 라우터이다.</description>
    </item>
    <item>
      <title>Load Balancer</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/load-balancer/</link>
      <pubDate>Mon, 17 Feb 2025 04:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/load-balancer/</guid>
      <description>로드 밸런서 (Load Balancer) 는 복수의 서버에 트래픽을 효율적으로 분산하여 시스템 부하를 균등하게 분배하고, 장애 발생 시에도 서비스 연속성을 보장하는 장치 또는 기술이다. 다양한 알고리즘과 유형을 활용하여 확장성과 고가용성, 탄력성을 제공하는 시스템 핵심 구성 요소이다.</description>
    </item>
    <item>
      <title>Service Mesh</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/</link>
      <pubDate>Wed, 13 Nov 2024 09:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/</guid>
      <description>서비스 메시는 **마이크로서비스 간 통신을 Sidecar 프록시 기반 Data Plane**으로 추상화하고, **Control Plane**에서 정책·보안·관찰 기능을 외부화하는 인프라 계층이다.  이를 통해 서비스 간 보안 (mTLS), 로드밸런싱, 리트라이, 트래픽 제어, 모니터링 등을 코드 수정 없이 적용할 수 있다.</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/</guid>
      <description>API Gateway 는 마이크로서비스 아키텍처에서 핵심 라우터이자 진입점 역할을 수행한다. 요청의 인증, 라우팅, 로드 밸런싱, 변환, 모니터링 등을 통합적으로 처리하여 클라이언트와 백엔드 서비스 간의 결합도를 낮추고 보안/운영 효율성을 높인다.</description>
    </item>
  </channel>
</rss>
