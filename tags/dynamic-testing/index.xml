<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Dynamic-Testing on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/dynamic-testing/</link>
    <description>Recent content in Dynamic-Testing on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Nov 2024 06:01:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/dynamic-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>시스템 테스트 (System test)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/system-test/</link>
      <pubDate>Mon, 04 Nov 2024 06:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/system-test/</guid>
      <description>개발된 소프트웨어 시스템 전체를 검사하는 과정으로, 모든 개별 모듈과 구성 요소가 통합된 후 전체 시스템이 예상대로 작동하는지 확인한다.</description>
    </item>
    <item>
      <title>인수 테스트 (Acceptance Test)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/acceptance-test/</link>
      <pubDate>Mon, 04 Nov 2024 02:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/acceptance-test/</guid>
      <description>소프트웨어가 사용자의 비즈니스 요구사항을 충족하는지 확인하는 테스트</description>
    </item>
    <item>
      <title>통합 테스트 (Integration Test)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/integration-test/</link>
      <pubDate>Mon, 04 Nov 2024 02:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/integration-test/</guid>
      <description>통합 테스트는 소프트웨어 개발 과정에서 개별적으로 테스트된 모듈들을 결합하여 전체 시스템으로서의 상호작용을 검증하는 과정이다</description>
    </item>
    <item>
      <title>단위 테스트 (Unit Test)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/unit-test/</link>
      <pubDate>Mon, 04 Nov 2024 02:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/testing-fundamentals/testing-levels/unit-test/</guid>
      <description>단위 테스트는 소프트웨어의 가장 작은 단위인 개별 모듈이나 컴포넌트를 독립적으로 테스트하는 과정이다.</description>
    </item>
    <item>
      <title>엔드투엔드 테스트(End-to-End Test, E2E Test)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/end-to-end-test/</link>
      <pubDate>Sun, 03 Nov 2024 02:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/end-to-end-test/</guid>
      <description>이는 사용자의 관점에서 전체 애플리케이션의 흐름을 테스트하여 모든 구성 요소가 올바르게 작동하는지 확인한다.</description>
    </item>
  </channel>
</rss>
