<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Service-Discovery on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/service-discovery/</link>
    <description>Recent content in Service-Discovery on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Nov 2024 10:06:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/service-discovery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Service Discovery</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/discovery/</link>
      <pubDate>Thu, 14 Nov 2024 10:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/discovery/</guid>
      <description>&lt;h2 id=&#34;service-discovery&#34;&gt;Service Discovery&lt;/h2&gt;
&lt;p&gt;마이크로서비스 아키텍처(MSA)에서 Service Discovery는 핵심적인 패턴 중 하나이다.&lt;br&gt;
이 패턴은 동적으로 변화하는 분산 환경에서 서비스 간 통신을 가능하게 하는 중요한 메커니즘이다.&lt;/p&gt;
&lt;p&gt;Service Discovery는 네트워크 상의 서비스 위치(IP 주소와 포트)를 자동으로 감지하고 관리하는 프로세스이다.&lt;br&gt;
이는 클라우드 환경이나 컨테이너 기반 아키텍처에서 특히 중요한데, 서비스 인스턴스가 동적으로 생성되고 제거되는 상황에서 효과적인 통신을 가능하게 한다.&lt;/p&gt;
&lt;h3 id=&#34;필요성&#34;&gt;필요성&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;동적 환경 대응: 클라우드 및 컨테이너 기반 환경에서 서비스의 IP 주소와 포트가 동적으로 변경된다.&lt;/li&gt;
&lt;li&gt;자동 스케일링: 서비스 인스턴스가 자동으로 추가되거나 제거될 때 이를 감지하고 관리해야 한다.&lt;/li&gt;
&lt;li&gt;장애 대응: 서비스 장애 시 자동으로 대체 인스턴스로 전환할 수 있어야 한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;service-discovery의-주요-구성-요소&#34;&gt;Service Discovery의 주요 구성 요소&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;서비스 레지스트리&lt;/strong&gt;: 사용 가능한 서비스 인스턴스의 네트워크 위치를 저장하는 데이터베이스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;서비스 등록&lt;/strong&gt;: 서비스 인스턴스가 시작될 때 자신의 정보를 레지스트리에 등록하는 프로세스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;서비스 발견&lt;/strong&gt;: 클라이언트가 필요한 서비스의 위치를 레지스트리에서 조회하는 프로세스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;상태 모니터링&lt;/strong&gt;: 등록된 서비스의 상태를 주기적으로 확인하는 메커니즘&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;service-discovery-패턴의-종류&#34;&gt;Service Discovery 패턴의 종류&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Client-Side Discovery: 클라이언트가 직접 서비스 레지스트리에 질의하여 서비스 위치를 찾는 방식.&lt;br&gt;
장점:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
