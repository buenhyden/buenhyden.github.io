<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Networking-Knowledge on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/networking-knowledge/</link>
    <description>Recent content in Networking-Knowledge on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 31 Jan 2025 13:34:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/networking-knowledge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP/IP 4 Layers - 1. Network Access Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/network-access-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/network-access-layer/</guid>
      <description>데이터를 전송 매체에 맞게 포맷팅하고 물리적 하드웨어 주소를 기반으로 데이터를 주소 지정한다</description>
    </item>
    <item>
      <title>OSI 7 Layers - 1. Physical Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/physical-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/physical-layer/</guid>
      <description>OSI 7계층의 가장 첫 번째 계층으로, 실제 데이터가 전기 신호나 빛으로 변환되어 전송되는 곳</description>
    </item>
    <item>
      <title>TCP/IP 4계층 - 2. Internet Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/internet-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/internet-layer/</guid>
      <description>인터넷 계층은 TCP/IP 프로토콜 스택에서 네트워크 간의 통신을 담당하는 핵심 계층으로, 네트워크 간 데이터 전송을 담당하며, 데이터 패킷이 출발지에서 목적지까지 효율적으로 전달되도록 라우팅과 주소 지정(Addressing)을 수행한다.</description>
    </item>
    <item>
      <title>OSI 7 Layers - 2. DataLink Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/datalink-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/datalink-layer/</guid>
      <description>OSI 7계층에서 두 번째 계층으로, 직접 연결된 두 장치 간의 안전한 데이터 전송을 담당</description>
    </item>
    <item>
      <title>Network Topologies</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/network-infrastructure/network-topologies/topologies/</link>
      <pubDate>Mon, 16 Dec 2024 03:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/network-infrastructure/network-topologies/topologies/</guid>
      <description>네트워크 토폴로지는 컴퓨터 네트워크의 노드 (장치) 와 링크 (연결) 가 배열되고 연결되는 구조와 방식을 의미한다. 버스형, 성형, 링형, 메시형, 트리형 등 다양한 유형이 있으며, 물리적 배치와 논리적 데이터 흐름을 모두 포함한다. 각 토폴로지는 고유한 장단점을 가지며, 네트워크의 성능, 확장성, 신뢰성 및 비용에 직접적인 영향을 미친다.</description>
    </item>
    <item>
      <title>TCP/IP 4계층 - 3. Transport Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/transport-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/transport-layer/</guid>
      <description>전송 계층은 서로 다른 호스트에서 동작하는 애플리케이션 프로세스 간의 논리적 통신을 제공한다.</description>
    </item>
    <item>
      <title>OSI 7 Layers - 3. Network Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/</guid>
      <description>3계층으로, 서로 다른 네트워크 간의 데이터 전송을 담당</description>
    </item>
    <item>
      <title>TCP/IP 4계층 - 4. Application Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/application-layer/</link>
      <pubDate>Thu, 17 Oct 2024 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/layer-overview/application-layer/</guid>
      <description>TCP/IP 프로토콜 스택에서 가장 상위 계층으로, 사용자와 가장 가까운 계층으로 이메일, 웹 서핑, 파일 전송 등의 서비스를 위한 프로토콜들이 모여 있는 계층이다.</description>
    </item>
    <item>
      <title>OSI 7 Layers - 4. Transport Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/transport-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/transport-layer/</guid>
      <description>4번째 계층으로, 데이터 전송의 신뢰성과 효율성을 담당하는 중요한 역할을 한다</description>
    </item>
    <item>
      <title>OSI 7 Layers - 5. Session Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/session-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/session-layer/</guid>
      <description>세션 계층은 OSI 모델의 5번째 계층으로, 통신 세션을 구성하는 계층으로 응용 프로그램 간의 대화를 유지하기 위한 구조를 제공하고, 프로세스들의 논리적인 연결을 담당한다.</description>
    </item>
    <item>
      <title>OSI 7 Layers - 6. Presentation Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/presentation-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/presentation-layer/</guid>
      <description>OSI 7계층 모델에서 6번째 계층으로, 데이터의 표현과 암호화를 담당하는 중요한 역할을 한다.</description>
    </item>
    <item>
      <title>OSI 7 Layers - 7. Application Layer</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/application-layer/</link>
      <pubDate>Wed, 16 Oct 2024 07:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/application-layer/</guid>
      <description>OSI 7계층 모델에서 최상위 계층으로, 사용자와 네트워크 간의 직접적인 상호작용을 담당한다</description>
    </item>
    <item>
      <title>MIME(Multipurpose Internet Mail Extensions)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/mime/</link>
      <pubDate>Fri, 31 Jan 2025 13:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/mime/</guid>
      <description>인터넷에서 다양한 형식의 데이터를 전송할 수 있게 해주는 인터넷 표준이다.</description>
    </item>
    <item>
      <title>DKIM (DomainKeys Identified Mail)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dkim/</link>
      <pubDate>Sat, 14 Dec 2024 09:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dkim/</guid>
      <description>DKIM은 이메일 인증을 위한 중요한 기술로, 이메일이 전송 과정에서 변조되지 않았으며 실제로 발신자가 주장하는 도메인에서 보낸 것임을 확인할 수 있게 해준다.  디지털 서명을 사용하여 이메일의 무결성과 출처를 검증하는 방식으로 작동한다.</description>
    </item>
    <item>
      <title>DMARC (Domain-based Message Authentication, Reporting, and Conformance)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dmarc/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/dmarc/</guid>
      <description>DMARC는 이메일 인증 프로토콜로, SPF(Sender Policy Framework)와 DKIM(DomainKeys Identified Mail)을 기반으로 작동한다.</description>
    </item>
    <item>
      <title>Domain Keys</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/domain-keys/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/domain-keys/</guid>
      <description>도메인 키(DomainKeys)는 이메일 발신자의 도메인을 확인하고 메시지 무결성을 보장하기 위해 설계된 이메일 인증 방법</description>
    </item>
    <item>
      <title>Sender Policy Framework (SPF)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/spf/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/spf/</guid>
      <description>SPF(Sender Policy Framework)는 이메일 스푸핑과 스팸을 방지하기 위해 설계된 이메일 인증 방법으로 이메일 도메인 소유자가 어떤 메일 서버가 해당 도메인에서 이메일을 보낼 수 있는 권한이 있는지 지정할 수 있게 해주는 중요한 보안 메커니즘이다.</description>
    </item>
    <item>
      <title>이메일 필터링 방식: White Listing vs. Grey Listing</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/white-listing-vs-grey-listing/</link>
      <pubDate>Sat, 14 Dec 2024 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/email/email-security/white-listing-vs-grey-listing/</guid>
      <description>Whitelisting과 Greylisting은 이메일 보안 및 스팸 방지를 위해 사용되는 두 가지 주요 접근 방식</description>
    </item>
    <item>
      <title>AMQP</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/amqp/</link>
      <pubDate>Sun, 20 Oct 2024 05:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/amqp/</guid>
      <description>AMQP(Advanced Message Queuing Protocol)는 메시지 지향 미들웨어를 위한 개방형 표준 응용 계층 프로토콜이다.</description>
    </item>
    <item>
      <title>MQTT</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/mqtt/</link>
      <pubDate>Sun, 20 Oct 2024 04:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/asynchronous-communication/message-queuing/mqtt/</guid>
      <description>MQTT(Message Queuing Telemetry Transport)는 IoT 환경에서 널리 사용되는 경량 메시징 프로토콜이다.</description>
    </item>
    <item>
      <title>멱등성 (Idempotency)과 안전한 메서드 (Safe Methods)의 비교</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/idempotency-and-safe-methods/</link>
      <pubDate>Sat, 19 Oct 2024 00:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/idempotency-and-safe-methods/</guid>
      <description>멱등성과 안전한 메서드는 HTTP 메서드의 중요한 특성으로, 서버의 상태 변화와 관련이 있다.</description>
    </item>
    <item>
      <title>안전한 메서드 (Safe Methods)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/safe-methods/</link>
      <pubDate>Fri, 18 Oct 2024 16:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/safe-methods/</guid>
      <description>서버의 상태를 변경하지 않는 HTTP 메서드</description>
    </item>
    <item>
      <title>SSH (Secure Shell)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/remote-access/ssh/</link>
      <pubDate>Fri, 18 Oct 2024 12:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/remote-access/ssh/</guid>
      <description>SSH는 네트워크 상의 다른 컴퓨터에 안전하게 접속하기 위한 암호화 네트워크 프로토콜.</description>
    </item>
    <item>
      <title>Cookies</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cookies/</link>
      <pubDate>Fri, 18 Oct 2024 07:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cookies/</guid>
      <description>웹사이트가 사용자의 브라우저에 저장하는 작은 텍스트 파일</description>
    </item>
    <item>
      <title>HTTP Cache</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cache/</link>
      <pubDate>Fri, 18 Oct 2024 07:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/cache/</guid>
      <description>웹 브라우저나 서버에서 데이터를 임시 저장하는 기술</description>
    </item>
    <item>
      <title>HTTP Methods</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/</link>
      <pubDate>Fri, 18 Oct 2024 07:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/methods/</guid>
      <description>클라이언트가 서버에 특정 작업을 요청하기 위해 사용하는 방식</description>
    </item>
    <item>
      <title>HTTP Status Code</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/status-code/</link>
      <pubDate>Fri, 18 Oct 2024 07:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/status-code/</guid>
      <description>서버가 클라이언트의 요청에 대한 응답 상태를 나타내는 3자리 숫자.</description>
    </item>
    <item>
      <title>HTTP (HyperText Transfer Protocol)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/</link>
      <pubDate>Fri, 18 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/protocols/web/http/</guid>
      <description>웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다</description>
    </item>
    <item>
      <title>네트워크 주소 변환 (NAT, Network Address Translation)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/internet-layer/address-translation/nat/</link>
      <pubDate>Thu, 17 Oct 2024 13:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/internet-layer/address-translation/nat/</guid>
      <description>네트워크 주소 변환(NAT, Network Address Translation)은 IP 패킷의 TCP/UDP 포트 번호와 소스 및 목적지의 IP 주소를 재기록하면서 라우터를 통해 네트워크 트래픽을 주고받는 기술이다.</description>
    </item>
    <item>
      <title>DNS 캐싱 (DNS Caching)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/network-services/dns/dns-fundamentals/caching/dns-caching/</link>
      <pubDate>Thu, 17 Oct 2024 07:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/network-services/dns/dns-fundamentals/caching/dns-caching/</guid>
      <description>DNS 캐싱은 이전에 조회한 도메인 이름과 IP 주소의 매핑 정보를 임시로 저장하는 메커니즘이다.</description>
    </item>
    <item>
      <title>IP(Internet Protocol)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/internet-layer/internet-protocol/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/internet-layer/internet-protocol/</guid>
      <description>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합</description>
    </item>
    <item>
      <title>Packet</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/packet/</link>
      <pubDate>Wed, 16 Oct 2024 10:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/packet/</guid>
      <description>패킷(Packet)은 네트워크를 통해 전송되는 데이터의 기본 단위</description>
    </item>
    <item>
      <title>Routing</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/routing/</link>
      <pubDate>Wed, 16 Oct 2024 10:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/routing/</guid>
      <description>데이터 패킷이 출발지에서 목적지까지 가장 효율적인 경로로 전달되도록 하는 과정.</description>
    </item>
    <item>
      <title>Network Hop</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/network-hop/</link>
      <pubDate>Wed, 16 Oct 2024 09:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/network-hop/</guid>
      <description>네트워크 홉(Network Hop)은 데이터 패킷이 출발지에서 목적지로 이동하는 과정에서 거치는 네트워크 장비(주로 라우터)의 횟수를 의미한다.</description>
    </item>
    <item>
      <title>프래그먼테이션 (Fragmentation)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/fragmentation/</link>
      <pubDate>Wed, 16 Oct 2024 02:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/layer-overview/network-layer/fragmentation/</guid>
      <description>Fragmentation은 큰 데이터 패킷을 네트워크의 최대 전송 단위(Maximum Transmission Unit, MTU)보다 작은 조각으로 나누는 과정이다.</description>
    </item>
  </channel>
</rss>
