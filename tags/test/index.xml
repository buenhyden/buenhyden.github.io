<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Test</title><link>https://buenhyden.github.io/tags/test/</link><description>Recent content in Test on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 30 Dec 2024 02:32:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Test</title><link>https://buenhyden.github.io/posts/qa/qc/test/</link><pubDate>Wed, 06 Nov 2024 06:14:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/</guid><description>
&lt;h2>테스트 (Test)&lt;span class="hx-absolute -hx-mt-20" id="테스트-test">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>소프트웨어 테스트는 &amp;ldquo;주요 이해관계자들에게 시험 대상 제품 또는 서비스의 품질에 관한 정보를 제공하는 조사 과정&amp;quot;으로 정의된다.&lt;/p>
&lt;p>테스트의 주요 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>결함 발견: 프로그램 내의 오류, 버그, 잠재적 문제를 식별하고 수정&lt;/li>
&lt;li>품질 보증: 안정적이고 신뢰성 있는 소프트웨어 제공&lt;/li>
&lt;li>사용자 만족도 향상: 소프트웨어가 기대한 대로 작동하는지 확인&lt;/li>
&lt;/ol>
&lt;h3>테스트의 중요성&lt;span class="hx-absolute -hx-mt-20" id="테스트의-중요성">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>소프트웨어 테스트는 다음과 같은 이유로 중요하다:&lt;/p>
&lt;ol>
&lt;li>비용 절감: 초기에 결함을 발견하고 수정함으로써 개발 비용을 절감&lt;/li>
&lt;li>신뢰성 확보: 안정적이고 예측 가능한 소프트웨어 제공&lt;/li>
&lt;li>고객 만족도 향상: 품질이 보장된 소프트웨어로 사용자 경험 개선&lt;/li>
&lt;/ol>
&lt;h3>소프트웨어 테스트의 7가지 원칙&lt;span class="hx-absolute -hx-mt-20" id="소프트웨어-테스트의-7가지-원칙">&lt;/span>
&lt;a href="#%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-7%ea%b0%80%ec%a7%80-%ec%9b%90%ec%b9%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>결함 발견: 테스트의 주요 목적은 결함을 찾는 것&lt;/li>
&lt;li>완벽한 테스트는 불가능: 모든 경우를 테스트하는 것은 현실적으로 불가능&lt;/li>
&lt;li>초기 테스트: 개발 초기 단계에서 테스트를 시작하는 것이 중요&lt;/li>
&lt;li>결함 집중: 일부 모듈에 결함이 집중되는 경향이 있음&lt;/li>
&lt;li>살충제 패러독스: 동일한 테스트를 반복하면 새로운 결함을 발견하기 어려움&lt;/li>
&lt;li>테스트는 상황에 의존적: 소프트웨어의 용도와 환경에 따라 테스트 방법이 달라짐&lt;/li>
&lt;li>오류 부재의 오해: 결함이 없다고 해서 사용자의 요구를 완전히 만족시키는 것은 아님&lt;/li>
&lt;/ol>
&lt;h3>테스트 프로세스&lt;span class="hx-absolute -hx-mt-20" id="테스트-프로세스">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>소프트웨어 테스트 프로세스는 일반적으로 다음 단계를 포함한다:&lt;/p>
&lt;ol>
&lt;li>테스트 계획&lt;/li>
&lt;li>테스트 설계&lt;/li>
&lt;li>테스트 구현&lt;/li>
&lt;li>테스트 실행&lt;/li>
&lt;li>결과 분석&lt;/li>
&lt;li>재테스트 및 회귀 테스트&lt;/li>
&lt;li>종료 및 보고&lt;/li>
&lt;/ol>
&lt;h3>테스트 방법론&lt;span class="hx-absolute -hx-mt-20" id="테스트-방법론">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b0%a9%eb%b2%95%eb%a1%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>테스트 주도 개발(TDD, Test-Driven Development)&lt;span class="hx-absolute -hx-mt-20" id="테스트-주도-개발tdd-test-driven-development">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%a3%bc%eb%8f%84-%ea%b0%9c%eb%b0%9ctdd-test-driven-development" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>테스트를 먼저 작성하고, 이를 통과하는 코드를 개발하는 방식&lt;/p>
&lt;ul>
&lt;li>TDD의 기본 사이클&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>실패하는 테스트 작성&lt;/li>
&lt;li>테스트를 통과하는 최소한의 코드 작성&lt;/li>
&lt;li>코드 리팩토링&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TDD 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_total&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 실패하는 테스트 작성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ShoppingCart&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;apple&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;banana&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">calculate_total&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>행위 주도 개발(BDD, Behavior-Driven Development)&lt;span class="hx-absolute -hx-mt-20" id="행위-주도-개발bdd-behavior-driven-development">&lt;/span>
&lt;a href="#%ed%96%89%ec%9c%84-%ec%a3%bc%eb%8f%84-%ea%b0%9c%eb%b0%9cbdd-behavior-driven-development" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>사용자의 행위를 중심으로 테스트를 작성하는 방법&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gherkin" data-lang="gherkin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">Feature:&lt;/span>&lt;span class="nf"> 장바구니 계산
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">Scenario:&lt;/span>&lt;span class="nf"> 상품 두 개 추가
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">&lt;/span>&lt;span class="k"> Given &lt;/span>&lt;span class="nf">장바구니가 비어있음
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">When &lt;/span>&lt;span class="nf">사과(&lt;/span>&lt;span class="s">1000&lt;/span>&lt;span class="nf">원)를 추가
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">And &lt;/span>&lt;span class="nf">바나나(&lt;/span>&lt;span class="s">2000&lt;/span>&lt;span class="nf">원)를 추가
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf"> &lt;/span>&lt;span class="k">Then &lt;/span>&lt;span class="nf">총액은 &lt;/span>&lt;span class="s">3000&lt;/span>&lt;span class="nf">원이어야 함&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>테스트 자동화&lt;span class="hx-absolute -hx-mt-20" id="테스트-자동화">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%9e%90%eb%8f%99%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>테스트 자동화는 반복적인 테스트를 효율적으로 수행하기 위해 필수적이다.&lt;/p>
&lt;p>주요 테스트 자동화 도구들은 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>Java: JUnit, TestNG&lt;/li>
&lt;li>Python: pytest, unittest&lt;/li>
&lt;li>JavaScript: Jest, Mocha&lt;/li>
&lt;/ul>
&lt;p>자동화된 테스트의 장점:&lt;/p>
&lt;ul>
&lt;li>빠른 피드백 루프 제공&lt;/li>
&lt;li>회귀 테스트 용이&lt;/li>
&lt;li>지속적 통합/배포(CI/CD) 파이프라인에 통합 가능&lt;/li>
&lt;li>테스트 결과의 일관성 보장&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>용량 테스트 (Volume Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/volume-test/</link><pubDate>Mon, 30 Dec 2024 02:32:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/volume-test/</guid><description>
&lt;h2>용량 테스트 (Volume Test)&lt;span class="hx-absolute -hx-mt-20" id="용량-테스트-volume-test">&lt;/span>
&lt;a href="#%ec%9a%a9%eb%9f%89-%ed%85%8c%ec%8a%a4%ed%8a%b8-volume-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>용량 테스트는 소프트웨어 시스템이 대량의 데이터를 처리할 때 어떻게 동작하는지 확인하는 성능 테스트의 한 유형이다.&lt;br>
이는 시스템이 대규모 데이터를 효율적으로 처리할 수 있는지 검증하는 과정이다.&lt;/p>
&lt;p>데이터베이스 시스템의 용량 테스트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">database&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">DatabaseConnection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">data_generator&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">DataGenerator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">VolumeTest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DatabaseConnection&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data_generator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataGenerator&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_large_data_handling&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;대용량 데이터 처리 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;대용량 데이터 처리 테스트 시작…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 데이터 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">data_generator&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate_large_dataset&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">records&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1000000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 백만 건의 레코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size_per_record&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;2KB&amp;#34;&lt;/span> &lt;span class="c1"># 레코드당 2KB&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 삽입 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;데이터 삽입 테스트 중…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_bulk_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 조회 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;데이터 조회 테스트 중…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_data_retrieval&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 집계 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;데이터 집계 테스트 중…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_data_aggregation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">execution_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;전체 테스트 소요 시간: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">execution_time&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">초&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_bulk_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;대량 데이터 삽입 성능 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">batch_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10000&lt;/span> &lt;span class="c1"># 배치 크기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">batch_size&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">batch&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">batch_size&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 삽입 시간 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bulk_insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">insert_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 메트릭 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metrics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;operation&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;bulk_insert&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;batch_size&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;execution_time&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">insert_time&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;records_per_second&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">insert_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>용량 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>대용량 데이터 처리 능력 평가&lt;/li>
&lt;li>시스템의 확장성 검증&lt;/li>
&lt;li>데이터베이스 성능 최적화&lt;/li>
&lt;li>메모리 사용량 및 처리 시간 측정&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>용량 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>데이터베이스 시스템&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_database_capacity&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;데이터베이스 용량 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 대량의 테스트 데이터 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_test_data&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">record_count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1000000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">table_count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">with_indexes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터베이스 작업 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_operations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;삽입&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_insert_performance&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;조회&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_query_performance&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;갱신&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_update_performance&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;삭제&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_delete_performance&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">operation_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">test_func&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_operations&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">operation_name&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">test_func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analyze_performance_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>파일 시스템&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_file_processing&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;대용량 파일 처리 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 대용량 파일 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">large_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_test_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size_gb&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 10GB 테스트 파일&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 파일 처리 성능 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;읽기_성능&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">test_file_read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_file&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;쓰기_성능&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">test_file_write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_file&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;검색_성능&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">test_file_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_file&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;압축_성능&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">test_file_compression&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">large_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analyze_file_processing_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metrics&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>데이터 처리 로직&lt;/p>
&lt;/li>
&lt;li>
&lt;p>메모리 관리 시스템&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>용량 테스트는 주로 다음과 같은 시점에 수행된다:&lt;/p>
&lt;ol>
&lt;li>시스템 개발의 후반부&lt;/li>
&lt;li>대규모 데이터 마이그레이션 전&lt;/li>
&lt;li>시스템 확장 계획 수립 시&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>데이터 처리 속도&lt;/li>
&lt;li>시스템 응답 시간&lt;/li>
&lt;li>데이터 무결성&lt;/li>
&lt;li>리소스 사용률 (CPU, 메모리, 디스크 I/O)&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>용량 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>테스트 계획 수립: 목표 설정, 데이터 볼륨 정의&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_volume_test_plan&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;용량 테스트 계획 수립&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_plan&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;데이터_크기&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;초기_데이터&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;100GB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;증가_단계&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;200GB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;500GB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;1TB&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최종_목표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2TB&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;테스트_항목&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;데이터 삽입 성능&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;쿼리 응답 시간&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;백업/복구 성능&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;저장소 효율성&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성능_기준&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;쿼리_응답시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;3초 이내&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;처리량&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;초당 1000건 이상&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;저장소_사용률&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;70% 이하&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">test_plan&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>테스트 데이터 준비: 대량의 테스트 데이터 생성 또는 수집&lt;/li>
&lt;li>테스트 환경 구축: 실제 환경과 유사한 테스트 환경 준비&lt;/li>
&lt;li>테스트 실행: 대량 데이터 처리 시뮬레이션&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">execute_volume_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;용량 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모니터링 시작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">monitoring&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start_performance_monitoring&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 단계별 데이터 증가 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">data_size&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_plan&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;데이터_크기&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;증가_단계&amp;#39;&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 데이터 준비&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prepare_test_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_size&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 테스트 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">performance_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">run_performance_tests&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analyze_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">performance_metrics&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data_size&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모니터링 종료&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stop_monitoring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">monitoring&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="5">
&lt;li>결과 분석: 성능 지표 측정 및 분석&lt;/li>
&lt;li>최적화 및 재테스트: 문제점 개선 및 재검증&lt;/li>
&lt;/ol>
&lt;h3>용량 테스트를 수행할 때의 주요 고려사항&lt;span class="hx-absolute -hx-mt-20" id="용량-테스트를-수행할-때의-주요-고려사항">&lt;/span>
&lt;a href="#%ec%9a%a9%eb%9f%89-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%ec%88%98%ed%96%89%ed%95%a0-%eb%95%8c%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터 특성 고려&lt;br>
실제 운영 환경과 유사한 데이터 패턴과 분포를 사용한다.&lt;/li>
&lt;li>단계적 접근&lt;br>
데이터 양을 점진적으로 증가시키면서 시스템의 반응을 관찰한다.&lt;/li>
&lt;li>장기 영향 평가&lt;br>
시간이 지남에 따른 성능 저하나 저장소 문제를 확인한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>대규모 전자상거래 플랫폼의 용량 테스트를 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>목표 설정: 1억 개의 상품 데이터와 1천만 명의 사용자 데이터 처리 능력 검증&lt;/li>
&lt;li>테스트 데이터 준비: 실제 데이터를 기반으로 대량의 가상 상품 및 사용자 데이터 생성&lt;/li>
&lt;li>테스트 실행:
&lt;ul>
&lt;li>1억 개 상품 데이터 일괄 등록&lt;/li>
&lt;li>1천만 명 사용자의 동시 접속 및 검색 시뮬레이션&lt;/li>
&lt;li>대량 주문 처리 (초당 1000건의 주문)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>결과 분석:
&lt;ul>
&lt;li>데이터 등록 시간: 2시간 소요 (목표: 3시간 이내)&lt;/li>
&lt;li>검색 응답 시간: 평균 1.5초 (목표: 2초 이내)&lt;/li>
&lt;li>주문 처리 성공률: 99.9% (목표: 99.5% 이상)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개선 사항:
&lt;ul>
&lt;li>데이터베이스 인덱싱 최적화&lt;/li>
&lt;li>캐시 시스템 도입으로 검색 속도 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>확장성 테스트 (Scalability Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/scalability-test/</link><pubDate>Mon, 30 Dec 2024 02:32:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/scalability-test/</guid><description>
&lt;h2>확장성 테스트 (Scalability Test)&lt;span class="hx-absolute -hx-mt-20" id="확장성-테스트-scalability-test">&lt;/span>
&lt;a href="#%ed%99%95%ec%9e%a5%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8-scalability-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>확장성 테스트는 소프트웨어 시스템이 증가하는 부하나 규모에 얼마나 잘 대응할 수 있는지를 평가하는 성능 테스트의 한 유형이다.&lt;br>
이는 시스템의 확장 능력을 측정하고 검증하는 과정이다.&lt;/p>
&lt;p>웹 서비스의 확장성 테스트 예시 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">concurrent.futures&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ThreadPoolExecutor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">monitoring&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">SystemMonitor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ScalabilityTest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">monitor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SystemMonitor&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_vertical_scaling&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;수직적 확장성 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> (단일 서버의 자원 증가에 따른 성능 변화 측정)&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 서버 자원을 단계적으로 증가시키며 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">resource_configs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;cpu_cores&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;memory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2GB&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;cpu_cores&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;memory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4GB&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;cpu_cores&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;memory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;8GB&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">config&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">resource_configs&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 서버 리소스 조정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">adjust_server_resources&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">measure_performance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;config&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;metrics&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">metrics&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 선형적 확장성 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">verify_linear_scaling&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_horizontal_scaling&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;수평적 확장성 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> (서버 수 증가에 따른 성능 변화 측정)&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 서버 인스턴스 수를 단계적으로 증가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">server_count&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 서버 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_server_instances&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server_count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 부하 테스트 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">ThreadPoolExecutor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_workers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">executor&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 동시 요청 시뮬레이션&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">futures&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">submit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">simulate_request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 수집&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">responses&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">f&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">futures&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 메트릭 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">analyze_scaling_metrics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server_count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">responses&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>확장성 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>시스템의 확장 한계 파악&lt;/li>
&lt;li>성능 병목 현상 식별&lt;/li>
&lt;li>리소스 사용의 효율성 평가&lt;/li>
&lt;li>미래 성장에 대한 대비 능력 검증&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>확장성 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>사용자 수 증가에 따른 시스템 반응&lt;/li>
&lt;li>데이터 볼륨 증가에 따른 처리 능력&lt;/li>
&lt;li>트랜잭션 수 증가에 따른 시스템 성능&lt;/li>
&lt;li>하드웨어 리소스 확장에 따른 성능 변화&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>확장성 테스트는 주로 다음 시점에 수행된다:&lt;/p>
&lt;ol>
&lt;li>시스템 설계 단계에서의 초기 평가&lt;/li>
&lt;li>개발 후반부의 성능 최적화 단계&lt;/li>
&lt;li>대규모 사용자 유입이 예상되는 시점 전&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>응답 시간&lt;/li>
&lt;li>처리량 (Throughput)&lt;/li>
&lt;li>리소스 사용률 (CPU, 메모리, 디스크 I/O, 네트워크)&lt;/li>
&lt;li>데이터베이스 성능&lt;/li>
&lt;/ol>
&lt;h3>확장성 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="확장성-테스트의-종류">&lt;/span>
&lt;a href="#%ed%99%95%ec%9e%a5%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>수직적 확장성 테스트: 단일 시스템의 리소스를 증가시켜 성능 변화를 측정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_vertical_scalability&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;CPU와 메모리 증가에 따른 성능 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">workload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_test_workload&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">cpu_cores&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">memory_gb&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 자원 조정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">configure_system_resources&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cpu_cores&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">cpu_cores&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">memory_gb&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">memory_gb&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">performance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_system_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">workload&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;CPU: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">cpu_cores&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">cores, &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Memory: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">memory_gb&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">GB, &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Performance: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">performance&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>수평적 확장성 테스트: 여러 시스템을 추가하여 분산 처리 능력을 평가&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_horizontal_scalability&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;서버 인스턴스 수 증가에 따른 성능 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">base_load&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="c1"># 기본 요청 수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">instance_count&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 서버 인스턴스 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scale_out_servers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">instance_count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 부하 증가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_load&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">base_load&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">instance_count&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">throughput&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_throughput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_load&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">latency&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_latency&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_load&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 선형 확장성 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">verify_linear_scaling&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">instance_count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">throughput&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>확장성 테스트는 다음과 같은 단계로 진행된니다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립: 목표 설정, 시나리오 정의&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">scalability_test_plan&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;테스트_범위&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;수직적_확장&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;CPU&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;메모리&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;4GB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;8GB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;16GB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;32GB&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;수평적_확장&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;서버_수&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;로드밸런서&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;라운드로빈&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;최소연결&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성능_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;처리량(TPS)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;응답시간&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;자원_활용률&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;목표_기준&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;선형_확장성&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;80% 이상&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;응답시간_증가&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;20% 이내&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;비용_효율성&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;리소스당 성능향상 70% 이상&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>초기 성능 측정: 기준점 설정&lt;/p>
&lt;/li>
&lt;li>
&lt;p>단계적 부하 증가: 사용자 수, 데이터 양, 트랜잭션 수 등을 점진적으로 증가&lt;/p>
&lt;/li>
&lt;li>
&lt;p>성능 모니터링: 각 단계에서의 시스템 반응 관찰&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">execute_scalability_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;확장성 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기준 성능 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">baseline_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_baseline_performance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 단계별 확장 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">scale_level&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_plan&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scale_levels&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 확장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scale_system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scale_level&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 부하 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">generate_test_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scale_level&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expected_load&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_performance_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 확장성 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analyze_scaling_efficiency&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">baseline_metrics&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_metrics&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scale_level&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 원복&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">restore_system_state&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>결과 분석: 성능 변화 추이 분석, 병목 지점 식별&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">analyze_scalability_results&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;확장성 테스트 결과 분석&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;확장성_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;선형성&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_linearity_score&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;효율성&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_scaling_efficiency&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;비용_효율&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_cost_efficiency&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;병목_지점&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;자원_한계&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_resource_bottlenecks&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;아키텍처_한계&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_architectural_limits&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;권장사항&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">generate_scaling_recommendations&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">create_analysis_report&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">analysis&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보고서 작성: 발견된 문제점과 개선 방안 정리&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>확장성 테스트 수행 시 주요 고려사항&lt;span class="hx-absolute -hx-mt-20" id="확장성-테스트-수행-시-주요-고려사항">&lt;/span>
&lt;a href="#%ed%99%95%ec%9e%a5%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%88%98%ed%96%89-%ec%8b%9c-%ec%a3%bc%ec%9a%94-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>점진적 접근&lt;br>
급격한 확장보다는 단계적으로 규모를 늘려가며 테스트한다.&lt;/li>
&lt;li>비용 효율성 고려&lt;br>
자원 증가에 따른 성능 향상과 비용을 함께 분석한다.&lt;/li>
&lt;li>병목 지점 식별&lt;br>
시스템의 확장을 제한하는 요소들을 찾아낸다.&lt;/li>
&lt;li>자동화된 테스트&lt;br>
반복적인 테스트를 자동화하여 효율성을 높인다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 애플리케이션의 확장성 테스트를 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>목표 설정: 현재 10,000명의 동시 접속자를 100,000명까지 확장 가능한지 검증&lt;/li>
&lt;li>시나리오: 상품 검색, 장바구니 추가, 결제 프로세스 수행&lt;/li>
&lt;li>테스트 실행:
&lt;ul>
&lt;li>10,000명부터 시작하여 20,000명, 50,000명, 100,000명으로 단계적 증가&lt;/li>
&lt;li>각 단계에서 응답 시간, 처리량, 서버 리소스 사용률 측정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>결과 분석:
&lt;ul>
&lt;li>80,000명까지는 성능 저하 없이 처리 가능&lt;/li>
&lt;li>100,000명에서 데이터베이스 연결 지연 발생&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개선 방안: 데이터베이스 샤딩 도입, 캐시 서버 추가&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>스파이크 테스트(Spike Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/spike-test/</link><pubDate>Mon, 30 Dec 2024 01:54:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/spike-test/</guid><description>
&lt;h2>스파이크 테스트(Spike Test)&lt;span class="hx-absolute -hx-mt-20" id="스파이크-테스트spike-test">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%8c%8c%ec%9d%b4%ed%81%ac-%ed%85%8c%ec%8a%a4%ed%8a%b8spike-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>스파이크 테스트는 시스템에 갑작스럽고 극단적인 부하를 주어 시스템의 반응을 측정하는 성능 테스트의 한 유형이다.&lt;br>
이는 마치 갑자기 많은 사람들이 한 번에 몰려드는 상황을 시뮬레이션하는 것과 비슷하다.&lt;/p>
&lt;p>웹 서비스의 스파이크 테스트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">concurrent.futures&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ThreadPoolExecutor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">monitoring&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">SystemMonitor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SpikeTest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">monitor&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SystemMonitor&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">base_load&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="c1"># 기본 사용자 수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">spike_load&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5000&lt;/span> &lt;span class="c1"># 스파이크 시 사용자 수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">run_spike_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스파이크 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;스파이크 테스트 시작…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 기본 부하 상태 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;기본 부하 상태 측정 중…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">base_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">measure_system_state&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">base_load&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 스파이크 부하 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;스파이크 발생: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">spike_load&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">명의 동시 사용자 생성&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">spike_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">generate_spike_load&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 3. 복구 과정 모니터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;시스템 복구 과정 모니터링 중…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recovery_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">monitor_recovery&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 4. 결과 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">analyze_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">base_metrics&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">spike_metrics&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">recovery_metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">measure_system_state&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_count&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;시스템 상태 측정&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">ThreadPoolExecutor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_workers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">user_count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">executor&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 동시 요청 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">futures&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">executor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">submit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">simulate_user_request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 수집&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">responses&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">f&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">futures&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;response_times&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;response_time&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">responses&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;error_count&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">responses&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">]),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;system_metrics&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">monitor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_current_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스파이크 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>급격한 부하 증가: 짧은 시간 동안 사용자 수를 급격히 증가시킨다.&lt;/li>
&lt;li>시스템 회복력 평가: 극단적인 상황에서 시스템이 얼마나 빠르게 회복되는지 확인한다.&lt;/li>
&lt;li>성능 병목 현상 식별: 급격한 부하 증가 시 발생하는 성능 저하의 원인을 파악한다.&lt;/li>
&lt;li>장애 대비: 예상치 못한 트래픽 급증 상황에 대한 대비책을 마련한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스파이크 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>웹 서버 및 애플리케이션 서버&lt;/li>
&lt;li>데이터베이스 시스템&lt;/li>
&lt;li>네트워크 인프라&lt;/li>
&lt;li>로드 밸런서&lt;/li>
&lt;/ol>
&lt;h3>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>순수 스파이크 테스트: 갑작스러운 부하 증가 후 바로 감소하는 패턴을 테스트&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">pure_spike_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;순수 스파이크 패턴 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기본 부하 상태&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">simulate_base_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 갑작스러운 부하 증가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;스파이크 시작&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">spike_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">simulate_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 50배 증가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 부하 감소 및 복구 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;부하 감소&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recovery_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">monitor_recovery&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analyze_spike_impact&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spike_metrics&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">recovery_metrics&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>복합 스파이크 테스트: 여러 번의 연속적인 스파이크를 테스트&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">multiple_spike_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;복합 스파이크 패턴 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">spike_patterns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;duration&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="c1"># 1분간 1000명&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;duration&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">},&lt;/span> &lt;span class="c1"># 30초간 3000명&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;users&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;duration&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="c1"># 15초간 5000명&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">pattern&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">spike_patterns&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 스파이크 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_spike&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pattern&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;users&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">pattern&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;duration&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 회복 시간 제공&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">120&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 2분 회복 시간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analyze_multiple_spikes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스파이크 테스트는 주로 다음과 같은 시점에 수행된다:&lt;/p>
&lt;ol>
&lt;li>대규모 이벤트나 프로모션 전&lt;/li>
&lt;li>시스템 업그레이드 후&lt;/li>
&lt;li>계절적 트래픽 급증이 예상될 때&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>응답 시간&lt;/li>
&lt;li>오류율&lt;/li>
&lt;li>시스템 복구 시간&lt;/li>
&lt;li>리소스 사용률 (CPU, 메모리, 디스크 I/O)&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스파이크 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 시나리오 설계: 예상되는 급격한 부하 증가 상황을 모델링한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">prepare_spike_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스파이크 테스트 준비&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_plan&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;기본_부하&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 일반적인 사용자 수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;스파이크_부하&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 첫 번째 스파이크&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 두 번째 스파이크&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">5000&lt;/span> &lt;span class="c1"># 세 번째 스파이크&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;측정_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;응답시간&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;에러율&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;시스템_자원_사용률&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_시간&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성공_기준&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최대_응답시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;5초&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최대_에러율&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;5%&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;3분 이내&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">test_plan&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>기준 성능 측정: 정상 부하에서의 시스템 성능을 측정한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>스파이크 부하 적용: 짧은 시간 동안 극단적인 부하를 가한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">execute_spike_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스파이크 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모니터링 시작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">monitoring&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">start_monitoring&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기본 상태 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">baseline&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_baseline_performance&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 스파이크 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">spike_load&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_plan&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;스파이크_부하&amp;#39;&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 스파이크 부하 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">generate_spike_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spike_load&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 반응 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">spike_impact&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_system_response&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 복구 과정 모니터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recovery&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">monitor_system_recovery&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">record_test_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">spike_load&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">spike_impact&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">recovery&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모니터링 종료&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stop_monitoring&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">monitoring&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>시스템 모니터링: 부하 중 및 부하 후 시스템의 반응을 관찰한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석: 시스템의 성능 저하 및 복구 과정을 분석한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">analyze_spike_test_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스파이크 테스트 결과 분석&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;부하_영향&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최대_응답시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_max_response_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;평균_응답시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_avg_response_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;에러_발생률&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_error_rate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_능력&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_recovery_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;자원_정상화&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">analyze_resource_normalization&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;시스템_안정성&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;임계점&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_breaking_point&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;취약_구성요소&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_weak_points&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">generate_report&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">analysis&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 티켓 예매 시스템의 스파이크 테스트를 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>시나리오: 인기 콘서트 티켓 오픈 1분 전, 10만 명의 사용자가 동시에 접속&lt;/li>
&lt;li>테스트 실행:
&lt;ul>
&lt;li>정상 상태에서 1,000명의 동시 접속자로 시작&lt;/li>
&lt;li>30초 만에 10만 명으로 급격히 증가&lt;/li>
&lt;li>5분간 유지 후 다시 정상 상태로 감소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모니터링 포인트:
&lt;ul>
&lt;li>웹 서버의 응답 시간&lt;/li>
&lt;li>데이터베이스 쿼리 처리 속도&lt;/li>
&lt;li>오류 발생률&lt;/li>
&lt;li>시스템 복구 시간&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>결과 분석:
&lt;ul>
&lt;li>최대 부하 시 응답 시간이 10초 이상으로 증가&lt;/li>
&lt;li>데이터베이스 연결 초과로 인한 오류 발생&lt;/li>
&lt;li>부하 감소 후 2분 내에 정상 상태로 복구&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>지속성 테스트(Endurance Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/endurance-test/</link><pubDate>Mon, 30 Dec 2024 01:53:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/endurance-test/</guid><description>
&lt;h2>지속성 테스트(Endurance Test)&lt;span class="hx-absolute -hx-mt-20" id="지속성-테스트endurance-test">&lt;/span>
&lt;a href="#%ec%a7%80%ec%86%8d%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8endurance-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>지속성 테스트는 소프트웨어 시스템이 장기간 동안 지속적인 부하 상태에서 어떻게 동작하는지 확인하는 성능 테스트의 한 유형이다.&lt;/p>
&lt;p>웹 서버의 지속성 테스트 예시 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">psutil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">EnduranceTest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">duration_hours&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">duration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">duration_hours&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">3600&lt;/span> &lt;span class="c1"># 시간을 초로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metrics_history&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">run_endurance_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;24시간 지속성 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;테스트 시작: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 메트릭 수집&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">collect_system_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metrics_history&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 저하 검사&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">detect_performance_degradation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metrics&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;성능 저하 감지!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">analyze_degradation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메모리 누수 검사&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">detect_memory_leak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metrics&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;메모리 누수 감지!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">analyze_memory_usage&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 1분마다 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">collect_system_metrics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;시스템 성능 지표 수집&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;timestamp&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;cpu_usage&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">psutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpu_percent&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;memory_usage&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">psutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">virtual_memory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">percent&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;disk_io&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">psutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">disk_io_counters&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;response_time&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">measure_response_time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">measure_response_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;시스템 응답 시간 측정&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주요 API 엔드포인트 호출&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;http://example.com/api/health&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;응답 시간 측정 실패: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>지속성 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>장기간 테스트: 수 시간에서 수일, 때로는 몇 주까지 지속된다.&lt;/li>
&lt;li>메모리 누수 탐지: 시간이 지남에 따라 발생할 수 있는 메모리 누수를 찾아낸다.&lt;/li>
&lt;li>시스템 안정성 평가: 장기간 사용 시 시스템의 안정성을 확인한다.&lt;/li>
&lt;li>성능 저하 확인: 시간이 지남에 따른 성능 저하 여부를 체크한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>지속성 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>애플리케이션 서버&lt;/li>
&lt;li>데이터베이스 시스템&lt;/li>
&lt;li>네트워크 인프라&lt;/li>
&lt;li>메모리 및 CPU 사용량&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>지속성 테스트는 주로 다음 시점에 수행된다:&lt;/p>
&lt;ol>
&lt;li>시스템 개발의 후반부&lt;/li>
&lt;li>주요 업데이트나 변경 후&lt;/li>
&lt;li>실제 운영 환경에 배포하기 전&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>메모리 사용량&lt;/li>
&lt;li>CPU 사용률&lt;/li>
&lt;li>응답 시간&lt;/li>
&lt;li>데이터베이스 연결 안정성&lt;/li>
&lt;/ol>
&lt;h3>지속성 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="지속성-테스트의-종류">&lt;/span>
&lt;a href="#%ec%a7%80%ec%86%8d%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>기본 지속성 테스트: 일반적인 사용 조건에서의 장기 성능 측정&lt;/li>
&lt;li>확장성 지속성 테스트: 점진적으로 부하를 증가시키며 장기 성능 측정&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>지속성 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립: 목표 설정, 시나리오 정의&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 환경 구축: 실제 환경과 유사한 테스트 환경 준비&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">prepare_endurance_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;지속성 테스트 환경 준비&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 초기 상태 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">baseline_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collect_baseline_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모니터링 도구 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setup_monitoring_tools&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 데이터 준비&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">prepare_test_data&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 백업 시스템 준비&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setup_backup_systems&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">baseline_metrics&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>테스트 실행: 장기간 동안 일정한 부하를 가하며 테스트 수행&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">execute_endurance_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;지속성 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_duration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">24&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">3600&lt;/span> &lt;span class="c1"># 1주일&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">test_duration&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 일반적인 작업 부하 시뮬레이션&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">simulate_normal_workload&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 메트릭 수집&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">collect_system_metrics&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analyze_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">log_test_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_metrics&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handle_test_failure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cleanup_test_environment&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>모니터링: 시스템 성능 및 리소스 사용량 지속적 관찰&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석: 수집된 데이터를 분석하여 문제점 식별&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">analyze_endurance_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;지속성 테스트 결과 분석&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;memory_trends&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">analyze_memory_usage_trends&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;performance_trends&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">analyze_performance_trends&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;stability_metrics&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_stability_metrics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;issues_found&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_issues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;recommendations&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">generate_recommendations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">format_analysis_report&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">analysis&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보고서 작성: 발견된 문제점과 개선 방안 정리&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>지속성 테스트를 효과적으로 수행하기 위한 주요 고려사항들&lt;span class="hx-absolute -hx-mt-20" id="지속성-테스트를-효과적으로-수행하기-위한-주요-고려사항들">&lt;/span>
&lt;a href="#%ec%a7%80%ec%86%8d%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%a3%bc%ec%9a%94-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>충분한 테스트 기간&lt;br>
최소 24시간 이상, 가능하면 수일간 테스트를 진행한다.&lt;/li>
&lt;li>실제 사용 패턴 반영&lt;br>
실제 운영 환경과 유사한 부하와 사용 패턴을 시뮬레이션한다.&lt;/li>
&lt;li>종합적인 모니터링&lt;br>
시스템의 모든 주요 구성 요소를 지속적으로 모니터링한다.&lt;/li>
&lt;li>자동화된 알림 시스템&lt;br>
문제 발생 시 즉시 알림을 받을 수 있는 시스템을 구축한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 뱅킹 시스템의 지속성 테스트를 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>목표 설정: 2주 동안 하루 평균 100,000건의 트랜잭션 처리, 응답 시간 2초 이내 유지&lt;/li>
&lt;li>시나리오: 로그인, 계좌 조회, 이체, 대출 신청 등 다양한 작업 수행&lt;/li>
&lt;li>테스트 실행: 2주 동안 가상 사용자를 통해 지속적으로 트랜잭션 발생&lt;/li>
&lt;li>모니터링: 서버 메모리 사용량, CPU 사용률, 데이터베이스 연결 상태 등 지속 관찰&lt;/li>
&lt;li>결과 분석:
&lt;ul>
&lt;li>10일째부터 메모리 사용량이 점진적으로 증가&lt;/li>
&lt;li>12일째 데이터베이스 연결 오류 발생 빈도 증가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개선 방안: 메모리 누수 원인 파악 및 수정, 데이터베이스 연결 풀 최적화&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>전문화된 테스팅 (Specialized Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/</link><pubDate>Fri, 27 Dec 2024 04:10:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/</guid><description>
&lt;h2>전문화된 테스팅 (Specialized Testing)&lt;span class="hx-absolute -hx-mt-20" id="전문화된-테스팅-specialized-testing">&lt;/span>
&lt;a href="#%ec%a0%84%eb%ac%b8%ed%99%94%eb%90%9c-%ed%85%8c%ec%8a%a4%ed%8c%85-specialized-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Specialized Testing은 소프트웨어 테스팅의 한 분야로, 특정 영역이나 기능에 초점을 맞춘 심층적인 테스트 방식이다.&lt;br>
이는 일반적인 테스팅 방법으로는 발견하기 어려운 문제점들을 식별하고 해결하는 데 중점을 둔다.&lt;/p>
&lt;h3>Specialized Testing의 주요 특징&lt;span class="hx-absolute -hx-mt-20" id="specialized-testing의-주요-특징">&lt;/span>
&lt;a href="#specialized-testing%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>특정 영역 집중: 성능, 보안, 호환성 등 특정 측면에 집중한다.&lt;/li>
&lt;li>심층적 분석: 일반 테스트보다 더 깊이 있는 분석을 수행한다.&lt;/li>
&lt;li>전문 지식 활용: 해당 분야의 전문가들이 테스트를 수행한다.&lt;/li>
&lt;/ol>
&lt;h3>Specialized Testing의 종류&lt;span class="hx-absolute -hx-mt-20" id="specialized-testing의-종류">&lt;/span>
&lt;a href="#specialized-testing%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>성능 테스팅: 부하 테스트, 스트레스 테스트, 확장성 테스트 등을 포함한다.&lt;/li>
&lt;li>보안 테스팅: 취약점 식별 및 보안 위협에 대한 대응을 테스트한다.&lt;/li>
&lt;li>호환성 테스팅: 다양한 환경에서의 소프트웨어 작동을 확인한다.&lt;/li>
&lt;li>모바일 앱 테스팅: 모바일 기기 특성을 고려한 테스트를 수행한다.&lt;/li>
&lt;li>AI/ML 테스팅: 인공지능과 머신러닝 알고리즘의 정확성을 검증한다.&lt;/li>
&lt;li>IoT 테스팅: 사물인터넷 기기와의 연동을 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>Specialized Testing의 중요성&lt;span class="hx-absolute -hx-mt-20" id="specialized-testing의-중요성">&lt;/span>
&lt;a href="#specialized-testing%ec%9d%98-%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>품질 향상: 특정 영역에 대한 깊이 있는 테스트로 소프트웨어 품질을 크게 개선한다.&lt;/li>
&lt;li>위험 감소: 초기에 문제를 발견하여 출시 후 발생할 수 있는 문제를 예방한다.&lt;/li>
&lt;li>사용자 만족도 증가: 특정 기능의 완성도를 높여 사용자 경험을 개선한다.&lt;/li>
&lt;/ol>
&lt;h3>Specialized Testing을 효과적으로 수행하기 위한 주요 고려사항들&lt;span class="hx-absolute -hx-mt-20" id="specialized-testing을-효과적으로-수행하기-위한-주요-고려사항들">&lt;/span>
&lt;a href="#specialized-testing%ec%9d%84-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%a3%bc%ec%9a%94-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 환경 구성&lt;br>
실제 환경과 유사한 테스트 환경을 구성하여 정확한 결과를 얻을 수 있도록 한다.&lt;/li>
&lt;li>테스트 데이터 준비&lt;br>
다양한 시나리오를 커버할 수 있는 테스트 데이터를 준비한다.&lt;/li>
&lt;li>모니터링 및 측정&lt;br>
테스트 중 시스템의 다양한 지표를 지속적으로 모니터링하고 측정한다.&lt;/li>
&lt;li>결과 분석 및 개선&lt;br>
테스트 결과를 철저히 분석하고, 발견된 문제점에 대한 개선 방안을 도출한다.&lt;/li>
&lt;/ol>
&lt;h3>전문화된 테스팅 (Specialized Testing)의 유형&lt;span class="hx-absolute -hx-mt-20" id="전문화된-테스팅-specialized-testing의-유형">&lt;/span>
&lt;a href="#%ec%a0%84%eb%ac%b8%ed%99%94%eb%90%9c-%ed%85%8c%ec%8a%a4%ed%8c%85-specialized-testing%ec%9d%98-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>테스트 유형&lt;/th>
&lt;th>목적&lt;/th>
&lt;th>수행 시점&lt;/th>
&lt;th>핵심 지표&lt;/th>
&lt;th>주요 도구&lt;/th>
&lt;th>테스트 범위&lt;/th>
&lt;th>검증 대상&lt;/th>
&lt;th>자동화 수준&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>성능 테스팅&lt;/td>
&lt;td>성능 병목 현상 식별 및 성능 요구사항 충족 확인&lt;/td>
&lt;td>주요 릴리스 전&lt;/td>
&lt;td>응답 시간, 처리량, 오류율&lt;/td>
&lt;td>JMeter, LoadRunner&lt;/td>
&lt;td>다양한 조건에서 애플리케이션의 속도, 응답성, 안정성 테스트&lt;/td>
&lt;td>기능성, 성능, 확장성&lt;/td>
&lt;td>도구에 따라 완전 또는 부분 자동화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 테스팅&lt;/td>
&lt;td>소프트웨어 애플리케이션의 취약점 및 보안 약점 발견&lt;/td>
&lt;td>개발 중 및 소프트웨어 수명 주기 전반&lt;/td>
&lt;td>취약점 수, 심각도, 오탐지율, 해결 시간&lt;/td>
&lt;td>SAST, DAST, 침투 테스팅 도구&lt;/td>
&lt;td>애플리케이션, 네트워크, 시스템의 취약점 평가&lt;/td>
&lt;td>데이터의 기밀성, 무결성, 가용성&lt;/td>
&lt;td>도구에 따라 완전 또는 부분 자동화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>호환성 테스팅&lt;/td>
&lt;td>다양한 플랫폼에서 소프트웨어 정상 작동 확인 및 사용자 만족도 향상&lt;/td>
&lt;td>애플리케이션이 안정화된 소프트웨어 테스팅 단계&lt;/td>
&lt;td>다양한 기기에서의 성능 안정성, 기능성, 응답성&lt;/td>
&lt;td>BrowserStack, LambdaTest&lt;/td>
&lt;td>다양한 운영 체제, 브라우저, 하드웨어 구성, 네트워크 조건에서 테스트&lt;/td>
&lt;td>다양한 환경에서의 기능성, 성능, 사용자 경험&lt;/td>
&lt;td>요구사항에 따라 수동 및 자동화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용성 테스팅&lt;/td>
&lt;td>사용성 문제 식별 및 제품의 효과성, 효율성, 만족도 평가&lt;/td>
&lt;td>제품 수명 주기의 다양한 단계(초기 개발 및 출시 전 포함)&lt;/td>
&lt;td>성공률, 작업 소요 시간, 오류율, 사용자 만족도&lt;/td>
&lt;td>Maze, UserTesting&lt;/td>
&lt;td>UI 및 전반적인 사용자 경험 평가&lt;/td>
&lt;td>기능성 및 사용자 만족도&lt;/td>
&lt;td>상황에 따라 완전 자동화 또는 수동 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>회귀 테스팅&lt;/td>
&lt;td>의도치 않은 결함 탐지, 안정성 보장, 위험 감소, 지속적 테스팅 촉진&lt;/td>
&lt;td>소프트웨어 개발 수명 주기 전반(특히 코드 변경 또는 버그 수정 후)&lt;/td>
&lt;td>테스트 실행 시간, 테스트 커버리지, 결함 탐지율&lt;/td>
&lt;td>Selenium, Katalon, Tricentis Testim&lt;/td>
&lt;td>기존 기능 검증 및 새로운 기능 테스트&lt;/td>
&lt;td>핵심 기능이 예상대로 작동하는지 확인&lt;/td>
&lt;td>완전 자동화, 부분 자동화 또는 수동 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>System Test vs End-to-End Test</title><link>https://buenhyden.github.io/til/2024/12/system-test-vs-end-to-end-test/</link><pubDate>Fri, 27 Dec 2024 02:11:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/system-test-vs-end-to-end-test/</guid><description>
&lt;h2>System Test Vs End-to-End Test&lt;span class="hx-absolute -hx-mt-20" id="system-test-vs-end-to-end-test">&lt;/span>
&lt;a href="#system-test-vs-end-to-end-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>System Testing과 End-to-End Testing은 소프트웨어 테스팅 과정에서 사용되는 두 가지 중요한 테스트 방법이다.
이 두 방법은 소프트웨어의 품질을 보장하기 위해 사용되지만, 그 범위와 목적에 차이가 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>System Test&lt;/th>
&lt;th>End-to-End Test&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>전체 시스템이 요구사항 명세서에 따라 정상적으로 동작하는지 검증하는 테스트&lt;/td>
&lt;td>실제 사용자의 시나리오에 따라 처음부터 끝까지의 전체 비즈니스 프로세스를 검증하는 테스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 범위&lt;/td>
&lt;td>시스템의 기능적/비기능적 요구사항 전체&lt;/td>
&lt;td>사용자 관점에서의 전체 비즈니스 프로세스 흐름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수행 시점&lt;/td>
&lt;td>통합 테스트 완료 후, 인수 테스트 전&lt;/td>
&lt;td>모든 하위 단계 테스트 완료 후 최종 단계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 환경&lt;/td>
&lt;td>테스트 환경 (실제 환경과 유사하게 구성)&lt;/td>
&lt;td>실제 운영 환경과 동일한 환경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 주체&lt;/td>
&lt;td>QA 팀, 테스트 엔지니어&lt;/td>
&lt;td>QA 팀, 비즈니스 분석가, 때로는 실제 최종 사용자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>검증 대상&lt;/td>
&lt;td>시스템의 모든 기능, 성능, 보안 등&lt;/td>
&lt;td>실제 사용자의 업무 흐름과 시나리오&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 데이터&lt;/td>
&lt;td>테스트용 데이터&lt;/td>
&lt;td>실제 운영 데이터와 유사한 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 관점&lt;/td>
&lt;td>기술적 관점과 비즈니스 관점 모두 포함&lt;/td>
&lt;td>순수하게 비즈니스 관점, 사용자 경험 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자동화 수준&lt;/td>
&lt;td>중간~높음&lt;/td>
&lt;td>낮음~중간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 케이스 작성 기준&lt;/td>
&lt;td>요구사항 명세서 기반&lt;/td>
&lt;td>사용자 시나리오 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>결함 발견 초점&lt;/td>
&lt;td>시스템 내부의 기술적 결함&lt;/td>
&lt;td>비즈니스 프로세스 상의 결함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 비용&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실행 시간&lt;/td>
&lt;td>비교적 짧음&lt;/td>
&lt;td>길음 (전체 프로세스 수행)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수 복잡도&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 준비 사항&lt;/td>
&lt;td>테스트 환경, 테스트 데이터, 테스트 케이스&lt;/td>
&lt;td>전체 시스템 구성, 외부 시스템 연동, 실제 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 목적&lt;/td>
&lt;td>시스템의 완전성과 정확성 검증&lt;/td>
&lt;td>비즈니스 프로세스의 정상 작동 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>피드백 대상&lt;/td>
&lt;td>개발팀, QA 팀&lt;/td>
&lt;td>비즈니스 팀, 최종 사용자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커버리지 중점&lt;/td>
&lt;td>기능 커버리지&lt;/td>
&lt;td>비즈니스 프로세스 커버리지&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 차이점들은 각각의 테스트가 서로 다른 목적과 관점에서 수행되면서도 상호 보완적인 역할을 한다는 것을 보여준다.&lt;br>
System Test가 시스템의 기술적인 완성도를 검증하는 데 중점을 둔다면, End-to-End Test는 실제 사용자의 관점에서 전체 비즈니스 프로세스가 정상적으로 작동하는지를 검증하는 데 초점을 맞춘다.&lt;/p>
&lt;p>두 테스트 모두 소프트웨어의 품질을 보장하는 데 중요한 역할을 하며, 프로젝트의 특성과 요구사항에 따라 적절한 비중으로 수행되어야 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Black-box Test and White-box Test</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-test-and-white-box-test/</link><pubDate>Sat, 21 Dec 2024 02:29:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-test-and-white-box-test/</guid><description>
&lt;h2>Black-box Test and White-box Test&lt;span class="hx-absolute -hx-mt-20" id="black-box-test-and-white-box-test">&lt;/span>
&lt;a href="#black-box-test-and-white-box-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Black-box Testing(블랙박스 테스팅)은 소프트웨어의 내부 구조나 동작 원리를 모르는 상태에서 진행하는 테스트 방식이다.&lt;br>
마치 불투명한 상자 안을 들여다볼 수 없는 것처럼, 테스터는 입력값을 넣고 그에 따른 출력값만을 확인한다.&lt;br>
예를 들어, 계산기 애플리케이션을 테스트할 때 &amp;ldquo;2+2&amp;quot;를 입력했을 때 &amp;ldquo;4&amp;quot;가 출력되는지만 확인하고, 그 계산 과정이 어떤 알고리즘으로 이루어지는지는 고려하지 않는다.&lt;/p>
&lt;p>Black-box Testing의 주요 특징은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>사용자 관점에서의 테스트가 가능하다. 실제 사용자들이 소프트웨어를 사용하는 방식과 유사하게 테스트할 수 있다.&lt;/li>
&lt;li>테스터가 코드에 대한 지식이 없어도 테스트를 수행할 수 있다.&lt;/li>
&lt;li>경계값 분석, 동등 분할, 결정 테이블 등의 기법을 활용할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>반면 White-box Testing(화이트박스 테스팅)은 소프트웨어의 내부 로직을 알고 있는 상태에서 진행하는 테스트이다.&lt;br>
투명한 상자처럼 내부 구조를 모두 볼 수 있어, 코드의 특정 부분이 어떻게 작동하는지 세세하게 테스트할 수 있다.&lt;br>
예를 들어, 로그인 기능을 테스트할 때 비밀번호 암호화 과정, 데이터베이스 접근 방식, 예외 처리 등의 내부 로직을 모두 확인한다.&lt;/p>
&lt;p>White-box Testing의 주요 특징은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>코드 커버리지를 높일 수 있다. 모든 코드 경로가 적어도 한 번은 실행되도록 테스트를 설계할 수 있다.&lt;/li>
&lt;li>불필요한 코드나 숨겨진 버그를 발견하기 쉽다.&lt;/li>
&lt;li>구문 커버리지, 분기 커버리지, 조건 커버리지 등 다양한 커버리지 지표를 활용한다.&lt;/li>
&lt;/ol>
&lt;p>이 두 방식은 상호 보완적인 관계에 있다. Black-box Testing은 사용자 관점에서의 기능 검증에 효과적이고, White-box Testing은 내부 로직의 정확성을 검증하는 데 효과적이다.&lt;br>
실제 개발 현장에서는 두 방식을 모두 활용하여 더 견고한 소프트웨어를 만들어낸다. 냅니다.&lt;/p>
&lt;p>예를 들어, 온라인 쇼핑몰의 결제 시스템을 테스트한다고 가정해보자:&lt;/p>
&lt;p>Black-box Testing 접근:&lt;/p>
&lt;ul>
&lt;li>정상적인 카드 결제가 이루어지는지 확인&lt;/li>
&lt;li>잘못된 카드 번호 입력 시 적절한 오류 메시지가 표시되는지 확인&lt;/li>
&lt;li>결제 완료 후 주문 확인 이메일이 발송되는지 확인&lt;/li>
&lt;/ul>
&lt;p>White-box Testing 접근:&lt;/p>
&lt;ul>
&lt;li>카드 정보 암호화 과정이 올바르게 작동하는지 확인&lt;/li>
&lt;li>데이터베이스에 주문 정보가 정확히 저장되는지 확인&lt;/li>
&lt;li>결제 실패 시 트랜잭션 롤백이 제대로 이루어지는지 확인&lt;/li>
&lt;/ul>
&lt;p>이러한 체계적인 테스팅을 통해 소프트웨어의 품질을 보장하고, 사용자에게 안정적인 서비스를 제공할 수 있다.&lt;/p>
&lt;h3>블랙박스 테스트 (Black-box Test)&lt;span class="hx-absolute -hx-mt-20" id="블랙박스-테스트-black-box-test">&lt;/span>
&lt;a href="#%eb%b8%94%eb%9e%99%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8-black-box-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>소프트웨어의 내부 구조나 작동 방식을 모르는 상태에서 외부 동작을 검증하는 방식이다.&lt;br>
마치 검은 상자 안을 들여다볼 수 없는 것처럼, 입력값을 넣고 출력값을 확인하는 방식으로 테스트를 수행한다.&lt;br>
예를 들어, 계산기 애플리케이션을 테스트할 때 2와 3을 더했을 때 5가 나오는지만 확인하고, 내부적으로 어떻게 덧셈을 수행하는지는 고려하지 않는다.&lt;/p>
&lt;p>블랙박스 테스팅은 &lt;strong>사용자 관점에서의 기능 검증&lt;/strong>에 중점을 둔다.&lt;/p>
&lt;h4>블랙박스 테스팅의 기본 원리&lt;span class="hx-absolute -hx-mt-20" id="블랙박스-테스팅의-기본-원리">&lt;/span>
&lt;a href="#%eb%b8%94%eb%9e%99%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>블랙박스 테스팅은 &amp;lsquo;명세 기반 테스팅&amp;rsquo;이라고도 불린다.&lt;br>
테스터는 소프트웨어가 &amp;lsquo;무엇을 해야 하는지&amp;rsquo;에 초점을 맞추고, &amp;lsquo;어떻게 구현되었는지&amp;rsquo;는 고려하지 않는다.&lt;br>
예를 들어, 계산기 프로그램을 테스트할 때 내부의 계산 알고리즘은 알 필요 없이, 입력한 숫자에 대해 올바른 계산 결과가 나오는지만 확인한다.&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>외부 동작 중심&lt;/strong>: 소프트웨어의 내부 구조를 알지 못한 채 외부에서 관찰 가능한 동작을 테스트한다.&lt;/li>
&lt;li>&lt;strong>기능 중심&lt;/strong>: 요구사항에 맞는 기능이 제대로 수행되는지 확인한다.&lt;/li>
&lt;li>&lt;strong>사용자 관점&lt;/strong>: 실제 사용자의 입장에서 소프트웨어를 테스트한다.&lt;/li>
&lt;li>&lt;strong>명세 기반&lt;/strong>: 요구사항 명세서, 시스템 스펙 등을 기반으로 테스트 케이스를 작성한다.&lt;/li>
&lt;li>&lt;strong>입출력 중심&lt;/strong>: 특정 입력에 대한 예상 출력을 검증한다.&lt;/li>
&lt;/ol>
&lt;h4>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>사용자 중심 접근&lt;/strong>: 실제 사용 환경에서 발생할 수 있는 오류를 효과적으로 발견할 수 있다.&lt;/li>
&lt;li>&lt;strong>내부 구조 지식 불필요&lt;/strong>: 테스터가 소프트웨어의 내부 구조나 코드를 알 필요가 없어 테스트 수행이 용이하다.&lt;/li>
&lt;li>&lt;strong>편견 없는 테스트&lt;/strong>: 개발 과정에서 고려하지 않았을 수 있는 잠재적 문제를 식별할 수 있다.&lt;/li>
&lt;li>&lt;strong>요구사항 검증&lt;/strong>: 소프트웨어가 사용자의 요구사항과 기대치를 충족하는지 확인하는 데 효과적이다.&lt;/li>
&lt;li>&lt;strong>효율적인 테스트 케이스 도출&lt;/strong>: 동등 분할, 경계값 분석 등의 기법을 통해 효율적으로 테스트 케이스를 생성할 수 있다.&lt;/li>
&lt;li>&lt;strong>자동화 용이성&lt;/strong>: 다양한 자동화 도구를 사용하여 테스트 과정을 자동화할 수 있어 시간과 노력을 절약할 수 있다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 소프트웨어의 규모와 복잡성에 따라 테스트를 확장할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>화이트박스 테스트 (White-box Test)&lt;span class="hx-absolute -hx-mt-20" id="화이트박스-테스트-white-box-test">&lt;/span>
&lt;a href="#%ed%99%94%ec%9d%b4%ed%8a%b8%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8-white-box-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>화이트박스 테스팅은 소프트웨어의 내부 로직과 구조를 알고 있는 상태에서 수행하는 테스트이다.&lt;br>
프로그램의 내부 로직과 코드 흐름을 상세히 검증한다.&lt;br>
이는 &amp;lsquo;구조 기반 테스팅&amp;rsquo; 또는 &amp;lsquo;글래스박스 테스팅&amp;rsquo;이라고도 불린다.&lt;/p>
&lt;p>화이트박스 테스팅은 &lt;strong>내부 로직의 정확성을 검증&lt;/strong>하는 데 초점을 맞춘다.&lt;/p>
&lt;h4>화이트박스 테스팅의 기본 원리&lt;span class="hx-absolute -hx-mt-20" id="화이트박스-테스팅의-기본-원리">&lt;/span>
&lt;a href="#%ed%99%94%ec%9d%b4%ed%8a%b8%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>테스터는 프로그램의 소스 코드를 직접 분석하고, 각 구문, 조건문, 반복문 등이 의도한 대로 동작하는지 확인한다.&lt;br>
예를 들어, if문의 모든 조건이 적절히 처리되는지, 반복문이 정확한 횟수만큼 실행되는지 등을 검증한다.&lt;br>
이는 마치 시계 수리공이 시계의 모든 톱니바퀴가 제대로 맞물려 돌아가는지 확인하는 것과 유사하다.&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징-1">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>내부 구조 기반: 소스 코드, 알고리즘, 내부 로직에 접근하여 테스트한다.&lt;/li>
&lt;li>코드 커버리지 분석: 테스트되지 않은 코드 영역을 식별한다.&lt;/li>
&lt;li>프로그래밍 지식 필요: 테스터는 프로그래밍 언어와 코드 구조를 이해해야 한다.&lt;/li>
&lt;li>다양한 테스트 유형: 구문 커버리지, 분기 커버리지, 조건 커버리지 등이 있다.&lt;/li>
&lt;/ol>
&lt;h4>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-1">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>코드 품질 향상: 내부 로직을 검증하여 소프트웨어의 전반적인 품질을 개선한다.&lt;/li>
&lt;li>조기 결함 발견: 개발 초기 단계에서 잠재적 문제를 식별하고 해결할 수 있다.&lt;/li>
&lt;li>보안 취약점 식별: 코드 내의 보안 취약점을 발견하고 수정할 수 있다.&lt;/li>
&lt;li>효율적인 테스트: 코드의 모든 경로를 체계적으로 테스트하여 테스트 커버리지를 극대화한다.&lt;/li>
&lt;li>자동화 용이성: 특히 단위 테스트에서 자동화가 쉽다.&lt;/li>
&lt;li>유지보수성 향상: 코드의 구조와 동작을 이해함으로써 향후 유지보수가 용이해진다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Scenario Testing vs Use Case Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/scenario-testing-vs-use-case-testing/</link><pubDate>Mon, 16 Dec 2024 17:12:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/scenario-testing-vs-use-case-testing/</guid><description>
&lt;h2>Scenario Testing Vs Use Case Testing&lt;span class="hx-absolute -hx-mt-20" id="scenario-testing-vs-use-case-testing">&lt;/span>
&lt;a href="#scenario-testing-vs-use-case-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Scenario Testing과 Use Case Testing은 소프트웨어 테스팅 기법으로, 사용자 관점에서 시스템의 기능과 동작을 검증하는 데 사용된다.&lt;br>
두 기법은 유사한 점이 있지만, 접근 방식과 세부 사항에서 차이가 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Scenario Testing&lt;/th>
&lt;th>Use Case Testing&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>실제 사용자의 행동과 상황을 기반으로 한 현실적인 시나리오를 통해 시스템을 테스트하는 방법&lt;/td>
&lt;td>사용자와 시스템 간의 상호작용을 구조화된 형식으로 정의하고 테스트하는 방법&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 관점&lt;/td>
&lt;td>사용자 중심적이며, 실제 업무 상황과 맥락을 중요시함&lt;/td>
&lt;td>시스템 중심적이며, 기능적 정확성과 완전성을 중요시함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>목적&lt;/td>
&lt;td>실제 사용 환경에서의 시스템 동작을 검증&lt;/td>
&lt;td>시스템의 기능적 요구사항을 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구조화 정도&lt;/td>
&lt;td>자유로운 형식으로, 스토리텔링 방식의 서술적 구조&lt;/td>
&lt;td>체계적이고 형식적인 구조 (기본 흐름, 대체 흐름, 예외 흐름)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 범위&lt;/td>
&lt;td>여러 기능이나 프로세스를 걸쳐 있는 end-to-end 시나리오&lt;/td>
&lt;td>주로 단일 기능이나 프로세스에 초점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 설계&lt;/td>
&lt;td>자유로운 형식으로 다양한 &amp;ldquo;가정&amp;rdquo; 상황을 포함&lt;/td>
&lt;td>유스케이스 문서의 기본 흐름과 대체 흐름을 따름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 케이스 도출&lt;/td>
&lt;td>다양한 소스(사용자 피드백, 시장 조사 등)에서 시나리오 개발&lt;/td>
&lt;td>유스케이스 문서에서 직접 테스트 케이스를 도출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상황 맥락&lt;/td>
&lt;td>사용자의 동기, 감정, 환경 등 풍부한 맥락 정보 포함&lt;/td>
&lt;td>객관적이고 기술적인 상호작용 위주의 맥락&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문서화 방식&lt;/td>
&lt;td>서술적이고 이야기 형식의 문서화&lt;/td>
&lt;td>구조화되고 단계별로 정형화된 문서화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 상황&lt;/td>
&lt;td>사용자 경험이 중요한 애플리케이션, 복잡한 업무 프로세스&lt;/td>
&lt;td>명확한 기능 요구사항이 있는 시스템, 트랜잭션 기반 애플리케이션&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 설계 난이도&lt;/td>
&lt;td>실제 사용자 경험에 대한 이해가 필요하며, 창의적인 시나리오 도출이 중요&lt;/td>
&lt;td>체계적인 분석과 문서화 능력이 필요하며, 기술적 이해가 중요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수성&lt;/td>
&lt;td>시나리오 수정이 비교적 자유롭고 유연함&lt;/td>
&lt;td>구조화된 형식으로 인해 변경 관리가 체계적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>재사용성&lt;/td>
&lt;td>특정 상황에 특화된 시나리오로 재사용이 제한적&lt;/td>
&lt;td>표준화된 형식으로 인해 재사용이 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커버리지 측정&lt;/td>
&lt;td>시나리오 기반의 정성적 측정이 주로 이루어짐&lt;/td>
&lt;td>흐름 기반의 정량적 측정이 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 자동화&lt;/td>
&lt;td>복잡한 시나리오로 인해 자동화가 어려울 수 있음&lt;/td>
&lt;td>구조화된 형식으로 인해 자동화가 비교적 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>예상치 못한 오류 발견에 효과적, 사용자 경험 개선에 도움&lt;/td>
&lt;td>요구사항 검증에 효과적, 체계적인 테스트 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>모든 가능한 시나리오를 고려하기 어려움&lt;/td>
&lt;td>유스케이스 문서의 품질에 의존적&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>실제 프로젝트에서는 이 두 방법을 상호 보완적으로 사용하는 것이 효과적이다.&lt;br>
예를 들어, Use Case Testing으로 기본적인 기능 정확성을 검증하고, Scenario Testing으로 실제 사용 환경에서의 사용성과 통합성을 검증하는 방식으로 활용할 수 있다.&lt;/p>
&lt;p>두 테스팅 방법의 효과적인 활용을 위해서는, 프로젝트의 특성과 목표를 고려하여 적절한 비중으로 조합하는 것이 중요하다.&lt;br>
또한, 각 방법의 장단점을 이해하고, 테스트 전략 수립 시 이를 고려하여 효율적인 테스트 계획을 수립하는 것이 바람직하다&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Use Case Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/use-case-testing/</link><pubDate>Thu, 12 Dec 2024 17:11:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/use-case-testing/</guid><description>
&lt;h2>유즈케이스 테스팅 (Use Case Testing))&lt;span class="hx-absolute -hx-mt-20" id="유즈케이스-테스팅-use-case-testing">&lt;/span>
&lt;a href="#%ec%9c%a0%ec%a6%88%ec%bc%80%ec%9d%b4%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85-use-case-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>유즈케이스 테스팅은 유즈케이스나 비즈니스 시나리오를 기반으로 테스트를 명세화하는 블랙박스 테스트 설계 기법이다.&lt;br>
이 방법은 액터와 시스템 간의 상호작용을 표현하고, 그 결과를 사용자에게 전달하는 과정을 테스트한다.&lt;/p>
&lt;p>실제 예시를 통해 구체적으로 살펴보자.&lt;br>
온라인 쇼핑몰의 상품 주문 기능에 대한 유즈케이스 테스팅을 설계한다고 가정해보면:&lt;/p>
&lt;p>기본 흐름(Basic Flow):&lt;/p>
&lt;ol>
&lt;li>사용자가 상품을 장바구니에 추가한다&lt;/li>
&lt;li>시스템이 장바구니 내용을 표시한다&lt;/li>
&lt;li>사용자가 주문하기 버튼을 클릭한다&lt;/li>
&lt;li>시스템이 배송 정보 입력 폼을 표시한다&lt;/li>
&lt;li>사용자가 배송 정보를 입력한다&lt;/li>
&lt;li>시스템이 결제 수단 선택 화면을 표시한다&lt;/li>
&lt;li>사용자가 결제 수단을 선택하고 결제한다&lt;/li>
&lt;li>시스템이 주문 완료 화면을 표시한다&lt;/li>
&lt;/ol>
&lt;p>대체 흐름(Alternative Flows):&lt;/p>
&lt;ul>
&lt;li>장바구니가 비어있는 경우&lt;/li>
&lt;li>배송 정보가 불완전한 경우&lt;/li>
&lt;li>결제가 실패한 경우&lt;/li>
&lt;/ul>
&lt;p>예외 흐름(Exception Flows):&lt;/p>
&lt;ul>
&lt;li>시스템 오류 발생 시&lt;/li>
&lt;li>네트워크 연결 끊김 시&lt;/li>
&lt;li>세션 만료 시&lt;/li>
&lt;/ul>
&lt;p>유즈케이스 테스팅의 단계별 수행 과정을 살펴보자:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>유즈케이스 분석 단계&lt;br>
먼저 테스트할 유즈케이스의 모든 구성 요소를 파악한다:&lt;/p>
&lt;ul>
&lt;li>선행 조건(예: 로그인된 상태여야 함)&lt;/li>
&lt;li>사용자 액션과 시스템 응답&lt;/li>
&lt;li>대체 흐름과 예외 상황&lt;/li>
&lt;li>후행 조건(예: 주문 정보가 데이터베이스에 저장되어야 함)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 시나리오 도출 단계&lt;br>
각 흐름별로 구체적인 테스트 시나리오를 작성한다.&lt;br>
기본 흐름뿐만 아니라 모든 대체 흐름과 예외 흐름에 대해서도 시나리오를 만든다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 설계 단계&lt;br>
각 시나리오를 구체적인 테스트 케이스로 변환한다.&lt;br>
테스트 케이스에는 다음 내용이 포함된다:&lt;/p>
&lt;ul>
&lt;li>테스트 목적&lt;/li>
&lt;li>선행 조건&lt;/li>
&lt;li>테스트 데이터&lt;/li>
&lt;li>테스트 단계&lt;/li>
&lt;li>예상 결과&lt;/li>
&lt;li>판단 기준&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 준비 단계&lt;br>
테스트 환경을 설정하고 필요한 테스트 데이터를 준비한다:&lt;/p>
&lt;ul>
&lt;li>테스트 계정 생성&lt;/li>
&lt;li>테스트용 상품 데이터 설정&lt;/li>
&lt;li>결제 시스템 테스트 모드 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 및 결과 검증 단계&lt;br>
준비된 테스트 케이스를 실행하고 결과를 검증한다:&lt;/p>
&lt;ul>
&lt;li>각 단계의 실행 결과 기록&lt;/li>
&lt;li>예상 결과와의 비교&lt;/li>
&lt;li>발견된 문제점 문서화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>프로세스 흐름 중심: 기본 흐름과 대체 흐름을 포함한 전체 프로세스를 테스트한다.&lt;/li>
&lt;li>사용자 중심 접근: 실제 사용자의 관점에서 시스템을 검증한다.&lt;/li>
&lt;li>시나리오 기반: 유즈케이스 상세(description)를 바탕으로 테스트 시나리오를 구성한다.&lt;/li>
&lt;li>다양한 테스트 레벨 적용: 컴포넌트(단위) 레벨과 시스템 레벨에서 모두 적용 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실제 사용 환경에서의 결함 발견: 시스템이 실제로 사용되는 프로세스 흐름에서 결함을 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>인수 테스트에 유용: 고객이나 사용자 그룹이 참여하는 인수 테스트 설계에 특히 효과적이다.&lt;/li>
&lt;li>통합 결함 식별: 통합 테스트 단계에서 컴포넌트 간 상호작용 문제를 찾는 데 도움이 된다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 프로세스&lt;span class="hx-absolute -hx-mt-20" id="테스트-프로세스">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 시나리오 구성: 어떤 흐름을 테스트할지 결정한다.&lt;/li>
&lt;li>필수 상황 선택: 유즈케이스 상세에서 테스트에 필요한 핵심 상황을 식별한다.&lt;/li>
&lt;li>상황 분류: 입력값, 출력값, 상황 처리 등으로 테스트 요소를 분류한다.&lt;/li>
&lt;li>ID 부여: 각 테스트 상황에 고유 ID를 할당한다.&lt;/li>
&lt;li>값 결정: 각 상황에 대해 가능한 값(유효/무효, 상한/하한 등)을 정의한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 레벨&lt;span class="hx-absolute -hx-mt-20" id="테스트-레벨">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%a0%88%eb%b2%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>컴포넌트(단위) 레벨: 개별 유즈케이스를 독립적으로 테스트한다.&lt;/li>
&lt;li>시스템 레벨: 유즈케이스 간의 상호작용을 테스트한다. 활동 기반, 전이 기반, 경로 기반 커버리지 등의 방법을 사용할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>효과적인 유즈케이스 테스팅을 위한 고급 전략&lt;span class="hx-absolute -hx-mt-20" id="효과적인-유즈케이스-테스팅을-위한-고급-전략">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%ec%9c%a0%ec%a6%88%ec%bc%80%ec%9d%b4%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%ec%9c%84%ed%95%9c-%ea%b3%a0%ea%b8%89-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>경계값 분석 통합&lt;br>
각 입력 필드에 대해 경계값 테스트를 수행한다. 예를 들어, 주문 수량의 최소값과 최대값을 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>상태 전이 고려&lt;br>
시스템의 상태 변화를 추적하면서 테스트한다. 예를 들어, 주문 상태가 &amp;lsquo;결제 대기&amp;rsquo; → &amp;lsquo;결제 완료&amp;rsquo; → &amp;lsquo;배송 중&amp;rsquo;으로 올바르게 변경되는지 확인한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 일관성 검증&lt;br>
전체 프로세스 수행 후 데이터가 올바르게 저장되고 처리되었는지 확인한다.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>이러한 유즈케이스 테스팅은 현대의 복잡한 소프트웨어 시스템을 체계적으로 검증하는 데 매우 효과적인 방법이다. 특히 업무 프로세스가 복잡하거나 여러 시스템이 연계되어 있는 엔터프라이즈 애플리케이션 테스팅에서 큰 가치를 발휘한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Boundary Value Analysis</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/boundary-value-analysis/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/boundary-value-analysis/</guid><description>
&lt;h2>경계값 분석 (Boundary Value Analysis, BVA)&lt;span class="hx-absolute -hx-mt-20" id="경계값-분석-boundary-value-analysis-bva">&lt;/span>
&lt;a href="#%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d-boundary-value-analysis-bva" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>경계값 분석은 입력 또는 출력 범위의 경계 근처에서 결함이 발생할 가능성이 높다는 경험적 관찰에 기반한 테스트 기법.&lt;br>
프로그래머들이 흔히 &amp;ldquo;off-by-one&amp;rdquo; 오류를 범하거나 경계 조건을 잘못 처리하는 경향이 있기 때문에, 이러한 경계값을 집중적으로 테스트하는 것이 효과적이다.&lt;/p>
&lt;p>예를 들어, 어떤 시스템이 1에서 100 사이의 숫자만 받아들인다고 가정해보자.&lt;br>
이때 0, 1, 2와 99, 100, 101 같은 경계값들을 테스트하는 것이 중요하다.&lt;br>
왜냐하면 이러한 값들에서 시스템이 올바르게 작동하지 않을 가능성이 높기 때문이다.&lt;/p>
&lt;h3>경계값 분석의 주요 원칙&lt;span class="hx-absolute -hx-mt-20" id="경계값-분석의-주요-원칙">&lt;/span>
&lt;a href="#%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9b%90%ec%b9%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>경계값 분석에는 다음과 같은 핵심 원칙들이 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>최소값과 최대값 테스트:&lt;br>
유효 범위의 최소값과 최대값을 반드시 테스트한다.&lt;br>
예를 들어, 1-100 범위라면 1과 100을 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경계 근처의 값 테스트:&lt;br>
경계값 바로 안쪽과 바깥쪽의 값을 테스트한다.&lt;br>
1-100 범위의 경우:&lt;/p>
&lt;ul>
&lt;li>최소값 경계: 0, 1, 2&lt;/li>
&lt;li>최대값 경계: 99, 100, 101&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>대표적인 경계값 상황들&lt;span class="hx-absolute -hx-mt-20" id="대표적인-경계값-상황들">&lt;/span>
&lt;a href="#%eb%8c%80%ed%91%9c%ec%a0%81%ec%9d%b8-%ea%b2%bd%ea%b3%84%ea%b0%92-%ec%83%81%ed%99%a9%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>날짜와 시간:&lt;/p>
&lt;ul>
&lt;li>윤년/평년 전환 (2월 28일, 29일)&lt;/li>
&lt;li>월말/월초 전환 (31일, 1일)&lt;/li>
&lt;li>자정 전후 (23:59:59, 00:00:00)&lt;/li>
&lt;/ul>
&lt;p>수치 데이터:&lt;/p>
&lt;ul>
&lt;li>정수 자료형의 최대/최소값&lt;/li>
&lt;li>부동소수점 정밀도 한계&lt;/li>
&lt;li>배열의 첫 번째/마지막 요소&lt;/li>
&lt;/ul>
&lt;p>문자열 처리:&lt;/p>
&lt;ul>
&lt;li>빈 문자열&lt;/li>
&lt;li>최대 길이 문자열&lt;/li>
&lt;li>특수문자가 포함된 경계&lt;/li>
&lt;/ul>
&lt;h3>실제 적용 예시&lt;span class="hx-absolute -hx-mt-20" id="실제-적용-예시">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ec%a0%81%ec%9a%a9-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>학생 성적 처리 시스템을 예로 들어보자다:&lt;/p>
&lt;p>점수 범위: 0-100점&lt;br>
등급 기준:&lt;/p>
&lt;ul>
&lt;li>A: 90-100&lt;/li>
&lt;li>B: 80-89&lt;/li>
&lt;li>C: 70-79&lt;/li>
&lt;li>D: 60-69&lt;/li>
&lt;li>F: 0-59&lt;/li>
&lt;/ul>
&lt;p>이 시스템의 경계값 테스트 케이스는 다음과 같이 설계할 수 있다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>테스트 케이스 세트:
1. 최저 경계
- 입력값: -1 (유효하지 않은 값)
- 입력값: 0 (최소 유효값)
- 입력값: 1 (최소값 바로 위)
2. 등급 경계
- 입력값: 59, 60, 61 (F/D 경계)
- 입력값: 69, 70, 71 (D/C 경계)
- 입력값: 79, 80, 81 (C/B 경계)
- 입력값: 89, 90, 91 (B/A 경계)
3. 최고 경계
- 입력값: 99 (최대값 바로 아래)
- 입력값: 100 (최대 유효값)
- 입력값: 101 (유효하지 않은 값)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>효과적인 경계값 분석을 위한 지침&lt;span class="hx-absolute -hx-mt-20" id="효과적인-경계값-분석을-위한-지침">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%a7%80%ec%b9%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 범위 결정:&lt;br>
입력값뿐만 아니라 출력값의 경계도 고려한.&lt;br>
예를 들어, 화면에 표시되는 데이터의 크기나 형식에 대한 경계값도 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 타입 고려:&lt;br>
각 데이터 타입별로 특별히 고려해야 할 경계값들이 있다:&lt;/p>
&lt;ul>
&lt;li>정수형: 최대/최소값, 부호 전환점&lt;/li>
&lt;li>실수형: 정밀도 한계, 반올림/올림/내림 경계&lt;/li>
&lt;li>문자열: 길이 제한, 인코딩 경계&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>복합 경계값:&lt;br>
여러 조건이 결합된 경우, 각 조건의 경계값들을 조합하여 테스트한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>날짜와 시간이 결합된 경우&lt;/li>
&lt;li>다중 범위 조건이 있는 경우&lt;/li>
&lt;li>여러 입력 필드가 서로 연관된 경우&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>모든 테스트 레벨, 테스트 형태, 테스트 분류에 적용 가능하다.&lt;/li>
&lt;li>결함 발견율이 높고 적용하기 쉬운 장점이 있어 가장 많이 사용되는 테스트 기법 중 하나이다.&lt;/li>
&lt;li>경계값을 명시한 자세한 명세서가 있을 경우 적용하기가 수월하다.&lt;/li>
&lt;/ul>
&lt;h3>경계값 분석의 종류&lt;span class="hx-absolute -hx-mt-20" id="경계값-분석의-종류">&lt;/span>
&lt;a href="#%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>Boundary Value Analysis: 입력 범위의 경계값과 그 주변 값을 중점적으로 테스트하는 기법.&lt;br>
특징:&lt;br>
- 입력 도메인의 최소값, 최대값, 그리고 그 주변 값을 테스트한다.&lt;br>
- 유효한 입력 범위 내의 값들만 테스트한다.&lt;br>
- 많은 오류가 경계값 근처에서 발생한다는 경험에 기반한다.&lt;br>
예시1: 연령 입력 필드(유효 범위: 18-65세)에 대한 테스트 케이스.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>17세 (최소값 미만)&lt;/li>
&lt;li>18세 (최소값)&lt;/li>
&lt;li>19세 (최소값 초과)&lt;/li>
&lt;li>64세 (최대값 미만)&lt;/li>
&lt;li>65세 (최대값)&lt;/li>
&lt;li>66세 (최대값 초과)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Robustness Testing: 유효하지 않은 입력값과 예상치 못한 상황에 대한 시스템의 대응을 테스트하는 기법.&lt;br>
특징:&lt;br>
- 유효한 입력 범위를 벗어난 값들도 테스트한다.&lt;br>
- 시스템의 안정성과 오류 처리 능력을 평가한다.&lt;br>
예시: 연령 입력 필드(유효 범위: 18-65세)에 대한 테스트 케이스.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>-1세 (음수 값)&lt;/li>
&lt;li>0세 (최소값보다 작은 유효하지 않은 값)&lt;/li>
&lt;li>100세 (최대값보다 큰 유효하지 않은 값)&lt;/li>
&lt;li>&amp;ldquo;ABC&amp;rdquo; (문자열 입력)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Worst-Case Testing: 시스템이 처리할 수 있는 극단적인 상황을 테스트하는 기법.&lt;br>
특징:&lt;br>
- 여러 입력 변수의 극단적인 값 조합을 사용한다.&lt;br>
- 시스템의 한계를 테스트한다.&lt;br>
예시1: 사용자 등록 시스템에서의 Worst-Case Testing.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>이름: 최대 허용 길이의 문자열&lt;/li>
&lt;li>나이: 시스템이 허용하는 최대 나이 (예: 120세)&lt;/li>
&lt;li>이메일: 최대 길이의 유효한 이메일 주소&lt;/li>
&lt;li>비밀번호: 최대 허용 길이의 복잡한 문자열&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Robust worst-case Testing: Worst-Case Testing과 Robustness Testing을 결합한 기법.&lt;br>
특징:&lt;br>
- 극단적인 유효값과 유효하지 않은 값을 모두 테스트한다.&lt;br>
- 가장 포괄적인 경계값 테스팅 방법이다.&lt;br>
예시1: 사용자 등록 시스템에서의 Robust worst-case Testing.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>이름: 빈 문자열 또는 특수 문자만으로 구성된 최대 길이 문자열&lt;/li>
&lt;li>나이: -1, 0, 최대 허용 나이보다 큰 값 (예: 150세)&lt;/li>
&lt;li>이메일: 유효하지 않은 최대 길이 문자열&lt;/li>
&lt;li>비밀번호: 빈 문자열 또는 시스템 제한을 초과하는 길이의 문자열&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>결함 발견 효율성이 높다&lt;/li>
&lt;li>테스트 케이스 수를 체계적으로 줄일 수 있다&lt;/li>
&lt;li>구현 오류를 효과적으로 찾아낼 수 있다&lt;/li>
&lt;/ul>
&lt;h3>한계&lt;span class="hx-absolute -hx-mt-20" id="한계">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>모든 가능한 결함을 찾아내지는 못한다&lt;/li>
&lt;li>복잡한 로직의 경우 경계값 정의가 어려울 수 있다&lt;/li>
&lt;li>여러 변수가 결합된 경우 테스트 케이스가 급증할 수 있다&lt;/li>
&lt;/ul>
&lt;h3>자동화 및 도구 활용&lt;span class="hx-absolute -hx-mt-20" id="자동화-및-도구-활용">&lt;/span>
&lt;a href="#%ec%9e%90%eb%8f%99%ed%99%94-%eb%b0%8f-%eb%8f%84%ea%b5%ac-%ed%99%9c%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>경계값 분석을 자동화하기 위한 방법들:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 데이터 생성기:&lt;/p>
&lt;ul>
&lt;li>정의된 범위에 대한 경계값을 자동으로 생성&lt;/li>
&lt;li>다양한 데이터 타입에 대한 경계값 생성 지원&lt;/li>
&lt;li>랜덤 테스트와의 결합 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 프레임워크:&lt;/p>
&lt;ul>
&lt;li>경계값 테스트를 위한 특별한 어노테이션이나 기능 제공&lt;/li>
&lt;li>테스트 결과의 자동 검증&lt;/li>
&lt;li>테스트 커버리지 측정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Cause-Effect Graphing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/cause-effect-graphing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/cause-effect-graphing/</guid><description>
&lt;h2>원인-결과 그래프 검사(Cause-Effect Graph Testing)&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사cause-effect-graph-testing">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%accause-effect-graph-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>원인-결과 그래프 검사(Cause-Effect Graph Testing)는 블랙박스 테스트 기법 중 하나로, 입력 조건(원인)과 출력 결과(결과) 사이의 관계를 체계적으로 분석하고 모델링하여 효과적인 테스트 케이스를 도출하는 방법.&lt;/p>
&lt;p>원인-결과 그래프 검사는 입력 데이터 간의 관계와 출력에 미치는 영향을 그래프로 표현하여 분석하는 기법.&lt;br>
이 방법은 여러 입력 조건을 결합해서 하나 이상의 결과를 얻는 것으로, 복잡한 입력 환경을 고려할 수 있는 장점이 있다.&lt;/p>
&lt;h3>원인-결과 그래프 검사의 목적&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-목적">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 입력 값들 간의 관계를 체계적으로 분석&lt;/li>
&lt;li>입력 조건에 따른 출력의 적절성 확인&lt;/li>
&lt;li>효율성이 높은 테스트 케이스 선정&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 절차&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-절차">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%a0%88%ec%b0%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>원인과 결과 식별&lt;/strong>: 요구사항 명세서, 설계서, 프로그램에서 원인(입력 조건)과 결과(출력 조건)를 찾아 식별한다.&lt;/li>
&lt;li>&lt;strong>그래프 작성&lt;/strong>: 원인과 결과를 연결하는 boolean 그래프를 작성한다. 이 그래프는 AND, OR, NOT 같은 boolean 연산자를 사용하여 원인과 결과 간의 논리적 관계를 표현한다.&lt;/li>
&lt;li>&lt;strong>제약 조건 표시&lt;/strong>: 불가능한 원인 조합 또는 결과 조합을 나타내는 제약(constraints)을 그래프에 표시한다.&lt;/li>
&lt;li>&lt;strong>의사결정 테이블 작성&lt;/strong>: 원인-결과 그래프를 의사결정 테이블(decision table)로 변환한다.&lt;/li>
&lt;li>&lt;strong>테스트 케이스 도출&lt;/strong>: 의사결정 테이블의 각 열을 테스트 케이스로 변환한다.&lt;/li>
&lt;/ol>
&lt;h3>그래프의 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="그래프의-구성-요소">&lt;/span>
&lt;a href="#%ea%b7%b8%eb%9e%98%ed%94%84%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>원인-결과 그래프는 다음과 같은 기본 요소들로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>원인(Causes): 시스템에 대한 입력 조건을 나타낸다. 예를 들어, 로그인 시스템에서 &amp;lsquo;사용자 ID 입력&amp;rsquo;, &amp;lsquo;비밀번호 입력&amp;rsquo; 등이 원인이 될 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과(Effects): 시스템의 출력이나 반응을 나타낸다. &amp;lsquo;로그인 성공&amp;rsquo;, &amp;lsquo;에러 메시지 표시&amp;rsquo; 등이 결과의 예시이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>논리 연산자: 원인과 결과를 연결하는 논리적 관계를 표현한다:&lt;/p>
&lt;ul>
&lt;li>AND: 모든 조건이 만족되어야 함&lt;/li>
&lt;li>OR: 하나 이상의 조건이 만족되면 됨&lt;/li>
&lt;li>NOT: 조건의 부정&lt;/li>
&lt;li>XOR: 상호 배타적 조건&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>제약 조건: 원인들 사이의 관계를 제한하는 조건:&lt;/p>
&lt;ul>
&lt;li>배타(E): 동시에 발생할 수 없는 조건&lt;/li>
&lt;li>포함(I): 한 조건이 다른 조건을 필요로 함&lt;/li>
&lt;li>단일(O): 여러 조건 중 하나만 발생 가능&lt;/li>
&lt;li>필수(R): 반드시 발생해야 하는 조건&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프의 표기법&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프의-표기법">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84%ec%9d%98-%ed%91%9c%ea%b8%b0%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>노드&lt;/strong>: 원인(입력 조건)은 그래프의 좌측에, 결과(출력 조건)는 우측에 위치시킨다. 각 노드는 1(참 또는 있음)과 0(거짓 또는 없음)의 두 가지 상태를 가진다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>연산자&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IDENTITY: 원인과 결과가 동일한 상태를 가짐을 나타낸다.&lt;/li>
&lt;li>AND: 여러 원인이 모두 참일 때 결과가 참임을 나타내다.&lt;/li>
&lt;li>OR: 하나 이상의 원인이 참일 때 결과가 참임을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>제약 심볼&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>R 제약: 한 원인이 참이면 다른 원인도 반드시 참이어야 함을 나타낸다.&lt;/li>
&lt;li>E 제약: 많아야 1개의 원인이 참일 수 있음을 나타낸다.&lt;/li>
&lt;li>O 제약: 정확히 1개의 원인만 참이어야 함을 나타낸다.&lt;/li>
&lt;li>M(Mask): 한 결과가 참이면 다른 결과는 강제로 거짓이 됨을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 장점&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-장점">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>입력 조건과 출력 결과 간의 관계를 시각적으로 표현하여 이해하기 쉽다.&lt;/li>
&lt;li>복잡한 입력 환경을 체계적으로 분석할 수 있다.&lt;/li>
&lt;li>효율적인 테스트 케이스를 도출할 수 있어 테스트의 품질을 향상시킬 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 한계&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-한계">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>대규모 시스템에서는 그래프가 복잡해질 수 있어 적용이 어려울 수 있다.&lt;/li>
&lt;li>테스트 설계자의 경험과 지식에 따라 그래프의 품질이 달라질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>로그인 시스템에 대한 원인-결과 그래프 검사를 예로 들어보자.&lt;/p>
&lt;p>원인(입력 조건):&lt;/p>
&lt;ul>
&lt;li>C1: 아이디 입력됨&lt;/li>
&lt;li>C2: 아이디가 DB에 존재&lt;/li>
&lt;li>C3: 비밀번호 입력됨&lt;/li>
&lt;li>C4: 비밀번호가 일치&lt;/li>
&lt;/ul>
&lt;p>결과(출력 조건):&lt;/p>
&lt;ul>
&lt;li>E1: 로그인 성공&lt;/li>
&lt;li>E2: &amp;ldquo;아이디를 입력하세요&amp;rdquo; 메시지&lt;/li>
&lt;li>E3: &amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo; 메시지&lt;/li>
&lt;li>E4: &amp;ldquo;비밀번호를 입력하세요&amp;rdquo; 메시지&lt;/li>
&lt;li>E5: &amp;ldquo;비밀번호가 일치하지 않습니다&amp;rdquo; 메시지&lt;/li>
&lt;/ul>
&lt;p>논리적 관계의 예:&lt;/p>
&lt;ul>
&lt;li>로그인 성공(E1)이 되려면: 아이디 입력(C1) AND 아이디 존재(C2) AND 비밀번호 입력(C3) AND 비밀번호 일치(C4)&lt;/li>
&lt;li>&amp;ldquo;아이디를 입력하세요&amp;rdquo;(E2) 메시지는: NOT 아이디 입력(C1)&lt;/li>
&lt;li>&amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo;(E3) 메시지는: 아이디 입력(C1) AND NOT 아이디 존재(C2)&lt;/li>
&lt;/ul>
&lt;p>제약조건의 예:&lt;/p>
&lt;ul>
&lt;li>비밀번호가 일치(C4)하려면 반드시 비밀번호가 입력(C3)되어야 함&lt;/li>
&lt;li>아이디가 존재(C2)하려면 반드시 아이디가 입력(C1)되어야 함&lt;/li>
&lt;/ul>
&lt;p>이러한 관계를 그래프로 표현하면 다음과 같은 테스트 케이스를 도출할 수 있다:&lt;/p>
&lt;p>테스트 케이스 1: 아이디 미입력&lt;/p>
&lt;ul>
&lt;li>입력: 아이디 입력하지 않음&lt;/li>
&lt;li>예상 결과: &amp;ldquo;아이디를 입력하세요&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 2: 존재하지 않는 아이디&lt;/p>
&lt;ul>
&lt;li>입력: 존재하지 않는 아이디 입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 3: 비밀번호 미입력&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디 입력, 비밀번호 미입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;비밀번호를 입력하세요&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 4: 비밀번호 불일치&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디, 잘못된 비밀번호 입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;비밀번호가 일치하지 않습니다&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 5: 로그인 성공&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디와 비밀번호 입력&lt;/li>
&lt;li>예상 결과: 로그인 성공&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Decision Table Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/decision-table-testing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/decision-table-testing/</guid><description>
&lt;h2>결정 테이블 테스팅 (Decision Table Testing)&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-테스팅-decision-table-testing">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%85%8c%ec%8a%a4%ed%8c%85-decision-table-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>결정 테이블 테스팅은 복잡한 비즈니스 로직이나 시스템의 동작을 테스트하기 위한 체계적인 방법.&lt;br>
여러 조건(conditions)과 그에 따른 행동(actions)의 모든 가능한 조합을 표 형태로 정리하여 테스트 케이스를 도출하는 기법.&lt;/p>
&lt;p>예를 들어, 온라인 쇼핑몰의 할인 정책을 테스트한다고 생각해보자.&lt;br>
회원 등급(일반/VIP), 구매 금액(5만원 이상/미만), 프로모션 코드 사용 여부에 따라 다른 할인율이 적용된다면, 이러한 여러 조건의 조합을 결정 테이블로 정리하여 체계적으로 테스트할 수 있다.&lt;/p>
&lt;h3>결정 테이블의 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블의-구성-요소">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>결정 테이블은 네 가지 주요 부분으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>조건 스텁(Condition Stub):&lt;br>
테스트 대상 시스템에 영향을 미치는 조건들을 나열한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>회원 등급&lt;/li>
&lt;li>구매 금액&lt;/li>
&lt;li>프로모션 코드 사용 여부&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>조건 항목(Condition Entries):&lt;br>
각 조건에 대한 가능한 값들을 표시합니다. 보통 &amp;lsquo;Y/N&amp;rsquo; 또는 &amp;lsquo;T/F&amp;rsquo;로 표현한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>행동 스텁(Action Stub):&lt;br>
시스템이 취할 수 있는 행동들을 나열한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>할인율 적용&lt;/li>
&lt;li>포인트 적립&lt;/li>
&lt;li>무료 배송 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>행동 항목(Action Entries):&lt;br>
각각의 조건 조합에 대해 시스템이 취해야 할 행동을 표시한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>결정 테이블 작성 과정&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-작성-과정">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ec%9e%91%ec%84%b1-%ea%b3%bc%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>조건 식별:&lt;br>
먼저 시스템에 영향을 미치는 모든 조건들을 식별한다. 이는 요구사항 문서나 시스템 명세를 바탕으로 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>행동 식별:&lt;br>
시스템이 취할 수 있는 모든 가능한 행동들을 식별한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>규칙 작성:&lt;br>
조건들의 모든 가능한 조합과 그에 따른 행동을 표로 정리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테이블 단순화:&lt;br>
불가능하거나 의미 없는 조합을 제거하여 테이블을 최적화한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 할인 정책 테스트&lt;/p>
&lt;p>조건:&lt;/p>
&lt;ul>
&lt;li>C1: 회원 등급 (VIP/일반)&lt;/li>
&lt;li>C2: 구매 금액 (5만원 이상/미만)&lt;/li>
&lt;li>C3: 프로모션 코드 사용 (예/아니오)&lt;/li>
&lt;/ul>
&lt;p>행동:&lt;/p>
&lt;ul>
&lt;li>A1: 10% 할인&lt;/li>
&lt;li>A2: 5% 할인&lt;/li>
&lt;li>A3: 추가 2% 할인&lt;/li>
&lt;li>A4: 무료 배송&lt;/li>
&lt;/ul>
&lt;p>이를 결정 테이블로 표현하면:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>| 규칙 번호 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
| ------------- | ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |
| C1: VIP | Y | Y | Y | Y | N | N | N | N |
| C2: 5만원↑ | Y | Y | N | N | Y | Y | N | N |
| C3: 프로모션 | Y | N | Y | N | Y | N | Y | N |
| ------------- | ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |
| A1: 10% 할인 | X | X | | | | | |
| A2: 5% 할인 | | | X | X | X | X | |
| A3: 2% 추가 | X | | X | | X | | X |
| A4: 무료배송 | X | X | | | X | X | |&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>테스트 케이스 도출&lt;/p>
&lt;p>결정 테이블에서 각 규칙(열)은 하나의 테스트 케이스가 된다.
예를 들어:&lt;/p>
&lt;p>테스트 케이스 1:&lt;/p>
&lt;ul>
&lt;li>입력: VIP 회원이 5만원 이상 구매하고 프로모션 코드 사용&lt;/li>
&lt;li>기대 결과: 10% 할인 + 2% 추가 할인 + 무료 배송&lt;/li>
&lt;/ul>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 비즈니스 규칙을 문서화하는 데 사용된다.&lt;/li>
&lt;li>시스템의 조건과 동작(Actions)을 식별한다.&lt;/li>
&lt;li>입력 조건과 동작은 주로 참(True)과 거짓(False)으로 표현된다.&lt;/li>
&lt;li>각 열(컬럼)은 하나의 비즈니스 규칙과 대응관계를 가진다.&lt;/li>
&lt;/ol>
&lt;h3>결정 테이블 테스팅의 장점&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-테스팅의-장점">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>체계성:
모든 가능한 조건 조합을 빠짐없이 테스트할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>명확성:
테스트 조건과 기대 결과가 명확하게 정의된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>효율성:
중복되거나 불필요한 테스트 케이스를 쉽게 식별하고 제거할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>유지보수성:
조건이나 행동이 변경될 때 테스트 케이스를 쉽게 업데이트할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>결정 테이블 테스팅의 제한사항과 해결 방안&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-테스팅의-제한사항과-해결-방안">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%a0%9c%ed%95%9c%ec%82%ac%ed%95%ad%ea%b3%bc-%ed%95%b4%ea%b2%b0-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테이블 크기 증가:
조건이 많아지면 테이블이 기하급수적으로 커질 수 있다.
해결방안:&lt;/p>
&lt;ul>
&lt;li>조건 그룹화&lt;/li>
&lt;li>동등 분할&lt;/li>
&lt;li>우선순위가 높은 조합만 선택&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>동적 조건 처리:
시간에 따라 변하는 조건을 표현하기 어렵다.
해결방안:&lt;/p>
&lt;ul>
&lt;li>상태 전이 테스팅과 결합&lt;/li>
&lt;li>시나리오 기반 테스트 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>복잡한 의존관계:
조건들 간의 복잡한 의존관계를 표현하기 어려울 수 있다.
해결방안:&lt;/p>
&lt;ul>
&lt;li>계층적 결정 테이블 사용&lt;/li>
&lt;li>의존관계를 명시적으로 문서화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>State Transition Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/state-transition-testing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/state-transition-testing/</guid><description>
&lt;h2>상태 전이 테스팅(State Transition Testing)&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스팅state-transition-testing">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8c%85state-transition-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>상태 전이 테스트는 시스템이나 객체의 상태 변화를 모델링하고, 이벤트에 따른 상태 전이와 그 결과를 검증하는 기법이다.&lt;br>
이 방법은 시스템의 현재 상황(Conditions)과 이전 이력(History)을 반영하는 상태(States) 및 그 변화(Transition)에 따라 시스템이 어떻게 동작하는지를 테스트한다.&lt;/p>
&lt;h3>상태 전이 테스트의 목적&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-목적">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>시스템의 모든 가능한 상태와 전이를 식별하고 테스트&lt;/li>
&lt;li>유효한 상태 전이뿐만 아니라 유효하지 않은 전이도 테스트&lt;/li>
&lt;li>상태 변화에 따른 시스템의 반응과 출력을 검증&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트의 주요 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-주요-구성-요소">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템의 상태 전이를 테스트하기 위해서는 다음 요소들을 이해하고 정의해야 한다:&lt;/p>
&lt;ol>
&lt;li>상태(States): 시스템이 특정 시점에 가질 수 있는 조건이나 상황을 의미한다. 예를 들어, 로그인 시스템의 경우 &amp;lsquo;로그아웃 상태&amp;rsquo;, &amp;lsquo;로그인 상태&amp;rsquo;, &amp;lsquo;잠금 상태&amp;rsquo; 등이 있을 수 있다.&lt;/li>
&lt;li>이벤트(Events): 상태 변화를 촉발하는 트리거를 말한다. &amp;lsquo;로그인 버튼 클릭&amp;rsquo;, &amp;lsquo;비밀번호 입력&amp;rsquo;, &amp;lsquo;시간 초과&amp;rsquo; 등이 이벤트의 예시이다.&lt;/li>
&lt;li>전이(Transitions): 한 상태에서 다른 상태로의 변화를 의미한다. 이는 특정 이벤트에 의해 발생하며, 조건이 충족되어야 실행된다.&lt;/li>
&lt;li>액션(Actions): 전이가 발생할 때 실행되는 동작이다. &amp;lsquo;에러 메시지 표시&amp;rsquo;, &amp;lsquo;데이터 저장&amp;rsquo;, &amp;lsquo;화면 갱신&amp;rsquo; 등이 여기에 해당한다.&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트 설계 방법&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트-설계-방법">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%84%a4%ea%b3%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>상태 전이 다이어그램 작성&lt;/strong>: 시스템의 모든 상태와 상태 간 전이를 표현하는 다이어그램을 작성한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>상태-이벤트 테이블 구성&lt;/strong>: 상태 전이 다이어그램을 바탕으로 모든 상태와 이벤트의 관계를 테이블로 정리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>전이 트리 구성&lt;/strong>: 상태-이벤트 테이블을 기반으로 상태가 전이되는 경로를 트리 형태로 표현한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 케이스 도출&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>유효 테스트 케이스: 정상적인 상태 전이를 검증하는 케이스&lt;/li>
&lt;li>무효 테스트 케이스: 유효하지 않은 상태 전이를 검증하는 케이스&lt;/li>
&lt;li>가드 조건 테스트 케이스: 상태 전이에 조건이 있는 경우, 해당 조건을 검증하는 케이스&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 프로시저 구성&lt;/strong>: 테스트 케이스를 실행 순서에 따라 나열하여 테스트 프로시저를 작성한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 적용 예시&lt;span class="hx-absolute -hx-mt-20" id="실제-적용-예시">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ec%a0%81%ec%9a%a9-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>자동판매기의 상태 전이 테스트를 예로 들어보자:&lt;/p>
&lt;p>상태:&lt;/p>
&lt;ul>
&lt;li>대기 상태&lt;/li>
&lt;li>금액 입력 상태&lt;/li>
&lt;li>제품 선택 상태&lt;/li>
&lt;li>제품 배출 상태&lt;/li>
&lt;li>거스름돈 반환 상태&lt;/li>
&lt;/ul>
&lt;p>테스트 시나리오:&lt;/p>
&lt;ol>
&lt;li>정상 흐름: 대기 → 금액 입력 → 제품 선택 → 제품 배출 → 거스름돈 반환 → 대기&lt;/li>
&lt;li>예외 상황:
&lt;ul>
&lt;li>잘못된 금액 투입&lt;/li>
&lt;li>재고 없는 제품 선택&lt;/li>
&lt;li>거스름돈 부족 상황&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>테스트 수행 전략&lt;span class="hx-absolute -hx-mt-20" id="테스트-수행-전략">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%88%98%ed%96%89-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>상태 전이 테스트는 다음과 같은 전략을 통해 수행된다:&lt;/p>
&lt;ol>
&lt;li>0-스위치 커버리지: 모든 상태를 최소한 한 번씩 방문하는 테스트.&lt;/li>
&lt;li>1-스위치 커버리지: 모든 전이를 최소한 한 번씩 수행하는 테스트.&lt;/li>
&lt;li>라운드-트립 커버리지: 시작 상태로 돌아오는 순환 경로를 테스트.&lt;/li>
&lt;li>N-스위치 커버리지: N개의 연속된 전이를 포함하는 경로를 테스트.&lt;/li>
&lt;/ol>
&lt;h3>테스트 결과 분석 및 문서화&lt;span class="hx-absolute -hx-mt-20" id="테스트-결과-분석-및-문서화">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ea%b2%b0%ea%b3%bc-%eb%b6%84%ec%84%9d-%eb%b0%8f-%eb%ac%b8%ec%84%9c%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>테스트 수행 후에는 다음 사항들을 철저히 분석하고 문서화해야 한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>발견된 결함:&lt;/p>
&lt;ul>
&lt;li>잘못된 상태 전이&lt;/li>
&lt;li>누락된 상태 처리&lt;/li>
&lt;li>예외 상황 처리 미흡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 커버리지:&lt;/p>
&lt;ul>
&lt;li>방문한 상태의 비율&lt;/li>
&lt;li>수행된 전이의 비율&lt;/li>
&lt;li>테스트되지 않은 경로&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>개선 제안:&lt;/p>
&lt;ul>
&lt;li>발견된 문제점에 대한 해결 방안&lt;/li>
&lt;li>추가 테스트 필요 영역&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트의 장점&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-장점">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 시스템의 동작을 체계적으로 모델링하고 테스트할 수 있다.&lt;/li>
&lt;li>누락되거나 잘못된 상태 전이를 효과적으로 발견할 수 있다.&lt;/li>
&lt;li>시스템의 동작을 사용자 관점에서 검증할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트의 적용 분야&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-적용-분야">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>임베디드 소프트웨어 시스템&lt;/li>
&lt;li>자동화가 필요한 기술 분야&lt;/li>
&lt;li>비즈니스 객체 모델링&lt;/li>
&lt;li>인터넷 애플리케이션의 화면 흐름 테스트&lt;/li>
&lt;li>워크플로우 기반 시스템:
&lt;ul>
&lt;li>문서 관리 시스템&lt;/li>
&lt;li>결재 시스템&lt;/li>
&lt;li>주문 처리 시스템&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 인터페이스:
&lt;ul>
&lt;li>로그인 시스템&lt;/li>
&lt;li>회원가입 프로세스&lt;/li>
&lt;li>온라인 쇼핑 카트&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>상태 전이 다이어그램이 복잡해질 경우 테스트 설계와 실행이 어려워질 수 있다.&lt;/li>
&lt;li>모든 가능한 상태와 전이를 식별하고 테스트하는 것이 중요하므로, 시스템에 대한 깊은 이해가 필요하다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>비교 검사(Comparison Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/comparison-testing/</link><pubDate>Thu, 12 Dec 2024 00:13:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/comparison-testing/</guid><description>
&lt;h2>비교 검사(Comparison Testing)&lt;span class="hx-absolute -hx-mt-20" id="비교-검사comparison-testing">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%accomparison-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>비교 검사는 블랙박스 테스팅 기법 중 하나로, 동일한 기능을 수행하는 여러 버전의 소프트웨어나 시스템을 비교하여 테스트하는 방법.&lt;/p>
&lt;p>비교 검사는 동일한 입력값을 여러 버전의 소프트웨어에 제공하고, 그 출력값을 비교하는 방식으로 진행된다.&lt;br>
예를 들어, 새로운 버전의 소프트웨어와 이전 버전의 소프트웨어에 같은 입력을 주고 결과를 비교하여 일관성을 검증한다.&lt;/p>
&lt;p>비교 검사는 특히 다음과 같은 상황에서 효과적이다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>중요한 시스템 업그레이드 시:&lt;/p>
&lt;ul>
&lt;li>새로운 버전이 기존 기능을 정확히 수행하는지 확인&lt;/li>
&lt;li>예상치 못한 부작용 발견&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>호환성 검증 시:&lt;/p>
&lt;ul>
&lt;li>다양한 플랫폼이나 환경에서의 동작 비교&lt;/li>
&lt;li>크로스 플랫폼 애플리케이션 테스트&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화 검증 시:&lt;/p>
&lt;ul>
&lt;li>성능 개선 전후의 비교&lt;/li>
&lt;li>리소스 사용량, 응답 시간 등의 측정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 목적&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-목적">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>일관성 확인&lt;/strong>: 여러 버전 간의 출력 결과가 일관되는지 확인한다.&lt;/li>
&lt;li>&lt;strong>버그 식별&lt;/strong>: 특정 버전에서만 발생하는 문제를 식별할 수 있다.&lt;/li>
&lt;li>&lt;strong>성능 평가&lt;/strong>: 다른 버전 간의 성능 차이를 비교할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 특징&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-특징">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>여러 버전 비교&lt;/strong>: 동일한 기능을 수행하는 여러 버전의 프로그램을 대상으로 한다.&lt;/li>
&lt;li>&lt;strong>동일 입력 사용&lt;/strong>: 모든 버전에 동일한 테스트 데이터를 입력한다.&lt;/li>
&lt;li>&lt;strong>결과 비교&lt;/strong>: 각 버전에서 출력된 결과를 서로 비교한다.&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 주요 유형&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-주요-유형">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>백투백 테스팅(Back-to-Back Testing):&lt;/p>
&lt;ul>
&lt;li>동일한 사양으로 독립적으로 개발된 두 개 이상의 프로그램을 비교&lt;/li>
&lt;li>같은 입력에 대해 서로 다른 결과가 나오면 상세 분석을 수행&lt;/li>
&lt;li>예시: 두 개의 독립적인 개발팀이 만든 계산기 프로그램을 비교하여 결과의 정확성 검증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>버전 간 비교 테스팅:&lt;/p>
&lt;ul>
&lt;li>소프트웨어의 이전 버전과 새로운 버전을 비교&lt;/li>
&lt;li>업그레이드나 패치 후의 기능 정상 작동 여부 확인&lt;/li>
&lt;li>예시: 워드프로세서의 새 버전이 이전 버전의 모든 기능을 정상적으로 수행하는지 검증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 장점&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-장점">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>신뢰성 향상:&lt;/p>
&lt;ul>
&lt;li>여러 버전이나 구현체를 비교함으로써 결과의 신뢰성을 높일 수 있다&lt;/li>
&lt;li>한 버전에서만 발생하는 오류를 쉽게 발견할 수 있다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>효율적인 결함 탐지:&lt;/p>
&lt;ul>
&lt;li>이미 검증된 버전과의 비교를 통해 새로운 버전의 결함을 빠르게 찾아낼 수 있다&lt;/li>
&lt;li>회귀 테스팅(Regression Testing)과 결합하여 더욱 효과적인 테스팅이 가능하다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>객관적인 평가:&lt;/p>
&lt;ul>
&lt;li>동일한 입력에 대한 여러 결과를 비교함으로써 객관적인 평가가 가능하다&lt;/li>
&lt;li>성능, 정확성, 일관성 등 다양한 측면에서의 평가가 가능하다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사 수행 절차&lt;span class="hx-absolute -hx-mt-20" id="비교-검사-수행-절차">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac-%ec%88%98%ed%96%89-%ec%a0%88%ec%b0%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립:&lt;/p>
&lt;ul>
&lt;li>비교할 버전/시스템 선정&lt;/li>
&lt;li>테스트 범위와 기준 정의&lt;/li>
&lt;li>입력 데이터 세트 준비&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 실행:&lt;/p>
&lt;ul>
&lt;li>동일한 입력 데이터를 각 버전에 적용&lt;/li>
&lt;li>결과값 수집 및 기록&lt;/li>
&lt;li>실행 환경의 동일성 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>결과 분석:&lt;/p>
&lt;ul>
&lt;li>출력값 비교 및 차이점 식별&lt;/li>
&lt;li>차이가 발생한 경우 원인 분석&lt;/li>
&lt;li>문제점 기록 및 보고서 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사 수행 시 주의사항&lt;span class="hx-absolute -hx-mt-20" id="비교-검사-수행-시-주의사항">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac-%ec%88%98%ed%96%89-%ec%8b%9c-%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>환경의 통일성:&lt;/p>
&lt;ul>
&lt;li>테스트 환경을 최대한 동일하게 유지해야 정확한 비교가 가능하다&lt;/li>
&lt;li>하드웨어, 운영체제, 네트워크 환경 등을 고려해야 한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터의 대표성:&lt;/p>
&lt;ul>
&lt;li>테스트 데이터는 실제 사용 사례를 잘 반영해야 한다&lt;/li>
&lt;li>경계값, 예외 케이스 등 다양한 상황을 포함해야 한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>결과 해석의 신중성:&lt;/p>
&lt;ul>
&lt;li>차이가 발생했을 때 반드시 버그라고 단정 짓지 않아야 한다&lt;/li>
&lt;li>의도된 변경사항일 수 있으므로 사양을 꼼꼼히 확인해야 한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Function Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/function-coverage/</link><pubDate>Wed, 11 Dec 2024 10:30:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/function-coverage/</guid><description>
&lt;h2>함수 커버리지 (Function Coverage)&lt;span class="hx-absolute -hx-mt-20" id="함수-커버리지-function-coverage">&lt;/span>
&lt;a href="#%ed%95%a8%ec%88%98-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-function-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>함수 커버리지는 프로그램 내의 모든 함수가 테스트 중에 최소한 한 번 이상 호출되었는지를 측정하는 지표이다.&lt;/p>
&lt;p>간단한 예제:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Calculator&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">multiply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">divide&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Cannot divide by zero&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 계산기 클래스의 모든 함수를 테스트하기 위해서는 다음과 같은 테스트 코드가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculator&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Calculator&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># subtract 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># multiply 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">multiply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">12&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># divide 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">divide&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">4&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 실제 개발에서 자주 마주치는 더 복잡한 예제:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">OrderProcessor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">validateOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">applyDiscounts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">updateInventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sendConfirmation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 주문 유효성 검사&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 총액 계산&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">applyDiscounts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 할인 적용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">updateInventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 재고 업데이트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">sendConfirmation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 주문 확인 메일 발송&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 주문 처리 시스템의 함수 커버리지를 확인하기 위한 테스트를 작성해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testOrderProcessing&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">OrderProcessor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OrderProcessor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 모든 함수가 호출되는 시나리오 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 각 단계가 올바르게 실행되었는지 검증&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">isValid&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// validateOrder 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getTotal&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// calculateTotal 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getDiscounts&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// applyDiscounts 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getItems&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// updateInventory 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getCustomerEmail&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// sendConfirmation 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>함수 커버리지의 계산 방법은 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>함수 커버리지 = (호출된 함수의 수) / (전체 함수의 수) × 100%
예를 들어, OrderProcessor 클래스의 경우:
- 전체 함수 수: 6 (processOrder &amp;#43; 5개의 private 메서드)
- 호출된 함수 수: 6
따라서, 함수 커버리지 = (6/6) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>함수 커버리지를 측정할 때 특별히 주의해야 할 상황&lt;span class="hx-absolute -hx-mt-20" id="함수-커버리지를-측정할-때-특별히-주의해야-할-상황">&lt;/span>
&lt;a href="#%ed%95%a8%ec%88%98-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ec%b8%a1%ec%a0%95%ed%95%a0-%eb%95%8c-%ed%8a%b9%eb%b3%84%ed%9e%88-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%83%81%ed%99%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">FileHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">readFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parseContent&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">saveResults&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handleError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cleanup&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">readFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">parseContent&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">saveResults&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">cleanup&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이러한 경우, 정상 실행 경로와 예외 발생 경로 모두를 테스트해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testFileProcessing&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">FileHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileHandler&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 정상 경로 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;valid.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 예외 경로 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>측정 방법&lt;span class="hx-absolute -hx-mt-20" id="측정-방법">&lt;/span>
&lt;a href="#%ec%b8%a1%ec%a0%95-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>함수 커버리지는 다음과 같은 공식으로 계산된다:&lt;/p>
&lt;p>&lt;code>함수 커버리지(%) = (호출된 함수의 수 / 전체 함수의 수) × 100&lt;/code>&lt;/p>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>가장 기본적이고 가벼운 커버리지 측정 방법이다.&lt;/li>
&lt;li>함수의 내부 로직이나 실행 경로는 고려하지 않고, 단순히 함수가 호출되었는지만을 확인한다.&lt;/li>
&lt;li>테스트의 기본적인 수준을 빠르게 확인할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>구현이 간단하고 측정이 빠르다.&lt;/li>
&lt;li>프로그램의 전반적인 테스트 상태를 빠르게 파악할 수 있다.&lt;/li>
&lt;li>테스트되지 않은 함수를 쉽게 식별할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>함수 내부의 복잡한 로직이나 조건문을 고려하지 않아 테스트의 품질을 정확히 반영하지 못할 수 있다.&lt;/li>
&lt;li>함수가 호출되었다고 해서 그 함수의 모든 기능이 테스트되었다고 보장할 수 없다.&lt;/li>
&lt;li>다른 커버리지 기법들에 비해 테스트의 철저성을 보장하기 어렵다.&lt;/li>
&lt;/ol>
&lt;p>이러한 한계를 보완하기 위해, 함수 커버리지는 보통 다른 커버리지 지표들과 함께 사용된다:&lt;/p>
&lt;ol>
&lt;li>구문 커버리지로 함수 내부의 코드 실행을 확인&lt;/li>
&lt;li>분기 커버리지로 조건문의 다양한 경로를 검증&lt;/li>
&lt;li>통합 테스트로 함수들 간의 상호작용을 확인&lt;br>
이처럼 여러 테스트 기법을 조합함으로써, 소프트웨어의 품질을 더욱 효과적으로 보장할 수 있다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Requirements-based Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/requirements-based-testing/</link><pubDate>Wed, 11 Dec 2024 10:02:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/requirements-based-testing/</guid><description>
&lt;h2>요구사항 기반 테스팅 (Requirements-based Testing)&lt;span class="hx-absolute -hx-mt-20" id="요구사항-기반-테스팅-requirements-based-testing">&lt;/span>
&lt;a href="#%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85-requirements-based-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>요구사항 기반 테스팅은 소프트웨어 요구사항 명세서(SRS)에 명시된 기능적, 비기능적 요구사항을 검증하는 테스트 기법이다.&lt;br>
이 방법은 개발된 소프트웨어가 사용자와 개발 조직 간의 공식 합의에 따른 기능을 정확히 수행하는지 확인하는 것을 목표로 한다.&lt;/p>
&lt;p>실제 예시를 통해 더 구체적으로 살펴보자.&lt;br>
온라인 쇼핑몰의 로그인 기능에 대한 요구사항이 있다고 가정해보자:&lt;br>
&lt;code>&amp;quot;사용자는 이메일과 비밀번호로 로그인할 수 있어야 한다. 이메일은 올바른 형식이어야 하며, 비밀번호는 최소 8자 이상이어야 한다. 로그인 실패 시 적절한 오류 메시지를 표시해야 한다.&amp;quot;&lt;/code>&lt;/p>
&lt;p>이러한 요구사항을 기반으로 테스트를 설계하고 수행하는 과정을 단계별로 살펴보면:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>요구사항 분석 단계&lt;br>
먼저 요구사항을 세세하게 분석한다.&lt;br>
위의 예시에서 다음과 같은 핵심 요소들을 도출할 수 있다:&lt;/p>
&lt;ul>
&lt;li>이메일 형식 검증&lt;/li>
&lt;li>비밀번호 길이 검증&lt;/li>
&lt;li>로그인 성공/실패 처리&lt;/li>
&lt;li>오류 메시지 표시&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 도출 단계&lt;br>
각 요구사항 요소별로 테스트 케이스를 작성한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>올바른 이메일 형식으로 로그인 시도&lt;/li>
&lt;li>잘못된 이메일 형식으로 로그인 시도&lt;/li>
&lt;li>8자 미만의 비밀번호로 로그인 시도&lt;/li>
&lt;li>올바른 자격증명으로 로그인 시도&lt;/li>
&lt;li>잘못된 자격증명으로 로그인 시도&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 설계 단계&lt;br>
각 테스트 케이스에 대해 구체적인 테스트 시나리오를 작성한다.&lt;br>
여기에는 테스트 데이터, 실행 조건, 예상 결과 등이 포함된다.&lt;br>
예를 들어: 입력값: &lt;code>test@example.com&lt;/code> / &lt;code>password123&lt;/code> 예상 결과: 로그인 성공, 메인 페이지로 이동&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 단계&lt;br>
설계된 테스트 케이스를 실제로 실행하고 결과를 기록한다.&lt;br>
이때 요구사항과 실제 동작이 일치하는지 꼼꼼히 확인한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석 및 보고&lt;br>
단계 테스트 결과를 분석하고, 요구사항 충족 여부를 평가한다.&lt;br>
발견된 불일치나 문제점을 문서화하고 보고한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 중심: 테스트 케이스는 시스템의 문서화된 요구사항에서 직접 도출된다.&lt;/li>
&lt;li>포괄적 검증: 각 요구사항에 대해 최소한 하나 이상의 테스트 케이스가 생성되어 모든 요구사항이 검증되도록 보장한다.&lt;/li>
&lt;li>블랙박스 테스팅: 일반적으로 시스템의 내부 구조를 고려하지 않고 입력과 출력만을 바탕으로 테스트를 수행한다.&lt;/li>
&lt;li>추적성: 요구사항과 테스트 케이스 간의 명확한 매핑을 통해 추적성을 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>프로세스&lt;span class="hx-absolute -hx-mt-20" id="프로세스">&lt;/span>
&lt;a href="#%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 이해: 프로젝트의 기능적, 비기능적 요구사항을 철저히 검토하고 이해한다.&lt;/li>
&lt;li>테스트 케이스 생성: 이해된 요구사항에 기반하여 테스트 케이스를 설계한다.&lt;/li>
&lt;li>요구사항 매핑: 생성된 테스트 케이스를 원래의 요구사항에 매핑한다.&lt;/li>
&lt;li>테스트 실행: 설계된 테스트 케이스를 실행하고 결과를 분석한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>포괄적인 테스트 범위: 모든 요구사항이 테스트되도록 보장한다.&lt;/li>
&lt;li>조기 결함 발견: 개발 프로세스 초기에 결함을 식별할 수 있다.&lt;/li>
&lt;li>요구사항 명확화: 테스트 과정에서 모호한 요구사항을 식별하고 명확히 할 수 있다.&lt;/li>
&lt;li>개발 및 테스트 팀 간 협력 강화: 요구사항을 중심으로 팀 간 의사소통이 개선된다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 품질 의존성: 테스트의 효과성이 요구사항 문서의 품질에 크게 의존한다.&lt;/li>
&lt;li>예상치 못한 시나리오 누락: 문서화되지 않은 요구사항이나 예외 상황을 놓칠 수 있다.&lt;/li>
&lt;li>시간 소요: 모든 요구사항에 대한 테스트 케이스 설계와 실행에 상당한 시간이 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>요구사항 기반 테스팅을 더욱 효과적으로 수행하기 위한 방법들&lt;span class="hx-absolute -hx-mt-20" id="요구사항-기반-테스팅을-더욱-효과적으로-수행하기-위한-방법들">&lt;/span>
&lt;a href="#%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%eb%8d%94%ec%9a%b1-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%eb%b0%a9%eb%b2%95%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>요구사항 리뷰 참여
테스트 팀이 초기 요구사항 리뷰 단계부터 참여하여, 테스트 관점에서 요구사항의 명확성과 테스트 가능성을 검토한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>추적성 매트릭스 활용
요구사항과 테스트 케이스 간의 매핑을 명확히 하여, 모든 요구사항이 적절히 테스트되는지 추적한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>자동화 도구 활용
반복적인 테스트는 자동화하여 효율성을 높인다.
특히 회귀 테스트에서 유용하다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 현장에서 요구사항 기반 테스팅을 적용할 때의 팁&lt;span class="hx-absolute -hx-mt-20" id="실제-현장에서-요구사항-기반-테스팅을-적용할-때의-팁">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ed%98%84%ec%9e%a5%ec%97%90%ec%84%9c-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%ec%a0%81%ec%9a%a9%ed%95%a0-%eb%95%8c%ec%9d%98-%ed%8c%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>우선순위 설정
모든 요구사항을 동일한 수준으로 테스트할 수는 없으므로, 중요도와 위험도를 고려하여 우선순위를 설정한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경계값 분석
요구사항에 명시된 조건들의 경계값을 집중적으로 테스트한다. 예를 들어, 비밀번호 길이가 8자인 경우, 7자와 8자, 9자의 케이스를 모두 테스트합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네거티브 테스트 포함
요구사항을 만족하지 않는 상황에서의 시스템 동작도 테스트한다. 이는 시스템의 견고성을 높이는 데 중요하다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>이러한 요구사항 기반 테스팅은 소프트웨어 품질 보증의 기본이 되는 중요한 접근법이다. 특히 명확한 요구사항이 존재하는 프로젝트에서 매우 효과적이며, 다른 테스트 기법들과 보완적으로 사용될 때 최상의 결과를 얻을 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Metamorphic Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/metamorphic-testing/</link><pubDate>Wed, 11 Dec 2024 10:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/metamorphic-testing/</guid><description>
&lt;h2>메타모픽 테스팅 (Metamorphic Testing, MT)&lt;span class="hx-absolute -hx-mt-20" id="메타모픽-테스팅-metamorphic-testing-mt">&lt;/span>
&lt;a href="#%eb%a9%94%ed%83%80%eb%aa%a8%ed%94%bd-%ed%85%8c%ec%8a%a4%ed%8c%85-metamorphic-testing-mt" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>소프트웨어 테스트에서 &amp;ldquo;오라클 문제&amp;rdquo;(테스트 결과의 정확성을 판단하기 어려운 상황)를 해결하기 위해 개발된 방법으로,&lt;br>
메타모픽 테스팅은 소프트웨어의 의도된 기능에 대한 필수적인 속성인 메타모픽 관계(Metamorphic Relations, MRs)를 활용하여 테스트를 수행한다.&lt;br>
이 방법은 정확한 출력값을 알지 못해도 테스트가 가능하다는 점에서 특징적이다.&lt;/p>
&lt;p>메타모픽 테스팅의 핵심 원리는 입력값들 사이의 관계와 그에 따른 출력값들 사이의 관계를 활용하는 것이다.&lt;br>
예를 들어, 어떤 숫자에 2를 곱한 값과 원래 숫자의 제곱을 비교한다고 생각해보자.&lt;br>
입력값이 3일 때, 3 × 2 = 6이고 3² = 9이다.&lt;br>
여기서 우리는 &amp;ldquo;어떤 숫자에 2를 곱한 값은 항상 그 숫자의 제곱보다 작다&amp;quot;라는 메타모픽 관계를 발견할 수 있다.&lt;/p>
&lt;p>실제 적용 예시를 통해 더 자세히 살펴보자:&lt;/p>
&lt;p>검색 엔진 테스트의 경우:&lt;/p>
&lt;ul>
&lt;li>원래 검색어: &amp;ldquo;강아지 훈련&amp;rdquo;&lt;/li>
&lt;li>변형된 검색어: &amp;ldquo;강아지 훈련 방법&amp;rdquo;&lt;br>
메타모픽 관계: 두 번째 검색 결과는 첫 번째 검색 결과의 부분집합이어야 한다.&lt;/li>
&lt;/ul>
&lt;p>정렬 알고리즘 테스트의 경우:&lt;/p>
&lt;ul>
&lt;li>원래 입력: [4, 2, 7, 1]&lt;/li>
&lt;li>변형된 입력: [4, 2, 7, 1, 4]&lt;br>
메타모픽 관계: 두 번째 정렬 결과는 첫 번째 정렬 결과에 4가 한 번 더 추가된 형태여야 한다.&lt;/li>
&lt;/ul>
&lt;h2>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>속성 기반 테스팅: 입력과 출력 간의 관계가 아닌 입력들 간의 일반적인 관계를 기반으로 시스템 기능을 설명한다.&lt;/li>
&lt;li>다중 실행: 소프트웨어의 여러 실행 결과를 비교하여 테스트한다.&lt;/li>
&lt;li>오라클 문제 해결: 예상 출력을 정확히 알지 못해도 테스트가 가능하다.&lt;/li>
&lt;li>테스트 케이스 생성: MRs를 통해 소스 테스트 케이스로부터 후속 테스트 케이스를 자동으로 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;dl>
&lt;dt>&amp;ldquo;오라클 문제&amp;rdquo;&lt;/dt>
&lt;dd>테스트 결과의 정확성을 판단하기 어려운 상황&lt;/dd>
&lt;/dl>
&lt;/blockquote>
&lt;h3>메타모픽 테스팅의 수행 단계&lt;span class="hx-absolute -hx-mt-20" id="메타모픽-테스팅의-수행-단계">&lt;/span>
&lt;a href="#%eb%a9%94%ed%83%80%eb%aa%a8%ed%94%bd-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%88%98%ed%96%89-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>메타모픽 관계 식별&lt;br>
테스트 대상 시스템에서 성립해야 하는 메타모픽 관계를 찾는다.&lt;br>
이는 수학적 속성이나 비즈니스 규칙에서 도출될 수 있다.&lt;br>
예를 들어, 삼각함수에서 sin(x) = sin(x + 2π) 같은 관계를 활용할 수 있다.&lt;/li>
&lt;li>소스 테스트 케이스 생성&lt;br>
기본이 되는 테스트 케이스를 만든다.&lt;br>
예를 들어, 삼각함수 테스트에서 x = 30°를 소스 테스트 케이스로 선택할 수 있다.&lt;/li>
&lt;li>후속 테스트 케이스 생성&lt;br>
메타모픽 관계를 적용하여 새로운 테스트 케이스를 만든다.&lt;br>
위의 예에서는 x = 30° + 360°가 후속 테스트 케이스가 된다.&lt;/li>
&lt;li>테스트 실행 및 검증&lt;br>
두 테스트 케이스를 실행하고 결과가 메타모픽 관계를 만족하는지 확인한다.&lt;br>
sin(30°)와 sin(390°)의 값이 같아야 한다.&lt;/li>
&lt;/ol>
&lt;h3>적용 분야&lt;span class="hx-absolute -hx-mt-20" id="적용-분야">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>메타모픽 테스팅은 다양한 분야에서 적용되고 있다:&lt;/p>
&lt;ul>
&lt;li>웹 서비스&lt;/li>
&lt;li>컴퓨터 그래픽스&lt;/li>
&lt;li>임베디드 시스템&lt;/li>
&lt;li>시뮬레이션 및 모델링&lt;/li>
&lt;li>기계 학습&lt;/li>
&lt;li>의사 결정 지원 시스템&lt;/li>
&lt;li>생물정보학&lt;/li>
&lt;li>컴파일러 등&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>단순성: 개념이 간단하고 구현이 쉽다.&lt;/li>
&lt;li>자동화 용이성: MRs만 정의되면 테스트 과정의 대부분을 자동화할 수 있다.&lt;/li>
&lt;li>효과적인 결함 검출: 널리 사용되는 프로그램에서도 실제 결함을 발견할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>MR 식별의 어려움: 효과적인 MRs를 식별하는 것이 쉽지 않을 수 있다.&lt;/li>
&lt;li>복잡한 시스템에서의 적용: 매우 복잡한 시스템에서는 적용이 어려울 수 있다.&lt;/li>
&lt;/ol>
&lt;p>메타모픽 테스팅은 특히 테스트 오라클이 없거나 불완전한 경우, 그리고 입력 도메인이 매우 큰 경우에 유용하다.&lt;br>
이 기법은 다른 정적 및 동적 소프트웨어 분석 기법들과 결합하여 사용될 수 있으며, 소프트웨어의 검증, 유효성 검사 및 품질 평가를 위한 강력한 도구로 발전하고 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>분류 트리 방법 (Classification Tree Method)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/classification-tree-method/</link><pubDate>Wed, 11 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/classification-tree-method/</guid><description>
&lt;h2>분류 트리 방법 (Classification Tree Method, CTM)&lt;span class="hx-absolute -hx-mt-20" id="분류-트리-방법-classification-tree-method-ctm">&lt;/span>
&lt;a href="#%eb%b6%84%eb%a5%98-%ed%8a%b8%eb%a6%ac-%eb%b0%a9%eb%b2%95-classification-tree-method-ctm" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>CTM은 1993년 Grimm과 Grochtmann에 의해 개발된 테스트 설계 방법으로, 소프트웨어의 테스트 관련 측면을 체계적으로 분류하고 조합하여 테스트 케이스를 생성한다.&lt;/p>
&lt;p>분류 트리 방법은 테스트 대상 시스템의 입력 도메인을 여러 분류(Classifications)로 나누고, 각 분류 아래에 클래스(Classes)들을 정의하는 방식으로 작동한다.&lt;br>
여기서 분류는 테스트할 특성이나 매개변수를 의미하고, 클래스는 그 특성이 가질 수 있는 구체적인 값들을 의미한다.&lt;/p>
&lt;p>예를 들어, 온라인 쇼핑몰의 주문 시스템을 테스트한다고 가정해보자:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>분류: 결제 방법&lt;/p>
&lt;ul>
&lt;li>클래스: 신용카드, 계좌이체, 휴대폰 결제&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분류: 배송 옵션&lt;/p>
&lt;ul>
&lt;li>클래스: 일반배송, 특급배송, 해외배송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분류: 주문 금액&lt;/p>
&lt;ul>
&lt;li>클래스: 1만원 미만, 1-5만원, 5만원 이상&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 단계&lt;span class="hx-absolute -hx-mt-20" id="주요-단계">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>분류(Classification): 테스트 관련 측면(classifications)과 해당 값(classes)을 식별한다.&lt;/li>
&lt;li>조합(Combination): 다양한 분류의 클래스들을 조합하여 테스트 케이스를 생성한다.&lt;/li>
&lt;li>명세(Specification): 생성된 조합을 바탕으로 실제 테스트 케이스를 작성한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>블랙박스 테스팅 방법으로, 다양한 유형의 시스템에 적용 가능하다.&lt;/li>
&lt;li>등가 분할(Equivalence Partitioning)과 경계값 분석(Boundary Value Analysis) 원칙을 활용한다.&lt;/li>
&lt;li>그래픽 기반 기법으로, 루트, 브랜치, 리프로 구성된 트리 구조를 사용한다.&lt;/li>
&lt;li>테스트 케이스 간의 관계를 시각적으로 표현하여 테스트 커버리지를 쉽게 이해할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>체계적인 접근: 테스트 프로세스에 구조화된 접근 방식을 제공한다.&lt;/li>
&lt;li>효율성: 테스트 케이스 설계와 생성 과정을 효율적으로 만든다.&lt;/li>
&lt;li>가시성: 테스트 케이스 간의 관계를 시각적으로 표현하여 이해도를 높인다.&lt;/li>
&lt;/ol>
&lt;h3>최근 발전&lt;span class="hx-absolute -hx-mt-20" id="최근-발전">&lt;/span>
&lt;a href="#%ec%b5%9c%ea%b7%bc-%eb%b0%9c%ec%a0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>우선순위 기반 테스트 케이스 생성: 요소에 가중치를 할당하여 테스트 케이스의 우선순위를 결정할 수 있다.&lt;/li>
&lt;li>테스트 시퀀스 생성: 클래스 간 유효한 전이를 정의하여 자동으로 테스트 시퀀스를 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>CTM은 테스트 설계를 체계화하고 효율화하는 강력한 도구이지만, 복잡한 시스템에서는 트리가 매우 복잡해질 수 있다는 점에 유의해야 한다.&lt;br>
따라서 적절한 수준의 추상화와 분류가 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Equivalence Partitioning</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/equivalence-partitioning/</link><pubDate>Wed, 11 Dec 2024 09:57:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/equivalence-partitioning/</guid><description>
&lt;h2>동등 분할(Equivalence Partitioning)&lt;span class="hx-absolute -hx-mt-20" id="동등-분할equivalence-partitioning">&lt;/span>
&lt;a href="#%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0equivalence-partitioning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>동등 분할은 입력 또는 출력 데이터를 의미 있는 그룹으로 나누어 테스트하는 기법.&lt;br>
이 방법의 핵심 아이디어는 같은 그룹에 속한 데이터는 프로그램에서 동일한 방식으로 처리될 것이라는 가정에 기반한다.&lt;br>
따라서 각 그룹에서 대표값만 테스트함으로써 효율적으로 테스트를 수행할 수 있다.&lt;/p>
&lt;p>예를 들어,&lt;br>
학생의 시험 점수(0-100점)를 등급(A, B, C, D, F)으로 변환하는 프로그램을 생각해보자.&lt;br>
이 경우 점수 범위를 다음과 같이 분할할 수 있다:&lt;/p>
&lt;p>유효 분할:&lt;/p>
&lt;ul>
&lt;li>90-100점: A등급&lt;/li>
&lt;li>80-89점: B등급&lt;/li>
&lt;li>70-79점: C등급&lt;/li>
&lt;li>60-69점: D등급&lt;/li>
&lt;li>0-59점: F등급&lt;/li>
&lt;/ul>
&lt;p>무효 분할:&lt;/p>
&lt;ul>
&lt;li>0점 미만&lt;/li>
&lt;li>100점 초과&lt;/li>
&lt;/ul>
&lt;h3>개념 및 정의&lt;span class="hx-absolute -hx-mt-20" id="개념-및-정의">&lt;/span>
&lt;a href="#%ea%b0%9c%eb%85%90-%eb%b0%8f-%ec%a0%95%ec%9d%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>입력값을 동등한 그룹(Equivalence Class)으로 분할한 후, 각 그룹에서 대표값을 선택하여 테스트한다.&lt;/li>
&lt;li>동일 그룹 내의 값들은 시스템이 동일하게 처리한다고 가정한다.&lt;/li>
&lt;li>하나의 값을 테스트함으로써 전체 그룹의 동작을 검증할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>목적 및 특징&lt;span class="hx-absolute -hx-mt-20" id="목적-및-특징">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81-%eb%b0%8f-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>입력값의 효율적인 테스트를 지원한다.&lt;/li>
&lt;li>모든 입력값을 개별적으로 테스트할 필요 없이, 각 그룹의 대표값으로 테스트를 수행한다.&lt;/li>
&lt;li>일반적으로 경계값 분석(Boundary Value Analysis)과 함께 사용된다.&lt;/li>
&lt;/ul>
&lt;h3>커버리지 계산&lt;span class="hx-absolute -hx-mt-20" id="커버리지-계산">&lt;/span>
&lt;a href="#%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-%ea%b3%84%ec%82%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>동등 분할 커버리지는 일반적으로 백분율로 표기하며, 다음과 같이 계산한다:&lt;br>
&lt;code>(최소한 한 개의 값으로 테스트한 동등 분할 수) / (식별한 모든 동등 분할의 수) * 100&lt;/code>&lt;/p>
&lt;h3>동등 분할의 종류&lt;span class="hx-absolute -hx-mt-20" id="동등-분할의-종류">&lt;/span>
&lt;a href="#%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>유효 동등 분할: 유효한 입력값을 포함하는 그룹&lt;/li>
&lt;li>비유효 동등 분할: 유효하지 않은 입력값을 포함하는 그룹&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>입력 도메인을 식별한다.&lt;/li>
&lt;li>입력 도메인을 동등한 그룹으로 분할한다.&lt;/li>
&lt;li>각 그룹에서 대표값을 선택한다.&lt;/li>
&lt;li>선택된 대표값으로 테스트 케이스를 작성한다.&lt;/li>
&lt;/ol>
&lt;h3>동등 분할의 상세 원칙과 적용&lt;span class="hx-absolute -hx-mt-20" id="동등-분할의-상세-원칙과-적용">&lt;/span>
&lt;a href="#%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0%ec%9d%98-%ec%83%81%ec%84%b8-%ec%9b%90%ec%b9%99%ea%b3%bc-%ec%a0%81%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>분할 기준 설정:
&lt;ol>
&lt;li>
&lt;p>입력 조건 기반:&lt;/p>
&lt;ul>
&lt;li>값의 범위(예: 1-100)&lt;/li>
&lt;li>숫자의 개수(예: 2-5개의 항목)&lt;/li>
&lt;li>데이터 타입(예: 숫자, 문자, 날짜)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>출력 조건 기반:&lt;/p>
&lt;ul>
&lt;li>결과값의 종류&lt;/li>
&lt;li>오류 메시지의 유형&lt;/li>
&lt;li>시스템 상태의 변화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>실제 적용 예시: 회원가입 시스템&lt;/p>
&lt;p>비밀번호 규칙을 예로 들어보자:&lt;/p>
&lt;ul>
&lt;li>길이: 8-16자&lt;/li>
&lt;li>구성: 영문자, 숫자, 특수문자 포함&lt;/li>
&lt;li>제한: 연속된 문자 3개 이상 사용 불가&lt;/li>
&lt;/ul>
&lt;p>이에 대한 동등 분할:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>유효한 경우:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>분할 1: 정상적인 비밀번호
- 예: &amp;#34;Password1!&amp;#34;
- 특징: 모든 요구사항 충족
분할 2: 최소 길이 비밀번호
- 예: &amp;#34;Pass1!@#&amp;#34;
- 특징: 8자, 모든 요구사항 충족
분할 3: 최대 길이 비밀번호
- 예: &amp;#34;Password1!@#$%^&amp;amp;&amp;#34;
- 특징: 16자, 모든 요구사항 충족&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>무효한 경우:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>분할 4: 길이 부족
- 예: &amp;#34;Pass1!&amp;#34;
- 특징: 7자 미만
분할 5: 길이 초과
- 예: &amp;#34;PasswordPassword1!&amp;#34;
- 특징: 17자 이상
분할 6: 구성요소 누락
- 예: &amp;#34;Password&amp;#34;
- 특징: 숫자/특수문자 누락
분할 7: 연속된 문자 포함
- 예: &amp;#34;Password123!&amp;#34;
- 특징: 연속된 숫자 사용&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h3>테스트 케이스 설계 프로세스&lt;span class="hx-absolute -hx-mt-20" id="테스트-케이스-설계-프로세스">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bc%80%ec%9d%b4%ec%8a%a4-%ec%84%a4%ea%b3%84-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>단계별 접근 방식:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>입력 조건 분석:&lt;/p>
&lt;ul>
&lt;li>요구사항 문서 검토&lt;/li>
&lt;li>입력 가능한 모든 조건 식별&lt;/li>
&lt;li>제약사항 파악&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분할 영역 정의:&lt;/p>
&lt;ul>
&lt;li>유효한 입력 영역 구분&lt;/li>
&lt;li>무효한 입력 영역 구분&lt;/li>
&lt;li>경계 조건 고려&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 선택:&lt;/p>
&lt;ul>
&lt;li>각 분할에서 대표값 선정&lt;/li>
&lt;li>경계값과의 조합 고려&lt;/li>
&lt;li>특수한 시나리오 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 구체화:&lt;/p>
&lt;ul>
&lt;li>입력값 정의&lt;/li>
&lt;li>기대 결과 명시&lt;/li>
&lt;li>테스트 절차 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>테스트 케이스 수를 효율적으로 줄일 수 있다&lt;/li>
&lt;li>체계적인 접근으로 커버리지를 보장할 수 있다&lt;/li>
&lt;li>유지보수가 용이하다&lt;/li>
&lt;/ul>
&lt;h3>한계&lt;span class="hx-absolute -hx-mt-20" id="한계">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>분할 경계에서의 오류를 놓칠 수 있다&lt;/li>
&lt;li>복잡한 조건의 조합을 모두 다루기 어렵다&lt;/li>
&lt;li>분할 기준의 주관성이 있을 수 있다&lt;/li>
&lt;/ul>
&lt;h3>효과적인 동등 분할을 위한 권장사항&lt;span class="hx-absolute -hx-mt-20" id="효과적인-동등-분할을-위한-권장사항">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0%ec%9d%84-%ec%9c%84%ed%95%9c-%ea%b6%8c%ec%9e%a5%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>데이터 특성 고려:&lt;/p>
&lt;ul>
&lt;li>데이터의 성질과 의미를 충분히 이해&lt;/li>
&lt;li>업무 규칙과 제약조건 반영&lt;/li>
&lt;li>실제 사용 패턴 분석&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분할 기준 최적화:&lt;/p>
&lt;ul>
&lt;li>너무 세밀한 분할 지양&lt;/li>
&lt;li>너무 큰 분할 지양&lt;/li>
&lt;li>의미 있는 구분점 선택&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 효율성 향상:&lt;/p>
&lt;ul>
&lt;li>자동화 도구 활용&lt;/li>
&lt;li>테스트 데이터 생성기 사용&lt;/li>
&lt;li>테스트 케이스 관리 도구 활용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Scenario Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/scenario-testing/</link><pubDate>Wed, 11 Dec 2024 09:57:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/scenario-testing/</guid><description>
&lt;h2>시나리오 테스팅 (Scenario Testing)&lt;span class="hx-absolute -hx-mt-20" id="시나리오-테스팅-scenario-testing">&lt;/span>
&lt;a href="#%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-%ed%85%8c%ec%8a%a4%ed%8c%85-scenario-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>시나리오 테스팅은 실제 상황을 시뮬레이션하여 소프트웨어를 검증하는 강력한 기술이다.
개별 기능에 초점을 맞춘 기존 테스트 케이스와 달리 시나리오 테스트에서는 일련의 이벤트나 상호 작용이 발생할 때 시스템이 어떻게 작동하는지 검사한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>사용자 중심 접근: 실제 사용자의 관점에서 소프트웨어를 테스트한다.&lt;/li>
&lt;li>전체 흐름 검증: 개별 기능이 아닌 전체 사용 흐름을 테스트한다.&lt;/li>
&lt;li>현실적인 상황 재현: 실제 사용 환경과 유사한 상황을 시뮬레이션한다.&lt;/li>
&lt;li>비기술적 언어 사용: 비기술적인 사용자도 이해할 수 있는 언어로 작성된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>사용자 경험 개선: 실제 사용자의 관점에서 테스트하므로 사용자 불편이나 흐름의 단절을 발견할 수 있다.&lt;/li>
&lt;li>종합적인 결함 발견: 기능 간 상호작용에서 발생하는 결함을 발견할 수 있다.&lt;/li>
&lt;li>예기치 못한 문제 파악: 다양한 상황을 미리 시뮬레이션하여 잠재적인 오류와 리스크를 발견할 수 있다.&lt;/li>
&lt;li>팀 간 협업 강화: 비기술적 이해관계자도 시나리오를 이해하기 쉬워 협업이 용이하다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>시나리오 정의: 테스트할 주요 시나리오를 식별한다.&lt;/li>
&lt;li>테스트 데이터 준비: 실제 환경에서 발생할 수 있는 모든 상황을 포괄하는 데이터를 준비한다.&lt;/li>
&lt;li>시나리오 실행: 정의된 시나리오에 따라 테스트를 수행한다.&lt;/li>
&lt;li>결과 분석: 시나리오 실행 결과를 분석하고 문제점을 식별한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>조합 테스트 설계 기법 (Combinatorial Test Design Techniques)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/combinatorial-test-design-techniques/</link><pubDate>Wed, 11 Dec 2024 09:42:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/combinatorial-test-design-techniques/</guid><description>
&lt;h2>조합 테스트 설계 기법 (Combinatorial Test Design Techniques)&lt;span class="hx-absolute -hx-mt-20" id="조합-테스트-설계-기법-combinatorial-test-design-techniques">&lt;/span>
&lt;a href="#%ec%a1%b0%ed%95%a9-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%84%a4%ea%b3%84-%ea%b8%b0%eb%b2%95-combinatorial-test-design-techniques" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>조합 테스트 설계는 입력 매개변수의 다양한 조합을 사용하여 소프트웨어 애플리케이션을 테스트하는 방법이다.&lt;br>
이 기법은 모든 가능한 입력 조합을 테스트하는 대신 최적화된 조합을 선택하여 테스트 범위를 최대화하고 테스트 케이스 수를 최소화한다.&lt;/p>
&lt;p>실제 테스트 설계 시에는 다음과 같은 단계를 따르는 것이 좋다:&lt;/p>
&lt;ol>
&lt;li>테스트 대상 식별&lt;br>
먼저 어떤 요소들을 테스트할 것인지 명확히 한다.&lt;br>
각 요소가 가질 수 있는 값들도 정의한다.&lt;/li>
&lt;li>제약조건 파악&lt;br>
일부 조합은 현실적으로 불가능하거나 의미가 없을 수 있다.&lt;br>
예를 들어, 특정 운영체제 버전에서는 5G를 지원하지 않을 수 있다.&lt;/li>
&lt;li>테스트 방법 선택&lt;br>
시스템의 중요도와 가용 자원을 고려하여 적절한 테스트 방법을 선택한다.&lt;/li>
&lt;li>테스트 케이스 생성&lt;br>
선택한 방법에 따라 테스트 케이스를 생성한다.&lt;br>
이때 자동화 도구를 활용하면 더욱 효율적이다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>수학적 기반: 직교 배열(Orthogonal Arrays)과 같은 수학적 개념을 활용한다.&lt;/li>
&lt;li>효율성: 적은 수의 테스트 케이스로 넓은 범위의 입력 조합을 커버한다.&lt;/li>
&lt;li>리스크 감소: 특정 입력 조합에서 발생할 수 있는 결함을 효과적으로 찾아낸다.&lt;/li>
&lt;li>자동화 가능: 특수한 알고리즘이나 도구를 사용하여 테스트 케이스를 자동으로 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>주요 기법&lt;span class="hx-absolute -hx-mt-20" id="주요-기법">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>페어와이즈 테스팅(Pairwise Testing): 모든 가능한 입력 매개변수 쌍의 조합을 테스트한다.&lt;/li>
&lt;li>N-방향 테스팅(N-way Testing): 페어와이즈를 확장하여 3개 이상의 매개변수 조합을 고려한다.&lt;/li>
&lt;li>직교 배열 테스팅(Orthogonal Array Testing): 수학적 직교 배열을 사용하여 효율적인 테스트 조합을 생성한다.&lt;/li>
&lt;li>올페어 알고리즘(AllPairs Algorithm): 각 변수 쌍에 대한 모든 값 조합을 효율적으로 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 수 감소: 효율적인 조합으로 필요한 테스트 케이스 수를 줄인다.&lt;/li>
&lt;li>높은 결함 검출률: 다양한 입력 조합을 테스트하여 더 많은 결함을 발견할 수 있다.&lt;/li>
&lt;li>시간과 비용 절감: 적은 수의 테스트로 넓은 범위를 커버하여 테스트 시간과 비용을 줄인다.&lt;/li>
&lt;li>조기 결함 발견: 개발 초기 단계에서 결함을 식별할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 시스템에서의 적용 어려움: 매개변수가 많은 복잡한 시스템에서는 구현이 어려울 수 있다.&lt;/li>
&lt;li>모든 결함 검출 불가능: 특정 시퀀스나 의존성이 필요한 결함은 놓칠 수 있다.&lt;/li>
&lt;li>정확한 입력 데이터 필요: 효과적인 테스트를 위해서는 정확하고 완전한 입력 데이터가 필요하다.&lt;/li>
&lt;/ol>
&lt;h3>조합 테스트를 더욱 효과적으로 수행하기 위한 팁&lt;span class="hx-absolute -hx-mt-20" id="조합-테스트를-더욱-효과적으로-수행하기-위한-팁">&lt;/span>
&lt;a href="#%ec%a1%b0%ed%95%a9-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%eb%8d%94%ec%9a%b1-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ed%8c%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>우선순위 설정:&lt;br>
모든 조합을 테스트할 수 없다면, 중요도나 위험도를 기준으로 우선순위를 정한다.&lt;br>
예를 들어, 사용자가 가장 많이 사용하는 조합이나 문제가 발생했을 때 영향이 큰 조합을 먼저 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 자동화:&lt;br>
조합 테스트는 많은 테스트 케이스를 다루기 때문에, 가능한 한 자동화하는 것이 좋다.&lt;br>
이를 통해 테스트 실행 시간을 단축하고 인적 오류를 줄일 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석:&lt;br>
테스트 결과를 체계적으로 분석하여 패턴을 찾는다.&lt;br>
특정 조합에서 문제가 자주 발생한다면, 그 원인을 심층적으로 조사할 필요가 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>조합 테스트 설계 기법은 효율적인 테스트 케이스 생성과 높은 결함 검출률을 제공하지만, 다른 테스트 기법들과 함께 사용하여 더 완전한 테스트 전략을 수립하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>랜덤 테스팅(Random Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/random-testing/</link><pubDate>Wed, 11 Dec 2024 07:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/random-testing/</guid><description>
&lt;h2>랜덤 테스팅 (Random Testing)&lt;span class="hx-absolute -hx-mt-20" id="랜덤-테스팅-random-testing">&lt;/span>
&lt;a href="#%eb%9e%9c%eb%8d%a4-%ed%85%8c%ec%8a%a4%ed%8c%85-random-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>랜덤 테스팅은 테스트 대상 시스템에 임의로 생성된 데이터를 입력하여 프로그램의 동작을 검증하는 기법이다.&lt;br>
이는 통계적 테스팅 또는 몬테카를로 테스팅으로도 알려져 있다.&lt;/p>
&lt;p>실제 예시를 통해 더 자세히 살펴보자.&lt;br>
숫자 정렬 프로그램을 테스트한다고 가정해보자.&lt;br>
전통적인 테스트 방식에서는 미리 정해진 테스트 케이스(예: &lt;code>[1,2,3]&lt;/code> 또는 &lt;code>[3,2,1]&lt;/code>)를 사용할 것.&lt;br>
하지만 랜덤 테스팅에서는 무작위로 생성된 숫자 배열을 사용한다.&lt;br>
이를 통해 개발자가 미처 생각하지 못한 경우의 수를 테스트할 수 있다.&lt;/p>
&lt;p>랜덤 테스팅의 실제 적용 과정을 단계별로 살펴보자:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>입력 도메인 정의&lt;br>
먼저 유효한 입력값의 범위와 특성을 정의한다.&lt;br>
예를 들어, 숫자 정렬 프로그램의 경우:&lt;/p>
&lt;ul>
&lt;li>배열의 길이: 1에서 1000 사이&lt;/li>
&lt;li>각 숫자의 범위: -10000에서 10000 사이&lt;/li>
&lt;li>중복 허용 여부 등을 정의합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>랜덤 데이터 생성기 구현&lt;br>
정의된 도메인 내에서 무작위 입력값을 생성하는 메커니즘을 구현한다.&lt;br>
여기서 중요한 것은 단순한 무작위가 아닌, 정의된 제약조건을 만족하는 데이터를 생성하는 것이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 및 결과 검증&lt;br>
생성된 입력값으로 프로그램을 실행하고, 결과가 올바른지 검증한다.&lt;br>
정렬 프로그램의 경우, 결과 배열이 실제로 정렬되어 있는지 확인한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석 및 피드백&lt;br>
발견된 오류를 분석하고, 필요한 경우 입력 생성 방식을 조정한다.&lt;br>
특정 유형의 입력에서 문제가 자주 발생한다면, 그러한 입력이 더 자주 생성되도록 조정할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>임의성: 입력 데이터가 무작위로 생성되어 예측 불가능한 시나리오를 테스트할 수 있다.&lt;/li>
&lt;li>자동화 가능성: 대량의 테스트 케이스를 자동으로 생성하고 실행할 수 있다.&lt;/li>
&lt;li>설계자 편향 회피: 테스트 설계자의 선입견을 피할 수 있어 예상치 못한 오류를 발견할 가능성이 있다.&lt;/li>
&lt;li>입력 도메인: 테스트 데이터는 사전 정의된 도메인에서 생성되며, 이는 랜덤 테스트의 중요한 측면이다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>예상치 못한 오류 발견: 개발자나 테스터가 예상하지 못한 시나리오를 테스트할 수 있다.&lt;/li>
&lt;li>테스트 케이스 생성 용이: 대량의 테스트 케이스를 쉽고 빠르게 생성할 수 있다.&lt;/li>
&lt;li>반복 실행의 이점: 같은 테스트를 여러 차례 반복 실행하여 새로운 결함 발견 가능성을 높일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>낮은 결함 발견 확률: 체계적인 테스팅 방법에 비해 오류를 발견할 확률이 상대적으로 낮을 수 있다.&lt;/li>
&lt;li>테스트 결과 예측 어려움: 무작위 입력으로 인해 예상 결과를 정확히 예측하기 어려울 수 있다.&lt;/li>
&lt;li>특정 시나리오 누락: 중요한 특정 시나리오를 테스트하지 못할 가능성이 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 분야&lt;span class="hx-absolute -hx-mt-20" id="적용-분야">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>랜덤 테스팅은 다양한 분야에서 활용될 수 있다:&lt;/p>
&lt;ol>
&lt;li>트레이딩 시스템: 금융 거래 시스템의 안정성과 성능을 테스트하는 데 사용된다.&lt;/li>
&lt;li>복잡한 알고리즘: 다양한 입력에 대한 알고리즘의 동작을 검증하는 데 유용하다.&lt;/li>
&lt;li>사용자 인터페이스: 예상치 못한 사용자 입력에 대한 시스템의 반응을 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>Random Testing이 발전된 기법들&lt;span class="hx-absolute -hx-mt-20" id="random-testing이-발전된-기법들">&lt;/span>
&lt;a href="#random-testing%ec%9d%b4-%eb%b0%9c%ec%a0%84%eb%90%9c-%ea%b8%b0%eb%b2%95%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>퍼징(Fuzzing)&lt;br>
특별히 설계된 랜덤 테스트 기법으로, 프로그램의 취약점을 찾기 위해 의도적으로 비정상적인 입력을 생성한다.&lt;br>
보안 테스팅에서 많이 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>적응형 랜덤 테스팅&lt;br>
이전 테스트 결과를 바탕으로 다음 테스트 케이스 생성 방식을 조정하는 방법.&lt;br>
문제가 발견된 영역 주변을 더 집중적으로 테스트할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>통계적 랜덤 테스팅&lt;br>
실제 사용 패턴의 통계적 분포를 반영하여 테스트 케이스를 생성하는 방법.&lt;br>
이를 통해 더 현실적인 테스트가 가능해진다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>구문 테스팅(Syntax Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/syntax-testing/</link><pubDate>Wed, 11 Dec 2024 07:22:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/syntax-testing/</guid><description>
&lt;h2>구문 테스팅(Syntax Testing)&lt;span class="hx-absolute -hx-mt-20" id="구문-테스팅syntax-testing">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ed%85%8c%ec%8a%a4%ed%8c%85syntax-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>구문 테스팅은 프로그램 코드의 모든 실행 가능한 구문을 최소한 한 번 이상 실행하도록 설계된 테스트 케이스를 사용하여 소프트웨어를 테스트하는 방법이다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>코드 커버리지 중심&lt;/strong>: 테스트 스위트에 의해 실행된 구문의 비율을 측정한다.&lt;/li>
&lt;li>&lt;strong>내부 구조 기반&lt;/strong>: 소프트웨어의 소스 코드에 직접 접근하여 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>최소 실행 보장&lt;/strong>: 모든 코드 구문이 적어도 한 번은 실행되도록 한다.&lt;/li>
&lt;/ol>
&lt;h3>구문 커버리지&lt;span class="hx-absolute -hx-mt-20" id="구문-커버리지">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>구문 커버리지는 구문 테스팅의 효과를 측정하는 지표이다:&lt;/p>
&lt;ul>
&lt;li>테스트 스위트에 의해 실행된 구문의 백분율로 표현된다.&lt;/li>
&lt;li>100% 구문 커버리지는 코드의 모든 실행 가능한 구문이 최소한 한 번 실행되었음을 의미한다.&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>철저한 코드 검증&lt;/strong>: 전체 코드와 구조를 테스트하므로 매우 철저하다.&lt;/li>
&lt;li>&lt;strong>코드 최적화&lt;/strong>: 불필요한 코드를 식별하고 제거하는 데 도움이 된다.&lt;/li>
&lt;li>&lt;strong>초기 단계 적용&lt;/strong>: 인터페이스가 필요 없어 개발 초기 단계에서 시작할 수 있다.&lt;/li>
&lt;li>&lt;strong>자동화 용이&lt;/strong>: 구조적 특성으로 인해 자동화하기 쉽다.&lt;/li>
&lt;/ol>
&lt;p>구문 테스팅의 실제 적용 예시를 살펴보면, 다음과 같은 시나리오들을 테스트할 수 있다:&lt;/p>
&lt;ol>
&lt;li>변수 선언과 초기화&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트 케이스들&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">validDeclaration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 유효한 선언&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invalidDeclaration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 타입 불일치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">uninitialized&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">초기화되지&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">않은&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">변수&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">사용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>함수 정의와 호출&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_function_syntax&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 올바른 함수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">valid_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">param1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">param2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 잘못된 함수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">invalid_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 콜론 누락&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">param1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">param2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 잘못된 함수 호출&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">valid_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 인자 개수 불일치&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>구문 테스팅을 통해 얻을 수 있는 이점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>조기 오류 발견: 구문 오류는 컴파일 시점에 발견되므로, 런타임 오류를 사전에 방지할 수 있다.&lt;/li>
&lt;li>코드 품질 향상: 일관된 코딩 스타일과 문법 사용으로 코드의 가독성과 유지보수성이 향상된다.&lt;/li>
&lt;li>개발 생산성 향상: 자동화된 도구를 통해 빠르게 구문 오류를 발견하고 수정할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>구문 테스팅의 주요 검증 대상&lt;span class="hx-absolute -hx-mt-20" id="구문-테스팅의-주요-검증-대상">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>기본 문법 요소 검증&lt;br>
프로그래밍 언어의 기본적인 문법 규칙을 검사한다.&lt;br>
예를 들어 Java에서는 다음과 같은 요소들을 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 올바른 구문&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Example&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 세미콜론으로 문장 종료&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">setValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 중괄호로 블록 시작&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 중괄호로 블록 종료&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 잘못된 구문&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Example&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 세미콜론 누락&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">setValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 괄호 누락&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>식별자 규칙 검증&lt;br>
변수명, 함수명, 클래스명 등이 언어의 명명 규칙을 따르는지 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 올바른 식별자 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">totalCount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">calculateTotal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 잘못된 식별자 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>&lt;span class="n">ndUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Jane&amp;#34;&lt;/span> &lt;span class="c1"># 숫자로 시작할 수 없음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span> &lt;span class="c1"># 하이픈 사용 불가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="err">= &amp;#34;&lt;/span>&lt;span class="nc">A&lt;/span>&lt;span class="s2">&amp;#34; # 예약어 사용 불가&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>타입 시스템 준수 검증&lt;br>
프로그래밍 언어의 타입 시스템 규칙을 준수하는지 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 올바른 타입 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">age&lt;/span>: &lt;span class="kt">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">25&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">name&lt;/span>: &lt;span class="kt">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 잘못된 타입 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">age&lt;/span>: &lt;span class="kt">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;25&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 문자열을 숫자 타입에 할당 불가
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">name&lt;/span>: &lt;span class="kt">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 숫자를 문자열 타입에 할당 불가
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>구조적 문법 검증&lt;br>
프로그램의 구조적 요소들이 올바르게 구성되었는지 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 올바른 구조&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_total&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">total&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 잘못된 구조&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_total&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">total&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;This line will never execute&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 도달할 수 없는 코드&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>구문 테스팅을 효과적으로 수행하기 위한 접근 방법&lt;span class="hx-absolute -hx-mt-20" id="구문-테스팅을-효과적으로-수행하기-위한-접근-방법">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%a0%91%ea%b7%bc-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>정적 분석 도구 활용&lt;br>
대부분의 현대 IDE와 개발 도구들은 자동화된 구문 검사 기능을 제공한다.&lt;br>
예를 들어:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pylint를 사용한 파이썬 코드 검사 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># pylint: warning - &amp;#39;sum&amp;#39; shadows built-in name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">numbers&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">sum&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">n&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">sum&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>컴파일러 경고 수준 설정&lt;br>
컴파일러의 경고 수준을 높게 설정하여 잠재적인 구문 문제를 조기에 발견한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// javac -Xlint:all 옵션 사용 시 발견되는 경고&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Example&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">method&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 원시 타입 사용 경고&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>코드 포맷터 활용&lt;br>
자동화된 코드 포맷터를 사용하여 일관된 코드 스타일을 유지한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// prettier로 포맷팅 전
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">total&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">total&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">total&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// prettier로 포맷팅 후
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">total&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>제한된 보장성&lt;/strong>: 모든 가능한 경우를 검증하지 못하는 보장성이 낮은 커버리지이다.&lt;/li>
&lt;li>&lt;strong>비용&lt;/strong>: 구현에 많은 시간과 자원이 필요할 수 있다.&lt;/li>
&lt;li>&lt;strong>코드 의존성&lt;/strong>: 코드 변경 시 테스트 케이스도 수정해야 한다.&lt;/li>
&lt;li>&lt;strong>전문성 요구&lt;/strong>: 테스터는 코드와 프로그래밍 언어에 대한 깊은 이해가 필요한다.&lt;/li>
&lt;li>&lt;strong>누락된 기능 감지 불가&lt;/strong>: 존재하지 않는 기능을 감지할 수 없다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>페어와이즈 테스팅(Pairwise Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/pairwise-testing/</link><pubDate>Wed, 11 Dec 2024 07:06:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/pairwise-testing/</guid><description>
&lt;h2>페어와이즈 테스팅(Pairwise Testing)&lt;span class="hx-absolute -hx-mt-20" id="페어와이즈-테스팅pairwise-testing">&lt;/span>
&lt;a href="#%ed%8e%98%ec%96%b4%ec%99%80%ec%9d%b4%ec%a6%88-%ed%85%8c%ec%8a%a4%ed%8c%85pairwise-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>페어와이즈 테스팅은 모든 가능한 입력 값 조합을 테스트하는 대신, 입력 매개변수의 모든 쌍(pair)을 최소한 한 번씩 테스트하는 기법이다.&lt;br>
이는 대부분의 결함이 두 입력 값의 상호작용에 기인한다는 관찰에 기반한다.&lt;/p>
&lt;p>실제 예시를 통해 더 자세히 살펴보자.&lt;br>
웹 브라우저 애플리케이션을 테스트한다고 가정하면:&lt;/p>
&lt;p>운영체제: Windows, Mac, Linux&lt;br>
브라우저: Chrome, Firefox, Safari&lt;br>
화면 해상도: HD, FHD, 4K&lt;br>
언어 설정: 한국어, 영어, 일본어&lt;/p>
&lt;p>만약 모든 가능한 조합을 테스트하려면 몇 개의 테스트 케이스가 필요할까?&lt;br>
3(운영체제) × 3(브라우저) × 3(해상도) × 3(언어) = 81개의 테스트 케이스가 필요하다.&lt;/p>
&lt;p>하지만 연구에 따르면, 소프트웨어 결함의 대부분은 두 개 매개변수 간의 상호작용에서 발생한다고 한다.&lt;br>
이러한 통계적 사실을 바탕으로, 페어와이즈 테스팅은 테스트 케이스의 수를 크게 줄이면서도 효과적으로 결함을 발견할 수 있다.&lt;/p>
&lt;p>페어와이즈 테스팅의 실제 적용 과정을 단계별로 살펴보자:&lt;/p>
&lt;ol>
&lt;li>매개변수와 값 식별&lt;br>
먼저 테스트할 매개변수들과 각각이 가질 수 있는 값들을 정의한다.&lt;br>
위의 예시에서는 4개의 매개변수(운영체제, 브라우저, 해상도, 언어)와 각각의 값들을 식별하였다.&lt;/li>
&lt;li>페어와이즈 조합 생성&lt;br>
각 매개변수 쌍에 대해 가능한 모든 조합을 생성한다.&lt;br>
예를 들어:&lt;br>
운영체제와 브라우저의 조합: Windows-Chrome, Windows-Firefox, Windows-Safari, Mac-Chrome, Mac-Firefox, Mac-Safari, Linux-Chrome, Linux-Firefox, Linux-Safari&lt;br>
이런 식으로 모든 매개변수 쌍에 대해 조합을 만든다.&lt;/li>
&lt;li>최적화된 테스트 케이스 생성&lt;br>
이렇게 만든 조합들을 최소한의 테스트 케이스로 커버할 수 있도록 최적화한다.&lt;br>
이 과정은 복잡하므로 보통 자동화 도구를 사용한다.&lt;br>
결과적으로 81개가 아닌 약 9-12개 정도의 테스트 케이스로 모든 페어와이즈 조합을 테스트할 수 있게 된다.&lt;/li>
&lt;li>테스트 실행 및 결과 분석&lt;br>
생성된 테스트 케이스들을 실행하고 결과를 분석한다.&lt;br>
특히 특정 매개변수 쌍의 조합에서 자주 발생하는 문제가 있는지 주목한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>효율성: 모든 조합을 테스트하는 것보다 훨씬 적은 수의 테스트 케이스로 높은 커버리지를 달성한다.&lt;/li>
&lt;li>체계적 접근: 입력 매개변수의 모든 쌍을 고려하여 테스트 케이스를 설계한다.&lt;/li>
&lt;li>자동화 가능: PICT, ACTS 등의 도구를 사용하여 테스트 케이스를 자동으로 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트할 매개변수와 각 매개변수의 가능한 값을 식별한다.&lt;/li>
&lt;li>모든 가능한 매개변수 쌍의 조합을 생성한다.&lt;/li>
&lt;li>각 쌍이 최소한 한 번씩 테스트되도록 테스트 케이스를 설계한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 수 감소: 모든 조합을 테스트하는 것보다 훨씬 적은 수의 테스트로 높은 커버리지를 달성한다.&lt;/li>
&lt;li>효율적인 결함 검출: 대부분의 결함을 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>시간과 비용 절감: 적은 수의 테스트로 넓은 범위를 커버하여 테스트 시간과 비용을 줄인다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 결함 검출 불가능: 세 개 이상의 매개변수 상호작용으로 인한 결함은 놓칠 수 있다.&lt;/li>
&lt;li>복잡한 시스템에서의 적용 어려움: 매개변수가 많은 복잡한 시스템에서는 구현이 어려울 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>도구&lt;span class="hx-absolute -hx-mt-20" id="도구">&lt;/span>
&lt;a href="#%eb%8f%84%ea%b5%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>페어와이즈 테스팅을 지원하는 다양한 도구가 있다:&lt;/p>
&lt;ol>
&lt;li>PICT (Pairwise Independent Combinatorial Testing): Microsoft에서 제공하는 무료 커맨드라인 도구.&lt;/li>
&lt;li>ACTS (Automated Combinatorial Testing for Software): NIST에서 제공하는 Java 기반 도구.&lt;/li>
&lt;li>AllPairs: Python으로 작성된 오픈 소스 도구.&lt;/li>
&lt;/ol>
&lt;p>페어와이즈 테스팅은 효율적인 테스트 케이스 생성과 높은 결함 검출률을 제공하지만, 다른 테스트 기법들과 함께 사용하여 더 완전한 테스트 전략을 수립하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Path Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/path-coverage/</link><pubDate>Tue, 10 Dec 2024 15:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/path-coverage/</guid><description>
&lt;h2>경로 커버리지(Path Coverage)&lt;span class="hx-absolute -hx-mt-20" id="경로-커버리지path-coverage">&lt;/span>
&lt;a href="#%ea%b2%bd%eb%a1%9c-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80path-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>경로 커버리지는 프로그램의 제어 흐름 그래프(Control Flow Graph, CFG)에서 모든 가능한 실행 경로를 테스트하는 구조적 테스팅 기법이다.&lt;br>
이는 프로그램의 입력과 출력 값보다는 내부 제어 흐름에 초점을 맞춘다.&lt;/p>
&lt;p>먼저 경로 커버리지의 기본 개념을 간단한 예제를 통해 이해해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_member&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_sale_period&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">is_member&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">is_sale_period&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.8&lt;/span> &lt;span class="c1"># 20% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.9&lt;/span> &lt;span class="c1"># 10% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">is_sale_period&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.95&lt;/span> &lt;span class="c1"># 5% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="c1"># 할인 없음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수에는 다음과 같은 가능한 실행 경로들이 있다:&lt;/p>
&lt;ol>
&lt;li>경로 1: 회원이면서 세일 기간인 경우&lt;/li>
&lt;li>경로 2: 회원이지만 세일 기간이 아닌 경우&lt;/li>
&lt;li>경로 3: 비회원이면서 세일 기간인 경우&lt;/li>
&lt;li>경로 4: 비회원이고 세일 기간도 아닌 경우&lt;/li>
&lt;/ol>
&lt;p>이러한 모든 경로를 테스트하기 위한 테스트 케이스를 작성해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_discount&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 1: 회원 + 세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">80&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 2: 회원 + 비세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">90&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 3: 비회원 + 세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">95&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 4: 비회원 + 비세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">100&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 더 복잡한 예제를 통해 경로 커버리지를 알아보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">LoanApprovalSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasCollateral&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">700&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">50000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Approved&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hasCollateral&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Approved with Collateral&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Need Higher Income&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">600&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">70000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasCollateral&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Conditionally Approved&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Need Improvement&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Rejected&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 대출 승인 시스템의 모든 가능한 경로를 테스트하기 위해서는 다음과 같은 테스트 케이스들이 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testLoanApproval&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApprovalSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApprovalSystem&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 1: 높은 신용점수 + 충분한 수입&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Approved&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 2: 높은 신용점수 + 낮은 수입 + 담보 있음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Approved with Collateral&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">40000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 3: 높은 신용점수 + 낮은 수입 + 담보 없음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Need Higher Income&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">40000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 4: 중간 신용점수 + 높은 수입 + 담보 있음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Conditionally Approved&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">650&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">80000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 5: 중간 신용점수 + 조건 불충분&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Need Improvement&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">650&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 6: 낮은 신용점수&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Rejected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">550&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">100000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>경로 커버리지의 계산 방법은 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>경로 커버리지 = (테스트된 경로의 수) / (가능한 총 경로의 수) × 100%
예를 들어, 위의 LoanApprovalSystem 예제에서:
- 총 가능한 경로 수: 6
- 테스트된 경로 수: 6
따라서, 경로 커버리지 = (6/6) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>경로 커버리지를 달성할 때 주의해야 할 점&lt;span class="hx-absolute -hx-mt-20" id="경로-커버리지를-달성할-때-주의해야-할-점">&lt;/span>
&lt;a href="#%ea%b2%bd%eb%a1%9c-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%eb%8b%ac%ec%84%b1%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>루프가 있는 경우의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">sumUntilNegative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이런 경우, 다음과 같은 시나리오를 고려해야 한다:&lt;/p>
&lt;ul>
&lt;li>빈 배열&lt;/li>
&lt;li>음수가 없는 배열&lt;/li>
&lt;li>첫 번째 요소가 음수인 배열&lt;/li>
&lt;li>중간에 음수가 있는 배열&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>예외 처리가 있는 경우:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">divide&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ArithmeticException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot divide by zero&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 경우 정상 실행 경로와 예외 발생 경로 모두를 테스트해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>경로 커버리지의 주요 장점은 다음과 같습니다:&lt;/p>
&lt;ol>
&lt;li>완전성: 프로그램의 모든 가능한 실행 경로를 검증할 수 있습니다.&lt;/li>
&lt;li>결함 발견: 특정 조건 조합에서만 발생하는 미묘한 버그를 찾아낼 수 있습니다.&lt;/li>
&lt;li>논리적 완전성: 모든 의사결정 경로가 테스트되므로 논리적 오류를 발견하기 쉽습니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 가능한 경로 테스트: 프로그램의 모든 가능한 실행 경로를 최소한 한 번씩 테스트한다.&lt;/li>
&lt;li>화이트박스 테스팅: 프로그램의 소스 코드를 분석하여 다양한 경로를 식별한다.&lt;/li>
&lt;li>순환 복잡도(Cyclomatic Complexity) 활용: 프로그램의 복잡도를 측정하여 테스트 케이스 설계에 활용한다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>코드 이해: 테스트할 코드를 철저히 분석하고 이해한다.&lt;/li>
&lt;li>제어 흐름 그래프(CFG) 작성: 프로그램의 제어 흐름을 그래프로 표현한다.&lt;/li>
&lt;li>경로 식별: CFG에서 모든 가능한 경로를 식별하고 나열한다.&lt;/li>
&lt;li>테스트 케이스 설계: 각 경로를 커버하는 테스트 케이스를 설계한다.&lt;/li>
&lt;li>테스트 실행 및 분석: 설계된 테스트 케이스를 실행하고 결과를 분석한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>철저한 테스트: 모든 가능한 경로를 테스트하여 숨겨진 결함을 발견할 수 있다.&lt;/li>
&lt;li>논리적 오류 검출: 프로그램 로직의 오류를 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>중복 테스트 감소: 각 코드 라인을 최소한 한 번씩 테스트하므로 중복 테스트를 줄일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성: 프로그램의 크기와 복잡도에 따라 가능한 경로의 수가 기하급수적으로 증가할 수 있다.&lt;/li>
&lt;li>시간과 비용: 모든 경로를 테스트하는 데 많은 시간과 자원이 필요할 수 있다.&lt;/li>
&lt;li>실현 가능성: 루프가 있는 경우 무한한 수의 경로 변형이 생길 수 있어 완전한 경로 커버리지를 달성하는 것이 불가능할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>경로 커버리지는 이론적으로 가장 강력한 커버리지 메트릭이지만, 실제 적용에는 한계가 있다.&lt;br>
따라서 다른 커버리지 기법들과 함께 사용하여 효과적인 테스팅 전략을 수립하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>조건 커버리지 (Condition Coverage)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/condition-coverage/</link><pubDate>Tue, 10 Dec 2024 15:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/condition-coverage/</guid><description>
&lt;h2>조건 커버리지 (Condition Coverage)&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지-condition-coverage">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-condition-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>조건 커버리지는 결정 포인트 내의 각 개별 조건식이 참(true)과 거짓(false)의 결과를 최소한 한 번씩 갖도록 테스트하는 기법이다.&lt;br>
이는 전체 조건식의 결과와는 독립적으로 각 개별 조건의 결과에 초점을 맞춘다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>개별 조건 중심: 전체 조건식이 아닌 각 개별 조건식의 결과를 검증한다.&lt;/li>
&lt;li>최소 요구사항: 각 조건이 최소한 한 번씩 참과 거짓의 결과를 가져야 한다.&lt;/li>
&lt;li>세분화된 테스트: 복잡한 조건문의 각 부분을 개별적으로 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>조건의 독립적 평가: 각 조건을 독립적으로 평가하여 더 세밀한 테스트가 가능하다.&lt;/li>
&lt;li>제어 흐름에 대한 높은 민감도: 프로그램의 제어 흐름을 더 정확하게 테스트할 수 있다.&lt;/li>
&lt;li>결정 커버리지보다 강력: 더 많은 테스트 케이스를 요구하므로 더 철저한 테스트가 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전체 조건식 결과 보장 부족: 개별 조건의 참/거짓만을 테스트하므로 전체 조건식의 모든 결과를 보장하지 않을 수 있다.&lt;/li>
&lt;li>테스트 케이스 증가: 조건의 수가 많아질수록 필요한 테스트 케이스의 수가 증가한다.&lt;br>
따라서 조건 커버리지는 다른 테스트 커버리지 지표들(구문 커버리지, 분기 커버리지 등)과 함께 사용되어야 하며, 이를 통해 더 완성도 높은 테스트를 수행할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>조건 커버리지를 계산하는 방법&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지를-계산하는-방법">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ea%b3%84%ec%82%b0%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isMember&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">purchaseAmount&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isMember&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">purchaseAmount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드에는 세 가지 개별 조건이 있다:&lt;/p>
&lt;ol>
&lt;li>age &amp;gt;= 60&lt;/li>
&lt;li>isMember&lt;/li>
&lt;li>purchaseAmount &amp;gt; 1000&lt;/li>
&lt;/ol>
&lt;p>완전한 조건 커버리지를 달성하기 위해서는, 각 조건이 독립적으로 참과 거짓을 모두 가져야 한다.&lt;br>
이를 위한 테스트 케이스를 설계해보면,&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testDiscountEligibility&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// age &amp;gt;= 60 조건 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// age: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// age: false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// isMember 조건 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// isMember: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// isMember: false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// purchaseAmount &amp;gt; 1000 조건 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// purchaseAmount: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">800&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// purchaseAmount: false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>조건 커버리지 = (테스트된 조건 결과의 수) / (전체 가능한 조건 결과의 수) × 100%
예시에서:
- 전체 조건 수: 3개
- 각 조건당 가능한 결과: 2개 (참/거짓)
- 전체 가능한 조건 결과의 수: 3 × 2 = 6
- 테스트된 조건 결과의 수: 6
따라서, 조건 커버리지 = (6/6) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>조건 커버리지의 한계&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지의-한계">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%ec%9d%98-%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isActive&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isActive&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드에서 각 조건을 독립적으로 테스트하더라도, 조건들의 모든 가능한 조합을 커버하지는 못할 수 있다.&lt;br>
예를 들어:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 조건 커버리지는 만족하지만, 모든 시나리오를 커버하지는 못하는 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testUserValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// username != null 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// password != null 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// isActive 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>조건 커버리지를 향상시키기 위한 실제적인 접근 방법&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지를-향상시키기-위한-실제적인-접근-방법">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ed%96%a5%ec%83%81%ec%8b%9c%ed%82%a4%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%8b%a4%ec%a0%9c%ec%a0%81%ec%9d%b8-%ec%a0%91%ea%b7%bc-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 자동화 도구 활용:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JaCoCo와 같은 테스트 커버리지 도구 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@CoverageTarget&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CoverageType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CONDITION&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">comprehensiveTest&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 테스트 케이스들&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>경계값 분석과 결합:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasParentalConsent&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">19&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasParentalConsent&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testAgeValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경계값과 조건 커버리지를 결합한 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경계값 미만&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 최소 경계값&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 중간값&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">19&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 최대 경계값&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경계값 초과&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 동의 없음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다음과 같은 조건문이 있다고 가정해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">코드&lt;/span> &lt;span class="n">실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>조건 커버리지를 만족시키기 위해서는 다음과 같은 테스트 케이스가 필요하다:&lt;/p>
&lt;ol>
&lt;li>a &amp;gt; 0 (참), b &amp;lt; 10 (참)&lt;/li>
&lt;li>a &amp;gt; 0 (참), b &amp;lt; 10 (거짓)&lt;/li>
&lt;li>a &amp;gt; 0 (거짓), b &amp;lt; 10 (참)&lt;/li>
&lt;li>a &amp;gt; 0 (거짓), b &amp;lt; 10 (거짓)&lt;/li>
&lt;/ol>
&lt;p>이렇게 각 개별 조건이 참과 거짓의 결과를 모두 가지도록 테스트 케이스를 구성한다.&lt;/p>
&lt;p>개별 조건식이 참/거짓을 모두 가지는 비율&lt;br>
예를 들어, (A &amp;amp;&amp;amp; B)라는 조건에서 A와 B 각각에 대해 true/false 케이스를 테스트한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">purchase_amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_discount_eligibility&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모든 조건 조합 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 미성년자&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 학생&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 성인, 비학생&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 구매액 부족&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Decision Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/decision-coverage/</link><pubDate>Tue, 10 Dec 2024 15:00:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/decision-coverage/</guid><description>
&lt;h2>결정 커버리지 (Decision Coverage)&lt;span class="hx-absolute -hx-mt-20" id="결정-커버리지-decision-coverage">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-decision-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>결정 커버리지는 프로그램의 모든 결정 포인트(조건문)에서 전체 조건식이 최소한 한 번씩 참(True)과 거짓(False)의 결과를 가지도록 테스트하는 방법이다.&lt;br>
이는 브랜치 커버리지(Branch Coverage)라고도 불린다.&lt;/p>
&lt;p>간단한 예제:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">LoanApproval&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">50000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">700&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드의 결정 커버리지를 100% 달성하기 위해서는 다음과 같은 테스트 케이스가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testLoanApproval&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApproval&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApproval&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 케이스 1: 두 조건 모두 true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 케이스 2: 첫 번째 조건 true, 두 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">650&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 케이스 3: 첫 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">40000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>결정 커버리지를 계산하는 방법&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>결정 커버리지 = (테스트된 결정 결과의 수) / (가능한 총 결정 결과의 수) × 100%
예를 들어, 위의 LoanApproval 예제에서:
- 총 결정 포인트: 2개 (income 체크, creditScore 체크)
- 각 결정당 가능한 결과: 2개 (true/false)
- 총 가능한 결정 결과의 수: 4
- 테스트된 결정 결과의 수: 4
따라서, 결정 커버리지 = (4/4) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주의해야 할 중요한 포인트&lt;span class="hx-absolute -hx-mt-20" id="주의해야-할-중요한-포인트">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a4%91%ec%9a%94%ed%95%9c-%ed%8f%ac%ec%9d%b8%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>중첩된 조건문의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이런 중첩된 조건문의 경우, 모든 가능한 경로를 테스트해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testUserValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 모든 조건 true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 조건 true, 두 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>복합 조건문의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isEligible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasLicense&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">18&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasLicense&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>복합 조건문의 경우, 전체 조건식의 결과가 true와 false가 되는 경우만 테스트하면 된다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testEligibility&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 전체 조건 true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 전체 조건 false (여러 케이스 중 하나만 있어도 됨)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전체 조건식 중심: 개별 조건이 아닌 전체 조건식의 결과에 초점을 맞춘다.&lt;/li>
&lt;li>최소 테스트 케이스: 개별 조건식의 수와 관계없이 최소 2개의 테스트 케이스로 충족이 가능하다.&lt;/li>
&lt;li>구문 커버리지 보장: 100% 결정 커버리지를 달성하면 100% 구문 커버리지도 자동으로 달성된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>구문 커버리지보다 강력: 더 철저한 테스트가 가능하다.&lt;/li>
&lt;li>분기 테스트: 모든 분기문을 테스트할 수 있다.&lt;/li>
&lt;li>예외 상황 발견: 구문 커버리지로는 발견하기 어려운 예외 상황을 찾아낼 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 조건문 처리: 여러 개의 조건이 결합된 복잡한 조건문의 경우, 모든 가능한 조합을 테스트하지 못할 수 있다.&lt;/li>
&lt;li>개별 조건 무시: 전체 조건식의 결과만을 고려하기 때문에 개별 조건의 영향을 세밀하게 테스트하지 못할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 조건문 식별: 프로그램 내의 모든 조건문(if, switch 등)을 식별한다.&lt;/li>
&lt;li>테스트 케이스 설계: 각 조건문이 참과 거짓 결과를 모두 가지도록 테스트 케이스를 설계한다.&lt;/li>
&lt;li>테스트 실행: 설계된 테스트 케이스를 실행하고 결과를 확인한다.&lt;/li>
&lt;li>커버리지 측정: 전체 조건문 중 테스트된 조건문의 비율을 계산한다.&lt;/li>
&lt;/ol>
&lt;p>결정 커버리지는 구조적 테스팅에서 중요한 역할을 하며, 특히 분기문이 많은 복잡한 로직을 테스트하는 데 효과적이다.&lt;br>
하지만 더 철저한 테스트를 위해서는 조건 커버리지나 MC/DC(Modified Condition/Decision Coverage)와 같은 더 높은 수준의 커버리지 기법과 함께 사용하는 것이 좋다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Statement Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/statement-coverage/</link><pubDate>Tue, 10 Dec 2024 15:00:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/statement-coverage/</guid><description>
&lt;h2>구문 커버리지 (Statement Coverage)&lt;span class="hx-absolute -hx-mt-20" id="구문-커버리지-statement-coverage">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-statement-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>구문 커버리지는 프로그램을 구성하는 모든 문장들이 최소한 한 번은 실행될 수 있는 입력 데이터를 테스트 데이터로 선정하는 기준이다.&lt;br>
또한 라인 커버리지(Line Coverage)라고도 불린다.&lt;/p>
&lt;p>먼저 간단한 예제를 통해 구문 커버리지의 이해:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">score&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">score&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;B&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;C&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">grade&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수의 모든 구문을 실행하기 위해서는 다음과 같은 테스트 케이스가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_grade&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1, 2, 5를 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">95&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1, 3, 5를 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">85&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;B&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1, 4, 5를 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">75&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;C&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>여기서 각 테스트 케이스가 실행하는 구문을 추적하면서 커버리지를 계산할 수 있다.&lt;br>
이 예제에서는 모든 구문(1-5)이 최소 한 번 이상 실행되므로 100% 구문 커버리지를 달성함.&lt;/p>
&lt;p>이제 더 복잡한 실제 예제를 통해 구문 커버리지의 중요성을 살펴보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">BankAccount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">frozen&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">frozen&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 6&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 7&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 8&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 은행 계좌 시스템의 모든 구문을 테스트하기 위한 테스트 케이스를 작성해보면:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testWithdraw&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">BankAccount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BankAccount&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 음수 금액 테스트 (구문 1, 2)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 계좌 동결 상태 테스트 (구문 1, 3, 4)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFrozen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">50&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 정상 출금 테스트 (구문 1, 3, 5, 6, 7)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFrozen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">deposit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">50&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 잔액 부족 테스트 (구문 1, 3, 5, 8)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>구문 커버리지의 계산 방법은 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>구문 커버리지 = (실행된 구문의 수) / (전체 구문의 수) × 100%
예를 들어, 위의 BankAccount 예제에서:
- 전체 구문 수: 8
- 실행된 구문 수: 8
따라서, 구문 커버리지 = (8/8) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>구문 커버리지를 측정할 때 주의해야 할 점점&lt;span class="hx-absolute -hx-mt-20" id="구문-커버리지를-측정할-때-주의해야-할-점점">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ec%b8%a1%ec%a0%95%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>예외 처리가 포함된 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">divideSafely&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numerator&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">denominator&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numerator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">denominator&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ArithmeticException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Division by zero&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 경우 정상 실행과 예외 발생 상황 모두를 테스트해야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>조건부 실행이 있는 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">performTransaction&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logDebugInfo&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>디버그 모드가 켜진 경우와 꺼진 경우 모두를 테스트해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>측정 방법&lt;span class="hx-absolute -hx-mt-20" id="측정-방법">&lt;/span>
&lt;a href="#%ec%b8%a1%ec%a0%95-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>구문 커버리지는 다음과 같은 공식으로 계산된다:&lt;/p>
&lt;p>&lt;code>구문 커버리지(%) = (실행된 구문의 수 / 전체 구문의 수) × 100&lt;/code>&lt;/p>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>코드의 모든 구문을 실행할 수 있는 입력값이나 이벤트 등의 테스트 데이터를 제공하면 달성된다.&lt;/li>
&lt;li>가장 기본적인 커버리지 측정 방법으로, 다른 커버리지 기법들에 비해 측정 강도가 가장 약하다.&lt;/li>
&lt;li>분기 커버리지, 다중 조건 커버리지, 경로 커버리지 등 포함관계가 더 큰 커버리지를 달성하면 저절로 달성된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>적은 개수의 테스트 데이터로 쉽게 달성할 수 있다.&lt;/li>
&lt;li>테스트 진행 정도를 코드의 범위 형태로 표현하기 때문에, 개발자가 커버리지의 의미를 직관적으로 이해할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>코드 상에 존재하는 가능한 경우 중 많은 부분을 검증하지 못하는 보장성이 낮은 커버리지이다.&lt;/li>
&lt;li>조건문의 모든 경우를 테스트하지 못할 수 있다. 예를 들어, if문의 조건이 참인 경우만 테스트되고 거짓인 경우는 테스트되지 않을 수 있다.&lt;/li>
&lt;/ol>
&lt;p>그래서 구문 커버리지는 보통 다른 커버리지 지표들(분기 커버리지, 조건 커버리지 등)과 함께 사용된다.&lt;br>
예를 들어, 다음과 같은 테스트 전략을 수립할 수 있다:&lt;/p>
&lt;ol>
&lt;li>기본적인 구문 커버리지로 시작하여 실행되지 않는 코드를 찾는다.&lt;/li>
&lt;li>분기 커버리지를 통해 조건문의 다양한 경로를 테스트한다.&lt;/li>
&lt;li>필요한 경우 더 높은 수준의 커버리지(조건, MC/DC 등)를 적용한다.&lt;br>
이러한 체계적인 접근을 통해 소프트웨어의 품질을 효과적으로 보장할 수 있다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>다중 조건 테스팅 (Branch Condition Combination Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/branch-condition-combination-testing/</link><pubDate>Tue, 10 Dec 2024 10:08:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/branch-condition-combination-testing/</guid><description>
&lt;h2>다중 조건 테스팅 (Branch Condition Combination Testing)&lt;span class="hx-absolute -hx-mt-20" id="다중-조건-테스팅-branch-condition-combination-testing">&lt;/span>
&lt;a href="#%eb%8b%a4%ec%a4%91-%ec%a1%b0%ea%b1%b4-%ed%85%8c%ec%8a%a4%ed%8c%85-branch-condition-combination-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>다중 조건 테스팅은 각 결정문에서 가능한 모든 조건 조합을 테스트하는 기법이다.&lt;br>
이는 조건 커버리지의 확장된 형태로, 가능한 모든 부울 조건 조합을 테스트하는 것을 목표로 한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>완전한 조건 조합&lt;/strong>: 결정문 내의 모든 개별 조건식에 대해 가능한 모든 true/false 조합을 테스트한다.&lt;/li>
&lt;li>&lt;strong>높은 커버리지&lt;/strong>: 100% 다중 조건 커버리지를 달성하면 결정 커버리지와 조건 커버리지도 100% 달성된다.&lt;/li>
&lt;li>&lt;strong>복잡한 로직 테스트&lt;/strong>: 여러 조건이 복합적으로 사용되는 복잡한 의사결정 구조를 철저히 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>철저한 테스트&lt;/strong>: 모든 가능한 조건 조합을 테스트하므로 누락된 경우의 수 없이 철저한 테스트가 가능하다.&lt;/li>
&lt;li>&lt;strong>숨겨진 버그 발견&lt;/strong>: 특정 조건 조합에서만 발생하는 오류를 찾아낼 수 있다.&lt;/li>
&lt;li>&lt;strong>로직 오류 검출&lt;/strong>: 복잡한 조건문의 로직 오류를 효과적으로 발견할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스트 케이스 증가&lt;/strong>: 조건의 수가 증가할수록 테스트 케이스의 수가 기하급수적으로 늘어난다.&lt;/li>
&lt;li>&lt;strong>시간과 비용&lt;/strong>: 많은 테스트 케이스로 인해 테스트 수행 시간과 비용이 증가한다.&lt;/li>
&lt;li>&lt;strong>복잡성&lt;/strong>: 조건이 많은 경우 모든 조합을 고려하는 것이 매우 복잡해질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다중 조건 테스팅은 다음과 같은 상황에서 특히 유용하다:&lt;/p>
&lt;ol>
&lt;li>안전 중요 시스템: 모든 가능한 시나리오를 철저히 테스트해야 하는 경우&lt;/li>
&lt;li>금융 시스템: 복잡한 조건에 따라 중요한 결정이 이루어지는 경우&lt;/li>
&lt;li>복잡한 비즈니스 로직: 여러 조건이 복합적으로 작용하는 경우&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다음과 같은 코드가 있다고 가정해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">purchase_amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">is_student&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mf">0.2&lt;/span> &lt;span class="c1"># 20% discount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mf">0.1&lt;/span> &lt;span class="c1"># 10% discount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># No discount&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수에 대한 다중 조건 테스트 케이스는 다음과 같이 구성될 수 있다:&lt;/p>
&lt;ol>
&lt;li>age &amp;lt; 18, is_student = True, purchase_amount &amp;gt; 100&lt;/li>
&lt;li>age &amp;lt; 18, is_student = True, purchase_amount &amp;lt;= 100&lt;/li>
&lt;li>age &amp;lt; 18, is_student = False, purchase_amount &amp;gt; 100&lt;/li>
&lt;li>age &amp;gt;= 18, age &amp;lt; 60, purchase_amount &amp;gt; 200&lt;/li>
&lt;li>age &amp;gt;= 18, age &amp;lt; 60, purchase_amount &amp;lt;= 200&lt;/li>
&lt;li>age &amp;gt;= 60, purchase_amount &amp;gt; 200&lt;/li>
&lt;li>age &amp;gt;= 60, purchase_amount &amp;lt;= 200&lt;/li>
&lt;/ol>
&lt;p>이렇게 모든 가능한 조건 조합을 테스트함으로써, 함수의 모든 경로와 로직을 철저히 검증할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Data Flow Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/data-flow-testing/</link><pubDate>Tue, 10 Dec 2024 10:07:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/data-flow-testing/</guid><description>
&lt;h2>데이터 흐름 테스팅 (Data Flow Testing)&lt;span class="hx-absolute -hx-mt-20" id="데이터-흐름-테스팅-data-flow-testing">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%9d%90%eb%a6%84-%ed%85%8c%ec%8a%a4%ed%8c%85-data-flow-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>데이터 흐름 테스팅은 프로그램에서 변수의 정의와 사용 위치에 초점을 맞춰 테스트 케이스를 설계하고 실행하는 기법이다.&lt;br>
이 방법은 데이터가 프로그램 내에서 어떻게 생성되고 전달되는지를 확인하는 데 중점을 둔다.&lt;/p>
&lt;p>데이터 흐름에서 발생할 수 있는 주요 활동들:&lt;/p>
&lt;ol>
&lt;li>정의(Definition): 변수에 값이 할당되는 지점&lt;/li>
&lt;li>사용(Use): 변수의 값이 읽히는 지점
&lt;ul>
&lt;li>계산용(Computational use): 다른 값을 계산하는데 사용&lt;/li>
&lt;li>조건용(Predicate use): 조건문에서 사용&lt;br>
예제 코드를 통한 데이터 흐름:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">base_price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 변수 정의(Definition)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 조건용 사용(Predicate use)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 변수 정의(Definition)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.05&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 계산용 사용(Computational use)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">final_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">base_price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">discount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">final_price&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드에서 &lt;code>discount&lt;/code> 변수의 데이터 흐름을 분석해보면:&lt;/p>
&lt;ol>
&lt;li>초기 정의: discount = 0&lt;/li>
&lt;li>조건에 따른 재정의: quantity에 따라 0.1 또는 0.05로 설정&lt;/li>
&lt;li>계산에서의 사용: final_price 계산에 사용&lt;/li>
&lt;/ol>
&lt;p>이러한 흐름을 테스트하기 위한 테스트 케이스를 설계:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_final_price&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 할인 없는 경우 테스트 (quantity &amp;lt;= 5)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 5% 할인 케이스 테스트 (5 &amp;lt; quantity &amp;lt;= 10)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">665&lt;/span> &lt;span class="c1"># 100 * 7 * 0.95&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 10% 할인 케이스 테스트 (quantity &amp;gt; 10)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1350&lt;/span> &lt;span class="c1"># 100 * 15 * 0.9&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>데이터 중심&lt;/strong>: 변수의 정의와 사용에 초점을 맞춘다.&lt;/li>
&lt;li>&lt;strong>제어 흐름 그래프 활용&lt;/strong>: 데이터 흐름 테스트는 제어 흐름 그래프에 데이터 사용 현황을 추가한 그래프를 통해 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>화이트박스 테스트&lt;/strong>: 프로그램의 내부 구조를 이해하고 있어야 수행할 수 있는 화이트박스 테스트 기법이다.&lt;/li>
&lt;/ol>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터가 정확히 생성, 전달, 변환되는지 확인&lt;/li>
&lt;li>데이터 손실이나 중복 발생 여부 확인&lt;/li>
&lt;li>데이터가 필요한 모듈에 정확한 값으로 전달되는지 검증&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터의 흐름을 추적하여 잠재적인 오류를 발견할 수 있다.&lt;/li>
&lt;li>데이터 관련 문제를 조기에 식별하여 예방할 수 있다.&lt;/li>
&lt;li>복잡한 데이터 처리 로직을 체계적으로 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터 경로가 복잡한 시스템에서는 모든 흐름을 추적하는 데 비용이 많이 들 수 있다.&lt;/li>
&lt;li>테스트 케이스 설계와 실행에 상당한 시간과 노력이 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 단계&lt;span class="hx-absolute -hx-mt-20" id="적용-단계">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>데이터 흐름 테스팅은 설계 단계(모델)와 구현 단계(코드) 모두에서 검증이 필요하다.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>모델 단계&lt;/strong>: 데이터의 전체 흐름을 설계하고 데이터 전달이 의도한 대로 이루어지는지 확인한다.&lt;/li>
&lt;li>&lt;strong>코드 단계&lt;/strong>: 실제 데이터가 모델 설계대로 이동하고, 필요한 데이터가 누락되거나 중복되지 않는지 확인한다.&lt;/li>
&lt;/ol>
&lt;p>데이터 흐름 테스팅은 소프트웨어의 데이터 처리 로직을 철저히 검증하여 데이터 관련 오류를 최소화하는 데 중요한 역할을 한다.&lt;br>
특히 데이터 중심적인 애플리케이션이나 복잡한 데이터 처리 로직을 가진 시스템에서 유용하게 활용될 수 있다.&lt;/p>
&lt;h3>데이터 흐름 테스팅에서 주의해야 할 주요 결함 패턴들&lt;span class="hx-absolute -hx-mt-20" id="데이터-흐름-테스팅에서-주의해야-할-주요-결함-패턴들">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%9d%90%eb%a6%84-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%97%90%ec%84%9c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a3%bc%ec%9a%94-%ea%b2%b0%ed%95%a8-%ed%8c%a8%ed%84%b4%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>정의-정의(DD) 이상: 사용되지 않고 재정의되는 경우&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="c1"># 첫 번째 정의가 사용되지 않음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>정의-사용(DU) 이상: 정의된 변수가 사용되지 않는 경우&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculate_value&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># result가 이후에 사용되지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>미정의-사용(UR) 이상: 정의되지 않은 변수를 사용하는 경우&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">limit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># limit 변수가 정의되지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">BankAccount&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">initial_balance&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">initial_balance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target_account&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 흐름: balance 정의 -&amp;gt; 사용 -&amp;gt; 재정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="n">amount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">target_account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">amount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">apply_interest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rate&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 흐름: balance 사용 -&amp;gt; 재정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">interest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">rate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">interest&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드의 데이터 흐름을 테스트하기 위한 테스트 시나리오는 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_bank_account_data_flow&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 초기 balance 정의 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">account1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BankAccount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">account2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BankAccount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># transfer 메서드에서의 데이터 흐름 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">account2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">700&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">800&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 불충분한 잔액 케이스 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">account2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># apply_interest 메서드에서의 데이터 흐름 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apply_interest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">770&lt;/span> &lt;span class="c1"># 700 + (700 * 0.1)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>데이터 흐름 테스팅을 효과적으로 수행하기 위한 전략은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>변수의 전체 생명주기 추적&lt;br>
- 변수가 언제 생성되고, 수정되며, 사용되는지 파악&lt;br>
- 각 단계에서의 값의 유효성 검증&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경계 조건 고려&lt;br>
- 변수가 초기화되지 않은 상태&lt;br>
- 최대/최소값 경계&lt;br>
- null 또는 undefined 상태&lt;/p>
&lt;/li>
&lt;li>
&lt;p>복잡한 데이터 구조 처리&lt;br>
- 객체의 속성 변경&lt;br>
- 컬렉션 요소의 수정&lt;br>
- 참조 전달과 값 전달의 차이&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>변경 조건/결정 커버리지 테스팅 (Modified Condition/Decision Coverage Testing, MC/DC)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/modified-condition-decision-coverage-testing/</link><pubDate>Tue, 10 Dec 2024 10:07:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/modified-condition-decision-coverage-testing/</guid><description>
&lt;h2>변경 조건/결정 커버리지 테스팅 (Modified Condition/Decision Coverage Testing, MC/DC)&lt;span class="hx-absolute -hx-mt-20" id="변경-조건결정-커버리지-테스팅-modified-conditiondecision-coverage-testing-mcdc">&lt;/span>
&lt;a href="#%eb%b3%80%ea%b2%bd-%ec%a1%b0%ea%b1%b4%ea%b2%b0%ec%a0%95-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-%ed%85%8c%ec%8a%a4%ed%8c%85-modified-conditiondecision-coverage-testing-mcdc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MC/DC는 결정문 내의 각 조건이 독립적으로 결정의 결과에 영향을 미치는지 확인하는 테스트 기법이다.&lt;br>
이는 조건 커버리지와 결정 커버리지를 확장한 개념으로, 복잡한 논리 표현식의 각 입력이 출력에 미치는 영향을 독립적으로 보여준다.&lt;/p>
&lt;p>먼저, MC/DC의 기본 개념을 이해하기 쉬운 예제를 통해 살펴보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">autopilotEngaged&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">altitude&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">airspeed&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">autopilotEngaged&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">altitude&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">airspeed&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드는 비행 조건을 검증하는 간단한 함수이다. 자동조종장치가 켜져 있고, 고도나 속도 중 하나가 적절한 경우에만 비행이 허용된다.&lt;br>
MC/DC에서는 각 조건이 독립적으로 전체 결과에 영향을 미치는 것을 검증해야 한다.&lt;/p>
&lt;p>MC/DC를 만족하기 위한 테스트 케이스를 설계해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testFlightValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// autopilotEngaged의 영향을 테스트 (다른 조건은 고정)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// autopilot이 true일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// autopilot이 false일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// altitude의 영향을 테스트 (autopilot = true로 고정)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// altitude가 true일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// altitude가 false일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// airspeed의 영향을 테스트 (autopilot = true, altitude = false로 고정)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// airspeed가 true일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// airspeed가 false일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 더 복잡한 예제를 통해 MC/DC의 중요성을 자세히 살펴보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MedicalAlertSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">highHeartRate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowBloodPressure&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">highTemperature&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowOxygenLevel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">highHeartRate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowBloodPressure&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">highTemperature&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowOxygenLevel&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 의료 경보 시스템에서 MC/DC를 만족하기 위한 테스트 케이스를 설계해보면:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testMedicalEmergencySystem&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">MedicalAlertSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MedicalAlertSystem&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 조건부 (highHeartRate &amp;amp;&amp;amp; lowBloodPressure) 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// highHeartRate의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// lowBloodPressure의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 두 번째 조건부 (highTemperature &amp;amp;&amp;amp; lowOxygenLevel) 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// highTemperature의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// lowOxygenLevel의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>MC/DC의 주요 요구사항&lt;span class="hx-absolute -hx-mt-20" id="mcdc의-주요-요구사항">&lt;/span>
&lt;a href="#mcdc%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 진입점과 출구점이 실행되어야 한다.&lt;/li>
&lt;li>모든 조건이 가능한 모든 결과를 가져야 한다.&lt;/li>
&lt;li>각 조건이 다른 조건과 독립적으로 전체 결정의 결과에 영향을 미쳐야 한다.&lt;/li>
&lt;li>각 결정이 가능한 모든 결과를 가져야 한다.&lt;/li>
&lt;/ol>
&lt;h3>실제 개발 현장에서 MC/DC를 적용할 때 주의해야 할 점&lt;span class="hx-absolute -hx-mt-20" id="실제-개발-현장에서-mcdc를-적용할-때-주의해야-할-점">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ea%b0%9c%eb%b0%9c-%ed%98%84%ec%9e%a5%ec%97%90%ec%84%9c-mcdc%eb%a5%bc-%ec%a0%81%ec%9a%a9%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>단축 평가(Short-circuit evaluation) 고려:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">checkSafety&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primarySystem&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backupSystem&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primarySystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">backupSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isPowerAvailable&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 경우, primarySystem이 true일 때는 나머지 조건이 평가되지 않는다는 점을 고려해야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>중첩된 조건의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateProcess&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">condition1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">condition2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>중첩된 조건에서는 각 조건의 독립적 영향을 더 신중하게 검증해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>각 조건의 독립적 영향 검증: 결정문 내의 모든 조건이 독립적으로 결과에 영향을 미치는지 확인한다.&lt;/li>
&lt;li>효율적인 테스트 케이스: n개의 조건에 대해 최소 n+1개의 테스트 케이스만으로 100% 커버리지를 달성할 수 있다[1].&lt;/li>
&lt;li>안전 중요 시스템에 적합: 항공, 자동차, 의료 기기 등 안전이 중요한 산업에서 널리 사용된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>높은 오류 검출 확률: 복잡한 조건문에서 발생할 수 있는 오류를 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>테스트 케이스 수 감소: 다중 조건 커버리지(MCC)에 비해 훨씬 적은 수의 테스트 케이스로 높은 커버리지를 달성할 수 있다.&lt;/li>
&lt;li>안전 중요 시스템의 신뢰성 향상: 철저한 테스트를 통해 소프트웨어의 신뢰성을 높일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 설계의 복잡성: 각 조건의 독립적 영향을 보여주는 테스트 케이스를 설계하는 것이 어려울 수 있다.&lt;/li>
&lt;li>시간과 비용: 완전한 MC/DC 달성을 위해서는 상당한 시간과 리소스가 필요하다.&lt;/li>
&lt;li>도구 지원의 필요성: 복잡한 조건에서 MC/DC 분석을 수행하기 위해서는 자동화된 도구의 지원이 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 결정문 식별: 프로그램 내의 복잡한 불리언 조건을 포함한 모든 결정문을 식별한다.&lt;/li>
&lt;li>테스트 케이스 설계: 각 조건이 독립적으로 결과에 영향을 미치도록 테스트 케이스를 설계한다.&lt;/li>
&lt;li>테스트 실행 및 분석: 설계된 테스트 케이스를 실행하고 결과를 분석하여 각 조건의 독립적 영향을 확인한다.&lt;/li>
&lt;li>커버리지 측정: MC/DC 기준에 따라 커버리지를 측정하고 필요한 경우 추가 테스트를 수행한다.&lt;/li>
&lt;/ol>
&lt;p>MC/DC는 복잡한 의사결정 구조를 철저히 테스트하여 숨겨진 결함을 찾아내는 데 효과적인 테스트 기법이다.&lt;br>
특히 안전이 중요한 시스템에서 소프트웨어의 신뢰성을 높이는 데 큰 도움이 된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>체크리스트 기반 테스팅 (Checklist-based Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/checklist-based-testing/</link><pubDate>Sun, 08 Dec 2024 08:09:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/checklist-based-testing/</guid><description>
&lt;h2>체크리스트 기반 테스팅 (Checklist-based Testing)&lt;span class="hx-absolute -hx-mt-20" id="체크리스트-기반-테스팅-checklist-based-testing">&lt;/span>
&lt;a href="#%ec%b2%b4%ed%81%ac%eb%a6%ac%ec%8a%a4%ed%8a%b8-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85-checklist-based-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Checklist-based Testing은 테스트 대상의 중요한 항목들을 체크리스트로 만들어 이를 기반으로 테스트를 수행하는 경험 기반 테스트 기법이다.&lt;br>
숙련된 테스터가 제품 검증을 위한 일련의 규칙이나 기준, 또는 참고/확인/기억해야 하는 상위수준 아이템 목록을 사용한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>구조화된 접근 방식: 테스트 과정에 체계적인 구조를 제공한다.&lt;/li>
&lt;li>일관성과 반복성: 모든 테스터가 동일한 단계를 따르고 동일한 항목을 확인하도록 보장한다.&lt;/li>
&lt;li>중요 항목 누락 방지: 체크리스트를 통해 중요한 테스트 항목을 놓치지 않도록 한다.&lt;/li>
&lt;li>경험 활용: 테스터의 경험과 지식을 체크리스트에 반영하여 활용한다.&lt;/li>
&lt;/ol>
&lt;h3>적용 분야&lt;span class="hx-absolute -hx-mt-20" id="적용-분야">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Checklist-based Testing은 다양한 테스트 유형에 적용될 수 있다:&lt;/p>
&lt;ul>
&lt;li>기능 테스팅&lt;/li>
&lt;li>비기능 테스팅&lt;/li>
&lt;li>사용자 인터페이스 테스팅&lt;/li>
&lt;li>보안 테스팅 (PCI, HIPAA 등)&lt;/li>
&lt;li>모바일 테스팅&lt;/li>
&lt;li>접근성 테스팅 등&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 프로세스의 표준화&lt;/li>
&lt;li>일관성 있는 테스트 수행 가능&lt;/li>
&lt;li>테스트 팀 간 커뮤니케이션 개선&lt;/li>
&lt;li>테스트 문서 작성 및 유지보수 시간 단축&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>체크리스트 작성과 유지보수에 시간 소요&lt;/li>
&lt;li>예상치 못한 오류 발견에 제한적일 수 있음&lt;/li>
&lt;li>테스터의 창의성을 제한할 수 있음&lt;/li>
&lt;/ol>
&lt;h3>수행 방법&lt;span class="hx-absolute -hx-mt-20" id="수행-방법">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>체크리스트 작성: 테스트 범위 식별, 테스트 케이스 개요 작성, 전제 조건 및 예상 결과 정의&lt;/li>
&lt;li>체크리스트 할당: 적절한 테스터 선택 및 요구사항 이해 확인&lt;/li>
&lt;li>테스트 실행: 체크리스트에 따라 체계적으로 테스트 수행 및 결과 기록&lt;/li>
&lt;li>결과 검토 및 분석: 반복적인 문제 식별 및 체크리스트 효과성 분석&lt;/li>
&lt;li>체크리스트 업데이트 및 유지보수: 소프트웨어 변경에 따른 지속적인 업데이트&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>로그인 기능에 대한 체크리스트는 다음과 같이 구성될 수 있다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">로그인 기능 테스트 체크리스트
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> 입력 필드 검증
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 이메일 형식이 올바른지 확인
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 비밀번호 최소/최대 길이 제한 확인
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 특수문자 처리가 올바른지 확인
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> 인증 프로세스
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 올바른 계정으로 로그인 성공
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 잘못된 비밀번호로 로그인 실패
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 존재하지 않는 계정으로 로그인 실패
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 비밀번호 5회 오류 시 계정 잠금
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">3.&lt;/span> 보안 요구사항
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 비밀번호가 암호화되어 전송
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> HTTPS 프로토콜 사용
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> SQL 인젝션 방지 처리
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">4.&lt;/span> 사용자 경험
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 오류 메시지가 명확하게 표시
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 로그인 상태 유지 기능 동작
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - [ ] 비밀번호 재설정 링크 제공&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>테스트 케이스 설계의 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_login_functionality&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;로그인 기능 테스트 케이스&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 입력 필드 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_email_validation&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">validate_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;user@example.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">validate_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;invalid-email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 인증 프로세스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_authentication&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;valid@user.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;correct_password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;valid@user.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wrong_password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 3. 보안 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_security&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_password_encrypted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;mypassword&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_using_https&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 4. 사용자 경험&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_experience&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">error_message_is_clear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">remember_me_works&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>체크리스트 기반 테스팅을 효과적으로 수행하기 위한 추천사항:&lt;/p>
&lt;ol>
&lt;li>프로젝트의 특성에 맞는 맞춤형 체크리스트를 작성하라.&lt;br>
일반적인 템플릿을 시작점으로 사용할 수 있지만, 프로젝트의 고유한 요구사항을 반영해야 한다.&lt;/li>
&lt;li>체크리스트를 계층적으로 구성하라.&lt;br>
상위 수준의 일반적인 항목에서 시작하여 세부적인 검증 항목으로 구체화하면 테스트의 구조화가 용이하다.&lt;/li>
&lt;li>자동화 가능한 항목은 자동화 테스트로 구현하라.&lt;br>
반복적인 검증 항목들은 자동화하여 테스트 효율성을 높일 수 있다.&lt;/li>
&lt;li>정기적인 리뷰와 업데이트를 수행하라.&lt;br>
새로운 기능이 추가되거나 기존 기능이 변경될 때마다 체크리스트를 검토하고 필요한 항목을 추가/수정한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>탐색적 테스팅(Exploratory Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/exploratory-testing/</link><pubDate>Sun, 08 Dec 2024 07:23:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/exploratory-testing/</guid><description>
&lt;h2>탐색적 테스팅(Exploratory Testing)&lt;span class="hx-absolute -hx-mt-20" id="탐색적-테스팅exploratory-testing">&lt;/span>
&lt;a href="#%ed%83%90%ec%83%89%ec%a0%81-%ed%85%8c%ec%8a%a4%ed%8c%85exploratory-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>탐색적 테스팅(Exploratory Testing)은 소프트웨어 테스팅의 한 접근 방식으로, 테스터의 창의성, 경험, 직관을 활용하여 소프트웨어를 자유롭게 탐색하며 결함을 발견하는 과정이다.
이 방법은 사전에 정의된 테스트 케이스에 의존하지 않고, 테스트 설계와 실행을 동시에 수행하는 특징이 있다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스터 중심&lt;/strong>: 테스터의 경험, 지식, 창의력을 최대한 활용한다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: 미리 정의된 테스트 케이스 없이도 즉시 테스트를 시작할 수 있다.&lt;/li>
&lt;li>&lt;strong>학습과 실행의 동시 진행&lt;/strong>: 소프트웨어를 사용하면서 동시에 새로운 테스트 시나리오를 생성한다.&lt;/li>
&lt;li>&lt;strong>발견 중심&lt;/strong>: 문서화보다는 결함 발견과 해결에 집중한다.&lt;/li>
&lt;/ol>
&lt;h3>핵심 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="핵심-구성-요소">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스트 차터&lt;/strong>: 테스트의 목적과 범위를 정의하는 간단한 문서.&lt;/li>
&lt;li>&lt;strong>시간 제한(Time Boxing)&lt;/strong>: 정해진 시간 동안 집중적으로 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>테스트 노트&lt;/strong>: 테스트 중 발견한 사항과 아이디어를 기록한다.&lt;/li>
&lt;li>&lt;strong>요약 보고(Debriefing)&lt;/strong>: 테스트 결과와 발견된 이슈를 팀과 공유한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>속도와 비용 효율성&lt;/strong>: 사전 준비가 적어 빠르게 테스트를 시작할 수 있다.&lt;/li>
&lt;li>&lt;strong>예상치 못한 버그 발견&lt;/strong>: 정형화된 테스트로는 찾기 어려운 버그를 발견할 수 있다.&lt;/li>
&lt;li>&lt;strong>사용성 개선&lt;/strong>: 사용자 관점에서 제품을 평가할 수 있다.&lt;/li>
&lt;li>&lt;strong>요구사항 변화에 대응&lt;/strong>: 애자일 개발 환경에 적합하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>주관성&lt;/strong>: 테스터의 개인 능력에 크게 의존한다.&lt;/li>
&lt;li>&lt;strong>테스트 범위 확인 어려움&lt;/strong>: 체계적인 계획이 없어 테스트 범위를 정확히 파악하기 어렵다.&lt;/li>
&lt;li>&lt;strong>관리와 통제의 어려움&lt;/strong>: 테스트의 양과 질을 관리하기 어려울 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 사례&lt;span class="hx-absolute -hx-mt-20" id="적용-사례">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>예를 들어, MP3 플레이어 앱을 테스트할 때 다음과 같은 탐색적 테스팅을 수행할 수 있다:&lt;/p>
&lt;ol>
&lt;li>음악 재생 중 전화가 왔을 때의 동작 확인&lt;/li>
&lt;li>백그라운드에서 음악 재생 시 다른 앱과의 상호작용 테스트&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>오류 예측 검사(Error Guessing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/error-guessing/</link><pubDate>Sun, 08 Dec 2024 00:13:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/error-guessing/</guid><description>
&lt;h2>오류 예측 검사(Error Guessing)&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사error-guessing">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%acerror-guessing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>오류 예측 검사(Error Guessing)는 블랙박스 테스트 기법 중 하나로, 테스터의 &lt;strong>경험, 지식, 직관&lt;/strong>을 활용하여 소프트웨어에서 발생할 가능성이 높은 오류를 예측하고 이를 기반으로 테스트 케이스를 설계하는 방법.&lt;br>
이 기법은 다른 테스트 기법으로는 발견하기 어려운 결함을 보완적으로 찾아내는 데 유용하다.&lt;/p>
&lt;h3>&lt;strong>오류 예측 검사의 특징&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-특징">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>경험 기반 접근&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>과거의 경험, 유사한 시스템에서 발견된 오류 유형, 그리고 직관을 활용하여 잠재적 오류를 예측한다.&lt;/li>
&lt;li>특정한 규칙이나 구조에 의존하지 않고 테스터의 전문성과 감각에 의존한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>보충적 검사 기법&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>명세 기반 테스트(예: 동치 분할, 경계값 분석)로 놓칠 수 있는 오류를 보완적으로 탐지한다.&lt;/li>
&lt;li>데이터 확인 검사라고도 불리며, 다른 기법과 함께 사용하여 테스트의 완성도를 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>유연성&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>정형화된 절차 없이 테스터의 판단에 따라 다양한 상황과 입력값을 테스트한다.&lt;/li>
&lt;li>예상치 못한 결함을 발견할 가능성을 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>일반적인 오류 예측 영역&lt;span class="hx-absolute -hx-mt-20" id="일반적인-오류-예측-영역">&lt;/span>
&lt;a href="#%ec%9d%bc%eb%b0%98%ec%a0%81%ec%9d%b8-%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ec%98%81%ec%97%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>입력 데이터 관련 오류:&lt;/p>
&lt;ul>
&lt;li>경계값 근처의 입력&lt;/li>
&lt;li>특수 문자가 포함된 데이터&lt;/li>
&lt;li>매우 큰 데이터 또는 작은 데이터&lt;/li>
&lt;li>한글, 이모지 등 유니코드 문자&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>처리 과정 관련 오류:&lt;/p>
&lt;ul>
&lt;li>동시 접근 상황&lt;/li>
&lt;li>메모리 부족 상황&lt;/li>
&lt;li>네트워크 지연 또는 단절&lt;/li>
&lt;li>데이터베이스 연결 실패&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인터페이스 관련 오류:&lt;/p>
&lt;ul>
&lt;li>브라우저 호환성 문제&lt;/li>
&lt;li>화면 크기 변경에 따른 레이아웃 깨짐&lt;/li>
&lt;li>다양한 디바이스에서의 동작 차이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>오류 예측의 주요 접근 방법&lt;span class="hx-absolute -hx-mt-20" id="오류-예측의-주요-접근-방법">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%a0%91%ea%b7%bc-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>시스템적 접근: 테스터는 먼저 시스템의 구조와 기능을 전체적으로 파악한다.&lt;br>
예를 들어, 웹 애플리케이션을 테스트할 때는 사용자 입력, 데이터 처리, 네트워크 통신 등 각 계층에서 발생할 수 있는 오류를 예측한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경험 기반 접근: 과거 프로젝트에서 발견된 유사한 오류 패턴을 활용한다. 특정 기능이나 모듈에서 자주 발생했던 문제들을 기반으로 테스트 케이스를 설계한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>효과적인 오류 예측을 위한 전략&lt;span class="hx-absolute -hx-mt-20" id="효과적인-오류-예측을-위한-전략">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>과거 경험 활용: 이전 프로젝트에서 발견된 오류들을 데이터베이스화하여 참조한다. 이는 마치 의료 분야에서 케이스 스터디를 활용하는 것과 비슷하다.&lt;/li>
&lt;li>스트레스 상황 고려: 시스템이 극한 상황에서 어떻게 동작할지 예측한다.&lt;br>
예를 들어:
&lt;ul>
&lt;li>대량의 사용자 동시 접속&lt;/li>
&lt;li>시스템 리소스 부족&lt;/li>
&lt;li>네트워크 불안정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 행동 패턴 분석: 실제 사용자들이 시스템을 어떻게 사용할지, 어떤 실수를 할 수 있을지 예측한다.&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>오류 예측 검사의 설계 방법&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-설계-방법">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%84%a4%ea%b3%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>잠재적 오류 식별&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>과거 유사 프로젝트에서 발생했던 일반적인 결함 유형을 검토한다.&lt;/li>
&lt;li>소프트웨어의 복잡한 부분이나 오류가 발생하기 쉬운 영역(예: 경계값, 예외 처리)을 중점적으로 분석한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 케이스 작성&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>예상되는 오류 상황에 맞는 입력값과 조건을 설정한다.&lt;/li>
&lt;li>정상적인 입력뿐 아니라 비정상적이거나 극단적인 입력값도 포함시킨다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 실행 및 평가&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>작성된 테스트 케이스를 실행하여 시스템이 예상대로 동작하지 않는 부분을 확인한다.&lt;/li>
&lt;li>발견된 결함을 기록하고 수정 과정을 거친다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>오류 예측 검사의 장점&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-장점">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>효율성&lt;/strong>: 테스터의 경험을 활용하여 빠르게 결함을 탐지할 수 있다.&lt;/li>
&lt;li>&lt;strong>보완적 역할&lt;/strong>: 다른 블랙박스 테스트 기법으로는 발견하기 어려운 오류를 찾아낼 수 있다.&lt;/li>
&lt;li>&lt;strong>적용 범위가 넓음&lt;/strong>: 다양한 소프트웨어 애플리케이션과 환경에 적용 가능하다.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>오류 예측 검사의 단점&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-단점">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>주관성 의존&lt;/strong>: 테스터의 경험과 능력에 크게 의존하므로 일관성이 부족할 수 있다.&lt;/li>
&lt;li>&lt;strong>체계적이지 않음&lt;/strong>: 정형화된 절차 없이 진행되기 때문에 모든 잠재적 결함을 포괄하지 못할 가능성이 있다.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>적용 사례&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="적용-사례">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>복잡한 시스템이나 새로운 소프트웨어 도메인에서 초기 결함 탐지&lt;/li>
&lt;li>경계값 분석이나 상태 전이 테스트 등 명세 기반 기법으로 놓친 결함 보완&lt;/li>
&lt;li>사용자 입력 데이터를 다양하게 변형하여 예상치 못한 오류 탐지&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Beta Test</title><link>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/acceptance-test/beta-test/</link><pubDate>Tue, 03 Dec 2024 06:54:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/acceptance-test/beta-test/</guid><description>
&lt;h2>Beta Test&lt;span class="hx-absolute -hx-mt-20" id="beta-test">&lt;/span>
&lt;a href="#beta-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>베타 테스트는 제품이 실제 출시되기 전 마지막 단계에서 진행되는 외부 사용자 대상 테스트이다.&lt;br>
실제 사용 환경에서 잠재적 고객들이 제품을 사용해보면서 문제점을 발견하고 피드백을 제공하는 과정이다.&lt;/p>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>베타 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>실제 사용 환경에서 테스트&lt;/li>
&lt;li>버그 및 사용성 문제 발견&lt;/li>
&lt;li>사용자 피드백 수집&lt;/li>
&lt;li>제품 출시 전 최종 개선 기회&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위와 검증 대상&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위와-검증-대상">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84%ec%99%80-%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>베타 테스트는 다음과 같은 측면을 검증한다:&lt;/p>
&lt;ol>
&lt;li>기능성: 모든 기능이 예상대로 작동하는지 확인&lt;/li>
&lt;li>사용성: 사용자 인터페이스의 직관성과 편의성 평가&lt;/li>
&lt;li>성능: 속도와 안정성 검증&lt;/li>
&lt;li>보안: 사용자 데이터 보호 확인&lt;/li>
&lt;/ol>
&lt;p>다음과 같은 예시로 이해해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 음악 스트리밍 앱 베타 테스트 체크리스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">beta_test_checklist&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 기능적 요소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">verify_music_playback_quality&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 음질, 끊김 현상&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">check_recommendation_accuracy&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 음악 추천 정확도&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_playlist_sharing&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 재생목록 공유 기능&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 사용성 요소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">evaluate_user_interface&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># UI 직관성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">measure_feature_discovery&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 기능 발견 용이성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 3. 기술적 요소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">monitor_battery_consumption&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 배터리 소모량&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">check_network_efficiency&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 데이터 사용량&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 4. 비즈니스 요소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">collect_pricing_feedback&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 가격 정책 반응&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analyze_user_engagement&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 사용자 참여도&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>베타 테스트는 알파 테스트 이후, 제품 출시 직전에 수행된다.&lt;/p>
&lt;h3>베타 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="베타-테스트의-종류">&lt;/span>
&lt;a href="#%eb%b2%a0%ed%83%80-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>공개 베타 테스트: 누구나 참여 가능한 테스트&lt;/li>
&lt;li>비공개 베타 테스트: 선별된 사용자만 참여하는 테스트&lt;/li>
&lt;li>기술적 베타 테스트: 복잡한 버그 발견을 위한 테스트&lt;/li>
&lt;li>집중 베타 테스트: 특정 기능에 초점을 맞춘 테스트&lt;/li>
&lt;li>마케팅 베타 테스트: 미디어 관심 유도를 위한 테스트&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>베타 테스트의 구체적인 진행 방식을 살펴보자.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>준비 단계&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>- 테스트 계획 수립
- 참가자 선정 기준 설정
- 피드백 수집 도구 준비
- 테스트 가이드라인 작성&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>실행 단계&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>- 베타 버전 배포
- 사용자 지원 채널 운영
- 실시간 모니터링
- 정기적인 설문 조사&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>분석 단계&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>- 수집된 데이터 분석
- 우선순위별 문제점 분류
- 개선 방안 도출
- 최종 보고서 작성&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>실제 베타 테스트 사례&lt;span class="hx-absolute -hx-mt-20" id="실제-베타-테스트-사례">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%eb%b2%a0%ed%83%80-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>배달 앱 베타 테스트 진행 예시:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 설계&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>기간: 1개월
참가자: 300명의 일반 사용자
지역: 서울 강남구 한정
테스트 항목: 주문 프로세스, 결제 시스템, 배달 추적&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>피드백 수집 방법&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>- 인앱 피드백 버튼
- 주간 설문조사
- 사용자 인터뷰 (20명 선별)
- 사용 데이터 자동 수집&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>주요 발견 사항 예시&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>- 결제 완료 후 주문 확인까지 시간이 너무 오래 걸림
- 배달 예상 시간이 실제보다 낮게 표시됨
- 특정 안드로이드 기기에서 지도 표시 오류&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;p>베타 테스트를 통해 발견된 이러한 문제점들은 정식 출시 전에 수정되어 더 나은 사용자 경험을 제공할 수 있게 된다.&lt;br>
특히 실제 사용자들의 다양한 사용 패턴과 환경에서 발생할 수 있는 문제점들을 미리 발견하고 해결할 수 있다는 점이 베타 테스트의 가장 큰 장점이다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Alpha Test</title><link>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/acceptance-test/alpha-test/</link><pubDate>Tue, 03 Dec 2024 06:53:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/acceptance-test/alpha-test/</guid><description>
&lt;h2>Alpha Test&lt;span class="hx-absolute -hx-mt-20" id="alpha-test">&lt;/span>
&lt;a href="#alpha-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>알파 테스트는 소프트웨어가 출시되기 전에 개발사 내부에서 진행하는 첫 번째 종합 테스트이다.&lt;br>
개발자, 테스터, 품질 관리팀 등 제품을 잘 이해하고 있는 내부 인력들이 실제 사용자처럼 제품을 사용해보면서 문제점을 찾아내는 과정이다.&lt;/p>
&lt;h3>알파 테스트의 특징&lt;span class="hx-absolute -hx-mt-20" id="알파-테스트의-특징">&lt;/span>
&lt;a href="#%ec%95%8c%ed%8c%8c-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 환경&lt;br>
개발사의 통제된 환경에서 진행된다.&lt;br>
예를 들어, 새로운 모바일 게임을 개발하는 회사에서는 사내 테스트 서버를 구축하고 직원들이 게임을 플레이해보는 방식으로 진행한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 참여자&lt;br>
제품 개발에 참여한 내부 인력들이 주도적으로 참여한다.&lt;br>
이들은 제품의 기능과 목적을 잘 이해하고 있어 효과적으로 문제점을 발견할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>알파 테스트의 목적&lt;span class="hx-absolute -hx-mt-20" id="알파-테스트의-목적">&lt;/span>
&lt;a href="#%ec%95%8c%ed%8c%8c-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>주요 결함 발견&lt;br>
예: 온라인 쇼핑몰 앱에서 결제 처리 중 발생할 수 있는 오류를 찾아내기&lt;/p>
&lt;/li>
&lt;li>
&lt;p>사용자 경험 개선&lt;br>
예: 내비게이션 앱의 경로 안내 음성이 너무 늦게 나오는 문제 발견하기&lt;/p>
&lt;/li>
&lt;li>
&lt;p>성능 검증&lt;br>
예: 실시간 채팅 애플리케이션에서 다수의 사용자가 동시에 접속했을 때 발생하는 지연 현상 확인하기&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위와 검증 대상&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위와-검증-대상">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84%ec%99%80-%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>알파 테스트는 소프트웨어의 다양한 측면을 검증한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>기능성&lt;/strong>: 모든 기능이 예상대로 작동하는지 확인한다.&lt;/li>
&lt;li>&lt;strong>사용성&lt;/strong>: 사용자 인터페이스가 직관적이고 사용하기 쉬운지 테스트한다.&lt;/li>
&lt;li>&lt;strong>성능&lt;/strong>: 소프트웨어의 속도와 반응성을 검증한다.&lt;/li>
&lt;li>&lt;strong>안정성&lt;/strong>: 예상치 못한 상황에서도 소프트웨어가 안정적으로 작동하는지 확인한다.&lt;/li>
&lt;/ol>
&lt;p>다음과 같은 예시로 이해해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 음악 스트리밍 앱 알파 테스트 시나리오 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">alpha_test_scenarios&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 기본 기능 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_user_registration&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_login_process&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_search_function&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 핵심 기능 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_music_playback&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_playlist_creation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_offline_mode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 3. 성능 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_concurrent_users&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_battery_consumption&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 4. 보안 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_payment_security&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_personal_data_protection&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>알파 테스트는 주요 개발이 완료된 후, 베타 테스트 전에 실시된다.&lt;br>
실제 프로젝트 타임라인으로 보면:&lt;/p>
&lt;ol>
&lt;li>개발 단계 완료&lt;/li>
&lt;li>단위 테스트 및 통합 테스트 완료&lt;/li>
&lt;li>알파 테스트 시작 (2-4주 소요)&lt;/li>
&lt;li>발견된 문제 수정&lt;/li>
&lt;li>베타 테스트 진행&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>알파 테스트에서는 다음과 같은 항목들을 중점적으로 검증한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>기능적 요소&lt;/p>
&lt;ul>
&lt;li>모든 기능이 명세서대로 작동하는지&lt;/li>
&lt;li>예외 상황 처리가 제대로 되는지&lt;br>
예시: 이메일 인증 시스템에서 잘못된 형식의 이메일 주소를 입력했을 때 적절한 오류 메시지가 표시되는지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>비기능적 요소&lt;/p>
&lt;ul>
&lt;li>성능이 요구사항을 충족하는지&lt;/li>
&lt;li>보안 취약점은 없는지&lt;br>
예시: 동영상 편집 앱에서 4K 영상을 편집할 때 처리 속도가 허용 범위 내인지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>알파 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="알파-테스트의-종류">&lt;/span>
&lt;a href="#%ec%95%8c%ed%8c%8c-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>폐쇄형 알파 테스트&lt;br>
개발팀 내부에서만 진행되는 테스트.&lt;br>
예: 새로운 회계 소프트웨어를 개발하는 회사에서 회계팀과 개발팀이 함께 진행하는 테스트&lt;/p>
&lt;/li>
&lt;li>
&lt;p>개방형 알파 테스트&lt;br>
내부 직원 전체를 대상으로 하는 테스트.&lt;br>
예: 사내 메신저 앱을 전 직원이 사용해보면서 피드백을 제공하는 테스트&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>실제 알파 테스트 진행 과정의 예시:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>테스트 기간: 3주
참여 인원: 개발팀 10명, QA팀 5명, 기획팀 3명
테스트 환경: 사내 테스트 서버
주요 테스트 항목: 핵심 기능, 성능, 보안&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>테스트 실행&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>1주차: 기본 기능 테스트
2주차: 성능 및 부하 테스트
3주차: 보안 및 안정성 테스트&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>결과 분석 및 수정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>발견된 버그: 32건
중요 수정사항: 12건
개선 제안사항: 8건&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;p>알파 테스트를 통해 발견된 문제점들은 즉시 개발팀에 전달되어 수정되며, 이는 베타 테스트 전에 제품의 품질을 한 단계 높이는 중요한 과정이 된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Fakes</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/fakes/</link><pubDate>Sun, 01 Dec 2024 21:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/fakes/</guid><description>
&lt;h2>Fakes&lt;span class="hx-absolute -hx-mt-20" id="fakes">&lt;/span>
&lt;a href="#fakes" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Fakes는 Test Double 기법 중 하나로, 실제 객체의 간단한 구현을 제공하는 테스트용 객체.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실제 구현체를 단순화하여 테스트 환경에서 사용한다.&lt;/li>
&lt;li>외부 의존성을 제거하고 테스트 속도를 향상시킨다.&lt;/li>
&lt;li>실제 객체와 유사한 동작을 제공하여 현실적인 테스트 환경을 구성한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 실행 속도가 빠르다.&lt;/li>
&lt;li>실제 구현체보다 구성이 간단하다.&lt;/li>
&lt;li>테스트 간 재사용이 용이하다.&lt;/li>
&lt;li>실제 객체와 유사한 동작으로 신뢰성 있는 테스트가 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실제 구현체와 동작이 완전히 일치하지 않을 수 있다.&lt;/li>
&lt;li>Fake 객체 구현에 추가적인 시간과 노력이 필요하다.&lt;/li>
&lt;li>Fake 객체 자체의 유지보수가 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Python&lt;span class="hx-absolute -hx-mt-20" id="python">&lt;/span>
&lt;a href="#python" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">RealDatabase&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 데이터베이스 연결 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">fetch_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 데이터 조회 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Real data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">FakeDatabase&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 연결 시뮬레이션&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">fetch_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 가짜 데이터 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Fake data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DataService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">database&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">database&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">database&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">get_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">database&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connect&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">database&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fetch_data&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fake_db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FakeDatabase&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">data_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fake_db&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_data&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">assert&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;Fake data&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>JavaScript&lt;span class="hx-absolute -hx-mt-20" id="javascript">&lt;/span>
&lt;a href="#javascript" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">RealDatabase&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">connect&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제 데이터베이스 연결 로직
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fetchData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제 데이터 조회 로직
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Real data&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">FakeDatabase&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">connect&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 연결 시뮬레이션
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fetchData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 가짜 데이터 반환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Fake data&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">DataService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">database&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">getData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fetchData&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">fakeDb&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FakeDatabase&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">dataService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">DataService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fakeDb&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">dataService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getData&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">assert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s2">&amp;#34;Fake data&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Dummy Objects</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/dummy-objects/</link><pubDate>Sun, 01 Dec 2024 21:15:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/dummy-objects/</guid><description>
&lt;h2>Dummy Objects&lt;span class="hx-absolute -hx-mt-20" id="dummy-objects">&lt;/span>
&lt;a href="#dummy-objects" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>테스트 과정에서 실제로는 사용되지 않지만 메서드의 파라미터를 채우기 위해 전달되는 객체&lt;/p>
&lt;p>Dummy Objects는 Test Double 기법 중 하나로, 테스트에 필요하지만 실제로 사용되지 않는 객체를 의미합니다.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 대상 코드의 인터페이스 요구사항을 충족시키기 위해 사용된다.&lt;/li>
&lt;li>테스트 실행을 위해 필요하지만 테스트 자체와는 관련이 없는 객체를 대체한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 코드를 단순화하고 가독성을 높인다.&lt;/li>
&lt;li>불필요한 객체 생성을 피해 테스트 성능을 향상시킨다.&lt;/li>
&lt;li>테스트 대상 코드를 외부 의존성으로부터 격리시킨다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실제 객체의 동작을 정확히 반영하지 않을 수 있다.&lt;/li>
&lt;li>과도한 사용 시 테스트의 현실성이 떨어질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Python&lt;span class="hx-absolute -hx-mt-20" id="python">&lt;/span>
&lt;a href="#python" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 실제 이메일 서비스 클래스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">EmailService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">smtp_server&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">smtp_server&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">smtp_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_notification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 이메일을 보내는 복잡한 로직이 있을 것입니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Sending email to &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 사용자 클래스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">User&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">notification_service&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">email&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">notification_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">notification_service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">notify_login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">notification_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_notification&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;New login detected for &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Dummy 객체&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DummyEmailService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">smtp_server&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span> &lt;span class="c1"># 아무것도 하지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_notification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span> &lt;span class="c1"># 아무것도 하지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_creation&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Dummy 이메일 서비스 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dummy_email_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DummyEmailService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로 테스트하고 싶은 것은 사용자 생성 로직입니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;john@example.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dummy_email_service&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;john@example.com&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>JavaScript&lt;span class="hx-absolute -hx-mt-20" id="javascript">&lt;/span>
&lt;a href="#javascript" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 실제 로깅 서비스 클래스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">LoggerService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">logLevel&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">logLevel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">logLevel&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제로는 로그를 저장하는 복잡한 로직이 있을 것입니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`[&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">logLevel&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">] &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 사용자 관리 클래스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">UserManager&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">logger&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">logger&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">addUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`User &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb"> added`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Dummy 로거
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">DummyLogger&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">logLevel&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 아무것도 저장하지 않음
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 아무것도 하지 않음
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트 코드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;UserManager&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should add a new user correctly&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Dummy 로거 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">dummyLogger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">DummyLogger&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userManager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">UserManager&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dummyLogger&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제로 테스트하고 싶은 것은 사용자 추가 로직입니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userCount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">userManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addUser&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;John&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userCount&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Spies</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/spies/</link><pubDate>Sun, 01 Dec 2024 21:15:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/spies/</guid><description>
&lt;h2>Spies&lt;span class="hx-absolute -hx-mt-20" id="spies">&lt;/span>
&lt;a href="#spies" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Spies는 Test Double 기법 중 하나로, 실제 객체의 메서드 호출을 추적하고 기록하는 데 사용된다.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>메서드 호출 여부, 횟수, 전달된 인자 등을 검증한다.&lt;/li>
&lt;li>실제 구현을 변경하지 않고 메서드의 동작을 관찰한다.&lt;/li>
&lt;li>코드의 상호작용을 분석하고 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>비침투적: 실제 객체의 동작을 변경하지 않고 관찰할 수 있다.&lt;/li>
&lt;li>유연성: 다양한 정보를 수집하고 검증할 수 있다.&lt;/li>
&lt;li>상세한 검증: 메서드 호출의 세부 사항을 정확히 확인할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성: 과도한 사용 시 테스트 코드가 복잡해질 수 있다.&lt;/li>
&lt;li>오버스펙: 구현 세부사항에 너무 의존적인 테스트를 작성할 위험이 있다.&lt;/li>
&lt;li>성능: 많은 spy를 사용할 경우 테스트 실행 속도가 느려질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>예시&lt;span class="hx-absolute -hx-mt-20" id="예시-1">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 실제 데이터베이스 리포지토리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">UserRepository&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">database_connection&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">db&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">database_connection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 데이터베이스에 SQL 쿼리를 실행할 것입니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;INSERT INTO users (id, data, created_at) VALUES (?, ?, ?)&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Dict&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 데이터베이스에서 조회할 것입니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">db&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;SELECT * FROM users WHERE id = ?&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fetchone&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Fake 리포지토리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">FakeUserRepository&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터베이스 대신 딕셔너리를 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메모리에 직접 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;created_at&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Dict&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메모리에서 직접 조회&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 사용자 서비스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">UserService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_repository&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">repository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user_repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;email&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">get_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">repository&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_service&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Fake 리포지토리 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fake_repository&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FakeUserRepository&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UserService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fake_repository&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 생성 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;user1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;john@example.com&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 조회 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;user1&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;email&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;john@example.com&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>JavaScript&lt;span class="hx-absolute -hx-mt-20" id="javascript">&lt;/span>
&lt;a href="#javascript" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 실제 외부 API 서비스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">WeatherService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">getTemperature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">city&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제로는 외부 API를 호출할 것입니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`https://api.weather.com/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">city&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">/temperature`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Fake 날씨 서비스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">FakeWeatherService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 미리 정의된 도시별 온도 데이터
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">temperatureData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Seoul&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">temperature&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">25&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;New York&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">temperature&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;London&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">temperature&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">15&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">getTemperature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">city&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제 API 호출 대신 저장된 데이터 반환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nb">Promise&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">temperatureData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">city&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">temperature&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 날씨 알림 서비스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">WeatherAlertService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">weatherService&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">weatherService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">weatherService&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">shouldSendAlert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">city&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">weatherService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getTemperature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">city&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">temperature&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트 코드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;WeatherAlertService&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">it&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should not send alert for normal temperature&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Fake 날씨 서비스 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">fakeWeatherService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FakeWeatherService&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">alertService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">WeatherAlertService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fakeWeatherService&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">shouldAlert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">alertService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">shouldSendAlert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Seoul&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">shouldAlert&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Test Double</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/</link><pubDate>Sun, 01 Dec 2024 21:15:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/</guid><description>
&lt;h2>Test Double&lt;span class="hx-absolute -hx-mt-20" id="test-double">&lt;/span>
&lt;a href="#test-double" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>소프트웨어 테스트에서 실제 객체를 대신하여 사용되는 테스트용 객체를 말합니다.&lt;br>
이것은 마치 영화에서 위험한 장면을 연기하는 스턴트 더블과 비슷한 개념이다.&lt;br>
실제 구현체를 사용하기 어렵거나 비용이 많이 드는 상황에서 테스트를 용이하게 만들어주는 중요한 기법.&lt;/p>
&lt;p>목적:&lt;/p>
&lt;ol>
&lt;li>테스트 대상 코드를 외부 요인으로부터 격리&lt;/li>
&lt;li>테스트 속도 개선&lt;/li>
&lt;li>예측 불가능한 요소 제거&lt;/li>
&lt;li>특정 상황 시뮬레이션&lt;/li>
&lt;li>감춰진 정보 획득&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>외부 의존성 제거로 인한 테스트의 안정성 향상&lt;/li>
&lt;li>테스트 실행 속도 개선&lt;/li>
&lt;li>특정 시나리오 테스트 용이성 증가&lt;/li>
&lt;li>아직 개발되지 않은 컴포넌트의 동작 시뮬레이션 가능&lt;/li>
&lt;/ol>
&lt;p>주의사항:&lt;/p>
&lt;ol>
&lt;li>실제 객체와의 차이로 인한 오류 가능성&lt;/li>
&lt;li>과도한 사용 시 테스트 코드의 복잡성 증가&lt;/li>
&lt;li>실제 환경과의 차이로 인한 테스트 신뢰성 저하 가능성&lt;/li>
&lt;/ol>
&lt;h3>테스트 더블의 종류&lt;span class="hx-absolute -hx-mt-20" id="테스트-더블의-종류">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%8d%94%eb%b8%94%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>테스트 더블은 주로 다음 5가지 유형으로 분류된다.&lt;/p>
&lt;h4>더미 객체(Dummy Objects)&lt;span class="hx-absolute -hx-mt-20" id="더미-객체dummy-objects">&lt;/span>
&lt;a href="#%eb%8d%94%eb%af%b8-%ea%b0%9d%ec%b2%b4dummy-objects" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>단순히 인스턴스화된 객체로, 기능은 필요하지 않을 때 사용된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">EmailService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 이메일을 보내는 복잡한 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 더미 객체&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DummyEmailService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 아무 동작도 하지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">User&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email_service&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">email_service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">welcome_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">email&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Welcome!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_creation&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dummy_email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DummyEmailService&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dummy_email&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 로직…&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>가짜 객체(Fake Objects)&lt;span class="hx-absolute -hx-mt-20" id="가짜-객체fake-objects">&lt;/span>
&lt;a href="#%ea%b0%80%ec%a7%9c-%ea%b0%9d%ec%b2%b4fake-objects" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>실제 구현을 단순화한 객체로, 주로 데이터 접근 계층을 대체할 때 사용된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">UserRepository&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 데이터베이스에 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터베이스에서 검색&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 가짜 객체&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">FakeUserRepository&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1"># 메모리 내 저장소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_repository&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FakeUserRepository&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">repo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_by_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>스텁(Stubs)&lt;span class="hx-absolute -hx-mt-20" id="스텁stubs">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%85%81stubs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>미리 정의된 응답을 제공하는 객체로, 특정 상태를 시뮬레이션할 때 사용된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">WeatherService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">get_temperature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">city&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 외부 API 호출&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 스텁&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">WeatherServiceStub&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">get_temperature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">city&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 항상 동일한 값 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">WeatherAlert&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">weather_service&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">weather_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">weather_service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">should_warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">city&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">weather_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_temperature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_weather_alert&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stub&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WeatherServiceStub&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">alert&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WeatherAlert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stub&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">alert&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">should_warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Seoul&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>스파이(Spies)&lt;span class="hx-absolute -hx-mt-20" id="스파이spies">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%8c%8c%ec%9d%b4spies" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>실제 객체의 기능을 유지하면서 추가적인 정보를 기록하는 객체.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">LoggerSpy&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last_message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log_count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last_message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">message&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">UserService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">logger&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">logger&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">create_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Creating user: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 생성 로직…&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_creation_logging&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logger_spy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoggerSpy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UserService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">logger_spy&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">logger_spy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log_count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">logger_spy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">last_message&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;Creating user: John&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>목(Mocks)&lt;span class="hx-absolute -hx-mt-20" id="목mocks">&lt;/span>
&lt;a href="#%eb%aa%a9mocks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>예상되는 호출과 그에 대한 응답을 미리 프로그래밍한 객체로, 행위 검증에 사용된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">unittest.mock&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Mock&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PaymentGateway&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 결제 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">payment_gateway&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payment_gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">payment_gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">place_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payment_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;Order placed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_order_placement&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">return_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">OrderService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mock_gateway&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">place_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메서드가 정확한 인자와 함께 호출되었는지 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assert_called_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;Order placed&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Test Dobule 기법의 비교&lt;span class="hx-absolute -hx-mt-20" id="test-dobule-기법의-비교">&lt;/span>
&lt;a href="#test-dobule-%ea%b8%b0%eb%b2%95%ec%9d%98-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Dummy Objects&lt;/th>
&lt;th>Stubs&lt;/th>
&lt;th>Fakes&lt;/th>
&lt;th>Spies&lt;/th>
&lt;th>Mocks&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>주요 목적&lt;/td>
&lt;td>파라미터 채우기&lt;/td>
&lt;td>미리 준비된 응답 제공&lt;/td>
&lt;td>실제 구현의 단순화&lt;/td>
&lt;td>호출 기록 및 검증&lt;/td>
&lt;td>예상 동작 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>아무 동작 없음&lt;/td>
&lt;td>하드코딩된 응답 반환&lt;/td>
&lt;td>실제와 유사하게 동작&lt;/td>
&lt;td>호출 정보 기록&lt;/td>
&lt;td>기대 동작 프로그래밍&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>매우 낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>행위 검증&lt;/td>
&lt;td>불가능&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>상세 가능&lt;/td>
&lt;td>매우 상세 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상태 검증&lt;/td>
&lt;td>불가능&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실제 로직 포함&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>최소한&lt;/td>
&lt;td>단순화된 형태&lt;/td>
&lt;td>선택적&lt;/td>
&lt;td>선택적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 사용 사례&lt;/td>
&lt;td>미사용 의존성&lt;/td>
&lt;td>간단한 입출력&lt;/td>
&lt;td>복잡한 의존성&lt;/td>
&lt;td>호출 추적 필요&lt;/td>
&lt;td>정확한 동작 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 난이도&lt;/td>
&lt;td>매우 쉬움&lt;/td>
&lt;td>쉬움&lt;/td>
&lt;td>보통&lt;/td>
&lt;td>어려움&lt;/td>
&lt;td>매우 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수 비용&lt;/td>
&lt;td>매우 낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 취약성&lt;/td>
&lt;td>매우 낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 기법의 세부적인 특징:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Dummy Objects:&lt;/p>
&lt;ul>
&lt;li>가장 단순한 형태의 Test Double&lt;/li>
&lt;li>실제로 사용되지 않는 파라미터를 위한 자리 표시자&lt;/li>
&lt;li>어떤 동작도 수행하지 않음&lt;/li>
&lt;li>실제 메서드가 호출되면 안 됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Stubs:&lt;/p>
&lt;ul>
&lt;li>미리 정의된 응답을 제공&lt;/li>
&lt;li>테스트 시나리오에 필요한 상태를 하드코딩&lt;/li>
&lt;li>단순한 조건부 동작 가능&lt;/li>
&lt;li>입력에 따른 다른 응답 제공 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Fakes:&lt;/p>
&lt;ul>
&lt;li>실제 구현의 단순화된 버전&lt;/li>
&lt;li>동작하는 구현을 포함&lt;/li>
&lt;li>실제 객체와 유사하게 동작&lt;/li>
&lt;li>메모리 내 구현으로 성능 향상&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Spies:&lt;/p>
&lt;ul>
&lt;li>메서드 호출을 기록하고 추적&lt;/li>
&lt;li>호출 횟수, 파라미터, 순서 등을 기록&lt;/li>
&lt;li>실제 구현과 함께 사용 가능&lt;/li>
&lt;li>상세한 호출 정보 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Mocks:&lt;/p>
&lt;ul>
&lt;li>가장 복잡하고 강력한 Test Double&lt;/li>
&lt;li>기대하는 동작을 미리 프로그래밍&lt;/li>
&lt;li>상호작용 검증에 중점&lt;/li>
&lt;li>매우 구체적인 행위 검증 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>선택 기준:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>단순한 의존성 처리만 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>Dummy Objects 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>특정 응답만 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>Stubs 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>복잡한 동작의 단순화가 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>Fakes 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>메서드 호출 추적이 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>Spies 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>정확한 상호작용 검증이 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>Mocks 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 기법들의 효과적인 사용을 위해서는 다음 사항들을 고려해야 한다:&lt;/p>
&lt;ol>
&lt;li>테스트의 목적과 범위&lt;/li>
&lt;li>구현의 복잡성&lt;/li>
&lt;li>유지보수 비용&lt;/li>
&lt;li>테스트 실행 속도&lt;/li>
&lt;li>테스트의 가독성과 이해도&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>부하 테스트(Load Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/load-testing/</link><pubDate>Sun, 01 Dec 2024 14:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/load-testing/</guid><description>
&lt;h2>부하 테스트(Load Testing)&lt;span class="hx-absolute -hx-mt-20" id="부하-테스트load-testing">&lt;/span>
&lt;a href="#%eb%b6%80%ed%95%98-%ed%85%8c%ec%8a%a4%ed%8a%b8load-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>부하 테스트는 소프트웨어 시스템이 예상되는 사용자 부하 하에서 어떻게 동작하는지 확인하는 성능 테스트의 한 유형이다.&lt;br>
이는 실제 사용 환경과 유사한 조건에서 시스템의 성능을 평가한다.&lt;/p>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>시스템의 최대 운영 용량 파악&lt;/li>
&lt;li>성능 병목 현상 식별&lt;/li>
&lt;li>확장성 및 안정성 검증&lt;/li>
&lt;li>사용자 경험 개선&lt;/li>
&lt;/ul>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>부하 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ul>
&lt;li>웹 애플리케이션&lt;/li>
&lt;li>데이터베이스 시스템&lt;/li>
&lt;li>네트워크 인프라&lt;/li>
&lt;li>서버 리소스 (CPU, 메모리, 디스크 I/O)&lt;/li>
&lt;/ul>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>부하 테스트는 주로 다음 시점에 수행된다:&lt;/p>
&lt;ul>
&lt;li>주요 릴리스 전&lt;/li>
&lt;li>시스템 업그레이드 후&lt;/li>
&lt;li>성능 최적화 과정 중&lt;/li>
&lt;/ul>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>응답 시간&lt;/li>
&lt;li>처리량 (Throughput)&lt;/li>
&lt;li>오류율&lt;/li>
&lt;li>리소스 사용률 (CPU, 메모리 등)&lt;/li>
&lt;/ul>
&lt;h3>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>점진적 부하 테스트&lt;br>
사용자 수를 점차 증가시키면서 시스템의 반응을 관찰한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">gradual_load_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;점진적 부하 증가 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">users&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">run_load_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 지표 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">response_time&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mf">3.0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error_rate&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;최적 사용자 수: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">users&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>지속적 부하 테스트&lt;br>
일정 수준의 부하를 장시간 유지하면서 시스템의 안정성을 검증한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sustained_load_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;지속적 부하 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 500명의 동시 사용자로 4시간 동안 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">60&lt;/span> &lt;span class="c1"># 4시간을 초로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metrics&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">run_extended_load_test&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duration&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">duration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 안정성 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">average_response_time&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">2.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error_rate&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memory_usage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_stable&lt;/span>&lt;span class="p">()&lt;/span> &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 목표 정의&lt;/li>
&lt;li>테스트 시나리오 작성&lt;/li>
&lt;li>테스트 환경 구축&lt;/li>
&lt;li>테스트 실행&lt;/li>
&lt;li>결과 분석 및 보고&lt;/li>
&lt;li>최적화 및 재테스트&lt;/li>
&lt;/ol>
&lt;h3>부하 테스트를 효과적으로 수행하기 위한 팁&lt;span class="hx-absolute -hx-mt-20" id="부하-테스트를-효과적으로-수행하기-위한-팁">&lt;/span>
&lt;a href="#%eb%b6%80%ed%95%98-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ed%8c%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실제 사용 패턴 반영 실제 사용자들의 행동 패턴을 최대한 유사하게 시뮬레이션한다.&lt;/li>
&lt;li>점진적 접근 갑작스러운 부하보다는 단계적으로 부하를 증가시킨다.&lt;/li>
&lt;li>충분한 모니터링 시스템의 모든 구성 요소를 지속적으로 모니터링한다.&lt;/li>
&lt;li>결과 분석과 최적화 테스트 결과를 바탕으로 시스템을 지속적으로 개선한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰을 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>목표 설정: 최대 10,000명의 동시 접속자 처리, 페이지 로드 시간 3초 이내&lt;/li>
&lt;li>시나리오: 상품 검색, 장바구니 추가, 결제 프로세스 수행&lt;/li>
&lt;li>도구 선택: Apache JMeter 사용&lt;/li>
&lt;li>테스트 실행: 가상 사용자 수를 점진적으로 증가시키며 1시간 동안 테스트&lt;/li>
&lt;li>결과 분석: 응답 시간, 서버 리소스 사용률, 오류율 확인&lt;/li>
&lt;li>최적화: 데이터베이스 쿼리 개선, 캐싱 전략 수립&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>스트레스 테스트 (Stress Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/stress-testing/</link><pubDate>Sun, 01 Dec 2024 14:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/performance-test/stress-testing/</guid><description>
&lt;h2>스트레스 테스트 (Stress Testing)&lt;span class="hx-absolute -hx-mt-20" id="스트레스-테스트-stress-testing">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%8a%b8%eb%a0%88%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8-stress-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>스트레스 테스트는 소프트웨어 시스템을 극한의 조건에서 테스트하여 그 한계를 파악하는 성능 테스트의 한 유형이다.&lt;br>
이는 시스템이 정상적인 운영 범위를 넘어선 상황에서 어떻게 동작하는지를 평가한다.&lt;/p>
&lt;p>웹 애플리케이션의 스트레스 테스트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">locust&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">HttpUser&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">between&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">StressTestUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HttpUser&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">wait_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">between&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 매우 짧은 대기 시간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@task&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">stress_test_scenario&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;극한 상황 시뮬레이션&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 대용량 데이터 요청&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/products&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">params&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;page_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">catch_response&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">elapsed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_seconds&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mf">5.0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">failure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;응답 시간 초과&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status_code&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">failure&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;에러 발생: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status_code&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 복구 능력 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 잠시 대기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 후속 요청으로 시스템 회복 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">recovery_response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/api/health&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">recovery_response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status_code&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">200&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스트레스 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>시스템 한계 파악: 시스템이 처리할 수 있는 최대 부하를 찾아낸다.&lt;/li>
&lt;li>안정성 평가: 극한 상황에서의 시스템 안정성을 확인한다.&lt;/li>
&lt;li>오류 처리 능력 검증: 과부하 상황에서 시스템의 오류 처리 능력을 테스트한다.&lt;/li>
&lt;li>복구 능력 평가: 시스템이 과부하 후 정상 상태로 돌아오는 능력을 확인한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스트레스 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>애플리케이션 서버&lt;/li>
&lt;li>데이터베이스 시스템&lt;/li>
&lt;li>네트워크 인프라&lt;/li>
&lt;li>하드웨어 리소스 (CPU, 메모리, 디스크 I/O)&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스트레스 테스트는 주로 다음 시점에 수행된다:&lt;/p>
&lt;ol>
&lt;li>시스템 개발의 후반부&lt;/li>
&lt;li>주요 업데이트나 변경 후&lt;/li>
&lt;li>실제 운영 환경에 배포하기 전&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>시스템 안정성&lt;/li>
&lt;li>오류 처리 메커니즘&lt;/li>
&lt;li>데이터 무결성&lt;/li>
&lt;li>복구 능력&lt;/li>
&lt;/ol>
&lt;h3>스트레스 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="스트레스-테스트의-종류">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%8a%b8%eb%a0%88%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>애플리케이션 스트레스 테스트: 애플리케이션 내의 데이터 잠금, 차단, 네트워크 문제 등을 테스트한다.&lt;/li>
&lt;li>트랜잭션 스트레스 테스트: 데이터베이스 트랜잭션의 극한 상황을 테스트한다.&lt;/li>
&lt;li>시스템 통합 스트레스 테스트: 전체 시스템의 통합된 환경에서의 스트레스 테스트를 수행한다.&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스트레스 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>테스트 계획 수립: 목표 설정, 시나리오 정의&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stress_test_plan&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;테스트_시나리오&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;데이터베이스 과부하&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;네트워크 대역폭 포화&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;CPU 극한 사용&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;메모리 한계 상황&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;측정_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;시스템 응답 시간&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;에러율&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구 시간&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;자원 사용률&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성공_기준&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;5분 이내&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;데이터_손실&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;없음&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;정상화_확인&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;필수&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">setup_monitoring&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스트레스 테스트 모니터링 설정&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 메트릭 모니터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">monitor_system_metrics&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;CPU_Usage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Memory_Usage&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Disk_IO&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Network_Traffic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 로그 모니터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setup_log_monitoring&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 알림 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">configure_alerts&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;CPU&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">95&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># CPU 사용률 95% 초과&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Memory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 메모리 사용률 90% 초과&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Error_Rate&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.1&lt;/span> &lt;span class="c1"># 에러율 10% 초과&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>테스트 환경 구축: 실제 환경과 유사한 테스트 환경 준비&lt;/li>
&lt;li>테스트 실행: 점진적으로 부하를 증가시키며 테스트 수행&lt;/li>
&lt;li>결과 분석: 시스템 동작, 오류 발생, 복구 능력 등을 분석&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">analyze_stress_test_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스트레스 테스트 결과 분석&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;시스템_한계점&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최대_동시_사용자&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">find_max_concurrent_users&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최대_처리량&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">find_max_throughput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;장애_발생_지점&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">find_failure_points&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성능_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;평균_응답시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_average_response_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;최대_응답시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">find_max_response_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;에러_발생률&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_error_rate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_능력&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;평균_복구시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_average_recovery_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;복구_성공률&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_recovery_success_rate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">results&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analysis&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="5">
&lt;li>보고서 작성: 발견된 문제점과 개선 방안 정리&lt;/li>
&lt;/ol>
&lt;h3>스트레스 테스트 수행 시 주요 고려사항&lt;span class="hx-absolute -hx-mt-20" id="스트레스-테스트-수행-시-주요-고려사항">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%8a%b8%eb%a0%88%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%88%98%ed%96%89-%ec%8b%9c-%ec%a3%bc%ec%9a%94-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>안전성 확보&lt;br>
테스트로 인한 실제 시스템 피해를 방지하기 위한 안전장치를 마련한다.&lt;/li>
&lt;li>단계적 접근&lt;br>
갑작스러운 극한 부하보다는 단계적으로 부하를 증가시킨다.&lt;/li>
&lt;li>복구 계획 준비&lt;br>
시스템 장애 발생 시 신속하게 복구할 수 있는 계획을 마련한다.&lt;/li>
&lt;li>상세한 모니터링&lt;br>
시스템의 모든 구성 요소를 면밀히 모니터링한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 애플리케이션의 스트레스 테스트를 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>목표 설정: 최대 100,000명의 동시 접속자 처리 능력 확인&lt;/li>
&lt;li>시나리오: 블랙프라이데이 세일 상황을 가정한 대규모 트래픽 유입&lt;/li>
&lt;li>테스트 실행: 가상 사용자 수를 점진적으로 증가시키며 시스템 반응 관찰&lt;/li>
&lt;li>결과 분석:
&lt;ul>
&lt;li>80,000명 이상에서 응답 시간 급격히 증가&lt;/li>
&lt;li>95,000명에서 데이터베이스 연결 오류 발생&lt;/li>
&lt;li>시스템 복구에 5분 소요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개선 방안: 데이터베이스 최적화, 서버 자원 증설, 로드 밸런싱 개선&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>회귀 테스트 (Regression Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/regression-test/</link><pubDate>Sat, 30 Nov 2024 14:28:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/regression-test/</guid><description>
&lt;h2>회귀 테스트 (Regression Test)&lt;span class="hx-absolute -hx-mt-20" id="회귀-테스트-regression-test">&lt;/span>
&lt;a href="#%ed%9a%8c%ea%b7%80-%ed%85%8c%ec%8a%a4%ed%8a%b8-regression-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>회귀 테스트는 소프트웨어의 변경이나 수정 후에 기존 기능이 여전히 올바르게 작동하는지 확인하는 테스트이다.&lt;/p>
&lt;p>온라인 쇼핑몰의 회귀 테스트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">unittest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">shopping_mall&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ShoppingCart&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">User&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ShoppingMallRegressionTest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unittest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TestCase&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">setUp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;테스트 준비: 필요한 객체들을 초기화합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ShoppingCart&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test_user&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Product&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;노트북&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_existing_cart_functionality&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;장바구니 기능 회귀 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 장바구니 할인 기능이 추가된 후에도 기존 장바구니 기능들이
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 정상적으로 작동하는지 확인합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 상품 추가 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assertEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 상품 제거 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove_item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assertEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 금액 계산 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assertEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2000000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_new_discount_feature&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;새로운 할인 기능 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 새로 추가된 할인 기능이 기존 가격 계산 로직을
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 망가뜨리지 않는지 확인합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기본 가격 계산&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_item&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">base_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 할인 적용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apply_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 10% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 할인된 가격 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expected_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">base_price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assertEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">expected_price&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 할인 제거 후 원래 가격으로 복원되는지 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove_discount&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assertEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">base_price&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>회귀 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>변경 영향 확인: 새로운 기능이나 수정사항이 기존 기능에 미치는 영향을 파악한다.&lt;/li>
&lt;li>버그 재발 방지: 이전에 수정된 버그가 다시 나타나지 않는지 확인한다.&lt;/li>
&lt;li>품질 유지: 소프트웨어의 전반적인 품질을 유지한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>회귀 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>수정된 코드&lt;/li>
&lt;li>수정과 관련된 기능&lt;/li>
&lt;li>핵심 기능&lt;/li>
&lt;li>자주 사용되는 기능&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>회귀 테스트는 주로 다음과 같은 시점에 수행된다:&lt;/p>
&lt;ol>
&lt;li>새로운 기능 추가 후&lt;/li>
&lt;li>버그 수정 후&lt;/li>
&lt;li>성능 개선 후&lt;/li>
&lt;li>환경 변경 시 (예: 운영체제 업데이트)&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>기존 기능의 정상 작동 여부&lt;/li>
&lt;li>새로운 기능과 기존 기능의 상호작용&lt;/li>
&lt;li>성능 및 안정성&lt;/li>
&lt;/ol>
&lt;h3>회귀 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="회귀-테스트의-종류">&lt;/span>
&lt;a href="#%ed%9a%8c%ea%b7%80-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전체 회귀 테스트: 모든 테스트 케이스를 다시 실행한다.&lt;/li>
&lt;li>부분 회귀 테스트: 변경된 부분과 관련된 테스트만 실행한다.&lt;/li>
&lt;li>선택적 회귀 테스트: 중요도에 따라 선별된 테스트를 실행한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">RegressionTestTypes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">retest_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;전체 재테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 모든 테스트 케이스를 다시 실행합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">all_tests&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_user_authentication&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_product_management&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_order_processing&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_payment_system&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">all_tests&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">selective_regression&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">modified_modules&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;선택적 회귀 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 변경된 모듈과 관련된 테스트만 실행합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_map&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;user&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_user_authentication&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;product&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_product_management&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;order&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_order_processing&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;payment&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">test_payment_system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">module&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">modified_modules&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">module&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_map&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">module&lt;/span>&lt;span class="p">]()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>회귀 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>테스트 케이스 선택: 변경 사항과 관련된 테스트 케이스를 선택한다.&lt;/li>
&lt;li>테스트 환경 준비: 테스트를 위한 환경을 설정한다.&lt;/li>
&lt;li>테스트 실행: 선택된 테스트 케이스를 실행한다.&lt;/li>
&lt;li>결과 분석: 테스트 결과를 분석하고 문제점을 식별한다.&lt;/li>
&lt;li>버그 수정 및 재테스트: 발견된 문제를 수정하고 다시 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>회귀 테스트를 효과적으로 수행하기 위한 중요한 고려사항들&lt;span class="hx-absolute -hx-mt-20" id="회귀-테스트를-효과적으로-수행하기-위한-중요한-고려사항들">&lt;/span>
&lt;a href="#%ed%9a%8c%ea%b7%80-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%a4%91%ec%9a%94%ed%95%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 선정 모든 테스트를 실행하는 것이 이상적이지만, 시간과 리소스의 제약이 있을 때는 중요도와 영향도를 고려하여 테스트 케이스를 선정해야 한다.&lt;/li>
&lt;li>자동화의 중요성 회귀 테스트는 반복적으로 수행되어야 하므로, 가능한 한 많은 테스트를 자동화하는 것이 효율적이다.&lt;/li>
&lt;li>테스트 결과의 추적 이전 테스트 결과와의 비교를 통해 성능 저하나 새로운 문제점을 발견할 수 있어야 한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 애플리케이션을 예로 들어보면:&lt;/p>
&lt;ol>
&lt;li>새로운 결제 방식(예: 암호화폐)을 추가했다고 가정해보자.&lt;/li>
&lt;li>회귀 테스트에서는 다음을 확인한다:
&lt;ul>
&lt;li>새로운 결제 방식이 제대로 작동하는지&lt;/li>
&lt;li>기존 결제 방식(신용카드, 계좌이체 등)이 여전히 정상 작동하는지&lt;/li>
&lt;li>주문 처리, 재고 관리 등 관련 기능에 문제가 없는지&lt;/li>
&lt;li>전체 시스템의 성능이 저하되지 않았는지&lt;br>
이러한 회귀 테스트를 통해 새로운 기능 추가로 인한 예상치 못한 문제를 사전에 발견하고 수정할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>사용성 테스트 (Usability Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/usability-test/</link><pubDate>Sat, 30 Nov 2024 14:25:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/usability-test/</guid><description>
&lt;h2>사용성 테스트 (Usability Test)&lt;span class="hx-absolute -hx-mt-20" id="사용성-테스트-usability-test">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8-usability-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>사용성 테스트는 제품이나 서비스를 실제 사용자가 사용해보면서 그 과정을 관찰하고 분석하는 테스트 방법이다.&lt;br>
이는 사용자가 제품을 얼마나 쉽고 효율적으로 사용할 수 있는지를 평가한다.&lt;/p>
&lt;p>모바일 앱의 사용성 테스트 시나리오:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">run_shopping_app_test&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;쇼핑앱 사용성 테스트 시나리오&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UsabilityTest&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 작업 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_task&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;상품검색&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;원하는 상품을 검색하고 찾기&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;3번 이내의 클릭으로 원하는 상품 도달&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_task&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;장바구니추가&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;상품을 장바구니에 추가하기&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;오류 없이 상품을 장바구니에 추가&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_task&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;결제진행&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;장바구니에서 결제 완료까지&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;5분 이내 결제 완료&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 참가자의 수행 결과 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">record_task_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;user1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;상품검색&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;time&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">45&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 초 단위&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;errors&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;satisfaction&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="c1"># 5점 만점&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">analyze_results&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>사용성 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>사용자 중심: 실제 사용자의 경험을 바탕으로 평가한다.&lt;/li>
&lt;li>문제점 발견: 사용자가 겪는 어려움이나 혼란을 식별한다.&lt;/li>
&lt;li>개선 방향 제시: 발견된 문제점을 바탕으로 개선 방안을 도출한다.&lt;/li>
&lt;li>사용자 만족도 향상: 최종적으로 제품의 사용성을 개선하여 사용자 만족도를 높인다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>사용성 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>사용자 인터페이스 (UI)&lt;/li>
&lt;li>사용자 경험 (UX)&lt;/li>
&lt;li>기능의 접근성&lt;/li>
&lt;li>정보 구조&lt;/li>
&lt;li>내비게이션 시스템&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>사용성 테스트는 제품 개발 주기의 여러 단계에서 수행될 수 있다:&lt;/p>
&lt;ol>
&lt;li>초기 설계 단계: 프로토타입이나 와이어프레임을 이용한 테스트&lt;/li>
&lt;li>개발 중간 단계: 기능이 구현된 베타 버전을 이용한 테스트&lt;/li>
&lt;li>출시 전 단계: 최종 제품에 대한 테스트&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>효과성: 사용자가 원하는 목표를 달성할 수 있는가?&lt;/li>
&lt;li>효율성: 목표 달성에 필요한 시간과 노력이 적절한가?&lt;/li>
&lt;li>만족도: 사용자가 제품 사용에 만족하는가?&lt;/li>
&lt;li>학습 용이성: 제품 사용법을 쉽게 배울 수 있는가?&lt;/li>
&lt;li>오류 방지성: 사용자의 실수를 예방하고 복구할 수 있는가?&lt;/li>
&lt;/ol>
&lt;h4>사용성 테스트의 주요 평가 항목&lt;span class="hx-absolute -hx-mt-20" id="사용성-테스트의-주요-평가-항목">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8f%89%ea%b0%80-%ed%95%ad%eb%aa%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>학습 용이성&lt;br>
첫 사용자가 얼마나 쉽게 기본 기능을 익힐 수 있는지 평가한다.&lt;/li>
&lt;li>효율성&lt;br>
숙련된 사용자가 얼마나 빠르게 작업을 완료할 수 있는지 측정한다.&lt;/li>
&lt;li>기억 용이성&lt;br>
일정 기간 사용하지 않은 후에도 쉽게 사용법을 기억할 수 있는지 확인한다.&lt;/li>
&lt;li>오류&lt;br>
사용자가 얼마나 자주 실수를 하는지, 그리고 얼마나 쉽게 실수를 복구할 수 있는지 평가한다.&lt;/li>
&lt;/ol>
&lt;h3>사용성 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="사용성-테스트의-종류">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>탐색적 테스트: 초기 설계 단계에서 전반적인 사용성 평가&lt;/li>
&lt;li>평가 테스트: 특정 기능이나 태스크에 대한 상세 평가&lt;/li>
&lt;li>비교 테스트: 두 가지 이상의 디자인이나 제품을 비교 평가&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>사용성 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립: 목표 설정, 참가자 선정, 태스크 설계&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">usability_test_plan&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;목표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;주요_목표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;새로운 사용자 인터페이스의 사용성 평가&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;세부_목표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;주요 기능의 발견 가능성 평가&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;작업 완료 시간 측정&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;사용자 만족도 조사&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;참가자&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;인원&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;프로필&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;20-40대 스마트폰 사용자&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;테스트_항목&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;회원가입 프로세스&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;상품 검색 및 필터링&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;장바구니 관리&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;결제 프로세스&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>테스트 환경 준비: 테스트 장소 및 필요 장비 준비&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 실행: 참가자가 태스크를 수행하는 동안 관찰 및 데이터 수집&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">conduct_usability_testing&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;사용성 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 환경 준비&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">setup_test_environment&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 참가자별 테스트 진행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">participant&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">participants&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사전 설문&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pre_test_survey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">participant&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 태스크 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">task&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_tasks&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">task_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">perform_task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">participant&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">task&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">record_metrics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task_result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사후 인터뷰&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">post_test_interview&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">participant&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>결과 분석: 수집된 데이터를 분석하여 문제점 식별&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">analyze_usability_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;사용성 테스트 결과 분석&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;정량적_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;평균_작업_완료_시간&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_avg_completion_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성공률&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_success_rate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;오류율&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">calculate_error_rate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;정성적_지표&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;주요_불편사항&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_pain_points&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;사용자_제안사항&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">collect_user_suggestions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;긍정적_피드백&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">collect_positive_feedback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;개선_권장사항&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">generate_recommendations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analysis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">```&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">5.&lt;/span> &lt;span class="n">보고서&lt;/span> &lt;span class="n">작성&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">발견된&lt;/span> &lt;span class="n">문제점과&lt;/span> &lt;span class="n">개선&lt;/span> &lt;span class="n">방안을&lt;/span> &lt;span class="n">정리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 사용성 테스트를 성공적으로 수행하기 위한 핵심 고려사항들&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">1.&lt;/span> &lt;span class="n">적절한&lt;/span> &lt;span class="n">참가자&lt;/span> &lt;span class="n">선정&lt;/span> &lt;span class="n">실제&lt;/span> &lt;span class="n">사용자층을&lt;/span> &lt;span class="n">대표할&lt;/span> &lt;span class="n">수&lt;/span> &lt;span class="n">있는&lt;/span> &lt;span class="n">참가자들을&lt;/span> &lt;span class="n">선정해야&lt;/span> &lt;span class="n">한다&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">2.&lt;/span> &lt;span class="n">현실적인&lt;/span> &lt;span class="n">테스트&lt;/span> &lt;span class="n">환경&lt;/span> &lt;span class="n">가능한&lt;/span> &lt;span class="n">한&lt;/span> &lt;span class="n">실제&lt;/span> &lt;span class="n">사용&lt;/span> &lt;span class="n">환경과&lt;/span> &lt;span class="n">유사한&lt;/span> &lt;span class="n">조건에서&lt;/span> &lt;span class="n">테스트를&lt;/span> &lt;span class="n">진행한다&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">3.&lt;/span> &lt;span class="n">객관적인&lt;/span> &lt;span class="n">관찰&lt;/span> &lt;span class="n">테스트&lt;/span> &lt;span class="n">진행자는&lt;/span> &lt;span class="n">중립적인&lt;/span> &lt;span class="n">태도를&lt;/span> &lt;span class="n">유지하며&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">참가자의&lt;/span> &lt;span class="n">행동을&lt;/span> &lt;span class="n">있는&lt;/span> &lt;span class="n">그대로&lt;/span> &lt;span class="n">관찰해야&lt;/span> &lt;span class="n">한다&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">4.&lt;/span> &lt;span class="n">상세한&lt;/span> &lt;span class="n">기록&lt;/span> &lt;span class="n">참가자의&lt;/span> &lt;span class="n">모든&lt;/span> &lt;span class="n">행동&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">발언&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">표정&lt;/span> &lt;span class="n">등을&lt;/span> &lt;span class="n">꼼꼼히&lt;/span> &lt;span class="n">기록한다&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">### 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">온라인&lt;/span> &lt;span class="n">쇼핑몰&lt;/span> &lt;span class="n">앱의&lt;/span> &lt;span class="n">사용성&lt;/span> &lt;span class="n">테스트를&lt;/span> &lt;span class="n">예로&lt;/span> &lt;span class="n">들어보자&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">1.&lt;/span> &lt;span class="n">태스크&lt;/span> &lt;span class="n">설계&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;원하는 상품을 검색하고 장바구니에 담은 후 결제하기&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">2.&lt;/span> &lt;span class="n">관찰&lt;/span> &lt;span class="n">포인트&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">상품&lt;/span> &lt;span class="n">검색에&lt;/span> &lt;span class="n">걸리는&lt;/span> &lt;span class="n">시간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">장바구니&lt;/span> &lt;span class="n">추가&lt;/span> &lt;span class="n">버튼을&lt;/span> &lt;span class="n">쉽게&lt;/span> &lt;span class="n">찾는지&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">결제&lt;/span> &lt;span class="n">과정에서&lt;/span> &lt;span class="n">혼란을&lt;/span> &lt;span class="n">겪는&lt;/span> &lt;span class="n">부분이&lt;/span> &lt;span class="n">있는지&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">3.&lt;/span> &lt;span class="n">데이터&lt;/span> &lt;span class="n">수집&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">태스크&lt;/span> &lt;span class="n">완료&lt;/span> &lt;span class="n">시간&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">오류&lt;/span> &lt;span class="n">횟수&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">사용자&lt;/span> &lt;span class="n">표정과&lt;/span> &lt;span class="n">반응&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">4.&lt;/span> &lt;span class="n">결과&lt;/span> &lt;span class="n">분석&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">예를&lt;/span> &lt;span class="n">들어&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;80%의 사용자가 결제 버튼을 찾는 데 어려움을 겪음&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">5.&lt;/span> &lt;span class="n">개선&lt;/span> &lt;span class="n">방안&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;결제 버튼의 위치와 디자인을 더 눈에 띄게 변경&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">---&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 참고 및 출처&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Stubs</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/stubs/</link><pubDate>Sat, 30 Nov 2024 09:29:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/stubs/</guid><description>
&lt;h2>Stubs&lt;span class="hx-absolute -hx-mt-20" id="stubs">&lt;/span>
&lt;a href="#stubs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Stubbing은 테스트에서 사용되는 기법으로, 실제 객체나 아직 구현되지 않은 코드를 대신하여 미리 정의된 응답을 제공하는 메커니즘&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>의존성 격리: 실제 구현체로부터 테스트 대상을 분리하여 독립적인 테스트를 가능하게 합니다.&lt;/li>
&lt;li>특정 시나리오 테스트: 다양한 상황에 대한 테스트를 용이하게 합니다.&lt;/li>
&lt;li>미구현 코드 대체: 아직 개발되지 않은 부분을 임시로 대체할 수 있습니다.&lt;/li>
&lt;li>테스트 속도 향상: 실제 리소스 접근 없이 빠른 테스트가 가능합니다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>미리 정의된 응답(canned answer)을 제공합니다.&lt;/li>
&lt;li>실제 코드의 동작을 단순화하여 모사합니다.&lt;/li>
&lt;li>주로 상태 테스팅에 중점을 둡니다.&lt;/li>
&lt;li>메서드 호출의 결과만 정의하며, 호출 여부는 검증하지 않습니다.&lt;/li>
&lt;/ul>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>구현되지 않은 함수나 외부 라이브러리 함수를 사용할 때&lt;/li>
&lt;li>복잡한 로직을 단순화하여 테스트하고자 할 때&lt;/li>
&lt;li>특정 조건에서의 예외 상황을 테스트할 때&lt;/li>
&lt;li>외부 의존성(예: 데이터베이스, 네트워크 요청)을 가진 코드를 테스트할 때&lt;/li>
&lt;/ul>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Python&lt;span class="hx-absolute -hx-mt-20" id="python">&lt;/span>
&lt;a href="#python" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">unittest.mock&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">patch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pytest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트할 실제 클래스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PaymentService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">payment_gateway&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payment_gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">payment_gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">amount&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Amount must be positive&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payment_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 외부 결제 게이트웨이 클래스 (실제로는 외부 서비스)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PaymentGateway&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">charge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 외부 API를 호출하는 복잡한 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Stub 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PaymentGatewayStub&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">charge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 항상 성공 응답을 반환하는 단순한 구현&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;timestamp&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_payment_service_with_stub&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Stub 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">gateway_stub&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PaymentGatewayStub&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">payment_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PaymentService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">gateway_stub&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">payment_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript&lt;span class="hx-absolute -hx-mt-20" id="javascript">&lt;/span>
&lt;a href="#javascript" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Jest를 사용한 테스트 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">jest&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@jest/globals&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트할 실제 클래스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">UserService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">database&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">getUserById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">updateUserEmail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newEmail&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">newEmail&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Stub 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">DatabaseStub&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Map&lt;/span>&lt;span class="p">([&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;john@example.com&amp;#39;&lt;/span> &lt;span class="p">}],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Jane Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;jane@example.com&amp;#39;&lt;/span> &lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">findUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">updateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">userData&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">userData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">userData&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트 코드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;UserService&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Stub을 사용한 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;with stub&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">dbStub&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">DatabaseStub&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">UserService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dbStub&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should return user when exists&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">userService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should throw error when user not found&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">999&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">rejects&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">toThrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Mocks</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/mocks/</link><pubDate>Sat, 30 Nov 2024 06:14:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-mgmt/test-double/mocks/</guid><description>
&lt;h2>Mocks&lt;span class="hx-absolute -hx-mt-20" id="mocks">&lt;/span>
&lt;a href="#mocks" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>소프트웨어 테스트에서 사용되는 중요한 기법으로, 실제 객체를 모방하는 가짜 객체를 만들어 테스트하는 방법&lt;/p>
&lt;p>Mocking은 테스트하고자 하는 코드가 의존하는 부분을 가짜(mock)로 대체하는 기법으로, 단위 테스트를 작성할 때 특히 유용하다.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>외부 의존성 제어: 실제 외부 리소스에 의존하지 않고 테스트를 수행할 수 있게 합니다.&lt;/li>
&lt;li>특정 시나리오 테스트: 예외 상황이나 복잡한 시나리오를 쉽게 재현할 수 있습니다.&lt;/li>
&lt;li>테스트 속도 향상: 실제 리소스 접근 시간을 절약하여 테스트 실행 속도를 높입니다.&lt;/li>
&lt;li>독립적인 테스트: 다른 컴포넌트의 구현 여부와 관계없이 테스트를 진행할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>빠른 테스트 속도: 외부 리소스 접근 시간을 절약합니다.&lt;/li>
&lt;li>예외 시나리오 테스트 용이성: 특정 상황에서의 예외 처리를 쉽게 테스트할 수 있습니다.&lt;/li>
&lt;li>외부 리소스 접근 회피: 실제 환경에 의존하지 않고 테스트할 수 있습니다.&lt;/li>
&lt;li>복잡한 시나리오 테스트: 다양한 상태를 쉽게 재현할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>잠재적 부작용: 모킹된 동작과 실제 코드의 동작이 다를 수 있습니다.&lt;/li>
&lt;li>모킹 오버헤드: 모킹 코드 작성과 설정에 추가 작업이 필요합니다.&lt;/li>
&lt;li>모킹의 복잡성: 잘못된 모킹 설정은 테스트의 신뢰성을 떨어뜨릴 수 있습니다.&lt;/li>
&lt;li>테스트의 일관성 문제: 모킹을 남용하면 테스트 코드와 실제 코드 간의 일관성이 떨어질 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Python&lt;span class="hx-absolute -hx-mt-20" id="python">&lt;/span>
&lt;a href="#python" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">unittest.mock&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">patch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pytest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트할 실제 클래스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PaymentService&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">payment_gateway&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payment_gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">payment_gateway&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">amount&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Amount must be positive&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payment_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 외부 결제 게이트웨이 클래스 (실제로는 외부 서비스)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PaymentGateway&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">charge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제로는 외부 API를 호출하는 복잡한 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_payment_service_with_mock&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Mock 객체 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Mock 동작 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">return_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">payment_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PaymentService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mock_gateway&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">payment_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assert_called_once_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Mock을 사용한 다양한 시나리오 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_payment_service_failed_payment&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">return_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;failed&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">payment_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PaymentService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mock_gateway&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">payment_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assert_called_once&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Patch 데코레이터를 사용한 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@patch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;__main__.PaymentGateway&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_payment_service_with_patch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mock_gateway_class&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway_instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Mock&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway_class&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">return_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mock_gateway_instance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway_instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">return_value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">payment_service&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PaymentService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PaymentGateway&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">payment_service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mock_gateway_instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">charge&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">assert_called_once_with&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript&lt;span class="hx-absolute -hx-mt-20" id="javascript">&lt;/span>
&lt;a href="#javascript" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Jest를 사용한 테스트 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">jest&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;@jest/globals&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트할 실제 클래스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">UserService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">database&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">getUserById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">updateUserEmail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">newEmail&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">newEmail&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트 코드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;UserService&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Mock을 사용한 테스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">describe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;with mock&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Jest mock 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">mockDatabase&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">findUser&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">updateUser&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userService&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">UserService&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">beforeEach&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 각 테스트 전에 mock 초기화
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">jest&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clearAllMocks&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should call database with correct id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">mockUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;john@example.com&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mockResolvedValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">userService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toHaveBeenCalledWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toEqual&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should update user email&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">mockUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;john@example.com&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">updatedUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">mockUser&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">email&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;new@example.com&amp;#39;&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mockResolvedValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateUser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mockResolvedValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">updatedUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">userService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateUserEmail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;new@example.com&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toHaveBeenCalledWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">updateUser&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toHaveBeenCalledWith&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">updatedUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">email&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">toBe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;new@example.com&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;should handle database errors&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mockDatabase&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findUser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mockRejectedValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Database error&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">rejects&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">toThrow&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Database error&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>호환성 테스트 (Compatibility Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/compatibility-test/</link><pubDate>Sat, 30 Nov 2024 03:27:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/compatibility-test/</guid><description>
&lt;h2>호환성 테스트 (Compatibility Test)&lt;span class="hx-absolute -hx-mt-20" id="호환성-테스트-compatibility-test">&lt;/span>
&lt;a href="#%ed%98%b8%ed%99%98%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8-compatibility-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>호환성 테스트는 소프트웨어가 다양한 하드웨어, 운영체제, 네트워크 환경 등에서 올바르게 작동하는지 확인하기 위해 수행되는 테스트이다.&lt;/p>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>호환성 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>철저함: 다양한 환경에서 발생할 수 있는 문제를 찾아낸다.&lt;/li>
&lt;li>확장성: 발견된 문제를 쉽게 재현하고 해결할 수 있어야 한다.&lt;/li>
&lt;li>사용자 경험 보장: 모든 사용자가 비슷한 경험을 할 수 있도록 한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>호환성 테스트는 다음과 같은 범위를 포함한다:&lt;/p>
&lt;ol>
&lt;li>하드웨어 호환성&lt;/li>
&lt;li>소프트웨어 호환성 (운영체제, 브라우저 등)&lt;/li>
&lt;li>네트워크 호환성&lt;/li>
&lt;li>데이터베이스 호환성&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>호환성 테스트는 일반적으로 소프트웨어 개발의 후반부, 특히 알파 테스트와 베타 테스트 단계에서 수행된다.&lt;/p>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>기능성: 모든 기능이 다양한 환경에서 정상 작동하는지 확인&lt;/li>
&lt;li>성능: 다양한 환경에서의 속도와 반응성 검증&lt;/li>
&lt;li>사용자 인터페이스: 다양한 해상도와 화면 크기에서의 표시 상태 확인&lt;/li>
&lt;/ol>
&lt;h3>호환성 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="호환성-테스트의-종류">&lt;/span>
&lt;a href="#%ed%98%b8%ed%99%98%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>이전 버전과의 호환성 테스트: 이전 버전의 하드웨어나 소프트웨어와의 호환성 확인&lt;/li>
&lt;li>전방 호환성 테스트: 향후 출시될 환경과의 호환성 확인&lt;/li>
&lt;li>다재다능성 테스트: 다양한 환경에서의 작동 여부 확인&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>호환성 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립: 테스트할 환경과 기기 선정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">compatibility_test_plan&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;테스트_대상&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;브라우저&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Chrome&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Firefox&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Safari&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Edge&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;운영체제&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Windows&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;MacOS&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Linux&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;디바이스&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;Desktop&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Tablet&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Mobile&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;테스트_범위&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;기능_테스트&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;핵심 기능 동작&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;데이터 처리&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;사용자 인터페이스&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;성능_테스트&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;로딩 시간&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;응답 속도&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;리소스 사용량&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>테스트 환경 구축: 다양한 하드웨어, 운영체제, 브라우저 등 준비&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 작성: 각 환경에서 확인할 항목 정리&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 실행: 계획된 환경에서 테스트 수행&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">execute_compatibility_tests&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;호환성 테스트 실행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 환경 준비&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">environments&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">prepare_test_environments&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">environments&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 설치 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">installation_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">test_installation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기능 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">functionality_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">test_functionality&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># UI 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ui_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">test_user_interface&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">performance_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">test_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">record_test_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;installation&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">installation_result&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;functionality&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">functionality_result&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;ui&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ui_result&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;performance&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">performance_result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>결과 분석 및 보고: 발견된 문제점 정리 및 보고서 작성&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">analyze_compatibility_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_results&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;호환성 테스트 결과 분석&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">analysis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;호환성_매트릭스&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">create_compatibility_matrix&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;주요_문제점&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">identify_major_issues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;플랫폼별_성능&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">analyze_performance_by_platform&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_results&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;권장_수정사항&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">generate_recommendations&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_results&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">analysis&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>호환성 테스트를 효과적으로 수행하기 위한 핵심 고려사항들&lt;span class="hx-absolute -hx-mt-20" id="호환성-테스트를-효과적으로-수행하기-위한-핵심-고려사항들">&lt;/span>
&lt;a href="#%ed%98%b8%ed%99%98%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ed%95%b5%ec%8b%ac-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 범위 설정 가장 많이 사용되는 환경부터 우선적으로 테스트하되, 점차 범위를 확장한다.&lt;/li>
&lt;li>자동화 도구 활용 다양한 환경에서의 테스트를 자동화하여 효율성을 높인다.&lt;/li>
&lt;li>실제 사용 환경 반영 실제 사용자들이 사용하는 환경과 최대한 유사하게 테스트 환경을 구성한다.&lt;/li>
&lt;li>지속적인 업데이트 새로운 브라우저 버전, 운영체제 업데이트 등에 대응하여 테스트를 계속 수행한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 애플리케이션의 호환성 테스트를 예로 들어보자:&lt;/p>
&lt;ol>
&lt;li>다양한 운영체제(Windows, macOS, Linux)에서 웹사이트 접속 테스트&lt;/li>
&lt;li>여러 브라우저(Chrome, Firefox, Safari, Edge)에서의 화면 표시 및 기능 확인&lt;/li>
&lt;li>다양한 모바일 기기(iOS, Android)에서의 앱 설치 및 실행 테스트&lt;/li>
&lt;li>다양한 화면 크기와 해상도에서의 반응형 디자인 확인&lt;/li>
&lt;li>3G, 4G, 5G, Wi-Fi 등 다양한 네트워크 환경에서의 성능 테스트&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>시스템 테스트 (System test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/system-test/</link><pubDate>Fri, 29 Nov 2024 06:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/system-test/</guid><description>
&lt;h2>시스템 테스트 (System test)&lt;span class="hx-absolute -hx-mt-20" id="시스템-테스트-system-test">&lt;/span>
&lt;a href="#%ec%8b%9c%ec%8a%a4%ed%85%9c-%ed%85%8c%ec%8a%a4%ed%8a%b8-system-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>시스템 테스트는 소프트웨어 개발 주기의 후반부에 수행되는 중요한 테스트 단계이다.&lt;br>
이는 개발된 소프트웨어 시스템 전체를 검사하는 과정으로, 모든 개별 모듈과 구성 요소가 통합된 후 전체 시스템이 예상대로 작동하는지 확인한다.&lt;/p>
&lt;p>온라인 쇼핑몰의 시스템 테스트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 온라인 쇼핑몰 시스템 테스트 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_complete_shopping_flow&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 사용자 시나리오 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 회원가입부터 상품 구매까지 전체 프로세스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">register_new_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test@example.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;password123&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">login_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">email&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 상품 검색 및 장바구니 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">search_results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">search_products&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;노트북&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">add_to_cart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">search_results&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 및 결제 프로세스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cart&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">payment_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;신용카드&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 전체 프로세스가 완료되었는지 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;결제완료&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">inventory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">check_stock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">search_results&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;재고감소&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">notification&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order_confirmation_sent&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 시스템 부하 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">concurrent_users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">simulate_multiple_users&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">system_response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_system_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">concurrent_users&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">system_response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">average_response_time&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">2.0&lt;/span> &lt;span class="c1"># 2초 이내 응답&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템 테스트의 주요 특징과 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>전체 시스템 평가: 개별 부분이 아닌 시스템 전체의 동작을 검증한다.&lt;/li>
&lt;li>사용자 관점 테스트: 실제 사용자의 입장에서 소프트웨어를 테스트한다.&lt;/li>
&lt;li>요구사항 충족 확인: 시스템이 명세된 요구사항을 만족하는지 검증한다.&lt;/li>
&lt;li>품질 보증: 소프트웨어의 전반적인 품질을 평가한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템 테스트는 다음과 같은 영역을 포함한다:&lt;/p>
&lt;ol>
&lt;li>기능성: 모든 기능이 예상대로 작동하는지 확인&lt;/li>
&lt;li>성능: 시스템의 속도와 반응성 테스트&lt;/li>
&lt;li>보안: 시스템의 데이터 보호 능력 평가&lt;/li>
&lt;li>사용성: 사용자 인터페이스의 직관성과 편의성 검증&lt;/li>
&lt;li>호환성: 다양한 환경에서의 작동 여부 확인&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템 테스트는 일반적으로 단위 테스트와 통합 테스트가 완료된 후, 사용자 수용 테스트(UAT) 전에 수행된다.&lt;/p>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템 테스트에서는 다음과 같은 요소를 검증한다:&lt;/p>
&lt;ol>
&lt;li>기능적 요구사항: 시스템의 모든 기능이 올바르게 작동하는지 확인&lt;/li>
&lt;li>비기능적 요구사항: 성능, 보안, 사용성 등을 검증&lt;/li>
&lt;li>데이터 무결성: 데이터 처리의 정확성 확인&lt;/li>
&lt;li>오류 처리: 예외 상황에 대한 시스템의 대응 평가&lt;/li>
&lt;/ol>
&lt;h3>시스템 테스트의 종류&lt;span class="hx-absolute -hx-mt-20" id="시스템-테스트의-종류">&lt;/span>
&lt;a href="#%ec%8b%9c%ec%8a%a4%ed%85%9c-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>기능 테스트: 각 기능의 정상 작동 여부 확인&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_authentication&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 로그인 기능 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 정상 케이스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;user@example.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;correct_password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">success&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실패 케이스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;user@example.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wrong_password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">success&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;invalid@email&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error_message&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;잘못된 이메일 형식&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>성능 테스트: 시스템의 속도, 확장성, 안정성 평가&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_system_performance&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 부하 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_virtual_users&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response_times&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">measure_response_times&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">users&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 성능 지표 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response_times&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">5.0&lt;/span> &lt;span class="c1"># 최대 응답시간 5초&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response_times&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">2.0&lt;/span> &lt;span class="c1"># 평균 응답시간 2초&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보안 테스트: 시스템의 취약점 식별&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_security_measures&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SQL 인젝션 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">try_sql_injection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">login_form&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;차단됨&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 무차별 대입 공격 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">check_brute_force_protection&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;계정 잠금&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>사용성 테스트: 사용자 경험 평가&lt;/p>
&lt;/li>
&lt;li>
&lt;p>호환성 테스트: 다양한 환경에서의 작동 확인&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>테스트 계획 수립&lt;br>
예:&lt;br>
- duration: 4주&lt;br>
- environments: 테스트 서버, 스테이징 서버&lt;br>
- test types: 기능 테스트, 성능 테스트, 보안 테스트, 사용성 테스트&lt;br>
- resources&lt;br>
- testers: 5&lt;br>
- test_devices: 데스크톱, 모바일, 태블릿&lt;br>
- testing_tools: JMeter, Selenium, LoadRunner&lt;/li>
&lt;li>테스트 케이스 설계&lt;/li>
&lt;li>테스트 환경 구축&lt;/li>
&lt;li>테스트 실행&lt;/li>
&lt;li>결과 분석 및 보고&lt;/li>
&lt;li>버그 수정 및 재테스트&lt;/li>
&lt;/ol>
&lt;h3>시스템 테스트에서 자주 발견되는 문제들&lt;span class="hx-absolute -hx-mt-20" id="시스템-테스트에서-자주-발견되는-문제들">&lt;/span>
&lt;a href="#%ec%8b%9c%ec%8a%a4%ed%85%9c-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%97%90%ec%84%9c-%ec%9e%90%ec%a3%bc-%eb%b0%9c%ea%b2%ac%eb%90%98%eb%8a%94-%eb%ac%b8%ec%a0%9c%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>성능 이슈&lt;/p>
&lt;ul>
&lt;li>동시 사용자가 많을 때 시스템 응답 지연&lt;/li>
&lt;li>메모리 사용량 급증&lt;/li>
&lt;li>데이터베이스 쿼리 지연&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>기능 간 상호작용 문제&lt;/p>
&lt;ul>
&lt;li>한 기능의 사용이 다른 기능에 영향을 미치는 경우&lt;/li>
&lt;li>데이터 일관성 문제&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>환경 의존적 문제&lt;/p>
&lt;ul>
&lt;li>특정 브라우저에서만 발생하는 오류&lt;/li>
&lt;li>모바일 기기에서의 호환성 문제&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 애플리케이션을 개발했다고 가정해보자.&lt;br>
시스템 테스트에서는 다음과 같은 항목을 확인할 수 있다:&lt;/p>
&lt;ol>
&lt;li>기능 테스트: 상품 검색, 장바구니 추가, 결제 프로세스가 올바르게 작동하는지 확인&lt;/li>
&lt;li>성능 테스트: 많은 사용자가 동시에 접속했을 때 시스템이 원활하게 작동하는지 테스트&lt;/li>
&lt;li>보안 테스트: 사용자 개인정보와 결제 정보가 안전하게 보호되는지 확인&lt;/li>
&lt;li>사용성 테스트: 웹사이트 내비게이션이 직관적이고 사용하기 쉬운지 평가&lt;/li>
&lt;li>호환성 테스트: 다양한 브라우저와 모바일 기기에서 정상적으로 작동하는지 확인&lt;/li>
&lt;/ol>
&lt;p>시스템 테스트를 통해 개발팀은 사용자에게 높은 품질의 소프트웨어를 제공할 수 있으며, 출시 전 발생할 수 있는 문제를 사전에 식별하고 해결할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>보안 테스트 (Security Test)</title><link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/security-test/</link><pubDate>Fri, 29 Nov 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/security-test/</guid><description>
&lt;h2>보안 테스트 (Security Test)&lt;span class="hx-absolute -hx-mt-20" id="보안-테스트-security-test">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%95%88-%ed%85%8c%ec%8a%a4%ed%8a%b8-security-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>보안 테스트(Security Testing)는 소프트웨어가 사이버 공격에 얼마나 잘 견디는지를 평가하고, 보안 취약점을 찾아내기 위해 수행되는 테스트이다.&lt;br>
이 테스트는 시스템이 기밀성, 무결성, 가용성, 인증, 부인 방지 등의 보안 요구사항을 충족하는지를 검증한다.&lt;/p>
&lt;p>웹 애플리케이션의 보안 테스트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">hashlib&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">security_scanner&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">SecurityScanner&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">WebSecurityTest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target_url&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">target_url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scanner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SecurityScanner&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_sql_injection_vulnerability&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;SQL 인젝션 취약점 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 의심스러운 입력값 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_inputs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#39; OR &amp;#39;1&amp;#39;=&amp;#39;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#39;; DROP TABLE users--&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#39; UNION SELECT * FROM passwords--&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">test_input&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_inputs&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/search?q=&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">test_input&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SQL 에러 메시지나 비정상적인 데이터 반환 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scanner&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">detect_sql_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;SQL 인젝션 취약점 발견: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">test_input&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_xss_vulnerability&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;크로스 사이트 스크립팅(XSS) 취약점 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_scripts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;lt;img src=&amp;#39;x&amp;#39; onerror=&amp;#39;alert(1)&amp;#39;&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;javascript:alert(document.cookie)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">script&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_scripts&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/comment&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;content&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">script&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 스크립트가 필터링되지 않고 그대로 반영되는지 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">script&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;XSS 취약점 발견: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">script&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_authentication&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;인증 시스템 보안 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 무차별 대입 공격 방지 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">login_attempts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">login_attempts&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target_url&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/login&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;test&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">login_attempts&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">login_attempts&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 계정 잠금 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status_code&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">403&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># 접근 거부되어야 함&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;무차별 대입 공격 방지 기능 미흡&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>특징과 목적&lt;span class="hx-absolute -hx-mt-20" id="특징과-목적">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95%ea%b3%bc-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>사이버 공격 시뮬레이션&lt;/strong>: 해커의 관점에서 시스템을 테스트하여 취약점을 찾는다.&lt;/li>
&lt;li>&lt;strong>다양한 보안 요구사항 검증&lt;/strong>: 기밀성, 무결성, 가용성 등의 보안 특성을 평가한다.&lt;/li>
&lt;li>&lt;strong>정적 및 동적 분석&lt;/strong>: 코드 분석과 실행 중의 행동을 모두 포함한다.&lt;/li>
&lt;/ul>
&lt;h4>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>취약점 발견&lt;/strong>: 시스템의 약점을 찾아내고 이를 개선한다.&lt;/li>
&lt;li>&lt;strong>보안 정책 준수 확인&lt;/strong>: 기업이나 산업의 보안 기준을 충족하는지 검증한다.&lt;/li>
&lt;li>&lt;strong>사용자 데이터 보호&lt;/strong>: 사용자 정보를 안전하게 보호할 수 있는지 확인한다.&lt;/li>
&lt;/ul>
&lt;h3>테스트 범위&lt;span class="hx-absolute -hx-mt-20" id="테스트-범위">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%b2%94%ec%9c%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>보안 테스트는 다음과 같은 요소를 포함한다:&lt;/p>
&lt;ol>
&lt;li>사용자 인증 및 권한 관리&lt;/li>
&lt;li>데이터 암호화 및 저장 방식&lt;/li>
&lt;li>네트워크 보안&lt;/li>
&lt;li>애플리케이션 보안&lt;/li>
&lt;li>외부 시스템과의 통합 보안&lt;/li>
&lt;/ol>
&lt;h3>수행 시점&lt;span class="hx-absolute -hx-mt-20" id="수행-시점">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%ec%8b%9c%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>보안 테스트는 소프트웨어 개발 주기의 여러 단계에서 수행될 수 있지만, 일반적으로 다음 단계에서 진행된다:&lt;/p>
&lt;ol>
&lt;li>개발 단계: 초기 코드 작성 시 정적 분석 도구를 사용하여 취약점을 점검한다.&lt;/li>
&lt;li>통합 및 시스템 테스트 단계: 전체 시스템이 통합된 후 동적 분석을 통해 실제 공격 시나리오를 시뮬레이션한다.&lt;/li>
&lt;/ol>
&lt;h3>보안 테스트 수행 시 주의사항&lt;span class="hx-absolute -hx-mt-20" id="보안-테스트-수행-시-주의사항">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%95%88-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%88%98%ed%96%89-%ec%8b%9c-%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>법적 허가 확보 테스트 전 필요한 모든 승인을 받아야 한다.&lt;/li>
&lt;li>테스트 영향 최소화 실제 시스템과 데이터에 피해가 가지 않도록 주의한다.&lt;/li>
&lt;li>결과 문서화 발견된 취약점과 대응 방안을 상세히 기록한다.&lt;/li>
&lt;/ol>
&lt;h3>검증 대상&lt;span class="hx-absolute -hx-mt-20" id="검증-대상">&lt;/span>
&lt;a href="#%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 검증 대상은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>사용자 인증 및 권한 부여 메커니즘&lt;/li>
&lt;li>데이터 전송 및 저장 시 암호화 여부&lt;/li>
&lt;li>취약점 스캐닝 결과&lt;/li>
&lt;li>로그 및 감사 기록&lt;/li>
&lt;/ol>
&lt;h3>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>침투 테스트(Penetration Testing)&lt;/strong>: 해커의 관점에서 시스템에 침입해 취약점을 찾는 테스트.&lt;/li>
&lt;li>&lt;strong>정적 분석(Static Analysis)&lt;/strong>: 코드가 실행되지 않은 상태에서 보안 문제를 검토하는 방법.&lt;/li>
&lt;li>&lt;strong>동적 분석(Dynamic Analysis)&lt;/strong>: 코드가 실행되는 동안 시스템의 행동을 모니터링하여 취약점을 찾는다.&lt;/li>
&lt;li>&lt;strong>위험 평가(Risk Assessment)&lt;/strong>: 시스템의 잠재적 위험 요소를 식별하고 평가한다.&lt;/li>
&lt;/ol>
&lt;h3>진행 방식&lt;span class="hx-absolute -hx-mt-20" id="진행-방식">&lt;/span>
&lt;a href="#%ec%a7%84%ed%96%89-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>보안 테스트는 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>테스트 계획 수립&lt;/strong>: 어떤 보안 요구사항을 검토할 것인지 정의한다.&lt;/li>
&lt;li>&lt;strong>테스트 도구 선택&lt;/strong>: 필요한 도구(예: 침투 테스트 도구)를 선택한다.&lt;/li>
&lt;li>&lt;strong>테스트 실행&lt;/strong>: 계획에 따라 실제로 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>결과 분석&lt;/strong>: 발견된 취약점과 문제점을 분석하고 보고서를 작성한다.&lt;/li>
&lt;li>&lt;strong>개선 조치&lt;/strong>: 발견된 문제를 해결하기 위한 조치를 취한다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>예를 들어, 온라인 뱅킹 애플리케이션에 대한 보안 테스트를 고려해보자:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>사용자 인증 테스트&lt;/strong>: 비밀번호 복잡성 요구사항이 충족되는지 확인하고, 비밀번호 재설정 프로세스를 점검한다.&lt;/li>
&lt;li>&lt;strong>침투 테스트&lt;/strong>: 해커처럼 접근하여 SQL 인젝션 공격이나 크로스 사이트 스크립팅(XSS) 공격을 시도하여 취약점을 찾는다.&lt;/li>
&lt;li>&lt;strong>데이터 암호화 확인&lt;/strong>: 사용자 데이터가 전송될 때 SSL/TLS 암호화가 적용되는지 확인한다.&lt;/li>
&lt;li>&lt;strong>로그 감사&lt;/strong>: 모든 사용자 활동이 적절히 기록되고 있는지 점검하여 이상 징후를 탐지할 수 있는지 평가한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>