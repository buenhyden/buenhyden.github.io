<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Orchestration on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/orchestration/</link>
    <description>Recent content in Orchestration on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Sep 2025 04:33:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/orchestration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Containerization</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/containerization/</link>
      <pubDate>Mon, 08 Sep 2025 04:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/system-components/platform--execution-infrastructure/containerization/</guid>
      <description>컨테이너화는 애플리케이션과 의존성을 경량 이미지로 패키징해 운영체제 커널을 공유하며 격리 실행하는 기술이다. 네임스페이스·cgroups로 격리·자원제어를 수행하고, OCI 규격의 이미지·런타임·레지스트리와 Kubernetes 등 오케스트레이션, CI/CD가 결합되어 이식성·일관성·자동화된 확장성을 제공한다. 커널 공유에 따른 보안·격리 한계는 설계 시 고려해야 한다.</description>
    </item>
  </channel>
</rss>
