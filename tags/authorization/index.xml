<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Authorization :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/authorization.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Thu, 14 Nov 2024 23:49:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/authorization/index.xml" rel="self" type="application/rss+xml"/><item><title>권한 부여 (Authorization)</title><link>https://buenhyden.github.io/posts/security/authorization.html</link><pubDate>Mon, 11 Nov 2024 11:31:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authorization.html</guid><description>인증된 사용자가 특정 리소스나 기능에 접근할 수 있는 권한을 가지고 있는지 확인하는 프로세스</description></item><item><title>DAC</title><link>https://buenhyden.github.io/posts/security/authorization/dac.html</link><pubDate>Thu, 14 Nov 2024 23:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authorization/dac.html</guid><description>리소스의 소유자가 해당 리소스에 대한다른 사용자들의 접근 권한을 직접 제어할 수 있는 접근 제어 방식</description></item><item><title>MAC</title><link>https://buenhyden.github.io/posts/security/authorization/mac.html</link><pubDate>Thu, 14 Nov 2024 23:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authorization/mac.html</guid><description>시스템 전체에 걸쳐 중앙에서 정의된 보안 정책에 따라 접근 권한을 강제로 적용하는 접근 제어 방식.</description></item><item><title>PBAC</title><link>https://buenhyden.github.io/posts/security/authorization/pbac.html</link><pubDate>Thu, 14 Nov 2024 23:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authorization/pbac.html</guid><description>중앙에서 정의된 정책들을 기반으로 접근 권한을 결정하는 접근 제어 방식. 각 정책은 "누가", "무엇을", "어떤 조건에서" 할 수 있는지를 정의하며, 이러한 정책들은 프로그래밍 방식으로 표현되고 평가된다.</description></item><item><title>ABAC</title><link>https://buenhyden.github.io/posts/security/authorization/abac.html</link><pubDate>Thu, 14 Nov 2024 23:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authorization/abac.html</guid><description>ABAC는 주체(사용자), 객체(리소스), 작업, 환경 조건의 속성을 조합하여 접근 제어 정책을 정의한다.</description></item><item><title>RBAC</title><link>https://buenhyden.github.io/posts/security/authorization/rbac.html</link><pubDate>Thu, 14 Nov 2024 23:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authorization/rbac.html</guid><description>RBAC는 "만약 ~라면 ~할 수 있다"와 같은 형태의 규칙들을 사용하여 접근 권한을 제어한다. 각 규칙은 조건부와 결과부로 구성되며, 시스템은 이러한 규칙들을 순차적으로 평가하여 접근 허용 여부를 결정한다.</description></item></channel></rss>