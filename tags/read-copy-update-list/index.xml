<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Read-Copy-Update-List :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/read-copy-update-list.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Mon, 06 Jan 2025 13:22:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/read-copy-update-list/index.xml" rel="self" type="application/rss+xml"/><item><title>Concurrent Data Structure</title><link>https://buenhyden.github.io/til/2025/01/concurrent-data-structure.html</link><pubDate>Mon, 06 Jan 2025 12:55:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2025/01/concurrent-data-structure.html</guid><description>Concurrent Data Structure는 여러 스레드가 동시에 안전하게 접근하고 조작할 수 있도록 설계된 데이터 구조로, 전통적인 데이터 구조와 달리, 동시성을 고려하여 데이터의 일관성과 무결성을 보장하면서도 높은 성능을 제공하는 것이 특징이다.</description></item><item><title>Read-Copy-Update List</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/data-structure/non-primitive/linear/linked-list/read-copy-update-list.html</link><pubDate>Mon, 06 Jan 2025 13:22:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/data-structure/non-primitive/linear/linked-list/read-copy-update-list.html</guid><description>RCU List는 Read-Copy-Update 메커니즘을 사용하여 구현된 동시성 연결 리스트로 읽기 작업에 대해 락을 사용하지 않으면서도 동시에 업데이트를 수행할 수 있게 해준다.</description></item></channel></rss>