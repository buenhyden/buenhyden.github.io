<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Observer-Pattern :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/observer-pattern/</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Sun, 13 Oct 2024 06:16:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/observer-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Observer Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/software-design-patterns/behavioral-design-patterns/observer-pattern/</link><pubDate>Sun, 13 Oct 2024 06:16:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/software-design-patterns/behavioral-design-patterns/observer-pattern/</guid><description>객체의 상태 변화를 관찰하는 관찰자들, 즉 옵저버들의 목록을 객체에 등록하여 상태 변화가 있을 때마다 메서드 등을 통해 객체가 직접 목록의 각 옵저버에게 통지하도록 하는 디자인 패턴</description></item></channel></rss>