<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Mutex on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/mutex/</link>
    <description>Recent content in Mutex on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Oct 2024 11:00:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/mutex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mutex</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/concurrency--parallel-computing/concurrency-fundamentals/synchronization-primitives/mutexes-and-locks/mutex/</link>
      <pubDate>Fri, 04 Oct 2024 11:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/concurrency--parallel-computing/concurrency-fundamentals/synchronization-primitives/mutexes-and-locks/mutex/</guid>
      <description>Mutex는 상호 배제(Mutual Exclusion)를 구현하는 동기화 도구로, 여러 스레드 또는 프로세스가 공유 자원에 동시에 접근하지 못하도록 제어한다. 임계 구역 보호를 통해 레이스 컨디션과 데이터 불일치를 방지하며, 락(lock)과 언락(unlock)을 통해 자원 접근을 순차적으로 보장한다. 스핀락, 블로킹, 재귀적 락 등 다양한 구현 기법과 우선순위 제어 정책이 존재한다.</description>
    </item>
  </channel>
</rss>
