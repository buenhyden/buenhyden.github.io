<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Protocol</title><link>https://buenhyden.github.io/tags/protocol/</link><description>Recent content in Protocol on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 23 Dec 2024 12:35:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/protocol/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Protocol</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/</link><pubDate>Wed, 02 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/</guid><description>
&lt;h2>Network Protocol&lt;span class="hx-absolute -hx-mt-20" id="network-protocol">&lt;/span>
&lt;a href="#network-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식과 규칙의 체계.&lt;/li>
&lt;li>신호 체계, 인증, 그리고 오류 감지 및 수정 기능을 포함한다.&lt;/li>
&lt;li>데이터 교환 방식을 정의하여 서로 다른 시스템 간의 원활한 통신을 가능하게 한다.&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>표준화&lt;/strong>: 프로토콜은 표준화된 규칙을 제공하여 다양한 기기 간 호환성을 보장합니다.&lt;/li>
&lt;li>&lt;strong>계층화&lt;/strong>: OSI 7계층 모델이나 TCP/IP 4계층 모델과 같이 계층별로 구분되어 모듈화된 구조를 가집니다.&lt;/li>
&lt;li>&lt;strong>캡슐화&lt;/strong>: 각 계층에서 데이터에 헤더 정보를 추가하여 패킷을 구성합니다.&lt;/li>
&lt;li>&lt;strong>흐름 제어&lt;/strong>: 데이터 전송 속도를 조절하여 수신측의 처리 능력에 맞춥니다.&lt;/li>
&lt;li>&lt;strong>오류 제어&lt;/strong>: 데이터 전송 중 발생할 수 있는 오류를 검출하고 정정합니다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="TCP-IP-protocol-suit.png" alt="seven layers of the OSI model." loading="lazy" />&lt;br>
_Source: &lt;a href="https://techwavehub.net/protocol/" target="_blank" rel="noopener">https://techwavehub.net/protocol/&lt;/a> _&lt;/p>
&lt;h3>Physical Protocol&lt;span class="hx-absolute -hx-mt-20" id="physical-protocol">&lt;/span>
&lt;a href="#physical-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>물리 프로토콜은 실제 데이터가 물리적 매체를 통해 전송되는 방식을 정의한다.&lt;br>
이는 전기 신호, 광신호, 전파 등의 형태로 데이터를 전송하는 방법을 다룬다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로토콜&lt;/th>
&lt;th>OSI 계층&lt;/th>
&lt;th>TCP/IP 계층&lt;/th>
&lt;th>역할 및 기능&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>동작 방식&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Ethernet&lt;/td>
&lt;td>물리 계층, 데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>LAN에서 데이터 전송&lt;/td>
&lt;td>MAC 주소 사용, CSMA/CD 방식&lt;/td>
&lt;td>빠르고 안정적, 비용 효율적&lt;/td>
&lt;td>패킷 교환 방식, 스위치 기반 데이터 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Frame Relay&lt;/td>
&lt;td>데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>가상 회로를 통한 데이터 전송&lt;/td>
&lt;td>DLCI 사용, 간소화된 프로토콜&lt;/td>
&lt;td>X.25보다 효율적, 고속 데이터 전송&lt;/td>
&lt;td>가상 회로 기반, LMI 신호로 상태 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ATM&lt;/td>
&lt;td>데이터 링크 계층, 네트워크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>음성, 비디오, 데이터 통합 전송&lt;/td>
&lt;td>53바이트 셀 단위 전송, QoS 보장&lt;/td>
&lt;td>멀티미디어 데이터 전송에 적합, 하드웨어 기반 스위칭&lt;/td>
&lt;td>셀 기반 스위칭, 가상 회로 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SONET&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>광섬유 기반 고속 데이터 전송&lt;/td>
&lt;td>동기식 전송, STS 프레임 사용&lt;/td>
&lt;td>고속 전송, 표준화된 인터페이스&lt;/td>
&lt;td>프레임 기반 동기 전송, 다중화 기술 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SDH&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>SONET의 국제 표준 버전&lt;/td>
&lt;td>STM 프레임 사용&lt;/td>
&lt;td>글로벌 호환성, 유연한 대역폭 할당&lt;/td>
&lt;td>SONET와 유사한 동기 전송 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PDH&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>디지털 계위 신호 전송&lt;/td>
&lt;td>비동기식 다중화&lt;/td>
&lt;td>기존 네트워크와의 호환성&lt;/td>
&lt;td>준동기식 전송, 비트 스터핑 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CDMA&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>무선 통신에서 다중 접속&lt;/td>
&lt;td>코드 분할 다중 접속&lt;/td>
&lt;td>높은 용량, 간섭 저항성&lt;/td>
&lt;td>확산 스펙트럼 기술 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GSM&lt;/td>
&lt;td>물리 계층, 데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>디지털 셀룰러 이동통신&lt;/td>
&lt;td>TDMA 기반, SIM 카드 사용&lt;/td>
&lt;td>글로벌 로밍, 음성 및 데이터 서비스&lt;/td>
&lt;td>시분할 다중 접속, 주파수 호핑&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>추가 설명:&lt;/p>
&lt;ol>
&lt;li>Ethernet은 현재 가장 널리 사용되는 LAN 프로토콜로, CSMA/CD 방식을 통해 데이터 충돌을 관리하며, 비교적 단순한 구조로 높은 효율성을 제공한다.&lt;/li>
&lt;li>Token Ring은 IBM이 개발한 프로토콜로, 토큰을 사용하여 충돌 없는 데이터 전송을 보장하지만, 현재는 Ethernet에 비해 사용빈도가 낮다.&lt;/li>
&lt;li>Frame Relay는 패킷 스위칭 기술을 사용하는 WAN 프로토콜로, 가상 회선을 통해 효율적인 데이터 전송을 제공한다.&lt;/li>
&lt;li>ATM은 고정 크기의 셀을 사용하여 다양한 형태의 트래픽을 통합 전송할 수 있으며, QoS를 보장하는 특징이 있다.&lt;/li>
&lt;li>SONET/SDH는 광통신 네트워크의 표준 프로토콜로, 높은 신뢰성과 관리 용이성을 제공한다.&lt;/li>
&lt;li>PDH는 SONET/SDH 이전에 사용된 디지털 전송 방식으로, 비동기식 특성으로 인해 관리가 다소 복잡할 수 있다.&lt;/li>
&lt;li>CDMA는 코드분할 방식을 사용하는 무선통신 프로토콜로, 높은 보안성과 간섭 저항성이 특징이다.&lt;/li>
&lt;li>GSM은 글로벌 이동통신 표준으로, SIM 카드를 통한 사용자 인증과 글로벌 로밍 서비스를 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>Logical Protocol&lt;span class="hx-absolute -hx-mt-20" id="logical-protocol">&lt;/span>
&lt;a href="#logical-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>논리 프로토콜은 데이터의 논리적인 주소 지정, 라우팅, 흐름 제어 등을 담당한다.&lt;br>
이는 실제 물리적 연결과는 독립적으로 동작한다.&lt;/p>
&lt;h4>IP / IPSec&lt;span class="hx-absolute -hx-mt-20" id="ip--ipsec">&lt;/span>
&lt;a href="#ip--ipsec" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>IP는 인터넷 통신의 기본이 되는 프로토콜로, 데이터 패킷의 주소 지정과 라우팅을 담당한다.&lt;br>
반면 IPsec은 IP 통신에 보안 기능을 추가하여 데이터의 기밀성, 무결성, 인증을 제공한다.&lt;br>
IPsec은 VPN 구현에 널리 사용되며, 네트워크 계층에서 작동하여 전체 네트워크 트래픽을 보호할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IP (Internet Protocol)&lt;/th>
&lt;th>IPsec (Internet Protocol Security)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>데이터그램 기반의 패킷 전달 및 라우팅&lt;/td>
&lt;td>IP 통신의 보안성 제공 (인증, 암호화, 무결성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 특성&lt;/td>
&lt;td>- 비연결형 서비스&lt;br>- 최선형 전달&lt;br>- 독립적 패킷 라우팅&lt;br>- 단편화/재조립 지원&lt;/td>
&lt;td>- 종단간 보안&lt;br>- 투명한 보안 서비스&lt;br>- 유연한 구성&lt;br>- 호환성 유지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 패킷 라우팅&lt;br>- 주소 지정&lt;br>- 단편화/재조립&lt;br>- 헤더 처리&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 패킷 인증&lt;br>- 무결성 보장&lt;br>- 키 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 모드&lt;/td>
&lt;td>- 데이터그램 방식&lt;br>- 패킷 독립 처리&lt;br>- 헤더 기반 라우팅&lt;br>TTL 기반 제어&lt;/td>
&lt;td>- 전송 모드&lt;br>- 터널 모드&lt;br>ESP/AH 프로토콜&lt;br>IKE 키 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 기본 보안 없음&lt;br>- 평문 전송&lt;br>- 위조/변조 가능&lt;br>- 도청 가능&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 패킷 인증&lt;br>- 재전송 방지&lt;br>- 키 관리 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 구조&lt;/td>
&lt;td>- 버전&lt;br>- 헤더 길이&lt;br>- 서비스 유형&lt;br>- 전체 길이&lt;br>- 식별자&lt;br>- 플래그&lt;br>- 단편화 오프셋&lt;br>TTL&lt;br>- 프로토콜&lt;br>- 체크섬&lt;br>- 출발지/목적지 주소&lt;/td>
&lt;td>- AH 헤더 (인증)&lt;br>ESP 헤더 (암호화)&lt;br>- 보안 연관(SA) 정보&lt;br>- 시퀀스 번호&lt;br>- 무결성 체크값&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 효율적인 라우팅&lt;br>- 높은 확장성&lt;br>- 상호운용성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 투명한 적용&lt;br>- 유연한 구성&lt;br>- 표준화된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 신뢰성 없음&lt;br>- 보안성 없음&lt;br>QoS 보장 없음&lt;br>- 혼잡 제어 없음&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 성능 오버헤드&lt;br>- 키 관리 부담&lt;br>NAT 통과 문제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>활용 분야&lt;/td>
&lt;td>- 인터넷 통신&lt;br>- 기본 네트워킹&lt;br>- 패킷 전달&lt;br>- 라우팅&lt;/td>
&lt;td>- VPN 구축&lt;br>- 기업 네트워크&lt;br>- 원격 접속&lt;br>- 보안 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>표준화 기구&lt;/td>
&lt;td>IETF&lt;/td>
&lt;td>IETF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>관련 프로토콜&lt;/td>
&lt;td>IPv4, IPv6&lt;/td>
&lt;td>ESP, AH, IKE&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 차이점과 상호 관계는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>기본 동작과 보안:&lt;/p>
&lt;ul>
&lt;li>IP: 기본적인 패킷 전달에 중점&lt;/li>
&lt;li>IPsec: IP 통신에 보안 기능을 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현 복잡성:&lt;/p>
&lt;ul>
&lt;li>IP: 단순하고 기본적인 구현&lt;/li>
&lt;li>IPsec: 복잡한 보안 메커니즘 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능과 오버헤드:&lt;/p>
&lt;ul>
&lt;li>IP: 최소한의 오버헤드&lt;/li>
&lt;li>IPsec: 보안 처리로 인한 추가 오버헤드&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>응용 환경:&lt;/p>
&lt;ul>
&lt;li>IP: 모든 인터넷 통신의 기본&lt;/li>
&lt;li>IPsec: 보안이 중요한 특수한 환경&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>IP와 IPsec은 서로 보완적인 관계에 있으며, 현대 네트워크에서는 요구사항에 따라 적절히 선택하여 사용된다.&lt;/p>
&lt;h4>TCP / UDP&lt;span class="hx-absolute -hx-mt-20" id="tcp--udp">&lt;/span>
&lt;a href="#tcp--udp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>TCP는 신뢰성 있는 데이터 전송을 보장하며, 연결 지향적인 프로토콜이다.&lt;br>
3-way handshake를 통해 연결을 설정하고, 데이터의 순서를 보장하며, 오류 발생 시 재전송을 수행한다.&lt;br>
흐름 제어와 혼잡 제어 기능을 통해 네트워크의 안정성을 유지한다.&lt;/p>
&lt;p>UDP는 비연결 지향적이며 단순한 데이터 전송에 중점을 둔다.&lt;br>
연결 설정 과정이 없어 빠른 전송이 가능하지만, 데이터의 신뢰성과 순서를 보장하지 않는다.&lt;br>
실시간 스트리밍이나 게임 등 속도가 중요한 애플리케이션에서 주로 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>TCP (Transmission Control Protocol)&lt;/th>
&lt;th>UDP (User Datagram Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>전송 계층 (4계층)&lt;/td>
&lt;td>전송 계층 (4계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>전송 계층&lt;/td>
&lt;td>전송 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 특성&lt;/td>
&lt;td>연결형 프로토콜 (Connection-oriented)&lt;br>- 데이터 전송 전 연결 설정&lt;br>- 순차적 데이터 전송&lt;br>- 신뢰성 보장&lt;/td>
&lt;td>비연결형 프로토콜 (Connectionless)&lt;br>- 연결 설정 없음&lt;br>- 독립적 데이터 전송&lt;br>- 신뢰성 미보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 흐름 제어&lt;br>- 혼잡 제어&lt;br>- 오류 검출 및 복구&lt;br>- 데이터 순서 보장&lt;br>- 데이터 분할 및 재조립&lt;/td>
&lt;td>- 단순한 데이터 전송&lt;br>- 최소한의 오류 검출&lt;br>- 빠른 전송 속도&lt;br>- 실시간 데이터 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>세그먼트(Segment) 단위로 분할 전송&lt;br>3-way 핸드셰이킹&lt;br>- 순차번호 부여&lt;br>- 확인응답 사용&lt;/td>
&lt;td>데이터그램(Datagram) 단위로 독립 전송&lt;br>- 연결 설정 없음&lt;br>- 순차번호 없음&lt;br>- 확인응답 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성 보장&lt;/td>
&lt;td>- 데이터 손실 시 재전송&lt;br>- 중복 데이터 제거&lt;br>- 순서 보장&lt;br>- 데이터 완전성 검증&lt;/td>
&lt;td>- 데이터 손실 가능&lt;br>- 중복 데이터 가능&lt;br>- 순서 보장 없음&lt;br>- 최소한의 오류 검출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>속도 특성&lt;/td>
&lt;td>- 상대적으로 느림&lt;br>- 오버헤드 큼&lt;br>- 처리 시간 많이 소요&lt;/td>
&lt;td>- 상대적으로 빠름&lt;br>- 오버헤드 작음&lt;br>- 처리 시간 적게 소요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 분야&lt;/td>
&lt;td>- 파일 전송&lt;br>- 이메일&lt;br>- 웹 브라우징&lt;br>- 원격 접속&lt;/td>
&lt;td>- 실시간 스트리밍&lt;br>- 온라인 게임&lt;br>VoIP&lt;br>DNS 쿼리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 데이터 순서 보장&lt;br>- 혼잡 제어 기능&lt;br>- 완전성 보장&lt;/td>
&lt;td>- 빠른 전송 속도&lt;br>- 적은 지연 시간&lt;br>- 단순한 구조&lt;br>- 적은 시스템 부하&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 느린 전송 속도&lt;br>- 많은 시스템 자원 사용&lt;br>- 큰 프로토콜 오버헤드&lt;br>- 지연 시간 발생&lt;/td>
&lt;td>- 데이터 손실 가능&lt;br>- 신뢰성 부족&lt;br>- 순서 보장 없음&lt;br>- 혼잡 제어 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60 바이트&lt;/td>
&lt;td>8 바이트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 설정&lt;/td>
&lt;td>필요 (3-way handshaking)&lt;/td>
&lt;td>불필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>순서 제어&lt;/td>
&lt;td>있음 (순차번호 사용)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>흐름 제어&lt;/td>
&lt;td>있음 (윈도우 크기 조절)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>혼잡 제어&lt;/td>
&lt;td>있음 (혼잡 윈도우 사용)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>HTTP / HTTPS&lt;span class="hx-absolute -hx-mt-20" id="http--https">&lt;/span>
&lt;a href="#http--https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>HTTP와 HTTPS는 모두 웹 통신에 사용되는 프로토콜이지만, HTTPS는 보안 기능이 추가되어 더 안전한 통신을 제공한다.&lt;br>
두 프로토콜 모두 OSI 모델과 TCP/IP 모델의 최상위 계층에서 동작하며, 웹 브라우저와 서버 간의 데이터 교환을 담당한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>HTTP (Hypertext Transfer Protocol)&lt;/th>
&lt;th>HTTPS (Hypertext Transfer Protocol Secure)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>80&lt;/td>
&lt;td>443&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 계층&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>SSL/TLS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>웹 브라우저와 웹 서버 간의 통신&lt;/td>
&lt;td>보안이 강화된 웹 브라우저와 웹 서버 간의 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>평문 전송&lt;/td>
&lt;td>암호화된 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 과정&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. HTTP 요청 전송&lt;br>3. HTTP 응답 수신&lt;br>4. 연결 종료&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. SSL/TLS 핸드셰이크&lt;br>3. 암호화된 HTTP 요청 전송&lt;br>4. 암호화된 HTTP 응답 수신&lt;br>5. 연결 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- Stateless 프로토콜&lt;br>- 확장 가능한 구조&lt;br>- 단순한 요청-응답 모델&lt;br>- 텍스트 기반 통신&lt;/td>
&lt;td>- HTTP에 보안 계층 추가&lt;br>- 데이터 암호화&lt;br>- 서버 인증&lt;br>- 데이터 무결성 보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 웹 페이지 전송&lt;br>- 파일 전송&lt;br>- 폼 데이터 전송&lt;br>API 통신&lt;/td>
&lt;td>- 보안 웹 페이지 전송&lt;br>- 암호화된 파일 전송&lt;br>- 보안 API 통신&lt;br>- 전자 상거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HTTP 메소드 지원&lt;/td>
&lt;td>GET, POST, PUT, DELETE, HEAD, OPTIONS, TRACE, PATCH&lt;/td>
&lt;td>동일한 HTTP 메소드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 데이터 노출 위험&lt;br>- 중간자 공격 취약&lt;br>- 데이터 변조 가능&lt;br>- 서버 인증 없음&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 중간자 공격 방지&lt;br>- 데이터 무결성 보장&lt;br>- 서버 인증 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>- 빠른 통신 속도&lt;br>- 적은 리소스 사용&lt;br>- 낮은 서버 부하&lt;br>- 단순한 구현&lt;/td>
&lt;td>- 상대적으로 느린 속도&lt;br>- 더 많은 리소스 사용&lt;br>- 높은 서버 부하&lt;br>- 복잡한 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 빠른 속도&lt;br>- 적은 오버헤드&lt;br>- 쉬운 디버깅&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 데이터 보호&lt;br>- 신뢰성 있는 통신&lt;br>SEO 이점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안성 부족&lt;br>- 데이터 노출&lt;br>- 신뢰성 부족&lt;br>- 무결성 보장 없음&lt;/td>
&lt;td>- 추가 처리 시간&lt;br>- 높은 리소스 사용&lt;br>- 인증서 비용&lt;br>- 복잡한 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>- 일반 웹사이트&lt;br>- 비중요 정보 전송&lt;br>- 내부 네트워크 통신&lt;br>- 테스트 환경&lt;/td>
&lt;td>- 전자상거래&lt;br>- 온라인 뱅킹&lt;br>- 민감한 정보 전송&lt;br>- 기업 웹사이트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 특성&lt;/td>
&lt;td>일반 텍스트 헤더&lt;/td>
&lt;td>암호화된 헤더&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱 가능 여부&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>가능 (보안 고려 필요)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>HTTP/HTTPS의 발전 과정을 보면 다음과 같은 주요 버전들이 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>HTTP/1.0&lt;/p>
&lt;ul>
&lt;li>기본적인 요청-응답 모델&lt;/li>
&lt;li>연결당 하나의 요청만 처리&lt;/li>
&lt;li>단순한 헤더 구조&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/1.1&lt;/p>
&lt;ul>
&lt;li>지속적 연결 지원&lt;/li>
&lt;li>파이프라이닝 도입&lt;/li>
&lt;li>호스트 헤더 필수화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/2&lt;/p>
&lt;ul>
&lt;li>멀티플렉싱 지원&lt;/li>
&lt;li>헤더 압축&lt;/li>
&lt;li>서버 푸시&lt;/li>
&lt;li>스트림 우선순위&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/3 (최신)&lt;/p>
&lt;ul>
&lt;li>QUIC 프로토콜 기반&lt;/li>
&lt;li>향상된 성능&lt;/li>
&lt;li>개선된 보안&lt;/li>
&lt;li>더 나은 모바일 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 웹 프로토콜들은 현대 인터넷의 근간을 이루며, 특히 HTTPS는 보안이 중요시되는 현대 웹 환경에서 필수적인 프로토콜로 자리잡았다.&lt;/p>
&lt;h4>SSL / TLS&lt;span class="hx-absolute -hx-mt-20" id="ssl--tls">&lt;/span>
&lt;a href="#ssl--tls" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>SSL과 TLS는 모두 웹 통신의 보안을 위해 설계된 프로토콜로, 데이터의 암호화, 인증, 무결성을 보장한다.&lt;br>
TLS는 SSL의 후속 버전으로, 더 강력한 보안 기능과 성능 개선을 제공한다.&lt;br>
현재는 SSL이 더 이상 사용되지 않고 TLS가 널리 사용되고 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SSL (Secure Sockets Layer)&lt;/th>
&lt;th>TLS (Transport Layer Security)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>표현 계층(6계층) / 세션 계층(5계층)&lt;/td>
&lt;td>표현 계층(6계층) / 세션 계층(5계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>네트워크 통신의 종단간 보안 제공&lt;/td>
&lt;td>네트워크 통신의 종단간 보안 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 상태&lt;/td>
&lt;td>더 이상 사용되지 않음 (Deprecated)&lt;/td>
&lt;td>현재 표준으로 사용 중&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>최신 버전&lt;/td>
&lt;td>SSL 3.0 (사용 중단)&lt;/td>
&lt;td>TLS 1.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 인증&lt;br>- 무결성 검증&lt;br>- 키 교환&lt;/td>
&lt;td>- 향상된 데이터 암호화&lt;br>- 강화된 인증&lt;br>- 개선된 무결성 검증&lt;br>- 최적화된 키 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핸드셰이크 과정&lt;/td>
&lt;td>1. Client Hello&lt;br>2. Server Hello&lt;br>3. 인증서 교환&lt;br>4. 키 교환&lt;br>5. 암호화 통신 시작&lt;/td>
&lt;td>1. Client Hello&lt;br>2. Server Hello + 인증서 + 키 교환&lt;br>3. 클라이언트 완료&lt;br>4. 암호화 통신 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지원 암호화 알고리즘&lt;/td>
&lt;td>- RC4&lt;br>DES&lt;br>3DES&lt;br>AES&lt;/td>
&lt;td>- AES&lt;br>ChaCha20&lt;br>Poly1305&lt;br>- 최신 암호화 알고리즘&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특징&lt;/td>
&lt;td>- 기본적인 암호화 제공&lt;br>- 취약한 암호화 알고리즘 포함&lt;br>- 알려진 보안 취약점 존재&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 취약한 알고리즘 제거&lt;br>- 최신 보안 기능 추가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>- 상대적으로 느린 핸드셰이크&lt;br>- 더 많은 라운드 트립 필요&lt;br>- 높은 지연 시간&lt;/td>
&lt;td>- 최적화된 핸드셰이크&lt;br>0-RTT 재개 지원&lt;br>- 낮은 지연 시간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 구현 단순&lt;br>- 광범위한 호환성&lt;br>- 기본적인 보안 제공&lt;/td>
&lt;td>- 향상된 보안&lt;br>- 더 나은 성능&lt;br>- 현대적 암호화&lt;br>- 지속적인 개선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 알려진 취약점&lt;br>- 낮은 성능&lt;br>- 사용 중단됨&lt;br>- 더 이상의 개선 없음&lt;/td>
&lt;td>- 이전 버전과의 호환성 문제&lt;br>- 구현 복잡성&lt;br>- 더 많은 리소스 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>(현재는 사용하지 않음)&lt;/td>
&lt;td>- HTTPS 웹 통신&lt;br>- 이메일 보안&lt;br>VPN&lt;br>- 금융 거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 강도&lt;/td>
&lt;td>취약 (더 이상 안전하지 않음)&lt;/td>
&lt;td>매우 강력 (현재 표준)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증서 지원&lt;/td>
&lt;td>X 인증서&lt;/td>
&lt;td>X 인증서 (향상된 검증)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>키 교환 방식&lt;/td>
&lt;td>- RSA&lt;br>Diffie-Hellman&lt;/td>
&lt;td>- ECDHE&lt;br>DHE&lt;br>- 향상된 키 교환 방식&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>TLS의 발전 과정을 보면 다음과 같은 주요 개선사항들이 있었다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>TLS 1.0&lt;/p>
&lt;ul>
&lt;li>SSL 3.0을 기반으로 개발&lt;/li>
&lt;li>기본적인 보안 개선&lt;/li>
&lt;li>HMAC 도입&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.1&lt;/p>
&lt;ul>
&lt;li>CBC 공격 방어&lt;/li>
&lt;li>명시적 IV 사용&lt;/li>
&lt;li>에러 처리 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.2&lt;/p>
&lt;ul>
&lt;li>SHA-256 지원&lt;/li>
&lt;li>암호화 스위트 개선&lt;/li>
&lt;li>의사난수 함수 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.3 (최신)&lt;/p>
&lt;ul>
&lt;li>핸드셰이크 최적화&lt;/li>
&lt;li>0-RTT 재개&lt;/li>
&lt;li>취약한 알고리즘 제거&lt;/li>
&lt;li>향상된 개인정보 보호&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 보안 프로토콜들은 현대 인터넷 보안의 근간을 이루며, 특히 TLS는 지속적인 개선을 통해 더욱 안전하고 효율적인 보안 통신을 가능하게 하고 있다.&lt;/p>
&lt;h4>FTP / SFTP / SCP / TFTP&lt;span class="hx-absolute -hx-mt-20" id="ftp--sftp--scp--tftp">&lt;/span>
&lt;a href="#ftp--sftp--scp--tftp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 프로토콜들은 모두 파일 전송을 위한 것이지만, 각각의 특성과 보안 수준, 기능의 복잡성에서 차이가 있다.&lt;br>
FTP는 가장 오래되고 널리 사용되는 프로토콜이지만 보안에 취약하다.&lt;br>
SFTP와 SCP는 SSH를 기반으로 하여 보안성이 높다.&lt;br>
TFTP는 가장 단순한 구조로, 제한된 환경에서 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>FTP (File Transfer Protocol)&lt;/th>
&lt;th>SFTP (SSH File Transfer Protocol)&lt;/th>
&lt;th>SCP (Secure Copy Protocol)&lt;/th>
&lt;th>TFTP (Trivial File Transfer Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>20(데이터), 21(제어)&lt;/td>
&lt;td>22&lt;/td>
&lt;td>22&lt;/td>
&lt;td>69&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>암호화 없음 (기본)&lt;/td>
&lt;td>SSH 기반 암호화&lt;/td>
&lt;td>SSH 기반 암호화&lt;/td>
&lt;td>암호화 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>일반 파일 전송 및 관리&lt;/td>
&lt;td>보안 파일 전송 및 관리&lt;/td>
&lt;td>보안 파일 복사&lt;/td>
&lt;td>단순 파일 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 특성&lt;/td>
&lt;td>- 제어 연결과 데이터 연결 분리&lt;br>- 능동/수동 모드 지원&lt;br>- 지속적 연결&lt;/td>
&lt;td>- 단일 암호화 연결&lt;br>SSH 터널링 사용&lt;br>- 지속적 연결&lt;/td>
&lt;td>- 단일 암호화 연결&lt;br>- 일회성 연결&lt;br>- 비대화형&lt;/td>
&lt;td>- 단순 연결&lt;br>- 비연결형&lt;br>- 최소한의 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 파일 업로드/다운로드&lt;br>- 디렉토리 탐색&lt;br>- 파일 관리&lt;br>- 권한 관리&lt;/td>
&lt;td>- 파일 업로드/다운로드&lt;br>- 디렉토리 관리&lt;br>- 파일 권한 제어&lt;br>- 원격 파일 조작&lt;/td>
&lt;td>- 파일 복사&lt;br>- 디렉토리 복사&lt;br>- 재귀적 복사&lt;br>- 보존 모드 지원&lt;/td>
&lt;td>- 파일 읽기/쓰기&lt;br>- 단순 전송&lt;br>- 최소 메모리 사용&lt;br>- 간단한 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 방식&lt;/td>
&lt;td>사용자명/비밀번호&lt;/td>
&lt;td>- SSH 키 기반&lt;br>- 비밀번호&lt;br>- 인증서&lt;/td>
&lt;td>- SSH 키 기반&lt;br>- 비밀번호&lt;/td>
&lt;td>인증 없음 (기본)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 다양한 명령어 지원&lt;br>- 세션 유지&lt;br>ASCII/이진 모드&lt;br>- 재시작 기능&lt;/td>
&lt;td>- 풍부한 파일 작업&lt;br>- 플랫폼 독립적&lt;br>- 강력한 보안&lt;br>- 세션 관리&lt;/td>
&lt;td>- 간단한 사용법&lt;br>- 빠른 전송&lt;br>- 명령행 기반&lt;br>- 최소한의 기능&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 최소한의 메모리&lt;br>- 쉬운 구현&lt;br>- 빠른 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 지원됨&lt;br>- 다양한 기능&lt;br>- 유연한 사용&lt;br>- 재시작 가능&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 다양한 기능&lt;br>- 호환성&lt;br>- 신뢰성&lt;/td>
&lt;td>- 간단한 사용&lt;br>- 높은 보안&lt;br>- 빠른 속도&lt;br>- 적은 오버헤드&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 적은 메모리&lt;br>- 빠른 전송&lt;br>ROM 부팅 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약&lt;br>- 복잡한 설정&lt;br>- 방화벽 문제&lt;br>- 오버헤드 큼&lt;/td>
&lt;td>- 구현 복잡&lt;br>- 높은 오버헤드&lt;br>- 느린 속도&lt;br>- 리소스 많이 사용&lt;/td>
&lt;td>- 제한된 기능&lt;br>- 진행률 표시 없음&lt;br>- 세션 관리 없음&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 보안 없음&lt;br>- 큰 파일 부적합&lt;br>- 신뢰성 낮음&lt;br>- 기능 제한적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 사용 사례&lt;/td>
&lt;td>- 웹 호스팅&lt;br>- 파일 공유&lt;br>- 백업&lt;br>- 일반 파일 전송&lt;/td>
&lt;td>- 보안 파일 전송&lt;br>- 원격 파일 관리&lt;br>- 자동화된 전송&lt;br>- 기업 환경&lt;/td>
&lt;td>- 서버 간 파일 복사&lt;br>- 백업&lt;br>- 스크립트 자동화&lt;br>- 단순 전송&lt;/td>
&lt;td>- 네트워크 부팅&lt;br>- 펌웨어 업데이트&lt;br>- 설정 파일 전송&lt;br>- 임베디드 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이들 프로토콜은 다음과 같은 상황에서 선택적으로 사용된다:&lt;/p>
&lt;ol>
&lt;li>일반적인 파일 전송이 필요한 경우: FTP&lt;/li>
&lt;li>보안이 중요한 파일 전송: SFTP 또는 SCP&lt;/li>
&lt;li>제한된 리소스 환경에서의 단순 전송: TFTP&lt;/li>
&lt;/ol>
&lt;p>각 프로토콜은 자신의 고유한 용도와 장점이 있으며, 네트워크 환경과 보안 요구사항에 따라 적절한 프로토콜을 선택하는 것이 중요하다.&lt;/p>
&lt;h4>SMTP / POP3 / IMAP&lt;span class="hx-absolute -hx-mt-20" id="smtp--pop3--imap">&lt;/span>
&lt;a href="#smtp--pop3--imap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 세 프로토콜은 모두 이메일 통신에 중요한 역할을 하며, 각각의 특성에 따라 이메일 전송, 수신, 관리 기능을 제공한다.&lt;br>
SMTP는 이메일 전송을, POP3와 IMAP은 이메일 수신을 담당하지만, IMAP이 더 현대적이고 유연한 기능을 제공한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SMTP (Simple Mail Transfer Protocol)&lt;/th>
&lt;th>POP3 (Post Office Protocol 3)&lt;/th>
&lt;th>IMAP (Internet Message Access Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>25 (일반), 587 (TLS/SSL)&lt;/td>
&lt;td>110 (일반), 995 (TLS/SSL)&lt;/td>
&lt;td>143 (일반), 993 (TLS/SSL)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>이메일 발송 및 전달&lt;/td>
&lt;td>이메일 다운로드 및 삭제&lt;/td>
&lt;td>서버상의 이메일 관리 및 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 방향&lt;/td>
&lt;td>클라이언트 → 서버&lt;br>서버 → 서버&lt;/td>
&lt;td>클라이언트 ← 서버&lt;/td>
&lt;td>양방향 (클라이언트 ↔ 서버)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 동작 방식&lt;/td>
&lt;td>1. 연결 수립&lt;br>2. 송신자 확인&lt;br>3. 수신자 확인&lt;br>4. 메시지 전송&lt;br>5. 연결 종료&lt;/td>
&lt;td>1. 서버 접속&lt;br>2. 인증&lt;br>3. 메일 다운로드&lt;br>4. 서버에서 메일 삭제(옵션)&lt;br>5. 연결 종료&lt;/td>
&lt;td>1. 서버 접속&lt;br>2. 인증&lt;br>3. 메일함 선택&lt;br>4. 메일 조작(읽기/이동/삭제 등)&lt;br>5. 상태 동기화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 텍스트 기반 프로토콜&lt;br>- 메일 릴레이 가능&lt;br>- 단순한 명령어 체계&lt;br>- 확장 가능한 구조&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 오프라인 접근 가능&lt;br>- 서버 저장공간 최소화&lt;br>- 한 기기에서만 접근&lt;/td>
&lt;td>- 서버 중심 관리&lt;br>- 다중 기기 접근&lt;br>- 폴더 구조 지원&lt;br>- 실시간 동기화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메일 저장 위치&lt;/td>
&lt;td>전달 중계 역할만 수행&lt;/td>
&lt;td>로컬 장치&lt;/td>
&lt;td>메일 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>다중 기기 지원&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>제한적 (한 기기에서만 관리)&lt;/td>
&lt;td>완벽 지원 (모든 기기 동기화)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 자원 사용&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>메일 전송 시에만 사용&lt;/td>
&lt;td>전체 메일 다운로드로 많이 사용&lt;/td>
&lt;td>필요한 부분만 동기화하여 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 안정적인 전달&lt;br>- 낮은 리소스 사용&lt;br>- 높은 호환성&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 오프라인 사용 가능&lt;br>- 서버 부하 낮음&lt;br>- 구현 용이&lt;/td>
&lt;td>- 유연한 메일 관리&lt;br>- 다중 기기 지원&lt;br>- 서버 백업 용이&lt;br>- 부분 동기화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 기본 보안 기능 없음&lt;br>- 인증 제한적&lt;br>- 스팸 메일 취약&lt;br>- 첨부파일 크기 제한&lt;/td>
&lt;td>- 한 기기에서만 관리&lt;br>- 메일 동기화 어려움&lt;br>- 폴더 구조 제한&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 높은 서버 부하&lt;br>- 느린 초기 접속&lt;br>- 많은 서버 자원 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>기본적으로 없음 (SMTPS로 보안 추가 가능)&lt;/td>
&lt;td>기본적으로 없음 (POP3S로 보안 추가 가능)&lt;/td>
&lt;td>기본적으로 없음 (IMAPS로 보안 추가 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 명령어&lt;/td>
&lt;td>- HELO/EHLO&lt;br>MAIL FROM&lt;br>RCPT TO&lt;br>DATA&lt;br>QUIT&lt;/td>
&lt;td>- USER&lt;br>PASS&lt;br>LIST&lt;br>RETR&lt;br>DELE&lt;/td>
&lt;td>- SELECT&lt;br>FETCH&lt;br>STORE&lt;br>SEARCH&lt;br>EXPUNGE&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 이메일 프로토콜들은 다음과 같이 함께 동작한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>이메일 발송 과정:&lt;/p>
&lt;ul>
&lt;li>사용자가 이메일 작성&lt;/li>
&lt;li>SMTP를 통해 발송 서버로 전송&lt;/li>
&lt;li>발송 서버가 수신 서버로 SMTP를 통해 전달&lt;/li>
&lt;li>수신 서버에 메일 저장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이메일 수신 과정:&lt;/p>
&lt;ul>
&lt;li>POP3 사용 시: 모든 메일을 로컬로 다운로드&lt;/li>
&lt;li>IMAP 사용 시: 서버와 실시간 동기화하며 필요한 메일만 접근&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 프로토콜들의 조합으로 현대의 이메일 시스템이 안정적으로 작동하며, 특히 최근에는 보안과 다중 기기 지원이 중요해지면서 IMAP의 사용이 증가하는 추세이다.&lt;/p>
&lt;h4>SNMP / ICMP / NTP / RMON&lt;span class="hx-absolute -hx-mt-20" id="snmp--icmp--ntp--rmon">&lt;/span>
&lt;a href="#snmp--icmp--ntp--rmon" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>SNMP는 네트워크 장치의 상태를 모니터링하고 관리하는 데 사용되며, MIB를 통해 정보를 구조화한다.&lt;br>
Manager와 Agent 간의 통신으로 동작한다.&lt;/p>
&lt;p>ICMP는 네트워크 문제를 진단하고 오류를 보고하는 데 사용된다.&lt;br>
Ping과 Traceroute 같은 도구에서 활용되며, 연결 없이 메시지를 전송한다.&lt;/p>
&lt;p>NTP는 네트워크 상의 장치들 간에 시간을 동기화하는 데 사용된다.&lt;br>
계층적 구조를 통해 정확한 시간 정보를 전파하며, 네트워크 지연을 고려하여 시간을 조정한다.&lt;/p>
&lt;p>RMON은 SNMP의 확장된 형태로, 더 상세한 네트워크 모니터링 기능을 제공한다.&lt;/p>
&lt;p>모두 네트워크 관리와 운영에 중요한 역할을 하며, 각각의 특성에 따라 다양한 네트워크 기능을 지원한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SNMP (Simple Network Management Protocol)&lt;/th>
&lt;th>ICMP (Internet Control Message Protocol)&lt;/th>
&lt;th>NTP (Network Time Protocol)&lt;/th>
&lt;th>RMON (Remote Network Monitoring)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>네트워크 장비 및 시스템 관리 및 모니터링&lt;/td>
&lt;td>네트워크 오류 보고 및 진단&lt;/td>
&lt;td>컴퓨터 시스템 간 시간 동기화&lt;/td>
&lt;td>원격 네트워크 모니터링 및 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 네트워크 모니터링&lt;br>- 성능 관리&lt;br>- 장비 구성 관리&lt;br>- 문제 감지 및 보고&lt;/td>
&lt;td>- 오류 메시지 전송&lt;br>- 네트워크 연결성 테스트&lt;br>- 경로 진단&lt;br>- 라우터 광고/요청&lt;/td>
&lt;td>- 시간 정보 동기화&lt;br>- 지연시간 측정&lt;br>- 시간 서버 계층 구조 관리&lt;br>- 정밀한 시간 조정&lt;/td>
&lt;td>- 트래픽 모니터링&lt;br>- 통계 수집&lt;br>- 이력 데이터 관리&lt;br>- 알람 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 관리자/에이전트 구조&lt;br>GET/SET 명령 사용&lt;br>MIB 기반 정보 관리&lt;br>- 트랩 메시지 사용&lt;/td>
&lt;td>- IP 프로토콜 기반&lt;br>- 요청/응답 메시지&lt;br>- 타입과 코드로 메시지 구분&lt;br>TTL 기반 작동&lt;/td>
&lt;td>- 계층적 서버 구조&lt;br>UDP 포트 123 사용&lt;br>- 폴링 방식&lt;br>- 지터 버퍼 사용&lt;/td>
&lt;td>- SNMP 기반 동작&lt;br>- 프로브/콘솔 구조&lt;br>- 지속적 데이터 수집&lt;br>- 이벤트 기반 알림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- UDP 기반 통신&lt;br>- 비연결형 서비스&lt;br>- 간단한 구조&lt;br>- 확장 가능한 구조&lt;/td>
&lt;td>- IP의 필수 구성요소&lt;br>- 신뢰성 없는 전송&lt;br>- 제어 메시지 전용&lt;br>- 낮은 우선순위&lt;/td>
&lt;td>- 정밀한 시간 동기화&lt;br>- 계층적 구조&lt;br>- 지연 보상&lt;br>- 신뢰성 있는 동기화&lt;/td>
&lt;td>- 분산 모니터링&lt;br>- 상세한 통계&lt;br>- 이력 데이터 저장&lt;br>- 유연한 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 버전 1, 2c, 3 존재&lt;br>- 보안 기능 강화(v3)&lt;br>- 표준화된 관리 체계&lt;br>- 다양한 플랫폼 지원&lt;/td>
&lt;td>- Echo 요청/응답&lt;br>- 도달 불가 메시지&lt;br>- 리다이렉션 메시지&lt;br>- 시간 초과 메시지&lt;/td>
&lt;td>- 스트라텀 레벨 구조&lt;br>- 밀리초 단위 정확도&lt;br>- 서머타임 자동 조정&lt;br>- 루트 지연 계산&lt;/td>
&lt;td>- 상세한 모니터링&lt;br>- 이력 데이터 관리&lt;br>- 유연한 분석&lt;br>- 선제적 대응 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 쉬운 구현&lt;br>- 낮은 네트워크 부하&lt;br>- 통합 관리 가능&lt;br>- 자동화된 모니터링&lt;/td>
&lt;td>- 간단한 구조&lt;br>- 필수적인 오류 보고&lt;br>- 네트워크 진단 용이&lt;br>- 빠른 응답&lt;/td>
&lt;td>- 높은 정확도&lt;br>- 안정적인 동기화&lt;br>- 확장성&lt;br>- 자동 조정&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 구현 복잡성&lt;br>- 높은 저장공간 요구&lt;br>- 관리 부담&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 보안(v1,v2c)&lt;br>- 복잡한 설정(v3)&lt;br>- 대역폭 제한&lt;br>- 확장성 제한&lt;/td>
&lt;td>- 보안 취약성&lt;br>- 신뢰성 부족&lt;br>- 제한된 기능&lt;br>- 차단 가능성&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 네트워크 지연 영향&lt;br>- 보안 취약성&lt;br>- 높은 자원 사용&lt;/td>
&lt;td>- 네트워크 성능 분석&lt;br>- 트래픽 모니터링&lt;br>- 장애 예방&lt;br>- 용량 계획&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 포트&lt;/td>
&lt;td>UDP 161(요청), 162(트랩)&lt;/td>
&lt;td>IP 프로토콜 타입 1&lt;/td>
&lt;td>UDP 123&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>- 커뮤니티 문자열(v1,v2c)&lt;br>- 인증/암호화(v3)&lt;br>- 접근 제어&lt;br>- 보안 모델&lt;/td>
&lt;td>- 기본 보안 기능 없음&lt;br>- 필터링 필요&lt;br>- 제한된 보안&lt;/td>
&lt;td>- 인증 지원&lt;br>- 대칭키 암호화&lt;br>- 접근 제어&lt;br>NTPv4 보안 강화&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 네트워크 모니터링&lt;br>- 성능 관리&lt;br>- 장애 관리&lt;br>- 구성 관리&lt;/td>
&lt;td>- Ping 테스트&lt;br>- 경로 추적&lt;br>- 오류 보고&lt;br>- 네트워크 진단&lt;/td>
&lt;td>- 서버 시간 동기화&lt;br>- 로그 시간 동기화&lt;br>- 금융 거래 시간 동기화&lt;br>- 네트워크 시간 관리&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>ARP / RARP / DHCP / DNS&lt;span class="hx-absolute -hx-mt-20" id="arp--rarp--dhcp--dns">&lt;/span>
&lt;a href="#arp--rarp--dhcp--dns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이러한 프로토콜들은 각각의 고유한 역할을 통해 현대 네트워크의 기반을 형성한다.&lt;br>
특히:&lt;/p>
&lt;ul>
&lt;li>ARP는 로컬 네트워크에서의 주소 해석을 담당&lt;/li>
&lt;li>RARP는 역방향 주소 해석을 제공했으나 현재는 거의 사용되지 않음&lt;/li>
&lt;li>DHCP는 네트워크 구성의 자동화를 담당&lt;/li>
&lt;li>DNS는 도메인 이름 시스템의 근간을 형성&lt;br>
이들은 서로 보완적인 관계를 가지며, 현대 네트워크에서 필수적인 역할을 수행한다.&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>ARP (Address Resolution Protocol)&lt;/th>
&lt;th>RARP (Reverse ARP)&lt;/th>
&lt;th>DHCP (Dynamic Host Configuration Protocol)&lt;/th>
&lt;th>DNS (Domain Name System)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>UDP 67(서버), 68(클라이언트)&lt;/td>
&lt;td>UDP/TCP 53&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>IP 주소를 MAC 주소로 변환&lt;/td>
&lt;td>MAC 주소를 IP 주소로 변환&lt;/td>
&lt;td>자동 네트워크 구성&lt;/td>
&lt;td>도메인 이름을 IP 주소로 변환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- MAC 주소 검색&lt;br>ARP 캐시 관리&lt;br>- 브로드캐스트 요청&lt;br>- 유니캐스트 응답&lt;/td>
&lt;td>- IP 주소 요청&lt;br>- 부팅 시 IP 할당&lt;br>- 서버 기반 주소 관리&lt;br>- 하드웨어 주소 매핑&lt;/td>
&lt;td>- IP 주소 자동 할당&lt;br>- 네트워크 설정 제공&lt;br>- 임대 시간 관리&lt;br>- 주소 풀 관리&lt;/td>
&lt;td>- 이름 해석&lt;br>- 계층적 네임스페이스&lt;br>- 분산 데이터베이스&lt;br>- 캐싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. ARP 요청 브로드캐스트&lt;br>2. 대상 호스트 응답&lt;br>3. ARP 캐시 업데이트&lt;br>4. 통신 시작&lt;/td>
&lt;td>1. RARP 요청 브로드캐스트&lt;br>2. RARP 서버 응답&lt;br>3. IP 주소 할당&lt;br>4. 부팅 계속&lt;/td>
&lt;td>1. DHCP 발견&lt;br>2. DHCP 제안&lt;br>3. DHCP 요청&lt;br>4. DHCP 승인&lt;/td>
&lt;td>1. DNS 쿼리 전송&lt;br>2. 재귀적/반복적 검색&lt;br>3. 응답 수신&lt;br>4. 캐시 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 브로드캐스트 기반&lt;br>- 로컬 네트워크 한정&lt;br>- 캐시 사용&lt;br>- 자동 갱신&lt;/td>
&lt;td>- 서버 필요&lt;br>- 제한된 사용&lt;br>- 단순한 구조&lt;br>- 레거시 프로토콜&lt;/td>
&lt;td>- 클라이언트-서버 모델&lt;br>- 자동화된 설정&lt;br>- 중앙 관리&lt;br>- 동적 할당&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 분산 시스템&lt;br>- 캐시 메커니즘&lt;br>- 이중화 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 자동 주소 매핑&lt;br>- 간단한 구현&lt;br>- 효율적 동작&lt;br>- 자가 갱신&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 쉬운 구현&lt;br>- 중앙 관리&lt;br>- 일관성 보장&lt;/td>
&lt;td>- 자동화된 관리&lt;br>- 효율적인 주소 사용&lt;br>- 유연한 설정&lt;br>- 중앙 관리 용이&lt;/td>
&lt;td>- 사용자 친화적&lt;br>- 확장성&lt;br>- 유연성&lt;br>- 신뢰성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약성&lt;br>- 브로드캐스트 부하&lt;br>- 로컬 네트워크 제한&lt;br>ARP 스푸핑 위험&lt;/td>
&lt;td>- 서버 의존성&lt;br>- 제한된 기능&lt;br>- 확장성 부족&lt;br>- 현대 환경 부적합&lt;/td>
&lt;td>- 단일 장애점&lt;br>- 설정 복잡성&lt;br>- 보안 이슈&lt;br>- 서버 부하&lt;/td>
&lt;td>- 캐시 포이즈닝&lt;br>DNS 증폭 공격&lt;br>- 지연 가능성&lt;br>- 복잡한 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- LAN 통신&lt;br>IP 네트워킹&lt;br>- 게이트웨이 통신&lt;br>- 네트워크 연결&lt;/td>
&lt;td>- 디스크리스 워크스테이션&lt;br>- 단순 네트워크 구성&lt;br>- 레거시 시스템&lt;br>- 제한된 환경&lt;/td>
&lt;td>- 네트워크 자동 구성&lt;br>IP 주소 관리&lt;br>- 네트워크 설정 배포&lt;br>- 대규모 네트워크 관리&lt;/td>
&lt;td>- 웹 브라우징&lt;br>- 이메일 시스템&lt;br>- 네트워크 서비스&lt;br>- 도메인 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>IGMP / PIM&lt;span class="hx-absolute -hx-mt-20" id="igmp--pim">&lt;/span>
&lt;a href="#igmp--pim" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>두 프로토콜은 멀티캐스트 통신에서 서로 다른 역할을 수행하며 상호 보완적으로 동작한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>IGMP는 로컬 네트워크에서 멀티캐스트 그룹 관리를 담당하며:&lt;/p>
&lt;ul>
&lt;li>호스트의 그룹 가입/탈퇴 처리&lt;/li>
&lt;li>라우터의 그룹 멤버십 추적&lt;/li>
&lt;li>효율적인 멀티캐스트 전달 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>PIM은 네트워크 전반에서 멀티캐스트 라우팅을 담당하며:&lt;/p>
&lt;ul>
&lt;li>효율적인 멀티캐스트 트리 구성&lt;/li>
&lt;li>최적의 멀티캐스트 경로 계산&lt;/li>
&lt;li>다양한 네트워크 환경 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이 두 프로토콜의 조합으로 효율적인 멀티캐스트 통신이 가능해진다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IGMP (Internet Group Management Protocol)&lt;/th>
&lt;th>PIM (Protocol Independent Multicast)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 유형&lt;/td>
&lt;td>멀티캐스트 관리 프로토콜&lt;/td>
&lt;td>멀티캐스트 라우팅 프로토콜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>호스트와 라우터 간의 멀티캐스트 그룹 관리&lt;/td>
&lt;td>멀티캐스트 트래픽의 효율적인 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 모드&lt;/td>
&lt;td>- IGMPv1: 기본 질의/응답&lt;br>IGMPv2: 빠른 탈퇴 추가&lt;br>IGMPv3: 소스 필터링 지원&lt;/td>
&lt;td>- Dense Mode (DM)&lt;br>Sparse Mode (SM)&lt;br>Sparse-Dense Mode&lt;br>Bidirectional Mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 그룹 가입/탈퇴 관리&lt;br>- 멤버십 보고&lt;br>- 주기적인 질의&lt;br>- 그룹 상태 추적&lt;/td>
&lt;td>- 멀티캐스트 트리 구성&lt;br>- 최적 경로 계산&lt;br>RPF 확인&lt;br>RP 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 로컬 서브넷 범위&lt;br>IPv4/IPv6 지원&lt;br>- 질의/응답 기반&lt;br>- 상태 기반 프로토콜&lt;/td>
&lt;td>- 프로토콜 독립적&lt;br>- 유니캐스트 라우팅 활용&lt;br>- 확장성&lt;br>- 유연한 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 메시지 유형&lt;/td>
&lt;td>- Membership Query&lt;br>Membership Report&lt;br>Leave Group&lt;br>Group-Specific Query&lt;/td>
&lt;td>- Hello&lt;br>Join/Prune&lt;br>Assert&lt;br>Bootstrap&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. 라우터의 주기적 질의&lt;br>2. 호스트의 멤버십 보고&lt;br>3. 그룹 상태 유지&lt;br>4. 필요시 빠른 탈퇴&lt;/td>
&lt;td>1. 이웃 탐색&lt;br>2. 트리 구성&lt;br>3. 경로 최적화&lt;br>4. 주기적 갱신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 효율적인 그룹 관리&lt;br>- 빠른 응답성&lt;br>- 낮은 오버헤드&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 효율적인 트래픽 전달&lt;br>- 유연한 토폴로지&lt;br>- 다양한 모드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 범위&lt;br>- 보안 취약성&lt;br>- 버전 호환성 문제&lt;br>- 대역폭 제한&lt;/td>
&lt;td>- 복잡한 구성&lt;br>- 높은 리소스 사용&lt;br>- 관리 부담&lt;br>- 초기 설정 복잡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 환경&lt;/td>
&lt;td>- 로컬 네트워크&lt;br>- 엔드 시스템&lt;br>- 액세스 네트워크&lt;br>- 마지막 홉 라우터&lt;/td>
&lt;td>- 기업 네트워크&lt;br>- 서비스 제공자&lt;br>- 백본 네트워크&lt;br>- 대규모 네트워크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 버전별 기능 향상&lt;br>MLD와의 통합&lt;br>- 빠른 응답 메커니즘&lt;br>- 그룹별 관리&lt;/td>
&lt;td>- 다양한 동작 모드&lt;br>RP 기반 동작&lt;br>- 자동 RP 탐색&lt;br>- 경로 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 고려사항&lt;/td>
&lt;td>- 무단 가입 위험&lt;br>- 스누핑 취약성&lt;br>DoS 공격 가능성&lt;br>- 인증 메커니즘 부재&lt;/td>
&lt;td>- 인증 필요&lt;br>RP 보안&lt;br>- 경로 검증&lt;br>- 액세스 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Telnet / SSH&lt;span class="hx-absolute -hx-mt-20" id="telnet--ssh">&lt;/span>
&lt;a href="#telnet--ssh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>네트워크를 통해 원격 시스템에 접속하여 명령어를 실행할 수 있게 해주는 프로토콜.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>TELNET (TELecommunication NETwork)&lt;/th>
&lt;th>SSH (Secure Shell)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>23&lt;/td>
&lt;td>22&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 암호화 없음&lt;br>- 평문 전송&lt;br>- 기본적인 인증만 제공&lt;br>- 보안 취약&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 다중 인증 방식&lt;br>- 데이터 무결성 검증&lt;br>- 키 기반 인증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 원격 터미널 접속&lt;br>- 텍스트 기반 통신&lt;br>- 간단한 명령어 실행&lt;br>- 기본적인 세션 관리&lt;/td>
&lt;td>- 보안 원격 접속&lt;br>- 파일 전송(SFTP/SCP)&lt;br>- 포트 포워딩&lt;br>X11 포워딩&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 방식&lt;/td>
&lt;td>- 사용자명/비밀번호&lt;br>- 평문 전송&lt;br>- 단순 인증&lt;/td>
&lt;td>- 공개키/개인키&lt;br>- 비밀번호&lt;br>- 다중 인증&lt;br>- 인증서 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 특성&lt;/td>
&lt;td>- 평문 전송&lt;br>- 압축 없음&lt;br>- 무결성 검사 없음&lt;br>- 중간자 공격 취약&lt;/td>
&lt;td>- 암호화 전송&lt;br>- 압축 지원&lt;br>- 무결성 검사&lt;br>- 중간자 공격 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>세션 관리&lt;/td>
&lt;td>- 단순한 세션 관리&lt;br>- 연결 유지 기능 제한&lt;br>- 재접속 시 새로운 세션&lt;/td>
&lt;td>- 고급 세션 관리&lt;br>- 연결 유지 기능&lt;br>- 세션 재사용 가능&lt;br>- 다중 채널 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 적은 리소스 사용&lt;br>- 빠른 연결&lt;br>- 호환성 높음&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 다양한 기능&lt;br>- 확장성&lt;br>- 현대적 설계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 낮은 리소스 요구&lt;br>- 빠른 응답 속도&lt;br>- 널리 지원됨&lt;/td>
&lt;td>- 높은 보안성&lt;br>- 다양한 기능&lt;br>- 신뢰성&lt;br>- 표준화된 프로토콜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약&lt;br>- 기능 제한&lt;br>- 현대 환경 부적합&lt;br>- 데이터 노출 위험&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 구현 복잡성&lt;br>- 초기 설정 필요&lt;br>- 상대적으로 느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. 사용자 인증&lt;br>3. 터미널 에뮬레이션&lt;br>4. 명령어 전송/수신&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. 버전 협상&lt;br>3. 키 교환&lt;br>4. 인증&lt;br>5. 채널 설정&lt;br>6. 암호화된 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 사용 사례&lt;/td>
&lt;td>- 레거시 시스템 관리&lt;br>- 간단한 원격 접속&lt;br>- 제한된 환경&lt;br>- 테스트 목적&lt;/td>
&lt;td>- 서버 관리&lt;br>- 보안 파일 전송&lt;br>- 원격 명령 실행&lt;br>- 터널링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 상태&lt;/td>
&lt;td>사용 권장되지 않음&lt;/td>
&lt;td>현재 표준으로 사용 중&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>SSH의 주요 보안 기능:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>암호화&lt;/p>
&lt;ul>
&lt;li>대칭키 암호화&lt;/li>
&lt;li>비대칭키 암호화&lt;/li>
&lt;li>완벽한 전방 비밀성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인증 메커니즘&lt;/p>
&lt;ul>
&lt;li>공개키 인증&lt;/li>
&lt;li>비밀번호 인증&lt;/li>
&lt;li>호스트 기반 인증&lt;/li>
&lt;li>다중 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 무결성&lt;/p>
&lt;ul>
&lt;li>MAC (Message Authentication Code)&lt;/li>
&lt;li>해시 함수&lt;/li>
&lt;li>디지털 서명&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 원격 접속 프로토콜들은 시간이 지남에 따라 보안의 중요성이 증가하면서, TELNET에서 SSH로 대체되는 추세를 보이고 있다. 특히 기업 환경에서는 보안상의 이유로 SSH의 사용이 필수적이 되었다.&lt;/p>
&lt;h4>RIP / RIPv2 / RIPng / OSPF / EIGRP / IS-IS / BGP&lt;span class="hx-absolute -hx-mt-20" id="rip--ripv2--ripng--ospf--eigrp--is-is--bgp">&lt;/span>
&lt;a href="#rip--ripv2--ripng--ospf--eigrp--is-is--bgp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>각 라우팅 프로토콜의 주요 특성을 요약한 것이다.&lt;br>
각 프로토콜은 네트워크의 규모와 요구사항에 따라 선택되어 사용된다.&lt;br>
예를 들어, RIP는 소규모 네트워크에 적합하고, OSPF와 IS-IS는 대규모 네트워크에 적합하며, BGP는 인터넷 백본과 같은 초대규모 네트워크에 사용된다.&lt;/p>
&lt;p>라우팅 프로토콜들의 특징을 체계적으로 비교 분석하여 표로 정리해드리겠습니다. 각 프로토콜의 특성과 동작 방식을 상세하게 설명하여 이해를 돕도록 하겠습니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RIP (Routing Information Protocol) / RIPv2 (Routing Information Protocol version 2)&lt;/th>
&lt;th>RIPng (Routing Information Protocol next generation)&lt;/th>
&lt;th>OSPF (Open Shortest Path First)&lt;/th>
&lt;th>EIGRP (Enhanced Interior Gateway Routing Protocol)&lt;/th>
&lt;th>IS-IS (Intermediate System to Intermediate System)&lt;/th>
&lt;th>BGP (Border Gateway Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 유형&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>외부 게이트웨이 프로토콜(EGP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 알고리즘&lt;/td>
&lt;td>거리 벡터&lt;/td>
&lt;td>거리 벡터&lt;/td>
&lt;td>링크 스테이트&lt;/td>
&lt;td>하이브리드(DUAL)&lt;/td>
&lt;td>링크 스테이트&lt;/td>
&lt;td>경로 벡터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메트릭 계산 방식&lt;/td>
&lt;td>홉 카운트&lt;/td>
&lt;td>홉 카운트&lt;/td>
&lt;td>비용(대역폭)&lt;/td>
&lt;td>복합 메트릭(대역폭, 지연, 부하, 신뢰성)&lt;/td>
&lt;td>비용&lt;/td>
&lt;td>다양한 속성(AS 경로, 로컬 선호도 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>최대 홉 카운트&lt;/td>
&lt;td>15&lt;/td>
&lt;td>15&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수렴 속도&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>매우 빠름&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>업데이트 방식&lt;/td>
&lt;td>주기적(30초)&lt;/td>
&lt;td>주기적(30초)&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 규모&lt;/td>
&lt;td>소규모&lt;/td>
&lt;td>소규모&lt;/td>
&lt;td>대규모&lt;/td>
&lt;td>중대규모&lt;/td>
&lt;td>대규모&lt;/td>
&lt;td>초대규모(인터넷)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 구현 간단&lt;br>- 설정 쉬움&lt;br>- 제한된 확장성&lt;br>- 카운팅 투 인피니티 문제&lt;/td>
&lt;td>- IPv6 지원&lt;br>RIPv2 기반&lt;br>- 향상된 보안&lt;br>- 동일한 제한사항&lt;/td>
&lt;td>- 영역 기반 계층구조&lt;br>- 빠른 수렴&lt;br>- 대규모 확장성&lt;br>- 정확한 토폴로지 정보&lt;/td>
&lt;td>- Cisco 전용&lt;br>- 빠른 수렴&lt;br>- 효율적인 대역폭 사용&lt;br>- 유연한 경로 선택&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 벤더 중립적&lt;br>- 대규모 확장성&lt;br>- 빠른 수렴&lt;/td>
&lt;td>- 정책 기반 라우팅&lt;br>- 대규모 확장성&lt;br>- 풍부한 경로 속성&lt;br>AS 간 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 이해하기 쉬움&lt;br>- 적은 리소스 사용&lt;br>- 간단한 구현&lt;br>- 모든 벤더 지원&lt;/td>
&lt;td>- IPv6 네이티브 지원&lt;br>- 보안 강화&lt;br>- 간단한 구현&lt;br>- 기존 RIP 호환&lt;/td>
&lt;td>- 효율적인 대역폭 사용&lt;br>- 빠른 수렴&lt;br>- 계층적 설계&lt;br>- 뛰어난 확장성&lt;/td>
&lt;td>- 빠른 수렴&lt;br>- 효율적인 리소스 사용&lt;br>- 유연한 토폴로지&lt;br>- 부분 업데이트&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 벤더 중립성&lt;br>- 효율적인 라우팅&lt;br>IPv4/IPv6 통합 지원&lt;/td>
&lt;td>- 강력한 정책 제어&lt;br>- 뛰어난 확장성&lt;br>- 풍부한 경로 정보&lt;br>- 정교한 경로 선택&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 느린 수렴&lt;br>- 제한된 확장성&lt;br>- 비효율적 라우팅&lt;br>- 대역폭 낭비&lt;/td>
&lt;td>- 느린 수렴&lt;br>- 제한된 확장성&lt;br>IPv4 미지원&lt;br>- 홉 제한&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 리소스 요구&lt;br>- 복잡한 트러블슈팅&lt;br>- 많은 CPU/메모리 사용&lt;/td>
&lt;td>- Cisco 전용&lt;br>- 복잡한 메트릭&lt;br>- 라이센스 비용&lt;br>- 트러블슈팅 어려움&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 학습 곡선&lt;br>- 복잡한 트러블슈팅&lt;br>- 전문성 요구&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 느린 수렴&lt;br>- 높은 리소스 요구&lt;br>- 전문성 요구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 환경&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>IPv6 소규모 네트워크&lt;/td>
&lt;td>중대형 엔터프라이즈 네트워크&lt;/td>
&lt;td>Cisco 기반 네트워크&lt;/td>
&lt;td>대형 서비스 제공자 네트워크&lt;/td>
&lt;td>인터넷 서비스 제공자&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>RTP / RTCP / RTSP / SIP / H.323 / WebRTC / WebSocket&lt;span class="hx-absolute -hx-mt-20" id="rtp--rtcp--rtsp--sip--h323--webrtc--websocket">&lt;/span>
&lt;a href="#rtp--rtcp--rtsp--sip--h323--webrtc--websocket" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>RTP와 RTCP는 실시간 미디어 전송에 중점을 두고 있으며, RTSP는 스트리밍 미디어의 원격 제어에 사용된다.&lt;br>
SIP와 H.323은 VoIP와 화상 회의 등의 멀티미디어 통신 세션 설정에 사용되며, WebRTC는 웹 브라우저 기반의 실시간 통신을 WebSocket은 웹에서의 실시간 양방향 통신을 가능하게 한다.&lt;br>
각 프로토콜은 OSI 모델과 TCP/IP 모델에서 주로 응용 계층에 위치하지만, 실제 구현에서는 하위 계층의 프로토콜들과 함께 사용된다.&lt;br>
예를 들어, RTP는 주로 UDP를 기반으로 사용되며, SIP는 TCP나 UDP를 사용할 수 있다.&lt;br>
이러한 프로토콜들은 실시간 통신, 스트리밍 미디어, 인터넷 전화, 화상 회의 등 다양한 멀티미디어 애플리케이션에서 중요한 역할을 한다.&lt;br>
각 프로토콜의 특성과 장단점을 이해하면 적절한 상황에 맞는 프로토콜을 선택하여 효율적인 네트워크 통신을 구현할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RTP (Real-time Transport Protocol)&lt;/th>
&lt;th>RTCP (RTP Control Protocol)&lt;/th>
&lt;th>RTSP (Real Time Streaming Protocol)&lt;/th>
&lt;th>SIP (Session Initiation Protocol)&lt;/th>
&lt;th>H.323 (ITU-T H)&lt;/th>
&lt;th>WebRTC (Web Real-Time Communication)&lt;/th>
&lt;th>WebSocket&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>세션 계층 (5계층) / 표현 계층 (6계층)&lt;/td>
&lt;td>세션 계층 (5계층) / 표현 계층 (6계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>실시간 오디오/비디오 데이터 전송&lt;/td>
&lt;td>RTP 세션 모니터링 및 제어&lt;/td>
&lt;td>스트리밍 미디어 제어&lt;/td>
&lt;td>멀티미디어 세션 관리&lt;/td>
&lt;td>종합적인 멀티미디어 통신 제어&lt;/td>
&lt;td>브라우저 기반 실시간 통신&lt;/td>
&lt;td>웹 브라우저와 서버 간의 양방향 실시간 통신 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- 순차 번호 부여&lt;br>- 타임스탬프 관리&lt;br>- 페이로드 타입 식별&lt;br>- 미디어 동기화&lt;/td>
&lt;td>- QoS 모니터링&lt;br>- 세션 통계 수집&lt;br>- 참가자 식별&lt;br>- 세션 제어&lt;/td>
&lt;td>- 미디어 전송 제어&lt;br>- 재생/일시정지/정지&lt;br>- 세션 설정/해제&lt;br>- 미디어 속성 협상&lt;/td>
&lt;td>- 세션 설정/수정/종료&lt;br>- 사용자 위치 관리&lt;br>- 미디어 협상&lt;br>- 참가자 관리&lt;/td>
&lt;td>- 호 설정/해제&lt;br>- 대역폭 관리&lt;br>- 멀티포인트 제어&lt;br>- 보안 관리&lt;/td>
&lt;td>- P2P 연결&lt;br>- 미디어 스트리밍&lt;br>- 데이터 채널&lt;br>NAT 통과&lt;/td>
&lt;td>- 전이중 통신 지원&lt;br>- 실시간 양방향 데이터 교환&lt;br>- 단일 TCP 연결 유지&lt;br>- 연결 상태 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- UDP 기반 전송&lt;br>- 실시간 전송 최적화&lt;br>- 낮은 지연&lt;br>- 손실 허용&lt;/td>
&lt;td>- 주기적 보고&lt;br>- 제어 정보 전송&lt;br>- 대역폭 제한&lt;br>RTP 보완&lt;/td>
&lt;td>- TCP 기반&lt;br>- 상태 기반 프로토콜&lt;br>- 클라이언트-서버 모델&lt;br>HTTP 유사 구문&lt;/td>
&lt;td>- 텍스트 기반&lt;br>- 확장 가능&lt;br>- 독립적 동작&lt;br>- 모듈화 설계&lt;/td>
&lt;td>- 이진 프로토콜&lt;br>- 복잡한 구조&lt;br>- 종합적 기능&lt;br>- 엄격한 표준&lt;/td>
&lt;td>- 브라우저 내장&lt;br>- 표준 기반&lt;br>- 플러그인 불필요&lt;br>- 보안 중심&lt;/td>
&lt;td>- HTTP 기반 호환성&lt;br>- 지속적 연결 유지&lt;br>- 낮은 지연시간&lt;br>- 헤더 오버헤드 최소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 패킷 단위 전송&lt;br>- 헤더 정보 처리&lt;br>- 스트리밍 최적화&lt;br>- 버퍼 관리&lt;/td>
&lt;td>- 주기적 리포트 전송&lt;br>- 피드백 제공&lt;br>- 통계 수집&lt;br>- 성능 모니터링&lt;/td>
&lt;td>- 요청/응답 방식&lt;br>- 세션 추적&lt;br>- 상태 관리&lt;br>- 명령어 처리&lt;/td>
&lt;td>- 요청/응답 방식&lt;br>- 프록시 서버 활용&lt;br>- 등록 관리&lt;br>- 다이얼로그 관리&lt;/td>
&lt;td>- 게이트키퍼 중심&lt;br>- 엔드포인트 등록&lt;br>- 대역폭 제어&lt;br>- 서비스 품질 관리&lt;/td>
&lt;td>- ICE/STUN/TURN 활용&lt;br>- 미디어 협상&lt;br>- 시그널링 서버 활용&lt;br>- 보안 연결 수립&lt;/td>
&lt;td>- HTTP 핸드셰이크로 시작&lt;br>- 웹소켓 프로토콜로 업그레이드&lt;br>- 양방향 채널 수립&lt;br>- 프레임 기반 메시지 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 실시간 전송 최적화&lt;br>- 유연한 구조&lt;br>- 다양한 코덱 지원&lt;br>- 효율적 전송&lt;/td>
&lt;td>- 세션 품질 관리&lt;br>- 문제 진단 용이&lt;br>- 확장 가능&lt;br>- 효과적 모니터링&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 방화벽 통과 용이&lt;br>- 표준화된 제어&lt;br>- 확장성&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 높은 확장성&lt;br>- 쉬운 구현&lt;br>- 유연성&lt;/td>
&lt;td>- 완벽한 기능 세트&lt;br>- 높은 안정성&lt;br>QoS 보장&lt;br>- 표준화&lt;/td>
&lt;td>- 쉬운 통합&lt;br>- 강력한 보안&lt;br>- 개방형 표준&lt;br>- 크로스 플랫폼&lt;/td>
&lt;td>- 실시간성 보장&lt;br>- 서버 푸시 가능&lt;br>- 효율적인 리소스 사용&lt;br>HTTP 호환성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- QoS 보장 없음&lt;br>- 보안 기능 부족&lt;br>- 대역폭 오버헤드&lt;br>- 복잡한 구현&lt;/td>
&lt;td>- 추가 대역폭 필요&lt;br>- 제한된 제어&lt;br>- 지연 발생&lt;br>- 구현 복잡성&lt;/td>
&lt;td>- 상태 관리 부담&lt;br>TCP 지연&lt;br>- 제한된 기능&lt;br>- 보안 취약성&lt;/td>
&lt;td>- 초기 지연&lt;br>NAT 문제&lt;br>- 복잡한 보안&lt;br>- 오버헤드&lt;/td>
&lt;td>- 높은 복잡도&lt;br>- 무거운 구현&lt;br>- 높은 비용&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 브라우저 제한&lt;br>- 리소스 소모&lt;br>- 구형 브라우저 미지원&lt;br>- 복잡한 디버깅&lt;/td>
&lt;td>- 이전 브라우저 지원 제한&lt;br>- 연결 유지 부담&lt;br>- 프록시/방화벽 제한&lt;br>- 재연결 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 스트리밍 서비스&lt;br>VoIP&lt;br>- 화상 회의&lt;br>- 실시간 방송&lt;/td>
&lt;td>- 스트리밍 품질 관리&lt;br>- 네트워크 모니터링&lt;br>- 성능 최적화&lt;br>- 문제 해결&lt;/td>
&lt;td>- 동영상 스트리밍&lt;br>- 미디어 서버 제어&lt;br>- 온디맨드 서비스&lt;br>- 라이브 방송&lt;/td>
&lt;td>- VoIP 서비스&lt;br>- 화상 통화&lt;br>- 인스턴트 메시징&lt;br>- 화상 회의&lt;/td>
&lt;td>- 기업용 화상 회의&lt;br>- 텔레프레즌스&lt;br>- 통합 커뮤니케이션&lt;br>- 원격 교육&lt;/td>
&lt;td>- 웹 기반 화상 채팅&lt;br>- 파일 공유&lt;br>- 실시간 게임&lt;br>- 원격 지원&lt;/td>
&lt;td>- 실시간 채팅&lt;br>- 실시간 데이터 피드&lt;br>- 온라인 게임&lt;br>- 실시간 모니터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>RADIUS / TACACS+&lt;span class="hx-absolute -hx-mt-20" id="radius--tacacs">&lt;/span>
&lt;a href="#radius--tacacs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>두 프로토콜 모두 네트워크 접근 제어와 보안 강화에 중요한 역할을 한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RADIUS (Remote Authentication Dial-In User Service)&lt;/th>
&lt;th>TACACS+ (Terminal Access Controller Access Control System Plus)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>UDP 1812(인증), 1813(과금)&lt;/td>
&lt;td>TCP 49&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>UDP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>네트워크 접근 인증, 권한 부여, 과금 관리&lt;/td>
&lt;td>네트워크 장비 접근 제어, 인증, 권한 부여, 감사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 사용자 인증&lt;br>- 접근 권한 부여&lt;br>- 서비스 과금&lt;br>- 네트워크 정책 적용&lt;/td>
&lt;td>- 상세한 명령어 제어&lt;br>- 세분화된 권한 관리&lt;br>- 감사 로깅&lt;br>- 중앙집중식 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. 클라이언트 접근 요청&lt;br>2. RADIUS 서버 인증&lt;br>3. 권한 부여&lt;br>4. 과금 정보 수집&lt;/td>
&lt;td>1. 사용자 로그인&lt;br>2. 명령어 권한 검증&lt;br>3. 상세 로깅&lt;br>4. 세션 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 패킷 헤더만 암호화&lt;br>- 통합된 인증/권한부여&lt;br>- 확장 가능한 속성&lt;br>- 간단한 구현&lt;/td>
&lt;td>- 전체 패킷 암호화&lt;br>- 분리된 AAA 기능&lt;br>- 상세한 명령어 제어&lt;br>- 강력한 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 패스워드만 암호화&lt;br>- 기본적인 보안&lt;br>- 제한된 암호화&lt;br>UDP 기반 취약성&lt;/td>
&lt;td>- 전체 세션 암호화&lt;br>- 강력한 보안&lt;br>TCP 기반 신뢰성&lt;br>- 상세한 감사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 사용됨&lt;br>- 구현 용이&lt;br>- 다양한 벤더 지원&lt;br>- 과금 기능 제공&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 상세한 제어&lt;br>- 명확한 감사&lt;br>- 확장성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 보안&lt;br>UDP 신뢰성 문제&lt;br>- 기본적 명령어 제어&lt;br>- 제한된 감사&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 복잡한 구성&lt;br>- 단일 벤더 의존&lt;br>- 높은 비용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AAA 기능 구현&lt;/td>
&lt;td>- 통합된 인증/권한부여&lt;br>- 단순한 과금&lt;br>- 기본적인 감사&lt;br>- 제한된 로깅&lt;/td>
&lt;td>- 분리된 AAA 처리&lt;br>- 상세한 권한 제어&lt;br>comprehensive 감사&lt;br>- 풍부한 로깅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>- 속성-값 쌍 확장&lt;br>- 벤더 특화 속성&lt;br>- 유연한 정책 설정&lt;br>- 다중 서버 지원&lt;/td>
&lt;td>- 상세한 명령어 제어&lt;br>- 계층적 권한 관리&lt;br>- 다양한 인증 방식&lt;br>- 그룹 기반 정책&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- ISP 서비스&lt;br>- 무선 네트워크&lt;br>VPN 접근&lt;br>- 원격 접속&lt;/td>
&lt;td>- 네트워크 장비 관리&lt;br>- 기업 인프라&lt;br>- 보안 중요 환경&lt;br>- 상세 접근 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 차이점과 용도는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>RADIUS는:&lt;/p>
&lt;ul>
&lt;li>대중적이고 광범위한 사용&lt;/li>
&lt;li>ISP 환경에 적합&lt;/li>
&lt;li>과금 기능 중심&lt;/li>
&lt;li>다양한 벤더 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TACACS+는:&lt;/p>
&lt;ul>
&lt;li>상세한 명령어 제어&lt;/li>
&lt;li>기업 네트워크 관리에 적합&lt;/li>
&lt;li>강력한 보안 기능&lt;/li>
&lt;li>Cisco 환경에 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>선택 시 고려사항:&lt;/p>
&lt;ul>
&lt;li>보안 요구사항&lt;/li>
&lt;li>네트워크 규모&lt;/li>
&lt;li>관리 복잡도&lt;/li>
&lt;li>비용 효율성&lt;/li>
&lt;/ul>
&lt;p>이러한 특성을 고려하여 환경에 맞는 프로토콜을 선택하는 것이 중요하다.&lt;/p>
&lt;h4>PPPoE / L2TP&lt;span class="hx-absolute -hx-mt-20" id="pppoe--l2tp">&lt;/span>
&lt;a href="#pppoe--l2tp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>PPPoE는 이더넷 상에서 PPP 연결을 제공하여 효율적인 사용자 접근 제어와 과금을 가능하게 한다.&lt;br>
L2TP는 VPN 구현에 사용되며, 다양한 L2 데이터 유형을 IP 네트워크를 통해 전송할 수 있게 해준다.&lt;br>
두 프로토콜 모두 네트워크 액세스에 중요한 역할을 하며, 각각의 특성에 따라 다양한 네트워크 환경에서 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>PPPoE (Point-to-Point Protocol over Ethernet)&lt;/th>
&lt;th>L2TP (Layer 2 Tunneling Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>데이터링크 계층 (2계층)&lt;/td>
&lt;td>데이터링크 계층 (2계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>네트워크 접근 계층&lt;/td>
&lt;td>네트워크 접근 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>이더넷 상에서 PPP 프레임 전송 및 세션 관리&lt;/td>
&lt;td>가상 사설망(VPN) 구현을 위한 터널링 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- PPP 세션 설정/해제&lt;br>- 인증 및 암호화&lt;br>- 대역폭 관리&lt;br>- 서비스 과금 지원&lt;/td>
&lt;td>- 터널 생성/관리&lt;br>- 데이터 캡슐화&lt;br>- 세션 관리&lt;br>- 멀티프로토콜 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 단계&lt;/td>
&lt;td>1. 발견 단계&lt;br>2. 세션 설정&lt;br>3. PPP 세션 시작&lt;br>4. 데이터 전송&lt;br>5. 세션 종료&lt;/td>
&lt;td>1. 터널 설정&lt;br>2. 세션 설정&lt;br>3. 데이터 전송&lt;br>4. 터널 유지관리&lt;br>5. 세션 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 연결 지향적&lt;br>- 세션 기반&lt;br>- 이더넷 프레임 사용&lt;br>- 점대점 연결&lt;/td>
&lt;td>- 터널링 프로토콜&lt;br>- 제어/데이터 분리&lt;br>UDP 기반&lt;br>- 다중 세션 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- PAP/CHAP 인증&lt;br>- 기본적인 암호화&lt;br>- 세션 격리&lt;br>- 접근 제어&lt;/td>
&lt;td>- 자체 보안 없음&lt;br>IPSec 결합 필요&lt;br>- 터널 인증&lt;br>- 데이터 무결성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 구조&lt;/td>
&lt;td>- PPPoE 헤더&lt;br>PPP 헤더&lt;br>- 이더넷 프레임&lt;br>- 페이로드&lt;/td>
&lt;td>- L2TP 헤더&lt;br>UDP 헤더&lt;br>IP 헤더&lt;br>- 페이로드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 널리 사용됨&lt;br>- 안정적인 연결&lt;br>- 과금 용이&lt;/td>
&lt;td>- 유연한 터널링&lt;br>- 프로토콜 독립적&lt;br>- 확장성&lt;br>NAT 통과 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 추가 오버헤드&lt;br>MTU 크기 제한&lt;br>- 성능 저하&lt;br>- 확장성 제한&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 보안 부족&lt;br>- 오버헤드&lt;br>- 추가 보안 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 광대역 인터넷 접속&lt;br>ADSL 서비스&lt;br>- 가정용 인터넷&lt;br>- 소규모 사무실&lt;/td>
&lt;td>- 기업 VPN&lt;br>- 원격 접속&lt;br>ISP 서비스&lt;br>- 사이트 간 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>- 기본적인 QoS&lt;br>- 대역폭 제어&lt;br>- 우선순위 지원&lt;br>- 세션별 제어&lt;/td>
&lt;td>- QoS 태그 전달&lt;br>- 터널 수준 QoS&lt;br>- 세션별 QoS&lt;br>DSCP 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>- 비교적 단순&lt;br>- 표준화된 구현&lt;br>- 쉬운 트러블슈팅&lt;br>- 적은 설정 필요&lt;/td>
&lt;td>- 상대적으로 복잡&lt;br>- 다양한 설정 필요&lt;br>- 전문성 요구&lt;br>- 세밀한 설정 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 활용 시나리오는 다음과 같다:&lt;/p>
&lt;p>PPPoE는:&lt;/p>
&lt;ul>
&lt;li>가정용 광대역 인터넷 연결&lt;/li>
&lt;li>ADSL/VDSL 서비스&lt;/li>
&lt;li>소규모 사무실 네트워크&lt;/li>
&lt;li>ISP 가입자 관리&lt;/li>
&lt;/ul>
&lt;p>L2TP는:&lt;/p>
&lt;ul>
&lt;li>기업용 VPN 구축&lt;/li>
&lt;li>원격 사무실 연결&lt;/li>
&lt;li>보안 터널링 요구 환경&lt;/li>
&lt;li>복잡한 네트워크 구성&lt;/li>
&lt;/ul>
&lt;p>이러한 특성을 고려하여 네트워크 환경과 요구사항에 맞는 프로토콜을 선택하는 것이 중요하다.&lt;br>
PPPoE는 단순하고 안정적인 연결이 필요한 경우에, L2TP는 더 복잡하고 유연한 터널링이 필요한 경우에 적합하다.&lt;/p>
&lt;h4>LDAP / SAML / Kerberos / OpenID Connect / SCIM&lt;span class="hx-absolute -hx-mt-20" id="ldap--saml--kerberos--openid-connect--scim">&lt;/span>
&lt;a href="#ldap--saml--kerberos--openid-connect--scim" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 프로토콜들은 모두 사용자 인증, 권한 부여, 또는 ID 관리와 관련된 기능을 제공하며, 주로 응용 계층에서 동작한다.&lt;br>
각 프로토콜은 특정 사용 사례와 환경에 맞게 설계되어 있어, 조직의 요구사항에 따라 적절한 프로토콜을 선택하여 사용할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>LDAP (Lightweight Directory Access Protocol)&lt;/th>
&lt;th>SAML (Security Assertion Markup Language)&lt;/th>
&lt;th>Kerberos&lt;/th>
&lt;th>OpenID Connect&lt;/th>
&lt;th>SCIM (System for Cross-domain Identity Management)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>TCP 389 (LDAPS: 636)&lt;/td>
&lt;td>HTTP 기반&lt;/td>
&lt;td>TCP 88&lt;/td>
&lt;td>HTTPS 기반&lt;/td>
&lt;td>HTTPS 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>디렉터리 서비스 접근 및 관리&lt;/td>
&lt;td>기업 간 SSO 인증&lt;/td>
&lt;td>네트워크 인증&lt;/td>
&lt;td>OAuth 2.0 기반 인증 및 인가&lt;/td>
&lt;td>사용자 신원 정보 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- 디렉터리 검색&lt;br>- 사용자/그룹 관리&lt;br>- 속성 조회/수정&lt;br>- 조직 구조 관리&lt;/td>
&lt;td>- SSO 제공&lt;br>- 인증 정보 교환&lt;br>- 권한 위임&lt;br>- 페더레이션&lt;/td>
&lt;td>- 티켓 기반 인증&lt;br>- 상호 인증&lt;br>- 세션 관리&lt;br>- 키 분배&lt;/td>
&lt;td>- 인증&lt;br>- 사용자 정보 제공&lt;br>- 토큰 관리&lt;br>OAuth 2.0 확장&lt;/td>
&lt;td>- 신원 정보 동기화&lt;br>- 프로비저닝&lt;br>- 사용자 관리&lt;br>API 표준화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 클라이언트-서버 모델&lt;br>- 바인딩 및 검색&lt;br>- 트리 구조 탐색&lt;br>- 필터링&lt;/td>
&lt;td>- XML 기반 통신&lt;br>IdP-SP 모델&lt;br>- 어설션 교환&lt;br>- 메타데이터 공유&lt;/td>
&lt;td>- 티켓 발급/검증&lt;br>TGT/ST 사용&lt;br>- 대칭키 암호화&lt;br>- 시간 동기화&lt;/td>
&lt;td>- REST/JSON 기반&lt;br>OAuth 2.0 흐름&lt;br>JWT 사용&lt;br>- 스코프 기반&lt;/td>
&lt;td>- REST API 기반&lt;br>JSON 스키마&lt;br>CRUD 작업&lt;br>- 벌크 작업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 확장 가능한 스키마&lt;br>- 읽기 최적화&lt;br>- 표준화된 인터페이스&lt;/td>
&lt;td>- 플랫폼 독립적&lt;br>XML 기반&lt;br>- 높은 보안성&lt;br>- 기업용 표준&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 단일 로그인&lt;br>- 시간 기반&lt;br>- 상호 인증&lt;/td>
&lt;td>- 경량화&lt;br>- 모바일 친화적&lt;br>OAuth 호환&lt;br>- 사용 편의성&lt;/td>
&lt;td>- 표준화된 API&lt;br>- 확장 가능&lt;br>- 플랫폼 독립적&lt;br>RESTful&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 사용됨&lt;br>- 효율적인 검색&lt;br>- 표준화&lt;br>- 확장성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 기업 환경 적합&lt;br>- 풍부한 생태계&lt;br>- 상호운용성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 중앙화된 인증&lt;br>- 검증된 방식&lt;br>- 효율적 관리&lt;/td>
&lt;td>- 구현 용이&lt;br>- 모던 웹 적합&lt;br>- 유연성&lt;br>JSON 기반&lt;/td>
&lt;td>- 표준화된 관리&lt;br>- 자동화 용이&lt;br>- 확장성&lt;br>- 통합 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 보안 취약성&lt;br>- 쓰기 성능&lt;br>- 변경 관리 어려움&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 높은 오버헤드&lt;br>XML 복잡성&lt;br>- 설정 어려움&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 시간 동기화 필요&lt;br>- 확장 어려움&lt;br>- 초기 설정 복잡&lt;/td>
&lt;td>- 보안 고려 필요&lt;br>- 표준 준수 중요&lt;br>- 토큰 관리&lt;br>- 범위 제한&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 표준 해석 차이&lt;br>- 보안 고려 필요&lt;br>- 초기 도입 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 기업 디렉터리&lt;br>- 사용자 관리&lt;br>- 인증/인가&lt;br>- 조직 정보 관리&lt;/td>
&lt;td>- 기업 SSO&lt;br>- 클라우드 서비스&lt;br>B2B 통합&lt;br>- 페더레이션&lt;/td>
&lt;td>- 윈도우 도메인&lt;br>- 기업 네트워크&lt;br>- 내부 시스템&lt;br>- 보안 환경&lt;/td>
&lt;td>- 소비자 서비스&lt;br>- 모바일 앱&lt;br>- 웹 서비스&lt;br>API 보안&lt;/td>
&lt;td>- ID 관리 자동화&lt;br>- 클라우드 통합&lt;br>- 사용자 동기화&lt;br>HR 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 프로토콜들은 각각의 용도에 따라 다음과 같이 활용된다:&lt;/p>
&lt;ol>
&lt;li>LDAP: 기업 내부의 디렉터리 서비스와 사용자 관리에 주로 사용된다.&lt;/li>
&lt;li>SAML: 기업 환경에서의 SSO와 페더레이션에 적합하다.&lt;/li>
&lt;li>Kerberos: 네트워크 수준의 강력한 인증이 필요한 환경에서 사용된다.&lt;/li>
&lt;li>OpenID Connect: 현대적인 웹/모바일 서비스의 인증에 적합하다.&lt;/li>
&lt;li>SCIM: 여러 시스템 간의 신원 정보 동기화에 사용된다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>SSH (Secure Shell)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssh/</link><pubDate>Mon, 23 Dec 2024 12:35:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssh/</guid><description>
&lt;h2>SSH (Secure Shell)&lt;span class="hx-absolute -hx-mt-20" id="ssh-secure-shell">&lt;/span>
&lt;a href="#ssh-secure-shell" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>SSH는 네트워크 상의 다른 컴퓨터에 안전하게 접속하기 위한 암호화 네트워크 프로토콜.&lt;br>
1995년 핀란드 헬싱키 공과대학의 타투 일로넨(Tatu Ylönen)이 개발했으며, 당시 빈번하게 발생하던 비밀번호 스니핑 공격에 대응하기 위해 만들어졌다.&lt;br>
기존의 텔넷(Telnet)이나 rsh(Remote Shell)와 같은 비보안 프로토콜을 대체하기 위해 설계되었다.&lt;/p>
&lt;h3>SSH의 주요 특징과 장점&lt;span class="hx-absolute -hx-mt-20" id="ssh의-주요-특징과-장점">&lt;/span>
&lt;a href="#ssh%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95%ea%b3%bc-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH는 다음과 같은 중요한 특징을 가지고 있다:&lt;/p>
&lt;ol>
&lt;li>강력한 암호화: 통신 내용을 암호화하여 데이터의 기밀성을 보장한다. 현재 SSH-2 버전에서는 AES, 3DES 등의 강력한 암호화 알고리즘을 사용한다.&lt;/li>
&lt;li>인증 메커니즘: 서버와 클라이언트 간의 상호 인증을 제공한다. 비밀번호 기반 인증뿐만 아니라, 공개키 기반의 인증도 지원하여 보다 안전한 인증이 가능하다.&lt;/li>
&lt;li>데이터 무결성: 통신 과정에서 데이터가 변조되지 않았음을 보장한다. MAC(Message Authentication Code)을 사용하여 데이터의 무결성을 검증한다.&lt;/li>
&lt;li>포트 포워딩: 로컬 포트 포워딩과 리모트 포트 포워딩을 통해 다른 프로토콜의 트래픽도 SSH 터널을 통해 안전하게 전송할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>SSH의 동작 방식&lt;span class="hx-absolute -hx-mt-20" id="ssh의-동작-방식">&lt;/span>
&lt;a href="#ssh%ec%9d%98-%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH의 동작 과정은 다음과 같은 단계로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>TCP 연결 수립&lt;br>
먼저 클라이언트와 서버 간에 TCP 연결이 수립된다.&lt;br>
기본적으로 22번 포트를 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프로토콜 버전 교환&lt;br>
클라이언트와 서버가 지원하는 SSH 프로토콜 버전을 교환한다.&lt;br>
현재는 대부분 SSH-2 버전을 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>키 교환&lt;br>
서버와 클라이언트는 세션 키를 생성하기 위한 키 교환 과정을 수행한다.&lt;br>
Diffie-Hellman 키 교환 알고리즘이 주로 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>인증&lt;br>
사용자 인증이 이루어진다.&lt;br>
다음과 같은 인증 방식이 지원된다:&lt;/p>
&lt;ul>
&lt;li>패스워드 인증&lt;/li>
&lt;li>공개키 인증&lt;/li>
&lt;li>키보드 인터랙티브 인증&lt;/li>
&lt;li>GSSAPI 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>세션 설정&lt;br>
인증이 완료되면 암호화된 채널이 설정되고, 실제 데이터 통신이 시작된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>SSH의 주요 용도와 활용&lt;span class="hx-absolute -hx-mt-20" id="ssh의-주요-용도와-활용">&lt;/span>
&lt;a href="#ssh%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9a%a9%eb%8f%84%ec%99%80-%ed%99%9c%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH는 다양한 목적으로 활용된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>원격 시스템 관리:&lt;/p>
&lt;ul>
&lt;li>서버 원격 접속 및 관리&lt;/li>
&lt;li>시스템 설정 변경&lt;/li>
&lt;li>소프트웨어 설치 및 업데이트&lt;/li>
&lt;li>로그 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>파일 전송:&lt;/p>
&lt;ul>
&lt;li>SFTP(SSH File Transfer Protocol)를 통한 안전한 파일 전송&lt;/li>
&lt;li>SCP(Secure Copy)를 이용한 파일 복사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>터널링과 포트 포워딩:&lt;/p>
&lt;ul>
&lt;li>다른 프로토콜의 암호화된 통신&lt;/li>
&lt;li>방화벽 우회&lt;/li>
&lt;li>VPN 대체&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>자동화된 작업:&lt;/p>
&lt;ul>
&lt;li>스크립트를 통한 자동화된 시스템 관리&lt;/li>
&lt;li>배치 작업 실행&lt;/li>
&lt;li>지속적 통합/배포(CI/CD) 파이프라인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>SSH 보안 강화 방안&lt;span class="hx-absolute -hx-mt-20" id="ssh-보안-강화-방안">&lt;/span>
&lt;a href="#ssh-%eb%b3%b4%ec%95%88-%ea%b0%95%ed%99%94-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH를 더욱 안전하게 사용하기 위한 주요 보안 설정:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>인증 관련:&lt;/p>
&lt;ul>
&lt;li>공개키 인증 사용 권장&lt;/li>
&lt;li>루트 로그인 비활성화&lt;/li>
&lt;li>강력한 비밀번호 정책 적용&lt;/li>
&lt;li>허용된 사용자만 접속 가능하도록 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>설정 관련:&lt;/p>
&lt;ul>
&lt;li>기본 포트 변경&lt;/li>
&lt;li>프로토콜 버전 2만 허용&lt;/li>
&lt;li>유휴 세션 타임아웃 설정&lt;/li>
&lt;li>로그인 시도 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>암호화 관련:&lt;/p>
&lt;ul>
&lt;li>강력한 암호화 알고리즘 사용&lt;/li>
&lt;li>취약한 암호화 알고리즘 비활성화&lt;/li>
&lt;li>정기적인 키 교체&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>모니터링:&lt;/p>
&lt;ul>
&lt;li>로그 모니터링 강화&lt;/li>
&lt;li>비정상 접속 시도 감시&lt;/li>
&lt;li>정기적인 보안 감사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>최신 트렌드와 발전 방향&lt;span class="hx-absolute -hx-mt-20" id="최신-트렌드와-발전-방향">&lt;/span>
&lt;a href="#%ec%b5%9c%ec%8b%a0-%ed%8a%b8%eb%a0%8c%eb%93%9c%ec%99%80-%eb%b0%9c%ec%a0%84-%eb%b0%a9%ed%96%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH는 계속해서 발전하고 있으며, 다음과 같은 트렌드가 있다:&lt;/p>
&lt;ul>
&lt;li>양자 내성 암호화 알고리즘 도입 준비&lt;/li>
&lt;li>클라우드 환경에서의 SSH 관리 자동화&lt;/li>
&lt;li>제로 트러스트 아키텍처와의 통합&lt;/li>
&lt;li>생체 인증 등 새로운 인증 방식 도입&lt;/li>
&lt;li>컨테이너와 마이크로서비스 환경에서의 SSH 활용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>멱등성 (Idempotency)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency/</link><pubDate>Mon, 14 Oct 2024 16:31:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency/</guid><description>
&lt;h2>멱등성 (Idempotency)&lt;span class="hx-absolute -hx-mt-20" id="멱등성-idempotency">&lt;/span>
&lt;a href="#%eb%a9%b1%eb%93%b1%ec%84%b1-idempotency" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>동일한 요청을 여러 번 수행해도 시스템의 상태가 한 번 수행한 것과 동일한 결과를 보장하는 속성.&lt;br>
즉, 같은 작업을 반복해도 추가적인 부작용 없이 동일한 결과를 얻을 수 있다.&lt;/p>
&lt;h3>중요성&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>일관성 유지&lt;/strong>: 네트워크 문제나 중복 요청 상황에서도 시스템의 상태를 예측 가능하게 유지합니다.&lt;/li>
&lt;li>&lt;strong>오류 처리 단순화&lt;/strong>: 클라이언트가 안전하게 요청을 재시도할 수 있어 오류 처리가 간단해집니다.&lt;/li>
&lt;li>&lt;strong>장애 허용성&lt;/strong>: 네트워크 문제나 기타 중단에 더 잘 대처할 수 있어 신뢰성 있는 사용자 경험을 제공합니다.&lt;/li>
&lt;li>&lt;strong>데이터 무결성&lt;/strong>: 중복 작업이나 실패한 요청으로 인한 데이터 손상을 방지합니다.&lt;/li>
&lt;/ol>
&lt;h3>구현 방법&lt;span class="hx-absolute -hx-mt-20" id="구현-방법">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>고유 식별자 사용&lt;/strong>: 각 요청에 UUID 등의 고유 식별자를 할당하여 요청을 추적하고 식별합니다.&lt;/li>
&lt;li>&lt;strong>멱등성을 가진 HTTP 메서드 사용&lt;/strong>: GET, PUT, DELETE와 같은 멱등성을 가진 HTTP 메서드를 사용합니다.&lt;/li>
&lt;li>&lt;strong>멱등성 키 만료 시간 설정&lt;/strong>: 멱등성 키에 적절한 만료 시간을 설정하여 일정 기간 동안만 유효하도록 합니다.&lt;/li>
&lt;li>&lt;strong>응답 코드와 헤더 활용&lt;/strong>: 적절한 HTTP 상태 코드(예: 200, 201, 204)와 헤더(예: ETag, Last-Modified)를 사용하여 멱등성과 성공적인 처리를 나타냅니다.&lt;/li>
&lt;/ol>
&lt;h3>이점&lt;span class="hx-absolute -hx-mt-20" id="이점">&lt;/span>
&lt;a href="#%ec%9d%b4%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>신뢰성 향상&lt;/strong>: 예기치 않은 다중 변경을 방지하여 시스템의 신뢰성을 높입니다.&lt;/li>
&lt;li>&lt;strong>오류 처리 개선&lt;/strong>: 네트워크 실패나 중단 시 안전한 재시도를 가능하게 하여 오류 처리와 복구를 단순화합니다.&lt;/li>
&lt;li>&lt;strong>사용자 경험 개선&lt;/strong>: 일관된 결과와 중복 작업 방지로 사용자 경험을 향상시킵니다.&lt;/li>
&lt;li>&lt;strong>시스템 무결성 유지&lt;/strong>: 반복된 작업으로 인한 데이터 손상을 방지하여 데이터 무결성을 유지합니다.&lt;/li>
&lt;li>&lt;strong>확장성 지원&lt;/strong>: 안전한 재시도와 여러 서버 간 부하 분산을 가능하게 하여 확장성을 지원합니다.&lt;/li>
&lt;/ol>
&lt;h3>HTTP 메서드별 멱등성&lt;span class="hx-absolute -hx-mt-20" id="http-메서드별-멱등성">&lt;/span>
&lt;a href="#http-%eb%a9%94%ec%84%9c%eb%93%9c%eb%b3%84-%eb%a9%b1%eb%93%b1%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>HTTP 메서드&lt;/th>
&lt;th>멱등성&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GET&lt;/td>
&lt;td>O&lt;/td>
&lt;td>리소스를 조회하는 용도로, 여러 번 요청해도 동일한 결과 반환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HEAD&lt;/td>
&lt;td>O&lt;/td>
&lt;td>GET과 유사하지만 헤더 정보만 반환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OPTIONS&lt;/td>
&lt;td>O&lt;/td>
&lt;td>서버가 지원하는 메서드 정보를 반환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PUT&lt;/td>
&lt;td>O&lt;/td>
&lt;td>리소스를 대체하거나 생성하며, 여러 번 요청해도 결과는 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DELETE&lt;/td>
&lt;td>O&lt;/td>
&lt;td>리소스를 삭제하며, 여러 번 요청해도 서버 상태는 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>POST&lt;/td>
&lt;td>X&lt;/td>
&lt;td>새로운 리소스를 생성하거나 추가하므로 멱등성을 갖지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PATCH&lt;/td>
&lt;td>△&lt;/td>
&lt;td>리소스의 부분 수정에 사용되며, 구현에 따라 멱등할 수도 있고 아닐 수도 있음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>멱등성을 갖는 메서드는 네트워크 오류 시 안전하게 재시도할 수 있어 신뢰성 있는 통신에 유용하다.&lt;br>
그러나 멱등성이 있다고 해서 항상 서버의 상태를 변경하지 않는 것은 아니며, 안전한(safe) 메서드와는 구별해야 한다.&lt;/p>
&lt;h3>멱등성 구현을 위한 패턴&lt;span class="hx-absolute -hx-mt-20" id="멱등성-구현을-위한-패턴">&lt;/span>
&lt;a href="#%eb%a9%b1%eb%93%b1%ec%84%b1-%ea%b5%ac%ed%98%84%ec%9d%84-%ec%9c%84%ed%95%9c-%ed%8c%a8%ed%84%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>멱등성 키 사용&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@PostMapping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/payments&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processPayment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nd">@RequestHeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Idempotency-Key&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idempotencyKey&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@RequestBody&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 이미 처리된 요청인지 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Optional&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">PaymentResponse&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">existingResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">idempotencyRepository&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findByKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idempotencyKey&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">existingResponse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">existingResponse&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 새로운 결제 처리&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">paymentService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">idempotencyRepository&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idempotencyKey&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>조건부 요청 사용&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@PutMapping&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/resources/{id}&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResponseEntity&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Resource&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">updateResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@PathVariable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@RequestHeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;If-Match&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">etag&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@RequestBody&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Resource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Resource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">existing&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">resourceRepository&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">findById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">orElseThrow&lt;/span>&lt;span class="p">(()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResourceNotFoundException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// ETag 검증&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">existing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getETag&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">equals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">etag&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResponseEntity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">412&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Precondition Failed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Resource&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">updated&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">resourceRepository&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">resource&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ResponseEntity&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ok&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">updated&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>멱등성 테스트&lt;span class="hx-absolute -hx-mt-20" id="멱등성-테스트">&lt;/span>
&lt;a href="#%eb%a9%b1%eb%93%b1%ec%84%b1-%ed%85%8c%ec%8a%a4%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testIdempotency&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idempotencyKey&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UUID&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">randomUUID&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">00&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 요청&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">paymentController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processPayment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idempotencyKey&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 동일한 요청 반복&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PaymentResponse&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">paymentController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processPayment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idempotencyKey&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 두 응답이 동일한지 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getTransactionId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getTransactionId&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAmount&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">response2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAmount&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>멱등성 구현 시 주의사항&lt;span class="hx-absolute -hx-mt-20" id="멱등성-구현-시-주의사항">&lt;/span>
&lt;a href="#%eb%a9%b1%eb%93%b1%ec%84%b1-%ea%b5%ac%ed%98%84-%ec%8b%9c-%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>동시성 처리&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">IdempotencyService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReentrantLock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">executeIdempotently&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Supplier&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">action&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Optional&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">existingResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">findStoredResult&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">existingResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isPresent&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">existingResult&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">action&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">storeResult&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unlock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>타임아웃 처리&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">IdempotencyKeyRepository&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Cache&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">IdempotencyKeyRepository&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Caffeine&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">expireAfterWrite&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">24&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimeUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">HOURS&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">store&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>안전한 메서드 (Safe Methods)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/safe-methods/</link><pubDate>Mon, 14 Oct 2024 16:31:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/safe-methods/</guid><description>
&lt;h2>안전한 메서드 (Safe Methods)&lt;span class="hx-absolute -hx-mt-20" id="안전한-메서드-safe-methods">&lt;/span>
&lt;a href="#%ec%95%88%ec%a0%84%ed%95%9c-%eb%a9%94%ec%84%9c%eb%93%9c-safe-methods" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>서버의 상태를 변경하지 않는 HTTP 메서드.&lt;/p>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>리소스 변경 없음: 요청을 여러 번 보내도 서버의 상태가 동일하게 유지됩니다.&lt;/li>
&lt;li>읽기 전용 작업: 주로 데이터를 조회하는 용도로 사용됩니다.&lt;/li>
&lt;li>부작용 없음: 서버의 상태를 변경하지 않으므로 안전하게 여러 번 호출할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>중요성&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>신뢰성: 클라이언트가 서버의 상태를 변경하지 않고 안전하게 정보를 요청할 수 있습니다.&lt;/li>
&lt;li>캐싱 최적화: 안전한 메서드는 캐시하기에 적합하여 성능 향상에 도움이 됩니다.&lt;/li>
&lt;li>사용자 경험: 브라우저가 안전한 메서드를 자유롭게 호출할 수 있어 프리페칭 등의 기능을 구현할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>구현 방법&lt;span class="hx-absolute -hx-mt-20" id="구현-방법">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>읽기 전용 로직: 안전한 메서드 구현 시 서버의 상태를 변경하지 않는 로직만 포함해야 합니다.&lt;/li>
&lt;li>멱등성 보장: 안전한 메서드는 멱등성도 가져야 하므로, 여러 번 호출해도 동일한 결과를 반환하도록 구현합니다.&lt;/li>
&lt;li>예외 처리: 안전한 메서드가 서버 상태를 변경하지 않도록 주의깊게 예외를 처리해야 합니다.&lt;/li>
&lt;/ol>
&lt;h3>이점&lt;span class="hx-absolute -hx-mt-20" id="이점">&lt;/span>
&lt;a href="#%ec%9d%b4%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>성능 최적화: 안전한 메서드는 캐싱이 가능하여 네트워크 트래픽을 줄이고 응답 시간을 개선할 수 있습니다.&lt;/li>
&lt;li>보안 강화: 데이터를 변경하지 않으므로 무단 수정이나 삭제의 위험이 없습니다.&lt;/li>
&lt;li>확장성: 안전한 메서드는 프록시나 중간 계층에서 자유롭게 처리할 수 있어 시스템 확장성이 향상됩니다.&lt;/li>
&lt;/ol>
&lt;h3>HTTP 메서드별 안전성&lt;span class="hx-absolute -hx-mt-20" id="http-메서드별-안전성">&lt;/span>
&lt;a href="#http-%eb%a9%94%ec%84%9c%eb%93%9c%eb%b3%84-%ec%95%88%ec%a0%84%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>GET: 안전한 메서드. 리소스를 조회하는 용도로 사용됩니다.&lt;/li>
&lt;li>HEAD: 안전한 메서드. GET과 유사하지만 헤더 정보만 반환합니다.&lt;/li>
&lt;li>OPTIONS: 안전한 메서드. 서버가 지원하는 메서드 정보를 반환합니다.&lt;/li>
&lt;li>POST: 안전하지 않은 메서드. 새로운 리소스를 생성하거나 데이터를 제출합니다.&lt;/li>
&lt;li>PUT: 안전하지 않은 메서드. 리소스를 생성하거나 대체합니다.&lt;/li>
&lt;li>DELETE: 안전하지 않은 메서드. 지정된 리소스를 삭제합니다.&lt;/li>
&lt;li>PATCH: 안전하지 않은 메서드. 리소스의 부분적인 수정에 사용됩니다.&amp;mdash;&lt;/li>
&lt;/ol>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>멱등성 (Idempotency)과 안전한 메서드 (Safe Methods)의 비교</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency-and-safe-methods/</link><pubDate>Mon, 14 Oct 2024 00:49:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency-and-safe-methods/</guid><description>
&lt;h2>멱등성 (Idempotency)과 안전한 메서드 (Safe Methods)의 비교&lt;span class="hx-absolute -hx-mt-20" id="멱등성-idempotency과-안전한-메서드-safe-methods의-비교">&lt;/span>
&lt;a href="#%eb%a9%b1%eb%93%b1%ec%84%b1-idempotency%ea%b3%bc-%ec%95%88%ec%a0%84%ed%95%9c-%eb%a9%94%ec%84%9c%eb%93%9c-safe-methods%ec%9d%98-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>멱등성과 안전한 메서드는 HTTP 메서드의 중요한 특성으로, 서버의 상태 변화와 관련이 있다.&lt;/p>
&lt;p>멱등성(Idempotency)은 동일한 요청을 여러 번 수행해도 서버의 상태가 동일하게 유지되는 특성을 말한다.&lt;br>
즉, 요청을 한 번 보내는 것과 여러 번 연속으로 보내는 것이 같은 효과를 지니고, 서버의 상태도 동일하게 유지된다.&lt;/p>
&lt;p>안전한 메서드(Safe Methods)는 서버의 상태를 변경하지 않는 HTTP 메서드를 의미한다.&lt;br>
이는 주로 리소스를 조회하는 용도로 사용되며, 서버의 데이터나 상태를 수정하지 않는다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>멱등성&lt;/th>
&lt;th>안전한 메서드&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>동일한 요청을 여러 번 수행해도 서버의 상태가 같음&lt;/td>
&lt;td>서버의 상태를 변경하지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 상태 변경&lt;/td>
&lt;td>변경 가능, 단 여러 번 수행해도 결과가 같아야 함&lt;/td>
&lt;td>변경하지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>해당하는 HTTP 메서드&lt;/td>
&lt;td>GET, HEAD, PUT, DELETE, OPTIONS, TRACE&lt;/td>
&lt;td>GET, HEAD, OPTIONS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>관계&lt;/td>
&lt;td>모든 안전한 메서드는 멱등성을 가짐&lt;/td>
&lt;td>안전한 메서드는 항상 멱등성을 가짐&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 목적&lt;/td>
&lt;td>네트워크 오류 시 안전한 재시도 가능&lt;/td>
&lt;td>서버 상태 보호 및 캐싱 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>예시&lt;/td>
&lt;td>PUT: 리소스 대체, 여러 번 실행해도 결과 동일&lt;/td>
&lt;td>GET: 리소스 조회, 서버 상태 변경 없음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>멱등성을 가진 메서드가 반드시 안전한 것은 아니다.&lt;br>
예를 들어, PUT과 DELETE는 멱등성은 있지만 안전하지 않다.&lt;br>
반면, 모든 안전한 메서드는 멱등성을 갖는다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>CORS</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cors/</link><pubDate>Tue, 08 Oct 2024 07:13:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cors/</guid><description>
&lt;h2>CORS (Cross-Origin Resource Sharing)&lt;span class="hx-absolute -hx-mt-20" id="cors-cross-origin-resource-sharing">&lt;/span>
&lt;a href="#cors-cross-origin-resource-sharing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>다른 출처(Origin)의 리소스를 공유하기 위한 보안 메커니즘&lt;/li>
&lt;li>웹 브라우저에서 실행되는 보안 정책&lt;/li>
&lt;li>동일 출처 정책(Same-Origin Policy)의 제한을 안전하게 완화하는 방법&lt;/li>
&lt;/ul>
&lt;h4>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>동일 출처 정책(Same-Origin Policy)을 우회하면서도 안전한 교차 출처 요청을 가능하게 합니다.&lt;/li>
&lt;li>웹 애플리케이션의 기능성을 확장하고 다양한 도메인 간 리소스 공유를 허용합니다.&lt;/li>
&lt;/ul>
&lt;h4>작동 원리&lt;span class="hx-absolute -hx-mt-20" id="작동-원리">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>브라우저는 교차 출처 요청 시 Origin 헤더를 포함시킵니다.&lt;/li>
&lt;li>서버는 Access-Control-Allow-Origin 헤더로 허용된 출처를 지정합니다.&lt;/li>
&lt;/ul>
&lt;h4>요청 유형&lt;span class="hx-absolute -hx-mt-20" id="요청-유형">&lt;/span>
&lt;a href="#%ec%9a%94%ec%b2%ad-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>단순 요청 (Simple Request):
&lt;ul>
&lt;li>GET, HEAD, POST 메서드만 사용&lt;/li>
&lt;li>허용된 헤더만 사용&lt;/li>
&lt;li>Content-Type이 다음으로 제한:
&lt;ul>
&lt;li>application/x-www-form-urlencoded&lt;/li>
&lt;li>multipart/form-data&lt;/li>
&lt;li>text/plain&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>프리플라이트 요청(Preflight Request):
&lt;ul>
&lt;li>OPTIONS 메서드를 사용한 사전 검사&lt;/li>
&lt;li>실제 요청 전에 서버의 허가를 확인&lt;/li>
&lt;li>안전하지 않은 요청에 대한 보호&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>CORS 시나리오&lt;span class="hx-absolute -hx-mt-20" id="cors-시나리오">&lt;/span>
&lt;a href="#cors-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>단순 요청&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">1. 클라이언트 요청
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Origin: https://frontend.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 서버 응답
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Access-Control-Allow-Origin: https://frontend.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>예비 요청&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">1. 예비 요청 (OPTIONS)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Origin: https://frontend.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Access-Control-Request-Method: PUT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Access-Control-Request-Headers: Content-Type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2. 서버 응답
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Access-Control-Allow-Origin: https://frontend.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Access-Control-Allow-Methods: GET, POST, PUT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Access-Control-Allow-Headers: Content-Type
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3. 실제 요청
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [요청 내용]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4. 서버 응답
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> [응답 내용]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h4>주요 CORS 헤더&lt;span class="hx-absolute -hx-mt-20" id="주요-cors-헤더">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-cors-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>헤더&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Access-Control-Allow-Origin&lt;/td>
&lt;td>허용된 출처 지정&lt;/td>
&lt;td>&lt;code>Access-Control-Allow-Origin: https://example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access-Control-Allow-Methods&lt;/td>
&lt;td>허용된 HTTP 메서드&lt;/td>
&lt;td>&lt;code>Access-Control-Allow-Methods: GET, POST, PUT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access-Control-Allow-Headers&lt;/td>
&lt;td>허용된 헤더&lt;/td>
&lt;td>&lt;code>Access-Control-Allow-Headers: Content-Type&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access-Control-Max-Age&lt;/td>
&lt;td>예비 요청 캐시 시간&lt;/td>
&lt;td>&lt;code>Access-Control-Max-Age: 3600&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access-Control-Allow-Credentials&lt;/td>
&lt;td>인증 정보 허용&lt;/td>
&lt;td>&lt;code>Access-Control-Allow-Credentials: true&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>보안 고려사항&lt;span class="hx-absolute -hx-mt-20" id="보안-고려사항">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%95%88-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>CORS는 보안 메커니즘이 아니라 브라우저의 제한을 완화하는 방법&lt;/p>
&lt;ol>
&lt;li>기본 보안 원칙
&lt;ul>
&lt;li>필요한 출처만 허용&lt;/li>
&lt;li>와일드카드(*) 사용 제한&lt;/li>
&lt;li>중요한 API의 경우 더 엄격한 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인증 관련
&lt;ul>
&lt;li>Credentials 설정 시 와일드카드 사용 불가&lt;/li>
&lt;li>안전한 출처 검증&lt;/li>
&lt;li>토큰 기반 인증 권장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>&lt;strong>일반적인 CORS 에러&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="일반적인-cors-에러">&lt;/span>
&lt;a href="#%ec%9d%bc%eb%b0%98%ec%a0%81%ec%9d%b8-cors-%ec%97%90%eb%9f%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>에러 유형&lt;/th>
&lt;th>원인&lt;/th>
&lt;th>해결 방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>허용되지 않은 출처&lt;/td>
&lt;td>서버의 Allow-Origin 미설정&lt;/td>
&lt;td>적절한 출처 허용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메서드 미허용&lt;/td>
&lt;td>Allow-Methods 미설정&lt;/td>
&lt;td>필요한 메서드 허용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 미허용&lt;/td>
&lt;td>Allow-Headers 미설정&lt;/td>
&lt;td>필요한 헤더 허용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 관련&lt;/td>
&lt;td>Credentials 설정 문제&lt;/td>
&lt;td>인증 관련 설정 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>CORS 오류 해결 방법&lt;span class="hx-absolute -hx-mt-20" id="cors-오류-해결-방법">&lt;/span>
&lt;a href="#cors-%ec%98%a4%eb%a5%98-%ed%95%b4%ea%b2%b0-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>서버 측 설정
&lt;ul>
&lt;li>적절한 CORS 헤더 설정&lt;/li>
&lt;li>허용할 출처 명시&lt;/li>
&lt;li>필요한 메서드와 헤더 허용&lt;/li>
&lt;li>인증 관련 설정 조정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>프록시 사용
&lt;ul>
&lt;li>개발 환경에서 프록시 서버 설정&lt;/li>
&lt;li>API 게이트웨이 활용&lt;/li>
&lt;li>리버스 프록시 구성&amp;mdash;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Cookies</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cookies/</link><pubDate>Tue, 08 Oct 2024 07:12:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cookies/</guid><description>
&lt;h2>Cookies&lt;span class="hx-absolute -hx-mt-20" id="cookies">&lt;/span>
&lt;a href="#cookies" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>웹사이트가 사용자의 브라우저에 저장하는 작은 텍스트 파일&lt;/li>
&lt;li>클라이언트의 상태 정보를 저장하는 데 사용&lt;/li>
&lt;li>서버와 클라이언트 간의 상태를 유지하는 방법&lt;/li>
&lt;/ul>
&lt;h3>용도&lt;span class="hx-absolute -hx-mt-20" id="용도">&lt;/span>
&lt;a href="#%ec%9a%a9%eb%8f%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>인증
&lt;ul>
&lt;li>로그인 상태 유지&lt;/li>
&lt;li>사용자 식별&lt;/li>
&lt;li>세션 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개인화
&lt;ul>
&lt;li>사용자 선호 설정 저장&lt;/li>
&lt;li>테마 설정&lt;/li>
&lt;li>언어 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>트래킹
&lt;ul>
&lt;li>사용자 행동 분석&lt;/li>
&lt;li>광고 타겟팅&lt;/li>
&lt;li>방문 기록 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>쿠키의 종류&lt;span class="hx-absolute -hx-mt-20" id="쿠키의-종류">&lt;/span>
&lt;a href="#%ec%bf%a0%ed%82%a4%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>세션 쿠키: 브라우저 종료 시 삭제되는 임시 쿠키&lt;/li>
&lt;li>영구 쿠키: 지정된 만료 날짜까지 유지되는 쿠키&lt;/li>
&lt;li>보안 쿠키: HTTPS를 통해서만 전송되는 쿠키&lt;/li>
&lt;li>HttpOnly 쿠키: JavaScript에서 접근할 수 없는 쿠키&lt;/li>
&lt;li>퍼스트파티 쿠키: 현재 방문 중인 도메인에서 생성된 쿠키&lt;/li>
&lt;li>서드파티 쿠키: 다른 도메인에서 생성된 쿠키 (주로 광고 추적용)&lt;/li>
&lt;/ol>
&lt;h3>주요 속성&lt;span class="hx-absolute -hx-mt-20" id="주요-속성">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ec%86%8d%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>속성&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Name&lt;/td>
&lt;td>쿠키의 이름&lt;/td>
&lt;td>sessionId&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Value&lt;/td>
&lt;td>쿠키의 값&lt;/td>
&lt;td>abc123xyz&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain&lt;/td>
&lt;td>쿠키가 유효한 도메인&lt;/td>
&lt;td>.example.com&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Path&lt;/td>
&lt;td>쿠키가 유효한 경로&lt;/td>
&lt;td>/&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Expires/Max-Age&lt;/td>
&lt;td>쿠키 만료 시간&lt;/td>
&lt;td>Wed, 21 Oct 2024&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secure&lt;/td>
&lt;td>HTTPS에서만 전송&lt;/td>
&lt;td>Secure&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HttpOnly&lt;/td>
&lt;td>JS에서 접근 불가&lt;/td>
&lt;td>HttpOnly&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SameSite&lt;/td>
&lt;td>CSRF 방지 설정&lt;/td>
&lt;td>Strict, Lax, None&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>&lt;strong>쿠키 관리 및 보안&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="쿠키-관리-및-보안">&lt;/span>
&lt;a href="#%ec%bf%a0%ed%82%a4-%ea%b4%80%eb%a6%ac-%eb%b0%8f-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>보안 설정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">Set-Cookie: sessionId=abc123;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Secure;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> HttpOnly;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SameSite=Strict;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Domain=example.com;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Path=/;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Max-Age=3600&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>Secure:
&lt;ul>
&lt;li>이 플래그가 설정된 쿠키는 HTTPS 연결을 통해서만 전송됩니다.&lt;/li>
&lt;li>HTTP를 통한 전송을 방지하여 중간자 공격으로부터 보호합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>HttpOnly:
&lt;ul>
&lt;li>이 플래그가 설정된 쿠키는 JavaScript 등의 클라이언트 측 스크립트에서 접근할 수 없습니다.&lt;/li>
&lt;li>XSS(Cross-Site Scripting) 공격으로부터 보호하는 데 도움이 됩니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SameSite=Strict:
&lt;ul>
&lt;li>이 설정은 쿠키가 동일한 사이트의 요청에서만 전송되도록 제한합니다.&lt;/li>
&lt;li>CSRF(Cross-Site Request Forgery) 공격을 방지하는 데 도움이 됩니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Domain=example.com:
&lt;ul>
&lt;li>이 쿠키가 전송될 수 있는 도메인을 지정합니다.&lt;/li>
&lt;li>여기서는 example.com과 그 서브도메인에서만 쿠키가 사용될 수 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Path=/:
&lt;ul>
&lt;li>이 쿠키가 전송될 수 있는 URL 경로를 지정합니다.&lt;/li>
&lt;li>&amp;lsquo;/&amp;lsquo;는 도메인의 모든 경로에서 쿠키가 사용될 수 있음을 의미합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Max-Age=3600:
&lt;ul>
&lt;li>쿠키의 유효 기간을 초 단위로 설정합니다.&lt;/li>
&lt;li>여기서는 쿠키가 생성된 후 3600초(1시간) 동안 유효합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>주요 보안 고려사항&lt;/p>
&lt;ul>
&lt;li>XSS (Cross-Site Scripting) 방지&lt;/li>
&lt;li>CSRF (Cross-Site Request Forgery) 방지&lt;/li>
&lt;li>쿠키 탈취 방지&lt;/li>
&lt;li>민감 정보 저장 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>쿠키 작동 방식&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="쿠키-작동-방식">&lt;/span>
&lt;a href="#%ec%bf%a0%ed%82%a4-%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>쿠키 설정 과정
&lt;ol>
&lt;li>클라이언트가 웹사이트 방문&lt;/li>
&lt;li>서버가 Set-Cookie 헤더로 쿠키 전송&lt;/li>
&lt;li>브라우저가 쿠키 저장&lt;/li>
&lt;li>이후 요청시 자동으로 쿠키 전송&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>쿠키 전송 과정
&lt;ol>
&lt;li>브라우저가 HTTP 요청 준비&lt;/li>
&lt;li>유효한 쿠키 확인&lt;/li>
&lt;li>Cookie 헤더에 쿠키 포함&lt;/li>
&lt;li>서버로 요청 전송&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>쿠키의 한계와 대안&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="쿠키의-한계와-대안">&lt;/span>
&lt;a href="#%ec%bf%a0%ed%82%a4%ec%9d%98-%ed%95%9c%ea%b3%84%ec%99%80-%eb%8c%80%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>한계점&lt;/p>
&lt;ul>
&lt;li>크기 제한 (대략 4KB)&lt;/li>
&lt;li>보안 취약성&lt;/li>
&lt;li>브라우저 설정에 따른 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>대안 기술&lt;/p>
&lt;ul>
&lt;li>로컬 스토리지&lt;/li>
&lt;li>세션 스토리지&lt;/li>
&lt;li>IndexedDB&lt;/li>
&lt;li>Web SQL&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>HTTP Cache</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-cache/</link><pubDate>Tue, 08 Oct 2024 07:11:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-cache/</guid><description>
&lt;h2>HTTP Cache&lt;span class="hx-absolute -hx-mt-20" id="http-cache">&lt;/span>
&lt;a href="#http-cache" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>웹 브라우저나 서버에서 데이터를 임시 저장하는 기술&lt;/li>
&lt;li>동일한 리소스 요청 시 재사용하여 성능 향상&lt;/li>
&lt;li>서버 부하 감소와 사용자 경험 개선에 도움&lt;/li>
&lt;li>브라우저나 서버, CDN 등 다양한 위치에서 이루어질 수 있다.&lt;/li>
&lt;/ul>
&lt;h4>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>페이지 로드 시간 단축&lt;/li>
&lt;li>대역폭 사용량 감소&lt;/li>
&lt;li>서버 부하 감소&lt;/li>
&lt;/ol>
&lt;h4>&lt;strong>종류&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>브라우저 캐시 (Private Cache)&lt;/p>
&lt;ul>
&lt;li>개인 브라우저에 저장&lt;/li>
&lt;li>사용자별로 독립적&lt;/li>
&lt;li>예: 크롬, 파이어폭스의 캐시&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>공유 캐시 (Shared Cache)&lt;/p>
&lt;ul>
&lt;li>여러 사용자가 공유&lt;/li>
&lt;li>중간 서버에 저장&lt;/li>
&lt;li>예: CDN, 프록시 서버&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>캐시 제어 헤더&lt;span class="hx-absolute -hx-mt-20" id="캐시-제어-헤더">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ec%a0%9c%ec%96%b4-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>헤더&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Cache-Control&lt;/td>
&lt;td>캐시 동작 지정&lt;/td>
&lt;td>&lt;code>Cache-Control: max-age=3600&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Expires&lt;/td>
&lt;td>만료 일시 지정&lt;/td>
&lt;td>&lt;code>Expires: Wed, 21 Oct 2024 07:28:00 GMT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ETag&lt;/td>
&lt;td>리소스 버전 식별자&lt;/td>
&lt;td>&lt;code>ETag: &amp;quot;33a64df551425fcc55e4&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Last-Modified&lt;/td>
&lt;td>마지막 수정 시간&lt;/td>
&lt;td>&lt;code>Last-Modified: Wed, 21 Oct 2024 07:28:00 GMT&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Cache-Control 주요 지시어&lt;span class="hx-absolute -hx-mt-20" id="cache-control-주요-지시어">&lt;/span>
&lt;a href="#cache-control-%ec%a3%bc%ec%9a%94-%ec%a7%80%ec%8b%9c%ec%96%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>캐시 저장 관련&lt;/p>
&lt;ul>
&lt;li>public: 공유 캐시에 저장 가능&lt;/li>
&lt;li>private: 브라우저만 저장 가능&lt;/li>
&lt;li>no-store: 캐시 저장 안 함&lt;/li>
&lt;li>no-cache: 저장은 하되 재사용 전 검증 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>유효 기간 관련&lt;/p>
&lt;ul>
&lt;li>max-age=초단위: 캐시 유효 시간&lt;/li>
&lt;li>s-maxage=초단위: 공유 캐시 유효 시간&lt;/li>
&lt;li>must-revalidate: 만료 시 반드시 재검증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>캐시 동작 방식&lt;span class="hx-absolute -hx-mt-20" id="캐시-동작-방식">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>첫 번째 요청
&lt;ol>
&lt;li>`클라이언트가 리소스 요청&lt;/li>
&lt;li>서버가 리소스와 캐시 정보 응답&lt;/li>
&lt;li>브라우저가 응답을 캐시에 저장&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>이후 요청
&lt;ol>
&lt;li>캐시 유효성 확인&lt;/li>
&lt;li>유효하면 캐시에서 즉시 제공&lt;/li>
&lt;li>만료되었으면 서버에 재검증 요청&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h4>캐시 검증 방식&lt;span class="hx-absolute -hx-mt-20" id="캐시-검증-방식">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ea%b2%80%ec%a6%9d-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>
&lt;p>ETag 방식&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">클라이언트: If-None-Match: &amp;#34;이전_ETag값&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">서버 응답:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 304 Not Modified (변경 없음)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 200 OK (새로운 컨텐츠)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Last-Modified 방식&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">클라이언트: If-Modified-Since: 이전_수정일시
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">서버 응답:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 304 Not Modified (변경 없음)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 200 OK (새로운 컨텐츠)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h4>캐시 시나리오 예시&lt;span class="hx-absolute -hx-mt-20" id="캐시-시나리오-예시">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>정적 파일 캐싱
&lt;ul>
&lt;li>이미지, CSS, JavaScript 파일&lt;/li>
&lt;li>장기간 캐시 적용&lt;/li>
&lt;li>버전 관리로 업데이트&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>API 응답 캐싱
&lt;ul>
&lt;li>자주 변경되지 않는 데이터&lt;/li>
&lt;li>짧은 시간 캐시 적용&lt;/li>
&lt;li>적절한 검증 방식 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>캐시 전략&lt;span class="hx-absolute -hx-mt-20" id="캐시-전략">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>기본 전략
&lt;ul>
&lt;li>자주 변경되지 않는 리소스: 긴 캐시 기간&lt;/li>
&lt;li>자주 변경되는 리소스: 짧은 캐시 기간&lt;/li>
&lt;li>개인화된 콘텐츠: private 캐시&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>최적화 전략
&lt;ul>
&lt;li>파일명에 버전 포함&lt;/li>
&lt;li>URL 매개변수 활용&lt;/li>
&lt;li>적절한 캐시 계층 활용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>자주 발생하는 문제와 해결&lt;span class="hx-absolute -hx-mt-20" id="자주-발생하는-문제와-해결">&lt;/span>
&lt;a href="#%ec%9e%90%ec%a3%bc-%eb%b0%9c%ec%83%9d%ed%95%98%eb%8a%94-%eb%ac%b8%ec%a0%9c%ec%99%80-%ed%95%b4%ea%b2%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>문제&lt;/th>
&lt;th>원인&lt;/th>
&lt;th>해결 방법&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>캐시가 안됨&lt;/td>
&lt;td>잘못된 캐시 설정&lt;/td>
&lt;td>Cache-Control 헤더 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오래된 컨텐츠 제공&lt;/td>
&lt;td>캐시 만료 설정 부적절&lt;/td>
&lt;td>적절한 max-age 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>용량 문제&lt;/td>
&lt;td>과도한 캐시 저장&lt;/td>
&lt;td>캐시 정책 최적화&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>캐시 디버깅 방법&lt;span class="hx-absolute -hx-mt-20" id="캐시-디버깅-방법">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%eb%94%94%eb%b2%84%ea%b9%85-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>브라우저 도구 활용
&lt;ul>
&lt;li>개발자 도구 Network 탭&lt;/li>
&lt;li>캐시 동작 확인&lt;/li>
&lt;li>헤더 정보 분석&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>캐시 테스트
&lt;ul>
&lt;li>캐시 비우기&lt;/li>
&lt;li>강제 새로고침&lt;/li>
&lt;li>헤더 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>HTTP 캐싱을 구현할 때 주의해야 할 주요 사항&lt;span class="hx-absolute -hx-mt-20" id="http-캐싱을-구현할-때-주의해야-할-주요-사항">&lt;/span>
&lt;a href="#http-%ec%ba%90%ec%8b%b1%ec%9d%84-%ea%b5%ac%ed%98%84%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a3%bc%ec%9a%94-%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>과도한 캐싱 주의:&lt;br>
성능 향상을 위해 과도하게 공격적인 캐싱을 적용하면 오래된 데이터를 제공하거나 민감한 정보를 노출할 수 있습니다. max-age 지시문을 신중하게 사용하고, 중요한 리소스에는 must-revalidate를 적용해야 합니다.&lt;/li>
&lt;li>일관된 캐시 정책 유지:&lt;br>
애플리케이션 전체에 걸쳐 일관된 캐시 정책을 적용해야 합니다. 미들웨어를 사용하여 전역 캐시 정책을 설정하고, 정기적으로 캐시 설정을 감사하는 것이 좋습니다.&lt;/li>
&lt;li>동적 콘텐츠와 정적 콘텐츠 구분:&lt;br>
정적 리소스에는 공격적인 캐싱 전략을 사용할 수 있지만, 동적 콘텐츠에는 짧은 TTL 값과 no-store 같은 지시문을 사용하여 개인화된 데이터의 관련성을 유지해야 합니다.&lt;/li>
&lt;li>보안 고려:&lt;br>
민감한 정보가 포함된 페이지에는 no-store 지시문을 사용하여 브라우저나 중간 캐시에 저장되지 않도록 해야 합니다.&lt;/li>
&lt;li>캐시 무효화 전략:&lt;br>
콘텐츠가 변경될 때 캐시를 적절히 무효화하는 전략을 구현해야 합니다. ETag와 Last-Modified 헤더를 활용하여 효율적인 재검증을 수행할 수 있습니다.&lt;/li>
&lt;li>CDN과의 통합:&lt;br>
CDN을 사용할 때는 s-maxage 지시문을 활용하여 CDN 특정 캐싱 동작을 제어해야 합니다.&lt;/li>
&lt;li>클라이언트와 서버 측 캐싱 균형:&lt;br>
클라이언트 측(브라우저) 캐싱과 서버 측 캐싱을 적절히 조합하여 최적의 성능을 달성해야 합니다&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>WebSocket</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/websocket/</link><pubDate>Tue, 08 Oct 2024 04:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/websocket/</guid><description>
&lt;h2>WebSocket&lt;span class="hx-absolute -hx-mt-20" id="websocket">&lt;/span>
&lt;a href="#websocket" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;/p>
&lt;p>WebSocket은 HTTP를 기반으로 한 통신 프로토콜이지만, 연결이 수립된 후에는 HTTP와는 독립적으로 동작한다.&lt;br>
HTTP가 단방향 통신만을 지원하는 것과 달리, WebSocket은 전이중(Full-duplex) 통신을 지원한다.&lt;br>
이는 전화 통화처럼 양쪽에서 동시에 데이터를 주고받을 수 있다는 의미이다.&lt;br>
즉, 클라이언트와 서버 간의 지속적인 연결을 통해 양방향, 실시간 통신을 가능하게 하는 컴퓨터 통신 프로토콜이다.&lt;/p>
&lt;p>
&lt;img src="../web-socket.png" alt="Web Socket" loading="lazy" /> _Source: &lt;a href="https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96" target="_blank" rel="noopener">https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전이중 통신: 클라이언트와 서버가 동시에 데이터를 주고받을 수 있습니다.&lt;/li>
&lt;li>지속적 연결: 한 번 연결이 수립되면 계속 유지됩니다.&lt;/li>
&lt;li>실시간 데이터 전송: 서버에서 클라이언트로 요청 없이도 데이터를 전송할 수 있습니다.&lt;/li>
&lt;li>낮은 지연 시간: 연결이 유지되므로 데이터 전송 시 지연이 적습니다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실시간 통신: 채팅, 게임, 실시간 협업 도구 등에 적합하다.&lt;/li>
&lt;li>효율성: HTTP에 비해 오버헤드가 적어 네트워크 리소스를 효율적으로 사용한다.&lt;/li>
&lt;li>양방향 통신: 서버에서 클라이언트로의 푸시 알림이 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성: 연결 관리, 오류 처리 등 구현이 복잡할 수 있다.&lt;/li>
&lt;li>브라우저 지원: 일부 구형 브라우저에서는 지원되지 않을 수 있다.&lt;/li>
&lt;li>서버 부하: 많은 동시 연결을 유지해야 하므로 서버 리소스 사용이 증가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>핸드셰이크:&lt;br>
웹소켓 연결은 HTTP를 통해 시작된다.&lt;br>
클라이언트가 &amp;ldquo;Upgrade: websocket&amp;rdquo; 헤더를 포함한 요청을 보내면, 서버는 이를 수락하여 웹소켓 연결로 전환한다.&lt;/li>
&lt;li>데이터 전송:&lt;br>
연결이 수립된 후, 클라이언트와 서버는 웹소켓 프로토콜을 사용하여 데이터를 주고받는다.&lt;br>
데이터는 프레임 단위로 전송된다.&lt;/li>
&lt;li>연결 종료:&lt;br>
클라이언트나 서버 중 어느 한 쪽이 연결을 종료할 수 있다.&lt;/li>
&lt;/ol>
&lt;h4>연결 수립 과정 (Handshake)&lt;span class="hx-absolute -hx-mt-20" id="연결-수립-과정-handshake">&lt;/span>
&lt;a href="#%ec%97%b0%ea%b2%b0-%ec%88%98%eb%a6%bd-%ea%b3%bc%ec%a0%95-handshake" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>연결 수립 과정(Handshake)에 대해서 조금더 자세히 알아보도록 하자.&lt;/p>
&lt;p>먼저 클라이언트는 특별한 HTTP 요청을 서버에 보낸다. 이를 &amp;ldquo;WebSocket Handshake Request&amp;quot;라고 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-http" data-lang="http">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">GET&lt;/span> &lt;span class="nn">/chat&lt;/span> &lt;span class="kr">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Host&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">server.example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Upgrade&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">websocket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">Upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">dGhlIHNhbXBsZSBub25jZQ==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Origin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">http://example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Protocol&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">chat, superchat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">13&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>여기서 중요한 헤더들의 의미를 살펴보면:&lt;/p>
&lt;ul>
&lt;li>Upgrade와 Connection 헤더는 HTTP 연결을 WebSocket 연결로 업그레이드하겠다는 의미이다.&lt;/li>
&lt;li>Sec-WebSocket-Key는 연결의 보안을 위한 임의의 키값.&lt;/li>
&lt;li>Sec-WebSocket-Protocol은 클라이언트가 지원하는 서브프로토콜 목록.&lt;/li>
&lt;/ul>
&lt;p>서버는 이 요청에 대해 다음과 같은 응답을 보낸다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-http" data-lang="http">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span> &lt;span class="m">101&lt;/span> &lt;span class="ne">Switching Protocols&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Upgrade&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">websocket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">Upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Accept&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">s3pPLMBiTxaQ9kYGzzhZRbK+xOo=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Protocol&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">chat&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>연결이 수립된 후의 데이터 전송 방식도 주목할 만한 특징이 있다.&lt;br>
WebSocket은 데이터를 &amp;lsquo;프레임(Frame)&amp;lsquo;이라는 단위로 전송한다.&lt;br>
프레임의 구조는 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-------&amp;#43;-&amp;#43;-------------&amp;#43;-------------------------------&amp;#43;
|F|R|R|R| opcode|M| Payload len | Extended payload length |
|I|S|S|S| (4) |A| (7) | (16/64) |
|N|V|V|V| |S| | (if payload len==126/127) |
| |1|2|3| |K| | |
&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-------&amp;#43;-&amp;#43;-------------&amp;#43;-------------------------------&amp;#43;
| Extended payload length continued, if payload len == 127 |
&amp;#43;-------------------------------&amp;#43;-------------------------------&amp;#43;
| |Masking-key, if MASK set to 1 |
&amp;#43;-------------------------------&amp;#43;-------------------------------&amp;#43;
| Masking-key (continued) | Payload Data |
&amp;#43;-------------------------------- - - - - - - - - - - - - - - -&amp;#43;
: Payload Data continued ... :
&amp;#43; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &amp;#43;
| Payload Data continued ... |
&amp;#43;---------------------------------------------------------------&amp;#43;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>프레임의 각 필드가 하는 역할을 이해하는 것이 중요하다:&lt;/p>
&lt;ul>
&lt;li>FIN: 메시지의 마지막 프레임임을 나타낸다.&lt;/li>
&lt;li>RSV1-3: 확장을 위해 예약된 비트이다.&lt;/li>
&lt;li>Opcode: 프레임의 종류를 나타낸다(텍스트, 바이너리, 연결 종료 등).&lt;/li>
&lt;li>MASK: 페이로드가 마스킹되었는지를 나타낸다.&lt;/li>
&lt;li>Payload length: 페이로드의 길이를 나타낸다.&lt;/li>
&lt;/ul>
&lt;h3>WebSocket Protocol의 다양한 기능&lt;span class="hx-absolute -hx-mt-20" id="websocket-protocol의-다양한-기능">&lt;/span>
&lt;a href="#websocket-protocol%ec%9d%98-%eb%8b%a4%ec%96%91%ed%95%9c-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Ping/Pong 프레임:&lt;br>
연결이 여전히 살아있는지 확인하기 위해 사용된다.&lt;br>
서버나 클라이언트는 Ping 프레임을 보낼 수 있으며, 받는 쪽은 반드시 Pong으로 응답해야 한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// WebSocket에서 Ping/Pong 처리 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onping&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Ping received&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Pong은 자동으로 전송됩니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>Close 프레임:&lt;br>
연결을 정상적으로 종료할 때 사용된다.&lt;br>
상태 코드와 종료 이유를 포함할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프래그먼테이션(Fragmentation):&lt;br>
대용량 메시지를 여러 프레임으로 나누어 전송할 수 있다.&lt;br>
이는 네트워크 효율성을 높이고 메모리 사용을 최적화한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>WebSocket Protocol의 보안&lt;span class="hx-absolute -hx-mt-20" id="websocket-protocol의-보안">&lt;/span>
&lt;a href="#websocket-protocol%ec%9d%98-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>wss:// (WebSocket Secure):&lt;br>
TLS/SSL을 통한 암호화된 연결을 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Origin 검사:&lt;br>
브라우저는 WebSocket 연결 시 Origin 헤더를 포함시켜, 서버가 신뢰할 수 있는 출처의 연결만을 수락할 수 있게 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>마스킹:&lt;br>
클라이언트에서 서버로 전송되는 모든 프레임은 반드시 마스킹되어야 한다.&lt;br>
이는 캐시 포이즈닝과 같은 보안 공격을 방지한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>연결 관리&lt;/p>
&lt;ul>
&lt;li>연결이 끊어졌을 때의 재연결 로직 구현&lt;/li>
&lt;li>주기적인 연결 상태 확인 (heartbeat)&lt;/li>
&lt;li>적절한 에러 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안&lt;/p>
&lt;ul>
&lt;li>wss:// (WebSocket Secure) 프로토콜 사용&lt;/li>
&lt;li>메시지 검증&lt;/li>
&lt;li>사용자 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화&lt;/p>
&lt;ul>
&lt;li>적절한 메시지 크기 관리&lt;/li>
&lt;li>연결 수 제한&lt;/li>
&lt;li>효율적인 데이터 구조 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>HTTP Headers</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-headers/</link><pubDate>Mon, 07 Oct 2024 07:09:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-headers/</guid><description>
&lt;h2>HTTP Headers&lt;span class="hx-absolute -hx-mt-20" id="http-headers">&lt;/span>
&lt;a href="#http-headers" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>HTTP 요청이나 응답에서 전달할 부가적인 정보를 담는 데이터&lt;/li>
&lt;li>이름:값 형태로 구성됨 (예: Content-Type: application/json)&lt;/li>
&lt;li>클라이언트와 서버가 요청 또는 응답을 이해하는데 필요한 정보를 포함&lt;/li>
&lt;li>헤더 이름은 대소문자를 구분하지 않는다.&lt;/li>
&lt;/ul>
&lt;h4>&lt;strong>중요성&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>통신 제어
&lt;ul>
&lt;li>클라이언트와 서버 간의 통신 방법 결정&lt;/li>
&lt;li>캐싱 정책 설정&lt;/li>
&lt;li>보안 정책 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 최적화
&lt;ul>
&lt;li>캐시 제어를 통한 성능 향상&lt;/li>
&lt;li>압축을 통한 전송 효율화&lt;/li>
&lt;li>연결 관리를 통한 효율적인 통신&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안
&lt;ul>
&lt;li>인증 정보 전달&lt;/li>
&lt;li>CORS 정책 설정&lt;/li>
&lt;li>보안 관련 정책 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>주의해야 할 점&lt;span class="hx-absolute -hx-mt-20" id="주의해야-할-점">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>보안 관련
&lt;ul>
&lt;li>민감한 정보는 헤더에 노출하지 않기&lt;/li>
&lt;li>적절한 보안 헤더 사용하기&lt;/li>
&lt;li>HTTPS 사용 시 주의할 헤더들 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 관련
&lt;ul>
&lt;li>불필요한 헤더 제거&lt;/li>
&lt;li>헤더 크기 최적화&lt;/li>
&lt;li>적절한 캐시 헤더 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>헤더 사용 팁&lt;span class="hx-absolute -hx-mt-20" id="헤더-사용-팁">&lt;/span>
&lt;a href="#%ed%97%a4%eb%8d%94-%ec%82%ac%ec%9a%a9-%ed%8c%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>기본 원칙
&lt;ul>
&lt;li>필요한 헤더만 사용하기&lt;/li>
&lt;li>표준 헤더 우선 사용하기&lt;/li>
&lt;li>일관된 형식 유지하기&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>디버깅
&lt;ul>
&lt;li>브라우저 개발자 도구로 헤더 확인&lt;/li>
&lt;li>서버 로그에서 헤더 정보 확인&lt;/li>
&lt;li>API 테스트 도구 활용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>최적화
&lt;ul>
&lt;li>캐시 헤더 적절히 활용&lt;/li>
&lt;li>압축 관련 헤더 사용&lt;/li>
&lt;li>불필요한 헤더 제거&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>일반 헤더 (General Headers)
&lt;ul>
&lt;li>요청과 응답 모두에서 사용&lt;/li>
&lt;li>주요 예시:
&lt;ul>
&lt;li>Date: 메시지 생성 날짜와 시간&lt;/li>
&lt;li>Connection: 연결 관리 방법 (keep-alive, close)&lt;/li>
&lt;li>Cache-Control: 캐싱 정책&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>요청 헤더 (Request Headers)
&lt;ul>
&lt;li>클라이언트가 서버로 보내는 요청 정보&lt;/li>
&lt;li>주요 예시:
&lt;ul>
&lt;li>Host: 요청하는 서버의 도메인 이름&lt;/li>
&lt;li>User-Agent: 클라이언트 프로그램 정보&lt;/li>
&lt;li>Accept: 클라이언트가 받을 수 있는 데이터 타입&lt;/li>
&lt;li>Cookie: 쿠키 정보&lt;/li>
&lt;li>Authorization: 인증 정보&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>응답 헤더 (Response Headers)
&lt;ul>
&lt;li>서버가 클라이언트에게 보내는 응답 정보&lt;/li>
&lt;li>주요 예시:
&lt;ul>
&lt;li>Server: 서버 소프트웨어 정보&lt;/li>
&lt;li>Content-Type: 응답 데이터의 형식&lt;/li>
&lt;li>Set-Cookie: 쿠키 설정&lt;/li>
&lt;li>Location: 리다이렉션 주소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>엔티티 헤더 (Entity Headers)
&lt;ul>
&lt;li>메시지 본문에 대한 정보&lt;/li>
&lt;li>주요 예시:
&lt;ul>
&lt;li>Content-Length: 본문의 크기&lt;/li>
&lt;li>Content-Type: 본문의 미디어 타입&lt;/li>
&lt;li>Content-Encoding: 본문의 압축 방식&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>자주 사용되는 중요 헤더&lt;span class="hx-absolute -hx-mt-20" id="자주-사용되는-중요-헤더">&lt;/span>
&lt;a href="#%ec%9e%90%ec%a3%bc-%ec%82%ac%ec%9a%a9%eb%90%98%eb%8a%94-%ec%a4%91%ec%9a%94-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>요청 시 중요 헤더
&lt;ul>
&lt;li>Host: 서버의 도메인 이름&lt;/li>
&lt;li>Authorization: 인증 토큰이나 정보&lt;/li>
&lt;li>Accept: 받아들일 수 있는 콘텐츠 타입&lt;/li>
&lt;li>User-Agent: 클라이언트 정보&lt;/li>
&lt;li>Content-Type: 요청 본문의 타입&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>응답 시 중요 헤더
&lt;ul>
&lt;li>Content-Type: 응답 데이터 형식&lt;/li>
&lt;li>Content-Length: 응답 데이터 크기&lt;/li>
&lt;li>Set-Cookie: 쿠키 설정&lt;/li>
&lt;li>Cache-Control: 캐시 정책&lt;/li>
&lt;li>Access-Control-Allow-Origin: CORS 관련 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>보안과 관련된 헤더&lt;span class="hx-absolute -hx-mt-20" id="보안과-관련된-헤더">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%95%88%ea%b3%bc-%ea%b4%80%eb%a0%a8%eb%90%9c-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Strict-Transport-Security (HSTS): 브라우저가 HTTPS를 통해서만 웹사이트에 접근하도록 지시합니다.&lt;/li>
&lt;li>Content-Security-Policy (CSP): 웹사이트의 콘텐츠 보안 정책을 정의하여 XSS 공격 등을 방지합니다.&lt;/li>
&lt;li>X-Frame-Options: 클릭재킹 공격을 방지하기 위해 페이지가 프레임 내에서 렌더링되는 것을 제어합니다.&lt;/li>
&lt;li>X-XSS-Protection: 브라우저의 내장 XSS 필터를 제어하여 크로스 사이트 스크립팅 공격을 방지합니다.&lt;/li>
&lt;li>X-Content-Type-Options: MIME 타입 스니핑을 방지하여 콘텐츠 타입 관련 보안을 강화합니다.&lt;/li>
&lt;li>Access-Control-Allow-Origin: 크로스 오리진 리소스 공유(CORS)를 제어합니다.&lt;/li>
&lt;li>Cross-Origin-Resource-Policy: 크로스 오리진 리소스 정책을 설정하여 특정 요청으로부터 웹사이트를 보호합니다.&lt;/li>
&lt;li>Cross-Origin-Opener-Policy: 탑 레벨 문서가 크로스 오리진 문서와 브라우징 컨텍스트 그룹을 공유하는 것을 방지합니다.&lt;/li>
&lt;/ol>
&lt;h5>인증(authentication)과 관련된 주요 헤더&lt;span class="hx-absolute -hx-mt-20" id="인증authentication과-관련된-주요-헤더">&lt;/span>
&lt;a href="#%ec%9d%b8%ec%a6%9dauthentication%ea%b3%bc-%ea%b4%80%eb%a0%a8%eb%90%9c-%ec%a3%bc%ec%9a%94-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Authorization: 클라이언트가 서버에 인증 정보를 제공하는 데 사용되는 요청 헤더입니다. 다양한 인증 방식(Basic, Bearer, Digest 등)을 지원합니다.&lt;/li>
&lt;li>WWW-Authenticate: 서버가 클라이언트에게 인증 방법을 알려주는 응답 헤더입니다. 401 Unauthorized 응답과 함께 사용됩니다.&lt;/li>
&lt;li>Proxy-Authenticate: 프록시 서버가 클라이언트에게 인증 방법을 알려주는 응답 헤더입니다.&lt;/li>
&lt;li>Proxy-Authorization: 클라이언트가 프록시 서버에 인증 정보를 제공하는 요청 헤더입니다.&lt;/li>
&lt;/ol>
&lt;h5>캐시와 관련된 주요 헤더&lt;span class="hx-absolute -hx-mt-20" id="캐시와-관련된-주요-헤더">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c%ec%99%80-%ea%b4%80%eb%a0%a8%eb%90%9c-%ec%a3%bc%ec%9a%94-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Cache-Control: 가장 중요하고 유연한 캐시 헤더로, 누가 리소스를 캐시할 수 있는지, 리소스가 오래된 것으로 간주되기까지의 최대 시간, 그리고 기타 캐싱 동작을 지정합니다.&lt;/li>
&lt;li>Expires: 리소스가 오래된 것으로 간주되는 날짜와 시간을 제공합니다. Cache-Control: max-age가 일반적으로 선호되지만, Expires는 여전히 Cache-Control을 완전히 지원하지 않는 오래된 클라이언트에 유용합니다.&lt;/li>
&lt;li>ETag: 리소스 버전의 고유 식별자를 제공합니다. 클라이언트가 동일한 리소스를 다시 요청할 때 사용됩니다.&lt;/li>
&lt;li>Last-Modified: 리소스가 마지막으로 수정된 날짜와 시간을 제공합니다. ETag와 유사한 용도로 사용됩니다.&lt;/li>
&lt;li>Vary: 특정 요청 측면(예: User-Agent 또는 Accept-Encoding 헤더)에 따라 다른 버전의 캐시된 리소스를 제공하도록 지시합니다.&lt;/li>
&lt;/ol>
&lt;h4>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>웹페이지 요청시&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">GET /index.html HTTP/1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host: www.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Accept: text/html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User-Agent: Mozilla/5.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cookie: session=abc123&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>JSON API 요청시&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">POST /api/users HTTP/1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host: api.example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: application/json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Authorization: Bearer xyz789
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Accept: application/json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>HTTP Request Methods</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-request-methods/</link><pubDate>Mon, 07 Oct 2024 07:07:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-request-methods/</guid><description>
&lt;h2>HTTP Request Methods&lt;span class="hx-absolute -hx-mt-20" id="http-request-methods">&lt;/span>
&lt;a href="#http-request-methods" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>클라이언트가 서버에 특정 작업을 요청하기 위해 사용하는 방식&lt;/p>
&lt;blockquote>
&lt;p>멱등(冪等性, Idempotency)&lt;/p>
&lt;ul>
&lt;li>수학과 컴퓨터 과학에서 연산을 여러 번 적용하더라도 결과가 달라지지 않는 성질을 의미&lt;/li>
&lt;li>동일한 연산을 반복 수행해도 처음 수행한 것과 동일한 결과를 얻을 수 있는 특성&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>메서드&lt;/th>
&lt;th>목적&lt;/th>
&lt;th>요청 본문&lt;/th>
&lt;th>안전&lt;/th>
&lt;th>멱등&lt;/th>
&lt;th>캐시 가능&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>일반적인 응답 코드&lt;/th>
&lt;th>사용 예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>GET&lt;/td>
&lt;td>리소스 조회&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>O&lt;/td>
&lt;td>O&lt;/td>
&lt;td>O&lt;/td>
&lt;td>URI에 쿼리 파라미터 포함 가능&lt;/td>
&lt;td>200 OK&lt;/td>
&lt;td>GET /users?id=1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>POST&lt;/td>
&lt;td>리소스 생성 및 처리&lt;/td>
&lt;td>있음&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>조건부&lt;/td>
&lt;td>서버의 상태를 변경하며, 새 리소스의 URI를 반환할 수 있음&lt;/td>
&lt;td>201 Created&lt;/td>
&lt;td>POST /users&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PUT&lt;/td>
&lt;td>리소스 전체 생성 또는 수정&lt;/td>
&lt;td>있음&lt;/td>
&lt;td>X&lt;/td>
&lt;td>O&lt;/td>
&lt;td>X&lt;/td>
&lt;td>지정된 URI에 리소스가 없으면 생성하고, 있으면 대체함&lt;/td>
&lt;td>200 OK, 201 Created&lt;/td>
&lt;td>PUT /users/1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PATCH&lt;/td>
&lt;td>리소스 부분 수정&lt;/td>
&lt;td>있음&lt;/td>
&lt;td>X&lt;/td>
&lt;td>조건부&lt;/td>
&lt;td>X&lt;/td>
&lt;td>리소스의 일부만 업데이트, 구현에 따라 멱등할 수 있음&lt;/td>
&lt;td>200 OK, 204 No Content&lt;/td>
&lt;td>PATCH /users/1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DELETE&lt;/td>
&lt;td>리소스 삭제&lt;/td>
&lt;td>선택적&lt;/td>
&lt;td>X&lt;/td>
&lt;td>O&lt;/td>
&lt;td>X&lt;/td>
&lt;td>성공 시 대개 204 No Content 반환&lt;/td>
&lt;td>204 No Content&lt;/td>
&lt;td>DELETE /users/1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HEAD&lt;/td>
&lt;td>헤더 정보 조회&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>O&lt;/td>
&lt;td>O&lt;/td>
&lt;td>O&lt;/td>
&lt;td>GET과 동일하나 본문 제외&lt;/td>
&lt;td>200 OK&lt;/td>
&lt;td>HEAD /users&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OPTIONS&lt;/td>
&lt;td>통신 옵션 조회&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>O&lt;/td>
&lt;td>O&lt;/td>
&lt;td>X&lt;/td>
&lt;td>대상 리소스가 지원하는 메서드 목록을 반환하며, CORS에서 중요한 역할을 함&lt;/td>
&lt;td>200 OK&lt;/td>
&lt;td>OPTIONS /users&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TRACE&lt;/td>
&lt;td>루프백 테스트&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>O&lt;/td>
&lt;td>O&lt;/td>
&lt;td>X&lt;/td>
&lt;td>요청을 그대로 반환하여 경로를 따라가는 테스트를 수행하며, 보안상 비활성화되는 경우가 많음&lt;/td>
&lt;td>200 OK&lt;/td>
&lt;td>TRACE /debug&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CONNECT&lt;/td>
&lt;td>프록시 연결 수립&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>X&lt;/td>
&lt;td>프록시 서버를 통해 터널을 설정하여 SSL/TLS 등의 프로토콜을 사용한 통신에 활용됨&lt;/td>
&lt;td>200 OK&lt;/td>
&lt;td>&lt;code>CONNECT http://www.example.com:443/&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>HTTP Status Code</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-status-code/</link><pubDate>Mon, 07 Oct 2024 07:06:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-status-code/</guid><description>
&lt;h2>HTTP Status Code&lt;span class="hx-absolute -hx-mt-20" id="http-status-code">&lt;/span>
&lt;a href="#http-status-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>서버가 클라이언트의 요청에 대한 응답 상태를 나타내는 3자리 숫자.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>클래스&lt;/th>
&lt;th>코드&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>주요 사용 케이스&lt;/th>
&lt;th>관련 HTTP 메서드&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정보 응답&lt;/td>
&lt;td>100&lt;/td>
&lt;td>Continue&lt;/td>
&lt;td>대용량 파일 업로드 시 서버의 준비 상태 알림. 클라이언트가 전체 요청 전 서버의 수락 여부 확인&lt;/td>
&lt;td>POST, PUT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>101&lt;/td>
&lt;td>Switching Protocols&lt;/td>
&lt;td>웹소켓 연결 시작 시 프로토콜 전환 요청에 대한 응답&lt;/td>
&lt;td>GET&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성공 응답&lt;/td>
&lt;td>200&lt;/td>
&lt;td>OK&lt;/td>
&lt;td>GET: 리소스 성공적 조회. POST: 요청 성공 처리, 응답 본문에 결과 포함. PUT/PATCH: 리소스 업데이트 성공, 업데이트된 리소스 반환. DELETE: 삭제 성공, 추가 정보 제공&lt;/td>
&lt;td>GET, POST, PUT, PATCH, DELETE&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>201&lt;/td>
&lt;td>Created&lt;/td>
&lt;td>POST: 새 리소스 생성 성공. PUT: 특정 URI에 새 리소스 생성. 응답 헤더에 새 리소스의 URI 포함&lt;/td>
&lt;td>POST, PUT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>202&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>요청이 접수되었으나 처리는 완료되지 않음. 비동기 작업(대용량 데이터 처리, 백그라운드 작업 등)에 사용&lt;/td>
&lt;td>POST, PUT, DELETE, PATCH&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>204&lt;/td>
&lt;td>No Content&lt;/td>
&lt;td>DELETE: 리소스 삭제 성공, 추가 정보 불필요. PUT/PATCH: 리소스 업데이트 성공, 반환할 내용 없음&lt;/td>
&lt;td>DELETE, PUT, PATCH&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>206&lt;/td>
&lt;td>Partial Content&lt;/td>
&lt;td>GET: 클라이언트의 부분 요청 성공. 대용량 파일 다운로드나 미디어 스트리밍에 사용&lt;/td>
&lt;td>GET&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리다이렉션&lt;/td>
&lt;td>301&lt;/td>
&lt;td>Moved Permanently&lt;/td>
&lt;td>웹사이트 구조 변경으로 페이지 URL 영구 변경. 도메인 변경 시 이전 도메인에서 새 도메인으로 리다이렉트&lt;/td>
&lt;td>GET, POST&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>302&lt;/td>
&lt;td>Found&lt;/td>
&lt;td>임시 리다이렉션 (예: 유지보수 중 임시 페이지). A/B 테스팅에서 다른 버전 페이지로 리다이렉트&lt;/td>
&lt;td>GET, POST&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>304&lt;/td>
&lt;td>Not Modified&lt;/td>
&lt;td>브라우저 캐시 유효성 확인. 조건부 GET 요청에 대해 리소스 미변경 표시&lt;/td>
&lt;td>GET&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>307&lt;/td>
&lt;td>Temporary Redirect&lt;/td>
&lt;td>302와 유사하나 HTTP 메서드 변경 없이 임시 리다이렉트&lt;/td>
&lt;td>GET, POST, PUT, DELETE&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>클라이언트 에러&lt;/td>
&lt;td>400&lt;/td>
&lt;td>Bad Request&lt;/td>
&lt;td>잘못된 요청 구문 (예: 잘못된 JSON 형식). 필수 파라미터 누락 또는 유효하지 않은 값 전송&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>401&lt;/td>
&lt;td>Unauthorized&lt;/td>
&lt;td>보호된 리소스에 인증 없이 접근. 유효하지 않거나 만료된 인증 정보 제공&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>403&lt;/td>
&lt;td>Forbidden&lt;/td>
&lt;td>인증된 사용자의 접근 권한 없는 리소스 요청. IP 기반 접근 제한 적용&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>404&lt;/td>
&lt;td>Not Found&lt;/td>
&lt;td>요청 URL에 해당 리소스 없음. 삭제된 페이지나 잘못된 URL 요청&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>405&lt;/td>
&lt;td>Method Not Allowed&lt;/td>
&lt;td>허용되지 않는 HTTP 메서드로 리소스 접근 시도&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>409&lt;/td>
&lt;td>Conflict&lt;/td>
&lt;td>동시성 문제로 리소스 상태 충돌. 중복 데이터 생성 시도&lt;/td>
&lt;td>PUT, POST, DELETE&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>422&lt;/td>
&lt;td>Unprocessable Entity&lt;/td>
&lt;td>요청 형식은 올바르나 의미적으로 처리 불가 (예: 유효성 검사 실패)&lt;/td>
&lt;td>POST, PUT, PATCH&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>429&lt;/td>
&lt;td>Too Many Requests&lt;/td>
&lt;td>사용자의 요청 빈도 초과 (rate limiting). API 사용량 제한 초과&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 에러&lt;/td>
&lt;td>500&lt;/td>
&lt;td>Internal Server Error&lt;/td>
&lt;td>서버의 예기치 못한 오류. 처리되지 않은 예외 발생&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>502&lt;/td>
&lt;td>Bad Gateway&lt;/td>
&lt;td>프록시/게이트웨이가 업스트림 서버로부터 잘못된 응답 수신. 로드 밸런서 뒤 서버 다운&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>503&lt;/td>
&lt;td>Service Unavailable&lt;/td>
&lt;td>서버의 일시적 요청 처리 불가 (유지보수, 과부하). 계획된 다운타임 알림&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>504&lt;/td>
&lt;td>Gateway Timeout&lt;/td>
&lt;td>게이트웨이/프록시의 업스트림 서버 응답 대기 시간 초과. 마이크로서비스 응답 시간 초과&lt;/td>
&lt;td>모든 메서드&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>URI</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/uri/</link><pubDate>Mon, 07 Oct 2024 04:44:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/uri/</guid><description>
&lt;h2>URI (Uniform Resource Identifier)&lt;span class="hx-absolute -hx-mt-20" id="uri-uniform-resource-identifier">&lt;/span>
&lt;a href="#uri-uniform-resource-identifier" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 상의 자원을 고유하게 식별하기 위한 문자열로 URL과 URN은 모두 URI의 하위 개념이라고 볼 수 있다.&lt;/p>
&lt;p>기본구조:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">scheme:[//authority]path[?query][#fragment]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>대괄호([])로 표시된 부분은 선택적 요소이다.&lt;/p>
&lt;ul>
&lt;li>scheme: 어떤 종류의 리소스를 식별하는지, 그리고 어떤 방식으로 접근해야 하는지를 나타낸다.&lt;br>
특징:&lt;br>
- 항상 알파벳으로 시작해야 합니다&lt;br>
- 콜론(:)으로 다른 부분과 구분됩니다&lt;br>
- 대소문자를 구분하지 않습니다&lt;/li>
&lt;li>authority: 리소스를 관리하는 주체&lt;br>
세부구성:&lt;br>
- Userinfo (사용자 정보): 선택적 구성요소&lt;br>
- 보안상의 이유로 현대 웹에서는 권장되지 않습니다&lt;br>
- &amp;lsquo;@&amp;rsquo; 기호로 호스트와 구분됩니다&lt;br>
- &lt;strong>Host (호스트): 필수 구성요소&lt;/strong>&lt;br>
- 도메인 이름 또는 IP 주소가 올 수 있습니다&lt;br>
- 리소스가 위치한 서버를 식별합니다&lt;br>
- Port (포트): 선택적 구성요소&lt;br>
- 콜론(:)으로 시작합니다&lt;br>
- 생략 시 기본 포트가 사용됩니다 (http는 80, https는 443)&lt;/li>
&lt;li>path: 리소스의 경로&lt;br>
특징과 역할:&lt;br>
- 슬래시(/)로 시작합니다&lt;br>
- 계층적 구조를 나타냅니다&lt;br>
- 여러 세그먼트로 구성될 수 있습니다&lt;br>
- 각 세그먼트는 슬래시(/)로 구분됩니다&lt;br>
- 리소스의 구체적인 위치나 식별자를 나타냅니다&lt;/li>
&lt;li>query: 추가적인 매개변수&lt;br>
쿼리의 특징과 사용:&lt;br>
- 물음표(?)로 시작합니다&lt;br>
- 키=값 형태의 매개변수들로 구성됩니다&lt;br>
- 여러 매개변수는 앰퍼샌드(&amp;amp;)로 구분됩니다&lt;br>
- 리소스를 필터링하거나 추가 정보를 전달하는 데 사용됩니다&lt;br>
- URL 인코딩이 필요할 수 있습니다&lt;/li>
&lt;li>fragment: 리소스 내의 특정 부분을 가리킴&lt;br>
프래그먼트의 특징과 용도:&lt;br>
- 해시(#) 기호로 시작합니다&lt;br>
- 문서 내의 특정 부분을 가리킵니다&lt;br>
- 서버로 전송되지 않고 클라이언트에서만 사용됩니다&lt;br>
- HTML 문서에서 특정 섹션으로 이동하는 데 주로 사용됩니다&lt;/li>
&lt;/ul>
&lt;p>특징:&lt;/p>
&lt;ol>
&lt;li>통일성(Uniform): 리소스 식별 방식이 일관됩니다.&lt;/li>
&lt;li>리소스(Resource): 식별 가능한 모든 것을 대상으로 합니다.&lt;/li>
&lt;li>식별자(Identifier): 리소스를 고유하게 식별합니다.&lt;/li>
&lt;/ol>
&lt;h3>URL (Uniform Resource Locator)&lt;span class="hx-absolute -hx-mt-20" id="url-uniform-resource-locator">&lt;/span>
&lt;a href="#url-uniform-resource-locator" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>URI의 가장 일반적인 형태로, 인터넷상에서 자원의 위치를 나타내는 주소이다.&lt;br>
URL은 &amp;ldquo;어떻게&amp;rdquo; 자원에 접근할 수 있는지를 알려준다.&lt;/p>
&lt;p>예시와 구성요소:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">https://john:password@www.example.com:8080/blog/post/123?category=tech&amp;amp;status=public#comments&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>프로토콜 (Scheme) 프로토콜은 URL의 맨 앞에 위치하며, 리소스에 접근하는 방법을 정의.&lt;br>
&lt;code>https://&lt;/code>&lt;br>
주요 프로토콜들:&lt;br>
- http: 일반적인 웹 통신&lt;br>
- https: 보안이 적용된 웹 통신&lt;br>
- ftp: 파일 전송&lt;br>
- mailto: 이메일&lt;br>
- file: 로컬 파일 시스템&lt;/li>
&lt;li>사용자 정보(Userinfo): 서버 인증에 필요한 사용자 이름과 비밀번호를 포함&lt;br>
&lt;code>john:password@&lt;/code>&lt;br>
보안상의 이유로 현대의 웹에서는 잘 사용되지 않는다.&lt;/li>
&lt;li>호스트 (Host) 서버의 도메인 이름이나 IP 주소를 나타낸다.&lt;br>
&lt;code>www.example.com&lt;/code>&lt;br>
서브도메인을 포함할 수 있으며, IP 주소를 직접 사용할 수도 있다.&lt;/li>
&lt;li>포트 (Port) 서버의 특정 포트 번호를 지정합니다.&lt;br>
&lt;code>:8080&lt;/code>&lt;br>
기본 포트(&lt;code>http:80&lt;/code>, &lt;code>https:443&lt;/code>)를 사용할 경우 생략 가능&lt;/li>
&lt;li>경로 (Path) 서버에서 리소스의 위치를 나타냅니다.&lt;br>
&lt;code>/blog/post/123 계층적 구조를 가지며, 각 단계는 슬래시(/)로 구분&lt;/code>&lt;/li>
&lt;li>쿼리 문자열 (Query String) 서버에 전달할 추가 매개변수들을 포함합니다.&lt;br>
&lt;code>?category=tech&amp;amp;status=public&lt;/code>&lt;br>
물음표(?)로 시작&lt;br>
키=값 형태로 구성&lt;br>
여러 매개변수는 앰퍼샌드(&amp;amp;)로 구분&lt;/li>
&lt;li>프래그먼트 (Fragment) 페이지 내의 특정 섹션을 가리킵니다.&lt;br>
&lt;code>#comments&lt;/code>&lt;br>
해시(#) 기호로 시작하며, 서버로 전송되지 않고 브라우저에서만 처리&lt;/li>
&lt;/ul>
&lt;h4>URL 인코딩 (URL Encoding)&lt;span class="hx-absolute -hx-mt-20" id="url-인코딩-url-encoding">&lt;/span>
&lt;a href="#url-%ec%9d%b8%ec%bd%94%eb%94%a9-url-encoding" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>URL에서 사용할 수 없는 문자들을 안전하게 전송하기 위한 방법&lt;br>
ASCII가 아닌 문자나 특수문자를 %와 16진수 코드로 변환&lt;/p>
&lt;p>URL 인코딩이 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>공백이나 특수문자 포함 시&lt;/li>
&lt;li>비ASCII 문자(한글 등) 포함 시&lt;/li>
&lt;li>예약된 문자를 데이터로 사용할 때&lt;/li>
&lt;/ul>
&lt;p>URL 인코딩 주의사항:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>encodeURI()와 encodeURIComponent()의 차이점 이해&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// encodeURI는 URL 전체를 인코딩할 때 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">encodeURI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://example.com/path with space&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 출력: https://example.com/path%20with%20space
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// encodeURIComponent는 매개변수 값을 인코딩할 때 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">encodeURIComponent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://example.com/path&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 출력: https%3A%2F%2Fexample.com%2Fpath
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>이미 인코딩된 문자열을 다시 인코딩하지 않도록 주의&lt;/p>
&lt;/li>
&lt;li>
&lt;p>쿼리 문자열 생성 시 각 매개변수 값을 개별적으로 인코딩&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>자주 사용되는 인코딩 문자:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>원본 문자&lt;/th>
&lt;th>인코딩&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>공백&lt;/td>
&lt;td>%20&lt;/td>
&lt;td>단어 사이의 공백을 나타냅니다&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>!&lt;/td>
&lt;td>%21&lt;/td>
&lt;td>느낌표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;quot;&lt;/td>
&lt;td>%22&lt;/td>
&lt;td>큰따옴표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>#&lt;/td>
&lt;td>%23&lt;/td>
&lt;td>해시 태그, 프래그먼트 식별자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$&lt;/td>
&lt;td>%24&lt;/td>
&lt;td>달러 기호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>%&lt;/td>
&lt;td>%25&lt;/td>
&lt;td>퍼센트 기호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&amp;amp;&lt;/td>
&lt;td>%26&lt;/td>
&lt;td>앰퍼샌드, 쿼리 스트링 구분자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>'&lt;/td>
&lt;td>%27&lt;/td>
&lt;td>작은따옴표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>(&lt;/td>
&lt;td>%28&lt;/td>
&lt;td>왼쪽 괄호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>)&lt;/td>
&lt;td>%29&lt;/td>
&lt;td>오른쪽 괄호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>*&lt;/td>
&lt;td>%2A&lt;/td>
&lt;td>별표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>+&lt;/td>
&lt;td>%2B&lt;/td>
&lt;td>더하기 기호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>,&lt;/td>
&lt;td>%2C&lt;/td>
&lt;td>쉼표&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>/&lt;/td>
&lt;td>%2F&lt;/td>
&lt;td>슬래시, 경로 구분자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>:&lt;/td>
&lt;td>%3A&lt;/td>
&lt;td>콜론&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>;&lt;/td>
&lt;td>%3B&lt;/td>
&lt;td>세미콜론&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>=&lt;/td>
&lt;td>%3D&lt;/td>
&lt;td>등호, 쿼리 스트링 할당 연산자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>?&lt;/td>
&lt;td>%3F&lt;/td>
&lt;td>물음표, 쿼리 스트링 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>@&lt;/td>
&lt;td>%40&lt;/td>
&lt;td>골뱅이, 이메일 주소 구분자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>[&lt;/td>
&lt;td>%5B&lt;/td>
&lt;td>왼쪽 대괄호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>]&lt;/td>
&lt;td>%5D&lt;/td>
&lt;td>오른쪽 대괄호&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>URN (Uniform Resource Name)&lt;span class="hx-absolute -hx-mt-20" id="urn-uniform-resource-name">&lt;/span>
&lt;a href="#urn-uniform-resource-name" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>자원의 이름을 지정하는 URI이다.&lt;br>
URN은 자원의 &amp;ldquo;무엇&amp;quot;인지를 식별한다.&lt;br>
URN은 자원의 위치가 변경되더라도 동일하게 유지된다.&lt;/p>
&lt;p>특징:&lt;/p>
&lt;ol>
&lt;li>영속성: 리소스의 위치가 변경되어도 동일한 URN으로 식별 가능합니다.&lt;/li>
&lt;li>위치 독립성: 특정 위치에 종속되지 않습니다.&lt;/li>
&lt;li>고유성: 각 리소스에 대해 유일한 이름을 제공합니다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>DNS 캐싱 (DNS Caching)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/dns-caching/</link><pubDate>Sun, 06 Oct 2024 07:30:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/dns-caching/</guid><description>
&lt;h2>DNS 캐싱 (DNS Caching)&lt;span class="hx-absolute -hx-mt-20" id="dns-캐싱-dns-caching">&lt;/span>
&lt;a href="#dns-%ec%ba%90%ec%8b%b1-dns-caching" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>DNS 캐싱은 이전에 조회한 도메인 이름과 IP 주소의 매핑 정보를 임시로 저장하는 메커니즘이다.&lt;br>
이를 통해 매번 전체 DNS 조회 과정을 거치지 않고도 빠르게 도메인 이름을 IP 주소로 변환할 수 있다.&lt;/p>
&lt;p>DNS 캐싱은 인터넷 성능 최적화에 중요한 역할을 하며, 적절한 관리를 통해 효율적이고 안전한 네트워크 환경을 유지할 수 있다.&lt;/p>
&lt;h3>작동 방식&lt;span class="hx-absolute -hx-mt-20" id="작동-방식">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>DNS 서버나 클라이언트 장치가 도메인 이름에 대한 IP 주소를 조회하면, 그 결과를 캐시에 저장한다.&lt;/li>
&lt;li>이후 동일한 도메인에 대한 요청이 있을 때, 캐시된 정보를 사용하여 빠르게 응답한다.&lt;/li>
&lt;/ul>
&lt;h3>캐시 위치&lt;span class="hx-absolute -hx-mt-20" id="캐시-위치">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ec%9c%84%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>DNS 캐싱 (DNS Caching)은 브라우저, 운영체제, 라우터, ISP 의 DNS 서버 등 다양한 단계에서 발생한다.&lt;/p>
&lt;ul>
&lt;li>브라우저 캐시: 웹 브라우저가 DNS 조회 결과를 저장한다.&lt;/li>
&lt;li>운영 체제 캐시: OS 수준에서 DNS 정보를 캐싱한다.&lt;/li>
&lt;li>로컬 DNS 서버 캐시: ISP나 조직의 DNS 서버에서 캐싱한다.&lt;/li>
&lt;/ul>
&lt;h3>TTL(Time To Live)&lt;span class="hx-absolute -hx-mt-20" id="ttltime-to-live">&lt;/span>
&lt;a href="#ttltime-to-live" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>TTL 은 DNS 레코드가 캐시에 얼마나 오래 저장될지를 결정하는 시간 값으로, 초단위로 설정된다.&lt;br>
TTL 이 만료되면, 새로운 쿼리를 통해 최신 정보를 가져온다.&lt;/p>
&lt;ul>
&lt;li>역할
&lt;ul>
&lt;li>캐시 수명 제어
&lt;ul>
&lt;li>DNS 레코드의 캐시 유효기간 설정.&lt;/li>
&lt;li>오래된 정보의 사용 방지.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>DNS 업데이트 전파 속도 조절
&lt;ul>
&lt;li>짧은 TTL: 빠른 변경 전파, 높은 DNS 트래픽.
&lt;ul>
&lt;li>네트워크 변경이나 빈번한 업데이트가 필요한 경우 유리함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>긴 TTL: 느린 변경 전파, 낮은 DNS 트래픽.
&lt;ul>
&lt;li>변화가 적고 안정적인 웹사이트에 적합함.&lt;/li>
&lt;li>보안 및 가용성을 높이고, 서버 부하를 줄이는 데 유리함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>부하 분산
&lt;ul>
&lt;li>로드 밸런싱 구성에서 TTL 조정으로 트래픽 분산 제어&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>가용성 관리
&lt;ul>
&lt;li>서버 유지보수시 TTL 조정으로 영향 최소화.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안
&lt;ul>
&lt;li>DNS 스푸핑이나 캐시 포이즈닝 공격의 영향 기간 제한.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>TTL 설정시 고려사항:&lt;/p>
&lt;ul>
&lt;li>도메인의 변경 빈도&lt;/li>
&lt;li>원하는 DNS 업데이트 전파 속도&lt;/li>
&lt;li>DNS 서버와 네트워크 부하&lt;/li>
&lt;li>보안 요구사항&lt;/li>
&lt;li>서비스의 중요도와 가용성 요구사항&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>빠른 웹사이트 로딩 시간&lt;/li>
&lt;li>네트워크 대역폭 절약&lt;/li>
&lt;li>DNS 서버의 부하 감소&lt;/li>
&lt;/ul>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>오래된 캐시 정보로 인한 연결 문제 가능성&lt;/li>
&lt;li>DNS 캐시 포이즈닝 등의 보안 위협&lt;/li>
&lt;/ul>
&lt;h3>캐시 관리&lt;span class="hx-absolute -hx-mt-20" id="캐시-관리">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ea%b4%80%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>주기적인 캐시 플러싱(flushing)을 통해 오래된 정보 제거&lt;/li>
&lt;li>보안 업데이트 및 네트워크 변경 시 캐시 갱신 필요&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>DNS Records</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/dns-records/</link><pubDate>Sun, 06 Oct 2024 07:26:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/dns-records/</guid><description>
&lt;h2>DNS Records&lt;span class="hx-absolute -hx-mt-20" id="dns-records">&lt;/span>
&lt;a href="#dns-records" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>DNS Records는 도메인 이름 시스템(DNS)에서 사용되는 데이터 구조로, 도메인과 관련된 다양한 정보를 저장한다.&lt;/p>
&lt;p>DNS 레코드는 도메인의 동작 방식을 정의하고, 인터넷 통신의 기반이 되는 중요한 요소이다.&lt;br>
각 레코드는 특정 목적을 위해 설계되었으며, 도메인 관리자는 이를 적절히 구성하여 원하는 네트워크 동작을 구현할 수 있다.&lt;/p>
&lt;h3>DNS 레코드의 종류&lt;span class="hx-absolute -hx-mt-20" id="dns-레코드의-종류">&lt;/span>
&lt;a href="#dns-%eb%a0%88%ec%bd%94%eb%93%9c%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>레코드 종류&lt;/th>
&lt;th>&lt;/th>
&lt;th>기능&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>예시&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>Address&lt;/td>
&lt;td>도메인 이름을 IPv4 주소에 매핑&lt;/td>
&lt;td>가장 기본적이고 많이 사용되는 레코드&lt;/td>
&lt;td>&lt;code>example.com -&amp;gt; 192.0.2.1&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AAAA&lt;/td>
&lt;td>Quad-A&lt;/td>
&lt;td>도메인 이름을 IPv6 주소에 매핑&lt;/td>
&lt;td>IPv6 네트워크에서 사용&lt;/td>
&lt;td>&lt;code>example.com -&amp;gt; 2001:0db8:85a3:0000:0000:8a2e:0370:7334&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CNAME&lt;/td>
&lt;td>Canonical Name&lt;/td>
&lt;td>한 도메인을 다른 도메인 이름의 별칭으로 지정&lt;/td>
&lt;td>하위 도메인을 다른 도메인으로 리다이렉트할 때 유용&lt;/td>
&lt;td>&lt;code>www.example.com -&amp;gt; example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MX&lt;/td>
&lt;td>Mail Exchanger&lt;/td>
&lt;td>도메인의 메일 서버 지정&lt;/td>
&lt;td>우선순위 값을 포함하며, 이메일 라우팅에 필수적&lt;/td>
&lt;td>&lt;code>example.com MX 10 mail.example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NS&lt;/td>
&lt;td>Name Server&lt;/td>
&lt;td>도메인의 권한 있는 네임서버 지정&lt;/td>
&lt;td>도메인의 DNS 정보를 관리하는 서버를 나타냄&lt;/td>
&lt;td>&lt;code>example.com NS ns1.example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SOA&lt;/td>
&lt;td>Start of Authority&lt;/td>
&lt;td>도메인의 DNS 정보에 대한 권한 정보 제공&lt;/td>
&lt;td>도메인당 하나만 존재하며, 도메인의 기본 정보를 포함&lt;/td>
&lt;td>&lt;code>example.com SOA ns1.example.com admin.example.com 2023050101 3600 1800 604800 86400&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TXT&lt;/td>
&lt;td>Text&lt;/td>
&lt;td>도메인에 대한 텍스트 정보 저장&lt;/td>
&lt;td>다목적으로 사용되며, 특히 이메일 인증 (SPF, DKIM) 에 중요&lt;/td>
&lt;td>&lt;code>example.com TXT &amp;quot;v=spf1 include:_spf.example.com ~all&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SPF&lt;/td>
&lt;td>Sender Policy Framework,&lt;/td>
&lt;td>이메일 스푸핑 방지&lt;/td>
&lt;td>TXT 레코드로 구현&lt;/td>
&lt;td>&lt;code>example.com TXT &amp;quot;v=spf1 ip4:192.0.2.0/24 include:_spf.google.com ~all&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DKIM&lt;/td>
&lt;td>DomainKeys Identified Mail&lt;/td>
&lt;td>이메일 인증&lt;/td>
&lt;td>TXT 레코드로 구현&lt;/td>
&lt;td>&lt;code>selector._domainkey.example.com TXT &amp;quot;v=DKIM1; k=rsa; p=MIGfMA[…생략…]&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PTR&lt;/td>
&lt;td>Pointer&lt;/td>
&lt;td>IP 주소를 도메인 이름으로 역변환&lt;/td>
&lt;td>역방향 DNS 조회에 사용, 주로 이메일 스팸 방지에 활용&lt;/td>
&lt;td>&lt;code>192.0.2.1 -&amp;gt; example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SRV&lt;/td>
&lt;td>Service&lt;/td>
&lt;td>특정 서비스의 위치 정보 제공&lt;/td>
&lt;td>서비스, 프로토콜, 포트 번호, 호스트 이름 등을 지정&lt;/td>
&lt;td>&lt;code>_sip._tcp.example.com SRV 10 60 5060 sipserver.example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CAA&lt;/td>
&lt;td>Certification Authority Authorization&lt;/td>
&lt;td>SSL/TLS 인증서 발급 권한 지정&lt;/td>
&lt;td>인증서 오발급 방지에 도움&lt;/td>
&lt;td>&lt;code>example.com CAA 0 issue &amp;quot;letsencrypt.org&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNSKEY&lt;/td>
&lt;td>&lt;/td>
&lt;td>DNSSEC 에서 사용되는 공개키 저장&lt;/td>
&lt;td>DNS 보안 확장 (DNSSEC) 의 핵심 요소&lt;/td>
&lt;td>&lt;code>example.com DNSKEY 256 3 7 AwEAA[…생략…]&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RRSIG&lt;/td>
&lt;td>Resource Record Signature&lt;/td>
&lt;td>DNSSEC 에서 DNS 응답의 디지털 서명 제공&lt;/td>
&lt;td>DNS 응답의 무결성과 신뢰성 보장&lt;/td>
&lt;td>&lt;code>example.com RRSIG A 7 3 86400 20230630235959 20230531235959 1234 example.com. dGhpc[…생략…]&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NAPTR&lt;/td>
&lt;td>Naming Authority Pointer&lt;/td>
&lt;td>정규 표현식 기반의 도메인 이름 재작성 규칙 정의&lt;/td>
&lt;td>ENUM(전화번호 매핑) 시스템에서 주로 사용&lt;/td>
&lt;td>&lt;code>example.com NAPTR 100 10 &amp;quot;u&amp;quot; &amp;quot;E2U+sip&amp;quot; &amp;quot;!^.*$!sip:info@example.com!&amp;quot;.&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNAME&lt;/td>
&lt;td>&lt;/td>
&lt;td>전체 서브 도메인을 다른 도메인으로 위임한다.&lt;/td>
&lt;td>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LOC&lt;/td>
&lt;td>&lt;/td>
&lt;td>지리적 위치 정보 제공&lt;/td>
&lt;td>위도, 경도, 고도 등 정보 포함&lt;/td>
&lt;td>&lt;code>example.com LOC 37 46 30.000 N 122 25 10.000 W 10m 20m 100m 10m&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HINFO&lt;/td>
&lt;td>&lt;/td>
&lt;td>호스트 정보 지정&lt;/td>
&lt;td>CPU 타입, 운영체제 등 정보 제공&lt;/td>
&lt;td>&lt;code>example.com HINFO &amp;quot;Intel x64&amp;quot; &amp;quot;Windows Server 2019&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RP&lt;/td>
&lt;td>&lt;/td>
&lt;td>도메인에 대한 책임자 정보 제공&lt;/td>
&lt;td>거의 사용되지 않음&lt;/td>
&lt;td>&lt;code>example.com RP admin.example.com txt.example.com&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AFSDB&lt;/td>
&lt;td>&lt;/td>
&lt;td>AFS 클라이언트가 AFS 셀을 찾는 데 사용&lt;/td>
&lt;td>&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSHFP&lt;/td>
&lt;td>&lt;/td>
&lt;td>SSH 공개키 지문 저장&lt;/td>
&lt;td>SSH 서버 인증에 사용&lt;/td>
&lt;td>&lt;code>example.com SSHFP 2 1 123456789abcdef67890123456789abcdef67890&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TLSA&lt;/td>
&lt;td>&lt;/td>
&lt;td>DANE 프로토콜에 사용&lt;/td>
&lt;td>TLS 인증서와 DNSSEC 을 연결&lt;/td>
&lt;td>&lt;code>_443._tcp.example.com TLSA 3 0 1 d2abde240d7cd3ee6b4b28c54df034b9&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DMARC&lt;/td>
&lt;td>&lt;/td>
&lt;td>도메인 기반 메시지 인증, 보고 및 적합성&lt;/td>
&lt;td>TXT 레코드로 구현&lt;/td>
&lt;td>&lt;code>_dmarc.example.com TXT &amp;quot;v=DMARC1; p=quarantine; rua=mailto:dmarc@example.com&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>URI&lt;/td>
&lt;td>&lt;/td>
&lt;td>Uniform Resource Identifier 정보 제공&lt;/td>
&lt;td>웹 리소스 위치 지정에 사용&lt;/td>
&lt;td>&lt;code>_ftp._tcp.example.com URI 10 1 &amp;quot;ftp://ftp.example.com/&amp;quot;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CERT&lt;/td>
&lt;td>&lt;/td>
&lt;td>인증서 저장&lt;/td>
&lt;td>X.509 인증서 등을 DNS 에 저장&lt;/td>
&lt;td>&lt;code>example.com CERT 1 0 0 MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEFBQ[…생략…]&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>DNS(Domain Name System)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/</link><pubDate>Sun, 06 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/</guid><description>
&lt;h2>DNS(Domain Name System)&lt;span class="hx-absolute -hx-mt-20" id="dnsdomain-name-system">&lt;/span>
&lt;a href="#dnsdomain-name-system" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷에서 도메인 이름을 IP 주소로 변환하는 분산형 데이터베이스 시스템이다.&lt;/p>
&lt;p>&lt;img src="ddos-dns.svg" alt="IP 주소란 무엇이고 IP 주소는 왜 중요할까요?" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/&lt;/a> _&lt;/p>
&lt;p>&lt;strong>인터넷 전화전화부&lt;/strong>로 비유되며 특정 컴퓨터 (또는 네트워크로 연결된 임의의 장치) 의 주소를 찾기 위해, 사람이 이해하기 쉬운 호스트 이름 (예: &amp;lt;www.example.com&amp;gt;) 을 실제 네트워크 상에서 사용하는 IP 주소 (예: 192.168.1.1) 로 변환하고 해당 IP 주소로 접속하는 일련의 시스템을 DNS(Domain Name System) 이라고 한다.&lt;/p>
&lt;p>DNS 는 전세계적으로 약속된 규칙을 공유한다.&lt;br>
웹 브라우저는 DNS 확인이 &lt;strong>막후에서&lt;/strong> 발생하며 최초의 사용자 요청 외에 사용자 컴퓨터와의 추가적인 대화는 필요하지 않다.&lt;/p>
&lt;h3>역할과 기능&lt;span class="hx-absolute -hx-mt-20" id="역할과-기능">&lt;/span>
&lt;a href="#%ec%97%ad%ed%95%a0%ea%b3%bc-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>도메인 이름을 IP 주소로 변환 (정방향 조회)&lt;/li>
&lt;li>IP 주소를 도메인 이름으로 변환 (역방향 조회)&lt;/li>
&lt;li>이메일 라우팅을 위한 메일 서버 정보 제공&lt;/li>
&lt;li>도메인에 대한 서비스 정보 제공&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>계층적 구조로 분산 관리&lt;/li>
&lt;li>캐싱을 통한 빠른 응답 제공&lt;/li>
&lt;li>전 세계적으로 표준화된 시스템&lt;/li>
&lt;/ul>
&lt;h3>DNS 조회는 어떻게 작동하는가?&lt;span class="hx-absolute -hx-mt-20" id="dns-조회는-어떻게-작동하는가">&lt;/span>
&lt;a href="#dns-%ec%a1%b0%ed%9a%8c%eb%8a%94-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9e%91%eb%8f%99%ed%95%98%eb%8a%94%ea%b0%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="3607857746_b4372ba3ba_o.png" alt="Verisign Domain Name Industry Brief, June 2007 (PDF)" loading="lazy" />&lt;br>
_Source: &lt;a href="http://www.verisign.com/static/DNIB_09_0529web.pdf" target="_blank" rel="noopener">http://www.verisign.com/static/DNIB_09_0529web.pdf&lt;/a> _&lt;/p>
&lt;ol>
&lt;li>&lt;strong>사용자 요청&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>사용자가 브라우저에 도메인 이름 (예: www.example.com/) 입력한다.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&lt;strong>로컬 DNS 캐시 확인&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>브라우저는 먼저 로컬 캐시를 확인하여 이미 저장된 IP 주소가 있는지 확인한다.&lt;/li>
&lt;li>특정 DNS 서버가 관여하지 않는다.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>&lt;strong>재귀적 DNS 리졸버&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>로컬 캐시에 IP 주소가 없으면, 요청은 재귀적 DNS 리졸버로 전달된다.&lt;/li>
&lt;li>일반적으로 ISP 에서 제공하며, DNS 조회 과정을 대신 수행한다&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>&lt;strong>루트 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 먼저 루트 네임서버에 쿼리를 보낸다.&lt;/li>
&lt;li>루트 서버는 최상위 도메인 (TLD) 서버의 위치를 알려준다.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>&lt;strong>TLD 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 TLD 서버 (.com,.org 등) 에 쿼리를 보내 해당 도메인의 권한 있는 네임서버의 위치를 확인한다.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>&lt;strong>권한 있는 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>마지막으로, 리졸버는 권한 있는 네임서버에 쿼리를 보내 최종적으로 도메인에 대한 정확한 IP 주소를 얻는다.&lt;/li>
&lt;li>이는 도메인 등록 기관이나 호스팅 제공업체의 DNS 서버이다.&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>&lt;strong>응답 및 캐싱&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 얻은 IP 주소를 사용자의 브라우저에 반환하고, 향후 요청을 위해 이 정보를 캐시에 저장한다.&lt;/li>
&lt;/ul>
&lt;h3>DNS 서버 유형&lt;span class="hx-absolute -hx-mt-20" id="dns-서버-유형">&lt;/span>
&lt;a href="#dns-%ec%84%9c%eb%b2%84-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>웹페이지 로드와 관련된 DNS 서버&lt;/li>
&lt;/ul>
&lt;h4>DNS Recursive Resolver(DNS 재귀적 리졸버)&lt;span class="hx-absolute -hx-mt-20" id="dns-recursive-resolverdns-재귀적-리졸버">&lt;/span>
&lt;a href="#dns-recursive-resolverdns-%ec%9e%ac%ea%b7%80%ec%a0%81-%eb%a6%ac%ec%a1%b8%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>별칭: DNS 리커서, 캐싱 네임 서버&lt;/li>
&lt;li>역할: 클라이언트의 DNS 쿼리를 받아 처리하는 첫 번째 중간자.&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>클라이언트의 요청을 받아 다른 DNS 서버에 추가 쿼리를 보내 응답을 얻음.&lt;/li>
&lt;li>얻은 정보를 캐시하여 향후 쿼리 처리 속도를 높임.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관리 주체: 인터넷 서비스 공급자 (ISP), 대기업, 또는 타사 DNS 서비스 공급자가 운영한다.&lt;/li>
&lt;/ul>
&lt;h4>DNS Root Nameserver(루트 이름 서버)&lt;span class="hx-absolute -hx-mt-20" id="dns-root-nameserver루트-이름-서버">&lt;/span>
&lt;a href="#dns-root-nameserver%eb%a3%a8%ed%8a%b8-%ec%9d%b4%eb%a6%84-%ec%84%9c%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>역할: DNS 계층 구조의 최상위에 위치하며, 전 세계적으로 13 개의 DNS Root Nameserver(루트 이름 서버) 가 있으나 수백 개의 미러 서버가 운영되고 있다.&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>TLD 네임서버의 IP 주소 정보를 제공한다.&lt;/li>
&lt;li>DNS 리졸버의 쿼리 해결 과정의 시작점.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>DNS TLD Nameserver (TLD 이름 서버)&lt;span class="hx-absolute -hx-mt-20" id="dns-tld-nameserver-tld-이름-서버">&lt;/span>
&lt;a href="#dns-tld-nameserver-tld-%ec%9d%b4%eb%a6%84-%ec%84%9c%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>역할: 특정 TLD (.com,.org,.net 등) 에 대한 정보를 관리&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>해당 TLD 내의 권한있는 네임 서버 정보를 제공.&lt;/li>
&lt;li>예:.com TLD 서버는 example.com 의 권한 있는 네임서버 정보를 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관리: ICANN 이 관리하며, 각 TLD 별로 다른 조직에 위임.&lt;/li>
&lt;/ul>
&lt;h4>Authoritative Nameserver (권한 있는 이름 서버)&lt;span class="hx-absolute -hx-mt-20" id="authoritative-nameserver-권한-있는-이름-서버">&lt;/span>
&lt;a href="#authoritative-nameserver-%ea%b6%8c%ed%95%9c-%ec%9e%88%eb%8a%94-%ec%9d%b4%eb%a6%84-%ec%84%9c%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>역할: 특정 도메인에 대한 최종적이고 공식적인 DNS 정보를 제공.&lt;/li>
&lt;li>유형:
&lt;ul>
&lt;li>Primary (마스터) 서버: 도메인의 원본 레코드를 유지 관리&lt;/li>
&lt;li>Secondary (슬레이브) 서버: Primary 서버의 데이터를 복제하여 로드 분산과 중복성 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>도메인의 A, AAAA, MX, CNAME 등 모든 DNS 레코드 정보를 저장 및 제공&lt;/li>
&lt;li>도메인 소유자가 직접 관리하거나 DNS 호스팅 서비스를 통해 관리됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>Local DNS 캐시&lt;span class="hx-absolute -hx-mt-20" id="local-dns-캐시">&lt;/span>
&lt;a href="#local-dns-%ec%ba%90%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>사용자의 개별 컴퓨터나 디바이스에 임시로 저장되는 DNS 조회 결과 모음.&lt;/li>
&lt;li>목적:
&lt;ul>
&lt;li>DNS 쿼리의 응답 시간을 단축시켜 웹 브라우징의 속도를 향상시킨다.&lt;/li>
&lt;li>네트워크 트래픽을 줄여 대역폭을 절약한다.&lt;/li>
&lt;li>DNS 서버의 부하를 감소시킨다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>작동 방식:
&lt;ul>
&lt;li>사용자가 웹 사이트에 처음 접속할 때, OS 는 DNS 조회 결과를 로컬 캐시에 저장한다.&lt;/li>
&lt;li>이후 같은 도메인에 접속할 때, OS 는 로컬 캐시를 확인한다.&lt;/li>
&lt;li>캐시에 정보가 있으면 즉시 사용하고, 없으면 일반적인 DNS 조회 과정을 시작한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>저장 위치:
&lt;ul>
&lt;li>Windows: DNS Client 서비스에 의해 관리된다.&lt;/li>
&lt;li>macOS / Linux: nscd (Name Service Cache Daemon) 또는 시스템 수준의 캐시 메커니즘에 의해 관리된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TTL (Time To Live):
&lt;ul>
&lt;li>각 DNS 레코드는 TTL 값을 가지며, 이는 캐시에 해당 정보를 얼마나 오래 보관할지 결정한다.&lt;/li>
&lt;li>TTL 이 만료되면 해당 정보는 캐시에서 제거되고, 다음 요청시 새로운 DNS 조회가 수행된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점:
&lt;ul>
&lt;li>빠른 웹 페이지 로딩&lt;/li>
&lt;li>네트워크 효율성&lt;/li>
&lt;li>오프라인 상태에서도 이전에 방문한 사이트의 IP 주소 제공 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단점:
&lt;ul>
&lt;li>오래된 정보를 제공할 수 있다. (특히 TTL 이 긴 경우)&lt;/li>
&lt;li>DNS 변경사항이 즉시 반영되지 않을 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>주의 사항:
&lt;ul>
&lt;li>DNS 캐시 중독: 악의적인 공격자가 캐시를 조작하여 사용자를 가짜 웹사이트로 유도할 수 있다.&lt;/li>
&lt;li>오래된 정보: 웹사이트의 IP 주소가 변경되었을 때 캐시된 정보가 최신 상태가 아닐 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>DNS 보안 위협 및 보호 기술&lt;span class="hx-absolute -hx-mt-20" id="dns-보안-위협-및-보호-기술">&lt;/span>
&lt;a href="#dns-%eb%b3%b4%ec%95%88-%ec%9c%84%ed%98%91-%eb%b0%8f-%eb%b3%b4%ed%98%b8-%ea%b8%b0%ec%88%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>DNS 보안 위협&lt;span class="hx-absolute -hx-mt-20" id="dns-보안-위협">&lt;/span>
&lt;a href="#dns-%eb%b3%b4%ec%95%88-%ec%9c%84%ed%98%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>DNS 스푸핑 (DNS Spoofing)&lt;span class="hx-absolute -hx-mt-20" id="dns-스푸핑-dns-spoofing">&lt;/span>
&lt;a href="#dns-%ec%8a%a4%ed%91%b8%ed%95%91-dns-spoofing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: 공격자가 DNS 응답을 가로채고 조작하여 사용자를 의도하지 않은 사이트로 유도하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>중간자 공격의 일종.&lt;/li>
&lt;li>사용자가 정상적인 웹사이트에 접속하고 있다고 믿게 만듦.&lt;/li>
&lt;li>피싱이나 악성코드 배포에 주로 사용됨.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 캐시 포이즈닝 (DNS Cache Poisoning)&lt;span class="hx-absolute -hx-mt-20" id="dns-캐시-포이즈닝-dns-cache-poisoning">&lt;/span>
&lt;a href="#dns-%ec%ba%90%ec%8b%9c-%ed%8f%ac%ec%9d%b4%ec%a6%88%eb%8b%9d-dns-cache-poisoning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 리졸버의 캐시에 거짓 정보를 삽입하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 리졸버가 잘못된 IP 주소를 캐시에 저장하게 됨.&lt;/li>
&lt;li>공격 효과가 캐시 TTL 동안 지속됨.&lt;/li>
&lt;li>다수의 사용자에게 영향을 미칠 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 하이재킹 (DNS Hijacking)&lt;span class="hx-absolute -hx-mt-20" id="dns-하이재킹-dns-hijacking">&lt;/span>
&lt;a href="#dns-%ed%95%98%ec%9d%b4%ec%9e%ac%ed%82%b9-dns-hijacking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 설정을 변경하여 트래픽을 공격자가 제어하는 서버로 리디렉션 (Redirection) 하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 서버 자체를 대상으로 하는 경우가 많음.&lt;/li>
&lt;li>사용자 디바이스의 DNS 설정을 변경하기도 함.&lt;/li>
&lt;li>광범위한 영향을 미칠 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 증폭 공격 (DNS Amplification Attack)&lt;span class="hx-absolute -hx-mt-20" id="dns-증폭-공격-dns-amplification-attack">&lt;/span>
&lt;a href="#dns-%ec%a6%9d%ed%8f%ad-%ea%b3%b5%ea%b2%a9-dns-amplification-attack" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 서버를 이용해 대량의 트래픽을 생성하여 대상 시스템을 마비시키는 DDos 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>작은 쿼리로 큰 응답을 유발하여 트래픽을 증폭시킴.&lt;/li>
&lt;li>공개 DNS 리졸버를 악용함.&lt;/li>
&lt;li>네트워크 대역폭을 소진시켜 서비스 중단을 유발.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 터널링 (DNS Tunneling)&lt;span class="hx-absolute -hx-mt-20" id="dns-터널링-dns-tunneling">&lt;/span>
&lt;a href="#dns-%ed%84%b0%eb%84%90%eb%a7%81-dns-tunneling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 프로토콜을 악용하여 다른 프로토콜의 데이터를 DNS 쿼리와 응답에 숨겨 전송하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>방화벽 우회, 데이터 유출 등에 사용될 수 있음.&lt;/li>
&lt;li>정상적인 DNS 트래픽으로 위장하여 탐지가 어려움.&lt;/li>
&lt;li>네트워크 성능 저하를 유발할 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>DNS 보호 기술&lt;span class="hx-absolute -hx-mt-20" id="dns-보호-기술">&lt;/span>
&lt;a href="#dns-%eb%b3%b4%ed%98%b8-%ea%b8%b0%ec%88%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>DNSSEC (Domain Name System Security Extensions)&lt;span class="hx-absolute -hx-mt-20" id="dnssec-domain-name-system-security-extensions">&lt;/span>
&lt;a href="#dnssec-domain-name-system-security-extensions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 응답의 무결성과 출처를 암호화 방식으로 검증하는 보장 확장 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>디지털 서명을 사용하여 DNS 데이터의 신뢰성 보장.&lt;/li>
&lt;li>DNS 스푸핑과 DNS 캐시 포이즈닝 공격 방지.&lt;/li>
&lt;li>점진적으로 도입 가능하나, 전체 DNS 체인의 참여가 필요함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS over HTTPS (DoH)&lt;span class="hx-absolute -hx-mt-20" id="dns-over-https-doh">&lt;/span>
&lt;a href="#dns-over-https-doh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 쿼리를 HTTPS 프로토콜을 통해 암호화하여 전송하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 쿼리의 프라이버시 보호.&lt;/li>
&lt;li>중간자 공격 방지.&lt;/li>
&lt;li>기존 방화벽 정책과 충돌할 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS over TLS (DoT)&lt;span class="hx-absolute -hx-mt-20" id="dns-over-tls-dot">&lt;/span>
&lt;a href="#dns-over-tls-dot" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 쿼리를 TLS 프로토콜을 통해 암호화하여 전송하는 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 쿼리의 기밀성 보장.&lt;/li>
&lt;li>전용 포트 (853) 를 사용하여 트래픽 식별이 용이.&lt;/li>
&lt;li>DoH 에 비해 네트워크 관리가 쉬움.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DANE (DNS-based Authentication of Named Entities)&lt;span class="hx-absolute -hx-mt-20" id="dane-dns-based-authentication-of-named-entities">&lt;/span>
&lt;a href="#dane-dns-based-authentication-of-named-entities" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 를 사용하여 TLS 인증서의 유효성을 검증하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNSSEC 과 연계하여 사용.&lt;/li>
&lt;li>인증기관 (CA) 의존도 감소.&lt;/li>
&lt;li>자체 서명 인증서의 안전한 사용 가능.&lt;br>
RPZ (Response POLICY Zones)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정의: DNS 서버 레벨에서 악성 도메인에 대한 접근을 차단하는 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>중앙 집중식 보안 정책 적용 가능.&lt;/li>
&lt;li>실시간 업데이트 지원.&lt;/li>
&lt;li>유연한 정책 설정 가능 (차단, 리다이렉션 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>DNS&lt;span class="hx-absolute -hx-mt-20" id="dns">&lt;/span>
&lt;a href="#dns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://ko.wikipedia.org/wiki/%EB%8F%84%EB%A9%94%EC%9D%B8_%EB%84%A4%EC%9E%84_%EC%8B%9C%EC%8A%A4%ED%85%9C" target="_blank" rel="noopener">도메인 네임 시스템&lt;/a>&lt;br>
&lt;a href="https://hanamon.kr/dns%EB%9E%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%85%90%EB%B6%80%ED%84%B0-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D%EA%B9%8C%EC%A7%80/" target="_blank" rel="noopener">DNS란? (도메인 네임 시스템 개념부터 작동 방식까지)&lt;/a>&lt;br>
&lt;a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;amp;blogId=gaegurijump&amp;amp;logNo=110186376474" target="_blank" rel="noopener">DNS(Domain Name System)란?&lt;/a>&lt;br>
&lt;a href="https://gentlysallim.com/dns%EB%9E%80-%EB%AD%90%EA%B3%A0-%EB%84%A4%EC%9E%84%EC%84%9C%EB%B2%84%EB%9E%80-%EB%AD%94%EC%A7%80-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC/" target="_blank" rel="noopener">DNS란 뭐고, 네임서버란 뭔지 개념정리&lt;/a>&lt;br>
&lt;a href="https://ko.wikipedia.org/wiki/%EB%A3%A8%ED%8A%B8_%EB%84%A4%EC%9E%84_%EC%84%9C%EB%B2%84" target="_blank" rel="noopener">루트 네임 서버&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=164603&amp;amp;boardType=" target="_blank" rel="noopener">개발자가 알아야할 DNS 동작&lt;/a>&lt;br>
&lt;a href="https://www.ibm.com/kr-ko/topics/dns" target="_blank" rel="noopener">도메인 이름 시스템(DNS)이란 무엇인가요?&lt;/a>&lt;/p>
&lt;h3>DNS 레코드&lt;span class="hx-absolute -hx-mt-20" id="dns-레코드">&lt;/span>
&lt;a href="#dns-%eb%a0%88%ec%bd%94%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://inpa.tistory.com/entry/WEB-%F0%9F%8C%90-DNS-%EB%A0%88%EC%BD%94%EB%93%9C-%EC%A2%85%EB%A5%98-%E2%98%85-%EC%95%8C%EA%B8%B0-%EC%89%BD%EA%B2%8C-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">DNS 레코드 종류 ★ 완벽 정리&lt;/a>&lt;/p>
&lt;h3>TLD&lt;span class="hx-absolute -hx-mt-20" id="tld">&lt;/span>
&lt;a href="#tld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://developer.mozilla.org/ko/docs/Glossary/TLD" target="_blank" rel="noopener">최상위 도메인 (top-level domain, TLD)&lt;/a>&lt;br>
&lt;a href="https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/" target="_blank" rel="noopener">최상위 도메인이란?&lt;/a>&lt;/p></description></item><item><title>Domain</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/domain/</link><pubDate>Sun, 06 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/domain/</guid><description>
&lt;h2>Domain&lt;span class="hx-absolute -hx-mt-20" id="domain">&lt;/span>
&lt;a href="#domain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>도메인(Domain)은 인터넷 상의 계층적 주소 체계로, 사용자가 이해하기 쉬운 형태의 웹사이트 주소를 제공한다.&lt;/p>
&lt;p>도메인은 인터넷에서 컴퓨터 네트워크의 호스트를 식별하는 고유한 이름이다.&lt;br>
IP 주소를 사람이 기억하기 쉬운 문자열로 변환한 것으로 볼 수 있다.&lt;/p>
&lt;p>도메인은 인터넷의 핵심 구성 요소로, 사용자 친화적인 웹 주소 체계를 제공하며 인터넷의 효율적인 관리와 사용을 가능하게 한다.&lt;/p>
&lt;h3>역할과 기능&lt;span class="hx-absolute -hx-mt-20" id="역할과-기능">&lt;/span>
&lt;a href="#%ec%97%ad%ed%95%a0%ea%b3%bc-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>웹사이트 식별: 사용자가 웹사이트를 쉽게 찾고 접근할 수 있게 한다.&lt;/li>
&lt;li>IP 주소 매핑: 도메인 이름을 해당하는 IP 주소로 변환한다.&lt;/li>
&lt;li>네트워크 구조화: 인터넷을 계층적으로 구조화하여 관리를 용이하게 한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>계층적 구조: 최상위 도메인부터 하위 도메인까지 계층적으로 구성된다.&lt;/li>
&lt;li>고유성: 각 도메인 이름은 인터넷 상에서 유일하다.&lt;/li>
&lt;li>확장성: 새로운 도메인을 쉽게 추가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>구성과 구조&lt;span class="hx-absolute -hx-mt-20" id="구성과-구조">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%84%b1%ea%b3%bc-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>도메인은 점(.)으로 구분된 여러 부분으로 구성된다:&lt;br>
&lt;code>서브도메인.2차도메인.최상위도메인&lt;/code>&lt;br>
예: &lt;code>www.example.com&lt;/code>&lt;/p>
&lt;ol>
&lt;li>최상위 도메인(TLD):.com,.org,.net 등&lt;/li>
&lt;li>2차 도메인: example.com에서 &amp;rsquo;example&amp;rsquo; 부분&lt;/li>
&lt;li>서브도메인: blog.example.com에서 &amp;lsquo;blog&amp;rsquo; 부분&lt;/li>
&lt;/ol>
&lt;h3>계층 구조&lt;span class="hx-absolute -hx-mt-20" id="계층-구조">&lt;/span>
&lt;a href="#%ea%b3%84%ec%b8%b5-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>루트 도메인: 모든 도메인의 최상위에 위치 (보통 생략됨)&lt;/li>
&lt;li>최상위 도메인(TLD)&lt;/li>
&lt;li>2차 도메인&lt;/li>
&lt;li>서브도메인 (필요에 따라 여러 단계로 확장 가능)&lt;/li>
&lt;/ol>
&lt;h4>최상위 도메인(Top-level Domain, TLD)&lt;span class="hx-absolute -hx-mt-20" id="최상위-도메인top-level-domain-tld">&lt;/span>
&lt;a href="#%ec%b5%9c%ec%83%81%ec%9c%84-%eb%8f%84%eb%a9%94%ec%9d%b8top-level-domain-tld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>정의 도메인 이름의 마지막 마침표 뒤에 오는 모든 것.
&lt;ul>
&lt;li>도메인 이름 &amp;lsquo;google.com&amp;rsquo; 에서 &amp;lsquo;.com&amp;rsquo; 은 TLD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>도메인의 목적이나 소유자 유형을 나타내기도 한다.&lt;br>
ex: &lt;strong>&amp;rsquo;.com&amp;rsquo;&lt;/strong>(영리 사업체용), &lt;strong>&amp;rsquo;.gov&amp;rsquo;&lt;/strong>(미국 정부 기관용), &lt;strong>&amp;rsquo;.edu&amp;rsquo;&lt;/strong>(교육기관용)&lt;/li>
&lt;/ul>
&lt;h5>DNS 조회 프로세스에서의 역할&lt;span class="hx-absolute -hx-mt-20" id="dns-조회-프로세스에서의-역할">&lt;/span>
&lt;a href="#dns-%ec%a1%b0%ed%9a%8c-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4%ec%97%90%ec%84%9c%ec%9d%98-%ec%97%ad%ed%95%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>DNS 확인자 (DNS Recursive Resolver) 는 TLD 서버와 통신하여 도메인 이름 검색을 시작한다.&lt;/li>
&lt;li>TLD 서버는 해당 도메인의 권한 있는 네임서버 정보를 제공한다.&lt;/li>
&lt;/ul>
&lt;h5>관리 및 권한&lt;span class="hx-absolute -hx-mt-20" id="관리-및-권한">&lt;/span>
&lt;a href="#%ea%b4%80%eb%a6%ac-%eb%b0%8f-%ea%b6%8c%ed%95%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>국제 인터넷 주소 관리기구 (ICANN) 가 전체 TLD 관리 권한 보유.&lt;/li>
&lt;li>인터넷 할당 번호 관리가관 (IANA) 이 실제 TLD 관리 담당.&lt;/li>
&lt;li>개별 TLD 는 다양한 기관에 위임되어 관리됨.&lt;/li>
&lt;/ul>
&lt;h5>TLD 유형&lt;span class="hx-absolute -hx-mt-20" id="tld-유형">&lt;/span>
&lt;a href="#tld-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;h6>일반 TLD(generic Top-level Domains, gTLD)&lt;span class="hx-absolute -hx-mt-20" id="일반-tldgeneric-top-level-domains-gtld">&lt;/span>
&lt;a href="#%ec%9d%bc%eb%b0%98-tldgeneric-top-level-domains-gtld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ul>
&lt;li>일반 TLD(gTLD) 에는 &amp;lsquo;.com&amp;rsquo;, &amp;lsquo;.net&amp;rsquo;, &amp;lsquo;.org&amp;rsquo; 등 웹에서 볼 수 있는 보다 일반적인 도메인 이름이 포함된다.&lt;/li>
&lt;li>국제 인터넷 주소 관리 기구 (ICANN) 는 새로운 gTLD 의 생성을 엄격하게 제한했지만, 2010 년에 이러한 제한이 완화됨.&lt;/li>
&lt;li>&amp;lsquo;.top&amp;rsquo;, &amp;lsquo;.xyz&amp;rsquo;, &amp;lsquo;.loan&amp;rsquo; 등의 잘 알려지지 않은 수백 개의 gTLD 가 있다.&lt;/li>
&lt;/ul>
&lt;h6>국가 코드 TLD(country-code Top-level Domains, ccTLD)&lt;span class="hx-absolute -hx-mt-20" id="국가-코드-tldcountry-code-top-level-domains-cctld">&lt;/span>
&lt;a href="#%ea%b5%ad%ea%b0%80-%ec%bd%94%eb%93%9c-tldcountry-code-top-level-domains-cctld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ul>
&lt;li>국가 코드 TLD(ccTLD) 는 국가, 주권 국가, 영토에서 사용하도록 지정되어 있다.&lt;br>
예: &amp;lsquo;.uk&amp;rsquo;(영국), &amp;lsquo;.au&amp;rsquo;(호주), &amp;lsquo;.jp&amp;rsquo;(일본)&lt;/li>
&lt;li>ICANN 에서 운영하는 인터넷 할당 번호 관리 기관 (IANA) 에서는 각 지역에서 ccTLD 를 관리할 적절한 조직을 선택하는 업무를 담당&lt;/li>
&lt;/ul>
&lt;h6>국제화된 국가 코드 TLD(internationalized Country Code Top-level Domains, IDN ccTLD)&lt;span class="hx-absolute -hx-mt-20" id="국제화된-국가-코드-tldinternationalized-country-code-top-level-domains-idn-cctld">&lt;/span>
&lt;a href="#%ea%b5%ad%ec%a0%9c%ed%99%94%eb%90%9c-%ea%b5%ad%ea%b0%80-%ec%bd%94%eb%93%9c-tldinternationalized-country-code-top-level-domains-idn-cctld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ul>
&lt;li>라틴어가 아닌 문자 세트&lt;br>
예:.中国 (중국),.한국 (한국)&lt;/li>
&lt;li>스폰서가 없는 최상위 도메인.
&lt;ul>
&lt;li>글로벌 인터넷 커뮤니티를 위해 ICANN 프로세스에 의해 설정된 정책에 따라 직접 운영되는 도메인.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h6>스폰서 TLD(sponsored Top-level Domains, sTLD)&lt;span class="hx-absolute -hx-mt-20" id="스폰서-tldsponsored-top-level-domains-stld">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%8f%b0%ec%84%9c-tldsponsored-top-level-domains-stld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ul>
&lt;li>전문, 민족, 지리적 커뮤니티를 나타낸다.&lt;/li>
&lt;li>각 후원 TLD(sTLD) 에는 해당 커뮤니티를 대표하는 위임된 후원 기관이 있다.&lt;br>
예:.edu(교육기관),.gov(미국 정부),.mil(미국 군사),.app(개발자 커뮤니티)&lt;/li>
&lt;/ul>
&lt;h6>인프라 TLD&lt;span class="hx-absolute -hx-mt-20" id="인프라-tld">&lt;/span>
&lt;a href="#%ec%9d%b8%ed%94%84%eb%9d%bc-tld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ul>
&lt;li>단일 TLD(&amp;rsquo;.arpa&amp;rsquo;) 만 포함.&lt;/li>
&lt;li>리버스 DNS 조회 촉진과 같은 인터넷 인프라 관리용으로 사용.&lt;/li>
&lt;/ul>
&lt;h6>지정된 TLD&lt;span class="hx-absolute -hx-mt-20" id="지정된-tld">&lt;/span>
&lt;a href="#%ec%a7%80%ec%a0%95%eb%90%9c-tld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ul>
&lt;li>일부 TLD 는 지정 목록에 있으므로 영구적으로 사용할 수 없다.&lt;/li>
&lt;li>특수 목적으로 예약되어 일반 사용 불가.&lt;br>
예: &lt;strong>&amp;rsquo;.localhost&amp;rsquo;&lt;/strong>(로컬 컴퓨터 환경용), &lt;strong>&amp;rsquo;.example&amp;rsquo;&lt;/strong>(예제 데모용)&lt;/li>
&lt;/ul>
&lt;h4>2차 도메인 (Second-Level Domain, SLD)&lt;span class="hx-absolute -hx-mt-20" id="2차-도메인-second-level-domain-sld">&lt;/span>
&lt;a href="#2%ec%b0%a8-%eb%8f%84%eb%a9%94%ec%9d%b8-second-level-domain-sld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>TLD 바로 앞에 위치하는 부분입니다.&lt;/li>
&lt;li>예: example.com에서 &amp;rsquo;example&amp;rsquo; 부분&lt;/li>
&lt;li>조직이나 서비스를 식별하는 고유한 이름입니다.&lt;/li>
&lt;/ul>
&lt;h4>서브 도메인 (Subdomain)&lt;span class="hx-absolute -hx-mt-20" id="서브-도메인-subdomain">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c-%eb%8f%84%eb%a9%94%ec%9d%b8-subdomain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>2차 도메인 앞에 추가되는 부분입니다.&lt;/li>
&lt;li>예: blog.example.com에서 &amp;lsquo;blog&amp;rsquo; 부분&lt;/li>
&lt;li>같은 도메인 내에서 서비스를 구분하는 데 사용됩니다.&lt;/li>
&lt;/ul>
&lt;h3>작동 방식&lt;span class="hx-absolute -hx-mt-20" id="작동-방식">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>사용자가 도메인 이름을 입력한다.&lt;/li>
&lt;li>DNS(Domain Name System)가 도메인 이름을 IP 주소로 변환한다.&lt;/li>
&lt;li>브라우저가 해당 IP 주소의 서버에 접속하여 웹사이트를 표시한다.&lt;/li>
&lt;/ol>
&lt;h3>주의 사항&lt;span class="hx-absolute -hx-mt-20" id="주의-사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98-%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>도메인 이름 선택: 브랜드와 연관성 있고 기억하기 쉬운 이름을 선택해야 한다.&lt;/li>
&lt;li>도메인 갱신: 정기적으로 도메인을 갱신하여 소유권을 유지해야 한다.&lt;/li>
&lt;li>보안: 도메인 하이재킹이나 피싱 공격에 대비해야 한다.&lt;/li>
&lt;li>상표권 고려: 다른 회사의 상표를 침해하지 않도록 주의해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>도메인 관리와 등록&lt;span class="hx-absolute -hx-mt-20" id="도메인-관리와-등록">&lt;/span>
&lt;a href="#%eb%8f%84%eb%a9%94%ec%9d%b8-%ea%b4%80%eb%a6%ac%ec%99%80-%eb%93%b1%eb%a1%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>도메인 등록과 관리 과정은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>도메인 가용성 확인&lt;/li>
&lt;li>WHOIS 정보 설정&lt;/li>
&lt;li>네임 서버 설정&lt;/li>
&lt;li>도메인 등록 실행&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>SSL and TLS</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssl-and-tls/</link><pubDate>Sat, 05 Oct 2024 08:48:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssl-and-tls/</guid><description>
&lt;h2>SSL(Secure Sockets Layer)과 TLS(Transport Layer Security)&lt;span class="hx-absolute -hx-mt-20" id="sslsecure-sockets-layer과-tlstransport-layer-security">&lt;/span>
&lt;a href="#sslsecure-sockets-layer%ea%b3%bc-tlstransport-layer-security" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 상에서 데이터를 안전하게 전송하기 위한 암호화 프로토콜.&lt;br>
TLS는 SSL의 후속 버전으로, 보안성과 성능이 향상되었다.&lt;/p>
&lt;h3>SSL의 역사와 개념&lt;span class="hx-absolute -hx-mt-20" id="ssl의-역사와-개념">&lt;/span>
&lt;a href="#ssl%ec%9d%98-%ec%97%ad%ec%82%ac%ec%99%80-%ea%b0%9c%eb%85%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSL은 1995년 Netscape에 의해 개발되었다.&lt;br>
주요 목적은 웹 브라우징 시 데이터의 기밀성과 무결성을 보장하는 것.&lt;br>
SSL은 다음과 같은 버전으로 발전했다:&lt;/p>
&lt;ol>
&lt;li>SSL 1.0 (내부적으로만 사용)&lt;/li>
&lt;li>SSL 2.0 (1995년 공개)&lt;/li>
&lt;li>SSL 3.0 (1996년 공개)&lt;/li>
&lt;/ol>
&lt;h3>TLS의 등장과 발전&lt;span class="hx-absolute -hx-mt-20" id="tls의-등장과-발전">&lt;/span>
&lt;a href="#tls%ec%9d%98-%eb%93%b1%ec%9e%a5%ea%b3%bc-%eb%b0%9c%ec%a0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>TLS는 SSL 3.0을 기반으로 1999년 IETF(Internet Engineering Task Force)에 의해 개발되었다.&lt;br>
TLS는 SSL의 보안 취약점을 개선하고 더 강력한 암호화 알고리즘을 도입했다.&lt;br>
TLS의 주요 버전은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>TLS 1.0 (1999년)&lt;/li>
&lt;li>TLS 1.1 (2006년)&lt;/li>
&lt;li>TLS 1.2 (2008년)&lt;/li>
&lt;li>TLS 1.3 (2018년)&lt;/li>
&lt;/ol>
&lt;h3>OSI 7계층과 TCP/IP 모델에서의 위치&lt;span class="hx-absolute -hx-mt-20" id="osi-7계층과-tcpip-모델에서의-위치">&lt;/span>
&lt;a href="#osi-7%ea%b3%84%ec%b8%b5%ea%b3%bc-tcpip-%eb%aa%a8%eb%8d%b8%ec%97%90%ec%84%9c%ec%9d%98-%ec%9c%84%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>OSI 7계층:&lt;br>
전송 계층(4계층)과 응용 계층(7계층) 사이에서 동작&lt;/li>
&lt;li>TCP/IP 모델:&lt;br>
전송 계층과 응용 계층 사이에서 동작&lt;/li>
&lt;/ul>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>공개키 암호화와 대칭키 암호화를 모두 사용한다.&lt;/li>
&lt;li>디지털 인증서를 통해 서버의 신원을 확인한다.&lt;/li>
&lt;li>다양한 암호화 알고리즘과 프로토콜 버전을 지원한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터 전송의 보안성 강화&lt;/li>
&lt;li>서버 인증을 통한 신뢰성 확보&lt;/li>
&lt;li>검색 엔진 최적화(SEO) 향상&lt;/li>
&lt;li>규정 준수 지원 (예: PCI DSS)&lt;/li>
&lt;li>사용자 신뢰도 증가&lt;/li>
&lt;/ol>
&lt;h3>SSL과 TLS의 차이점&lt;span class="hx-absolute -hx-mt-20" id="ssl과-tls의-차이점">&lt;/span>
&lt;a href="#ssl%ea%b3%bc-tls%ec%9d%98-%ec%b0%a8%ec%9d%b4%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>버전:
&lt;ul>
&lt;li>SSL은 1.0, 2.0, 3.0 버전이 있으며 모두 취약점이 발견되어 더 이상 사용되지 않는다.&lt;/li>
&lt;li>TLS는 1.0, 1.1, 1.2, 1.3 버전이 있으며, 현재는 1.2와 1.3이 주로 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안성:
&lt;ul>
&lt;li>TLS가 SSL보다 더 강력한 암호화 알고리즘과 보안 기능을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>핸드셰이크 과정:
&lt;ul>
&lt;li>TLS는 SSL보다 더 효율적이고 빠른 핸드셰이크 과정을 가진다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>암호 스위트:
&lt;ul>
&lt;li>TLS는 더 다양하고 안전한 암호 스위트를 지원한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>메시지 인증:
&lt;ul>
&lt;li>SSL은 MAC(Message Authentication Code)를 사용하지만, TLS는 HMAC(Hash-based Message Authentication Code)를 사용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>핸드셰이크(handshake) 과정:
&lt;ol>
&lt;li>&lt;strong>클라이언트 헬로&lt;/strong>: 클라이언트가 지원하는 암호화 방식 등을 서버에 전송한다.&lt;/li>
&lt;li>&lt;strong>서버 헬로&lt;/strong>: 서버가 선택한 암호화 방식과 인증서를 클라이언트에 전송한다.&lt;/li>
&lt;li>&lt;strong>인증서 검증&lt;/strong>: 클라이언트가 서버의 인증서를 검증한다.&lt;/li>
&lt;li>&lt;strong>키 교환&lt;/strong>: 안전한 통신을 위한 대칭 키를 교환한다.&lt;/li>
&lt;li>&lt;strong>암호화 통신 시작&lt;/strong>: 협상된 암호화 방식으로 데이터를 암호화하여 통신한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>데이터 전송: 생성된 세션 키를 사용하여 데이터를 암호화하고 전송한다.&lt;/li>
&lt;li>연결 종료: 통신이 완료되면 세션을 종료하고 세션 키를 폐기한다.&lt;/li>
&lt;/ol>
&lt;p>SSL(Secure Sockets Layer)과 TLS(Transport Layer Security)는 네트워크 통신을 안전하게 암호화하기 위한 프로토콜입니다. 두 프로토콜의 주요 차이점과 관련 개념들에 대해 설명하겠습니다.&lt;/p>
&lt;h3>인증서 체인&lt;span class="hx-absolute -hx-mt-20" id="인증서-체인">&lt;/span>
&lt;a href="#%ec%9d%b8%ec%a6%9d%ec%84%9c-%ec%b2%b4%ec%9d%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>인증서 체인은 디지털 인증서의 신뢰성을 확립하는 계층적 구조이다.&lt;br>
일반적으로 다음과 같은 구조로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>루트 인증서: 최상위 신뢰 기관의 자체 서명 인증서&lt;/li>
&lt;li>중간 인증서: 루트 인증 기관이 서명한 인증서&lt;/li>
&lt;li>최종 사용자 인증서: 웹사이트나 서비스에 발급된 인증서&lt;br>
완전한 인증서 체인을 제공하는 것이 중요하며, 이를 통해 브라우저는 인증서의 유효성을 검증할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>암호 스위트&lt;span class="hx-absolute -hx-mt-20" id="암호-스위트">&lt;/span>
&lt;a href="#%ec%95%94%ed%98%b8-%ec%8a%a4%ec%9c%84%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>암호 스위트는 SSL/TLS 연결에서 사용되는 암호화 알고리즘의 조합.&lt;br>
주요 구성 요소는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>키 교환 알고리즘 (예: RSA, ECDHE)&lt;/li>
&lt;li>인증 알고리즘 (예: RSA, ECDSA)&lt;/li>
&lt;li>대칭 암호화 알고리즘 (예: AES, ChaCha20)&lt;/li>
&lt;li>메시지 인증 코드 알고리즘 (예: SHA-256, POLY1305)&lt;br>
최신 TLS 버전에서는 보안성이 높은 암호 스위트를 우선적으로 사용한다.&lt;/li>
&lt;/ol>
&lt;h3>전방 비밀성&lt;span class="hx-absolute -hx-mt-20" id="전방-비밀성">&lt;/span>
&lt;a href="#%ec%a0%84%eb%b0%a9-%eb%b9%84%eb%b0%80%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>전방 비밀성(Forward Secrecy)은 현재 세션의 키가 노출되더라도 과거 세션의 통신 내용을 해독할 수 없도록 하는 보안 속성이다.&lt;br>
ECDHE나 DHE와 같은 키 교환 방식을 사용하여 구현된다.&lt;/p>
&lt;h3>HTTPS&lt;span class="hx-absolute -hx-mt-20" id="https">&lt;/span>
&lt;a href="#https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS는 HTTP 프로토콜에 SSL/TLS를 적용한 것이다.&lt;br>
웹 브라우저와 서버 간의 모든 통신을 암호화하여 데이터의 기밀성과 무결성을 보장한다.&lt;/p>
&lt;h3>성능 최적화&lt;span class="hx-absolute -hx-mt-20" id="성능-최적화">&lt;/span>
&lt;a href="#%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSL/TLS 성능 최적화를 위한 주요 방법들:&lt;/p>
&lt;ol>
&lt;li>세션 재개: 이전 연결의 정보를 재사용하여 핸드셰이크 과정을 단축한다.&lt;/li>
&lt;li>OCSP Stapling: 인증서 상태 확인 과정을 최적화한다.&lt;/li>
&lt;li>HTTP/2 지원: 연결 다중화를 통해 성능을 향상시킨다.&lt;/li>
&lt;li>적절한 암호 스위트 선택: 보안과 성능의 균형을 고려한다.&lt;/li>
&lt;li>하드웨어 가속: 암호화 작업을 전용 하드웨어로 처리하여 성능을 개선한다.&lt;/li>
&lt;/ol>
&lt;p>추가적으로 알아야 할 내용:&lt;/p>
&lt;ol>
&lt;li>SSL과 TLS의 차이: TLS는 SSL의 후속 버전으로, 더 강화된 보안 기능을 제공합니다.&lt;/li>
&lt;li>인증서 체인: 루트 인증서, 중간 인증서, 최종 엔티티 인증서로 구성된 체인을 통해 신뢰성을 확보합니다.&lt;/li>
&lt;li>암호 스위트: 다양한 암호화 알고리즘의 조합을 지원하며, 클라이언트와 서버가 협상하여 사용할 암호 스위트를 결정합니다.&lt;/li>
&lt;li>전방 비밀성: 세션 키가 노출되더라도 과거의 통신 내용을 해독할 수 없도록 하는 기능을 제공합니다.&lt;/li>
&lt;li>HTTPS: SSL/TLS는 HTTPS 프로토콜의 기반이 되며, 웹 브라우징 보안에 필수적입니다.&lt;/li>
&lt;li>성능 최적화: TLS 1.3에서는 핸드셰이크 과정을 간소화하여 연결 속도를 개선했습니다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/</link><pubDate>Sat, 05 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/</guid><description>
&lt;h2>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)&lt;span class="hx-absolute -hx-mt-20" id="http-hypertext-transfer-protocol--https-hypertext-transfer-protocol-secure">&lt;/span>
&lt;a href="#http-hypertext-transfer-protocol--https-hypertext-transfer-protocol-secure" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>HTTP는 OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;br>
HTTP는 웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다.&lt;/p>
&lt;h3>HTTP의 특징&lt;span class="hx-absolute -hx-mt-20" id="http의-특징">&lt;/span>
&lt;a href="#http%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>클라이언트-서버 모델 기반&lt;/li>
&lt;li>상태를 유지하지 않는 (Stateless) 프로토콜&lt;/li>
&lt;li>연결을 유지하지 않는 (Connectionless) 프로토콜&lt;/li>
&lt;li>요청(Request)과 응답(Response) 구조로 통신&lt;/li>
&lt;li>TCP/IP 기반으로 동작&lt;/li>
&lt;li>80번 포트를 기본으로 사용&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Stateless vs Stateful&lt;br>
Stateless (무상태)&lt;/p>
&lt;ul>
&lt;li>서버가 클라이언트의 이전 요청에 대한 정보를 저장하지 않는다.&lt;/li>
&lt;li>매번 필요한 모든 정보를 함께 전달해야 한다.&lt;/li>
&lt;li>서버 확장성이 높다. 여러 서버를 쉽게 추가할 수 있어 대규모 트래픽 처리에 유리하다.&lt;/li>
&lt;li>클라이언트가 매번 모든 정보를 전송해야 해서 데이터량이 증가할 수 있다.&lt;br>
Stateful (상태 유지)&lt;/li>
&lt;li>서버가 클라이언트의 이전 요청 정보를 기억하는 방식&lt;/li>
&lt;li>예를 들어, 온라인 쇼핑 카트나 로그인 세션 등이 이에 해당&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Connectionless (비연결성)&lt;br>
클라이언트가 서버에 요청을 보내고 서버가 응답한 후에는 연결을 즉시 종료한다.&lt;br>
서버 자원을 효율적으로 사용할 수 있다. 많은 사용자가 동시에 서비스를 이용해도 실제로 서버가 처리하는 요청은 상대적으로 적을 수 있다.&lt;br>
매 요청마다 새로운 연결을 설정해야 해서 약간의 시간이 소요될 수 있다.&lt;/p>
&lt;/blockquote>
&lt;h3>HTTP 요청과 응답의 구조&lt;span class="hx-absolute -hx-mt-20" id="http-요청과-응답의-구조">&lt;/span>
&lt;a href="#http-%ec%9a%94%ec%b2%ad%ea%b3%bc-%ec%9d%91%eb%8b%b5%ec%9d%98-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>HTTP 요청 구조&lt;span class="hx-absolute -hx-mt-20" id="http-요청-구조">&lt;/span>
&lt;a href="#http-%ec%9a%94%ec%b2%ad-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>시작 줄 (Request Line)&lt;/p>
&lt;ul>
&lt;li>HTTP 메서드 (GET, POST 등)&lt;/li>
&lt;li>요청 대상 (URL 또는 경로)&lt;/li>
&lt;li>HTTP 버전&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>헤더&lt;/p>
&lt;ul>
&lt;li>요청에 대한 추가 정보 (예: Host, Content-Type, Accept 등)&lt;/li>
&lt;li>각 헤더는 대소문자를 구분하지 않는 문자열, 콜론(:), 값으로 구성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>빈 줄&lt;/p>
&lt;ul>
&lt;li>헤더의 끝을 나타냄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>본문 (선택적)&lt;/p>
&lt;ul>
&lt;li>POST, PUT, PATCH 등의 요청에서 서버로 전송할 데이터 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">POST /users HTTP/1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host: example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: 50
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name=FirstName%20LastName&amp;amp;email=bsmth%40example.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>HTTP 응답 구조&lt;span class="hx-absolute -hx-mt-20" id="http-응답-구조">&lt;/span>
&lt;a href="#http-%ec%9d%91%eb%8b%b5-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>상태 줄 (Status Line)&lt;/p>
&lt;ul>
&lt;li>HTTP 버전&lt;/li>
&lt;li>상태 코드 (예: 200, 404 등)&lt;/li>
&lt;li>상태 메시지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>헤더&lt;/p>
&lt;ul>
&lt;li>응답에 대한 추가 정보 (예: Content-Type, Content-Length 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>빈 줄&lt;/p>
&lt;ul>
&lt;li>헤더의 끝을 나타냄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>본문 (선택적)&lt;/p>
&lt;ul>
&lt;li>요청된 리소스 또는 오류 메시지 등 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">HTTP/1.1 200 OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: text/html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: 138
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;title&amp;gt;Example Page&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h1&amp;gt;Welcome to the Example Page&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;This is an example of an HTML response body.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/html&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTP Versions&lt;span class="hx-absolute -hx-mt-20" id="http-versions">&lt;/span>
&lt;a href="#http-versions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>HTTP/0.9 (1991)&lt;/th>
&lt;th>HTTP/1.0 (1996)&lt;/th>
&lt;th>HTTP/1.1 (1997)&lt;/th>
&lt;th>HTTP/2 (2015)&lt;/th>
&lt;th>HTTP/3 (2022)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>프로토콜 형식&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지원 메서드&lt;/td>
&lt;td>GET만 지원&lt;/td>
&lt;td>GET, POST 등 추가&lt;/td>
&lt;td>다양한 메서드 지원&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 방식&lt;/td>
&lt;td>요청마다 새 연결&lt;/td>
&lt;td>요청마다 새 연결&lt;/td>
&lt;td>연결 재사용 (keep-alive)&lt;/td>
&lt;td>멀티플렉싱&lt;/td>
&lt;td>QUIC 기반 멀티플렉싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>도입&lt;/td>
&lt;td>개선&lt;/td>
&lt;td>압축&lt;/td>
&lt;td>HTTP/2와 유사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상태 코드&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>도입&lt;/td>
&lt;td>개선&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;td>개선된 메커니즘&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>파이프라이닝&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>멀티플렉싱으로 대체&lt;/td>
&lt;td>멀티플렉싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 푸시&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 계층&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP (QUIC)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>선택적 (SSL)&lt;/td>
&lt;td>선택적 (TLS)&lt;/td>
&lt;td>권장 (TLS)&lt;/td>
&lt;td>의무화 (TLS 1.3)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>멀티플렉싱 (Multiplexing)&lt;/p>
&lt;ul>
&lt;li>기본 개념
&lt;ul>
&lt;li>하나의 연결(Connection)을 통해 여러 개의 요청과 응답을 동시에 주고받을 수 있는 기술&lt;/li>
&lt;li>HTTP/2에서 도입된 핵심 기능&lt;/li>
&lt;li>단일 연결을 통해 여러 요청과 응답을 동시에 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점
&lt;ol>
&lt;li>성능 향상
&lt;ul>
&lt;li>여러 요청을 동시에 처리&lt;/li>
&lt;li>대기 시간 감소&lt;/li>
&lt;li>전체 로딩 시간 단축&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>효율성
&lt;ul>
&lt;li>하나의 연결로 여러 작업 처리&lt;/li>
&lt;li>서버 자원 절약&lt;/li>
&lt;li>네트워크 사용 효율 증가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 경험
&lt;ul>
&lt;li>웹페이지 로딩 속도 향상&lt;/li>
&lt;li>끊김 없는 서비스 제공&lt;/li>
&lt;li>반응성 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>예시
&lt;ul>
&lt;li>쇼핑몰 웹페이지 로딩 상황:
&lt;ul>
&lt;li>HTTP/1.1 (순차적 처리)
&lt;ol>
&lt;li>메인 페이지 로딩&lt;/li>
&lt;li>스타일시트 다운로드&lt;/li>
&lt;li>자바스크립트 파일 다운로드&lt;/li>
&lt;li>상품 이미지들 다운로드 → 모든 과정이 순차적으로 진행되어 전체 로딩 시간이 김&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>HTTP/2 (멀티플렉싱)
&lt;ul>
&lt;li>모든 리소스를 동시에 요청하고 받을 수 있음&lt;/li>
&lt;li>이미지, 스타일, 스크립트 등을 병렬로 처리&lt;/li>
&lt;li>전체 로딩 시간이 크게 단축됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">웹페이지 로딩 시나리오:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/1.1 순차적 처리 (HOL Blocking 발생):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html (200ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">style.css (150ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">script.js (180ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image1.jpg (300ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">총 소요시간: 830ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/2 (멀티플렉싱):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html (200ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">style.css (150ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">script.js (180ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image1.jpg (300ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">총 소요시간: 300ms (가장 긴 요청 시간)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/blockquote>
&lt;h3>HTTP 헤더&lt;span class="hx-absolute -hx-mt-20" id="http-헤더">&lt;/span>
&lt;a href="#http-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Content-Type: 리소스의 미디어 타입을 지정&lt;br>
Authorization: 인증 정보를 전달&lt;br>
Cache-Control: 캐싱 동작을 제어&lt;br>
Cookie/Set-Cookie: 쿠키 정보를 처리&lt;br>
CORS 관련 헤더: 교차 출처 리소스 공유를 제어&lt;/p>
&lt;h3>HTTP 메시지 구조&lt;span class="hx-absolute -hx-mt-20" id="http-메시지-구조">&lt;/span>
&lt;a href="#http-%eb%a9%94%ec%8b%9c%ec%a7%80-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTP 메시지는 다음과 같은 구조로 이루어져 있다:&lt;/p>
&lt;ol>
&lt;li>시작 라인 (요청 라인 또는 상태 라인)&lt;/li>
&lt;li>헤더&lt;/li>
&lt;li>빈 라인&lt;/li>
&lt;li>본문 (선택적)&lt;/li>
&lt;/ol>
&lt;h3>HTTP 메서드&lt;span class="hx-absolute -hx-mt-20" id="http-메서드">&lt;/span>
&lt;a href="#http-%eb%a9%94%ec%84%9c%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 HTTP 메서드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>GET: 리소스 조회&lt;/li>
&lt;li>POST: 리소스 생성&lt;/li>
&lt;li>PUT: 리소스 수정&lt;/li>
&lt;li>DELETE: 리소스 삭제&lt;/li>
&lt;li>PATCH: 리소스 부분 수정&lt;/li>
&lt;/ul>
&lt;h3>HTTP 상태 코드&lt;span class="hx-absolute -hx-mt-20" id="http-상태-코드">&lt;/span>
&lt;a href="#http-%ec%83%81%ed%83%9c-%ec%bd%94%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTP 응답 상태 코드는 다음과 같이 분류된다:&lt;/p>
&lt;ul>
&lt;li>1xx: 정보 제공&lt;/li>
&lt;li>2xx: 성공&lt;/li>
&lt;li>3xx: 리다이렉션&lt;/li>
&lt;li>4xx: 클라이언트 오류&lt;/li>
&lt;li>5xx: 서버 오류&lt;/li>
&lt;/ul>
&lt;h3>HTTPS와 보안&lt;span class="hx-absolute -hx-mt-20" id="https와-보안">&lt;/span>
&lt;a href="#https%ec%99%80-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS는 HTTP에 보안 계층을 추가한 프로토콜이다.&lt;br>
주요 특징은 다음과 같다.&lt;/p>
&lt;ol>
&lt;li>SSL/TLS를 통해 다음과 같은 보안 기능을 제공한다:
&lt;ol>
&lt;li>데이터 암호화: 통신 내용을 제3자가 읽을 수 없게 한다.&lt;/li>
&lt;li>무결성 보장: 데이터가 전송 중에 변조되지 않았음을 보장한다.&lt;/li>
&lt;li>인증: 통신 상대방이 신뢰할 수 있는 서버임을 증명한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>443번 포트를 기본으로 사용&lt;/li>
&lt;li>데이터의 기밀성과 무결성 보장&lt;/li>
&lt;li>웹사이트의 신뢰성 증가&lt;/li>
&lt;li>SEO에 긍정적 영향&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HTTPS 서버 예시 (Python Flask)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Flask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ssl_context&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cert.pem&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;key.pem&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTPS의 동작 원리&lt;span class="hx-absolute -hx-mt-20" id="https의-동작-원리">&lt;/span>
&lt;a href="#https%ec%9d%98-%eb%8f%99%ec%9e%91-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS는 다음과 같은 과정으로 동작한다.&lt;/p>
&lt;ol>
&lt;li>SSL/TLS 핸드셰이크를 통한 연결 설정&lt;/li>
&lt;li>대칭키와 비대칭키 암호화 방식을 결합하여 사용&lt;/li>
&lt;li>인증서를 통한 서버 신원 확인&lt;/li>
&lt;/ol>
&lt;h3>HTTPS 도입 시 고려사항&lt;span class="hx-absolute -hx-mt-20" id="https-도입-시-고려사항">&lt;/span>
&lt;a href="#https-%eb%8f%84%ec%9e%85-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS를 도입할 때 다음 사항들을 고려해야 한다.&lt;/p>
&lt;ol>
&lt;li>적절한 SSL/TLS 인증서 선택&lt;/li>
&lt;li>서버 구성 및 최적화&lt;/li>
&lt;li>리디렉션 설정 (HTTP에서 HTTPS로)&lt;/li>
&lt;li>혼합 콘텐츠 문제 해결&lt;/li>
&lt;li>성능 영향 고려&lt;/li>
&lt;/ol>
&lt;h3>보안 강화를 위한 추가 조치&lt;span class="hx-absolute -hx-mt-20" id="보안-강화를-위한-추가-조치">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%95%88-%ea%b0%95%ed%99%94%eb%a5%bc-%ec%9c%84%ed%95%9c-%ec%b6%94%ea%b0%80-%ec%a1%b0%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS 외에도 다음과 같은 보안 조치를 취해야 한다.&lt;/p>
&lt;ol>
&lt;li>콘텐츠 보안 정책(CSP) 설정&lt;/li>
&lt;li>XSS, CSRF 등 웹 취약점 방지&lt;/li>
&lt;li>데이터 입력 검증&lt;/li>
&lt;li>SQL 인젝션 방지&lt;/li>
&lt;li>HSTS(HTTP Strict Transport Security) 헤더 설정&lt;/li>
&lt;li>Referrer-Policy 헤더 설정&lt;/li>
&lt;/ol>
&lt;p>XSS(Cross-Site Scripting) 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데이터 이스케이프 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">markupsafe&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">escape&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user/&amp;lt;name&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">user_profile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;Hello, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">escape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">!&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>CSRF(Cross-Site Request Forgery) 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_wtf.csrf&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">CSRFProtect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">csrf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CSRFProtect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>SQL 인젝션 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파라미터화된 쿼리 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cursor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SELECT * FROM users WHERE id = ?&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>성능 최적화&lt;span class="hx-absolute -hx-mt-20" id="성능-최적화">&lt;/span>
&lt;a href="#%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTP 성능 최적화를 위한 주요 기술들:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>캐싱 전략&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/data&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_data&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">make_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jsonify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Cache-Control&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;public, max-age=300&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>압축&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_compress&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Compress&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">compress&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Compress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Keep-Alive 연결&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Connection&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;keep-alive&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>세션과 쿠키&lt;span class="hx-absolute -hx-mt-20" id="세션과-쿠키">&lt;/span>
&lt;a href="#%ec%84%b8%ec%85%98%ea%b3%bc-%ec%bf%a0%ed%82%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>상태 관리를 위한 메커니즘을 이해해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 세션 관리 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">login&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authenticate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">form&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;user_id&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/dashboard&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTP/2와 HTTP/3&lt;span class="hx-absolute -hx-mt-20" id="http2와-http3">&lt;/span>
&lt;a href="#http2%ec%99%80-http3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>최신 버전의 HTTP 프로토콜에 대해서도 이해가 필요하다:&lt;/p>
&lt;ol>
&lt;li>HTTP/2: 멀티플렉싱, 헤더 압축 등을 통한 성능 개선&lt;/li>
&lt;li>HTTP/3: QUIC 프로토콜 기반, 더 빠른 연결 설정과 향상된 성능&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>HTTP(S)&lt;span class="hx-absolute -hx-mt-20" id="https">&lt;/span>
&lt;a href="#https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://yozm.wishket.com/magazine/detail/1686/" target="_blank" rel="noopener">웹 개발자라면 알고 있어야 할 HTTP의 진화 과정&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/experts/techBoardDetail.do?ID=163937&amp;amp;boardType=experts" target="_blank" rel="noopener">[네트워크] Low Level HTTP 통신&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/experts/techBoardDetail.do?ID=165318&amp;amp;boardType=experts" target="_blank" rel="noopener">[네트워크] Raw HTTP Message 확인하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/130/" target="_blank" rel="noopener">HTTP vs HTTPS 차이, 알면 사이트의 레벨이 보인다.&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/694/" target="_blank" rel="noopener">HTTP의 새로운 메서드, 서치(SEARCH)에 대하여&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/471/" target="_blank" rel="noopener">HTTP, 그리고 HTTPS의 이해&lt;/a>&lt;br>
&lt;a href="https://brunch.co.kr/@swimjiy/47" target="_blank" rel="noopener">그림으로 쉽게 보는 HTTPS, SSL, TLS&lt;/a>&lt;br>
&lt;a href="https://wormwlrm.github.io/2022/09/02/Evolution-of-HTTP.html" target="_blank" rel="noopener">웹 개발자라면 알고 있어야 할 HTTP의 진화 과정&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1852/" target="_blank" rel="noopener">안전한 웹을 위해 HTTPS 이해하기: 1. HTTPS의 작동 원리&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1862/" target="_blank" rel="noopener">안전한 웹을 위해 HTTPS 이해하기: 2. HTTPS를 강제하는 HSTS 기술&lt;/a>&lt;br>
&lt;a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Status" target="_blank" rel="noopener">HTTP status Code&lt;/a>&lt;br>
&lt;a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Methods" target="_blank" rel="noopener">HTTP 요청 메서드&lt;/a>&lt;/p></description></item><item><title>서브넷팅 (Subnetting)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/subnetting/</link><pubDate>Fri, 04 Oct 2024 13:09:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/subnetting/</guid><description>
&lt;h2>서브넷팅 (Subnetting)&lt;span class="hx-absolute -hx-mt-20" id="서브넷팅-subnetting">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ed%8c%85-subnetting" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>서브넷팅(Subnetting)은 네트워크를 더 작은 단위의 네트워크로 분할하는 기술이다.&lt;br>
이 기술은 IP 주소의 효율적인 사용과 네트워크 관리를 개선하기 위해 사용된다.&lt;/p>
&lt;p>서브넷팅은 하나의 IP 클래스를 효율적으로 이용하기 위해 Host ID 구간을 분할하여 원래 정의된 Network ID와 함께 Network ID로 사용하는 네트워크 관리 기법이다.&lt;/p>
&lt;p>서브넷팅을 통해 분할된 네트워크를 서브넷(Subnet)라고 한다.&lt;/p>
&lt;h3>주요 목적&lt;span class="hx-absolute -hx-mt-20" id="주요-목적">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>IP 주소 낭비 방지&lt;/li>
&lt;li>브로드캐스트 도메인의 크기 축소&lt;/li>
&lt;li>네트워크 성능 향상&lt;/li>
&lt;li>보안성 강화&lt;/li>
&lt;/ol>
&lt;h3>서브넷팅의 장점&lt;span class="hx-absolute -hx-mt-20" id="서브넷팅의-장점">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ed%8c%85%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>네트워크 관리 용이성 향상&lt;/li>
&lt;li>고급 네트워크 보안 구현 가능&lt;/li>
&lt;li>네트워크 트래픽 감소&lt;/li>
&lt;li>ISP로부터 추가 IP 주소 요청 필요성 감소&lt;/li>
&lt;/ol>
&lt;h3>서브넷 (Subnet)&lt;span class="hx-absolute -hx-mt-20" id="서브넷-subnet">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7-subnet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>서브넷은 &amp;lsquo;Sub Network&amp;rsquo;의 줄임말로, 더 큰 네트워크의 논리적인 부분집합을 의미한다.&lt;br>
이는 마치 큰 건물을 여러 개의 사무실로 나누는 것과 비슷한데, 각 사무실(서브넷)은 자신만의 공간을 가지면서도 전체 건물(네트워크)의 일부로 기능한다.&lt;/p>
&lt;h4>서브넷의 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="서브넷의-구성-요소">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>서브넷 주소&lt;br>
서브넷 주소는 해당 서브넷을 식별하는 고유한 주소.&lt;br>
이는 해당 서브넷의 첫 번째 IP 주소로, 네트워크 주소라고도 한다.&lt;br>
예를 들어, 192.168.1.0/24라는 서브넷에서 192.168.1.0이 서브넷 주소가 된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>브로드캐스트 주소&lt;br>
각 서브넷의 마지막 IP 주소는 브로드캐스트 주소로 사용된다.&lt;br>
이 주소로 보내진 패킷은 해당 서브넷의 모든 호스트가 수신한다.&lt;br>
192.168.1.0/24 서브넷에서는 192.168.1.255가 브로드캐스트 주소가 된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>사용 가능한 호스트 주소&lt;br>
서브넷 주소와 브로드캐스트 주소 사이의 모든 IP 주소는 해당 서브넷 내의 호스트들이 사용할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4>서브넷의 동작 방식&lt;span class="hx-absolute -hx-mt-20" id="서브넷의-동작-방식">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ec%9d%98-%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>패킷 라우팅&lt;br>
서브넷은 라우터를 통해 서로 통신한다.&lt;br>
라우터는 목적지 IP 주소를 확인하고, 해당 패킷을 적절한 서브넷으로 전달한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>브로드캐스트 도메인&lt;br>
각 서브넷은 독립된 브로드캐스트 도메인을 형성한다.&lt;br>
한 서브넷에서 발생한 브로드캐스트 트래픽은 다른 서브넷으로 전파되지 않는다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네트워크 세그먼테이션&lt;br>
서브넷을 통해 네트워크를 논리적으로 분할함으로써, 트래픽을 효율적으로 관리하고 보안을 강화할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>서브넷의 종류&lt;span class="hx-absolute -hx-mt-20" id="서브넷의-종류">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>내부 서브넷&lt;/p>
&lt;ul>
&lt;li>조직 내부에서만 사용되는 사설 IP 주소를 사용&lt;/li>
&lt;li>일반적으로 NAT를 통해 외부와 통신&lt;/li>
&lt;li>보안성이 높고 관리가 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>DMZ(비무장지대) 서브넷&lt;/p>
&lt;ul>
&lt;li>내부 네트워크와 외부 네트워크 사이에 위치&lt;/li>
&lt;li>웹 서버, 메일 서버 등 외부에 서비스를 제공하는 서버들이 위치&lt;/li>
&lt;li>보안과 접근성의 균형을 맞춘 구성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>외부 서브넷&lt;/p>
&lt;ul>
&lt;li>공인 IP 주소를 사용&lt;/li>
&lt;li>인터넷에 직접 연결&lt;/li>
&lt;li>주로 라우터나 방화벽이 위치&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>서브넷의 실제 구현 예시&lt;span class="hx-absolute -hx-mt-20" id="서브넷의-실제-구현-예시">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ec%9d%98-%ec%8b%a4%ec%a0%9c-%ea%b5%ac%ed%98%84-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>사무실 환경의 서브넷 구성&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">본사 사무실:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 관리부 서브넷: 192.168.1.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 개발부 서브넷: 192.168.2.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 영업부 서브넷: 192.168.3.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 서버팜 서브넷: 192.168.10.0/24&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>데이터센터 환경의 서브넷 구성&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">데이터센터:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 웹 서버 서브넷: 10.1.1.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 데이터베이스 서브넷: 10.1.2.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 백업 서브넷: 10.1.3.0/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 관리 서브넷: 10.1.255.0/24&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>서브넷팅의 구성요소&lt;span class="hx-absolute -hx-mt-20" id="서브넷팅의-구성요소">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ed%8c%85%ec%9d%98-%ea%b5%ac%ec%84%b1%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>서브넷 마스크: IP 주소와 AND 연산을 통해 네트워크 ID를 추출하는 데 사용된다.&lt;br>
IP 주소를 서브넷팅하는 경우 IP 주소와 별도로 어디까지가 Network Address 이고 어디까지고 Host Address 인지 구별할 수 있는 식별자가 필요한데 이를 서브넷 마스크라고 한다.&lt;br>
주어진 IP 주소를 네트워크 환경에 맞게 나누어 주기 위해서 씌워주는 이진수의 조합이다.&lt;/li>
&lt;li>게이트웨이: 서로 다른 네트워크 간 통신을 가능하게 하는 장치.&lt;/li>
&lt;li>Network ID: 전체 네트워크에서 각 네트워크를 구분하는 주소.&lt;/li>
&lt;li>Host ID: 하나의 네트워크 내에서 각 호스트를 구분하는 주소.&lt;/li>
&lt;/ol>
&lt;h3>서브넷팅 계산 방법&lt;span class="hx-absolute -hx-mt-20" id="서브넷팅-계산-방법">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b8%8c%eb%84%b7%ed%8c%85-%ea%b3%84%ec%82%b0-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>필요한 네트워크 수 결정&lt;/li>
&lt;li>네트워크 ID 생성을 위한 비트 수 결정&lt;/li>
&lt;li>서브넷 마스크 계산&lt;/li>
&lt;li>서브넷 ID 계산&lt;/li>
&lt;li>각 서브넷의 호스트 ID 범위 계산&lt;/li>
&lt;/ol>
&lt;p>
&lt;img src="../function-subnet-mask.svg" alt="The function of the subnet mask" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask&lt;/a> _&lt;/p>
&lt;p>
&lt;img src="../number-hosts-per-subnet.svg" alt="Number of hosts per subnet" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask&lt;/a> _&lt;/p>
&lt;p>
&lt;img src="../determining-a_subnet-boundary.svg" alt="Determining the boundaries of a subnet" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask&lt;/a> _&lt;/p>
&lt;h3>FLSM Vs VLSM&lt;span class="hx-absolute -hx-mt-20" id="flsm-vs-vlsm">&lt;/span>
&lt;a href="#flsm-vs-vlsm" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>VLSM(Variable Length Subnet Mask)과 FLSM(Fixed Length Subnet Mask)은 IP 네트워크 설계에서 사용되는 서브넷팅 기술이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>VLSM (Variable Length Subnet Mask)&lt;/th>
&lt;th>FLSM (Fixed Length Subnet Mask)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>각 서브넷마다 다른 크기의 서브넷 마스크를 사용할 수 있는 서브네팅 방식. 네트워크 요구사항에 따라 다양한 크기의 서브넷을 유연하게 생성할 수 있음&lt;/td>
&lt;td>모든 서브넷이 동일한 크기의 서브넷 마스크를 사용하는 서브네팅 방식. 네트워크를 동일한 크기의 블록으로 균등하게 분할&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>작동 방식&lt;/td>
&lt;td>1. 가장 큰 서브넷부터 순차적으로 주소 할당&lt;br>2. 남은 공간에서 그다음 크기의 서브넷 할당&lt;br>3. 각 서브넷의 요구사항에 맞는 최적의 크기로 분할&lt;br>4. 계층적 주소 지정 구조 사용&lt;/td>
&lt;td>1. 전체 네트워크를 동일한 크기로 균등 분할&lt;br>2. 각 서브넷에 동일한 수의 호스트 주소 할당&lt;br>3. 단순한 이진수 분할 방식 사용&lt;br>4. 평면적 주소 지정 구조 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 할당 방식&lt;/td>
&lt;td>- 각 서브넷의 실제 필요한 호스트 수에 기반하여 할당&lt;br>2의 거듭제곱 단위로 호스트 수 계산&lt;br>- 남은 주소 공간을 다른 서브넷에 재활용 가능&lt;/td>
&lt;td>- 모든 서브넷에 동일한 수의 호스트 주소 할당&lt;br>- 서브넷 크기는 처음 설계 시 고정&lt;br>- 사용하지 않는 주소도 예약됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IP 주소 활용 효율성&lt;/td>
&lt;td>- 필요한 만큼만 할당하여 주소 낭비 최소화&lt;br>- 남은 주소 공간을 효율적으로 재사용&lt;br>- 주소 공간 활용도 90% 이상 달성 가능&lt;/td>
&lt;td>- 모든 서브넷이 동일 크기로 할당되어 주소 낭비 발생&lt;br>- 작은 네트워크에도 큰 주소 블록 할당&lt;br>- 주소 공간 활용도 50% 미만인 경우 많음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설계 복잡도&lt;/td>
&lt;td>- 네트워크 요구사항 상세 분석 필요&lt;br>- 서브넷 크기 계산이 복잡&lt;br>- 주소 할당 순서 고려 필요&lt;br>- 세부적인 문서화 필요&lt;/td>
&lt;td>- 간단한 이진수 계산만으로 설계 가능&lt;br>- 모든 서브넷이 동일 크기로 균등 분할&lt;br>- 최소한의 계획만으로 구현 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 구성&lt;/td>
&lt;td>- 각 서브넷마다 다른 마스크 적용&lt;br>- 라우팅 테이블이 복잡해짐&lt;br>- 라우팅 프로토콜이 VLSM을 지원해야 함&lt;/td>
&lt;td>- 모든 서브넷이 동일한 마스크 사용&lt;br>- 라우팅 테이블이 단순함&lt;br>- 기본적인 라우팅 프로토콜로도 구현 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>- 새로운 서브넷 추가가 유연함&lt;br>- 기존 할당에 영향 없이 확장 가능&lt;br>- 다양한 크기의 네트워크 수용 가능&lt;/td>
&lt;td>- 미리 정해진 크기로만 확장 가능&lt;br>- 새로운 크기의 서브넷 추가 어려움&lt;br>- 전체 구조 변경 필요할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 도구&lt;/td>
&lt;td>- 고급 네트워크 관리 도구 필요&lt;br>VLSM 지원 라우터 필요&lt;br>- 전문 네트워크 설계 소프트웨어 활용&lt;/td>
&lt;td>- 기본적인 네트워크 도구로 충분&lt;br>- 대부분의 라우터에서 지원&lt;br>- 간단한 계산기로도 설계 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오류 가능성&lt;/td>
&lt;td>- 잘못된 서브넷 마스크 할당 위험&lt;br>- 주소 중복 할당 가능성&lt;br>- 복잡한 구성으로 인한 오류 위험 높음&lt;/td>
&lt;td>- 단순한 구성으로 오류 가능성 낮음&lt;br>- 주소 중복 가능성 거의 없음&lt;br>- 설정 오류 발생 가능성 낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수&lt;/td>
&lt;td>- 정기적인 주소 할당 검토 필요&lt;br>- 복잡한 문서화 관리 필요&lt;br>- 전문 관리자 필요&lt;/td>
&lt;td>- 최소한의 유지보수만 필요&lt;br>- 간단한 문서화로 충분&lt;br>- 일반 관리자도 관리 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용 효율성&lt;/td>
&lt;td>- 초기 설계 비용 높음&lt;br>- 전문 인력 필요&lt;br>- 고급 장비 필요하나 장기적으로는 효율적&lt;/td>
&lt;td>- 초기 설계 비용 낮음&lt;br>- 일반 인력으로 충분&lt;br>- 기본 장비로 구현 가능하나 IP 낭비 비용 발생&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 사례&lt;/td>
&lt;td>- 대규모 기업 네트워크&lt;br>ISP 네트워크&lt;br>- 다양한 규모의 지사를 가진 조직&lt;/td>
&lt;td>- 소규모 사무실 네트워크&lt;br>- 학교 네트워크&lt;br>- 비슷한 규모의 부서로 구성된 조직&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 차이점들을 고려할 때, 네트워크의 규모, 복잡성, 향후 확장 계획 등을 종합적으로 평가하여 적절한 서브네팅 방식을 선택하는 것이 중요하다.&lt;br>
VLSM은 복잡하지만 효율적인 주소 활용이 필요한 대규모 네트워크에 적합하며, FLSM은 단순하고 관리가 용이한 소규모 네트워크에 적합하다.&lt;/p>
&lt;p>192.168.1.0/24 네트워크를 4개의 동일한 서브넷으로 나누는 경우:&lt;/p>
&lt;ol>
&lt;li>FLSM(Fixed Length Subnet Mask)에서는
&lt;ol>
&lt;li>서브넷 마스크가 /26으로 변경된다.&lt;/li>
&lt;li>결과적으로 192.168.1.0/26, 192.168.1.64/26, 192.168.1.128/26, 192.168.1.192/26의 4개 서브넷이 생성된다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>VLSM(Variable Length Subnet Mask)
&lt;ol>
&lt;li>100개 호스트 필요: 192.168.1.0/25 (126개 사용 가능 주소)&lt;/li>
&lt;li>50개 호스트 필요: 192.168.1.128/26 (62개 사용 가능 주소)&lt;/li>
&lt;li>25개 호스트 필요: 192.168.1.192/27 (30개 사용 가능 주소)&lt;/li>
&lt;li>10개 호스트 필요: 192.168.1.224/28 (14개 사용 가능 주소)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Subnet&lt;span class="hx-absolute -hx-mt-20" id="subnet">&lt;/span>
&lt;a href="#subnet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/what-is-a-subnet/" target="_blank" rel="noopener">서브넷이란? | 서브넷의 작동 방식&lt;/a>&lt;br>
&lt;a href="https://louis-j.tistory.com/entry/Subnet-mask-%EC%84%9C%EB%B8%8C%EB%84%B7-%EC%84%9C%EB%B8%8C%EB%84%B7%EB%A7%88%EC%8A%A4%ED%81%AC-%EC%84%9C%EB%B8%8C%EB%84%B7%ED%8C%85%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C#google_vignette" target="_blank" rel="noopener">\[Subnet mask\] 서브넷, 서브넷 마스크, 서브넷팅에 대해서!&lt;/a>&lt;br>
[The Subnet Mask](&lt;a href="https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ip-subnetting/the-subnet-mask&lt;/a>&lt;br>
&lt;a href="https://www.itworld.co.kr/news/191458" target="_blank" rel="noopener">다시 돌아보는 기본 : 서브넷의 이해&lt;/a>&lt;br>
&lt;a href="https://hyoje420.tistory.com/32" target="_blank" rel="noopener">[Network]서브넷(Subnet)&lt;/a>&lt;br>
&lt;a href="https://code-lab1.tistory.com/34" target="_blank" rel="noopener">\[네트워크\] 서브넷, 서브넷마스크, 서브넷팅이란?&lt;/a>&lt;br>
&lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/what-is-a-subnet/" target="_blank" rel="noopener">서브넷이란? | 서브넷의 작동 방식&lt;/a>&lt;/p></description></item><item><title>네트워크 주소 변환 (NAT, Network Address Translation)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/nat/</link><pubDate>Fri, 04 Oct 2024 13:07:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/nat/</guid><description>
&lt;h2>네트워크 주소 변환 (NAT, Network Address Translation)&lt;span class="hx-absolute -hx-mt-20" id="네트워크-주소-변환-nat-network-address-translation">&lt;/span>
&lt;a href="#%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac-%ec%a3%bc%ec%86%8c-%eb%b3%80%ed%99%98-nat-network-address-translation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>네트워크 주소 변환(NAT, Network Address Translation)은 IP 패킷의 TCP/UDP 포트 번호와 소스 및 목적지의 IP 주소를 재기록하면서 라우터를 통해 네트워크 트래픽을 주고받는 기술이다.&lt;/p>
&lt;p>NAT 를 이용하는 이유는 대개 사설 네트워크에 속한 여러 개의 호스트가 하나의 공인 IP 주소를 사용하여 인터넷에 접속하기 위함으로, 등록되지 않은 IP 주소를 사용하는 사설 IP 네트워크가 인터넷에 연결될 수 있도록 한다.&lt;/p>
&lt;p>일반적으로 두 네트워크를 함께 연결하는 라우터에서 작동하며, 패킷이 다른 네트워크로 전달되기 전에 내부 네트워크의 비공개 (전역적으로 고유하지 않음) 주소를 올바른 주소로 변환한다.&lt;/p>
&lt;p>
&lt;img src="../NAT_Concept-en.svg" alt="Network address translation between a private network and the Internet" loading="lazy" />&lt;br>
_Source: &lt;a href="https://en.wikipedia.org/wiki/Network_address_translation" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Network_address_translation&lt;/a> _&lt;/p>
&lt;h3>NAT의 작동 원리&lt;span class="hx-absolute -hx-mt-20" id="nat의-작동-원리">&lt;/span>
&lt;a href="#nat%ec%9d%98-%ec%9e%91%eb%8f%99-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>NAT 장비는 IP 패킷의 출발지와 목적지 IP 주소를 변환하고, 필요한 경우 포트 번호도 변환한다.&lt;br>
이를 통해 내부 네트워크의 여러 기기가 하나의 공인 IP 주소를 공유하며 외부 인터넷과 통신할 수 있다.&lt;/p>
&lt;h3>NAT의 동작 과정&lt;span class="hx-absolute -hx-mt-20" id="nat의-동작-과정">&lt;/span>
&lt;a href="#nat%ec%9d%98-%eb%8f%99%ec%9e%91-%ea%b3%bc%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>네트워크 주소 변환(NAT)의 동작 과정은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>내부 네트워크에서 패킷 전송:&lt;/p>
&lt;ul>
&lt;li>내부 호스트(예: 10.10.10.10)가 외부 서버(예: 20.20.20.20:80)로 패킷을 전송한다.&lt;/li>
&lt;li>출발지 IP와 포트(예: 10.10.10.10:2000), 목적지 IP와 포트(20.20.20.20:80)가 패킷에 포함된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>NAT 장비에서의 주소 변환:&lt;/p>
&lt;ul>
&lt;li>NAT 장비가 패킷을 수신하고 NAT 정책에 따라 주소를 변환한다.&lt;/li>
&lt;li>출발지 IP를 공인 IP(예: 11.11.11.11)로 변경한다.&lt;/li>
&lt;li>변경된 정보를 NAT 테이블에 저장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>변환된 패킷 전송:&lt;/p>
&lt;ul>
&lt;li>NAT 장비가 변환된 패킷을 외부 네트워크로 전송한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>외부 서버의 응답:&lt;/p>
&lt;ul>
&lt;li>외부 서버가 응답 패킷을 NAT 장비의 공인 IP(11.11.11.11)로 전송한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>NAT 장비에서의 역변환:&lt;/p>
&lt;ul>
&lt;li>NAT 장비가 응답 패킷을 수신하고 NAT 테이블을 참조한다.&lt;/li>
&lt;li>목적지 IP를 원래의 내부 IP(10.10.10.10)로 변경한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>내부 호스트로 패킷 전달:&lt;/p>
&lt;ul>
&lt;li>변환된 패킷을 내부 네트워크의 원래 호스트로 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이 과정을 통해 NAT는 내부 네트워크의 사설 IP 주소를 외부 네트워크의 공인 IP 주소로 변환하여 통신을 가능하게 한다.&lt;/p>
&lt;h3>NAT의 주요 유형&lt;span class="hx-absolute -hx-mt-20" id="nat의-주요-유형">&lt;/span>
&lt;a href="#nat%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Static NAT (정적 NAT)
&lt;ul>
&lt;li>하나의 사설 IP 주소가 하나의 공인 IP 주소와 1:1로 매핑된다.&lt;/li>
&lt;li>주로 웹 서버나 메일 서버처럼 고정된 공인 IP가 필요한 경우에 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dynamic NAT (동적 NAT)
&lt;ul>
&lt;li>여러 개의 사설 IP 주소가 공인 IP 주소 풀과 동적으로 매핑된다.&lt;/li>
&lt;li>사설 네트워크의 호스트가 외부와 통신할 때마다 사용 가능한 공인 IP를 할당받는다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>PAT (Port Address Translation) 또는 NAPT (Network Address Port Translation)
&lt;ul>
&lt;li>가장 널리 사용되는 NAT 방식.&lt;/li>
&lt;li>여러 사설 IP 주소가 하나의 공인 IP 주소를 공유하며, 포트 번호로 구분된다.&lt;/li>
&lt;li>일반 가정이나 소규모 사무실에서 흔히 사용되는 방식.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>NAT의 장점&lt;span class="hx-absolute -hx-mt-20" id="nat의-장점">&lt;/span>
&lt;a href="#nat%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>IP 주소 절약: 하나의 공인 IP 주소로 여러 대의 호스트가 인터넷에 접속할 수 있다.&lt;/li>
&lt;li>보안 강화: 내부 네트워크 주소를 외부에 노출하지 않아 보안성이 향상된다.&lt;/li>
&lt;li>네트워크 확장성: 로컬 네트워크에 새로운 장비를 쉽게 추가할 수 있다.&lt;/li>
&lt;li>ISP 변경 용이성: 공인 IP 주소만 변경하면 되므로 ISP 변경이 쉽다.&lt;/li>
&lt;/ol>
&lt;h3>NAT의 단점&lt;span class="hx-absolute -hx-mt-20" id="nat의-단점">&lt;/span>
&lt;a href="#nat%ec%9d%98-%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성 증가: NAT로 인해 네트워크 구성과 관리가 더 복잡해진다.&lt;/li>
&lt;li>성능 저하: 주소 변환 과정에서 네트워크 지연이 발생할 수 있다.&lt;/li>
&lt;li>특정 애플리케이션 호환성 문제: NAT는 IP 헤더만 수정하므로 일부 애플리케이션에서 문제가 발생할 수 있다.&lt;/li>
&lt;li>보안 프로토콜 문제: IPsec과 같은 프로토콜은 NAT로 인한 헤더 변경을 탐지하여 문제가 발생할 수 있다.&lt;/li>
&lt;li>클라이언트 접근 제한: 내부 네트워크의 호스트에 외부에서 직접 접근하기 어려워진다.&lt;/li>
&lt;/ol>
&lt;h3>NAT 트래버설&lt;span class="hx-absolute -hx-mt-20" id="nat-트래버설">&lt;/span>
&lt;a href="#nat-%ed%8a%b8%eb%9e%98%eb%b2%84%ec%84%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>NAT(Network Address Translation) 환경에서 P2P(Peer-to-Peer) 통신을 가능하게 하는 기술이다.&lt;/p>
&lt;h4>주요 NAT 트래버설 기술&lt;span class="hx-absolute -hx-mt-20" id="주요-nat-트래버설-기술">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-nat-%ed%8a%b8%eb%9e%98%eb%b2%84%ec%84%a4-%ea%b8%b0%ec%88%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>STUN (Session Traversal Utilities for NAT)&lt;/p>
&lt;ul>
&lt;li>STUN은 클라이언트가 NAT 장치의 외부 IP 주소와 포트를 알아내는 데 사용된다.&lt;/li>
&lt;li>클라이언트는 STUN 서버에 요청을 보내고, 서버는 클라이언트의 외부 IP 주소와 포트를 반환한다.&lt;/li>
&lt;li>이를 통해 클라이언트는 외부 서버와의 연결을 설정할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TURN (Traversal Using Relays around NAT)&lt;/p>
&lt;ul>
&lt;li>TURN은 직접 연결이 불가능한 경우 중계 서버를 통해 데이터를 전송한다.&lt;/li>
&lt;li>클라이언트는 TURN 서버에 연결하고, 서버가 클라이언트와 외부 서버 간의 데이터를 중계한다.&lt;/li>
&lt;li>대역폭을 소모하지만, NAT 환경에서의 연결 문제를 해결하는 데 유용하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ICE (Interactive Connectivity Establishment)&lt;/p>
&lt;ul>
&lt;li>ICE는 STUN과 TURN을 결합하여 NAT 환경에서의 연결을 최적화한다.&lt;/li>
&lt;li>여러 후보 경로를 수집하고, 가장 적합한 경로를 선택하여 연결을 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>NAT 트래버설의 작동 과정&lt;span class="hx-absolute -hx-mt-20" id="nat-트래버설의-작동-과정">&lt;/span>
&lt;a href="#nat-%ed%8a%b8%eb%9e%98%eb%b2%84%ec%84%a4%ec%9d%98-%ec%9e%91%eb%8f%99-%ea%b3%bc%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>클라이언트는 먼저 STUN 서버를 사용하여 자신의 공인 IP 주소와 포트를 확인한다.&lt;/li>
&lt;li>직접 연결이 불가능한 경우, TURN 서버를 통해 데이터를 중계한다.&lt;/li>
&lt;li>ICE 프로토콜은 STUN과 TURN을 포함한 여러 연결 방법을 시도하고, 최적의 경로를 선택한다.&lt;/li>
&lt;li>선택된 경로를 통해 P2P 통신이 이루어진다.&lt;/li>
&lt;/ol>
&lt;p>NAT 트래버설 기술은 VoIP, 온라인 게임, 화상 회의 서비스 등 실시간 통신이 필요한 애플리케이션에서 널리 사용된다.&lt;/p>
&lt;h4>NAT와 IPv6&lt;span class="hx-absolute -hx-mt-20" id="nat와-ipv6">&lt;/span>
&lt;a href="#nat%ec%99%80-ipv6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>IPv6는 거의 무한한 주소 공간을 제공하여 NAT의 주요 목적인 IP 주소 부족 문제를 해결할 수 있다.&lt;br>
그러나 현재 IPv4와 IPv6가 공존하는 상황에서 NAT는 여전히 필요하며, 향후에도 일부 환경에서 계속 사용될 것으로 예상된다.&lt;/p>
&lt;p>결론적으로, NAT는 IP 주소 부족 문제를 해결하고 네트워크 보안을 강화하는 중요한 기술이지만, 복잡성 증가와 일부 애플리케이션의 호환성 문제 등의 단점도 있다.&lt;br>
네트워크 환경과 요구사항에 따라 NAT의 사용 여부와 방식을 신중히 고려해야 한다.&lt;/p>
&lt;h3>NAT의 실제 구현과 응용&lt;span class="hx-absolute -hx-mt-20" id="nat의-실제-구현과-응용">&lt;/span>
&lt;a href="#nat%ec%9d%98-%ec%8b%a4%ec%a0%9c-%ea%b5%ac%ed%98%84%ea%b3%bc-%ec%9d%91%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>가정용 라우터
&lt;ul>
&lt;li>대부분의 가정용 라우터는 PAT를 구현하여 여러 기기가 하나의 인터넷 연결을 공유할 수 있게 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기업 네트워크
&lt;ul>
&lt;li>방화벽과 결합하여 보안을 강화하고 네트워크 주소 관리를 효율화한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>클라우드 환경
&lt;ul>
&lt;li>클라우드 서비스에서도 NAT를 활용하여 가상 머신들의 네트워크 연결을 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>NAT&lt;span class="hx-absolute -hx-mt-20" id="nat">&lt;/span>
&lt;a href="#nat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://ko.wikipedia.org/wiki/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC_%EC%A3%BC%EC%86%8C_%EB%B3%80%ED%99%98" target="_blank" rel="noopener">네트워크 주소 변환&lt;/a>&lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Network_address_translation" target="_blank" rel="noopener">Network address translation&lt;/a>&lt;br>
&lt;a href="https://www.cisco.com/c/ko_kr/support/docs/ip/network-address-translation-nat/26704-nat-faq-00.html#toc-hId--1420991877" target="_blank" rel="noopener">NAT(Network Address Tranlation) FAQ 검토&lt;/a>&lt;br>
&lt;a href="https://inpa.tistory.com/entry/WEB-%F0%9F%8C%90-NAT-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80" target="_blank" rel="noopener">NAT(Network Address Translation) 이란 무엇인가?&lt;/a>&lt;/p>
&lt;h3>Public IP &amp;amp; Private IP&lt;span class="hx-absolute -hx-mt-20" id="public-ip--private-ip">&lt;/span>
&lt;a href="#public-ip--private-ip" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://inpa.tistory.com/entry/WEB-%F0%9F%8C%90-IP-%EA%B8%B0%EC%B4%88-%EC%82%AC%EC%84%A4IP-%EA%B3%B5%EC%9D%B8IP-NAT-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A7%90-%EC%89%BD%EA%B2%8C-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">IP 기초 (사설IP / 공인IP / NAT) 개념 정말 쉽게 정리&lt;/a>&lt;br>
&lt;a href="https://nordvpn.com/ko/blog/public-ip-and-private-ip/" target="_blank" rel="noopener">공인 IP, 사설 IP… 다양한 IP 유형의 차이는?&lt;/a>&lt;/p></description></item><item><title>CIDR (Classless Inter-Domain Routing)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/cidr/</link><pubDate>Fri, 04 Oct 2024 11:51:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/cidr/</guid><description>
&lt;h2>CIDR (Classless Inter-Domain Routing)&lt;span class="hx-absolute -hx-mt-20" id="cidr-classless-inter-domain-routing">&lt;/span>
&lt;a href="#cidr-classless-inter-domain-routing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>CIDR은 1993년에 도입된 IP 주소 할당 및 라우팅 방식으로, 기존의 클래스 기반 주소 체계(Classful Addressing)의 한계를 극복하기 위해 만들어졌다.&lt;br>
인터넷이 급속도로 성장하면서 기존의 고정된 클래스 체계로는 IP 주소를 효율적으로 할당하기 어려워졌고, 이를 해결하기 위해 더 유연한 주소 할당 방식이 필요해지면서 탄생되었다.&lt;br>
네트워크 정보를 여러 개로 나누어진 Sub-Network 들을 모두 나타낼 수 있는 하나의 Network 로 통합해서 보여주는 방법이다.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>IP 주소 자원의 낭비를 줄임&lt;/li>
&lt;li>라우팅 테이블의 크기를 감소시킴&lt;/li>
&lt;li>더 유연하고 효율적인 주소 할당을 제공&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>주소 집약(Route Aggregation)&lt;br>
CIDR의 가장 중요한 특징 중 하나는 라우팅 테이블을 간소화할 수 있는 주소 집약이다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>192.168.0.0/24&lt;/li>
&lt;li>192.168.1.0/24&lt;/li>
&lt;li>192.168.2.0/24&lt;/li>
&lt;li>192.168.3.0/24 이 네 개의 네트워크를 192.168.0.0/22로 집약할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>유연한 네트워크 설계&lt;br>
CIDR을 사용하면 네트워크 크기를 필요에 따라 정확하게 조절할 수 있다.&lt;br>
이는 다음과 같은 이점을 제공한다:&lt;/p>
&lt;ul>
&lt;li>IP 주소 낭비 최소화&lt;/li>
&lt;li>효율적인 주소 공간 활용&lt;/li>
&lt;li>네트워크 구조의 유연한 설계&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>IP 주소 활용 효율성&lt;/p>
&lt;ul>
&lt;li>필요한 만큼의 주소만 할당 가능&lt;/li>
&lt;li>주소 공간 낭비 최소화&lt;/li>
&lt;li>미사용 주소의 재할당 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>라우팅 효율성&lt;/p>
&lt;ul>
&lt;li>라우팅 테이블 크기 감소&lt;/li>
&lt;li>네트워크 성능 향상&lt;/li>
&lt;li>라우터의 메모리 사용량 감소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 설계 유연성&lt;/p>
&lt;ul>
&lt;li>다양한 크기의 네트워크 수용&lt;/li>
&lt;li>쉬운 네트워크 확장&lt;/li>
&lt;li>효율적인 주소 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>표기법&lt;span class="hx-absolute -hx-mt-20" id="표기법">&lt;/span>
&lt;a href="#%ed%91%9c%ea%b8%b0%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>CIDR은 IP 주소와 슬래시(/) 뒤에 네트워크 프리픽스의 비트 수를 표기하는 방식을 사용한다.&lt;br>
이는 네트워크 주소와 프리픽스 길이로 표현되며, 프리픽스 길이는 네트워크 부분의 비트 수를 나타낸다.&lt;/p>
&lt;ul>
&lt;li>점과 숫자로 이루어진 4 부분의 주소와 &amp;lsquo;/&amp;rsquo; 뒤의 0 에서 32 까지의 숫자로 이루어진다.&lt;br>
즉, &lt;code>A.B.C.D/N&lt;/code> 과 같은 형태&lt;/li>
&lt;li>점과 숫자로 이루어진 부분은 IPv4 주소와 마찬가지로 4 개의 8 비트 단위 바이트로 이루어진 32 비트 이진 숫자이다.&lt;/li>
&lt;li>&amp;lsquo;/&amp;rsquo; 뒤의 숫자는 &lt;code>접두어 길이&lt;/code>라고 하며, 주소의 왼쪽으로부터 세어서 공유하는 초기 비트의 수를 가리킨다.&lt;/li>
&lt;/ul>
&lt;p>예를 들어 192.168.1.0/24는 다음을 의미한다:&lt;/p>
&lt;ul>
&lt;li>IP 주소: 192.168.1.0&lt;/li>
&lt;li>네트워크 프리픽스: 24비트&lt;/li>
&lt;li>호스트 비트: 8비트 (32-24) 이는 기존 클래스 체계의 서브넷 마스크 255.255.255.0과 동일한 의미를 가진다.&lt;/li>
&lt;/ul>
&lt;h4>CIDR 블록&lt;span class="hx-absolute -hx-mt-20" id="cidr-블록">&lt;/span>
&lt;a href="#cidr-%eb%b8%94%eb%a1%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>CIDR(Classless Inter-Domain Routing)는 IP 주소를 할당하고 라우팅하는 방식 자체를 의미하는 반면, &lt;strong>CIDR 블록&lt;/strong>은 CIDR 방식을 사용하여 실제로 정의된 특정 주소의 범위를 의미한다.&lt;br>
예를 들어 192.168.1.0/24와 같은 특정 네트워크 주소 범위를 CIDR 블록이라고 한다.&lt;/p>
&lt;p>구체적인 예시를 들어보면:&lt;/p>
&lt;ul>
&lt;li>CIDR은 &amp;ldquo;/24&amp;quot;나 &amp;ldquo;/16&amp;quot;과 같은 접두어 길이를 사용하여 네트워크를 유연하게 분할할 수 있게 해주는 방식.&lt;/li>
&lt;li>CIDR 블록은 이 방식을 사용하여 실제로 정의된 &amp;ldquo;192.168.1.0/24&amp;quot;나 &amp;ldquo;10.0.0.0/16&amp;quot;과 같은 특정 주소 범위.&lt;/li>
&lt;/ul>
&lt;p>예를 들어 192.168.1.0/24라는 CIDR 블록은 192.168.1.0부터 192.168.1.255까지의 256개 연속된 IP 주소를 포함한다.&lt;br>
CIDR 블록이라 불리는 그룹에 포함된 여러 IP 주소는 &lt;strong>이진 표기&lt;/strong>를 하였을 때 동일한 일련의 초기 비트를 가진다.&lt;br>
만약 이진 형태로 변화한 IP 주소의 첫 자리 비트에서 CIDR 접두어 N 비트 길이만큼 일치한다면, 해당 IP 주소는 CIDR 블록의 일부라고 하며, CIDR 접두어와 일치한다고 한다.&lt;/p>
&lt;p>IPv6 주소에서도 사용될 수 있으며, 이 경우 긴 주소로 말미암아 접두어 길이는 0~128 까지의 범위를 지닌다.&lt;/p>
&lt;p>
&lt;img src="../487px-IP_Address_Match.svg.png" alt="CIDR 접두어 일치의 예시" loading="lazy" />&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/CIDR&lt;/a> _&lt;/p>
&lt;ul>
&lt;li>CIDR 블록의 할당
&lt;ul>
&lt;li>1990 년대 후반, 208.130.29.33 은 &lt;code>www.fresssoft.org&lt;/code> 웹 서버에 할당되어 있었는데, 3 개의 CIDR 접두어를 가진다.
&lt;ul>
&lt;li>큰 CIDR 블록인 208.128.0.0/11 이 ARIN(북미 RIR) 에서 MCI 에 할당됨.&lt;/li>
&lt;li>버지니아주에 있는 재공급업자인 Automation Research Systems 는 MCI 로부터 인터넷 접속을 승인받아 208.130.28.0/22 를 부여받음.&lt;/li>
&lt;li>ARS 는 /24 블록을 공공 서버용으로 할당하였고, 208.130.29.33 은 그 중 하나이다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>하나의 주소에 대한 이러한 여러 CIDR 접두어는 네트워크상의 서로 다른 영역에서 각각 사용된다.
&lt;ul>
&lt;li>MCI 네트워크 외부에서는 208.128.0.0/11 접두어가 MCI 트래픽 영역으로 접근하기 위해 사용된다.&lt;/li>
&lt;li>MCI 네트워크 내부에서는 208.128.28.0/22 가 사용되며, 패킷을 ARS 로 보내는 역할을 한다.&lt;/li>
&lt;li>208.130.29.0/24 는 ARS 네트워크 내부에서만 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>
&lt;img src="../640px-CIDR_Address.svg.png" alt="An broken down by its CIDR prefixes" loading="lazy" />&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/CIDR&lt;/a> _&lt;/p>
&lt;h3>CIDR의 작동 원리&lt;span class="hx-absolute -hx-mt-20" id="cidr의-작동-원리">&lt;/span>
&lt;a href="#cidr%ec%9d%98-%ec%9e%91%eb%8f%99-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>CIDR은 가변 길이 서브넷 마스킹(VLSM)을 사용하여 네트워크를 더 효율적으로 분할한다.&lt;br>
네트워크 프리픽스 길이를 자유롭게 조절할 수 있어서, 필요한 만큼의 호스트 주소만을 할당할 수 있다.&lt;/p>
&lt;p>예를 들어:&lt;/p>
&lt;ul>
&lt;li>/24 네트워크는 256개의 주소(254개 사용 가능)&lt;/li>
&lt;li>/25 네트워크는 128개의 주소(126개 사용 가능)&lt;/li>
&lt;li>/26 네트워크는 64개의 주소(62개 사용 가능)&lt;/li>
&lt;/ul>
&lt;h3>CIDR 계산 방법&lt;span class="hx-absolute -hx-mt-20" id="cidr-계산-방법">&lt;/span>
&lt;a href="#cidr-%ea%b3%84%ec%82%b0-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>CIDR 네트워크를 계산할 때는 다음 단계를 따른다:&lt;/p>
&lt;ol>
&lt;li>네트워크 크기 결정 필요한 호스트 수를 파악하고, 이를 수용할 수 있는 가장 작은 2의 거듭제곱을 찾는다.&lt;/li>
&lt;li>프리픽스 길이 계산 32에서 필요한 호스트 비트 수를 뺀 값이 프리픽스 길이가 된다.&lt;/li>
&lt;li>네트워크 범위 계산 네트워크 주소와 브로드캐스트 주소를 계산하여 사용 가능한 IP 범위를 결정한다.&lt;/li>
&lt;/ol>
&lt;h4>실제 CIDR 적용 예시&lt;span class="hx-absolute -hx-mt-20" id="실제-cidr-적용-예시">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-cidr-%ec%a0%81%ec%9a%a9-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>한 회사에서 직원 60명을 수용할 수 있는 네트워크를 설계해야 한다고 가정해보자.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>네트워크 크기 결정&lt;/p>
&lt;ul>
&lt;li>필요한 호스트 수: 60대&lt;/li>
&lt;li>네트워크 주소와 브로드캐스트 주소를 위해 추가로 2개 주소 필요&lt;/li>
&lt;li>따라서 총 필요한 주소 수: 62개&lt;/li>
&lt;li>이를 수용할 수 있는 가장 작은 2의 거듭제곱을 찾아보면:
&lt;ul>
&lt;li>2⁶ = 64가 62개의 주소를 수용할 수 있는 최소 크기&lt;/li>
&lt;li>즉, 6비트가 호스트 부분에 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프리픽스 길이 계산&lt;/p>
&lt;ul>
&lt;li>IPv4는 총 32비트&lt;/li>
&lt;li>필요한 호스트 비트 수는 6비트&lt;/li>
&lt;li>프리픽스 길이 = 32 - 6 = 26&lt;/li>
&lt;li>따라서 /26 네트워크가 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 범위 계산&lt;br>
예를 들어 192.168.1.0/26 네트워크를 사용한다고 하면:&lt;/p>
&lt;ul>
&lt;li>네트워크 주소: 192.168.1.0
&lt;ul>
&lt;li>이진수로 표현: 11000000.10101000.00000001.00000000&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>브로드캐스트 주소: 192.168.1.63
&lt;ul>
&lt;li>이진수로 표현: 11000000.10101000.00000001.00111111&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 가능한 IP 주소 범위:
&lt;ul>
&lt;li>첫 번째 사용 가능 주소: 192.168.1.1&lt;/li>
&lt;li>마지막 사용 가능 주소: 192.168.1.62&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>총 사용 가능한 호스트 수: 62개 (64 - 2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>접두어 합침 (Routing Prefix Aggregation, 혹은 summarization)&lt;span class="hx-absolute -hx-mt-20" id="접두어-합침-routing-prefix-aggregation-혹은-summarization">&lt;/span>
&lt;a href="#%ec%a0%91%eb%91%90%ec%96%b4-%ed%95%a9%ec%b9%a8-routing-prefix-aggregation-%ed%98%b9%ec%9d%80-summarization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>접두어 합침(Routing Prefix Aggregation 또는 summarization)은 라우팅 테이블의 크기를 줄이고 네트워크 효율성을 높이기 위해 사용되는 중요한 기술이다.&lt;/p>
&lt;p>접두어 합침은 여러 개의 연속된 IP 주소 블록을 하나의 더 큰 블록으로 결합하는 과정이다.&lt;/p>
&lt;p>이 기술의 주요 목적은:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블 크기 감소&lt;/li>
&lt;li>네트워크 대역폭 절약&lt;/li>
&lt;li>라우터의 처리 부하 감소&lt;/li>
&lt;li>네트워크 안정성 향상&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블 크기 감소: 여러 개의 경로를 하나로 합치면 라우터의 메모리 사용량이 줄어든다.&lt;/li>
&lt;li>라우팅 효율성 향상: 작은 라우팅 테이블은 더 빠른 경로 검색을 가능하게 한다.&lt;/li>
&lt;li>네트워크 안정성 개선: 개별 경로의 변동이 전체 네트워크에 미치는 영향을 줄일 수 있다.&lt;/li>
&lt;/ol>
&lt;p>주의사항:&lt;br>
접두어 합침을 사용할 때는 주의가 필요하다.&lt;br>
과도한 합침은 라우팅의 정확성을 떨어뜨릴 수 있으며, 특정 상황에서는 비효율적인 라우팅을 초래할 수 있다.&lt;/p>
&lt;p>작동 방식:&lt;br>
접두어 합침은 여러 개의 작은 네트워크를 하나의 큰 네트워크로 표현한다.&lt;br>
이는 CIDR(Classless Inter-Domain Routing) 표기법을 사용하여 수행된다.&lt;/p>
&lt;p>예시:&lt;br>
다음과 같은 네트워크 주소들이 있다고 가정해 봅시다:&lt;/p>
&lt;ul>
&lt;li>172.16.64.0/24 ~ 172.16.71.0/24&lt;br>
이 네 개의 주소는 172.16.64.0/21로 합칠 수 있다.&lt;br>
이렇게 하면 라우팅 테이블에 네 개의 항목 대신 하나의 항목만 필요하게 된다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;img src="../GUID-CBB50420-82CE-4F46-98BA-24A1BF644290-low.png" alt="Route Summarization" loading="lazy" />&lt;br>
_Source: &lt;a href="https://docs.vmware.com/en/VMware-SD-WAN/6.0/VMware-SD-WAN-Administration-Guide/GUID-72405FEF-C3B9-47E9-A332-869FB35DB1DC.html" target="_blank" rel="noopener">https://docs.vmware.com/en/VMware-SD-WAN/6.0/VMware-SD-WAN-Administration-Guide/GUID-72405FEF-C3B9-47E9-A332-869FB35DB1DC.html&lt;/a> _&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>CIDR&lt;span class="hx-absolute -hx-mt-20" id="cidr">&lt;/span>
&lt;a href="#cidr" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://kim-dragon.tistory.com/9" target="_blank" rel="noopener">[네트워크] CIDR이란?(사이더 란?)&lt;/a>&lt;br>
&lt;a href="https://kim-dragon.tistory.com/154" target="_blank" rel="noopener">[네트워크] CIDR 범위 쉽게 계산하는 방법&lt;/a>&lt;br>
&lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">CIDR&lt;/a>&lt;/p></description></item><item><title>IP Delivery Modes</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/ip-delivery-modes/</link><pubDate>Fri, 04 Oct 2024 07:37:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/ip-delivery-modes/</guid><description>
&lt;h2>IP Delivery Modes&lt;span class="hx-absolute -hx-mt-20" id="ip-delivery-modes">&lt;/span>
&lt;a href="#ip-delivery-modes" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>네트워크에서 데이터를 전송하는 다양한 방식.&lt;/p>
&lt;p>
&lt;img src="../unicast-broadcast-multicast-anycast.jpg" alt="Unicast, Broadcast, Multicast, Anycast" loading="lazy" />&lt;br>
_Source: &lt;a href="https://ipcisco.com/lesson/unicast-broadcast-multicast-anycast/#google_vignette" target="_blank" rel="noopener">https://ipcisco.com/lesson/unicast-broadcast-multicast-anycast/#google_vignette&lt;/a> _&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Unicast&lt;/th>
&lt;th>Multicast&lt;/th>
&lt;th>Broadcast&lt;/th>
&lt;th>Anycast&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>전송 방식&lt;/td>
&lt;td>1:1 통신으로, 하나의 송신자가 하나의 특정 수신자에게 데이터를 전송&lt;/td>
&lt;td>1:N 통신으로, 하나의 송신자가 특정 그룹에 속한 다수의 수신자에게 동시에 데이터를 전송&lt;/td>
&lt;td>1:모두 통신으로, 하나의 송신자가 네트워크 내의 모든 호스트에게 데이터를 전송&lt;/td>
&lt;td>1:1/다수 통신으로, 하나의 송신자가 동일한 주소를 가진 여러 노드 중 가장 가까운 하나의 노드에게 데이터를 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 체계&lt;/td>
&lt;td>각 호스트마다 고유한 IP 주소 사용&lt;/td>
&lt;td>Class D IP 주소(224.0.0.0 ~ 239.255.255.255) 사용. IPv6에서는 ff00::/8 프리픽스 사용&lt;/td>
&lt;td>IPv4에서 네트워크 주소의 호스트 부분이 모두 1인 주소 사용&lt;/td>
&lt;td>동일한 유니캐스트 주소를 여러 노드가 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>트래픽 효율성&lt;/td>
&lt;td>수신자가 많을 경우 네트워크 부하가 증가하여 비효율적&lt;/td>
&lt;td>그룹 멤버들에게 한 번의 전송으로 데이터 전달이 가능하여 효율적&lt;/td>
&lt;td>모든 호스트에게 전송되어 불필요한 트래픽 발생 가능성이 높음&lt;/td>
&lt;td>가까운 노드에게만 전송되어 효율적이며, 로드 밸런싱 효과 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>일반적인 인터넷 통신, 이메일, 웹 브라우징 등&lt;/td>
&lt;td>화상 회의, IPTV, 소프트웨어 배포, 실시간 주식 정보 전송 등&lt;/td>
&lt;td>네트워크 설정 정보 전파, DHCP, ARP 등&lt;/td>
&lt;td>DNS 서버, CDN 서비스, 로드 밸런싱이 필요한 서비스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성&lt;/td>
&lt;td>TCP를 사용할 경우 높은 신뢰성 보장&lt;/td>
&lt;td>UDP 기반으로 동작하여 상대적으로 신뢰성이 낮음. 필요시 응용 계층에서 신뢰성 보장 메커니즘 구현 필요&lt;/td>
&lt;td>신뢰성이 낮으며, 일반적으로 UDP 사용&lt;/td>
&lt;td>유니캐스트와 동일한 수준의 신뢰성 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv4 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>제한적 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv6 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원 (향상된 기능)&lt;/td>
&lt;td>미지원 (대신 멀티캐스트 사용)&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 간단한 구현&lt;br>- 모든 프로토콜 지원&lt;br>- 보안성 우수&lt;/td>
&lt;td>- 네트워크 대역폭 효율적 사용&lt;br>- 다수의 수신자에게 효율적 전송&lt;br>- 확장성이 좋음&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 모든 호스트에 빠른 정보 전달&lt;br>- 네트워크 설정에 유용&lt;/td>
&lt;td>- 서버 이중화 용이&lt;br>- 로드 밸런싱 효과&lt;br>- 지연 시간 최소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 다수 수신자 전송 시 비효율적&lt;br>- 대역폭 소비가 큼&lt;/td>
&lt;td>- 라우터의 멀티캐스트 지원 필요&lt;br>- 구현 복잡&lt;br>- 신뢰성 보장 메커니즘 별도 필요&lt;/td>
&lt;td>- 불필요한 트래픽 발생&lt;br>- 네트워크 성능 저하&lt;br>IPv6에서 미지원&lt;/td>
&lt;td>- 구현 복잡&lt;br>- 라우팅 테이블 크기 증가&lt;br>- 관리 어려움&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 전달 방식은 고유한 특성과 장단점을 가지고 있으며, 사용 목적과 네트워크 환경에 따라 적절한 방식을 선택해야 한다.&lt;br>
IPv6에서는 브로드캐스트가 제거되고 멀티캐스트와 애니캐스트가 강화되어 더욱 효율적인 네트워크 구성이 가능해졌다.&lt;/p>
&lt;blockquote>
&lt;p>Incast (인캐스트)&lt;/p>
&lt;ul>
&lt;li>공식적인 IP 전송 모드가 아니라 네트워크 패턴 또는 현상을 설명하는 용어.&lt;/li>
&lt;li>특징
&lt;ul>
&lt;li>다대 1 통신&lt;/li>
&lt;li>여러 송신자가 동시에 하나의 수신자에게 데이터 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점
&lt;ul>
&lt;li>병렬 처리에 효과적&lt;/li>
&lt;li>대규모 데이터 수집에 유용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단점
&lt;ul>
&lt;li>네트워크 병목 현상 발생 가능&lt;/li>
&lt;li>버퍼 오버플로우 위험&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 시기
&lt;ul>
&lt;li>빅데이터 처리&lt;/li>
&lt;li>분산 파일 시스템&lt;/li>
&lt;li>클라우드 스토리지 시스템&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>IP(Internet Protocol)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</link><pubDate>Fri, 04 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</guid><description>
&lt;h2>IP (Internet Protocol)&lt;span class="hx-absolute -hx-mt-20" id="ip-internet-protocol">&lt;/span>
&lt;a href="#ip-internet-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합이다.&lt;/p>
&lt;p>OSI 7계층에서 네트워크 계층(3계층)에 위치하며, TCP/IP 4계층에서는 인터넷 계층에 해당한다.&lt;br>
이 위치에서 IP는 데이터 패킷의 주소지정과 라우팅을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>IP 정보는 각 패킷에 첨부되며, 이 정보는 라우터가 패킷을 올바른 위치로 보내는 데 도움이 된다.&lt;br>
인터넷에 연결하는 모든 장치나 도메인에는 IP 주소가 할당되며, 패킷이 연결된 IP 주소로 전달되면 데이터가 필요한 곳에 도착한다.&lt;br>
패킷이 목적지에 도착하면 IP 와 함께 어떤 전송 프로토콜이 사용되는지에 따라 다르게 처리된다.&lt;br>
모든 IP 데이터 패킷은 특정 정보를 특정 순서로 표시해야 하며 모든 IP 주소는 표준화된 형식을 따른다.&lt;/p>
&lt;p>&lt;img src="internet_protocol_ip_address_diagram.svg" alt="Internet Protocol(IP) Address Diagram" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>비연결성: 데이터 전송 전 연결 설정 과정이 없다.&lt;/li>
&lt;li>비신뢰성: 데이터 전송의 신뢰성을 보장하지 않는다.&lt;/li>
&lt;li>단편화(Fragmentation): 큰 패킷을 작은 단위로 나누어 전송할 수 있다&lt;/li>
&lt;li>라우팅(Routing): 목적지까지의 경로를 결정하여 패킷을 전달한다&lt;/li>
&lt;/ol>
&lt;h3>IP 패킷 구조&lt;span class="hx-absolute -hx-mt-20" id="ip-패킷-구조">&lt;/span>
&lt;a href="#ip-%ed%8c%a8%ed%82%b7-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 패킷은 헤더와 데이터로 구성된다.&lt;br>
주요 헤더 필드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>버전&lt;/li>
&lt;li>헤더 길이&lt;/li>
&lt;li>서비스 유형&lt;/li>
&lt;li>전체 길이&lt;/li>
&lt;li>식별자&lt;/li>
&lt;li>플래그&lt;/li>
&lt;li>프래그먼트 오프셋&lt;/li>
&lt;li>TTL (Time To Live)&lt;/li>
&lt;li>프로토콜&lt;/li>
&lt;li>헤더 체크섬&lt;/li>
&lt;li>출발지 IP 주소&lt;/li>
&lt;li>목적지 IP 주소&lt;/li>
&lt;/ul>
&lt;h3>IP의 한계와 보완&lt;span class="hx-absolute -hx-mt-20" id="ip의-한계와-보완">&lt;/span>
&lt;a href="#ip%ec%9d%98-%ed%95%9c%ea%b3%84%ec%99%80-%eb%b3%b4%ec%99%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP의 주요 한계점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>신뢰성 부족: 패킷 손실, 중복, 순서 뒤바뀜 등의 문제가 발생할 수 있다.&lt;/li>
&lt;li>흐름 제어 부재: 수신자의 처리 능력을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;li>혼잡 제어 부재: 네트워크 상황을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;/ol>
&lt;p>이러한 한계는 상위 계층 프로토콜인 TCP에 의해 보완된다.&lt;/p>
&lt;h3>IP 라우팅&lt;span class="hx-absolute -hx-mt-20" id="ip-라우팅">&lt;/span>
&lt;a href="#ip-%eb%9d%bc%ec%9a%b0%ed%8c%85" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 라우팅은 패킷이 목적지까지 도달하는 경로를 결정하는 과정.&lt;br>
주요 개념은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블: 목적지 네트워크와 다음 홉 정보를 저장한다.&lt;/li>
&lt;li>최단 경로 알고리즘: 최적의 경로를 결정하는 데 사용된다.&lt;/li>
&lt;li>BGP (Border Gateway Protocol): 자율 시스템 간의 라우팅에 사용된다.&lt;/li>
&lt;/ol>
&lt;h3>IP와 관련된 주요 프로토콜&lt;span class="hx-absolute -hx-mt-20" id="ip와-관련된-주요-프로토콜">&lt;/span>
&lt;a href="#ip%ec%99%80-%ea%b4%80%eb%a0%a8%eb%90%9c-%ec%a3%bc%ec%9a%94-%ed%94%84%eb%a1%9c%ed%86%a0%ec%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>ARP (Address Resolution Protocol): IP 주소를 MAC 주소로 변환한다.&lt;/li>
&lt;li>ICMP (Internet Control Message Protocol): 네트워크 상태 및 오류 보고에 사용된다.&lt;/li>
&lt;li>DHCP (Dynamic Host Configuration Protocol): IP 주소를 동적으로 할당한다.&lt;/li>
&lt;/ol>
&lt;h3>IP 보안&lt;span class="hx-absolute -hx-mt-20" id="ip-보안">&lt;/span>
&lt;a href="#ip-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IPSec (Internet Protocol Security)는 IP 계층에서 보안을 제공하는 프로토콜 집합이다.&lt;br>
주요 기능은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>데이터 무결성&lt;/li>
&lt;li>데이터 기밀성&lt;/li>
&lt;li>인증&lt;/li>
&lt;/ol>
&lt;p>주요 특징:&lt;/p>
&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>두 가지 주요 프로토콜(AH, ESP)을 사용한다.&lt;/li>
&lt;li>두 가지 동작 모드(전송 모드, 터널 모드)를 지원한다.&lt;/li>
&lt;li>키 관리 및 보안 연관(SA) 협상을 위해 IKE 프로토콜을 사용한다.&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>강력한 보안: 암호화와 인증을 통해 데이터를 보호한다.&lt;/li>
&lt;li>유연성: 다양한 네트워크 환경에서 사용 가능하다다.&lt;/li>
&lt;li>투명성: 상위 계층 애플리케이션에 영향을 주지 않고 적용 가능하다.&lt;/li>
&lt;li>VPN 구현에 적합: 안전한 원격 접속을 제공한다.&lt;/li>
&lt;li>표준화: 다양한 벤더 간 상호 운용성을 제공한다.&lt;/li>
&lt;/ol>
&lt;p>동작 방식:&lt;/p>
&lt;ol>
&lt;li>트래픽 식별: IPSec 정책에 따라 보호가 필요한 트래픽을 식별한다.&lt;/li>
&lt;li>SA(Security Association) 협상: IKE 프로토콜을 사용하여 통신 당사자 간 보안 매개변수를 협상한다.&lt;/li>
&lt;li>데이터 처리:
&lt;ul>
&lt;li>AH(Authentication Header): 데이터 무결성과 인증을 제공한다.&lt;/li>
&lt;li>ESP(Encapsulating Security Payload): 암호화, 무결성, 인증을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패킷 전송: 암호화 및 인증된 패킷을 목적지로 전송한다.&lt;/li>
&lt;li>수신 및 처리: 수신 측에서 패킷을 복호화하고 인증한다.&lt;/li>
&lt;/ol>
&lt;p>IPSec의 주요 프로토콜:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>AH (Authentication Header)&lt;/p>
&lt;ul>
&lt;li>데이터 무결성, 데이터 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 헤더와 페이로드를 인증합니다.&lt;/li>
&lt;li>암호화는 제공하지 않습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ESP (Encapsulating Security Payload)&lt;/p>
&lt;ul>
&lt;li>데이터 기밀성(암호화), 무결성, 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 데이터그램 부분만 인증합니다.&lt;/li>
&lt;li>암호화 기능을 제공합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>IKE (Internet Key Exchange)&lt;/p>
&lt;ul>
&lt;li>SA(Security Association) 협상과 키 교환을 위한 프로토콜이다.&lt;/li>
&lt;li>AH와 ESP에서 사용할 암호화 알고리즘, 키 등의 보안 매개변수를 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>IP Address(IP 주소)&lt;span class="hx-absolute -hx-mt-20" id="ip-addressip-주소">&lt;/span>
&lt;a href="#ip-addressip-%ec%a3%bc%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 주소(IP Address)는 인터넷 프로토콜(Internet Protocol)에서 컴퓨터 네트워크에 연결된 장치들을 식별하기 위해 사용되는 고유한 주소이다.&lt;br>
네트워크 상의 장치를 고유하게 식별하는 숫자 체계로 데이터 패킷의 출발지와 목적지를 지정하는 데 사용된다.&lt;/p>
&lt;p>네트워크에 연결된 장치가 라우터이든, 일반 서버이든, 모든 기계는 이 특수한 번호를 가지고 있어야 한다. 이 번호를 이용하여 발신자를 대신하여 메시지가 전송되고 수신자를 향하여 예정된 목적지로 전달된다. 각 IP 패킷에는 패킷을 보내는 장치 또는 도메인의 IP 주소와 대상 수신자의 IP 주소가 모두 포함된다. IP Address 는 IPv4 와 IPv6 중 어떤 프로토콜을 사용하는지에 따라 형식이 다르다.&lt;/p>
&lt;p>IP 주소는 인터넷과 네트워크 통신의 근간을 이루는 중요한 요소로, 효율적인 데이터 전송과 네트워크 관리를 가능하게 한다.&lt;/p>
&lt;h4>IPv4 와 IPv6&lt;span class="hx-absolute -hx-mt-20" id="ipv4-와-ipv6">&lt;/span>
&lt;a href="#ipv4-%ec%99%80-ipv6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>인터넷 프로토콜 (IP) 주소 지정 시스템의 두 가지 버전이다.&lt;br>
IPv6 는 IPv4 와의 하위 호환성을 제공하지 않아, 웹사이트가 IPv4 에서 실행되고 있지만 장치와 ISP 가 최신 프로토콜을 사용하는 경우 웹사이트에 접속할 수 없다.&lt;br>
두 버전은 동시에 실행할 수 있지만, IPv4 와 IPv6 장치 간의 통신을 용이하게 하기 위해서는 특별한 조치를 구현해야 한다. Network Address Translation(NAT) 과 같은 다른 주소 지정 시스템을 계층화하여 추상화는 것이 있다.&lt;br>
IPv4 인터넷 주소 중 약 5 억 8800 만 개는 예약된 주소이며 나머지는 공개적으로 사용할 수 있다.&lt;/p>
&lt;h5>IPv4 주소의 구성&lt;span class="hx-absolute -hx-mt-20" id="ipv4-주소의-구성">&lt;/span>
&lt;a href="#ipv4-%ec%a3%bc%ec%86%8c%ec%9d%98-%ea%b5%ac%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>호스트가 속한 네트워크 주소인 Network Address, 호스트의 주소인 Host Address 로 구성된다.
&lt;ul>
&lt;li>Network Address 는 어떤 네트워크인지를 나타내 다른 네트워크와 구분하는 역할을 한다.&lt;/li>
&lt;li>Host Address 는 해당 네트워크의 어느 호스트인지를 나타내 다른 호스트와 구분하는 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Network Address 가 다르다는 것은 서로 다른 네트워크라는 의미이고, 라우터를 통하지 않고는 통신이 불가능하다는 의미이다.&lt;/li>
&lt;li>서로 다른 네트워크가 라우터를 통해 통신이 가능한 것은 라우터가 IP 주소의 Network Address 를 보고 라우팅하여 데이터를 전송하기 때문이다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="anatomy-of-ipv4-address.webp" alt="Anatomy of IPv4 Address" loading="lazy" />&lt;br>
_Source: &lt;a href="https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/" target="_blank" rel="noopener">https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/&lt;/a> _&lt;/p>
&lt;h5>IPv6 주소의 구성&lt;span class="hx-absolute -hx-mt-20" id="ipv6-주소의-구성">&lt;/span>
&lt;a href="#ipv6-%ec%a3%bc%ec%86%8c%ec%9d%98-%ea%b5%ac%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>앞 64 비트를 Network Address 로, 뒤 64 비트를 네트워크에 연결된 랜카드 장비 등에 할당하는 Interface Address 로 활용한다. (RFC 2373 에 의거)&lt;/li>
&lt;li>Network Address 부분인 64 비트 내에서 앞 48 비트는 상위 네트워크 주소로 뒤 16 비트는 하위 네트워크 주소로 활용한다. (RIR(Regional Internet Registry) 간 협의에 기초)&lt;br>
&lt;img src="whatis-ipv6_address-h.png" alt="An example of the different segments of an IPv6 address" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.techtarget.com/iotagenda/definition/IPv6-address" target="_blank" rel="noopener">https://www.techtarget.com/iotagenda/definition/IPv6-address&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>주소 체계&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 크기&lt;/td>
&lt;td>32비트 (4바이트)&lt;/td>
&lt;td>128비트 (16바이트)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 공간&lt;/td>
&lt;td>약 43억개 (2^32)&lt;/td>
&lt;td>약 340간(2^128)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 표기법&lt;/td>
&lt;td>점분할 10진수 (예: 192.168.0.1)&lt;/td>
&lt;td>16진수 콜론 표기법 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>루프백 주소&lt;/td>
&lt;td>127.0.0.1&lt;/td>
&lt;td>::1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주소 관리 및 설정&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 구성 방식&lt;/td>
&lt;td>수동 구성, DHCP&lt;/td>
&lt;td>자동 구성(SLAAC), DHCPv6, 수동 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변환 필요성&lt;/td>
&lt;td>NAT 필요 (주소 부족)&lt;/td>
&lt;td>NAT 불필요 (주소 충분)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개인정보 보호&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>임시 주소 할당으로 향상된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로토콜 특성&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>코어 프로토콜&lt;/td>
&lt;td>IPv4&lt;/td>
&lt;td>IPv6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비연결 데이터 전송&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 유형&lt;/td>
&lt;td>유니캐스트, 브로드캐스트, 멀티캐스트&lt;/td>
&lt;td>유니캐스트, 멀티캐스트, 애니캐스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 처리&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60바이트 (가변)&lt;/td>
&lt;td>40바이트 (고정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 체크섬&lt;/td>
&lt;td>필수&lt;/td>
&lt;td>불필요 (상위 계층에서 처리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프래그먼테이션&lt;/td>
&lt;td>라우터와 송신 호스트에서 수행&lt;/td>
&lt;td>송신 호스트에서만 수행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>네트워크 운영&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS 해결 방식&lt;/td>
&lt;td>IPv4 주소 레코드(A)&lt;/td>
&lt;td>IPv6 주소 레코드(AAAA)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 효율성&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;td>단순화된 헤더로 향상된 효율성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>패킷 주소 지정&lt;/td>
&lt;td>복잡한 주소 지정 체계&lt;/td>
&lt;td>단순화된 주소 지정 체계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>Type of Service 필드 사용&lt;/td>
&lt;td>Traffic Class와 Flow Label 필드로 개선된 지원&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>IPv4 와 IPv6 의 Header 비교&lt;span class="hx-absolute -hx-mt-20" id="ipv4-와-ipv6-의-header-비교">&lt;/span>
&lt;a href="#ipv4-%ec%99%80-ipv6-%ec%9d%98-header-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>IPv4 와 IPv6 의 패킷은 서로 다르게 구성되어 있다.&lt;br>
&lt;img src="comparing-ipv4-and-ipv6-headers.png" alt="IPv4 Header vs IPv6 Header" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>필드&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>Bit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>IP 프로토콜 버전&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IHL&lt;/td>
&lt;td>IHL&lt;/td>
&lt;td>-&lt;/td>
&lt;td>헤더 길이 (IPv6 에서는 고정 길이로 제거됨)&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type of Service&lt;/td>
&lt;td>Type of Service&lt;/td>
&lt;td>Traffic Class&lt;/td>
&lt;td>패킷 우선순위 또는 서비스 유형 지정 지정&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total Length&lt;/td>
&lt;td>Total Length&lt;/td>
&lt;td>Payload Length&lt;/td>
&lt;td>데이터 페이로드 길이&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identification&lt;/td>
&lt;td>Identification&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flags&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fragment Offset&lt;/td>
&lt;td>Fragment Offset&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>13&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TTL&lt;/td>
&lt;td>TTL&lt;/td>
&lt;td>Hop Limit&lt;/td>
&lt;td>패킷의 최대 홉 수&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protocol&lt;/td>
&lt;td>Protocol&lt;/td>
&lt;td>Next Header&lt;/td>
&lt;td>상위 계층 프로토콜 식별&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Header Checksum&lt;/td>
&lt;td>Header Checksum&lt;/td>
&lt;td>-&lt;/td>
&lt;td>오류 검출 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>송신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>수신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Options&lt;/td>
&lt;td>Options&lt;/td>
&lt;td>-&lt;/td>
&lt;td>추가 옵션 (IPv6 에서는 확장 헤더로 대체됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Padding&lt;/td>
&lt;td>Padding&lt;/td>
&lt;td>-&lt;/td>
&lt;td>패딩 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Label&lt;/td>
&lt;td>-&lt;/td>
&lt;td>Flow Label&lt;/td>
&lt;td>플로우 식별을 위한 레이블&lt;/td>
&lt;td>20&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>구조&lt;span class="hx-absolute -hx-mt-20" id="구조">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>IPv4: 32비트 주소 체계, 점으로 구분된 4개의 8비트 필드 (예: 192.168.1.1)&lt;/li>
&lt;li>IPv6: 128비트 주소 체계, 16진수로 표현 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/li>
&lt;/ul>
&lt;h4>할당 방식&lt;span class="hx-absolute -hx-mt-20" id="할당-방식">&lt;/span>
&lt;a href="#%ed%95%a0%eb%8b%b9-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>정적 IP: 수동으로 할당되는 고정 주소&lt;/li>
&lt;li>동적 IP: DHCP 등을 통해 자동으로 할당되는 주소&lt;/li>
&lt;/ul>
&lt;h4>중요성&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>인터넷 통신의 기본 요소&lt;/li>
&lt;li>네트워크 장치 식별 및 데이터 라우팅에 필수적&lt;/li>
&lt;/ul>
&lt;h4>구성 요소&lt;span class="hx-absolute -hx-mt-20" id="구성-요소">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>네트워크 ID: 장치가 속한 네트워크를 식별&lt;/li>
&lt;li>호스트 ID: 해당 네트워크 내의 특정 장치를 식별&lt;/li>
&lt;/ul>
&lt;h4>클래스 체계 (IPv4)&lt;span class="hx-absolute -hx-mt-20" id="클래스-체계-ipv4">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9e%98%ec%8a%a4-%ec%b2%b4%ea%b3%84-ipv4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>IPv4 도입 초기에는 클래스 (Class) 를 기준으로 Network Class 와 Host Address 를 나누는 방식을 사용했지만, 클래스 방식의 비효율성으로 인해 현재는 서브넷 마스크 (Subnet mask) 방식을 사용하고 있다.&lt;/p>
&lt;p>네트워크 클래스 (Network Class)는 IP 주소를 체계적으로 분류하고 할당하기 위해 만들어진 시스템으로, IP주소를 특정 범위로 나누어 분류한 체계이다.&lt;/p>
&lt;p>&lt;img src="visual102-02.jpg" alt="IPv4주소 구성" loading="lazy" />&lt;br>
_Source: &lt;a href="https://xn--3e0bx5euxnjje69i70af08bea817g.xn" target="_blank" rel="noopener">https://xn--3e0bx5euxnjje69i70af08bea817g.xn&lt;/a>&amp;ndash;3e0b707e/jsp/resources/ipv4Info.jsp _&lt;/p>
&lt;p>클래스 기준은 IP 주소를 앞에서 8 비트씩 나눈 그룹을 조합하여 Network Address 와 Host Address 를 정한 것이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>클래스&lt;/th>
&lt;th>A&lt;/th>
&lt;th>B&lt;/th>
&lt;th>C&lt;/th>
&lt;th>D&lt;/th>
&lt;th>E&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>네트워크 주소&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>호스트 주소&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>범위&lt;/td>
&lt;td>1.0.0.0 ~ 126.255.255.255&lt;/td>
&lt;td>128.0.0.0 ~ 191.255.255.255&lt;/td>
&lt;td>192.0.0.0 ~ 223.255.255.255&lt;/td>
&lt;td>224.0.0.0 ~ 239.255.255.255&lt;/td>
&lt;td>240.0.0.0 ~ 255.255.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 서브넷 마스크&lt;/td>
&lt;td>255.0.0.0&lt;/td>
&lt;td>255.255.0.0&lt;/td>
&lt;td>255.255.255.0&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사설 IP 주소&lt;/td>
&lt;td>10.0.0.0 ~ 10.255.255.255&lt;/td>
&lt;td>172.16.0.0 ~ 172.31.255.255&lt;/td>
&lt;td>192.168.0.0 ~ 192.168.255.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브로드캐스트 주소&lt;/td>
&lt;td>x.255.255.255&lt;/td>
&lt;td>x.x.255.255&lt;/td>
&lt;td>x.x.x.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특수 용도&lt;/td>
&lt;td>대규모 네트워크&lt;/td>
&lt;td>중규모 네트워크&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>멀티캐스트용&lt;/td>
&lt;td>예약된 주소로 미래에 사용될 용도로 구분해 놓은 네트워크&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>클래스 A:&lt;/p>
&lt;ul>
&lt;li>IP 주소 32 비트 중 앞 8 비트를 Network Address 로, 다음 24 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>제일 첫번째 비트는 클래스 A 의 식별비트인 &lt;code>0&lt;/code> 이 할당되기 때문에 00000000 ~ 01111111 의 번호가 Network Address 로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 A 의 네트워크 부는 0 ~ 127 번호가 할당&lt;/strong>&lt;/li>
&lt;li>Network Address 의 0 과 127 은 예약된 network ID 로 제외된다.&lt;br>
클래스 B:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 16 비트를 Network Address 로, 다음 16 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>맨 앞 2 비트는 클래스 B 의 식별 비트인 &lt;code>10&lt;/code> 으로 할당되기 때문에 10000000 ~ 10111111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 B 의 네트워크 부는 128.0 ~ 191.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 172.16~172.31 은 예약된 network ID 로 제외된다.&lt;br>
클래스 C:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 24 비트를 Network Address 로, 다음 8 비트를 Host Address 를 정한 것&lt;/li>
&lt;li>맨 앞 3 비트는 클래스 C 의 식별 비트인 &amp;lsquo;110&amp;rsquo; 으로 할당되기 때문에 11000000 ~ 11011111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 C 의 네트워크 부는 192.0.0 ~ 255.255.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 192.168.0~192.168.255 은 예약된 network ID 로 제외된다.&lt;/li>
&lt;/ul>
&lt;p>추가 정보:&lt;/p>
&lt;ul>
&lt;li>클래스 A, B, C는 유니캐스트 통신에 사용된다.&lt;/li>
&lt;li>127.0.0.0 ~ 127.255.255.255는 루프백 주소로 사용된다.&lt;/li>
&lt;li>사설 IP 주소는 인터넷에 직접 연결되지 않는 내부 네트워크에서 사용된다.&lt;/li>
&lt;li>현대 네트워크에서는 CIDR(Classless Inter-Domain Routing)을 사용하여 더 유연한 주소 할당이 가능하다.&lt;/li>
&lt;/ul>
&lt;p>주의사항:&lt;/p>
&lt;ul>
&lt;li>클래스 A의 0.0.0.0은 특수 용도로 사용되며, 127.x.x.x는 루프백 주소로 사용된다.&lt;/li>
&lt;li>각 클래스의 네트워크 주소와 브로드캐스트 주소는 호스트 주소로 사용할 수 없다.&lt;/li>
&lt;li>D와 E 클래스는 일반적인 호스트 주소 할당에 사용되지 않는다.&lt;/li>
&lt;/ul>
&lt;h4>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>Public IP&lt;/th>
&lt;th>Private IP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>인터넷에서 직접 접근 가능한 고유한 주소&lt;/td>
&lt;td>로컬 네트워크 내에서 사용되는 내부 주소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>할당 주체&lt;/td>
&lt;td>ISP(인터넷 서비스 제공자)&lt;/td>
&lt;td>라우터 또는 네트워크 관리자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>고유성&lt;/td>
&lt;td>인터넷 상에서 전 세계적으로 유일&lt;/td>
&lt;td>로컬 네트워크 내에서만 유일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>접근성&lt;/td>
&lt;td>내부 및 외부에서 접근 가능&lt;/td>
&lt;td>로컬 네트워크 내부에서만 접근 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 범위&lt;/td>
&lt;td>ISP에 의해 할당된 모든 주소&lt;/td>
&lt;td>클래스 A: 10.0.0.0 - 10.255.255.255&lt;br>클래스 B: 172.16.0.0 - 172.31.255.255&lt;br>클래스 C: 192.168.0.0 - 192.168.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인터넷 연결&lt;/td>
&lt;td>직접 인터넷에 연결 가능&lt;/td>
&lt;td>NAT를 통해 인터넷에 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>외부 공격에 더 취약&lt;/td>
&lt;td>외부로부터 직접 접근 불가능하여 상대적으로 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용&lt;/td>
&lt;td>일반적으로 유료&lt;/td>
&lt;td>무료로 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>용도&lt;/td>
&lt;td>서버 호스팅, 원격 접속 등&lt;/td>
&lt;td>가정이나 회사 내부 네트워크 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변경&lt;/td>
&lt;td>고정 또는 동적으로 변경 가능&lt;/td>
&lt;td>로컬 네트워크 내에서 변경 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Public IP (공인 IP)는 사용자의 전체 네트워크에 적용되기에 동일한 인터넷 연결을 사용하는 장치는 IP 주소를 공유하게 된다. 그리고, 인터넷 업체는 공인 IP 주소의 사용자가 누구인지 파악할 수 있기에 공인 IP 주소를 사용하는 경우 인터넷 활동이 추적되고 모니터링될 수 있다.&lt;/p>
&lt;p>Private IP (사설 IP)는 로컬 네트워크에서 할당되며 다른 네트워크의 IP 주소와 중복될 수 있다. 각자의 내부 네트워크에서 사용되기에 다른 네트워크의 IP 주소와 중복되더라도 문제가 없다. 대신 동일한 로컬 네트워크에 연결된 장치에는 같은 사설 IP 주소를 할당할 수 없다. 전 세계에는 수백만 개의 사설 네트워크가 존재하며 사설 네트워크에 연결된 장치에는 다음 사설 IP 대역 내의 IP 주소가 할당된다.&lt;/p>
&lt;h4>Loopback Address (루프백 주소)&lt;span class="hx-absolute -hx-mt-20" id="loopback-address-루프백-주소">&lt;/span>
&lt;a href="#loopback-address-%eb%a3%a8%ed%94%84%eb%b0%b1-%ec%a3%bc%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>컴퓨터가 자신을 가리키는 데 사용하는 특수 목적의 IP 주소.&lt;/p>
&lt;p>용도:&lt;/p>
&lt;ul>
&lt;li>로컬 시스템 테스트.&lt;/li>
&lt;li>네트워크 소프트웨어 디버깅&lt;/li>
&lt;li>로컬 서버와의 통신.&lt;/li>
&lt;/ul>
&lt;p>특징:&lt;/p>
&lt;ul>
&lt;li>외부로 라우팅되지 않음.&lt;/li>
&lt;li>물리적 네트워크 인터페이스가 필요 없음.&lt;/li>
&lt;li>항상 사용 가능하며 항상 작동 상태임.&lt;/li>
&lt;/ul>
&lt;p>동작 원리:&lt;br>
Loopback Address (루프백 주소) 로 보내진 데이터는 실제로 네트워크로 나가지 않고, 네트워크 스택 내에서 즉시 &lt;strong>Loopback(루프백)&lt;/strong> 되어 다시 수신된다.&lt;/p>
&lt;p>보안:&lt;br>
외부에서 접근할 수 없어 상대적으로 안전함.&lt;/p>
&lt;p>네트워크 구성:&lt;br>
대부분의 운영 체제에서 루프백 인터페이스는 자동으로 구성되며, 별도의 설정이 필요없다.&lt;/p>
&lt;p>루프백 범위:&lt;br>
IPv4 에서 전체 127.0.0.0/8 네트워크가 루프백을 위해 예약되어 있지만, 일반적으로 127.0.0.1 만 사용된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>TCP</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/tcp/</link><pubDate>Wed, 02 Oct 2024 04:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/tcp/</guid><description>
&lt;h2>TCP (Transmission Control Protocol)&lt;span class="hx-absolute -hx-mt-20" id="tcp-transmission-control-protocol">&lt;/span>
&lt;a href="#tcp-transmission-control-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 프로토콜 스위트의 핵심 프로토콜 중 하나로, IP(Internet Protocol)와 함께 TCP/IP로 널리 알려져 있다.&lt;br>
TCP는 연결 지향적이며, 신뢰성 있는 데이터 전송을 보장하는 전송 계층 프로토콜이다.&lt;/p>
&lt;p>OSI 7계층에서 TCP는 전송 계층(Transport Layer)인 4계층에 위치하며,&lt;br>
TCP/IP 4계층 모델에서도 마찬가지로 전송 계층에 해당한다.&lt;br>
이 위치에서 TCP는 데이터의 신뢰성 있는 전송을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>TCP의 가장 중요한 특징은 연결 지향성과 신뢰성이다.&lt;br>
연결 지향성이란 데이터를 주고받기 전에 먼저 연결을 설정하는 것을 의미하는데, 이는 3-way handshaking이라는 과정을 통해 이루어진다.&lt;br>
신뢰성은 데이터가 손실없이 순서대로 전달되는 것을 보장한다는 의미이다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>신뢰성 보장&lt;/strong>: TCP는 데이터가 정확하게, 순서대로, 그리고 오류 없이 전달되도록 보장한다.&lt;/li>
&lt;li>&lt;strong>연결 지향적&lt;/strong>: 데이터 전송 전에 연결을 설정하고, 전송 후에는 연결을 종료한다.&lt;/li>
&lt;li>&lt;strong>흐름 제어&lt;/strong>: 수신자의 처리 능력에 맞춰 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>&lt;strong>혼잡 제어&lt;/strong>: 네트워크의 혼잡 상태를 감지하고 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>&lt;strong>전이중(Full-Duplex) 통신&lt;/strong>: 양방향으로 동시에 데이터 전송이 가능하다.&lt;/li>
&lt;li>&lt;strong>점대점(Point to Point) 통신&lt;/strong>: 정확히 2개의 종단점을 가진다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Window Size:&lt;br>
한 번에 전송할 수 있는 데이터의 양을 조절하는 값.&lt;br>
이는 흐름제어와 직접적인 관련이 있으며, 수신측의 처리 능력에 따라 동적으로 조절된다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>MSS(Maximum Segment Size):&lt;br>
TCP가 한 번에 전송할 수 있는 최대 세그먼트 크기를 의미한다.&lt;br>
이는 네트워크의 특성을 고려하여 설정된다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>타임아웃과 재전송:&lt;br>
일정 시간 내에 ACK를 받지 못하면 패킷 손실로 간주하고 재전송을 수행한다.&lt;br>
이는 데이터의 신뢰성을 보장하는 중요한 메커니즘이다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Slow Start:&lt;br>
네트워크 혼잡을 방지하기 위해 처음에는 적은 양의 데이터부터 전송을 시작한다.&lt;/p>
&lt;/blockquote>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>신뢰성 있는 데이터 전송&lt;/li>
&lt;li>순서 보장&lt;/li>
&lt;li>오류 검출 및 복구&lt;/li>
&lt;li>흐름 제어를 통한 효율적인 네트워크 사용&lt;/li>
&lt;li>다양한 애플리케이션 지원 (웹 브라우징, 이메일, 파일 전송 등)&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;pre class="mermaid hx-mt-6">%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '12px'}, 'flowchart': {'width': 400, 'height': 250, 'diagramPadding': 8}}}%%
sequenceDiagram
participant Client
participant Server
Note over Client,Server: 3-way Handshake (연결 수립)
Client->>Server: SYN (Seq = x)
Server-->>Client: SYN + ACK (Seq = y, Ack = x+1)
Client->>Server: ACK (Seq = x+1, Ack = y+1)
Note over Client,Server: 데이터 전송
Note over Client,Server: 4-way Handshake (연결 종료)
Client->>Server: FIN
Server-->>Client: ACK
Note right of Server: CLOSE_WAIT 상태
Server->>Client: FIN
Note left of Client: TIME_WAIT 상태
Client-->>Server: ACK&lt;/pre>&lt;ol start="2">
&lt;li>
&lt;p>데이터 전송:&lt;/p>
&lt;ul>
&lt;li>순차번호(Sequence Number)를 사용하여 패킷의 순서를 보장한다.&lt;/li>
&lt;li>확인응답(ACK)을 통해 패킷의 수신을 확인한다.&lt;/li>
&lt;li>흐름제어와 혼잡제어를 통해 네트워크의 효율성을 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>연결 종료 (4-way handshaking):&lt;/p>
&lt;ul>
&lt;li>FIN과 ACK 패킷을 주고받으며 연결을 종료한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>연결 설정: 3-way Handshake&lt;br>
목적: 클라이언트와 서버 간의 연결을 설정하고 초기 시퀀스 번호를 동기화&lt;br>
과정&lt;/p>
&lt;ol>
&lt;li>SYN (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 연결을 시작하려고 SYN 패킷을 보낸다.&lt;/li>
&lt;li>SYN 플래그가 1로 설정된다.&lt;/li>
&lt;li>초기 시퀀스 번호(ISN)를 포함한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SYN-ACK (서버 → 클라이언트)
&lt;ul>
&lt;li>서버가 SYN을 받고 응답한다.&lt;/li>
&lt;li>SYN과 ACK 플래그가 모두 1로 설정된다.&lt;/li>
&lt;li>서버의 ISN을 포함합니다.&lt;/li>
&lt;li>확인 응답 번호는 클라이언트의 ISN + 1입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 서버의 응답을 확인합니다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정됩니다.&lt;/li>
&lt;li>확인 응답 번호는 서버의 ISN + 1입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이 과정이 완료되면 연결이 설정되고 데이터 전송이 시작될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 전송&lt;br>
연결이 설정된 후, TCP는 다음과 같은 방식으로 데이터를 전송한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>세그먼트 분할&lt;/strong>: 큰 데이터를 작은 조각(세그먼트)으로 나눈다.&lt;/li>
&lt;li>&lt;strong>순서 번호 부여&lt;/strong>: 각 세그먼트에 번호를 매겨 순서를 보장한다.&lt;/li>
&lt;li>&lt;strong>확인 응답&lt;/strong>: 수신자는 받은 데이터에 대해 확인 응답을 보낸다.&lt;/li>
&lt;li>&lt;strong>재전송&lt;/strong>: 손실된 데이터는 자동으로 재전송된다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>연결 종료: 4-way Handshake&lt;br>
목적: 클라이언트와 서버 간의 연결을 안전하게 종료한다.&lt;br>
과정&lt;/p>
&lt;ol>
&lt;li>FIN (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 연결 종료를 요청한다.&lt;/li>
&lt;li>FIN 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (서버 → 클라이언트)
&lt;ul>
&lt;li>서버가 FIN을 받았음을 확인한다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정된다.&lt;/li>
&lt;li>이 시점에서 클라이언트→서버 방향의 연결이 닫힌다.&lt;br>
3.FIN (서버 → 클라이언트)&lt;/li>
&lt;li>서버가 모든 데이터 전송을 완료하고 연결 종료를 요청한다.&lt;/li>
&lt;li>FIN 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 서버의 FIN을 확인한다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이 과정이 완료되면 연결이 완전히 종료된다.&lt;/li>
&lt;li>클라이언트는 마지막 ACK 전송 후 일정 시간 (일반적으로 2MSL) 동안 TIME_WAIT 상태를 유지하여 지연된 패킷을 처리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>데이터를 세그먼트로 나누는 이유&lt;span class="hx-absolute -hx-mt-20" id="데이터를-세그먼트로-나누는-이유">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%a5%bc-%ec%84%b8%ea%b7%b8%eb%a8%bc%ed%8a%b8%eb%a1%9c-%eb%82%98%eb%88%84%eb%8a%94-%ec%9d%b4%ec%9c%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>네트워크 제한 사항 준수
&lt;ol>
&lt;li>MTU(Maximum Transmission Unit) 제한: 네트워크 계층 프로토콜마다 MTU가 다르며, TCP는 이를 초과하지 않도록 데이터를 분할한다.&lt;/li>
&lt;li>효율적인 전송: 큰 데이터 스트림을 작은 세그먼트로 나누어 네트워크 패킷에 맞게 전송한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>신뢰성 향상
&lt;ol>
&lt;li>오류 처리: 작은 세그먼트로 나누면 오류 발생 시 해당 세그먼트만 재전송할 수 있어 효율적이다.&lt;/li>
&lt;li>순서 보장: 각 세그먼트에 시퀀스 번호를 할당하여 수신 측에서 올바른 순서로 재조립할 수 있다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>흐름 제어 및 혼잡 제어
&lt;ol>
&lt;li>수신자 처리 능력 고려: 세그먼트 단위로 전송함으로써 수신자의 처리 능력에 맞춰 데이터 전송 속도를 조절할 수 있다.&lt;/li>
&lt;li>네트워크 상태 대응: 세그먼트 단위로 전송하면 네트워크 혼잡 상황에 더 유연하게 대응할 수 있다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h4>세그먼트로 나누는 데이터가 에러를 감지하는 방법&lt;span class="hx-absolute -hx-mt-20" id="세그먼트로-나누는-데이터가-에러를-감지하는-방법">&lt;/span>
&lt;a href="#%ec%84%b8%ea%b7%b8%eb%a8%bc%ed%8a%b8%eb%a1%9c-%eb%82%98%eb%88%84%eb%8a%94-%eb%8d%b0%ec%9d%b4%ed%84%b0%ea%b0%80-%ec%97%90%eb%9f%ac%eb%a5%bc-%ea%b0%90%ec%a7%80%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>TCP는 세그먼트로 나눈 데이터의 에러를 감지하기 위해 다음과 같은 방법들을 사용한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>체크섬(Checksum)&lt;/p>
&lt;ul>
&lt;li>각 세그먼트에는 16비트 체크섬 필드가 포함된다.&lt;/li>
&lt;li>송신자는 데이터를 기반으로 체크섬을 계산하여 세그먼트에 포함시킨다.&lt;/li>
&lt;li>수신자는 받은 세그먼트의 체크섬을 다시 계산하여 송신자의 체크섬과 비교한다.&lt;/li>
&lt;li>두 체크섬이 일치하지 않으면 해당 세그먼트는 손상된 것으로 간주하고 폐기한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>시퀀스 번호(Sequence Numbers)&lt;/p>
&lt;ul>
&lt;li>TCP는 각 데이터 세그먼트에 고유한 시퀀스 번호를 할당한다.&lt;/li>
&lt;li>이를 통해 수신자는 데이터의 순서를 확인하고 누락된 세그먼트를 감지할 수 있다.&lt;/li>
&lt;li>순서가 맞지 않는 세그먼트를 받으면 에러로 간주한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>확인 응답(Acknowledgements)&lt;/p>
&lt;ul>
&lt;li>수신자는 성공적으로 받은 데이터에 대해 확인 응답(ACK)을 보낸다.&lt;/li>
&lt;li>송신자는 일정 시간 내에 ACK를 받지 못하면 해당 세그먼트가 손실되었다고 판단한다.&lt;/li>
&lt;li>중복된 ACK를 연속으로 받으면 특정 세그먼트의 손실을 감지할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>UDP</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/udp/</link><pubDate>Wed, 02 Oct 2024 04:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/udp/</guid><description>
&lt;h2>UDP (User Datagram Protocol)&lt;span class="hx-absolute -hx-mt-20" id="udp-user-datagram-protocol">&lt;/span>
&lt;a href="#udp-user-datagram-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 프로토콜 스위트의 핵심 전송 계층 프로토콜 중 하나로, 비연결형 통신 방식을 통해 데이터를 빠르고 효율적으로 전송한다.&lt;br>
TCP와 달리 연결 설정 과정 없이 데이터그램 단위로 전송하며, 신뢰성보다는 속도와 실시간 처리가 중요한 애플리케이션에서 주로 사용한다.&lt;/p>
&lt;p>OSI 7계층의 전송 계층(4계층)에 속하며, TCP/IP 4계층에서도 전송 계층에 속한다.&lt;/p>
&lt;p>추가적으로 알아야 할 내용:&lt;/p>
&lt;ol>
&lt;li>포트 번호: UDP도 TCP와 마찬가지로 16비트 포트 번호를 사용하여 애플리케이션을 구분합니다.&lt;/li>
&lt;li>체크섬: UDP는 선택적으로 체크섬을 사용하여 데이터 무결성을 확인할 수 있습니다.&lt;/li>
&lt;li>MTU(Maximum Transmission Unit): UDP 데이터그램의 크기가 네트워크의 MTU를 초과하면 IP 계층에서 단편화가 발생할 수 있습니다.&lt;/li>
&lt;li>애플리케이션 레벨 신뢰성: UDP를 사용하는 애플리케이션은 필요한 경우 자체적으로 신뢰성 메커니즘을 구현해야 합니다.&lt;/li>
&lt;li>NAT 통과: UDP는 TCP에 비해 NAT(Network Address Translation) 통과가 더 쉬울 수 있습니다.&lt;/li>
&lt;li>실시간 애플리케이션: 음성 통화, 비디오 스트리밍, 온라인 게임 등 실시간 애플리케이션에서 자주 사용됩니다.&lt;/li>
&lt;li>DNS: 도메인 네임 시스템(DNS)은 주로 UDP를 사용하여 쿼리를 처리합니다.&lt;/li>
&lt;li>QUIC(Quick UDP Internet Connections): Google이 개발한 프로토콜로, UDP 위에서 동작하며 TCP의 일부 특성을 구현합니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>비연결성&lt;/strong>: UDP는 연결을 설정하지 않고 바로 데이터를 전송한다.&lt;br>
TCP의 3-way handshake와 같은 연결 설정 과정이 없다.&lt;/li>
&lt;li>&lt;strong>신속성&lt;/strong>: 연결 설정 과정이 없어 TCP보다 빠른 전송이 가능하다.&lt;/li>
&lt;li>&lt;strong>비신뢰성&lt;/strong>: 데이터 전달의 보증이나 순서를 보장하지 않는다. 패킷 손실이 발생할 수 있다.&lt;/li>
&lt;li>&lt;strong>효율성&lt;/strong>: 헤더가 단순하여 오버헤드가 적고, 네트워크 부하가 적다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>빠른 데이터 전송&lt;/li>
&lt;li>적은 지연 시간&lt;/li>
&lt;li>간단한 구현&lt;/li>
&lt;li>작은 헤더 크기로 인한 효율적인 대역폭 사용&lt;/li>
&lt;li>브로드캐스트 및 멀티캐스트에 적합&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>애플리케이션이 데이터를 UDP에 전달&lt;/li>
&lt;li>UDP가 데이터를 데이터그램으로 패키징&lt;/li>
&lt;li>IP 계층을 통해 데이터그램 전송&lt;/li>
&lt;li>수신측 UDP가 데이터그램을 받아 애플리케이션에 전달&lt;/li>
&lt;/ol>
&lt;h4>데이터그램&lt;span class="hx-absolute -hx-mt-20" id="데이터그램">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0%ea%b7%b8%eb%9e%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>UDP는 데이터를 데이터그램이라는 단위로 전송한다.&lt;br>
데이터그램은 독립적인 관계를 지니는 패킷을 의미한다.&lt;/p>
&lt;p>특징:&lt;/p>
&lt;ol>
&lt;li>독립성: 각 데이터그램은 독립적으로 처리되며, 다른 데이터그램과의 관계나 순서에 상관없이 전송된다.&lt;/li>
&lt;li>비연결성: 데이터그램은 연결 설정 없이 바로 전송됩니다. 이는 TCP의 연결 지향적 특성과 대조된다.&lt;/li>
&lt;li>신뢰성 부족: UDP는 데이터그램의 전달을 보장하지 않으며, 수신 여부를 확인하지 않는다.&lt;/li>
&lt;li>순서 보장 없음: 데이터그램의 전송 순서가 바뀔 수 있으며, UDP는 이를 재정렬하지 않는다.&lt;/li>
&lt;/ol>
&lt;p>구조:&lt;br>
UDP 데이터그램은 헤더와 데이터 부분으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>UDP 헤더 (8바이트):
&lt;ul>
&lt;li>송신지 포트 번호 (2바이트)&lt;/li>
&lt;li>목적지 포트 번호 (2바이트)&lt;/li>
&lt;li>데이터그램 길이 (2바이트)&lt;/li>
&lt;li>체크섬 (2바이트)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 부분:
&lt;ul>
&lt;li>실제 전송할 애플리케이션 데이터&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>특성:&lt;/p>
&lt;ol>
&lt;li>크기 제한: UDP 데이터그램의 최대 크기는 65,535바이트(헤더 포함)이다.&lt;/li>
&lt;li>효율성: 헤더가 작아(8바이트) TCP에 비해 오버헤드가 적고 통신 효율이 높다.&lt;/li>
&lt;li>분할 기능 없음: UDP는 큰 데이터를 자동으로 분할하지 않는다. 필요한 경우 애플리케이션에서 데이터를 적절한 크기로 나눠야 한다.&lt;/li>
&lt;/ol>
&lt;h3>UDP의 사용 사례&lt;span class="hx-absolute -hx-mt-20" id="udp의-사용-사례">&lt;/span>
&lt;a href="#udp%ec%9d%98-%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>UDP는 다음과 같은 상황에서 주로 사용된다.:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>실시간 스트리밍&lt;/strong>: 영상 통화, 온라인 게임 등&lt;/li>
&lt;li>&lt;strong>DNS(Domain Name System)&lt;/strong>: 도메인 이름을 IP 주소로 변환&lt;/li>
&lt;li>&lt;strong>SNMP(Simple Network Management Protocol)&lt;/strong>: 네트워크 관리&lt;/li>
&lt;/ol>
&lt;h3>UDP를 실제 개발에 활용할 때의 코드 예시&lt;span class="hx-absolute -hx-mt-20" id="udp를-실제-개발에-활용할-때의-코드-예시">&lt;/span>
&lt;a href="#udp%eb%a5%bc-%ec%8b%a4%ec%a0%9c-%ea%b0%9c%eb%b0%9c%ec%97%90-%ed%99%9c%ec%9a%a9%ed%95%a0-%eb%95%8c%ec%9d%98-%ec%bd%94%eb%93%9c-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UDP 서버 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">udp_server&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># UDP 소켓 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_DGRAM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 수신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Received message: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> from &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s2">&amp;#34;Message received&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UDP 클라이언트 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">udp_client&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client_socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_DGRAM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, UDP Server!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 수신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Server response: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>