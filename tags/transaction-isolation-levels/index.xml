<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Transaction-Isolation-Levels on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/transaction-isolation-levels/</link>
    <description>Recent content in Transaction-Isolation-Levels on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.149.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 06 Feb 2025 04:52:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/transaction-isolation-levels/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Transaction Isolation Levels</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-operations/transaction-management/transaction/transaction-isolation/transaction-isolation-levels/</link>
      <pubDate>Thu, 06 Feb 2025 04:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-operations/transaction-management/transaction/transaction-isolation/transaction-isolation-levels/</guid>
      <description>트랜잭션 격리 수준(Transaction Isolation Level)은 DBMS가 동시에 실행되는 트랜잭션 간 데이터 접근·갱신 방식을 제어해 Dirty Read, Non-repeatable Read, Phantom Read 등을 방지하는 메커니즘이다. SQL-92 표준의 4단계(Read Uncommitted~Serializable)와 Lock·MVCC 기반 구현을 통해 성능과 일관성 간 균형을 조정한다.</description>
    </item>
  </channel>
</rss>
