<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Gateway-Interface</title><link>https://buenhyden.github.io/tags/gateway-interface/</link><description>Recent content in Gateway-Interface on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 16 Nov 2024 03:02:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/gateway-interface/index.xml" rel="self" type="application/rss+xml"/><item><title>ASGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/asgi/</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/asgi/</guid><description>
&lt;h2>ASGI (Asynchronous Server Gateway Interface)&lt;/h2>&lt;p>Python 웹 애플리케이션과 웹 서버 간의 비동기 통신을 위한 표준 인터페이스.&lt;br>
ASGI는 WSGI(Web Server Gateway Interface)의 후속작으로, 현대적인 웹 애플리케이션의 요구사항을 충족시키기 위해 개발되었다.&lt;br>
비동기 및 동기 애플리케이션 모두를 지원하도록 설계되었다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Programming%20Languages/Python/Gateway%20Interface/consumers-and-groups.webp"
alt=""
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.scaler.com/topics/django/django-channels/" target="_blank" rel="noopener">https://www.scaler.com/topics/django/django-channels/&lt;/a> _&lt;/p>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>비동기 지원&lt;/strong>:&lt;br>
ASGI는 비동기 프로그래밍을 완벽하게 지원한다.&lt;br>
이는 웹소켓, 장기 연결(long-polling), 서버 전송 이벤트(SSE) 등의 실시간 통신 기능을 효율적으로 처리할 수 있게 해준다.&lt;/li>
&lt;li>&lt;strong>성능 향상&lt;/strong>:&lt;br>
비동기 처리 덕분에 ASGI는 동시에 여러 요청을 처리하거나 I/O 작업을 효율적으로 수행할 수 있어, 높은 동시성을 요구하는 애플리케이션에서 성능을 크게 향상시킬 수 있다.&lt;/li>
&lt;li>&lt;strong>호환성&lt;/strong>: ASGI는 WSGI와의 하위 호환성을 제공하여, 기존 WSGI 애플리케이션을 쉽게 마이그레이션할 수 있다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: ASGI는 HTTP/1.1, HTTP/2, WebSocket 등 다양한 프로토콜을 지원하며, 실시간 애플리케이션 개발에 적합하다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>높은 성능&lt;/strong>: 비동기 처리를 통해 동시성을 높이고, I/O 바운드 작업에서 뛰어난 성능을 발휘한다.&lt;/li>
&lt;li>&lt;strong>실시간 애플리케이션 지원&lt;/strong>: 웹소켓, SSE 등의 실시간 통신 프로토콜을 효과적으로 지원한다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 다양한 미들웨어와 확장 기능을 통해 애플리케이션의 기능을 쉽게 확장할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>복잡성&lt;/strong>: 비동기 프로그래밍에 대한 이해가 필요하며, 일부 개발자에게는 학습 곡선이 있을 수 있다.&lt;/li>
&lt;li>&lt;strong>생태계 성숙도&lt;/strong>: WSGI에 비해 상대적으로 새로운 기술이므로, 일부 라이브러리나 도구의 지원이 제한적일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>구조&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">application&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scope&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 클라이언트로부터 요청을 받음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;http.response.start&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;headers&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;http.response.body&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;body&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;Hello, World!&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>scope&lt;/code>: 요청의 타입과 세부 정보를 포함하는 딕셔너리&lt;/li>
&lt;li>&lt;code>receive&lt;/code>: 들어오는 이벤트를 비동기적으로 받는 함수&lt;/li>
&lt;li>&lt;code>send&lt;/code>: 나가는 이벤트를 비동기적으로 보내는 함수&lt;/li>
&lt;/ul>
&lt;h3>ASGI의 계층 구조&lt;/h3>&lt;ol>
&lt;li>Protocol Servers (예: Uvicorn, Daphne, Hypercorn)
&lt;ul>
&lt;li>실제 네트워크 연결을 처리하고 HTTP/WebSocket 프로토콜을 해석합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ASGI Application
&lt;ul>
&lt;li>우리가 작성하는 실제 애플리케이션 코드입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ASGI Framework (예: FastAPI, Django Channels, Starlette)
&lt;ul>
&lt;li>애플리케이션 작성을 더 쉽게 만들어주는 고수준 프레임워크입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>ASGI 서버 및 프레임워크&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>서버&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Uvicorn: 가볍고 빠른 ASGI 서버&lt;/li>
&lt;li>Daphne: Django Channels 프로젝트에서 사용되는 ASGI 서버&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>프레임워크&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>FastAPI: 현대적이고 고성능의 API 개발을 위한 프레임워크&lt;/li>
&lt;li>Starlette: 경량 ASGI 프레임워크&lt;/li>
&lt;li>Django Channels: Django를 위한 비동기 지원 확장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>CGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/cgi/</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/cgi/</guid><description>
&lt;h2>CGI(Common Gateway Interface)&lt;/h2>&lt;p>Python의 CGI(Common Gateway Interface)는 웹 서버와 외부 프로그램 간의 통신을 위한 표준 인터페이스.&lt;br>
Python에서 CGI를 사용하면 동적 웹 콘텐츠를 생성할 수 있다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Programming%20Languages/Python/Gateway%20Interface/gfg237.png"
alt="CGI"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.geeksforgeeks.org/what-is-cgi-in-python/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/what-is-cgi-in-python/&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>웹 서버와 Python 프로그램 간의 통신 방식을 정의합니다.&lt;/li>
&lt;li>클라이언트의 요청을 처리하고 동적으로 HTML 페이지를 생성합니다.&lt;/li>
&lt;li>환경 변수와 표준 입출력을 통해 데이터를 주고받습니다.&lt;/li>
&lt;/ol>
&lt;h3>프로그램의 구조&lt;/h3>&lt;ol>
&lt;li>셔뱅 라인: #!/usr/bin/python3&lt;/li>
&lt;li>필요한 모듈 임포트: import cgi&lt;/li>
&lt;li>CGI 필드 스토리지 객체 생성: form = cgi.FieldStorage()&lt;/li>
&lt;li>HTTP 헤더 출력: print(&amp;lsquo;Content-type: text/html\n&amp;rsquo;)&lt;/li>
&lt;li>HTML 콘텐츠 생성 및 출력&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>간단하고 이해하기 쉬운 구조&lt;/li>
&lt;li>다양한 프로그래밍 언어 지원&lt;/li>
&lt;li>웹 서버와 독립적으로 동작&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;/h3>&lt;ul>
&lt;li>요청마다 새로운 프로세스를 생성하여 리소스 사용량이 많음&lt;/li>
&lt;li>대규모 애플리케이션에서는 성능 저하 발생 가능&lt;/li>
&lt;/ul>
&lt;h3>예시 코드&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ch">#!/usr/bin/python3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">cgi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cgi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FieldStorage&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">form&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getvalue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;World&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-type: text/html&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드는 사용자의 이름을 입력받아 인사말을 출력하는 간단한 CGI 프로그램.&lt;/p>
&lt;p>Python의 CGI는 간단한 웹 애플리케이션 개발에 적합하지만, 현대의 복잡한 웹 애플리케이션에는 WSGI나 ASGI와 같은 더 효율적인 인터페이스가 선호된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>WSGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/wsgi/</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/wsgi/</guid><description>
&lt;h2>WSGI(Web Server Gateway Interface)&lt;/h2>&lt;p>파이썬 웹 애플리케이션과 웹 서버 간의 표준 인터페이스를 정의하는 규약이다.&lt;br>
WSGI는 웹 서버와 웹 애플리케이션 사이에서 중개자 역할을 하며, 파이썬 웹 개발에서 중요한 역할을 담당한다.&lt;/p>
&lt;p>웹 서버와 파이썬 애플리케이션의 관계를 생각해보면,&lt;br>
웹 서버(예: Apache, Nginx)는 HTTP 요청을 받아서 처리해야 하고, 파이썬 애플리케이션은 비즈니스 로직을 실행해야 한다. 이 둘을 연결하는 중간자 역할로 WSGI가 등장한다.&lt;br>
WSGI는 2003년 PEP 333에서 처음 제안되었고, 현재는 PEP 3333에서 파이썬 3를 위해 업데이트되었다.&lt;br>
WSGI는 웹 서버와 파이썬 웹 애플리케이션 사이의 표준 인터페이스를 정의한다.&lt;br>
표준화된 인터페이스가 있기 때문에, 어떤 WSGI 서버든 어떤 WSGI 애플리케이션이든 서로 호환되어 동작할 수 있다.&lt;/p>
&lt;p>WSGI(Web Server Gateway Interface)는 파이썬 웹 애플리케이션과 웹 서버 간의 표준 인터페이스를 정의하는 규약이다.&lt;br>
WSGI는 웹 서버와 웹 애플리케이션 사이에서 중개자 역할을 하며, 파이썬 웹 개발에서 중요한 역할을 담당한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Programming%20Languages/Python/Gateway%20Interface/https___dev-to-uploads.s3.amazonaws.com_uploads_articles_56zf2r5ljmujm2jwtz8y.jpg"
alt="python web applications"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://dev.to/afrazkhan/python-wsgi-applications-1kjb" target="_blank" rel="noopener">https://dev.to/afrazkhan/python-wsgi-applications-1kjb&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>표준화된 인터페이스&lt;/strong>:&lt;br>
WSGI는 PEP 3333에 정의된 파이썬의 표준 인터페이스로, 웹 서버와 웹 애플리케이션 간의 상호 운용성을 보장한다.&lt;/li>
&lt;li>&lt;strong>동기적 처리&lt;/strong>:&lt;br>
WSGI는 기본적으로 동기 방식을 지원한다.&lt;br>
요청이 들어오면 해당 요청이 완전히 처리될 때까지 다른 요청을 처리할 수 없다.&lt;/li>
&lt;li>&lt;strong>미들웨어 지원&lt;/strong>:&lt;br>
WSGI는 서버와 애플리케이션 사이에 위치하여 요청을 가로채고 수정하거나, 애플리케이션의 응답을 조작할 수 있는 미들웨어를 지원한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>프레임워크 독립성&lt;/strong>: Django, Flask, Pyramid 등 다양한 파이썬 웹 프레임워크를 사용할 수 있다.&lt;/li>
&lt;li>&lt;strong>서버 독립성&lt;/strong>: Gunicorn, uWSGI, Nginx 등 다양한 서버에서 동일한 애플리케이션을 실행할 수 있다.&lt;/li>
&lt;li>&lt;strong>안정성&lt;/strong>: 단순한 인터페이스로 인해 안정적인 운영이 가능하다.&lt;/li>
&lt;li>&lt;strong>메모리 효율성&lt;/strong>: WSGI는 메모리에 한 번만 적재되므로, CGI보다 메모리 사용이 적고 더 많은 요청을 처리할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;/h3>&lt;p>WSGI 애플리케이션은 다음과 같은 구조를 가진다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">wsgi_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_response&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;200 OK&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="s1">&amp;#39;Content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text/plain; charset=utf-8&amp;#39;&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s2">&amp;#34;Hello, WSGI World!&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>environ&lt;/code>: 웹 서버가 제공하는 환경 변수와 요청 정보가 담긴 딕셔너리&lt;/li>
&lt;li>&lt;code>start_response&lt;/code>: 상태 코드와 헤더를 웹 서버에 전달하는 콜백 함수&lt;/li>
&lt;/ul>
&lt;h3>한계&lt;/h3>&lt;ol>
&lt;li>&lt;strong>동기적 처리&lt;/strong>:&lt;br>
WSGI는 동기적 요청 처리를 기반으로 하기 때문에, 실시간 웹 소켓 통신이나 장기 연결과 같은 비동기 작업에 적합하지 않는다.&lt;/li>
&lt;li>&lt;strong>성능 제한&lt;/strong>:&lt;br>
동시성이 중요한 애플리케이션에서는 성능이 제한될 수 있다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>