<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Divide-and-Conquer</title><link>https://buenhyden.github.io/tags/divide-and-conquer/</link><description>Recent content in Divide-and-Conquer on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 31 Oct 2024 05:22:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/divide-and-conquer/index.xml" rel="self" type="application/rss+xml"/><item><title>분할 정복 (Divide and Conquer)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm-design/algorithm-design-techniques/divide-and-conquer/</link><pubDate>Thu, 31 Oct 2024 05:22:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm-design/algorithm-design-techniques/divide-and-conquer/</guid><description>
&lt;h2>분할 정복 (Divide and Conquer)&lt;/h2>&lt;p>분할 정복(Divide and Conquer)은 복잡한 문제를 더 작고 관리하기 쉬운 하위 문제로 나누어 해결하는 알고리즘 설계 기법이다.&lt;/p>
&lt;p>분할 정복은 주어진 문제를 다음과 같은 세 단계로 해결한다:&lt;/p>
&lt;ol>
&lt;li>분할(Divide): 원래 문제를 더 작은 하위 문제들로 나눈다.&lt;/li>
&lt;li>정복(Conquer): 하위 문제들을 재귀적으로 해결한다.&lt;/li>
&lt;li>결합(Combine): 하위 문제들의 해결책을 결합하여 원래 문제의 해답을 얻는다.&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Data%20Structure%20and%20Algorithm/Algorithm%20Design/Algorithm%20Design%20techniques/Working-of-Divide-and-Conquer-Algorithm.webp"
alt="Working of Divide and Conquer"
loading="lazy" />
&lt;/figure>
_Source: &lt;a href="https://www.geeksforgeeks.org/introduction-to-divide-and-conquer-algorithm/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/introduction-to-divide-and-conquer-algorithm/&lt;/a> _&lt;/p>
&lt;h3>특성&lt;/h3>&lt;ul>
&lt;li>재귀적 접근: 문제를 더 작은 동일한 유형의 하위 문제로 나누어 해결한다.&lt;/li>
&lt;li>분할 가능성: 문제가 더 작은 하위 문제로 자연스럽게 나누어질 수 있어야 한다.&lt;/li>
&lt;li>하위 문제 독립성: 각 하위 문제는 독립적으로 해결될 수 있어야 한다.&lt;/li>
&lt;/ul>
&lt;h3>목적과 필요성&lt;/h3>&lt;p>분할 정복의 주요 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>복잡한 문제를 더 간단하고 해결 가능한 형태로 변환&lt;/li>
&lt;li>문제 해결 과정의 효율성 향상&lt;/li>
&lt;li>병렬 처리를 통한 성능 개선 가능성 제공&lt;br>
복잡하고 큰 규모의 문제를 효율적으로 해결하기 위해 분할 정복이 필요한다.&lt;/li>
&lt;/ol>
&lt;h3>장단점&lt;/h3>&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>복잡한 문제를 효율적으로 해결할 수 있다.&lt;/li>
&lt;li>병렬 처리에 적합하다.&lt;/li>
&lt;li>일부 문제에서 최적의 시간 복잡도를 제공한다.&lt;/li>
&lt;/ol>
&lt;p>단점:&lt;/p>
&lt;ol>
&lt;li>재귀 호출로 인한 오버헤드가 발생할 수 있다.&lt;/li>
&lt;li>모든 문제에 적용할 수 있는 것은 아니다.&lt;/li>
&lt;li>메모리 사용량이 증가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>작동 원리&lt;/h3>&lt;ol>
&lt;li>문제를 더 작은 하위 문제로 나눈다.&lt;/li>
&lt;li>하위 문제가 충분히 작아질 때까지 재귀적으로 나누는 과정을 반복한다.&lt;/li>
&lt;li>가장 작은 하위 문제부터 해결하기 시작한다.&lt;/li>
&lt;li>하위 문제의 해결책을 결합하여 상위 문제의 해답을 얻는다.&lt;/li>
&lt;li>최종적으로 원래 문제의 해답을 얻는다.&lt;/li>
&lt;/ol>
&lt;h3>좋은 알고리즘의 조건&lt;/h3>&lt;ol>
&lt;li>효율적인 분할: 문제를 균형 있게 나누는 방법을 사용해야 한다.&lt;/li>
&lt;li>기저 사례(Base case) 정의: 더 이상 나눌 수 없는 가장 작은 문제를 정의해야 한다.&lt;/li>
&lt;li>효율적인 결합: 하위 문제의 해결책을 빠르게 결합할 수 있어야 한다.&lt;/li>
&lt;li>중복 계산 방지: 동일한 하위 문제를 반복해서 해결하지 않도록 해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>효율적인 구현을 위한 팁&lt;/h3>&lt;ol>
&lt;li>재귀 함수를 최적화하여 사용한다.&lt;/li>
&lt;li>하위 문제의 크기를 균형있게 나눈다.&lt;/li>
&lt;li>메모이제이션(Memoization)을 활용하여 중복 계산을 피한다.&lt;/li>
&lt;li>병렬 처리를 고려한다.&lt;/li>
&lt;/ol>
&lt;h3>핵심 구성 요소&lt;/h3>&lt;ol>
&lt;li>분할 함수: 문제를 하위 문제로 나누는 함수&lt;/li>
&lt;li>정복 함수: 기저 사례를 해결하는 함수&lt;/li>
&lt;li>결합 함수: 하위 문제의 해결책을 결합하는 함수&lt;/li>
&lt;li>기저 사례 확인 함수: 더 이상 나눌 수 없는 가장 작은 문제인지 확인하는 함수&lt;/li>
&lt;/ol>
&lt;h3>실제 예시&lt;/h3>&lt;p>병합 정렬(Merge Sort)을 구현한 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">merge_sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기저 사례: 배열의 길이가 1 이하면 이미 정렬된 상태&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">arr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 분할 단계: 배열을 두 개의 하위 배열로 나눔&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">:]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 정복 단계: 재귀적으로 하위 배열 정렬&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">merge_sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">merge_sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결합 단계: 정렬된 하위 배열을 병합&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">merge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 두 배열의 원소를 비교하며 병합&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">left&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">i&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">j&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 남은 원소들을 결과 배열에 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">:])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 사용 예&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">38&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">27&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">43&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">82&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sorted_arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">merge_sort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;정렬된 배열:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sorted_arr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>