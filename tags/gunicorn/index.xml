<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Gunicorn</title><link>https://buenhyden.github.io/tags/gunicorn/</link><description>Recent content in Gunicorn on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 17 Nov 2024 14:06:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/gunicorn/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Web Application Server</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/python-web-application-server/</link><pubDate>Sun, 17 Nov 2024 14:06:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/library/python-web-application-server/</guid><description>
&lt;h2>Python Web Application Server&lt;/h2>&lt;p>gunicorn, uwsgi, daphne, uvicorn은 모두 Python 웹 애플리케이션을 실행하고 서비스하기 위한 서버 프로그램들이다.
이들은 각각 고유한 특징과 용도를 가지고 있으며, 주로 WSGI(Web Server Gateway Interface) 또는 ASGI(Asynchronous Server Gateway Interface) 프로토콜을 구현한다.&lt;/p>
&lt;h3>서버 구현체 비교 분석&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Gunicorn&lt;/th>
&lt;th>uWSGI&lt;/th>
&lt;th>Daphne&lt;/th>
&lt;th>Uvicorn&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>서버 유형&lt;/strong>&lt;/td>
&lt;td>WSGI 서버&lt;/td>
&lt;td>WSGI/ASGI 서버&lt;/td>
&lt;td>ASGI 서버&lt;/td>
&lt;td>ASGI 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로토콜 지원&lt;/strong>&lt;/td>
&lt;td>HTTP/1.1&lt;/td>
&lt;td>HTTP/1.1, HTTP/2, WebSocket&lt;/td>
&lt;td>HTTP/1.1, HTTP/2, WebSocket, Server-Sent Events&lt;/td>
&lt;td>HTTP/1.1, WebSocket&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 특징&lt;/strong>&lt;/td>
&lt;td>- 안정성과 신뢰성&lt;br>- 간단한 설정&lt;br>- 프로세스 관리 용이&lt;br>- 자동 워커 관리&lt;br>- 우수한 모니터링&lt;/td>
&lt;td>- 다양한 프로토콜 지원&lt;br>- 높은 확장성&lt;br>- 복잡한 설정 가능&lt;br>- 캐싱 기능&lt;br>- 로드 밸런싱&lt;/td>
&lt;td>- Django Channels 기본 서버&lt;br>- 비동기 처리 최적화&lt;br>WebSocket 특화&lt;br>- 실시간 통신 강점&lt;/td>
&lt;td>- 경량화 설계&lt;br>- 빠른 속도&lt;br>- 간단한 구성&lt;br>FastAPI 권장 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능&lt;/strong>&lt;/td>
&lt;td>- 중간~높음&lt;br>- 안정적 성능&lt;br>- 동시성 처리 우수&lt;/td>
&lt;td>- 매우 높음&lt;br>- 리소스 사용량 다소 높음&lt;br>- 복잡한 설정 필요&lt;/td>
&lt;td>- 높음&lt;br>- 비동기 처리 최적화&lt;br>WebSocket 성능 우수&lt;/td>
&lt;td>- 매우 높음&lt;br>- 낮은 지연시간&lt;br>- 효율적 리소스 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>사용 사례&lt;/strong>&lt;/td>
&lt;td>- Django/Flask 프로덕션&lt;br>- 일반적인 웹 애플리케이션&lt;br>REST API 서버&lt;/td>
&lt;td>- 대규모 엔터프라이즈&lt;br>- 복잡한 서버 구성&lt;br>- 다중 프로토콜 지원 필요&lt;/td>
&lt;td>- 실시간 애플리케이션&lt;br>- 채팅 서비스&lt;br>WebSocket 기반 서비스&lt;/td>
&lt;td>- FastAPI 애플리케이션&lt;br>- 마이크로서비스&lt;br>- 고성능 API 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>설정 복잡도&lt;/strong>&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>문서화 수준&lt;/strong>&lt;/td>
&lt;td>우수함&lt;/td>
&lt;td>매우 상세함&lt;/td>
&lt;td>보통&lt;/td>
&lt;td>우수함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>커뮤니티 크기&lt;/strong>&lt;/td>
&lt;td>매우 큼&lt;/td>
&lt;td>큼&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>커지는 중&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 장점&lt;/strong>&lt;/td>
&lt;td>- 안정성&lt;br>- 쉬운 설정&lt;br>- 넓은 생태계&lt;br>- 좋은 모니터링&lt;/td>
&lt;td>- 높은 성능&lt;br>- 다양한 기능&lt;br>- 유연한 설정&lt;br>- 풍부한 기능&lt;/td>
&lt;td>- 비동기 최적화&lt;br>WebSocket 특화&lt;br>Django 통합 우수&lt;/td>
&lt;td>- 빠른 속도&lt;br>- 간단한 설정&lt;br>- 현대적 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 단점&lt;/strong>&lt;/td>
&lt;td>- 비동기 제한적&lt;br>WebSocket 미지원&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 학습 곡선&lt;br>- 리소스 사용량&lt;/td>
&lt;td>- 제한적 사용 사례&lt;br>- 작은 생태계&lt;/td>
&lt;td>- 제한적 기능&lt;br>- 새로운 생태계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>권장 환경&lt;/strong>&lt;/td>
&lt;td>- 안정성 중시&lt;br>- 일반 웹 서비스&lt;br>- 중소규모 서비스&lt;/td>
&lt;td>- 대규모 서비스&lt;br>- 복잡한 요구사항&lt;br>- 리소스 여유&lt;/td>
&lt;td>- 실시간 서비스&lt;br>- Django Channels&lt;br>- WebSocket 필수&lt;/td>
&lt;td>- 현대적 API&lt;br>- 마이크로서비스&lt;br>- 고성능 요구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>동시성 모델&lt;/strong>&lt;/td>
&lt;td>프리포크(Pre-fork)&lt;/td>
&lt;td>프리포크 + 스레드&lt;/td>
&lt;td>비동기 이벤트 루프&lt;/td>
&lt;td>비동기 이벤트 루프&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>로드 밸런싱&lt;/td>
&lt;td>내장&lt;/td>
&lt;td>내장&lt;/td>
&lt;td>별도 설정 필요&lt;/td>
&lt;td>Gunicorn과 함께 사용 시 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모니터링&lt;/strong>&lt;/td>
&lt;td>내장 도구 우수&lt;/td>
&lt;td>상세한 도구 제공&lt;/td>
&lt;td>기본적 수준&lt;/td>
&lt;td>기본적 수준&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 용이성&lt;/strong>&lt;/td>
&lt;td>매우 쉬움&lt;/td>
&lt;td>복잡함&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>쉬움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>기본적인 보안 기능&lt;/td>
&lt;td>다양한 보안 기능&lt;/td>
&lt;td>Django 보안 기능 활용&lt;/td>
&lt;td>기본적인 보안 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>웹소켓 지원&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>완벽 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>호환성&lt;/td>
&lt;td>Django, Flask 등 WSGI 프레임워크&lt;/td>
&lt;td>Django, Flask, Pyramid 등 WSGI 프레임워크&lt;/td>
&lt;td>Django Channels에 특화&lt;/td>
&lt;td>FastAPI, Starlette 등 ASGI 프레임워크&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>gunicorn</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/gunicorn/</link><pubDate>Sat, 16 Nov 2024 03:37:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/gunicorn/</guid><description>
&lt;h2>Gunicorn&lt;/h2>&lt;p>Gunicorn(Green Unicorn)은 Python WSGI(Web Server Gateway Interface) HTTP 서버로, 파이썬 웹 애플리케이션을 위한 강력하고 효율적인 서버 솔루션이다.&lt;/p>
&lt;p>Gunicorn은 웹 서버(예: Nginx)와 파이썬 웹 애플리케이션(예: Django, Flask) 사이에서 중개자 역할을 한다.&lt;/p>
&lt;p>주요 기능은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>웹 서버로부터 받은 HTTP 요청을 파이썬 애플리케이션이 이해할 수 있는 형태로 변환&lt;/li>
&lt;li>파이썬 애플리케이션의 응답을 웹 서버에 전달&lt;/li>
&lt;li>다중 프로세스를 통한 요청 처리로 성능 향상&lt;/li>
&lt;/ol>
&lt;h3>Gunicorn의 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>멀티 프로세싱&lt;/strong>: Gunicorn은 여러 워커 프로세스를 생성하여 동시에 많은 요청을 처리할 수 있다.&lt;/li>
&lt;li>&lt;strong>다양한 웹 프레임워크 지원&lt;/strong>: Django, Flask 등 대부분의 파이썬 웹 프레임워크와 호환된다.&lt;/li>
&lt;li>&lt;strong>자동 프로세스 관리&lt;/strong>: 서버 부하에 따라 워커 프로세스를 자동으로 관리한다.&lt;/li>
&lt;li>&lt;strong>유연한 설정&lt;/strong>: 다양한 설정 옵션을 통해 성능을 최적화할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>Gunicorn의 작동 방식&lt;/h3>&lt;p>Gunicorn은 pre-fork 모델을 기반으로 작동한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>마스터 프로세스&lt;/strong>: 워커 프로세스들을 관리하고 모니터링한다.&lt;/li>
&lt;li>&lt;strong>워커 프로세스&lt;/strong>: 실제로 클라이언트의 요청을 처리한다.&lt;br>
마스터 프로세스는 설정에 따라 여러 개의 워커 프로세스를 생성하고, 각 워커는 독립적으로 요청을 처리한다.&lt;/li>
&lt;/ol>
&lt;h3>Gunicorn 사용의 이점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>성능&lt;/strong>: 멀티 프로세싱을 통해 Django의 runserver보다 높은 성능을 제공한다.&lt;/li>
&lt;li>&lt;strong>안정성&lt;/strong>: 프로덕션 환경에서의 사용에 적합하며, 보안과 안정성이 검증되었다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 워커 수 조절을 통해 서버 리소스에 맞게 확장 가능하다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: 다양한 설정 옵션을 통해 애플리케이션의 요구사항에 맞게 조정 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>Gunicorn 설정 및 사용&lt;/h3>&lt;p>Gunicorn을 설치하고 사용하는 기본적인 단계는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>설치: &lt;code>pip install gunicorn&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>실행: &lt;code>gunicorn [옵션] [WSGI_APP]&lt;/code>&lt;br>
예: &lt;code>gunicorn --workers=2 myproject.wsgi:application&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>설정 파일 사용: &lt;code>gunicorn -c config.py myproject.wsgi:application&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>Nginx와의 연동&lt;/h3>&lt;p>프로덕션 환경에서는 Gunicorn을 Nginx와 함께 사용하는 것이 일반적이다.&lt;br>
Nginx는 정적 파일 서빙, 로드 밸런싱, SSL 처리 등을 담당하고, Gunicorn은 동적 콘텐츠 처리를 담당한다.&lt;/p>
&lt;h3>Gunicorn 환경 설정&lt;/h3>&lt;p>서버의 용도와 환경에 따라 적절히 조정되어야 한다.&lt;br>
특히 실제 운영 환경에서는 다음과 같은 점들을 고려하여 설정을 조정해야 한다:&lt;/p>
&lt;ol>
&lt;li>서버의 하드웨어 리소스 (CPU, 메모리)&lt;/li>
&lt;li>예상되는 트래픽 패턴과 부하&lt;/li>
&lt;li>애플리케이션의 특성 (I/O 중심인지, CPU 중심인지)&lt;/li>
&lt;li>보안 요구사항&lt;/li>
&lt;li>모니터링과 로깅 요구사항&lt;br>
각 설정은 서버의 성능과 안정성에 직접적인 영향을 미치므로, 철저한 테스트를 통해 최적의 값을 찾아야 한다.&lt;br>
또한, 정기적인 모니터링과 성능 측정을 통해 설정을 지속적으로 개선해 나가는 것이 중요하다.&lt;/li>
&lt;/ol>
&lt;h4>다양한 설정 옵션&lt;/h4>&lt;h5>서버 기본 설정&lt;/h5>&lt;p>서버의 기본적인 동작을 제어하는 설정.&lt;br>
이러한 설정은 Gunicorn이 어떻게 요청을 받고 처리할지를 결정한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 서버가 어디서 요청을 받을지 정의합니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bind&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;0.0.0.0:8000&amp;#39;&lt;/span> &lt;span class="c1"># IP:포트 형식으로 바인딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 또는 Unix 소켓을 사용할 수 있습니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># bind = &amp;#39;unix:/tmp/gunicorn.sock&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데몬 모드 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">daemon&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="c1"># 백그라운드 실행 여부&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파이썬 경로 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pythonpath&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/path/to/project&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 작업 디렉토리 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">chdir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/path/to/workdir&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>워커 프로세스 설정&lt;/h5>&lt;p>워커 프로세스는 실제로 요청을 처리하는 프로세스.&lt;br>
이 설정들은 서버의 성능과 리소스 사용에 직접적인 영향을 미친다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 워커 프로세스 관련 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="c1"># CPU 코어 수 * 2 + 1이 권장됨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;sync&amp;#39;&lt;/span> &lt;span class="c1"># 워커 클래스 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 가능한 옵션: sync, eventlet, gevent, tornado, gthread&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 워커당 스레드 수 (gthread 워커 사용시)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">threads&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 워커 프로세스 타임아웃 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="c1"># 요청 처리 제한 시간(초)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">graceful_timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="c1"># 그레이스풀 종료 대기 시간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">max_requests&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="c1"># 워커 재시작 전 처리할 최대 요청 수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">max_requests_jitter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">50&lt;/span> &lt;span class="c1"># 재시작 타이밍의 무작위성 추가&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Worker Class&lt;/h6>&lt;p>worker_class는 Gunicorn이 요청을 처리하는 방식을 결정하는 매우 중요한 설정이다.&lt;br>
각 worker_class는 서로 다른 특징과 장단점을 가지고 있어, 애플리케이션의 성격에 따라 적절한 선택이 필요하다.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Sync Worker (기본 워커)&lt;br>
sync 워커는 Gunicorn의 기본 워커 클래스이다.&lt;br>
Python의 기본적인 동기 처리 방식을 사용한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;sync&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span> &lt;span class="c1"># CPU 코어 수 * 2 + 1 권장&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>sync 워커는 각 요청을 순차적으로 처리한다.&lt;br>
한 워커가 하나의 요청을 처리하는 동안 다른 요청은 대기해야 한다.&lt;br>
는 간단하고 안정적이지만, I/O 작업이 많은 경우 성능이 제한될 수 있다.&lt;br>
CPU 중심적인 작업이나 간단한 애플리케이션에 적합하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Gevent Worker&lt;br>
gevent 워커는 비동기 I/O를 지원하는 강력한 워커이다.&lt;br>
Python의 greenlet을 사용하여 동시성을 구현한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;gevent&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_connections&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="c1"># 워커당 최대 동시 연결 수&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>gevent는 I/O 작업이 많은 애플리케이션에서 뛰어난 성능을 발휘한다.&lt;br>
특히 다음과 같은 상황에서 유용하다:&lt;/p>
&lt;ul>
&lt;li>많은 동시 연결이 필요한 경우&lt;/li>
&lt;li>외부 API 호출이 많은 경우&lt;/li>
&lt;li>WebSocket 연결을 처리해야 하는 경우&lt;br>
gevent는 코드를 수정하지 않고도 기존의 동기식 코드를 비동기식으로 실행할 수 있게 해주는 몽키 패칭(monkey patching) 기능을 제공한다:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">gevent&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">monkey&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">monkey&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">patch_all&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Eventlet Worker&lt;br>
eventlet 워커는 gevent와 비슷한 방식으로 동작하지만, 다른 비동기 라이브러리를 사용한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;eventlet&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_connections&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>eventlet은 다음과 같은 특징을 가진다:&lt;/p>
&lt;ul>
&lt;li>가벼운 동시성 처리&lt;/li>
&lt;li>네트워크 프로토콜 지원이 풍부&lt;/li>
&lt;li>DNS 조회 최적화&lt;/li>
&lt;li>안정적인 비동기 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Tornado Worker&lt;br>
tornado 워커는 Python의 Tornado 웹 프레임워크의 비동기 기능을 활용한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;tornado&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>tornado 워커는 다음과 같은 경우에 적합하다:&lt;/p>
&lt;ul>
&lt;li>장시간 연결이 필요한 애플리케이션&lt;/li>
&lt;li>비동기 특성이 중요한 실시간 애플리케이션&lt;/li>
&lt;li>Tornado 프레임워크를 사용하는 애플리케이션&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Gthread Worker&lt;br>
gthread 워커는 Python의 스레딩을 사용하여 동시성을 구현한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;gthread&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">threads&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1"># 워커당 스레드 수&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>gthread는 다음과 같은 상황에서 유용하다:&lt;/p>
&lt;ul>
&lt;li>I/O 바운드 작업이 많지만 gevent나 eventlet을 사용할 수 없는 경우&lt;/li>
&lt;li>스레드 기반의 처리가 필요한 경우&lt;/li>
&lt;li>GIL(Global Interpreter Lock)의 영향을 받지 않는 작업이 많은 경우&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>UVicorn Worker&lt;br>
최신 버전의 Gunicorn은 UVicorn 워커도 지원한다.&lt;br>
ASGI 애플리케이션을 위한 고성능 워커.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># config.py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;uvicorn.workers.UvicornWorker&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>UVicorn 워커는 다음과 같은 특징을 가진다:&lt;/p>
&lt;ul>
&lt;li>ASGI 프로토콜 지원&lt;/li>
&lt;li>WebSocket 지원&lt;/li>
&lt;li>HTTP/2 지원&lt;/li>
&lt;li>uvloop를 사용한 높은 성능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h5>로깅 설정&lt;/h5>&lt;p>로깅은 서버 모니터링과 문제 해결에 필수적.&lt;br>
적절한 로깅 설정은 운영 환경에서 문제를 신속하게 발견하고 해결하는 데 도움을 준다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 로깅 관련 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">accesslog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/var/log/gunicorn/access.log&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">errorlog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/var/log/gunicorn/error.log&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">loglevel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;info&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 가능한 로그 레벨: debug, info, warning, error, critical&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 로그 포맷 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">access_log_format&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">%(h)s&lt;/span>&lt;span class="s1"> &lt;/span>&lt;span class="si">%(l)s&lt;/span>&lt;span class="s1"> &lt;/span>&lt;span class="si">%(u)s&lt;/span>&lt;span class="s1"> &lt;/span>&lt;span class="si">%(t)s&lt;/span>&lt;span class="s1"> &amp;#34;&lt;/span>&lt;span class="si">%(r)s&lt;/span>&lt;span class="s1">&amp;#34; &lt;/span>&lt;span class="si">%(s)s&lt;/span>&lt;span class="s1"> &lt;/span>&lt;span class="si">%(b)s&lt;/span>&lt;span class="s1"> &amp;#34;&lt;/span>&lt;span class="si">%(f)s&lt;/span>&lt;span class="s1">&amp;#34; &amp;#34;&lt;/span>&lt;span class="si">%(a)s&lt;/span>&lt;span class="s1">&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 로그 핸들러 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">logconfig&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;logging.conf&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>프로세스 보안 설정&lt;/h5>&lt;p>보안 관련 설정은 서버의 안전한 운영을 위해 중요하다.&lt;br>
특히 프로덕션 환경에서는 이러한 설정들을 신중하게 고려해야 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 프로세스 실행 권한 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;www-data&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">group&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;www-data&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 프로세스 권한 제한&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">umask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mo">0o777&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">mode&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;production&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SSL 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">keyfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/path/to/keyfile&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">certfile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/path/to/certfile&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ssl_version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;TLSv1_2&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>성능 튜닝 설정&lt;/h5>&lt;p>서버의 성능을 최적화하기 위한 설정.&lt;br>
이러한 설정은 서버의 부하와 리소스 사용량에 따라 조정되어야 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 연결 관련 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">backlog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2048&lt;/span> &lt;span class="c1"># 대기열 크기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">keepalive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="c1"># Keep-Alive 연결 지속 시간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">max_requests&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="c1"># 워커 재시작 전 최대 요청 수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">max_requests_jitter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">50&lt;/span> &lt;span class="c1"># 재시작 타이밍 분산&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 버퍼 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">limit_request_line&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4094&lt;/span> &lt;span class="c1"># HTTP 요청 라인 최대 크기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">limit_request_fields&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="c1"># HTTP 요청 헤더 필드 최대 개수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">limit_request_field_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">8190&lt;/span> &lt;span class="c1"># 헤더 필드 최대 크기&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>후킹 및 이벤트 핸들러 설정&lt;/h5>&lt;p>서버의 다양한 생명주기 이벤트에 대응하기 위한 설정.&lt;br>
이를 통해 서버의 시작, 종료, 요청 처리 등의 과정에 커스텀 로직을 추가할 수 있다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">on_starting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;서버 시작 시 실행되는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">on_reload&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;서버 리로드 시 실행되는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">when_ready&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;서버가 요청을 받을 준비가 되었을 때 실행되는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">pre_fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worker&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;워커 프로세스 fork 전에 실행되는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">post_fork&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">worker&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;워커 프로세스 fork 후에 실행되는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">pre_exec&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;새로운 마스터 프로세스 실행 전에 실행되는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pass&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>환경 및 디버깅 설정&lt;/h5>&lt;p>개발 및 디버깅을 위한 설정.&lt;br>
이러한 설정은 개발 환경과 프로덕션 환경에서 다르게 적용되어야 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 환경 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">raw_env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;DJANGO_SETTINGS_MODULE=myproject.settings&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;DATABASE_URL=postgresql://user:pass@localhost/dbname&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 디버깅 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">reload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="c1"># 코드 변경 시 자동 리로드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">reload_engine&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;auto&amp;#39;&lt;/span> &lt;span class="c1"># 리로드 감지 엔진&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">spew&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="c1"># 심각한 디버깅을 위한 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">check_config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="c1"># 설정 체크 후 종료&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>시스템 서비스 등록&lt;/h4>&lt;h5>Systemd 서비스 파일을 작성&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Gunicorn daemon for Django application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데이터베이스나 다른 서비스에 의존성이 있다면 여기에 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Requires=postgresql.service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># After=postgresql.service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 서비스를 실행할 사용자와 그룹 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">www-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Group&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">www-data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 작업 디렉토리 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/your/django/project&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 가상환경 활성화 및 Gunicorn 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;PATH=/path/to/your/virtualenv/bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/your/virtualenv/bin/gunicorn \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> --workers 3 \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> --bind unix:/run/gunicorn.sock \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> --access-logfile /var/log/gunicorn/access.log \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> --error-logfile /var/log/gunicorn/error.log \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> your_project.wsgi:application&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 프로세스 재시작 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">RestartSec&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 보안 관련 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">PrivateTmp&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">NoNewPrivileges&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">multi-user.target&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>서비스 파일을 시스템에 등록하고 활성화하는 방법&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 서비스 파일 복사&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp gunicorn.service /etc/systemd/system/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># systemd 데몬 리로드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 서비스 시작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start gunicorn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 부팅 시 자동 시작 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> gunicorn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 서비스 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl status gunicorn&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;p>&lt;a href="https://gunicorn.org/" target="_blank" rel="noopener">Gunicorn - Python WSGI HTTP Server for UNIX&lt;/a>&lt;/p></description></item></channel></rss>