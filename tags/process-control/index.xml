<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Process-Control on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/process-control/</link>
    <description>Recent content in Process-Control on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Mon, 14 Jul 2025 04:17:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/process-control/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Styles</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-architecture/data-processing-architecture/data-flow-styles/</link>
      <pubDate>Mon, 14 Jul 2025 04:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-architecture/data-processing-architecture/data-flow-styles/</guid>
      <description>데이터 플로우 아키텍처의 세 가지 주요 스타일로, Batch Sequential 은 순차적 배치 처리, Pipe and Filter 는 스트림 기반 동시 처리, Process Control 은 피드백 루프 기반 제어 처리를 특징으로 하며, 각각 다른 데이터 처리 요구사항과 성능 특성을 가진다.</description>
    </item>
    <item>
      <title>Process Control</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-architecture/data-processing-architecture/data-flow-styles/process-control/</link>
      <pubDate>Sat, 12 Jul 2025 10:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-architecture/data-processing-architecture/data-flow-styles/process-control/</guid>
      <description>프로세스 제어는 배치 처리 및 데이터 플로우 아키텍처에서 각 처리 단계의 실행, 상태 관리, 오류 감지 및 복구, 흐름 제어 등을 담당하는 핵심 기능으로, 대규모 데이터 처리 시스템의 신뢰성과 효율성을 보장한다.</description>
    </item>
  </channel>
</rss>
