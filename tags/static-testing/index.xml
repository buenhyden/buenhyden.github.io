<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Static-Testing</title><link>https://buenhyden.github.io/tags/static-testing/</link><description>Recent content in Static-Testing on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 14 Dec 2024 15:03:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/static-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Peer Review</title><link>https://buenhyden.github.io/posts/qa/qc/deliverable-verification/peer-review/</link><pubDate>Sat, 14 Dec 2024 15:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/deliverable-verification/peer-review/</guid><description>
&lt;h2>Peer Review&lt;/h2>&lt;p>Peer Review는 소프트웨어 개발 과정에서 중요한 품질 보증 활동으로, 동료 개발자들이 서로의 코드나 문서를 검토하여 오류를 찾고 개선점을 제시하는 과정이다.&lt;/p>
&lt;p>코드 리뷰가 중요한 이유는 여러 가지가 있다.&lt;/p>
&lt;ol>
&lt;li>버그나 보안 취약점을 조기에 발견할 수 있다.&lt;/li>
&lt;li>코드의 일관성과 유지보수성을 높일 수 있다.&lt;/li>
&lt;li>팀 전체의 기술력 향상에 도움이 된다. 한 명의 실수나 실수를 하기 쉬운 부분을 여러 사람이 검토함으로써, 더 높은 품질의 코드를 만들 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>Peer Review의 목적&lt;/h3>&lt;ol>
&lt;li>오류 가능성 발견 및 해결&lt;/li>
&lt;li>소프트웨어 품질 향상&lt;/li>
&lt;li>개발자 스킬 향상&lt;/li>
&lt;li>팀 내 지식 및 경험 공유&lt;/li>
&lt;/ol>
&lt;h3>Peer Review의 장점&lt;/h3>&lt;ol>
&lt;li>개발 초기 단계에서 실수 발견 및 수정 가능&lt;/li>
&lt;li>전체적인 코드 품질 향상&lt;/li>
&lt;li>팀 내 상호 신뢰 및 동기 부여 증진&lt;/li>
&lt;li>가독성 높은 코드 작성 촉진&lt;/li>
&lt;li>개선된 설계 발견 기회&lt;/li>
&lt;/ol>
&lt;h3>Peer Review 프로세스&lt;/h3>&lt;p>Peer Review는 일반적으로 다음과 같은 단계로 진행된다:&lt;/p>
&lt;ol>
&lt;li>계획 (Planning)&lt;/li>
&lt;li>사전 설명회 (Overview)&lt;/li>
&lt;li>개별 검토 (Preparation)&lt;/li>
&lt;li>Review 미팅 (Meeting)&lt;/li>
&lt;li>재작업 (Rework)&lt;/li>
&lt;li>후속 처리 (Follow-up)&lt;/li>
&lt;/ol>
&lt;h3>Peer Review 참여자 역할&lt;/h3>&lt;ol>
&lt;li>관리자: 전체 프로세스 관리&lt;/li>
&lt;li>중재자: 리뷰 미팅 진행&lt;/li>
&lt;li>작성자: 검토 대상 코드/문서 작성자&lt;/li>
&lt;li>검토자: 실제 리뷰 수행&lt;/li>
&lt;li>기록자: 리뷰 결과 기록&lt;/li>
&lt;li>발표자: 리뷰 대상 설명&lt;/li>
&lt;/ol>
&lt;h3>Peer Review 성공을 위한 요소&lt;/h3>&lt;ol>
&lt;li>회사 차원의 정책적 지원&lt;/li>
&lt;li>개발 일정에 Peer Review 시간 포함&lt;/li>
&lt;li>동료 간 수평적 관계 유지&lt;/li>
&lt;li>자주 짧게 진행하는 리뷰 문화 형성&lt;/li>
&lt;li>리뷰어의 시간을 존중하는 태도&lt;/li>
&lt;li>건설적인 피드백 제공 및 수용&lt;/li>
&lt;/ol>
&lt;h3>Peer Review 시 주의사항&lt;/h3>&lt;ol>
&lt;li>리뷰 대상은 200 LOC 미만으로 유지, 최대 400 LOC를 넘지 않도록 함&lt;/li>
&lt;li>리뷰 시간은 60분 미만으로 유지&lt;/li>
&lt;li>개인 비난이나 공격적인 질문 피하기&lt;/li>
&lt;li>칭찬과 긍정적 피드백 포함하기&lt;/li>
&lt;li>코드 품질 향상에 집중하기&lt;/li>
&lt;/ol>
&lt;h3>Peer Review의 한계&lt;/h3>&lt;ol>
&lt;li>시간과 리소스 소요&lt;/li>
&lt;li>리뷰를 거쳐도 일부 결함을 놓칠 수 있음&lt;/li>
&lt;li>팀 문화와 개인의 태도에 따라 효과성이 달라질 수 있음&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>