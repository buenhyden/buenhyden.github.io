<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Architectural-Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/architectural-patterns/</link>
    <description>Recent content in Architectural-Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.8</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2024 10:06:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/architectural-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CQRS</title>
      <link>https://buenhyden.github.io/posts/architecture-and-system-design/architectue-patterns/data-management/cqrs/</link>
      <pubDate>Sat, 16 Nov 2024 10:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/architecture-and-system-design/architectue-patterns/data-management/cqrs/</guid>
      <description>CQRS는 시스템의 명령(Command)과 조회(Query) 작업을 분리하여 각각의 책임을 명확히 하는 패턴이다.</description>
    </item>
    <item>
      <title>Event Sourcing</title>
      <link>https://buenhyden.github.io/posts/architecture-and-system-design/architectue-patterns/data-management/event-sourcing/</link>
      <pubDate>Fri, 15 Nov 2024 01:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/architecture-and-system-design/architectue-patterns/data-management/event-sourcing/</guid>
      <description>이 패턴은 시스템의 상태 변화를 일련의 이벤트로 저장하고 관리하는 방식을 말한다.</description>
    </item>
    <item>
      <title>Message Queues and Streams</title>
      <link>https://buenhyden.github.io/posts/software-engineering/application-development/api-design-and-implementation/api-integration-patterns/message-queues-and-streams/</link>
      <pubDate>Fri, 27 Sep 2024 09:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/application-development/api-design-and-implementation/api-integration-patterns/message-queues-and-streams/</guid>
      <description>메시지 큐는 작업의 안정적인 처리와 시스템 간 결합도 감소에 적합하며, 스트림은 실시간 데이터 처리와 분석에 더 적합하다.</description>
    </item>
  </channel>
</rss>
