<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Connection-Pooling on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/connection-pooling/</link>
    <description>Recent content in Connection-Pooling on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Oct 2024 06:35:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/connection-pooling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Connection Pooling</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/performance-and-scalability/performance-optimization/data-access-optimization/connection-pooling/</link>
      <pubDate>Fri, 25 Oct 2024 06:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/performance-and-scalability/performance-optimization/data-access-optimization/connection-pooling/</guid>
      <description>Connection Pooling은 데이터베이스 연결을 재사용 가능한 형태로 캐시하는 메커니즘이다.  이는 애플리케이션이 데이터베이스에 연결할 때마다 새로운 연결을 생성하는 대신, 미리 생성된 연결을 사용할 수 있게 해준다.</description>
    </item>
  </channel>
</rss>
