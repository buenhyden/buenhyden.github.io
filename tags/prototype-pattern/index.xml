<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Prototype-Pattern on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/prototype-pattern/</link>
    <description>Recent content in Prototype-Pattern on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Sep 2024 06:09:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/prototype-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prototype Pattern</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/fundamentals/programming-principles/design-patterns/gof/creational/prototype-pattern/</link>
      <pubDate>Wed, 25 Sep 2024 06:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/fundamentals/programming-principles/design-patterns/gof/creational/prototype-pattern/</guid>
      <description>Prototype 패턴은 객체 생성 비용이 높거나 런타임에 객체 유형이 동적으로 결정될 때 기존 인스턴스를 복제 (clone) 해 새 객체를 만드는 Creational 패턴이다. 클라이언트는 구체 클래스에 의존하지 않고 인터페이스 기반 clone 메서드를 통해 객체를 생성해 유연성과 성능을 개선한다.</description>
    </item>
  </channel>
</rss>
