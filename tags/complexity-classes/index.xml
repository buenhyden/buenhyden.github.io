<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Complexity-Classes on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/complexity-classes/</link>
    <description>Recent content in Complexity-Classes on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 Dec 2024 14:29:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/complexity-classes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>복잡도 클래스(Complexity Classes)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/</link>
      <pubDate>Sun, 13 Oct 2024 09:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/</guid>
      <description>계산 복잡도 이론에서 비슷한 복잡도를 가진 문제들의 집합을 나타낸다.</description>
    </item>
    <item>
      <title>Exponential Time</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/exponential-time/</link>
      <pubDate>Thu, 12 Dec 2024 14:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/exponential-time/</guid>
      <description>&lt;h2 id=&#34;exponential-time&#34;&gt;Exponential Time&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Logarithmic Space</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/logarithmic-space/</link>
      <pubDate>Thu, 12 Dec 2024 14:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/logarithmic-space/</guid>
      <description>&lt;h2 id=&#34;logarithmic-space&#34;&gt;Logarithmic Space&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>NP-Hard</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-hard/</link>
      <pubDate>Thu, 12 Dec 2024 14:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-hard/</guid>
      <description>&lt;h2 id=&#34;np-hard&#34;&gt;NP-Hard&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Polynomial Space</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/polynomial-space/</link>
      <pubDate>Thu, 12 Dec 2024 14:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/polynomial-space/</guid>
      <description>&lt;h2 id=&#34;polynomial-space&#34;&gt;Polynomial Space&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Nondeterministic Polynomial Time</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/nondeterministic-polynomial-time/</link>
      <pubDate>Thu, 12 Dec 2024 14:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/nondeterministic-polynomial-time/</guid>
      <description>&lt;h2 id=&#34;nondeterministic-polynomial-time&#34;&gt;Nondeterministic Polynomial Time&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>NP-Complete</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/</link>
      <pubDate>Thu, 12 Dec 2024 14:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/</guid>
      <description>&lt;h2 id=&#34;np-complete&#34;&gt;NP-Complete&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Polynomial Time</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/polynomial-time/</link>
      <pubDate>Thu, 12 Dec 2024 14:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/polynomial-time/</guid>
      <description>&lt;h2 id=&#34;polynomial-time&#34;&gt;Polynomial Time&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Knapsack Problem</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/knapsack-problem/</link>
      <pubDate>Thu, 12 Dec 2024 05:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/knapsack-problem/</guid>
      <description>&lt;h2 id=&#34;knapsack-problem&#34;&gt;Knapsack Problem&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Longest Path Problem</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/longest-path-problem/</link>
      <pubDate>Thu, 12 Dec 2024 05:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/longest-path-problem/</guid>
      <description>&lt;h2 id=&#34;longest-path-problem&#34;&gt;Longest Path Problem&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Travelling Salesman Problem</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/travelling-salesman-problem/</link>
      <pubDate>Thu, 12 Dec 2024 05:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/np-complete/travelling-salesman-problem/</guid>
      <description>&lt;h2 id=&#34;travelling-salesman-problem&#34;&gt;Travelling Salesman Problem&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>환원 가능성 (Reducibility)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/reducibility/</link>
      <pubDate>Sun, 13 Oct 2024 12:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/reducibility/</guid>
      <description>환원 가능성 (Reducibility)이란 한 문제를 다른 문제로 변환하는 과정을 말한다.</description>
    </item>
    <item>
      <title>튜링 기계 (Turing Machine)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/turing-machine/</link>
      <pubDate>Sun, 13 Oct 2024 10:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/complexity-classes/turing-machine/</guid>
      <description>튜링 기계는 1936년 앨런 튜링이 제안한 추상적인 계산 모델로, 알고리즘의 개념을 수학적으로 정형화한 것으로, 현대 컴퓨터의 이론적 기초가 되었다.</description>
    </item>
  </channel>
</rss>
