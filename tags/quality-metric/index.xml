<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Quality-Metric on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/quality-metric/</link>
    <description>Recent content in Quality-Metric on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Oct 2024 10:01:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/quality-metric/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>코드 크기 메트릭(Lines of Code, LOC)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/lines-of-code/</link>
      <pubDate>Mon, 28 Oct 2024 10:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/lines-of-code/</guid>
      <description>이 메트릭은 프로그램의 크기를 코드 라인 수로 표현하며, 소프트웨어 개발 프로젝트의 규모 추정, 생산성 측정, 품질 관리 등에 활용된다</description>
    </item>
    <item>
      <title>유지보수성 지수 (Maintainability Index)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/maintainability-index/</link>
      <pubDate>Mon, 28 Oct 2024 09:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/maintainability-index/</guid>
      <description>유지보수성 지수는 코드를 얼마나 쉽게 유지보수할 수 있는지를 나타내는 0에서 100 사이의 수치로 높을수록 코드의 유지보수가 더 쉽다는 것을 의미한다.</description>
    </item>
    <item>
      <title>응집도(Cohesion)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/cohesion/</link>
      <pubDate>Mon, 28 Oct 2024 09:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/cohesion/</guid>
      <description>하나의 모듈이 얼마나 단일한 목적에 집중되어 있는지를 나타낸다.</description>
    </item>
    <item>
      <title>코드 중복도 (Code Duplication)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/code-duplication/</link>
      <pubDate>Mon, 28 Oct 2024 09:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/code-duplication/</guid>
      <description>코드 중복도는 소프트웨어 내에서 동일하거나 유사한 코드가 반복되는 정도를 나타낸다</description>
    </item>
    <item>
      <title>결합도 (Coupling)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/coupling/</link>
      <pubDate>Mon, 28 Oct 2024 09:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/coupling/</guid>
      <description>서로 다른 모듈 간의 상호 의존성이나 연관성을 측정하는 지표</description>
    </item>
    <item>
      <title>테스트 커버리지 (Test Coverage)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/test-coverage/</link>
      <pubDate>Mon, 28 Oct 2024 09:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/test-coverage/</guid>
      <description>테스트 커버리지는 테스트 대상 시스템이나 소프트웨어에 대해 얼마나 충분한 테스트가 수행되었는지를 나타내는 척도</description>
    </item>
    <item>
      <title>Halstead Complexity</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/halstead-complexity/</link>
      <pubDate>Mon, 28 Oct 2024 09:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/halstead-complexity/</guid>
      <description>프로그램의 복잡성을 연산자(operators)와 피연산자(operands)의 수를 기반으로 측정한다</description>
    </item>
    <item>
      <title>순환 복잡도 (Cyclomatic Complexity)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/cyclomatic-complexity/</link>
      <pubDate>Mon, 28 Oct 2024 07:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/cyclomatic-complexity/</guid>
      <description>프로그램의 논리적 복잡성을 정량적으로 측정하는 지표</description>
    </item>
    <item>
      <title>품질 메트릭 (Quality Metric)</title>
      <link>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/</link>
      <pubDate>Mon, 28 Oct 2024 05:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/quality-assurance-and-testing/quality-metrics/</guid>
      <description>소프트웨어 개발 프로세스, 제품, 테스트 활동의 품질과 효과성을 평가하고 측정하는 데 사용되는 정량적 지표이다</description>
    </item>
  </channel>
</rss>
