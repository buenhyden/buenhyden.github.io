<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Javascript on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 Dec 2024 04:51:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Javascript</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/</link>
      <pubDate>Thu, 21 Nov 2024 01:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/</guid>
      <description>웹 개발에서 널리 사용되는 프로그래밍 언어</description>
    </item>
    <item>
      <title>VueJS vs ReactJS vs NextJS</title>
      <link>https://buenhyden.github.io/til/2024/12/02/vuejs-vs-reactjs-vs-nextjs/</link>
      <pubDate>Mon, 02 Dec 2024 04:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/02/vuejs-vs-reactjs-vs-nextjs/</guid>
      <description>VueJS, ReactJS, NextJS는 현대 웹 개발에서 사용되는 주요 프론트엔드 프레임워크와 라이브러리들이다.</description>
    </item>
    <item>
      <title>Callback vs Promise vs Async/Await</title>
      <link>https://buenhyden.github.io/til/2024/11/23/callback-vs-promise-vs-async-await/</link>
      <pubDate>Sat, 23 Nov 2024 09:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/23/callback-vs-promise-vs-async-await/</guid>
      <description>JavaScript의 비동기 처리 방식</description>
    </item>
    <item>
      <title>ExpressJS vs NestJS</title>
      <link>https://buenhyden.github.io/til/2024/11/23/expressjs-vs-nestjs/</link>
      <pubDate>Sat, 23 Nov 2024 04:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/23/expressjs-vs-nestjs/</guid>
      <description>Express.js와 Nest.js는</description>
    </item>
    <item>
      <title>Programming Languages and Frameworks</title>
      <link>https://buenhyden.github.io/til/2024/11/20/programming-languages-and-frameworks/</link>
      <pubDate>Wed, 20 Nov 2024 08:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/20/programming-languages-and-frameworks/</guid>
      <description>Python, Node.js, Spring을 비교하고 특징 및 장단점을 서술한다.</description>
    </item>
    <item>
      <title>Javascript vs Node.js</title>
      <link>https://buenhyden.github.io/til/2024/11/23/javascript-vs-node.js/</link>
      <pubDate>Sat, 23 Nov 2024 09:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/23/javascript-vs-node.js/</guid>
      <description>&lt;h2 id=&#34;javascript-vs-nodejs&#34;&gt;Javascript Vs Node.js&lt;/h2&gt;
&lt;p&gt;JavaScript는 웹 페이지에 동적인 기능을 추가하기 위해 만들어진 프로그래밍 언어이다.&lt;br&gt;
주요 특징은 다음과 같다:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;객체 기반의 스크립트 언어이다.&lt;/li&gt;
&lt;li&gt;동적이며 타입을 명시할 필요가 없는 인터프리터 언어이다.&lt;/li&gt;
&lt;li&gt;이벤트 중심의 프로그래밍이 가능하다.&lt;/li&gt;
&lt;li&gt;웹 브라우저에서 실행되며, HTML 문서와 함께 사용된다.&lt;/li&gt;
&lt;li&gt;프로토타입 기반의 객체지향 프로그래밍을 지원한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-1&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-1&#34;&gt; 1&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-2&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-2&#34;&gt; 2&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-3&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-3&#34;&gt; 3&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-4&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-4&#34;&gt; 4&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-5&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-5&#34;&gt; 5&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-6&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-6&#34;&gt; 6&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-7&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-7&#34;&gt; 7&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-8&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-8&#34;&gt; 8&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-9&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-9&#34;&gt; 9&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-10&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-10&#34;&gt;10&lt;/a&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// JavaScript 예시
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// DOM 조작
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;myButton&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;버튼이 클릭되었습니다!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 비동기 처리
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://api.example.com/data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;****&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Node.js는 JavaScript를 서버 측에서 실행할 수 있게 해주는 런타임 환경이다.&lt;br&gt;
주요 특징은 다음과 같다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>import vs require</title>
      <link>https://buenhyden.github.io/til/2024/11/23/import-vs-require/</link>
      <pubDate>Sat, 23 Nov 2024 03:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/23/import-vs-require/</guid>
      <description>&lt;h2 id=&#34;import-vs-require&#34;&gt;Import Vs Require&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;require&lt;/code&gt;는 Node.js에서 사용되는 CommonJS 모듈 시스템의 키워드로, 동기적으로 모듈을 로드하며 프로그램의 어느 지점에서나 호출할 수 있다. 반면에 &lt;code&gt;import&lt;/code&gt;는 ES6에서 도입된 모듈 시스템의 키워드로, 코드 실행 전에 모듈을 미리 로드하며 파일의 시작 부분에서만 사용할 수 있다. 따라서 프로젝트의 환경과 요구 사항에 따라 적절한 키워드를 선택하여 사용하는 것이 중요하다.&lt;/p&gt;
&lt;h3 id=&#34;import-es-modules&#34;&gt;Import (ES Modules)&lt;/h3&gt;
&lt;p&gt;ES6(ES2015)에서 도입된 모듈 시스템으로, JavaScript의 공식 표준 모듈 시스템. 정적 임포트 방식을 사용하며, 브라우저에서 기본적으로 지원된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-1&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-1&#34;&gt; 1&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-2&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-2&#34;&gt; 2&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-3&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-3&#34;&gt; 3&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-4&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-4&#34;&gt; 4&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-5&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-5&#34;&gt; 5&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-6&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-6&#34;&gt; 6&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-7&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-7&#34;&gt; 7&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-8&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-8&#34;&gt; 8&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-9&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-9&#34;&gt; 9&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-10&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-10&#34;&gt;10&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-11&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-11&#34;&gt;11&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-12&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-12&#34;&gt;12&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-13&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-13&#34;&gt;13&lt;/a&gt;
&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;hl-0-14&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#hl-0-14&#34;&gt;14&lt;/a&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 기본 가져오기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./module&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 부분 가져오기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;function1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;function2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./module&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 모든 것을 객체로 가져오기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;moduleObject&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./module&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 이름 변경하여 가져오기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;originalName&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;newName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./module&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 가져오기와 실행만 하기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./module&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;require-commonjs&#34;&gt;Require (CommonJS)&lt;/h3&gt;
&lt;p&gt;Node.js에서 기본적으로 사용되는 모듈 시스템으로, 동적 임포트를 지원한다. 런타임에 모듈을 로드할 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NodeJS</title>
      <link>https://buenhyden.github.io/til/2024/11/23/nodejs/</link>
      <pubDate>Sat, 23 Nov 2024 04:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/23/nodejs/</guid>
      <description>Chrome V8 JavaScript 엔진으로 빌드된 JavaScript 런타임 환경</description>
    </item>
    <item>
      <title>Cypress</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/cypress/</link>
      <pubDate>Fri, 22 Nov 2024 23:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/cypress/</guid>
      <description>Cypress는 JavaScript 기반의 강력한 프론트엔드 테스팅 프레임워크.</description>
    </item>
    <item>
      <title>Jest</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jest/</link>
      <pubDate>Fri, 22 Nov 2024 23:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jest/</guid>
      <description>JavaScript 테스팅 프레임워크로, JavaScript 코드의 단위 테스트(Unit Test)를 위해 설계되었다.</description>
    </item>
    <item>
      <title>MochaJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/mochajs/</link>
      <pubDate>Fri, 22 Nov 2024 23:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/mochajs/</guid>
      <description>Mocha.js는 Node.js와 브라우저 환경 모두에서 동작하는 유연하고 강력한 JavaScript 코드의 단위 테스트, 통합 테스트 등을 위한 JavaScript 테스팅 프레임워크.</description>
    </item>
    <item>
      <title>Playwright</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/playwright/</link>
      <pubDate>Fri, 22 Nov 2024 23:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/playwright/</guid>
      <description>Playwright는 Microsoft에서 개발한 현대적이고 강력한 웹 자동화 및 테스팅 라이브러리</description>
    </item>
    <item>
      <title>Puppeteer</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/puppeteer/</link>
      <pubDate>Fri, 22 Nov 2024 23:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/puppeteer/</guid>
      <description>Google에서 개발한 Node.js 라이브러리로, 프로그래밍을 통해 Chrome 또는 Chromium 브라우저를 제어할 수 있게 해주는 고급 웹 자동화 도구</description>
    </item>
    <item>
      <title>Fastify</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/fastify/</link>
      <pubDate>Fri, 22 Nov 2024 13:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/fastify/</guid>
      <description>Fastify는 Node.js를 위한 빠르고 낮은 오버헤드의 웹 프레임워크</description>
    </item>
    <item>
      <title>Koa</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/koa/</link>
      <pubDate>Fri, 22 Nov 2024 13:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/koa/</guid>
      <description>Node.js를 위한 경량 웹 프레임워크로, Express.js 팀에 의해 개발되었다. Koa는 더 작고, 더 표현력이 풍부하며, 더 강력한 웹 애플리케이션과 API의 기초를 제공하기 위해 설계되었다.</description>
    </item>
    <item>
      <title>NextJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nextjs/</link>
      <pubDate>Fri, 22 Nov 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nextjs/</guid>
      <description>NextJS는 React 기반의 풀스택 웹 프레임워크로, React의 장점을 모두 활용하면서도, 서버 사이드 렌더링(SSR)과 정적 사이트 생성(SSG)과 같은 고급 기능들을 손쉽게 구현할 수 있게 해준다.</description>
    </item>
    <item>
      <title>Javascript Web Framework</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/</link>
      <pubDate>Fri, 22 Nov 2024 09:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/</guid>
      <description>Javascript Web Framework의 프론트엔드 영역과 백엔드 영역의 대표적인 프레임워크와 라이브러리에 대해 비교분석해본다.</description>
    </item>
    <item>
      <title>Javascript Testing</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/</link>
      <pubDate>Fri, 22 Nov 2024 06:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/</guid>
      <description>Javascript에서 활용할 수 있는 다양한 테스팅 도구</description>
    </item>
    <item>
      <title>jasmine</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jasmine/</link>
      <pubDate>Fri, 22 Nov 2024 06:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jasmine/</guid>
      <description>Jasmine은 JavaScript 애플리케이션을 위한 행위 주도 개발(BDD) 스타일의 테스팅 프레임워크</description>
    </item>
    <item>
      <title>Karma</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/karma/</link>
      <pubDate>Fri, 22 Nov 2024 06:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/karma/</guid>
      <description>Karma는 모든 브라우저에서 JavaScript 코드를 테스트할 수 있게 해주는 테스트 러너이다.</description>
    </item>
    <item>
      <title>VueJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/vuejs/</link>
      <pubDate>Fri, 22 Nov 2024 04:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/vuejs/</guid>
      <description>Vue.js는 사용자 인터페이스를 구축하기 위한 진보적이고 가벼운 JavaScript 프레임워크이다.</description>
    </item>
    <item>
      <title>ExpressJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/expressjs/</link>
      <pubDate>Fri, 22 Nov 2024 03:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/expressjs/</guid>
      <description>Express.js는 Node.js를 위한 빠르고 개방적인 웹 프레임워크</description>
    </item>
    <item>
      <title>NestJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nestjs/</link>
      <pubDate>Fri, 22 Nov 2024 01:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nestjs/</guid>
      <description>Nest.js는 효율적이고 확장 가능한 Node.js 서버 측 애플리케이션을 구축하기 위한 프레임워크</description>
    </item>
    <item>
      <title>winston</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/package/winston/</link>
      <pubDate>Thu, 21 Nov 2024 15:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/winston/</guid>
      <description>Winston은 Node.js 애플리케이션을 위한 다목적 로깅 라이브러리</description>
    </item>
    <item>
      <title>pino</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/package/pino/</link>
      <pubDate>Thu, 21 Nov 2024 15:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/pino/</guid>
      <description>Node.js를 위한 매우 빠르고 가벼운 로깅 라이브러리</description>
    </item>
    <item>
      <title>Mongoose</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/package/mongoose/</link>
      <pubDate>Thu, 21 Nov 2024 15:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/mongoose/</guid>
      <description>MongoDB와 Node.js 애플리케이션을 연결해주는 강력한 Object Document Mapper(ODM) 라이브러리</description>
    </item>
    <item>
      <title>Sequelize</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/package/sequelize/</link>
      <pubDate>Thu, 21 Nov 2024 15:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/sequelize/</guid>
      <description>Node.js 환경에서 사용되는 강력한 ORM(Object-Relational Mapping) 라이브러리</description>
    </item>
    <item>
      <title>Biome</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/biome/</link>
      <pubDate>Thu, 21 Nov 2024 15:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/biome/</guid>
      <description>JavaScript, TypeScript, JSX, TSX, JSON, CSS, GraphQL 등 다양한 웹 개발 언어를 위한 빠른 포매터이자 린터</description>
    </item>
    <item>
      <title>eslint</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/eslint/</link>
      <pubDate>Thu, 21 Nov 2024 15:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/eslint/</guid>
      <description>JavaScript 코드 분석 도구로, 코드의 품질을 향상시키고 잠재적인 문제를 미리 발견하는 것이 주요 목적</description>
    </item>
    <item>
      <title>prettier</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/prettier/</link>
      <pubDate>Thu, 21 Nov 2024 15:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/prettier/</guid>
      <description>JavaScript를 포함한 여러 웹 개발 언어를 위한 강력한 코드 포매터</description>
    </item>
    <item>
      <title>프로미스(Promise)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/promise/</link>
      <pubDate>Thu, 21 Nov 2024 14:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/promise/</guid>
      <description>자바스크립트에서 비동기 처리를 위해 사용되는 객체</description>
    </item>
    <item>
      <title>Javascript Linter와 Formatter</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/</link>
      <pubDate>Thu, 21 Nov 2024 13:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/</guid>
      <description>Javascript에서 활용할 수 있는 소스 코드에서 문법 오류나 스타일 문제, 잠재적인 버그를 자동으로 검사해주는 도구</description>
    </item>
    <item>
      <title>Event Loop</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/event-loop/</link>
      <pubDate>Thu, 21 Nov 2024 12:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/event-loop/</guid>
      <description>이벤트 루프(Event Loop)는 자바스크립트의 비동기 작업을 관리하고 실행하는 핵심 메커니즘으로, 싱글 스레드 언어인 자바스크립트가 비동기적으로 동작할 수 있게 해주는 중요한 요소이다.</description>
    </item>
    <item>
      <title>pm2</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/package/pm2/</link>
      <pubDate>Thu, 21 Nov 2024 12:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/pm2/</guid>
      <description>PM2는 Node.js 애플리케이션을 위한 고급 프로덕션 프로세스 관리자.</description>
    </item>
    <item>
      <title>jsdoc</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/jsdoc/</link>
      <pubDate>Thu, 21 Nov 2024 11:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/jsdoc/</guid>
      <description>JSDoc은 JavaScript 소스 코드에 대한 API 문서를 생성하기 위한 마크업 언어.</description>
    </item>
    <item>
      <title>Keywords</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/keywords/</link>
      <pubDate>Thu, 21 Nov 2024 03:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/keywords/</guid>
      <description>&lt;h2 id=&#34;keywords&#34;&gt;Keywords&lt;/h2&gt;
&lt;p&gt;키워드들은 JavaScript 프로그래밍의 기본 구성 요소이며, ECMAScript 표준의 일부이다.&lt;br&gt;
각 키워드는 특정한 프로그래밍 목적을 위해 설계되었으며, 이들을 올바르게 이해하고 사용하는 것이 효과적인 JavaScript 프로그래밍의 기초가 된다.&lt;/p&gt;
&lt;h3 id=&#34;선언-관련-키워드&#34;&gt;선언 관련 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;var&lt;/td&gt;
          &lt;td&gt;변수 선언 (함수 스코프)&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;var name = &amp;quot;John&amp;quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;let&lt;/td&gt;
          &lt;td&gt;변수 선언 (블록 스코프)&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let age = 25;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;const&lt;/td&gt;
          &lt;td&gt;상수 선언 (재할당 불가)&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;const PI = 3.14;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;function&lt;/td&gt;
          &lt;td&gt;함수 선언&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;function add(a, b) { return a + b; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;class&lt;/td&gt;
          &lt;td&gt;클래스 선언&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;class Person { constructor() {} }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;조건문-및-반복문-키워드&#34;&gt;조건문 및 반복문 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;if&lt;/td&gt;
          &lt;td&gt;조건문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;if (age &amp;gt; 18) { console.log(&amp;quot;Adult&amp;quot;); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;else&lt;/td&gt;
          &lt;td&gt;if문의 대안 조건&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;else { console.log(&amp;quot;Minor&amp;quot;); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;switch&lt;/td&gt;
          &lt;td&gt;다중 분기 조건문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;switch (value) { case 1: break; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;case&lt;/td&gt;
          &lt;td&gt;switch문의 각 경우&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;case &amp;quot;A&amp;quot;: return &amp;quot;Excellent&amp;quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;default&lt;/td&gt;
          &lt;td&gt;switch문의 기본 경우&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;default: return &amp;quot;Invalid&amp;quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;for&lt;/td&gt;
          &lt;td&gt;반복문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;for (let i = 0; i &amp;lt; 5; i++) {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;while&lt;/td&gt;
          &lt;td&gt;조건기반 반복문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;while (count &amp;lt; 10) {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;do&lt;/td&gt;
          &lt;td&gt;최소 한번 실행되는 반복문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;do { count++; } while (count &amp;lt; 5);&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;제어-흐름-키워드&#34;&gt;제어 흐름 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;break&lt;/td&gt;
          &lt;td&gt;반복문/switch문 탈출&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;break;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;continue&lt;/td&gt;
          &lt;td&gt;현재 반복 건너뛰기&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;continue;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;return&lt;/td&gt;
          &lt;td&gt;함수에서 값 반환&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;return result;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;throw&lt;/td&gt;
          &lt;td&gt;예외 발생&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;throw new Error(&amp;quot;Invalid input&amp;quot;);&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;try&lt;/td&gt;
          &lt;td&gt;예외처리 시도 블록&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;try { riskyOperation(); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;catch&lt;/td&gt;
          &lt;td&gt;예외처리 블록&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;catch (error) { handleError(error); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;finally&lt;/td&gt;
          &lt;td&gt;예외 발생 여부와 관계없이 실행&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;finally { cleanup(); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;객체-지향-프로그래밍-키워드&#34;&gt;객체 지향 프로그래밍 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;this&lt;/td&gt;
          &lt;td&gt;현재 객체 참조&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;this.name = name;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;super&lt;/td&gt;
          &lt;td&gt;부모 클래스 참조&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;super(name);&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;new&lt;/td&gt;
          &lt;td&gt;객체 생성&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;new Date();&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;extends&lt;/td&gt;
          &lt;td&gt;클래스 상속&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;class Student extends Person {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;static&lt;/td&gt;
          &lt;td&gt;클래스 레벨 멤버 정의&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;static count = 0;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;get&lt;/td&gt;
          &lt;td&gt;getter 메서드 정의&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;get name() { return this._name; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;set&lt;/td&gt;
          &lt;td&gt;setter 메서드 정의&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;set name(value) { this._name = value; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;모듈-및-패키지-키워드&#34;&gt;모듈 및 패키지 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;import&lt;/td&gt;
          &lt;td&gt;모듈 가져오기&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;import { useState } from &#39;react&#39;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;export&lt;/td&gt;
          &lt;td&gt;모듈 내보내기&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;export default class MyComponent {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;from&lt;/td&gt;
          &lt;td&gt;모듈 출처 지정&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;import React from &#39;react&#39;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;as&lt;/td&gt;
          &lt;td&gt;모듈 별칭 지정&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;import * as utils from &#39;./utils&#39;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;기타-키워드&#34;&gt;기타 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;typeof&lt;/td&gt;
          &lt;td&gt;데이터 타입 확인&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;typeof value === &amp;quot;string&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;instanceof&lt;/td&gt;
          &lt;td&gt;객체 타입 확인&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;obj instanceof Array&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;void&lt;/td&gt;
          &lt;td&gt;undefined 값 반환&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;void function() {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;delete&lt;/td&gt;
          &lt;td&gt;객체 프로퍼티 삭제&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;delete object.property&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;in&lt;/td&gt;
          &lt;td&gt;프로퍼티 존재 확인&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;name&amp;quot; in object&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;debugger&lt;/td&gt;
          &lt;td&gt;디버깅 중단점&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;debugger;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;예약된-리터럴&#34;&gt;예약된 리터럴&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;true&lt;/td&gt;
          &lt;td&gt;논리 참 값&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let isActive = true;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;false&lt;/td&gt;
          &lt;td&gt;논리 거짓 값&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let isDisabled = false;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;값이 없음을 나타내는 객체&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let value = null;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;undefined&lt;/td&gt;
          &lt;td&gt;정의되지 않은 값&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let value = undefined;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;엄격-모드-키워드&#34;&gt;엄격 모드 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ldquo;use strict&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;엄격 모드 선언&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;use strict&amp;quot;; // 코드의 시작 부분&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>ReactJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/library/reactjs/</link>
      <pubDate>Wed, 06 Nov 2024 13:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/library/reactjs/</guid>
      <description>React는 사용자 인터페이스를 구축하기 위한 현대적인 JavaScript 라이브러리로, Facebook(현 Meta)에서 개발했다.</description>
    </item>
  </channel>
</rss>
