<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Message-Queue</title><link>https://buenhyden.github.io/tags/message-queue/</link><description>Recent content in Message-Queue on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 29 Oct 2024 07:27:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/message-queue/index.xml" rel="self" type="application/rss+xml"/><item><title>Message Queue vs Message Broker vs Event Broker</title><link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/</link><pubDate>Tue, 29 Oct 2024 07:27:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/</guid><description>
&lt;h2>Message Queue Vs Message Broker Vs Event Broker&lt;span class="hx-absolute -hx-mt-20" id="message-queue-vs-message-broker-vs-event-broker">&lt;/span>
&lt;a href="#message-queue-vs-message-broker-vs-event-broker" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Message Queue, Message Broker, Event Broker의 주요 특징을 비교한 표는 다음과 같습니다:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Message Queue&lt;/th>
&lt;th>Message Broker&lt;/th>
&lt;th>Event Broker&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>메시지 저장 및 전달&lt;/td>
&lt;td>메시지 라우팅, 변환, 저장&lt;/td>
&lt;td>이벤트 라우팅, 스트리밍, 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 모델&lt;/td>
&lt;td>주로 점대점(Point-to-Point)&lt;/td>
&lt;td>점대점 및 발행-구독(Pub/Sub)&lt;/td>
&lt;td>주로 발행-구독(Pub/Sub)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메시지 보존&lt;/td>
&lt;td>소비 후 일반적으로 삭제&lt;/td>
&lt;td>구성에 따라 다름&lt;/td>
&lt;td>장기간 보존 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복잡성&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>작업 큐잉, 비동기 처리&lt;/td>
&lt;td>시스템 통합, 프로토콜 변환&lt;/td>
&lt;td>실시간 데이터 스트리밍, 이벤트 소싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메시지 순서&lt;/td>
&lt;td>보장&lt;/td>
&lt;td>일반적으로 보장&lt;/td>
&lt;td>보장 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>재생 기능&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>구성에 따라 다름&lt;/td>
&lt;td>일반적으로 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 지원&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>다양한 프로토콜 지원&lt;/td>
&lt;td>다양한 프로토콜 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대표적 제품&lt;/td>
&lt;td>RabbitMQ, Redis&lt;/td>
&lt;td>Apache Kafka, RabbitMQ&lt;/td>
&lt;td>Apache Kafka, Amazon Kinesis&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>Message Queue Vs Message Broker&lt;span class="hx-absolute -hx-mt-20" id="message-queue-vs-message-broker">&lt;/span>
&lt;a href="#message-queue-vs-message-broker" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Message Queue와 Message Broker를 비교 분석한 표는 다음과 같습니다:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Message Queue&lt;/th>
&lt;th>Message Broker&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>메시지를 임시로 저장하고 전달하는 데이터 구조&lt;/td>
&lt;td>메시지의 유효성 검사, 변환, 라우팅을 담당하는 중개 소프트웨어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>메시지 저장 및 전달&lt;/td>
&lt;td>메시지 라우팅, 변환, 프로토콜 변환, 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 모델&lt;/td>
&lt;td>주로 점대점(Point-to-Point)&lt;/td>
&lt;td>점대점 및 발행-구독(Pub/Sub) 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복잡성&lt;/td>
&lt;td>상대적으로 단순&lt;/td>
&lt;td>더 복잡하고 고급 기능 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>높음 (클러스터링 지원)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메시지 보존&lt;/td>
&lt;td>일반적으로 소비 후 삭제&lt;/td>
&lt;td>구성에 따라 다름 (장기 보존 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅&lt;/td>
&lt;td>기본적인 라우팅&lt;/td>
&lt;td>복잡한 라우팅 규칙 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>변환 기능&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>메시지 형식 변환 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 지원&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>다양한 메시징 프로토콜 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 사례&lt;/td>
&lt;td>간단한 비동기 작업 처리, 작업 분배&lt;/td>
&lt;td>복잡한 엔터프라이즈 통합, 다중 시스템 연동&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대표적 제품&lt;/td>
&lt;td>RabbitMQ, ActiveMQ&lt;/td>
&lt;td>Apache Kafka, IBM MQ, RabbitMQ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음 (대용량 처리에 적합)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>관리 복잡성&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>높음 (더 많은 구성 옵션)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성&lt;/td>
&lt;td>기본적인 신뢰성 보장&lt;/td>
&lt;td>고급 신뢰성 및 내구성 기능 제공&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Message Queue는 메시지를 임시로 저장하고 전달하는 간단한 데이터 구조이며, Message Broker는 메시지의 유효성 검사, 변환, 라우팅 등 더 복잡하고 고급 기능을 제공한다.&lt;/p>
&lt;p>Message Queue: 주로 점대점(Point-to-Point) 통신 모델을 사용하며, Message Broker는 점대점 및 발행-구독(Pub/Sub) 모델을 모두 지원한다.&lt;/p>
&lt;p>Message Queue는 메시지를 순차적으로 처리하며, 일반적으로 소비 후 삭제되지만, Message Broker는 복잡한 라우팅 규칙을 지원하고, 메시지 변환 기능을 제공한다.&lt;/p>
&lt;p>Message Queue는 간단한 비동기 작업 처리, 작업 분배에 적합하며, Message Broker는 복잡한 엔터프라이즈 통합, 다중 시스템 연동에 적합한다.&lt;/p>
&lt;p>결론적으로, Message Queue는 Message Broker의 일부로 볼 수 있으며, Message Broker는 Message Queue의 기능을 포함하면서 더 확장된 기능을 제공하는 더 포괄적인 시스템이다.&lt;/p>
&lt;h3>Message Broker Vs Event Broker&lt;span class="hx-absolute -hx-mt-20" id="message-broker-vs-event-broker">&lt;/span>
&lt;a href="#message-broker-vs-event-broker" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Event Broker&lt;/th>
&lt;th>Message Broker&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 개념&lt;/strong>&lt;/td>
&lt;td>이벤트 중심 아키텍처를 지원하며, 이벤트의 발행과 구독을 관리&lt;/td>
&lt;td>메시지 큐를 통해 시스템 간 메시지 전달을 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>통신 패턴&lt;/strong>&lt;/td>
&lt;td>발행-구독(Pub/Sub) 패턴이 주요 통신 방식&lt;/td>
&lt;td>점대점(Point-to-Point) 통신이 주된 방식이며, Pub/Sub도 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 지속성&lt;/strong>&lt;/td>
&lt;td>이벤트 로그를 유지하며 과거 이벤트 재생 가능&lt;/td>
&lt;td>메시지는 소비되면 일반적으로 큐에서 제거됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메시지 소비&lt;/strong>&lt;/td>
&lt;td>여러 소비자가 동일한 이벤트를 동시에 소비 가능&lt;/td>
&lt;td>일반적으로 하나의 메시지는 하나의 소비자만 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>순서 보장&lt;/strong>&lt;/td>
&lt;td>이벤트 스트림 내에서 순서 보장 중시&lt;/td>
&lt;td>메시지 순서는 선택적으로 보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성&lt;/strong>&lt;/td>
&lt;td>높은 처리량과 수평적 확장성에 최적화&lt;/td>
&lt;td>중간 규모의 처리량에 적합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>사용 사례&lt;/strong>&lt;/td>
&lt;td>- 실시간 데이터 스트리밍&lt;br>- 이벤트 소싱&lt;br>- 분산 시스템 모니터링&lt;br>- 실시간 분석&lt;/td>
&lt;td>- 작업 큐&lt;br>- 비동기 처리&lt;br>- 부하 분산&lt;br>- 시스템 간 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>대표적 구현체&lt;/strong>&lt;/td>
&lt;td>- Apache Kafka&lt;br>Apache Pulsar&lt;br>AWS EventBridge&lt;/td>
&lt;td>- RabbitMQ&lt;br>ActiveMQ&lt;br>AWS SQS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메시지 유형&lt;/strong>&lt;/td>
&lt;td>이벤트(상태 변경을 나타내는 알림)&lt;/td>
&lt;td>명령, 문서, 질의 등 다양한 유형의 메시지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 접근&lt;/strong>&lt;/td>
&lt;td>이벤트 스트림을 통한 시간 기반 접근&lt;/td>
&lt;td>큐 기반의 순차적 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>재처리&lt;/strong>&lt;/td>
&lt;td>과거 이벤트의 재생과 재처리가 용이&lt;/td>
&lt;td>일반적으로 한 번 처리된 메시지는 재처리가 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- 높은 처리량&lt;br>- 낮은 지연시간&lt;br>- 대규모 확장성&lt;/td>
&lt;td>- 중간 수준의 처리량&lt;br>- 신뢰성 있는 전달&lt;br>- 트랜잭션 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복잡성&lt;/strong>&lt;/td>
&lt;td>상대적으로 복잡한 구현과 관리 필요&lt;/td>
&lt;td>비교적 단순한 구현과 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모니터링&lt;/strong>&lt;/td>
&lt;td>이벤트 흐름과 처리 현황의 실시간 모니터링 중요&lt;/td>
&lt;td>큐의 길이와 처리 상태 모니터링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장애 복구&lt;/strong>&lt;/td>
&lt;td>- 이벤트 로그를 통한 복구&lt;br>- 분산 시스템의 복원력&lt;/td>
&lt;td>- 메시지 재전송&lt;br>- 트랜잭션 롤백&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>통합 패턴&lt;/strong>&lt;/td>
&lt;td>- 이벤트 기반 통합&lt;br>- 비동기 통신&lt;br>- 느슨한 결합&lt;/td>
&lt;td>- 포인트-투-포인트 통합&lt;br>- 요청-응답 패턴&lt;br>- 메시지 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안&lt;/strong>&lt;/td>
&lt;td>- 이벤트 수준의 접근 제어&lt;br>- 스트림 암호화&lt;/td>
&lt;td>- 메시지 수준의 보안&lt;br>- 큐 접근 제어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리소스 사용&lt;/strong>&lt;/td>
&lt;td>높은 처리량을 위해 더 많은 리소스 필요&lt;/td>
&lt;td>상대적으로 적은 리소스로 운영 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>개발 복잡도&lt;/strong>&lt;/td>
&lt;td>이벤트 스키마 관리와 버전 관리가 더 복잡&lt;/td>
&lt;td>비교적 단순한 메시지 구조와 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Message Broker와 Event Broker의 가장 큰 차이점은 데이터 처리 방식과 보존 기간이다.&lt;br>
Message Broker는 일회성 메시지 전달에 초점을 맞추고 있어 메시지가 처리되면 삭제되는 반면, Event Broker는 이벤트를 지속적으로 보관하고 여러 서비스에서 재사용할 수 있도록 한다.&lt;/p>
&lt;p>또한 확장성 측면에서도 차이가 있다.&lt;br>
Event Broker는 느슨한 결합을 제공하여 시스템을 쉽게 확장할 수 있지만, Message Broker는 상대적으로 강한 결합으로 인해 확장이 더 복잡할 수 있다.&lt;/p>
&lt;p>두 시스템은 각각의 장단점이 있으며, 시스템의 요구사항과 사용 목적에 따라 적절한 선택이 필요하다.&lt;br>
예를 들어, 단순한 작업 큐가 필요하다면 Message Broker가, 실시간 데이터 분석이 필요하다면 Event Broker가 더 적합할 것이다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Message Queue</title><link>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/message-queue/</link><pubDate>Mon, 28 Oct 2024 06:56:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/backend/event-broker-and-message-broker/message-queue/</guid><description>
&lt;h2>Message Queue&lt;span class="hx-absolute -hx-mt-20" id="message-queue">&lt;/span>
&lt;a href="#message-queue" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>메시지 큐는 프로그램, 네트워크, 서비스 간에 데이터를 주고받을 때 사용하는 비동기 통신 방법.&lt;/p>
&lt;p>Message Queue는 메시지를 임시로 저장하고 전달하는 중개자 역할을 한다.&lt;br>
Producer가 메시지를 큐에 전송하면, Consumer가 이를 처리할 준비가 될 때까지 메시지를 보관한다.&lt;br>
이는 시스템 컴포넌트 간의 결합도를 낮추고 확장성을 높이는 데 도움이 된다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>비동기 통신&lt;/strong>: Producer와 Consumer 간 직접적인 연결 없이 메시지를 교환할 수 있다.&lt;/li>
&lt;li>&lt;strong>내결함성&lt;/strong>: 메시지는 Consumer가 처리할 때까지 큐에 안전하게 저장된다. 시스템 장애 시에도 데이터 손실을 방지한다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 트래픽 증가에 따라 Consumer를 쉽게 추가할 수 있어 시스템 확장이 용이하다.&lt;/li>
&lt;li>&lt;strong>부하 분산&lt;/strong>: 여러 Consumer가 메시지를 병렬로 처리하여 작업 부하를 분산시킬 수 있다.&lt;/li>
&lt;li>&lt;strong>순서 보장&lt;/strong>: FIFO(First-In-First-Out) 큐를 사용하여 메시지의 처리 순서를 보장할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>메시지 큐의 장점&lt;span class="hx-absolute -hx-mt-20" id="메시지-큐의-장점">&lt;/span>
&lt;a href="#%eb%a9%94%ec%8b%9c%ec%a7%80-%ed%81%90%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>비동기 처리
&lt;ul>
&lt;li>시스템 간 느슨한 결합(Loose Coupling)을 제공합니다&lt;/li>
&lt;li>생산자는 소비자의 처리 여부를 기다리지 않고 다음 작업을 진행할 수 있습니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>부하 분산
&lt;ul>
&lt;li>여러 소비자가 메시지를 나누어 처리할 수 있습니다&lt;/li>
&lt;li>시스템의 부하를 효율적으로 분산시킬 수 있습니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>안정성
&lt;ul>
&lt;li>메시지가 유실되지 않고 안전하게 전달됩니다&lt;/li>
&lt;li>시스템 장애 시에도 메시지가 보존됩니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>메시지 큐의 주요 구성요소&lt;span class="hx-absolute -hx-mt-20" id="메시지-큐의-주요-구성요소">&lt;/span>
&lt;a href="#%eb%a9%94%ec%8b%9c%ec%a7%80-%ed%81%90%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>Producer (생산자)&lt;/p>
&lt;ul>
&lt;li>메시지를 생성하여 큐에 보내는 주체.&lt;/li>
&lt;li>예를 들어, 웹 서버가 사용자의 주문을 받아 결제 처리 큐에 전달하는 경우가 있습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Queue (큐)&lt;/p>
&lt;ul>
&lt;li>메시지가 저장되는 버퍼.&lt;/li>
&lt;li>FIFO(First In First Out) 방식으로 동작한다.&lt;/li>
&lt;li>메시지의 안전한 전달을 보장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Consumer (소비자)&lt;/p>
&lt;ul>
&lt;li>큐에서 메시지를 가져와 처리하는 주체.&lt;/li>
&lt;li>여러 개의 Consumer가 동시에 작업을 처리할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>작업 큐&lt;/strong>: 이미지 처리, 이메일 전송 등 시간이 오래 걸리는 작업을 비동기적으로 처리한다.&lt;/li>
&lt;li>&lt;strong>마이크로서비스 통신&lt;/strong>: 서비스 간 결합도를 낮추고 독립적인 확장을 가능하게 한다.&lt;/li>
&lt;li>&lt;strong>이벤트 기반 아키텍처&lt;/strong>: 시스템 컴포넌트 간 이벤트를 비동기적으로 전파한다.&lt;/li>
&lt;li>&lt;strong>데이터 스트리밍&lt;/strong>: 실시간 로그 분석, IoT 데이터 처리 등에 활용된다.&lt;/li>
&lt;li>&lt;strong>부하 평준화&lt;/strong>: 트래픽 급증 시 메시지를 버퍼링하여 시스템 안정성을 유지한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 Message Queue 시스템&lt;span class="hx-absolute -hx-mt-20" id="주요-message-queue-시스템">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-message-queue-%ec%8b%9c%ec%8a%a4%ed%85%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>RabbitMQ&lt;/strong>: AMQP 프로토콜을 구현한 오픈소스 메시지 브로커.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># RabbitMQ 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pika&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 연결 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pika&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BlockingConnection&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pika&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ConnectionParameters&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">channel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 큐 선언&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">channel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queue_declare&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;hello&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">channel&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basic_publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">exchange&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">routing_key&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;hello&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Hello World!&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Apache Kafka&lt;/strong>: 고성능, 분산형 스트리밍 플랫폼으로 대규모 데이터 처리에 적합하다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Kafka 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">kafka&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">KafkaProducer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 프로듀서 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">producer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">KafkaProducer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bootstrap_servers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;localhost:9092&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">producer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;my-topic&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;Hello, Kafka!&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Redis Pub/Sub&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis Pub/Sub 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Redis 연결&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6379&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 발행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">publish&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;channel1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Hello, Redis!&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Amazon SQS&lt;/strong>: AWS에서 제공하는 완전 관리형 메시지 큐 서비스.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>메시지 큐를 사용할 때의 고려사항&lt;span class="hx-absolute -hx-mt-20" id="메시지-큐를-사용할-때의-고려사항">&lt;/span>
&lt;a href="#%eb%a9%94%ec%8b%9c%ec%a7%80-%ed%81%90%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%a0-%eb%95%8c%ec%9d%98-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>메시지 순서&lt;/p>
&lt;ul>
&lt;li>일부 시스템에서는 메시지 순서가 중요할 수 있습니다&lt;/li>
&lt;li>필요한 경우 메시지에 순서 정보를 포함시켜야 합니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>메시지 영속성&lt;/p>
&lt;ul>
&lt;li>시스템 장애 시 메시지 보존 방법을 고려해야 합니다&lt;/li>
&lt;li>디스크 저장이나 복제 설정이 필요할 수 있습니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능과 확장성&lt;/p>
&lt;ul>
&lt;li>처리해야 할 메시지의 양과 속도를 고려해야 합니다&lt;/li>
&lt;li>적절한 메시지 큐 시스템을 선택해야 합니다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>또한 시스템 요구사항에 따라 메시지 순서 보장, 중복 제거, Dead Letter Queue 등의 기능이 필요할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>