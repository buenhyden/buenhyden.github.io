<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Combinatorial-Test-Design-Techniques on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/combinatorial-test-design-techniques/</link>
    <description>Recent content in Combinatorial-Test-Design-Techniques on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Sat, 02 Nov 2024 09:42:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/combinatorial-test-design-techniques/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>조합 테스트 설계 기법 (Combinatorial Test Design Techniques)</title>
      <link>https://buenhyden.github.io/posts/quality-assurance-and-testing/testing-fundamentals/test-design-techniques/black-box-testing/combinatorial-test-design-techniques/</link>
      <pubDate>Sat, 02 Nov 2024 09:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/quality-assurance-and-testing/testing-fundamentals/test-design-techniques/black-box-testing/combinatorial-test-design-techniques/</guid>
      <description>조합 테스트 설계는 입력 매개변수의 다양한 조합을 사용하여 소프트웨어 애플리케이션을 테스트하는 방법이다.</description>
    </item>
  </channel>
</rss>
