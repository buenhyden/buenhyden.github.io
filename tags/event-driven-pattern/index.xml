<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Event-Driven-Pattern</title><link>https://buenhyden.github.io/tags/event-driven-pattern/</link><description>Recent content in Event-Driven-Pattern on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 28 Dec 2024 10:05:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/event-driven-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Event-Driven Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/event-driven-pattern/</link><pubDate>Sat, 28 Dec 2024 10:05:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/communication/event-driven-pattern/</guid><description>
&lt;h2>Event-Driven Pattern&lt;span class="hx-absolute -hx-mt-20" id="event-driven-pattern">&lt;/span>
&lt;a href="#event-driven-pattern" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>이 패턴은 시스템의 상태 변화를 이벤트로 표현하고, 이를 기반으로 서비스 간 통신을 구현하는 방식이다.&lt;/p>
&lt;p>Event-Driven Pattern은 시스템에서 발생하는 중요한 변화나 행동을 이벤트로 정의하고, 이를 중심으로 시스템을 설계하는 아키텍처 패턴이다.&lt;br>
이 패턴에서는 이벤트의 생성, 전파, 처리가 시스템의 핵심 동작이 된다.&lt;/p>
&lt;p>주요 특징:&lt;/p>
&lt;ul>
&lt;li>비동기 통신을 기반으로 함&lt;/li>
&lt;li>서비스 간 느슨한 결합 제공&lt;/li>
&lt;li>실시간 데이터 처리와 반응성 향상&lt;/li>
&lt;li>확장성과 유연성 증대&lt;/li>
&lt;/ul>
&lt;h3>주요 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="주요-구성-요소">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Event-Driven Pattern의 주요 구성 요소는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>이벤트 생성자(Event Producer):&lt;/p>
&lt;ul>
&lt;li>이벤트를 생성하고 발행하는 역할을 하는 컴포넌트.&lt;/li>
&lt;li>사용자 액션, 시스템 상태의 변화, 외부 시스템의 입력 등에 의해 이벤트를 생성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이벤트 소비자(Event Consumer):&lt;/p>
&lt;ul>
&lt;li>이벤트를 수신하고 이에 대한 반응으로 특정 작업을 수행하는 컴포넌트.&lt;/li>
&lt;li>하나 이상의 이벤트에 대해 반응할 수 있으며, 이벤트의 내용에 따라 다양한 처리를 실행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이벤트 채널(Event Channel):&lt;/p>
&lt;ul>
&lt;li>이벤트 생성자와 소비자를 연결하는 매개체 역할을 한다.&lt;/li>
&lt;li>메시지 큐나 이벤트 버스 등이 이에 해당된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이벤트 브로커(Event Broker):&lt;/p>
&lt;ul>
&lt;li>이벤트 생성자와 소비자 사이에서 이벤트를 중개하는 역할을 한다.&lt;/li>
&lt;li>이벤트를 수신, 저장하고 적절한 이벤트 소비자에게 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이벤트(Event):&lt;/p>
&lt;ul>
&lt;li>시스템이나 서비스의 상태 변화를 나타내는 정보나 신호를 의미한다.&lt;/li>
&lt;li>일반적으로 헤더(메타데이터)와 바디(실제 데이터)로 구성된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>이벤트의 구조와 특성&lt;span class="hx-absolute -hx-mt-20" id="이벤트의-구조와-특성">&lt;/span>
&lt;a href="#%ec%9d%b4%eb%b2%a4%ed%8a%b8%ec%9d%98-%ea%b5%ac%ec%a1%b0%ec%99%80-%ed%8a%b9%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이벤트는 보통 다음과 같은 구조를 가진다:&lt;/p>
&lt;ol>
&lt;li>이벤트 ID&lt;/li>
&lt;li>이벤트 유형&lt;/li>
&lt;li>이벤트 발생 시간&lt;/li>
&lt;li>관련 정보&lt;/li>
&lt;li>이벤트 데이터&lt;/li>
&lt;li>이벤트 스키마 버전&lt;/li>
&lt;/ol>
&lt;h3>작동 방식&lt;span class="hx-absolute -hx-mt-20" id="작동-방식">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>이벤트 생성자가 상태 변화를 감지하고 이벤트를 생성&lt;/li>
&lt;li>생성된 이벤트는 이벤트 브로커로 전송&lt;/li>
&lt;li>이벤트 브로커는 해당 이벤트를 구독하고 있는 소비자들에게 이벤트를 전달&lt;/li>
&lt;li>이벤트 소비자는 수신한 이벤트를 처리하고 필요한 작업 수행&lt;/li>
&lt;/ol>
&lt;pre class="mermaid hx-mt-6">flowchart LR
OS[주문 서비스]-->|주문생성 이벤트|EB[이벤트 버스]
EB-->|이벤트 수신|PS[결제 서비스]
EB-->|이벤트 수신|IS[재고 서비스]
EB-->|이벤트 수신|NS[알림 서비스]
style EB fill:#f9f,stroke:#333,stroke-width:4px
style OS fill:#bbf
style PS fill:#bfb
style IS fill:#bfb
style NS fill:#bfb&lt;/pre>&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>높은 확장성: 새로운 기능이나 서비스를 쉽게 추가할 수 있다.&lt;/li>
&lt;li>유연성: 서비스 간 느슨한 결합으로 변경에 대한 영향을 최소화한다.&lt;/li>
&lt;li>실시간 처리: 이벤트 발생 즉시 관련 서비스에서 처리할 수 있다.&lt;/li>
&lt;li>복잡한 비즈니스 프로세스 모델링: 현실 세계의 많은 프로세스가 이벤트 중심적이기 때문에 자연스럽게 구현할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성 증가: 이벤트의 흐름을 추적하고 관리하는 것이 어려울 수 있다.&lt;/li>
&lt;li>데이터 일관성 관리: 분산된 환경에서 데이터 일관성을 유지하기 어려울 수 있다.&lt;/li>
&lt;li>디버깅과 테스트의 어려움: 비동기적이고 분산된 특성으로 인해 문제 해결이 복잡할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 사례&lt;span class="hx-absolute -hx-mt-20" id="적용-사례">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>금융 서비스: 실시간 거래 처리와 사기 탐지에 활용된다.&lt;/li>
&lt;li>e커머스: 주문 처리, 재고 관리 등에 사용된다.&lt;/li>
&lt;li>IoT 시스템: 센서 데이터 처리와 장치 제어에 활용된다.&lt;/li>
&lt;/ol>
&lt;h3>구현 시 고려사항&lt;span class="hx-absolute -hx-mt-20" id="구현-시-고려사항">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>이벤트 설계와 모델링에 주의를 기울여야 한다.&lt;/li>
&lt;li>이벤트 처리와 관련한 베스트 프랙티스와 패턴을 적용해야 한다.&lt;/li>
&lt;li>시스템 전체의 관점에서 모니터링 및 로깅 전략을 수립해야 한다.&lt;/li>
&lt;li>이벤트의 순서 보장&lt;/li>
&lt;li>이벤트 스키마 관리와 버전 관리&lt;/li>
&lt;li>이벤트 저장소 설계&lt;/li>
&lt;li>장애 복구 전략&lt;/li>
&lt;li>확장성 계획&lt;/li>
&lt;/ol>
&lt;h3>이벤트 전송 메커니즘&lt;span class="hx-absolute -hx-mt-20" id="이벤트-전송-메커니즘">&lt;/span>
&lt;a href="#%ec%9d%b4%eb%b2%a4%ed%8a%b8-%ec%a0%84%ec%86%a1-%eb%a9%94%ec%bb%a4%eb%8b%88%ec%a6%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>메시지 브로커 전송 (Message Broker)&lt;/th>
&lt;th>이벤트 버스 전송 (Event Bus)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본 개념&lt;/td>
&lt;td>메시지의 라우팅, 변환, 저장을 담당하는 중개자 역할&lt;/td>
&lt;td>이벤트를 발행자로부터 구독자로 전달하는 채널 역할&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>아키텍처 특성&lt;/strong>&lt;/td>
&lt;td>- 독립적인 미들웨어 시스템으로 동작&lt;br>- 분산 시스템 간 통신 지원&lt;br>- 높은 확장성과 신뢰성 제공&lt;br>- 서비스 간 완전한 분리 가능&lt;/td>
&lt;td>- 애플리케이션 내부 컴포넌트로 동작&lt;br>- 단일 애플리케이션 내 통신 지원&lt;br>- 간단한 구현과 빠른 처리&lt;br>- 메모리 내 직접 전달 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 모델&lt;/td>
&lt;td>점대점(Point-to-Point) 및 발행/구독(Pub/Sub) 지원&lt;/td>
&lt;td>주로 발행/구독(Pub/Sub) 모델 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 지속성&lt;/strong>&lt;/td>
&lt;td>- 디스크 기반의 영구 저장 지원&lt;br>- 메시지 손실 방지를 위한 저장 메커니즘&lt;br>- 장애 복구를 위한 백업 지원&lt;br>- 메시지 이력 추적 가능&lt;/td>
&lt;td>- 메모리 기반의 일시적 저장&lt;br>- 애플리케이션 재시작 시 데이터 손실&lt;br>- 영구 저장 필요시 별도 구현 필요&lt;br>- 실시간 처리 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성&lt;/strong>&lt;/td>
&lt;td>- 수평적/수직적 확장 용이&lt;br>- 클러스터링 지원&lt;br>- 대규모 트래픽 처리 가능&lt;br>- 파티셔닝을 통한 부하 분산&lt;/td>
&lt;td>- 단일 애플리케이션 범위 내 제한&lt;br>- 메모리 한계로 인한 제약&lt;br>- 로컬 처리에 최적화&lt;br>- 단순한 확장 모델&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- 네트워크 통신 오버헤드 발생&lt;br>- 상대적으로 높은 지연시간&lt;br>- 대량 메시지 처리에 최적화&lt;br>- 안정적인 처리량 보장&lt;/td>
&lt;td>- 메모리 내 직접 전달로 빠른 속도&lt;br>- 최소한의 지연시간&lt;br>- 로컬 처리 성능 우수&lt;br>- 단일 프로세스 내 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>구현 복잡도&lt;/strong>&lt;/td>
&lt;td>- 복잡한 설정과 관리 필요&lt;br>- 클러스터 구성 및 운영&lt;br>- 모니터링 도구 필요&lt;br>- 장애 처리 메커니즘 필요&lt;/td>
&lt;td>- 단순한 구현과 설정&lt;br>- 최소한의 관리 부담&lt;br>- 기본적인 모니터링만 필요&lt;br>- 단순한 오류 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>사용 사례&lt;/strong>&lt;/td>
&lt;td>- 마이크로서비스 간 통신&lt;br>- 분산 시스템 이벤트 처리&lt;br>- 크로스 플랫폼 통합&lt;br>- 대규모 이벤트 처리&lt;/td>
&lt;td>- 단일 애플리케이션 내 통신&lt;br>UI 컴포넌트 간 이벤트&lt;br>- 모듈 간 느슨한 결합&lt;br>- 로컬 이벤트 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>오류 처리&lt;/strong>&lt;/td>
&lt;td>- 자동 재시도 메커니즘&lt;br>Dead Letter Queue 지원&lt;br>- 장애 복구 기능&lt;br>- 메시지 추적 기능&lt;/td>
&lt;td>- 기본적인 예외 처리&lt;br>- 수동 재시도 구현 필요&lt;br>- 단순한 오류 로깅&lt;br>- 메모리 내 상태 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>운영 관리&lt;/strong>&lt;/td>
&lt;td>- 전문적인 운영 팀 필요&lt;br>- 복잡한 모니터링 도구&lt;br>- 백업/복구 계획 필요&lt;br>- 성능 튜닝 필요&lt;/td>
&lt;td>- 최소한의 운영 관리&lt;br>- 단순한 모니터링&lt;br>- 애플리케이션 수준 관리&lt;br>- 간단한 설정 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>비용 측면&lt;/strong>&lt;/td>
&lt;td>- 라이선스 비용 발생 가능&lt;br>- 인프라 운영 비용&lt;br>- 전문 인력 비용&lt;br>- 확장 시 추가 비용&lt;/td>
&lt;td>- 최소한의 추가 비용&lt;br>- 개발 리소스만 필요&lt;br>- 운영 비용 거의 없음&lt;br>- 단순한 유지보수 비용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안&lt;/strong>&lt;/td>
&lt;td>- 강력한 인증/인가 기능&lt;br>- 전송 구간 암호화&lt;br>- 접근 제어 정책&lt;br>- 감사 로깅 지원&lt;/td>
&lt;td>- 애플리케이션 수준 보안&lt;br>- 단순한 접근 제어&lt;br>- 내부 통신 중심&lt;br>- 기본적인 보안 기능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>메시지 브로커와 이벤트 버스는 분산 시스템에서 통신을 위해 사용되는 중요한 컴포넌트이지만, 몇 가지 주요한 차이점이 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>메시지 처리 방식:&lt;/p>
&lt;ul>
&lt;li>메시지 브로커:
&lt;ul>
&lt;li>메시지를 받아서 처리한 후 일반적으로 삭제한다.&lt;/li>
&lt;li>메시지의 순서를 보장하고 장애 발생 시 메시지 손실을 방지하는 데 중점을 둔다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>이벤트 버스:
&lt;ul>
&lt;li>이벤트를 영구적으로 저장하고 필요한 시간 동안 보존한다.&lt;/li>
&lt;li>대용량의 이벤트 데이터를 실시간으로 처리하는 데 중점을 둔다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 지속성&lt;/p>
&lt;ul>
&lt;li>메시지 브로커: 메시지는 소비된 후 일반적으로 삭제된다.&lt;/li>
&lt;li>이벤트 버스: 이벤트는 장기간 저장되어 나중에 재생하거나 분석할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>확장성&lt;/p>
&lt;ul>
&lt;li>메시지 브로커: 상대적으로 제한된 확장성을 가진다.&lt;/li>
&lt;li>이벤트 버스: 대규모 데이터 처리에 적합한 높은 확장성을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>사용 사례&lt;/p>
&lt;ul>
&lt;li>메시지 브로커: 주로 서비스 간 메시지 전달과 작업 분배에 사용된다.&lt;/li>
&lt;li>이벤트 버스: 실시간 데이터 스트리밍, 이벤트 소싱, 복잡한 이벤트 처리에 적합하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현 예시&lt;/p>
&lt;ul>
&lt;li>메시지 브로커: RabbitMQ, Apache ActiveMQ&lt;/li>
&lt;li>이벤트 버스: Apache Kafka, Amazon Kinesis&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이 두 전송 메커니즘은 각각의 장단점이 있으며, 시스템의 요구사항과 규모에 따라 적절한 선택이 필요하다.&lt;br>
이러한 차이점들로 인해 메시지 브로커는 즉각적인 메시지 처리와 작업 분배에 적합하고, 이벤트 버스는 대규모 실시간 데이터 처리와 장기적인 데이터 분석에 더 적합하다.&lt;/p>
&lt;h3>오류 처리와 복원력&lt;span class="hx-absolute -hx-mt-20" id="오류-처리와-복원력">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%b2%98%eb%a6%ac%ec%99%80-%eb%b3%b5%ec%9b%90%eb%a0%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>이벤트 재처리:&lt;br>
실패한 이벤트를 재처리하기 위한 메커니즘이 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">EventProcessor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DeadLetterQueue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dlq&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processEventLogic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dlq&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to process event: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Scheduled&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fixedRate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">retryFailedEvents&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">failedEvents&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dlq&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readEvents&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">failedEvents&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">processEvent&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>멱등성 보장:&lt;br>
같은 이벤트가 여러 번 처리되더라도 안전하도록 설계해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">IdempotentEventHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ProcessedEventRepository&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processedEvents&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">processedEvents&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">exists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">()))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 이미 처리된 이벤트는 무시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processEventLogic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processedEvents&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">save&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>모니터링과 추적&lt;span class="hx-absolute -hx-mt-20" id="모니터링과-추적">&lt;/span>
&lt;a href="#%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81%ea%b3%bc-%ec%b6%94%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>이벤트 로깅:&lt;br>
모든 이벤트의 흐름을 추적할 수 있어야 한다:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Aspect&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">EventLoggingAspect&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Around&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;@annotation(EventHandler)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">logEvent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ProceedingJoinPoint&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">joinPoint&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Event&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">joinPoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getArgs&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Processing event: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">joinPoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">proceed&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Successfully processed event: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Failed to process event: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>메트릭 수집:&lt;br>
시스템의 건강 상태를 모니터링하기 위한 메트릭을 수집한다:
&lt;ul>
&lt;li>이벤트 처리율&lt;/li>
&lt;li>실패율&lt;/li>
&lt;li>처리 지연 시간&lt;/li>
&lt;li>큐 길이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>