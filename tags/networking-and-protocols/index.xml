<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Networking-and-Protocols on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/networking-and-protocols/</link>
    <description>Recent content in Networking-and-Protocols on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.149.1</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Sep 2025 02:15:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/networking-and-protocols/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSI Model</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/</link>
      <pubDate>Wed, 16 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-model/</guid>
      <description>OSI 7계층은 통신 기능을 물리→데이터링크→네트워크→전송→세션→표현→응용의 7단계로 분리한 개념적 참조모델(ISO/IEC 7498-1)이다. 계층별 캡슐화와 표준화로 상호운용성·문제추적·설계 기준을 제공하며, 실제 구현은 TCP/IP 모델과 혼재되어 사용된다.</description>
    </item>
    <item>
      <title>TCP/IP Model</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/</link>
      <pubDate>Thu, 17 Oct 2024 02:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/tcp-ip-model/</guid>
      <description>TCP/IP 4계층 모델은 네트워크 액세스·인터넷·전송·응용의 네 계층으로 구성된 실무 기준 프로토콜 스택이다. 각 계층은 캡슐화로 역할을 분리해 주소 지정·라우팅·신뢰성·서비스 제공을 담당하며, QUIC/HTTP3 같은 현대 전송 기술도 이 구조 내에서 기능적으로 자리잡는다.</description>
    </item>
    <item>
      <title>OSI vs.TCP/IP Model</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-vs-tcp-ip-model/</link>
      <pubDate>Sat, 19 Oct 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/osi-vs-tcp-ip-model/</guid>
      <description>TCP/IP는 인터넷의 실무적 구현을 지배하는 간결한 4계층 모델로 프로토콜 매핑과 상호운용성에 최적화되어 있다. OSI는 7계층으로 개념적 분해와 교육·설계에 유리하다. 실무에선 TCP/IP를 기준으로 구현하되 OSI 사고틀로 설계·분석하는 병행 접근이 효과적이다.</description>
    </item>
    <item>
      <title>Addressing</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/</link>
      <pubDate>Thu, 04 Sep 2025 02:15:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/</guid>
      <description>네트워크 주소 지정은 노드와 서비스를 고유 식별해 라우팅과 통신을 가능하게 하는 체계다. MAC·IP·포트·DNS·DHCP·ARP/NDP·NAT 등으로 구성되며, 주소계획(CIDR/서브넷), IPv6 전환, 보안(RPKI/소스검증), 프라이버시 및 클라우드·컨테이너 환경의 오버레이 전략이 핵심 고려사항이다.</description>
    </item>
    <item>
      <title>Traffic Management</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/performance-optimization/traffic-management/</link>
      <pubDate>Thu, 28 Aug 2025 04:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/performance-optimization/traffic-management/</guid>
      <description>트래픽 관리는 네트워크와 애플리케이션 전 구간에서 데이터 흐름을 제어하고 최적화해 성능, 안정성, 보안을 보장하는 기술 체계다. QoS, AQM, 혼잡 제어, 로드 밸런싱, Rate Limiting, 서비스 메시 등이 활용되며, ECN·DiffServ·QUIC 같은 표준과 AI 기반 자동화가 최신 동향이다.</description>
    </item>
    <item>
      <title>Networking &amp; Protocols</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/</link>
      <pubDate>Fri, 22 Aug 2025 06:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/</guid>
      <description></description>
    </item>
    <item>
      <title>Cross-Layer Functions</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/cross-layer-functions/</link>
      <pubDate>Mon, 12 May 2025 03:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/network-models/cross-layer-functions/</guid>
      <description>Cross-Layer Functions는 계층 경계의 정보를 선택적으로 공유·연동해 성능, 지연, 전력, 보안 등을 전역 최적화하는 설계 방식이다. 무선·IoT·V2X·엣지 AI 등에서 활용되며, DiffServ/ECN/PMTUD/QUIC/5G QoS 등 표준과의 연계 및 SDN·미들웨어 기반 제어로 구현된다. 이점(효율·QoS 향상)과 리스크(복잡성·상호운용성·보안)를 균형 있게 설계해야 효과적이다</description>
    </item>
    <item>
      <title>Cloud Networking</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/modern-networking/cloud-networking/</link>
      <pubDate>Sun, 20 Oct 2024 17:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/modern-networking/cloud-networking/</guid>
      <description>클라우드 네트워킹은 클라우드 컴퓨팅 환경에서 리소스들을 연결하고 통신할 수 있게 해주는 인프라를 의미한다.</description>
    </item>
    <item>
      <title>네트워크 기능 가상화(Network Functions Virtualization, NFV)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/modern-networking/network-virtualization/nfv/</link>
      <pubDate>Sun, 20 Oct 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/modern-networking/network-virtualization/nfv/</guid>
      <description>NFV는 전통적으로 전용 하드웨어 장비에서 실행되던 네트워크 기능들을 가상화하여 소프트웨어로 구현하는 네트워크 아키텍처 개념이다.</description>
    </item>
    <item>
      <title>Media Access Control Address (MAC Address)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/mac-address/</link>
      <pubDate>Wed, 16 Oct 2024 12:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/mac-address/</guid>
      <description>네트워크 장비를 식별하기 위한 고유한 하드웨어 주소</description>
    </item>
    <item>
      <title>Network Traffic</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/performance-optimization/network-traffic/</link>
      <pubDate>Wed, 16 Oct 2024 02:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/advanced-networking/performance-optimization/network-traffic/</guid>
      <description>네트워크 트래픽은 일정 시간 내 데이터 흐름으로, 성능은 처리량·지연·손실의 균형으로 정의된다. 최적화는 혼잡제어, AQM, QoS, CDN, 로드밸런싱, 보안 대응을 포함하며, QUIC/HTTP3·eBPF·IPFIX 기반 관측성과 클라우드·AI 자동화로 측정→분석→최적화→검증 사이클을 완성한다.</description>
    </item>
  </channel>
</rss>
