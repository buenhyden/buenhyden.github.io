<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Network :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/network.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Mon, 14 Oct 2024 16:31:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/network/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Layer - TCP/IP 4 Layers</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers.html</link><pubDate>Thu, 26 Sep 2024 02:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers.html</guid><description>인터넷 프로토콜 스위트의 구조를 설명하는 계층화된 모델.</description></item><item><title>멱등성 (Idempotency)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency.html</link><pubDate>Mon, 14 Oct 2024 16:31:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency.html</guid><description>일한 동요청을 여러 번 수행해도 시스템의 상태가 한 번 수행한 것과 동일한 결과를 보장하는 속성</description></item><item><title>안전한 메서드 (Safe Methods)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/safe-methods.html</link><pubDate>Mon, 14 Oct 2024 16:31:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/safe-methods.html</guid><description>서버의 상태를 변경하지 않는 HTTP 메서드</description></item><item><title>멱등성 (Idempotency)과 안전한 메서드 (Safe Methods)의 비교</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency-and-safe-methods.html</link><pubDate>Mon, 14 Oct 2024 00:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/idempotency-and-safe-methods.html</guid><description>멱등성과 안전한 메서드는 HTTP 메서드의 중요한 특성으로, 서버의 상태 변화와 관련이 있다.</description></item><item><title>CORS</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cors.html</link><pubDate>Tue, 08 Oct 2024 07:13:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cors.html</guid><description>다른 출처(Origin)의 리소스를 공유하기 위한 보안 메커니즘</description></item><item><title>Cookies</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cookies.html</link><pubDate>Tue, 08 Oct 2024 07:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/cookies.html</guid><description>웹사이트가 사용자의 브라우저에 저장하는 작은 텍스트 파일</description></item><item><title>HTTP Cache</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-cache.html</link><pubDate>Tue, 08 Oct 2024 07:11:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-cache.html</guid><description>웹 브라우저나 서버에서 데이터를 임시 저장하는 기술</description></item><item><title>HTTP Headers</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-headers.html</link><pubDate>Mon, 07 Oct 2024 07:09:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-headers.html</guid><description>HTTP 요청이나 응답에서 전달할 부가적인 정보를 담는 데이터</description></item><item><title>HTTP Request Methods</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-request-methods.html</link><pubDate>Mon, 07 Oct 2024 07:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-request-methods.html</guid><description>클라이언트가 서버에 특정 작업을 요청하기 위해 사용하는 방식</description></item><item><title>HTTP Status Code</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-status-code.html</link><pubDate>Mon, 07 Oct 2024 07:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/http-status-code.html</guid><description>서버가 클라이언트의 요청에 대한 응답 상태를 나타내는 3자리 숫자.</description></item><item><title>URI</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/uri.html</link><pubDate>Mon, 07 Oct 2024 04:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/uri.html</guid><description>인터넷 상의 자원을 고유하게 식별하기 위한 문자열로 URL과 URN은 모두 URI의 하위 개념이라고 볼 수 있다.</description></item><item><title>IP(Internet Protocol)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip.html</link><pubDate>Fri, 04 Oct 2024 02:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip.html</guid><description>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합</description></item><item><title>Network</title><link>https://buenhyden.github.io/posts/networking-and-communications.html</link><pubDate>Sun, 22 Sep 2024 02:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/networking-and-communications.html</guid><description>몇 개의 독립적인 장치가 적절한 영역 내에서 적당히 빠른 속도의 물리적 통신 채널을 통하여 서로가 직접 통신할 수 있도록 지원해 주는 데이터 통신 체계</description></item></channel></rss>