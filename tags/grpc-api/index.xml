<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – GRPC-API</title><link>https://buenhyden.github.io/tags/grpc-api/</link><description>Recent content in GRPC-API on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 03 Oct 2024 03:22:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/grpc-api/index.xml" rel="self" type="application/rss+xml"/><item><title>gRPC API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/grpc-api/</link><pubDate>Thu, 03 Oct 2024 03:22:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/grpc-api/</guid><description>
&lt;h2>gRPC API&lt;/h2>&lt;p> gRPC(gRPC Remote Procedure Call)는 Google에서 개발한 오픈소스 원격 프로시저 호출(RPC) 시스템.&lt;br>
 이 시스템은 효율적이고 빠른 서비스 간 통신을 제공하며, 다양한 프로그래밍 언어와 플랫폼에서 사용할 수 있다.&lt;/p>
&lt;p>gRPC는 특히 다음과 같은 상황에서 유용하다:&lt;/p>
&lt;ol>
&lt;li>마이크로서비스 아키텍처
&lt;ul>
&lt;li>서비스 간 효율적인 통신&lt;/li>
&lt;li>강력한 타입 안정성&lt;/li>
&lt;li>뛰어난 성능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>실시간 통신이 필요한 시스템
&lt;ul>
&lt;li>채팅 애플리케이션&lt;/li>
&lt;li>실시간 모니터링&lt;/li>
&lt;li>게임 서버&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모바일 애플리케이션
&lt;ul>
&lt;li>효율적인 데이터 전송&lt;/li>
&lt;li>배터리 사용량 최적화&lt;/li>
&lt;li>네트워크 대역폭 절약&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>gRPC의 주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Protocol Buffers 사용&lt;/strong>: gRPC는 데이터 직렬화를 위해 Protocol Buffers를 사용합니다. 이는 JSON이나 XML보다 더 작고 빠른 데이터 포맷을 제공합니다.&lt;/li>
&lt;li>&lt;strong>HTTP/2 기반&lt;/strong>: HTTP/2 프로토콜을 사용하여 높은 성능과 낮은 지연 시간을 제공합니다.&lt;/li>
&lt;li>&lt;strong>양방향 스트리밍&lt;/strong>: 클라이언트와 서버 간의 양방향 스트리밍을 지원하여 실시간 데이터 교환이 가능합니다.&lt;/li>
&lt;li>&lt;strong>다양한 언어 지원&lt;/strong>: Java, Python, Go, C++, Ruby 등 다양한 프로그래밍 언어를 지원합니다.&lt;/li>
&lt;li>&lt;strong>강력한 타입 시스템&lt;/strong>: Protocol Buffers를 통해 강력한 타입 시스템을 제공하여 타입 안정성을 보장합니다.&lt;/li>
&lt;/ol>
&lt;h3>gRPC 작동 방식&lt;/h3>&lt;ol>
&lt;li>&lt;strong>서비스 정의&lt;/strong>:.proto 파일에 서비스와 메시지 구조를 정의합니다.&lt;/li>
&lt;li>&lt;strong>코드 생성&lt;/strong>: Protocol Buffer 컴파일러를 사용하여 서버와 클라이언트 코드를 자동으로 생성합니다.&lt;/li>
&lt;li>&lt;strong>서버 구현&lt;/strong>: 생성된 코드를 기반으로 서버 비즈니스 로직을 구현합니다.&lt;/li>
&lt;li>&lt;strong>클라이언트 구현&lt;/strong>: 생성된 클라이언트 코드를 사용하여 서버와 통신합니다.&lt;/li>
&lt;/ol>
&lt;h3>gRPC의 통신 유형&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Unary RPC&lt;/strong>: 클라이언트가 단일 요청을 보내고 서버가 단일 응답을 반환합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">GetUser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Server Streaming RPC&lt;/strong>: 클라이언트가 요청을 보내고 서버가 스트림으로 응답합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">StreamUserActivity&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">UserActivity&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Client Streaming RPC&lt;/strong>: 클라이언트가 스트림으로 요청을 보내고 서버가 단일 응답을 반환합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">BulkUpdateUsers&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">UpdateUserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">BulkUpdateResponse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Bidirectional Streaming RPC&lt;/strong>: 클라이언트와 서버가 양방향으로 스트림을 주고받습니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">ChatSession&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">ChatMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">ChatMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>gRPC의 장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>높은 성능&lt;/strong>: Protocol Buffers와 HTTP/2를 사용하여 빠른 데이터 전송을 제공합니다.&lt;/li>
&lt;li>&lt;strong>언어 중립성&lt;/strong>: 다양한 프로그래밍 언어를 지원하여 다중 언어 환경에서 사용이 용이합니다.&lt;/li>
&lt;li>&lt;strong>강력한 타입 안정성&lt;/strong>: Protocol Buffers를 통해 데이터 구조를 명확히 정의할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>효율적인 네트워크 사용&lt;/strong>: 이진 직렬화를 통해 네트워크 대역폭을 효율적으로 사용합니다.&lt;/li>
&lt;li>&lt;strong>실시간 통신&lt;/strong>: 양방향 스트리밍을 통해 실시간 데이터 교환이 가능합니다[5].&lt;/li>
&lt;/ol>
&lt;h3>도입할 때 고려해야 할 사항&lt;/h3>&lt;ol>
&lt;li>
&lt;p>브라우저 지원 제한&lt;/p>
&lt;ul>
&lt;li>웹 클라이언트의 경우 gRPC-Web 사용 필요&lt;/li>
&lt;li>프록시 서버 설정 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>학습 곡선&lt;/p>
&lt;ul>
&lt;li>Protocol Buffers 학습 필요&lt;/li>
&lt;li>새로운 도구와 패턴 적응&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>디버깅 복잡성&lt;/p>
&lt;ul>
&lt;li>바이너리 형식으로 인한 가독성 제한&lt;/li>
&lt;li>특수한 디버깅 도구 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>