<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>GRPC-API on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/grpc-api/</link>
    <description>Recent content in GRPC-API on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.1</generator>
    <language>en</language>
    <lastBuildDate>Mon, 31 Mar 2025 08:43:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/grpc-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Error Handling</title>
      <link>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/error-handling/</link>
      <pubDate>Mon, 31 Mar 2025 08:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/error-handling/</guid>
      <description>gRPC는 이러한 다양한 오류 상황을 일관되고 체계적으로 처리하기 위한 포괄적인 오류 처리 메커니즘을 제공한다.</description>
    </item>
    <item>
      <title>Protocol Buffers</title>
      <link>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/protocol-buffers/</link>
      <pubDate>Fri, 28 Feb 2025 04:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/protocol-buffers/</guid>
      <description>Protocol Buffers(이하 protobuf)는 Google에서 개발한 언어 중립적, 플랫폼 중립적, 확장 가능한 구조화된 데이터 직렬화 메커니즘이다.</description>
    </item>
    <item>
      <title>gRPC API vs. gRPC</title>
      <link>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/grpc-api-vs-grpc/</link>
      <pubDate>Fri, 28 Feb 2025 03:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/grpc-api-vs-grpc/</guid>
      <description>gRPC는 기술적 프레임워크이고, gRPC API는 이 프레임워크를 사용하여 구축된 실제 응용 프로그램 인터페이스이다.</description>
    </item>
    <item>
      <title>gRPC API</title>
      <link>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/</link>
      <pubDate>Sat, 19 Oct 2024 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-styles/tunnel-style/rpc-based/grpc/</guid>
      <description>gRPC는 Google에서 개발한 고성능, 오픈소스 RPC(Remote Procedure Call) 프레임워크이다.</description>
    </item>
  </channel>
</rss>
