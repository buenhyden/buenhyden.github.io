<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming-Languages :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/programming-languages.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Fri, 17 Jan 2025 09:07:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/programming-languages/index.xml" rel="self" type="application/rss+xml"/><item><title>setup.cfg vs pyproject.toml</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg-vs-pyproject.toml.html</link><pubDate>Mon, 21 Oct 2024 14:29:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg-vs-pyproject.toml.html</guid><description>Python 프로젝트의 구성과 메타데이터를 정의하는 파일 형식이다.</description></item><item><title>Python</title><link>https://buenhyden.github.io/posts/programming-languages/python.html</link><pubDate>Thu, 10 Oct 2024 01:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python.html</guid><description>다양한 특징을 가진 강력하고 유연한 프로그래밍 언어</description></item><item><title>Javascript</title><link>https://buenhyden.github.io/posts/programming-languages/javascript.html</link><pubDate>Thu, 10 Oct 2024 01:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript.html</guid><description>웹 개발에서 널리 사용되는 프로그래밍 언어</description></item><item><title>Java</title><link>https://buenhyden.github.io/posts/programming-languages/java.html</link><pubDate>Wed, 16 Oct 2024 01:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/java.html</guid><description>제임스 고슬링(James Gosling)과 썬 마이크로시스템즈(Sun Microsystems)에서 개발한 객체 지향 프로그래밍 언어.</description></item><item><title>Golang</title><link>https://buenhyden.github.io/posts/programming-languages/golang.html</link><pubDate>Wed, 16 Oct 2024 01:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/golang.html</guid><description>2009년 Google에서 개발한 오픈소스 프로그래밍 언어로, C의 단순함과 현대 프로그래밍 언어의 기능을 결합하여 만들어졌으며 특히 동시성 프로그래밍을 쉽게 구현할 수 있도록 설계되었다.</description></item><item><title>Kotlin</title><link>https://buenhyden.github.io/posts/programming-languages/kotlin.html</link><pubDate>Wed, 16 Oct 2024 01:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/kotlin.html</guid><description>JetBrains사가 2011년에 개발을 시작하여 2016년에 1.0 버전을 출시한 비교적 새로운 프로그래밍 언어</description></item><item><title>Programming Language Control Structures</title><link>https://buenhyden.github.io/til/2025/01/programming-language-control-structures.html</link><pubDate>Mon, 13 Jan 2025 11:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2025/01/programming-language-control-structures.html</guid><description>프로그래밍에서 코드의 실행 흐름을 제어하는 핵심적인 구문이다.</description></item><item><title>Iteration vs Recursion</title><link>https://buenhyden.github.io/til/2025/01/iteration-vs-recursion.html</link><pubDate>Mon, 13 Jan 2025 11:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2025/01/iteration-vs-recursion.html</guid><description>Iteration과 Recursion은 프로그래밍에서 반복적인 작업을 수행하는 두 가지 주요 방식이다.</description></item><item><title>Process vs Thread vs Coroutine</title><link>https://buenhyden.github.io/til/2024/10/process-vs-thread-vs-coroutine.html</link><pubDate>Mon, 14 Oct 2024 08:30:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/10/process-vs-thread-vs-coroutine.html</guid><description>Process란 실행 중인 프로그램의 인스턴스를 이야기하며, Thread란 프로세스 내에서 실행되는 더 작은 실행 단위를 말한다.</description></item><item><title>Programming Languages and Frameworks</title><link>https://buenhyden.github.io/til/2024/10/programming-languages-and-frameworks.html</link><pubDate>Mon, 21 Oct 2024 08:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/10/programming-languages-and-frameworks.html</guid><description>Python, Node.js, Spring을 비교하고 특징 및 장단점을 서술한다.</description></item><item><title>Callback vs Promise vs Async/Await</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/callback-vs-promise-vs-async-await.html</link><pubDate>Fri, 17 Jan 2025 09:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/callback-vs-promise-vs-async-await.html</guid><description>JavaScript의 비동기 처리 방식</description></item><item><title>Poetry vs uv vs Rye</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry-vs-uv-vs-rye.html</link><pubDate>Wed, 15 Jan 2025 06:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry-vs-uv-vs-rye.html</guid><description>파이썬 프로젝트 관리와 패키지 설치를 위한 도구들</description></item><item><title>Greenlet and Gevent</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/concurrency/greenlet-and-gevent.html</link><pubDate>Wed, 15 Jan 2025 05:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/concurrency/greenlet-and-gevent.html</guid><description>Greenlet과 Gevent는 Python에서 동시성 프로그래밍을 위한 라이브러리이다.</description></item><item><title>Rye</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/rye.html</link><pubDate>Wed, 15 Jan 2025 04:19:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/rye.html</guid><description>Rye는 파이썬 프로젝트와 패키지 관리를 위한 통합 솔루션으로, 2022년 11월에 Pynecone이라는 이름으로 처음 공개되었으나, 2023년 6월에 Rye로 이름이 변경되었다.</description></item><item><title>uv</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/uv.html</link><pubDate>Wed, 15 Jan 2025 04:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/uv.html</guid><description>Rust로 작성된 UV는 기존의 pip, pip-tools, virtualenv 등을 대체할 수 있는 초고속 파이썬 패키지 설치 및 의존성 해결 도구이다.</description></item><item><title>Exception Handling</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/exception-handling.html</link><pubDate>Sat, 11 Jan 2025 15:08:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/exception-handling.html</guid><description>예외 처리(Exception Handling)는 프로그램 실행 중 발생할 수 있는 예기치 못한 상황을 관리하는 중요한 프로그래밍 개념이다.</description></item><item><title>조건문 (Conditional Statements)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/conditional-statements.html</link><pubDate>Sat, 11 Jan 2025 15:08:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/conditional-statements.html</guid><description>조건문(Conditional Statements)은 프로그램의 흐름을 제어하는 중요한 구조이다.</description></item><item><title>Karma</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/karma.html</link><pubDate>Sat, 04 Jan 2025 06:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/karma.html</guid><description>Karma는 모든 브라우저에서 JavaScript 코드를 테스트할 수 있게 해주는 테스트 러너이다.</description></item><item><title>NextJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nextjs.html</link><pubDate>Tue, 24 Dec 2024 11:42:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nextjs.html</guid><description>NextJS는 React 기반의 풀스택 웹 프레임워크로, React의 장점을 모두 활용하면서도, 서버 사이드 렌더링(SSR)과 정적 사이트 생성(SSG)과 같은 고급 기능들을 손쉽게 구현할 수 있게 해준다.</description></item><item><title>Typescript</title><link>https://buenhyden.github.io/posts/programming-languages/typescript.html</link><pubDate>Tue, 24 Dec 2024 11:22:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/typescript.html</guid><description>TypeScript는 Microsoft가 개발한 오픈소스 프로그래밍 언어로, JavaScript의 상위 집합(superset)으로, JavaScript의 모든 기능을 포함하면서 정적 타입 시스템을 추가</description></item><item><title>VueJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/vuejs.html</link><pubDate>Tue, 24 Dec 2024 04:48:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/vuejs.html</guid><description>Vue.js는 사용자 인터페이스를 구축하기 위한 진보적이고 가벼운 JavaScript 프레임워크이다.</description></item><item><title>Python Super</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-super.html</link><pubDate>Sat, 21 Dec 2024 02:00:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-super.html</guid><description>super()는 상속 관계에서 부모 클래스의 메서드를 호출하는 데 사용되는 중요한 도구.</description></item><item><title>ReactJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/library/reactjs.html</link><pubDate>Thu, 19 Dec 2024 13:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/library/reactjs.html</guid><description>React는 사용자 인터페이스를 구축하기 위한 현대적인 JavaScript 라이브러리로, Facebook(현 Meta)에서 개발했다.</description></item><item><title>Event Loop</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/event-loop.html</link><pubDate>Tue, 17 Dec 2024 12:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/event-loop.html</guid><description>이벤트 루프(Event Loop)는 자바스크립트의 비동기 작업을 관리하고 실행하는 핵심 메커니즘으로, 싱글 스레드 언어인 자바스크립트가 비동기적으로 동작할 수 있게 해주는 중요한 요소이다.</description></item><item><title>pm2</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/package/pm2.html</link><pubDate>Mon, 16 Dec 2024 12:31:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/pm2.html</guid><description>PM2는 Node.js 애플리케이션을 위한 고급 프로덕션 프로세스 관리자.</description></item><item><title>Spring Boot</title><link>https://buenhyden.github.io/posts/programming-languages/java/web-framework/spring-boot.html</link><pubDate>Mon, 16 Dec 2024 04:36:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/java/web-framework/spring-boot.html</guid><description>Spring 프레임워크를 기반으로 한 Java 애플리케이션 개발을 더욱 쉽고 빠르게 만들어주는 도구</description></item><item><title>Mongoose</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/package/mongoose.html</link><pubDate>Sun, 15 Dec 2024 15:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/mongoose.html</guid><description>MongoDB와 Node.js 애플리케이션을 연결해주는 강력한 Object Document Mapper(ODM) 라이브러리</description></item><item><title>Sequelize</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/package/sequelize.html</link><pubDate>Sun, 15 Dec 2024 15:47:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/sequelize.html</guid><description>Node.js 환경에서 사용되는 강력한 ORM(Object-Relational Mapping) 라이브러리</description></item><item><title>Fastify</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/fastify.html</link><pubDate>Sun, 15 Dec 2024 13:22:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/fastify.html</guid><description>Fastify는 Node.js를 위한 빠르고 낮은 오버헤드의 웹 프레임워크</description></item><item><title>Koa</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/koa.html</link><pubDate>Sun, 15 Dec 2024 13:22:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/koa.html</guid><description>Node.js를 위한 경량 웹 프레임워크로, Express.js 팀에 의해 개발되었다. Koa는 더 작고, 더 표현력이 풍부하며, 더 강력한 웹 애플리케이션과 API의 기초를 제공하기 위해 설계되었다.</description></item><item><title>Spring</title><link>https://buenhyden.github.io/posts/programming-languages/java/framework/spring.html</link><pubDate>Sun, 08 Dec 2024 09:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/java/framework/spring.html</guid><description>Spring은 Java 기반의 현대적인 엔터프라이즈 애플리케이션 개발을 위한 포괄적인 프레임워크</description></item><item><title>Junit</title><link>https://buenhyden.github.io/posts/programming-languages/java/testing/junit.html</link><pubDate>Sun, 08 Dec 2024 00:23:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/java/testing/junit.html</guid><description>Java 프로그래밍 언어를 위한 가장 널리 사용되는 단위 테스트(Unit Testing) 프레임워크</description></item><item><title>winston</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/package/winston.html</link><pubDate>Sat, 07 Dec 2024 15:53:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/winston.html</guid><description>Winston은 Node.js 애플리케이션을 위한 다목적 로깅 라이브러리</description></item><item><title>pino</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/package/pino.html</link><pubDate>Sat, 07 Dec 2024 15:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/package/pino.html</guid><description>Node.js를 위한 매우 빠르고 가벼운 로깅 라이브러리</description></item><item><title>Biome</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/biome.html</link><pubDate>Sat, 07 Dec 2024 15:19:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/biome.html</guid><description>JavaScript, TypeScript, JSX, TSX, JSON, CSS, GraphQL 등 다양한 웹 개발 언어를 위한 빠른 포매터이자 린터</description></item><item><title>eslint</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/eslint.html</link><pubDate>Sat, 07 Dec 2024 15:15:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/eslint.html</guid><description>JavaScript 코드 분석 도구로, 코드의 품질을 향상시키고 잠재적인 문제를 미리 발견하는 것이 주요 목적</description></item><item><title>prettier</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/prettier.html</link><pubDate>Sat, 07 Dec 2024 15:15:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter/prettier.html</guid><description>JavaScript를 포함한 여러 웹 개발 언어를 위한 강력한 코드 포매터</description></item><item><title>Javascript Linter와 Formatter</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter.html</link><pubDate>Sat, 07 Dec 2024 13:55:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/linter-and-formatter.html</guid><description>Javascript에서 활용할 수 있는 소스 코드에서 문법 오류나 스타일 문제, 잠재적인 버그를 자동으로 검사해주는 도구</description></item><item><title>Javascript Testing</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing.html</link><pubDate>Thu, 05 Dec 2024 06:48:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing.html</guid><description>Javascript에서 활용할 수 있는 다양한 테스팅 도구</description></item><item><title>Cypress</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/cypress.html</link><pubDate>Wed, 04 Dec 2024 23:53:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/cypress.html</guid><description>Cypress는 JavaScript 기반의 강력한 프론트엔드 테스팅 프레임워크.</description></item><item><title>Jest</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jest.html</link><pubDate>Wed, 04 Dec 2024 23:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jest.html</guid><description>JavaScript 테스팅 프레임워크로, JavaScript 코드의 단위 테스트(Unit Test)를 위해 설계되었다.</description></item><item><title>MochaJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/mochajs.html</link><pubDate>Wed, 04 Dec 2024 23:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/mochajs.html</guid><description>Mocha.js는 Node.js와 브라우저 환경 모두에서 동작하는 유연하고 강력한 JavaScript 코드의 단위 테스트, 통합 테스트 등을 위한 JavaScript 테스팅 프레임워크.</description></item><item><title>Playwright</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/playwright.html</link><pubDate>Wed, 04 Dec 2024 23:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/playwright.html</guid><description>Playwright는 Microsoft에서 개발한 현대적이고 강력한 웹 자동화 및 테스팅 라이브러리</description></item><item><title>Puppeteer</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/puppeteer.html</link><pubDate>Wed, 04 Dec 2024 23:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/puppeteer.html</guid><description>Google에서 개발한 Node.js 라이브러리로, 프로그래밍을 통해 Chrome 또는 Chromium 브라우저를 제어할 수 있게 해주는 고급 웹 자동화 도구</description></item><item><title>jasmine</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jasmine.html</link><pubDate>Wed, 04 Dec 2024 06:17:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/testing/jasmine.html</guid><description>Jasmine은 JavaScript 애플리케이션을 위한 행위 주도 개발(BDD) 스타일의 테스팅 프레임워크</description></item><item><title>라이브러리 (Library)와 프레임워크 (Framework)</title><link>https://buenhyden.github.io/til/2024/12/library-and-framework.html</link><pubDate>Tue, 03 Dec 2024 06:47:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/library-and-framework.html</guid><description>라이브러리(Library)는 특정 기능을 수행하는 코드의 모음이고, 프레임워크(Framework)는 애플리케이션 개발의 기본 구조를 제공한다.</description></item><item><title>jsdoc</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/jsdoc.html</link><pubDate>Mon, 02 Dec 2024 11:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/jsdoc.html</guid><description>JSDoc은 JavaScript 소스 코드에 대한 API 문서를 생성하기 위한 마크업 언어.</description></item><item><title>가비지 컬렉션 (Garbage Collection, GC)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/garbage-collection.html</link><pubDate>Sun, 01 Dec 2024 10:19:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/garbage-collection.html</guid><description>프로그래밍 언어의 메모리 관리 기법 중 하나로, 프로그램이 동적으로 할당했던 메모리 영역 중에서 더 이상 사용하지 않는 영역을 자동으로 찾아내어 해제하는 기능</description></item><item><title>Starlette</title><link>https://buenhyden.github.io/posts/programming-languages/python/web-framework/starlette.html</link><pubDate>Mon, 18 Nov 2024 03:01:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework/starlette.html</guid><description>고성능 비동기 웹 애플리케이션을 구축하기 위한 경량 ASGI 프레임워크</description></item><item><title>Django</title><link>https://buenhyden.github.io/posts/programming-languages/python/web-framework/django.html</link><pubDate>Mon, 18 Nov 2024 02:57:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework/django.html</guid><description>웹 개발에 필요한 모든 요소를 포함하는 풀 스택 프레임워크</description></item><item><title>Flask</title><link>https://buenhyden.github.io/posts/programming-languages/python/web-framework/flask.html</link><pubDate>Mon, 18 Nov 2024 02:57:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework/flask.html</guid><description>"마이크로 프레임워크"라고 불리는 Flask는 핵심 기능만을 가볍게 유지하면서도 필요에 따라 확장할 수 있는 유연한 구조를 제공한다.</description></item><item><title>FastAPI</title><link>https://buenhyden.github.io/posts/programming-languages/python/web-framework/fastapi.html</link><pubDate>Mon, 18 Nov 2024 02:56:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework/fastapi.html</guid><description>Python 3.6+ 의 타입 힌트를 기반으로 하며, 비동기 프로그래밍을 지원하는 고성능 웹 프레임워크</description></item><item><title>Python Web Application Server</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/python-web-application-server.html</link><pubDate>Sun, 17 Nov 2024 14:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/python-web-application-server.html</guid><description>gunicorn, uwsgi, daphne, uvicorn은 모두 Python 웹 애플리케이션을 실행하고 서비스하기 위한 서버 프로그램들이다.</description></item><item><title>VueJS vs ReactJS vs NextJS</title><link>https://buenhyden.github.io/til/2024/11/vuejs-vs-reactjs-vs-nextjs.html</link><pubDate>Sun, 17 Nov 2024 04:51:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/11/vuejs-vs-reactjs-vs-nextjs.html</guid><description>VueJS, ReactJS, NextJS는 현대 웹 개발에서 사용되는 주요 프론트엔드 프레임워크와 라이브러리들이다.</description></item><item><title>ExpressJS vs NestJS</title><link>https://buenhyden.github.io/til/2024/11/expressjs-vs-nestjs.html</link><pubDate>Sun, 17 Nov 2024 04:50:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/11/expressjs-vs-nestjs.html</guid><description>Express.js와 Nest.js는</description></item><item><title>daphne</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/daphne.html</link><pubDate>Sat, 16 Nov 2024 08:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/daphne.html</guid><description>Daphne는 Django Channels를 위해 개발된 HTTP, HTTP2 및 WebSocket 프로토콜 서버이다.</description></item><item><title>uvicorn</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uvicorn.html</link><pubDate>Sat, 16 Nov 2024 08:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uvicorn.html</guid><description>Uvicorn은 Python용 ASGI(Asynchronous Server Gateway Interface) 웹 서버 구현체이다.</description></item><item><title>gunicorn</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/gunicorn.html</link><pubDate>Sat, 16 Nov 2024 03:37:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/gunicorn.html</guid><description>Gunicorn(Green Unicorn)은 Python WSGI(Web Server Gateway Interface) HTTP 서버로, 파이썬 웹 애플리케이션을 위한 강력하고 효율적인 서버 솔루션이다.</description></item><item><title>UWSGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uwsgi.html</link><pubDate>Sat, 16 Nov 2024 03:36:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uwsgi.html</guid><description>파이썬 웹 애플리케이션을 위한 강력하고 유연한 애플리케이션 서버</description></item><item><title>ASGI CGI WSGI</title><link>https://buenhyden.github.io/til/2024/11/asgi-cgi-wsgi-%EB%B9%84%EA%B5%90.html</link><pubDate>Sat, 16 Nov 2024 03:26:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/11/asgi-cgi-wsgi-%EB%B9%84%EA%B5%90.html</guid><description>웹 서버와 애플리케이션 간의 통신 방식을 정의하는 인터페이스 규격</description></item><item><title>ASGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/asgi.html</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/asgi.html</guid><description>Python 웹 애플리케이션과 웹 서버 간의 비동기 통신을 위한 표준 인터페이스</description></item><item><title>CGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/cgi.html</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/cgi.html</guid><description>웹 서버와 외부 프로그램 간의 통신을 위한 표준 인터페이스</description></item><item><title>WSGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/wsgi.html</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/wsgi.html</guid><description>파이썬 웹 애플리케이션과 웹 서버 간의 표준 인터페이스를 정의하는 규약</description></item><item><title>Python Lambda</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-lambda.html</link><pubDate>Fri, 15 Nov 2024 11:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-lambda.html</guid><description>익명 함수를 생성하는 강력한 도구</description></item><item><title>Modin</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/modin.html</link><pubDate>Fri, 15 Nov 2024 07:13:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/modin.html</guid><description>pandas를 대체할 수 있는 고성능 데이터프레임 라이브러리</description></item><item><title>Dask</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/dask.html</link><pubDate>Fri, 15 Nov 2024 07:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/dask.html</guid><description>파이썬을 위한 유연한 병렬 컴퓨팅 라이브러리</description></item><item><title>Polars</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/polars.html</link><pubDate>Fri, 15 Nov 2024 07:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/polars.html</guid><description>고성능 데이터 처리를 위해 설계된 파이썬 DataFrame 라이브러리</description></item><item><title>Numpy</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/numpy.html</link><pubDate>Fri, 15 Nov 2024 07:08:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/numpy.html</guid><description>파이썬에서 과학 계산을 위한 핵심 라이브러리.</description></item><item><title>pandas</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/pandas.html</link><pubDate>Fri, 15 Nov 2024 05:56:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/pandas.html</guid><description>데이터를 다루기 위한 강력한 도구로, 엑셀의 스프레드시트와 비슷한 형태로 데이터를 처리할 수 있게 해준다.</description></item><item><title>pydantic</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-validation/pydantic.html</link><pubDate>Fri, 15 Nov 2024 03:01:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-validation/pydantic.html</guid><description>데이터 검증과 설정 관리를 위한 라이브러리</description></item><item><title>Pytest</title><link>https://buenhyden.github.io/posts/programming-languages/python/testing/pytest.html</link><pubDate>Thu, 14 Nov 2024 23:55:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/testing/pytest.html</guid><description>파이썬을 위한 강력하고 유연한 테스트 프레임워크</description></item><item><title>Unittest</title><link>https://buenhyden.github.io/posts/programming-languages/python/testing/unittest.html</link><pubDate>Thu, 14 Nov 2024 23:55:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/testing/unittest.html</guid><description>파이썬의 표준 라이브러리에 포함된 단위 테스트 프레임워크</description></item><item><title>Python Testing</title><link>https://buenhyden.github.io/posts/programming-languages/python/testing.html</link><pubDate>Thu, 14 Nov 2024 14:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/testing.html</guid><description>Python에서 활용할 수 있는 다양한 테스팅 도구</description></item><item><title>Python Linter와 Formatter</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/python-linter%EC%99%80-formatter.html</link><pubDate>Wed, 13 Nov 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/python-linter%EC%99%80-formatter.html</guid><description>Python에서 활용할 수 있는 소스 코드에서 문법 오류나 스타일 문제, 잠재적인 버그를 자동으로 검사해주는 도구</description></item><item><title>Python Keywords</title><link>https://buenhyden.github.io/posts/programming-languages/python/keywords/python-keywords.html</link><pubDate>Wed, 13 Nov 2024 10:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/keywords/python-keywords.html</guid><description>파이썬에서 이미 예약되어있는 문자열</description></item><item><title>ruff</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/ruff.html</link><pubDate>Wed, 13 Nov 2024 08:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/ruff.html</guid><description>Python 코드 품질을 개선하기 위한 린터</description></item><item><title>autopep8</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/autopep8.html</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/autopep8.html</guid><description>Python 코드를 PEP 8 스타일 가이드라인에 맞게 자동으로 포맷팅해주는 도구</description></item><item><title>Black</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/black.html</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/black.html</guid><description>파이썬을 위한 강력하고 엄격한 코드 포매터</description></item><item><title>Flake8</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/flake8.html</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/flake8.html</guid><description>파이썬 코드를 위한 강력한 린팅(linting) 도구</description></item><item><title>YAPF(Yet Another Python Formatter)</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/yapf.html</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/yapf.html</guid><description>Google에서 개발한 파이썬 코드 포매터.</description></item><item><title>Pylint</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/pylint.html</link><pubDate>Wed, 13 Nov 2024 03:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/pylint.html</guid><description>파이썬 코드의 품질을 검사하고 개선하는데 도움을 주는 강력한 정적 코드 분석 도구</description></item><item><title>반복문(Iteration)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/iteration.html</link><pubDate>Tue, 12 Nov 2024 15:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/iteration.html</guid><description>특정 코드 블록을 여러 번 실행하는 제어 구조이다.</description></item><item><title>재귀 (Recursion)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/recursion.html</link><pubDate>Tue, 12 Nov 2024 15:05:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/recursion.html</guid><description>재귀(Recursion)는 컴퓨터 프로그래밍에서 함수가 자기 자신을 호출하여 문제를 해결하는 방식으로, 큰 문제를 동일한 형태의 작은 문제로 나누어 해결하는 방법이다.</description></item><item><title>프로미스(Promise)</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/promise.html</link><pubDate>Tue, 12 Nov 2024 14:54:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/promise.html</guid><description>자바스크립트에서 비동기 처리를 위해 사용되는 객체</description></item><item><title>Callback Function (콜백 함수)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/callback-function.html</link><pubDate>Tue, 12 Nov 2024 12:45:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/callback-function.html</guid><description>프로그래밍에서 다른 함수의 인수로 전달되어 특정 작업이 완료된 후 호출되는 함수</description></item><item><title>Blocking vs Non-Blocking</title><link>https://buenhyden.github.io/til/2024/11/blocking-vs-non-blocking.html</link><pubDate>Tue, 12 Nov 2024 12:36:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/11/blocking-vs-non-blocking.html</guid><description>프로그래밍에서 작업 처리 방식에 따라 프로그램의 실행 흐름이 어떻게 영향을 받는지를 설명하는 개념.</description></item><item><title>동기(Synchronous)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/synchronous.html</link><pubDate>Tue, 12 Nov 2024 00:57:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/synchronous.html</guid><description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description></item><item><title>동기(Synchronous)와 비동기(Asynchronous)</title><link>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous.html</link><pubDate>Tue, 12 Nov 2024 00:57:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous.html</guid><description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description></item><item><title>비동기(Asynchronous)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/asynchronous.html</link><pubDate>Tue, 12 Nov 2024 00:57:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/asynchronous.html</guid><description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description></item><item><title>NestJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nestjs.html</link><pubDate>Sun, 10 Nov 2024 01:48:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/nestjs.html</guid><description>Nest.js는 효율적이고 확장 가능한 Node.js 서버 측 애플리케이션을 구축하기 위한 프레임워크</description></item><item><title>Javascript Web Framework</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework.html</link><pubDate>Thu, 07 Nov 2024 09:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework.html</guid><description>Javascript Web Framework의 프론트엔드 영역과 백엔드 영역의 대표적인 프레임워크와 라이브러리에 대해 비교분석해본다.</description></item><item><title>NodeJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/nodejs.html</link><pubDate>Thu, 07 Nov 2024 04:45:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/nodejs.html</guid><description>Chrome V8 JavaScript 엔진으로 빌드된 JavaScript 런타임 환경</description></item><item><title>Python Web Framework</title><link>https://buenhyden.github.io/posts/programming-languages/python/web-framework.html</link><pubDate>Thu, 07 Nov 2024 04:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework.html</guid><description>동적 웹사이트, 웹 서비스 및 웹 애플리케이션의 개발을 지원하기 위해 만들어진 소프트웨어 프레임워크</description></item><item><title>ExpressJS</title><link>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/expressjs.html</link><pubDate>Thu, 07 Nov 2024 03:39:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/javascript/web-framework/expressjs.html</guid><description>Express.js는 Node.js를 위한 빠르고 개방적인 웹 프레임워크</description></item><item><title>SQLAlchemy</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/orm/sqlalchemy.html</link><pubDate>Wed, 06 Nov 2024 09:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/orm/sqlalchemy.html</guid><description>파이썬에서 사용되는 강력하고 유연한 SQL 툴킷 및 객체 관계 매핑(ORM) 라이브러리</description></item><item><title>Docstring</title><link>https://buenhyden.github.io/posts/programming-languages/python/docstring.html</link><pubDate>Tue, 29 Oct 2024 03:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/docstring.html</guid><description>python에서 함수, 클래스, 모듈에 대한 문서화를 위해 사용되는 문자열</description></item><item><title>Python - Decorators</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-decorators.html</link><pubDate>Fri, 25 Oct 2024 17:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-decorators.html</guid><description>함수나 메서드를 수정하지 않고 기능을 확장하거나 변경할 수 있는 강력한 도구</description></item><item><title>Python - Iterators</title><link>https://buenhyden.github.io/posts/programming-languages/python/objects/python-iterators.html</link><pubDate>Fri, 25 Oct 2024 17:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/objects/python-iterators.html</guid><description>데이터 컬렉션의 요소들을 순차적으로 접근할 수 있게 해주는 객체</description></item><item><title>classmethod and staticmethod</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/classmethod-and-staticmethod.html</link><pubDate>Fri, 25 Oct 2024 12:39:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/classmethod-and-staticmethod.html</guid><description>Python의 클래스에서 사용되는 두 가지 다른 종류의 메서드 데코레이터</description></item><item><title>Python - Generators</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-generators.html</link><pubDate>Fri, 25 Oct 2024 08:29:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-generators.html</guid><description>반복 가능한 객체를 생성하는 강력한 도구</description></item><item><title>내장 데코레이터 (Built-in Decorators)</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-%EB%82%B4%EC%9E%A5-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0.html</link><pubDate>Fri, 25 Oct 2024 07:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-%EB%82%B4%EC%9E%A5-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0.html</guid><description>파이썬에는 다양한 내장 데코레이터가 있으며, 이들은 코드를 최적화하고 기능을 확장하는 데 중요한 역할을 한다.</description></item><item><title>Python-Special Methods</title><link>https://buenhyden.github.io/posts/programming-languages/python/objects/python-special-methods.html</link><pubDate>Thu, 24 Oct 2024 23:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/objects/python-special-methods.html</guid><description>클래스에 특별한 기능을 부여하는 특수한 메소드</description></item><item><title>Generator and Iterator</title><link>https://buenhyden.github.io/posts/programming-languages/python/generator-and-iterator.html</link><pubDate>Thu, 24 Oct 2024 10:43:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/generator-and-iterator.html</guid><description>제너레이터와 이터레이터의 주요 차이점</description></item><item><title>Method Resolution Order (MRO)</title><link>https://buenhyden.github.io/posts/programming-languages/python/method-resolution-order.html</link><pubDate>Thu, 24 Oct 2024 01:40:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/method-resolution-order.html</guid><description>파이썬에서 클래스의 상속 관계에서 메서드를 찾는 순서를 정의하는 규칙</description></item><item><title>Python 연산자</title><link>https://buenhyden.github.io/posts/programming-languages/python/operators/python-%EC%97%B0%EC%82%B0%EC%9E%90.html</link><pubDate>Thu, 24 Oct 2024 00:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/operators/python-%EC%97%B0%EC%82%B0%EC%9E%90.html</guid><description>연산자는 프로그래밍의 기본적인 구성 요소로, 데이터를 조작하고 계산하는 데 사용된다.</description></item><item><title>PEP</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep.html</guid><description>Python Enhancement Proposal의 약자로 파이썬 커뮤니티에 새로운 기능을 알리거나 설명하는 설계 문서.</description></item><item><title>PEP 20–The Zen of Python</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-20-the-zen-of-python.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-20-the-zen-of-python.html</guid><description>파이썬의 철학과 디자인 원칙을 담고 있는 19개의 지침.</description></item><item><title>PEP 257–Docstring Conventions</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-257docstring-conventions.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-257docstring-conventions.html</guid><description>Python 코드의 docstring 작성에 대한 규칙과 관례를 정의한 문서</description></item><item><title>PEP 3000–Python 3000</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-3000python-3000.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-3000python-3000.html</guid><description>Python 3000 (Python 3.0 또는 Py3k로도 알려짐) 개발에 대한 가이드라인을 제시하는 문서</description></item><item><title>PEP 3333–Python Web Server Gateway Interface V1.0.1</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-3333python-web-server-gateway-interface-v1.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-3333python-web-server-gateway-interface-v1.html</guid><description>Python Web Server Gateway Interface (WSGI) 버전 1.0.1을 정의하는 문서</description></item><item><title>PEP 484–Type Hints</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-484type-hints.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-484type-hints.html</guid><description>Python에 타입 힌트(Type Hints)를 도입하여 함수의 인자와 반환값에 대한 타입을 명시할 수 있도록 하는 표준을 정의</description></item><item><title>PEP 492–Coroutines with Async and Await Syntax</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-492coroutines-with-async-and-await-syntax.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-492coroutines-with-async-and-await-syntax.html</guid><description>Python에 비동기 프로그래밍을 위한 async와 await 구문을 도입하여 코루틴(coroutine)을 명시적으로 정의하고 사용하는 방법을 제안</description></item><item><title>PEP 8-Style Guide for Python Code</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-8-style-guide-for-python-code.html</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-8-style-guide-for-python-code.html</guid><description>Python 코드의 스타일 가이드로, 가독성과 일관성을 높이기 위한 다양한 규칙과 권장사항을 제시</description></item><item><title>Poetry</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry.html</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry.html</guid><description>Python 프로젝트의 의존성 관리와 패키징을 위한 도구---</description></item><item><title>Poetry Configuration</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-configuration.html</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-configuration.html</guid><description>`config` 명령어나 `config.toml` 파일을 통해 설정할 수 있다.</description></item><item><title>Poetry Libraries</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-libraries.html</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-libraries.html</guid><description>Poetry는 파이썬 라이브러리를 효율적으로 관리하고 배포할 수 있도록 지원하는 도구로 라이브러리를 설치 가능하게 만들기 위해 다음과 같은 절차를 따를 수 있다.</description></item><item><title>Poetry Managing dependencies</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-managing-dependencies.html</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-managing-dependencies.html</guid><description>Poetry는 의존성을 효율적으로 관리하기 위해 다양한 기능을 제공한다.</description></item><item><title>Poetry Usage</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-usage.html</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-usage.html</guid><description>Python 프로젝트의 의존성 관리와 패키징을 위한 도구</description></item><item><title>setup.cfg</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg.html</link><pubDate>Mon, 21 Oct 2024 14:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg.html</guid><description>파이썬 프로젝트의 설정을 관리하는 구성 파일</description></item><item><title>Python GIL</title><link>https://buenhyden.github.io/posts/programming-languages/python/python-gil.html</link><pubDate>Mon, 21 Oct 2024 08:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/python-gil.html</guid><description>Python 객체에 대한 접근을 제어하는 뮤텍스(mutex)로, 한 번에 하나의 스레드만 Python 바이트코드를 실행할 수 있도록 보장</description></item><item><title>The pyproject.toml file</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/the-pyproject.toml-file.html</link><pubDate>Mon, 21 Oct 2024 06:54:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/the-pyproject.toml-file.html</guid><description>Python 프로젝트의 구성 정보와 빌드 시스템 요구 사항을 정의하는 표준화된 구성 파일</description></item><item><title>코루틴(Coroutine)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/coroutine.html</link><pubDate>Mon, 14 Oct 2024 06:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/coroutine.html</guid><description>코루틴은 "협력적인 루틴"이라는 의미로, 여러 작업이 협력하여 실행되는 방식을 말한다. 일반 함수와 달리, 코루틴은 실행 중간에 일시 중단되었다가 나중에 다시 재개될 수 있다.</description></item><item><title>Programming Languages</title><link>https://buenhyden.github.io/posts/programming-languages.html</link><pubDate>Mon, 30 Sep 2024 10:20:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages.html</guid><description>기계(컴퓨터)에게 명령이나 연산을 시킬 목적으로 설계되어 기계와 의사소통을 할 수 있게 해주는 언어</description></item><item><title>인터프리터(Interpreter)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/interpreter.html</link><pubDate>Sat, 28 Sep 2024 05:32:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/interpreter.html</guid><description>프로그래밍 언어의 소스 코드를 직접 실행하는 프로그램 또는 환경</description></item><item><title>컴파일러(Compiler)</title><link>https://buenhyden.github.io/posts/programming-languages/concepts/compiler.html</link><pubDate>Sat, 28 Sep 2024 05:27:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/concepts/compiler.html</guid><description>우리가 작성한 프로그래밍 언어(고급 언어)를 컴퓨터가 이해할 수 있는 기계어(저급 언어)로 번역해주는 특별한 프로그램</description></item></channel></rss>