<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Synchronous-vs-Asynchronous-APIs on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/synchronous-vs-asynchronous-apis/</link>
    <description>Recent content in Synchronous-vs-Asynchronous-APIs on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.4</generator>
    <language>en</language>
    <lastBuildDate>Thu, 06 Mar 2025 15:43:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/synchronous-vs-asynchronous-apis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Synchronous vs Asynchronous APIs</title>
      <link>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-integration-patterns/synchronous-vs-asynchronous-apis/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/api-design-and-implementation/api-integration-patterns/synchronous-vs-asynchronous-apis/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>Asynchronous APIs</title>
      <link>https://buenhyden.github.io/posts/backend-development/backend-fundamentals/request-response-cycle/asynchronous/</link>
      <pubDate>Thu, 06 Mar 2025 15:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/backend-fundamentals/request-response-cycle/asynchronous/</guid>
      <description>비동기식 API의 핵심은 요청과 응답 사이의 시간적 분리이다. 이 패턴에서는 클라이언트가 요청을 보낸 후 즉각적인 응답을 기다리지 않고, 다른 작업을 계속 진행할 수 있다. 서버는 요청을 처리한 후, 다양한 메커니즘을 통해 결과를 클라이언트에게 전달한다.</description>
    </item>
    <item>
      <title>Synchronous APIs</title>
      <link>https://buenhyden.github.io/posts/backend-development/backend-fundamentals/request-response-cycle/synchronous/</link>
      <pubDate>Thu, 06 Mar 2025 15:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/backend-fundamentals/request-response-cycle/synchronous/</guid>
      <description>클라이언트가 요청을 보내고 서버가 해당 요청을 처리한 후 즉시 응답을 반환하는 방식으로 작동한다. 이러한 동기식 통신의 본질은 &amp;#34;요청-응답&amp;#34; 주기가 완료될 때까지 클라이언트가 다른 작업으로 진행하지 않고 대기한다는 점이다.</description>
    </item>
  </channel>
</rss>
