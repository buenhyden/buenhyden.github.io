<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Tabulation</title><link>https://buenhyden.github.io/tags/tabulation/</link><description>Recent content in Tabulation on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 13 Jan 2025 11:25:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/tabulation/index.xml" rel="self" type="application/rss+xml"/><item><title>Memoization vs Tabulation</title><link>https://buenhyden.github.io/til/2025/01/memoization-vs-tabulation/</link><pubDate>Mon, 13 Jan 2025 11:25:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2025/01/memoization-vs-tabulation/</guid><description>
&lt;h2>Memoization Vs Tabulation&lt;span class="hx-absolute -hx-mt-20" id="memoization-vs-tabulation">&lt;/span>
&lt;a href="#memoization-vs-tabulation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Memoization과 Tabulation은 동적 프로그래밍(Dynamic Programming)에서 사용되는 두 가지 주요 최적화 기법이다.&lt;/p>
&lt;p>Memoization(메모이제이션)은 &amp;ldquo;하향식(Top-down)&amp;rdquo; 접근 방식이다.&lt;br>
이는 재귀적으로 문제를 해결하면서, 계산된 결과를 캐시(보통 배열이나 해시 맵)에 저장하여 나중에 같은 입력이 들어왔을 때 재계산하지 않고 저장된 결과를 반환하는 방식이다.&lt;/p>
&lt;p>Tabulation(타뷸레이션)은 &amp;ldquo;상향식(Bottom-up)&amp;rdquo; 접근 방식이다.&lt;br>
가장 작은 하위 문제부터 시작하여 더 큰 문제의 해답을 테이블에 순차적으로 채워나가는 방식이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Tabulation&lt;/th>
&lt;th>Memoization&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>접근 방식&lt;/strong>&lt;/td>
&lt;td>Bottom-up (상향식)&lt;/td>
&lt;td>Top-down (하향식)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>구현 방법&lt;/strong>&lt;/td>
&lt;td>반복문 (Iterative)&lt;/td>
&lt;td>재귀 (Recursive)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메모리 사용&lt;/strong>&lt;/td>
&lt;td>문제 크기만큼 고정&lt;/td>
&lt;td>필요한 만큼 동적 할당&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실행 순서&lt;/strong>&lt;/td>
&lt;td>순차적으로 모든 하위 문제 해결&lt;/td>
&lt;td>필요한 하위 문제만 해결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>공간 효율성&lt;/strong>&lt;/td>
&lt;td>예측 가능하고 일정함&lt;/td>
&lt;td>재귀 호출로 인한 스택 공간 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>시간 효율성&lt;/strong>&lt;/td>
&lt;td>모든 경우를 계산&lt;/td>
&lt;td>필요한 경우만 계산&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>코드 복잡도&lt;/strong>&lt;/td>
&lt;td>일반적으로 더 단순&lt;/td>
&lt;td>일반적으로 더 복잡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>캐시 활용&lt;/strong>&lt;/td>
&lt;td>배열/테이블 형태&lt;/td>
&lt;td>해시 테이블/맵 형태&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>구현 예시 비교&lt;span class="hx-absolute -hx-mt-20" id="구현-예시-비교">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%ec%98%88%ec%8b%9c-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>피보나치 수열 계산의 경우&lt;span class="hx-absolute -hx-mt-20" id="피보나치-수열-계산의-경우">&lt;/span>
&lt;a href="#%ed%94%bc%eb%b3%b4%eb%82%98%ec%b9%98-%ec%88%98%ec%97%b4-%ea%b3%84%ec%82%b0%ec%9d%98-%ea%b2%bd%ec%9a%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Tabulation 방식&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib_tabulation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테이블 초기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">table&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 순차적으로 값 채우기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Memoization 방식&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">fib_memoization&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{}):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 이미 계산된 값이면 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기본 케이스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">n&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 저장 및 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fib_memoization&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">fib_memoization&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">memo&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>세부 특성&lt;/th>
&lt;th>Tabulation&lt;/th>
&lt;th>Memoization&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>적합한 상황&lt;/strong>&lt;/td>
&lt;td>모든 하위 문제의 결과가 필요한 경우&lt;/td>
&lt;td>일부 하위 문제의 결과만 필요한 경우&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>디버깅 난이도&lt;/strong>&lt;/td>
&lt;td>상대적으로 쉬움&lt;/td>
&lt;td>재귀로 인해 더 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>최적화 가능성&lt;/strong>&lt;/td>
&lt;td>공간 최적화 쉬움&lt;/td>
&lt;td>재귀 깊이 제한으로 인한 제약&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>병렬화 가능성&lt;/strong>&lt;/td>
&lt;td>쉬움 (독립적인 계산)&lt;/td>
&lt;td>어려움 (의존성 있는 호출)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>초기화 오버헤드&lt;/strong>&lt;/td>
&lt;td>더 큼 (전체 테이블)&lt;/td>
&lt;td>더 작음 (필요시 할당)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메모리 예측성&lt;/strong>&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음 (실행 중 변동)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>성능 특성&lt;/th>
&lt;th>Tabulation&lt;/th>
&lt;th>Memoization&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>시간 복잡도&lt;/strong>&lt;/td>
&lt;td>O(n) - 모든 경우&lt;/td>
&lt;td>O(n) - 최악의 경우&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>공간 복잡도&lt;/strong>&lt;/td>
&lt;td>O(n) - 테이블 크기&lt;/td>
&lt;td>O(n) - 캐시 + 스택&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>캐시 적중률&lt;/strong>&lt;/td>
&lt;td>100% (모든 값 계산)&lt;/td>
&lt;td>상황에 따라 다름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>초기 지연 시간&lt;/strong>&lt;/td>
&lt;td>더 김 (테이블 초기화)&lt;/td>
&lt;td>더 짧음 (즉시 시작)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메모리 사용량&lt;/strong>&lt;/td>
&lt;td>예측 가능&lt;/td>
&lt;td>변동적&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 차이점을 이해하고 상황에 맞는 적절한 방법을 선택하는 것이 중요하다.&lt;br>
일반적으로:&lt;/p>
&lt;ol>
&lt;li>모든 하위 문제를 풀어야 하는 경우: Tabulation&lt;/li>
&lt;li>일부 하위 문제만 필요한 경우: Memoization&lt;/li>
&lt;li>공간 효율성이 중요한 경우: Tabulation&lt;/li>
&lt;li>구현 단순성이 중요한 경우: Tabulation&lt;/li>
&lt;li>필요한 계산만 하고 싶은 경우: Memoization&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>테이블레이션(Tabulation)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm-design/algorithm-design-techniques/dynamic-programming/tabulation/</link><pubDate>Sun, 20 Oct 2024 11:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm-design/algorithm-design-techniques/dynamic-programming/tabulation/</guid><description>
&lt;h2>테이블레이션(Tabulation)&lt;span class="hx-absolute -hx-mt-20" id="테이블레이션tabulation">&lt;/span>
&lt;a href="#%ed%85%8c%ec%9d%b4%eb%b8%94%eb%a0%88%ec%9d%b4%ec%85%98tabulation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Tabulation은 프로그래밍에서 동적 프로그래밍(Dynamic Programming)의 한 기법으로, 복잡한 문제를 해결하기 위해 사용되는 방법이다.&lt;/p>
&lt;p>Tabulation은 &amp;lsquo;표를 만든다&amp;rsquo;는 의미로, 문제의 해결 과정을 표 형태로 정리하는 기법이다. 이 방법은 작은 부분 문제(subproblem)부터 시작하여 점진적으로 더 큰 문제를 해결해 나가는 상향식(bottom-up) 접근 방식을 사용합니다.&lt;/p>
&lt;h3>Tabulation의 작동 원리&lt;span class="hx-absolute -hx-mt-20" id="tabulation의-작동-원리">&lt;/span>
&lt;a href="#tabulation%ec%9d%98-%ec%9e%91%eb%8f%99-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>문제 정의: 해결하고자 하는 문제와 그 부분 문제들을 명확히 정의한다.&lt;/li>
&lt;li>표 초기화: 부분 문제의 결과를 저장할 표(보통 배열이나 리스트)를 만든다.&lt;/li>
&lt;li>기본 케이스 설정: 가장 작은 부분 문제에 대한 해답을 표에 채운다.&lt;/li>
&lt;li>반복적 계산: 작은 부분 문제부터 시작하여 큰 문제로 나아가며 표를 채운다.&lt;/li>
&lt;li>최종 결과 도출: 표의 마지막 항목이 전체 문제의 해답이 된다.&lt;/li>
&lt;/ol>
&lt;h3>Tabulation의 예시: 피보나치 수열&lt;span class="hx-absolute -hx-mt-20" id="tabulation의-예시-피보나치-수열">&lt;/span>
&lt;a href="#tabulation%ec%9d%98-%ec%98%88%ec%8b%9c-%ed%94%bc%eb%b3%b4%eb%82%98%ec%b9%98-%ec%88%98%ec%97%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>피보나치 수열을 계산하는 예시&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">fibonacci_tabulation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 표 초기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fib&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기본 케이스 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fib&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fib&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 반복적 계산&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fib&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 최종 결과 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">fib&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 사용 예&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fibonacci_tabulation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># 55 출력&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 예시에서 표(fib 리스트)는 각 인덱스에 해당하는 피보나치 수를 저장한다.&lt;br>
작은 문제(0번째, 1번째 피보나치 수)부터 시작하여 점진적으로 큰 문제(n번째 피보나치 수)를 해결한다.&lt;/p>
&lt;h3>Tabulation의 장점&lt;span class="hx-absolute -hx-mt-20" id="tabulation의-장점">&lt;/span>
&lt;a href="#tabulation%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>효율성: 중복 계산을 피하여 시간 복잡도를 개선한다.&lt;/li>
&lt;li>메모리 사용: 필요한 결과만 저장하므로 메모리를 효율적으로 사용한다.&lt;/li>
&lt;li>예측 가능성: 반복문을 사용하여 실행 시간을 예측하기 쉽다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>