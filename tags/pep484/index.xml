<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – PEP484</title><link>https://buenhyden.github.io/tags/pep484/</link><description>Recent content in PEP484 on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 23 Oct 2024 13:46:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/pep484/index.xml" rel="self" type="application/rss+xml"/><item><title>PEP</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/</guid><description>
&lt;h2>PEP (Python Enhancement Proposal)&lt;/h2>&lt;p>파이썬 언어의 새로운 기능, 라이브러리 개선, 스타일 가이드 등에 관한 제안을 문서화한 것.&lt;br>
PEP는 파이썬 커뮤니티가 파이썬 언어를 개선하기 위해 아이디어를 공유하고 논의하는 공식적인 수단으로, Python Software Foundation(PSF)에 의해 관리된다.&lt;/p>
&lt;h3>PEP Types&lt;/h3>&lt;p>해당 PEP의 목적과 성격을 나타낸다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>약어&lt;/th>
&lt;th>유형&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>예시 PEP 번호 및 제목&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>I&lt;/td>
&lt;td>Informational&lt;/td>
&lt;td>파이썬 생태계와 관련된 배경, 가이드라인 또는 기타 정보를 제공하는 비규범적(non-normative) PEP입니다.&lt;/td>
&lt;td>PEP 20 - The Zen of Python&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>P&lt;/td>
&lt;td>Process&lt;/td>
&lt;td>파이썬 커뮤니티의 프로세스, 워크플로우 또는 거버넌스에 대한 변경을 설명하거나 제안하는 규범적(normative) PEP입니다.&lt;/td>
&lt;td>PEP 1 - PEP Purpose and Guidelines&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>파이썬에 새로운 기능을 추가하거나, CPython의 구현 변경 또는 생태계의 상호운용 표준을 제안하는 규범적 PEP입니다.&lt;/td>
&lt;td>PEP 484 - Type Hints&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>PEP Status&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>약어&lt;/th>
&lt;th>상태&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>구현을 위해 수락된 규범적 제안입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>Active&lt;/td>
&lt;td>현재 유효한 정보 제공 지침이거나 사용 중인 프로세스입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>D&lt;/td>
&lt;td>Deferred&lt;/td>
&lt;td>현재는 비활성 상태이지만, 추후 다시 논의될 수 있는 초안입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>Draft&lt;/td>
&lt;td>현재 활발히 논의 및 수정 중인 제안입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>F&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>수락되어 구현이 완료되었거나 더 이상 활성 상태가 아닌 제안입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>P&lt;/td>
&lt;td>Provisional&lt;/td>
&lt;td>잠정적으로 수락되었지만 추가적인 피드백이 필요한 상태입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>R&lt;/td>
&lt;td>Rejected&lt;/td>
&lt;td>공식적으로 거부되어 수락되지 않을 제안입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S&lt;/td>
&lt;td>Superseded&lt;/td>
&lt;td>다른 후속 PEP에 의해 대체된 제안입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>W&lt;/td>
&lt;td>Withdrawn&lt;/td>
&lt;td>제안자나 저자에 의해 고려 대상에서 제외된 제안입니다.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>주요 PEP 종류&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>PEP&lt;/th>
&lt;th>제목&lt;/th>
&lt;th>유형&lt;/th>
&lt;th>상태&lt;/th>
&lt;th>주요 내용&lt;/th>
&lt;th>적용 버전&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>Style Guide for Python Code&lt;/td>
&lt;td>Style Guide&lt;/td>
&lt;td>Active&lt;/td>
&lt;td>Python 코드 스타일 가이드&lt;/td>
&lt;td>모든 버전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>20&lt;/td>
&lt;td>The Zen of Python&lt;/td>
&lt;td>Informational&lt;/td>
&lt;td>Active&lt;/td>
&lt;td>Python 설계 철학&lt;/td>
&lt;td>2.0+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>257&lt;/td>
&lt;td>Docstring Conventions&lt;/td>
&lt;td>Informational&lt;/td>
&lt;td>Active&lt;/td>
&lt;td>문서화 문자열 규칙&lt;/td>
&lt;td>모든 버전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>405&lt;/td>
&lt;td>Python Virtual Environments&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>가상 환경 생성 및 관리&lt;/td>
&lt;td>3.3+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>443&lt;/td>
&lt;td>Single-dispatch Generic Functions&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>인자 타입별 함수 오버로딩&lt;/td>
&lt;td>3.4+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>484&lt;/td>
&lt;td>Type Hints&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>타입 힌트 문법&lt;/td>
&lt;td>3.5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3000&lt;/td>
&lt;td>Python 3000&lt;/td>
&lt;td>Informational&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>Python 3.0 개발 가이드라인&lt;/td>
&lt;td>3.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3101&lt;/td>
&lt;td>Advanced String Formatting&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>새로운 문자열 포매팅&lt;/td>
&lt;td>2.6, 3.0+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3333&lt;/td>
&lt;td>Python Web Server Gateway Interface v1.0.1&lt;/td>
&lt;td>Informational&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>웹 서버와 애플리케이션 간 인터페이스&lt;/td>
&lt;td>3.2+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>492&lt;/td>
&lt;td>Coroutines with Async and Await Syntax&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>async/await 구문&lt;/td>
&lt;td>3.5+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>498&lt;/td>
&lt;td>Literal String Interpolation&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>f-문자열&lt;/td>
&lt;td>3.6+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>557&lt;/td>
&lt;td>Data Classes&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>@dataclass 데코레이터&lt;/td>
&lt;td>3.7+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>572&lt;/td>
&lt;td>Assignment Expressions&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Final&lt;/td>
&lt;td>할당 표현식 (:=)&lt;/td>
&lt;td>3.8+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>649&lt;/td>
&lt;td>Deferred Evaluation Of Annotations Using Descriptors&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>주석의 지연 평가&lt;/td>
&lt;td>3.10+&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>695&lt;/td>
&lt;td>Type Parameter Syntax&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>제네릭 문법 개선&lt;/td>
&lt;td>3.12 (예정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>701&lt;/td>
&lt;td>Syntactic Formalization of F-strings&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>f-문자열 문법 개선&lt;/td>
&lt;td>3.12 (예정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>702&lt;/td>
&lt;td>Marking Deprecations Using the Type System&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>deprecation 마킹&lt;/td>
&lt;td>3.13 (예정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>703&lt;/td>
&lt;td>Making the Global Interpreter Lock Optional in CPython&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Accepted&lt;/td>
&lt;td>선택적 GIL&lt;/td>
&lt;td>3.13 (예정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>749&lt;/td>
&lt;td>Implementing PEP 649&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Draft&lt;/td>
&lt;td>PEP 649 구현 보완&lt;/td>
&lt;td>3.14 (예정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>750&lt;/td>
&lt;td>Tag Strings&lt;/td>
&lt;td>Standards Track&lt;/td>
&lt;td>Draft&lt;/td>
&lt;td>태그 문자열&lt;/td>
&lt;td>3.14 (예정)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>PEP 484–Type Hints</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-484type-hints/</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/pep-484type-hints/</guid><description>
&lt;h2>PEP 484–Type Hints&lt;/h2>&lt;p>Python에 타입 힌트(Type Hints)를 도입하여 함수의 인자와 반환값에 대한 타입을 명시할 수 있도록 하는 표준을 정의&lt;br>
Python 3.5부터 도입됨.&lt;br>
코드의 가독성을 높이고 정적 타입 분석 도구가 코드를 검사할 수 있도록 돕는다.&lt;br>
PEP 484는 Python의 동적 타이핑 특성을 유지하면서, 타입 힌트를 통해 코드의 품질과 유지보수성을 향상시키는 것을 목표로 한다.&lt;/p>
&lt;h3>주요 내용&lt;/h3>&lt;h4>함수 주석을 통한 타입 힌트&lt;/h4>&lt;ul>
&lt;li>함수 인자와 반환값에 대한 타입 정보를 제공하여 코드의 의도를 명확히 한다.&lt;/li>
&lt;li>예를 들어, 문자열을 인자로 받고 문자열을 반환하는 함수는 다음과 같이 정의할 수 있다.&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">greeting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;Hello &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># `name: str`: `name` 인자는 문자열이어야 함을 나타냅니다.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># `-&amp;gt; str`: 함수가 문자열을 반환함을 나타냅니다.&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>정적 타입 검사&lt;/h4>&lt;ul>
&lt;li>타입 힌트는 런타임에 강제되지 않으며, 정적 분석 도구(예: mypy)를 사용하여 코드의 타입 일관성을 검사할 수 있다.&lt;/li>
&lt;li>이는 코드 작성 시 오류를 미리 발견하고 수정할 수 있게 도와준다.&lt;/li>
&lt;/ul>
&lt;h4>타입 힌트 모듈&lt;/h4>&lt;ul>
&lt;li>&lt;code>typing&lt;/code> 모듈을 통해 다양한 타입 힌트를 제공한다. 예를 들어, 리스트, 딕셔너리와 같은 컨테이너 타입 및 제네릭(Generic) 타입을 지원한다.&lt;/li>
&lt;/ul>
&lt;h4>유연한 사용&lt;/h4>&lt;ul>
&lt;li>타입 힌트는 선택 사항이며, Python은 여전히 동적 타이핑 언어로 남아 있다. 즉, 모든 함수에 타입 힌트를 추가할 필요는 없다.&lt;/li>
&lt;/ul>
&lt;h3>예제&lt;/h3>&lt;h4>간단한 예시&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 기본적인 타입 힌트 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">greeting&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># name 파라미터는 문자열(str) 타입이어야 함을 나타냄&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># -&amp;gt; str 은 함수가 문자열을 반환함을 나타냄&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Hello, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 여러 기본 타입들의 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_total&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">price&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># quantity는 정수(int), price는 실수(float) 타입&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 반환값은 실수(float) 타입&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">price&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3. 리스트 타입 힌트 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_first_name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">names&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># names는 문자열 리스트임을 나타냄&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># List[str]은 모든 요소가 문자열인 리스트를 의미&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">names&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">names&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 4. 옵셔널 타입 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">find_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># user_id는 정수이거나 None일 수 있음을 나타냄&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 반환값도 문자열이거나 None일 수 있음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">user_id&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;User_&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>복잡한 예시&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Tuple&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Union&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Callable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 5. 딕셔너리와 복합 타입&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">process_user_data&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_info&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Union&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Tuple&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Dict[str, Union[str, int]]는 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># - 키는 문자열이고&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># - 값은 문자열 또는 정수인 딕셔너리를 의미&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Tuple[str, int]는 문자열과 정수로 구성된 튜플을 반환한다는 의미&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user_info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user_info&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">age&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 6. 함수 타입 힌트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">apply_operation&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">func&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Callable&lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Callable[[int, int], int]는&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># - 두 개의 정수를 입력받고&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># - 정수를 반환하는 함수를 의미&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 7. 제네릭 타입&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">TypeVar&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sequence&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">T&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TypeVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;T&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 제네릭 타입 변수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">first_element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Sequence&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">T&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Sequence[T]는 임의의 타입 T로 이루어진 시퀀스를 의미&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Optional[T]는 T 타입 또는 None을 반환할 수 있음을 의미&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">sequence&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">sequence&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>