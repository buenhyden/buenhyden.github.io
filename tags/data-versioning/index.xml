<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Data-Versioning on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/data-versioning/</link>
    <description>Recent content in Data-Versioning on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Aug 2025 06:21:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/data-versioning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MVCC(Multi-Version Concurrency Control, 다중 버전 동시성 제어)</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-operations/transaction-management/concurrency-control/optimistic-concurrency-control/versioning/mvcc/</link>
      <pubDate>Wed, 27 Aug 2025 06:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-operations/transaction-management/concurrency-control/optimistic-concurrency-control/versioning/mvcc/</guid>
      <description>MVCC는 트랜잭션마다 일관된 스냅샷을 제공하기 위해 데이터의 여러 버전을 유지하는 동시성 제어 방식이다. 읽기는 기존 버전을 읽어 비차단으로 처리되고, 쓰기는 새 버전을 생성해 커밋 시 가시성이 바뀐다. 높은 읽기 동시성과 낮은 락 경합을 제공하지만 버전 누적으로 인한 저장·GC 부담과 일부 격리 이상(issue)이 존재한다.</description>
    </item>
  </channel>
</rss>
