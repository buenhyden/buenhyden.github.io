<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Event-and-Message-Brokers on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/event-and-message-brokers/</link>
    <description>Recent content in Event-and-Message-Brokers on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 02 Apr 2025 06:04:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/event-and-message-brokers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kafka vs RabbitMQ</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-kafka/kafka-vs-rabbitmq/</link>
      <pubDate>Tue, 22 Oct 2024 11:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-kafka/kafka-vs-rabbitmq/</guid>
      <description>Kafka와 RabbitMQ는 각각 고유한 강점을 가진 메시지 브로커 시스템이다. Kafka는 대용량 데이터 스트림 처리와 내구성에 탁월하며, RabbitMQ는 유연한 라우팅과 즉각적인 메시지 전달에 뛰어나다.</description>
    </item>
    <item>
      <title>Apache Pulsar vs. Kafka</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-pulsar/apache-pulsar-vs-kafka/</link>
      <pubDate>Wed, 02 Apr 2025 06:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-pulsar/apache-pulsar-vs-kafka/</guid>
      <description>Apache Pulsar는 클라우드 네이티브 환경과 대규모 분산 시스템을 위해 설계되었으며, 높은 처리량과 낮은 지연 시간을 모두 달성하는 메시징 및 스트리밍 플랫폼이다. Kafka는 높은 처리량, 내구성, 확장성을 제공하는 로그 기반의 발행-구독(pub-sub) 메시징 시스템이다.</description>
    </item>
    <item>
      <title>Apache Pulsar vs. RabbitMQ</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-pulsar/apache-pulsar-vs-rabbitmq/</link>
      <pubDate>Wed, 02 Apr 2025 06:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-pulsar/apache-pulsar-vs-rabbitmq/</guid>
      <description>Apache Pulsar는 클라우드 네이티브 환경과 대규모 분산 시스템을 위해 설계되었으며, 높은 처리량과 낮은 지연 시간을 모두 달성하는 메시징 및 스트리밍 플랫폼이다. RabbitMQ는 AMQP(Advanced Message Queuing Protocol)를 구현한 가장 널리 사용되는 오픈 소스 메시지 브로커 중 하나이다.</description>
    </item>
    <item>
      <title>Apache Pulsar</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-pulsar/</link>
      <pubDate>Thu, 06 Feb 2025 04:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/event-streaming-platforms/apache-pulsar/</guid>
      <description>분산형 메시징 및 스트리밍 플랫폼이다. Pulsar는 기존의 메시지 큐와 스트리밍 시스템의 장점을 결합하여 높은 성능, 낮은 지연 시간, 그리고 강력한 내구성을 제공한다.</description>
    </item>
    <item>
      <title>RabbitMQ</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/message-queues/rabbitmq/</link>
      <pubDate>Fri, 25 Oct 2024 00:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/message-queues/rabbitmq/</guid>
      <description>rlang 언어로 작성된 오픈 소스 메시지 브로커 시스템으로, AMQP(Advanced Message Queuing Protocol)를 구현하고 있다</description>
    </item>
  </channel>
</rss>
