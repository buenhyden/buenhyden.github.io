<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Proxy-Pattern on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/proxy-pattern/</link>
    <description>Recent content in Proxy-Pattern on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Sep 2024 06:14:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/proxy-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Proxy Pattern</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/fundamentals/programming-principles/design-patterns/gof/structural/proxy-pattern/</link>
      <pubDate>Wed, 25 Sep 2024 06:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/fundamentals/programming-principles/design-patterns/gof/structural/proxy-pattern/</guid>
      <description>Proxy Pattern 은 클라이언트와 실제 객체 사이에 **대체 객체 (proxy)** 를 두어 접근, 생성, 호출 제어와 추가 로직 (예: caching, security, lazy init) 을 수행하는 Structural 디자인 패턴으로, 인터페이스는 동일하지만 기능 제어나 비용 절감, 보호, 원격 접근 등에 유용하다.</description>
    </item>
  </channel>
</rss>
