<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Monitor on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/monitor/</link>
    <description>Recent content in Monitor on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.143.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Oct 2024 10:54:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/monitor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monitor</title>
      <link>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/process-synchronization/monitor/</link>
      <pubDate>Thu, 03 Oct 2024 10:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/process-synchronization/monitor/</guid>
      <description>&lt;h2 id=&#34;monitor&#34;&gt;Monitor&lt;/h2&gt;
&lt;p&gt;프로세스 동기화에서 **모니터(Monitor)**는 공유 자원에 대한 안전한 접근을 보장하기 위한 상위 수준의 동기화 도구이다.&lt;br&gt;
모니터는 공유 데이터와 해당 데이터를 조작하는 연산을 하나의 모듈로 캡슐화하여, 다중 스레드 환경에서의 경쟁 조건(Race Condition)을 방지한다.&lt;/p&gt;
&lt;p&gt;모니터는 &lt;strong&gt;고수준의 동기화 추상화&lt;/strong&gt;로, 복잡한 뮤텍스/세마포어 관리 없이 안전한 병행 프로그래밍을 가능하게 한다.&lt;br&gt;
현대 언어에서는 모니터 패턴이 내장되어 있어(&lt;code&gt;synchronized&lt;/code&gt;, &lt;code&gt;lock&lt;/code&gt;), 데드락과 경쟁 조건을 효과적으로 방지한다.&lt;br&gt;
다만 저수준 시스템 프로그래밍에서는 뮤텍스나 세마포어가 더 유연할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;정의&#34;&gt;정의&lt;/h3&gt;
&lt;p&gt;모니터는 **뮤텍스(Mutex)**와 **조건 변수(Condition Variable)**를 결합한 추상화된 동기화 메커니즘이다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
