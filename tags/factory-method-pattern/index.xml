<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Factory-Method-Pattern :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/factory-method-pattern.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Fri, 11 Oct 2024 18:21:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/factory-method-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Factory Method Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/software-design-patterns/creational-design-patterns/factory-method-pattern.html</link><pubDate>Fri, 11 Oct 2024 18:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/software-design-patterns/creational-design-patterns/factory-method-pattern.html</guid><description>객체 생성을 위한 인터페이스를 정의하지만, 실제 어떤 클래스의 인스턴스를 생성할지는 서브클래스가 결정하도록 하는 디자인 패턴</description></item></channel></rss>