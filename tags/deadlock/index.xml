<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Deadlock on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/deadlock/</link>
    <description>Recent content in Deadlock on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Wed, 21 May 2025 05:56:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/deadlock/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Concurrency Problems</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/concurrency-fundamentals/concurrency-problems/</link>
      <pubDate>Wed, 21 May 2025 05:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/concurrency-fundamentals/concurrency-problems/</guid>
      <description>Deadlock, Livelock, Race Condition, Starvation은 동시성 환경에서 발생하는 대표적인 병목 현상이다. 데드락은 자원 상호 점유로 인한 정지, 라이브락은 지속된 상태 변화에도 진전 없음, 레이스 컨디션은 타이밍 의존으로 인한 예측 불가, 기아 상태는 낮은 우선순위로 인한 무한 대기를 초래한다.</description>
    </item>
    <item>
      <title>Deadlock</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/concurrency-fundamentals/concurrency-problems/deadlock-and-livelock/deadlock/</link>
      <pubDate>Tue, 20 May 2025 14:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/concurrency-fundamentals/concurrency-problems/deadlock-and-livelock/deadlock/</guid>
      <description>Deadlock(교착상태) 은 둘 이상의 프로세스나 스레드가 서로가 보유한 자원을 기다리며 무한정 대기하는 현상으로, 시스템 전체 성능과 안정성에 큰 영향을 미치는 주요 동시성 문제다. 상호 배제, 점유와 대기, 비선점, 순환 대기라는 네 가지 필요조건이 동시에 성립할 때 발생하며, 시스템 성능 저하와 응답 불가 상태를 초래한다.</description>
    </item>
  </channel>
</rss>
