<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – IP</title><link>https://buenhyden.github.io/tags/ip/</link><description>Recent content in IP on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 04 Oct 2024 11:51:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/ip/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Layer - TCP/IP 4 Layers</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/</link><pubDate>Thu, 26 Sep 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/</guid><description>
&lt;h2>TCP/IP 4 계층&lt;/h2>&lt;p>인터넷과 네트워크 통신을 위한 프로토콜 체계로 데이터를 네트워크를 통해 안정적으로 전송하고 통신하기 위한 구조.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/TCP%20IP%204%20Layers/tcp-ip-model-vs-osi.png"
alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>유연성과 확장성
&lt;ul>
&lt;li>각 계층이 독립적으로 발전 가능&lt;/li>
&lt;li>새로운 프로토콜 추가 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>표준화
&lt;ul>
&lt;li>계층 간 표준 인터페이스 제공&lt;/li>
&lt;li>다양한 시스템 간 호환성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문제 해결 용이
&lt;ul>
&lt;li>계층별 독립적 문제 해결&lt;/li>
&lt;li>효율적인 유지 보수&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모듈화
&lt;ul>
&lt;li>복잡한 네트워크 기능을 단순화&lt;/li>
&lt;li>개발과 구현이 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>TCP/IP 4계층의 각 계층의 역할과 주요 프로토콜&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>계층&lt;/th>
&lt;th>주요 역할&lt;/th>
&lt;th>주요 프로토콜&lt;/th>
&lt;th>데이터 단위&lt;/th>
&lt;th>주요 장비/기술&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>응용 계층 (Application Layer)&lt;/td>
&lt;td>• 사용자와 직접 상호작용하는 인터페이스 제공&lt;br>• 데이터 형식 정의 및 응용 프로그램 간 통신 담당&lt;br>• 네트워크 서비스 제공&lt;/td>
&lt;td>• HTTP/HTTPS (웹)&lt;br>• FTP (파일 전송)&lt;br>• SMTP/POP3/IMAP (이메일)&lt;br>• DNS (도메인 네임)&lt;br>• SSH (보안 셸)&lt;br>• Telnet (원격 접속)&lt;/td>
&lt;td>메시지 (Message)&lt;/td>
&lt;td>• 웹 서버&lt;br>• 메일 서버&lt;br>• DNS 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 계층 (Transport Layer)&lt;/td>
&lt;td>• 종단간 신뢰성 있는 데이터 전송&lt;br>• 오류 검출 및 복구&lt;br>• 흐름 제어와 혼잡 제어&lt;br>• 포트 번호를 통한 프로세스 구분&lt;/td>
&lt;td>• TCP (신뢰성 있는 연결 지향)&lt;br>• UDP (비연결성, 실시간)&lt;br>• SCTP (스트림 제어)&lt;/td>
&lt;td>세그먼트 (Segment)&lt;/td>
&lt;td>• 방화벽&lt;br>• 로드 밸런서&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인터넷 계층 (Internet Layer)&lt;/td>
&lt;td>• 패킷의 경로 설정 (라우팅)&lt;br>• 논리적 주소 지정 (IP)&lt;br>• 패킷 분할과 재조립&lt;br>• 서로 다른 네트워크 연결&lt;/td>
&lt;td>• IPv4/IPv6 (IP 주소)&lt;br>• ICMP (오류 제어)&lt;br>• ARP (주소 변환)&lt;br>• IGMP (멀티캐스트)&lt;/td>
&lt;td>패킷 (Packet)&lt;/td>
&lt;td>• 라우터&lt;br>• L3 스위치&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 접근 계층 (Network Access Layer)&lt;/td>
&lt;td>• 물리적 주소 지정 (MAC)&lt;br>• 매체 접근 제어&lt;br>• 물리적 신호 전송&lt;br>• 에러 검출&lt;/td>
&lt;td>• 이더넷&lt;br>• Wi-Fi&lt;br>• PPP&lt;br>• HDLC&lt;/td>
&lt;td>프레임 (Frame)&lt;br>비트 (Bit)&lt;/td>
&lt;td>• 네트워크 카드&lt;br>• 스위치&lt;br>• 허브&lt;br>• 케이블&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 계층의 특징적인 기능을 추가로 설명해보면,&lt;/p>
&lt;ol>
&lt;li>&lt;strong>응용 계층&lt;/strong>은 사용자가 실제로 사용하는 네트워크 애플리케이션이 동작하는 계층.&lt;br>
웹 브라우징, 이메일, 파일 전송 등의 서비스가 이 계층에서 이루어진다.&lt;/li>
&lt;li>&lt;strong>전송 계층&lt;/strong>은 데이터의 신뢰성을 보장하며, TCP의 경우 3-way handshake를 통한 연결 설정, 흐름 제어, 혼잡 제어 등의 기능을 제공한다.&lt;/li>
&lt;li>&lt;strong>인터넷 계층&lt;/strong>은 서로 다른 네트워크를 연결하고, IP 주소를 기반으로 한 라우팅을 담당한다.&lt;br>
IPv4에서 IPv6로의 전환이 진행 중인 계층.&lt;/li>
&lt;li>&lt;strong>네트워크 접근 계층&lt;/strong>은 실제 물리적인 네트워크 연결과 관련된 모든 것을 처리한다.&lt;br>
하드웨어 수준의 통신 프로토콜과 물리적 매체를 통한 데이터 전송을 담당한다.&lt;/li>
&lt;/ol>
&lt;p>이러한 계층 구조는 각 계층이 독립적으로 동작하면서도 서로 유기적으로 연결되어 있어, 네트워크 통신의 복잡성을 관리하기 쉽게 만들어준다.&lt;br>
또한 한 계층의 변경이 다른 계층에 미치는 영향을 최소화할 수 있다는 장점이 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>TCP/IP&lt;/h3>&lt;p>&lt;a href="https://yozm.wishket.com/magazine/detail/1956/" target="_blank" rel="noopener">주니어 개발자를 위한 엄청 쉬운 TCP/IP 4계층 이야기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/2005/" target="_blank" rel="noopener">주니어 개발자를 위한 TCP/IP 주요 프로토콜 알아보기&lt;/a>&lt;br>
&lt;a href="https://wormwlrm.github.io/2021/09/23/Overview-of-TCP-and-UDP.html" target="_blank" rel="noopener">10분 만에 훑어보는 TCP와 UDP&lt;/a>&lt;/p>
&lt;h3>Port&lt;/h3>&lt;p>&lt;a href="https://sangbeomkim.tistory.com/101" target="_blank" rel="noopener">포트(PORT)란?&lt;/a>&lt;/p></description></item><item><title>CIDR (Classless Inter-Domain Routing)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/cidr/</link><pubDate>Fri, 04 Oct 2024 11:51:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/cidr/</guid><description>
&lt;h2>CIDR (Classless Inter-Domain Routing)&lt;/h2>&lt;p>CIDR은 1993년에 도입된 IP 주소 할당 및 라우팅 방식으로, 기존의 클래스 기반 주소 체계(Classful Addressing)의 한계를 극복하기 위해 만들어졌다.&lt;br>
인터넷이 급속도로 성장하면서 기존의 고정된 클래스 체계로는 IP 주소를 효율적으로 할당하기 어려워졌고, 이를 해결하기 위해 더 유연한 주소 할당 방식이 필요해지면서 탄생되었다.&lt;br>
네트워크 정보를 여러 개로 나누어진 Sub-Network 들을 모두 나타낼 수 있는 하나의 Network 로 통합해서 보여주는 방법이다.&lt;/p>
&lt;h3>목적&lt;/h3>&lt;ul>
&lt;li>IP 주소 자원의 낭비를 줄임&lt;/li>
&lt;li>라우팅 테이블의 크기를 감소시킴&lt;/li>
&lt;li>더 유연하고 효율적인 주소 할당을 제공&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>
&lt;p>주소 집약(Route Aggregation)&lt;br>
CIDR의 가장 중요한 특징 중 하나는 라우팅 테이블을 간소화할 수 있는 주소 집약이다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>192.168.0.0/24&lt;/li>
&lt;li>192.168.1.0/24&lt;/li>
&lt;li>192.168.2.0/24&lt;/li>
&lt;li>192.168.3.0/24 이 네 개의 네트워크를 192.168.0.0/22로 집약할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>유연한 네트워크 설계&lt;br>
CIDR을 사용하면 네트워크 크기를 필요에 따라 정확하게 조절할 수 있다.&lt;br>
이는 다음과 같은 이점을 제공한다:&lt;/p>
&lt;ul>
&lt;li>IP 주소 낭비 최소화&lt;/li>
&lt;li>효율적인 주소 공간 활용&lt;/li>
&lt;li>네트워크 구조의 유연한 설계&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>
&lt;p>IP 주소 활용 효율성&lt;/p>
&lt;ul>
&lt;li>필요한 만큼의 주소만 할당 가능&lt;/li>
&lt;li>주소 공간 낭비 최소화&lt;/li>
&lt;li>미사용 주소의 재할당 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>라우팅 효율성&lt;/p>
&lt;ul>
&lt;li>라우팅 테이블 크기 감소&lt;/li>
&lt;li>네트워크 성능 향상&lt;/li>
&lt;li>라우터의 메모리 사용량 감소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 설계 유연성&lt;/p>
&lt;ul>
&lt;li>다양한 크기의 네트워크 수용&lt;/li>
&lt;li>쉬운 네트워크 확장&lt;/li>
&lt;li>효율적인 주소 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>표기법&lt;/h3>&lt;p>CIDR은 IP 주소와 슬래시(/) 뒤에 네트워크 프리픽스의 비트 수를 표기하는 방식을 사용한다.&lt;br>
이는 네트워크 주소와 프리픽스 길이로 표현되며, 프리픽스 길이는 네트워크 부분의 비트 수를 나타낸다.&lt;/p>
&lt;ul>
&lt;li>점과 숫자로 이루어진 4 부분의 주소와 &amp;lsquo;/&amp;rsquo; 뒤의 0 에서 32 까지의 숫자로 이루어진다.&lt;br>
즉, &lt;code>A.B.C.D/N&lt;/code> 과 같은 형태&lt;/li>
&lt;li>점과 숫자로 이루어진 부분은 IPv4 주소와 마찬가지로 4 개의 8 비트 단위 바이트로 이루어진 32 비트 이진 숫자이다.&lt;/li>
&lt;li>&amp;lsquo;/&amp;rsquo; 뒤의 숫자는 &lt;code>접두어 길이&lt;/code>라고 하며, 주소의 왼쪽으로부터 세어서 공유하는 초기 비트의 수를 가리킨다.&lt;/li>
&lt;/ul>
&lt;p>예를 들어 192.168.1.0/24는 다음을 의미한다:&lt;/p>
&lt;ul>
&lt;li>IP 주소: 192.168.1.0&lt;/li>
&lt;li>네트워크 프리픽스: 24비트&lt;/li>
&lt;li>호스트 비트: 8비트 (32-24) 이는 기존 클래스 체계의 서브넷 마스크 255.255.255.0과 동일한 의미를 가진다.&lt;/li>
&lt;/ul>
&lt;h4>CIDR 블록&lt;/h4>&lt;p>CIDR(Classless Inter-Domain Routing)는 IP 주소를 할당하고 라우팅하는 방식 자체를 의미하는 반면, &lt;strong>CIDR 블록&lt;/strong>은 CIDR 방식을 사용하여 실제로 정의된 특정 주소의 범위를 의미한다.&lt;br>
예를 들어 192.168.1.0/24와 같은 특정 네트워크 주소 범위를 CIDR 블록이라고 한다.&lt;/p>
&lt;p>구체적인 예시를 들어보면:&lt;/p>
&lt;ul>
&lt;li>CIDR은 &amp;ldquo;/24&amp;quot;나 &amp;ldquo;/16&amp;quot;과 같은 접두어 길이를 사용하여 네트워크를 유연하게 분할할 수 있게 해주는 방식.&lt;/li>
&lt;li>CIDR 블록은 이 방식을 사용하여 실제로 정의된 &amp;ldquo;192.168.1.0/24&amp;quot;나 &amp;ldquo;10.0.0.0/16&amp;quot;과 같은 특정 주소 범위.&lt;/li>
&lt;/ul>
&lt;p>예를 들어 192.168.1.0/24라는 CIDR 블록은 192.168.1.0부터 192.168.1.255까지의 256개 연속된 IP 주소를 포함한다.&lt;br>
CIDR 블록이라 불리는 그룹에 포함된 여러 IP 주소는 &lt;strong>이진 표기&lt;/strong>를 하였을 때 동일한 일련의 초기 비트를 가진다.&lt;br>
만약 이진 형태로 변화한 IP 주소의 첫 자리 비트에서 CIDR 접두어 N 비트 길이만큼 일치한다면, 해당 IP 주소는 CIDR 블록의 일부라고 하며, CIDR 접두어와 일치한다고 한다.&lt;/p>
&lt;p>IPv6 주소에서도 사용될 수 있으며, 이 경우 긴 주소로 말미암아 접두어 길이는 0~128 까지의 범위를 지닌다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/487px-IP_Address_Match.svg.png"
alt="CIDR 접두어 일치의 예시"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/CIDR&lt;/a> _&lt;/p>
&lt;ul>
&lt;li>CIDR 블록의 할당
&lt;ul>
&lt;li>1990 년대 후반, 208.130.29.33 은 &lt;code>www.fresssoft.org&lt;/code> 웹 서버에 할당되어 있었는데, 3 개의 CIDR 접두어를 가진다.
&lt;ul>
&lt;li>큰 CIDR 블록인 208.128.0.0/11 이 ARIN(북미 RIR) 에서 MCI 에 할당됨.&lt;/li>
&lt;li>버지니아주에 있는 재공급업자인 Automation Research Systems 는 MCI 로부터 인터넷 접속을 승인받아 208.130.28.0/22 를 부여받음.&lt;/li>
&lt;li>ARS 는 /24 블록을 공공 서버용으로 할당하였고, 208.130.29.33 은 그 중 하나이다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>하나의 주소에 대한 이러한 여러 CIDR 접두어는 네트워크상의 서로 다른 영역에서 각각 사용된다.
&lt;ul>
&lt;li>MCI 네트워크 외부에서는 208.128.0.0/11 접두어가 MCI 트래픽 영역으로 접근하기 위해 사용된다.&lt;/li>
&lt;li>MCI 네트워크 내부에서는 208.128.28.0/22 가 사용되며, 패킷을 ARS 로 보내는 역할을 한다.&lt;/li>
&lt;li>208.130.29.0/24 는 ARS 네트워크 내부에서만 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/640px-CIDR_Address.svg.png"
alt="An broken down by its CIDR prefixes"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/CIDR&lt;/a> _&lt;/p>
&lt;h3>CIDR의 작동 원리&lt;/h3>&lt;p>CIDR은 가변 길이 서브넷 마스킹(VLSM)을 사용하여 네트워크를 더 효율적으로 분할한다.&lt;br>
네트워크 프리픽스 길이를 자유롭게 조절할 수 있어서, 필요한 만큼의 호스트 주소만을 할당할 수 있다.&lt;/p>
&lt;p>예를 들어:&lt;/p>
&lt;ul>
&lt;li>/24 네트워크는 256개의 주소(254개 사용 가능)&lt;/li>
&lt;li>/25 네트워크는 128개의 주소(126개 사용 가능)&lt;/li>
&lt;li>/26 네트워크는 64개의 주소(62개 사용 가능)&lt;/li>
&lt;/ul>
&lt;h3>CIDR 계산 방법&lt;/h3>&lt;p>CIDR 네트워크를 계산할 때는 다음 단계를 따른다:&lt;/p>
&lt;ol>
&lt;li>네트워크 크기 결정 필요한 호스트 수를 파악하고, 이를 수용할 수 있는 가장 작은 2의 거듭제곱을 찾는다.&lt;/li>
&lt;li>프리픽스 길이 계산 32에서 필요한 호스트 비트 수를 뺀 값이 프리픽스 길이가 된다.&lt;/li>
&lt;li>네트워크 범위 계산 네트워크 주소와 브로드캐스트 주소를 계산하여 사용 가능한 IP 범위를 결정한다.&lt;/li>
&lt;/ol>
&lt;h4>실제 CIDR 적용 예시&lt;/h4>&lt;p>한 회사에서 직원 60명을 수용할 수 있는 네트워크를 설계해야 한다고 가정해보자.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>네트워크 크기 결정&lt;/p>
&lt;ul>
&lt;li>필요한 호스트 수: 60대&lt;/li>
&lt;li>네트워크 주소와 브로드캐스트 주소를 위해 추가로 2개 주소 필요&lt;/li>
&lt;li>따라서 총 필요한 주소 수: 62개&lt;/li>
&lt;li>이를 수용할 수 있는 가장 작은 2의 거듭제곱을 찾아보면:
&lt;ul>
&lt;li>2⁶ = 64가 62개의 주소를 수용할 수 있는 최소 크기&lt;/li>
&lt;li>즉, 6비트가 호스트 부분에 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프리픽스 길이 계산&lt;/p>
&lt;ul>
&lt;li>IPv4는 총 32비트&lt;/li>
&lt;li>필요한 호스트 비트 수는 6비트&lt;/li>
&lt;li>프리픽스 길이 = 32 - 6 = 26&lt;/li>
&lt;li>따라서 /26 네트워크가 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 범위 계산&lt;br>
예를 들어 192.168.1.0/26 네트워크를 사용한다고 하면:&lt;/p>
&lt;ul>
&lt;li>네트워크 주소: 192.168.1.0
&lt;ul>
&lt;li>이진수로 표현: 11000000.10101000.00000001.00000000&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>브로드캐스트 주소: 192.168.1.63
&lt;ul>
&lt;li>이진수로 표현: 11000000.10101000.00000001.00111111&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 가능한 IP 주소 범위:
&lt;ul>
&lt;li>첫 번째 사용 가능 주소: 192.168.1.1&lt;/li>
&lt;li>마지막 사용 가능 주소: 192.168.1.62&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>총 사용 가능한 호스트 수: 62개 (64 - 2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>접두어 합침 (Routing Prefix Aggregation, 혹은 summarization)&lt;/h3>&lt;p>접두어 합침(Routing Prefix Aggregation 또는 summarization)은 라우팅 테이블의 크기를 줄이고 네트워크 효율성을 높이기 위해 사용되는 중요한 기술이다.&lt;/p>
&lt;p>접두어 합침은 여러 개의 연속된 IP 주소 블록을 하나의 더 큰 블록으로 결합하는 과정이다.&lt;/p>
&lt;p>이 기술의 주요 목적은:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블 크기 감소&lt;/li>
&lt;li>네트워크 대역폭 절약&lt;/li>
&lt;li>라우터의 처리 부하 감소&lt;/li>
&lt;li>네트워크 안정성 향상&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블 크기 감소: 여러 개의 경로를 하나로 합치면 라우터의 메모리 사용량이 줄어든다.&lt;/li>
&lt;li>라우팅 효율성 향상: 작은 라우팅 테이블은 더 빠른 경로 검색을 가능하게 한다.&lt;/li>
&lt;li>네트워크 안정성 개선: 개별 경로의 변동이 전체 네트워크에 미치는 영향을 줄일 수 있다.&lt;/li>
&lt;/ol>
&lt;p>주의사항:&lt;br>
접두어 합침을 사용할 때는 주의가 필요하다.&lt;br>
과도한 합침은 라우팅의 정확성을 떨어뜨릴 수 있으며, 특정 상황에서는 비효율적인 라우팅을 초래할 수 있다.&lt;/p>
&lt;p>작동 방식:&lt;br>
접두어 합침은 여러 개의 작은 네트워크를 하나의 큰 네트워크로 표현한다.&lt;br>
이는 CIDR(Classless Inter-Domain Routing) 표기법을 사용하여 수행된다.&lt;/p>
&lt;p>예시:&lt;br>
다음과 같은 네트워크 주소들이 있다고 가정해 봅시다:&lt;/p>
&lt;ul>
&lt;li>172.16.64.0/24 ~ 172.16.71.0/24&lt;br>
이 네 개의 주소는 172.16.64.0/21로 합칠 수 있다.&lt;br>
이렇게 하면 라우팅 테이블에 네 개의 항목 대신 하나의 항목만 필요하게 된다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/GUID-CBB50420-82CE-4F46-98BA-24A1BF644290-low.png"
alt="Route Summarization"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://docs.vmware.com/en/VMware-SD-WAN/6.0/VMware-SD-WAN-Administration-Guide/GUID-72405FEF-C3B9-47E9-A332-869FB35DB1DC.html" target="_blank" rel="noopener">https://docs.vmware.com/en/VMware-SD-WAN/6.0/VMware-SD-WAN-Administration-Guide/GUID-72405FEF-C3B9-47E9-A332-869FB35DB1DC.html&lt;/a> _&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>CIDR&lt;/h3>&lt;p>&lt;a href="https://kim-dragon.tistory.com/9" target="_blank" rel="noopener">[네트워크] CIDR이란?(사이더 란?)&lt;/a>&lt;br>
&lt;a href="https://kim-dragon.tistory.com/154" target="_blank" rel="noopener">[네트워크] CIDR 범위 쉽게 계산하는 방법&lt;/a>&lt;br>
&lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">CIDR&lt;/a>&lt;/p></description></item><item><title>IP Delivery Modes</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/ip-delivery-modes/</link><pubDate>Fri, 04 Oct 2024 07:37:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/ip-delivery-modes/</guid><description>
&lt;h2>IP Delivery Modes&lt;/h2>&lt;p>네트워크에서 데이터를 전송하는 다양한 방식.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/unicast-broadcast-multicast-anycast.jpg"
alt="Unicast, Broadcast, Multicast, Anycast"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ipcisco.com/lesson/unicast-broadcast-multicast-anycast/#google_vignette" target="_blank" rel="noopener">https://ipcisco.com/lesson/unicast-broadcast-multicast-anycast/#google_vignette&lt;/a> _&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Unicast&lt;/th>
&lt;th>Multicast&lt;/th>
&lt;th>Broadcast&lt;/th>
&lt;th>Anycast&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>전송 방식&lt;/td>
&lt;td>1:1 통신으로, 하나의 송신자가 하나의 특정 수신자에게 데이터를 전송&lt;/td>
&lt;td>1:N 통신으로, 하나의 송신자가 특정 그룹에 속한 다수의 수신자에게 동시에 데이터를 전송&lt;/td>
&lt;td>1:모두 통신으로, 하나의 송신자가 네트워크 내의 모든 호스트에게 데이터를 전송&lt;/td>
&lt;td>1:1/다수 통신으로, 하나의 송신자가 동일한 주소를 가진 여러 노드 중 가장 가까운 하나의 노드에게 데이터를 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 체계&lt;/td>
&lt;td>각 호스트마다 고유한 IP 주소 사용&lt;/td>
&lt;td>Class D IP 주소(224.0.0.0 ~ 239.255.255.255) 사용. IPv6에서는 ff00::/8 프리픽스 사용&lt;/td>
&lt;td>IPv4에서 네트워크 주소의 호스트 부분이 모두 1인 주소 사용&lt;/td>
&lt;td>동일한 유니캐스트 주소를 여러 노드가 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>트래픽 효율성&lt;/td>
&lt;td>수신자가 많을 경우 네트워크 부하가 증가하여 비효율적&lt;/td>
&lt;td>그룹 멤버들에게 한 번의 전송으로 데이터 전달이 가능하여 효율적&lt;/td>
&lt;td>모든 호스트에게 전송되어 불필요한 트래픽 발생 가능성이 높음&lt;/td>
&lt;td>가까운 노드에게만 전송되어 효율적이며, 로드 밸런싱 효과 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>일반적인 인터넷 통신, 이메일, 웹 브라우징 등&lt;/td>
&lt;td>화상 회의, IPTV, 소프트웨어 배포, 실시간 주식 정보 전송 등&lt;/td>
&lt;td>네트워크 설정 정보 전파, DHCP, ARP 등&lt;/td>
&lt;td>DNS 서버, CDN 서비스, 로드 밸런싱이 필요한 서비스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성&lt;/td>
&lt;td>TCP를 사용할 경우 높은 신뢰성 보장&lt;/td>
&lt;td>UDP 기반으로 동작하여 상대적으로 신뢰성이 낮음. 필요시 응용 계층에서 신뢰성 보장 메커니즘 구현 필요&lt;/td>
&lt;td>신뢰성이 낮으며, 일반적으로 UDP 사용&lt;/td>
&lt;td>유니캐스트와 동일한 수준의 신뢰성 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv4 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>제한적 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv6 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원 (향상된 기능)&lt;/td>
&lt;td>미지원 (대신 멀티캐스트 사용)&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 간단한 구현&lt;br>- 모든 프로토콜 지원&lt;br>- 보안성 우수&lt;/td>
&lt;td>- 네트워크 대역폭 효율적 사용&lt;br>- 다수의 수신자에게 효율적 전송&lt;br>- 확장성이 좋음&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 모든 호스트에 빠른 정보 전달&lt;br>- 네트워크 설정에 유용&lt;/td>
&lt;td>- 서버 이중화 용이&lt;br>- 로드 밸런싱 효과&lt;br>- 지연 시간 최소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 다수 수신자 전송 시 비효율적&lt;br>- 대역폭 소비가 큼&lt;/td>
&lt;td>- 라우터의 멀티캐스트 지원 필요&lt;br>- 구현 복잡&lt;br>- 신뢰성 보장 메커니즘 별도 필요&lt;/td>
&lt;td>- 불필요한 트래픽 발생&lt;br>- 네트워크 성능 저하&lt;br>IPv6에서 미지원&lt;/td>
&lt;td>- 구현 복잡&lt;br>- 라우팅 테이블 크기 증가&lt;br>- 관리 어려움&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 전달 방식은 고유한 특성과 장단점을 가지고 있으며, 사용 목적과 네트워크 환경에 따라 적절한 방식을 선택해야 한다.&lt;br>
IPv6에서는 브로드캐스트가 제거되고 멀티캐스트와 애니캐스트가 강화되어 더욱 효율적인 네트워크 구성이 가능해졌다.&lt;/p>
&lt;blockquote>
&lt;p>Incast (인캐스트)&lt;/p>
&lt;ul>
&lt;li>공식적인 IP 전송 모드가 아니라 네트워크 패턴 또는 현상을 설명하는 용어.&lt;/li>
&lt;li>특징
&lt;ul>
&lt;li>다대 1 통신&lt;/li>
&lt;li>여러 송신자가 동시에 하나의 수신자에게 데이터 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점
&lt;ul>
&lt;li>병렬 처리에 효과적&lt;/li>
&lt;li>대규모 데이터 수집에 유용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단점
&lt;ul>
&lt;li>네트워크 병목 현상 발생 가능&lt;/li>
&lt;li>버퍼 오버플로우 위험&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 시기
&lt;ul>
&lt;li>빅데이터 처리&lt;/li>
&lt;li>분산 파일 시스템&lt;/li>
&lt;li>클라우드 스토리지 시스템&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>IP(Internet Protocol)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</link><pubDate>Fri, 04 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</guid><description>
&lt;h2>IP (Internet Protocol)&lt;/h2>&lt;p>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합이다.&lt;/p>
&lt;p>OSI 7계층에서 네트워크 계층(3계층)에 위치하며, TCP/IP 4계층에서는 인터넷 계층에 해당한다.&lt;br>
이 위치에서 IP는 데이터 패킷의 주소지정과 라우팅을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>IP 정보는 각 패킷에 첨부되며, 이 정보는 라우터가 패킷을 올바른 위치로 보내는 데 도움이 된다.&lt;br>
인터넷에 연결하는 모든 장치나 도메인에는 IP 주소가 할당되며, 패킷이 연결된 IP 주소로 전달되면 데이터가 필요한 곳에 도착한다.&lt;br>
패킷이 목적지에 도착하면 IP 와 함께 어떤 전송 프로토콜이 사용되는지에 따라 다르게 처리된다.&lt;br>
모든 IP 데이터 패킷은 특정 정보를 특정 순서로 표시해야 하며 모든 IP 주소는 표준화된 형식을 따른다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/internet_protocol_ip_address_diagram.svg"
alt="Internet Protocol(IP) Address Diagram"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>비연결성: 데이터 전송 전 연결 설정 과정이 없다.&lt;/li>
&lt;li>비신뢰성: 데이터 전송의 신뢰성을 보장하지 않는다.&lt;/li>
&lt;li>단편화(Fragmentation): 큰 패킷을 작은 단위로 나누어 전송할 수 있다&lt;/li>
&lt;li>라우팅(Routing): 목적지까지의 경로를 결정하여 패킷을 전달한다&lt;/li>
&lt;/ol>
&lt;h3>IP 패킷 구조&lt;/h3>&lt;p>IP 패킷은 헤더와 데이터로 구성된다.&lt;br>
주요 헤더 필드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>버전&lt;/li>
&lt;li>헤더 길이&lt;/li>
&lt;li>서비스 유형&lt;/li>
&lt;li>전체 길이&lt;/li>
&lt;li>식별자&lt;/li>
&lt;li>플래그&lt;/li>
&lt;li>프래그먼트 오프셋&lt;/li>
&lt;li>TTL (Time To Live)&lt;/li>
&lt;li>프로토콜&lt;/li>
&lt;li>헤더 체크섬&lt;/li>
&lt;li>출발지 IP 주소&lt;/li>
&lt;li>목적지 IP 주소&lt;/li>
&lt;/ul>
&lt;h3>IP의 한계와 보완&lt;/h3>&lt;p>IP의 주요 한계점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>신뢰성 부족: 패킷 손실, 중복, 순서 뒤바뀜 등의 문제가 발생할 수 있다.&lt;/li>
&lt;li>흐름 제어 부재: 수신자의 처리 능력을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;li>혼잡 제어 부재: 네트워크 상황을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;/ol>
&lt;p>이러한 한계는 상위 계층 프로토콜인 TCP에 의해 보완된다.&lt;/p>
&lt;h3>IP 라우팅&lt;/h3>&lt;p>IP 라우팅은 패킷이 목적지까지 도달하는 경로를 결정하는 과정.&lt;br>
주요 개념은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블: 목적지 네트워크와 다음 홉 정보를 저장한다.&lt;/li>
&lt;li>최단 경로 알고리즘: 최적의 경로를 결정하는 데 사용된다.&lt;/li>
&lt;li>BGP (Border Gateway Protocol): 자율 시스템 간의 라우팅에 사용된다.&lt;/li>
&lt;/ol>
&lt;h3>IP와 관련된 주요 프로토콜&lt;/h3>&lt;ol>
&lt;li>ARP (Address Resolution Protocol): IP 주소를 MAC 주소로 변환한다.&lt;/li>
&lt;li>ICMP (Internet Control Message Protocol): 네트워크 상태 및 오류 보고에 사용된다.&lt;/li>
&lt;li>DHCP (Dynamic Host Configuration Protocol): IP 주소를 동적으로 할당한다.&lt;/li>
&lt;/ol>
&lt;h3>IP 보안&lt;/h3>&lt;p>IPSec (Internet Protocol Security)는 IP 계층에서 보안을 제공하는 프로토콜 집합이다.&lt;br>
주요 기능은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>데이터 무결성&lt;/li>
&lt;li>데이터 기밀성&lt;/li>
&lt;li>인증&lt;/li>
&lt;/ol>
&lt;p>주요 특징:&lt;/p>
&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>두 가지 주요 프로토콜(AH, ESP)을 사용한다.&lt;/li>
&lt;li>두 가지 동작 모드(전송 모드, 터널 모드)를 지원한다.&lt;/li>
&lt;li>키 관리 및 보안 연관(SA) 협상을 위해 IKE 프로토콜을 사용한다.&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>강력한 보안: 암호화와 인증을 통해 데이터를 보호한다.&lt;/li>
&lt;li>유연성: 다양한 네트워크 환경에서 사용 가능하다다.&lt;/li>
&lt;li>투명성: 상위 계층 애플리케이션에 영향을 주지 않고 적용 가능하다.&lt;/li>
&lt;li>VPN 구현에 적합: 안전한 원격 접속을 제공한다.&lt;/li>
&lt;li>표준화: 다양한 벤더 간 상호 운용성을 제공한다.&lt;/li>
&lt;/ol>
&lt;p>동작 방식:&lt;/p>
&lt;ol>
&lt;li>트래픽 식별: IPSec 정책에 따라 보호가 필요한 트래픽을 식별한다.&lt;/li>
&lt;li>SA(Security Association) 협상: IKE 프로토콜을 사용하여 통신 당사자 간 보안 매개변수를 협상한다.&lt;/li>
&lt;li>데이터 처리:
&lt;ul>
&lt;li>AH(Authentication Header): 데이터 무결성과 인증을 제공한다.&lt;/li>
&lt;li>ESP(Encapsulating Security Payload): 암호화, 무결성, 인증을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패킷 전송: 암호화 및 인증된 패킷을 목적지로 전송한다.&lt;/li>
&lt;li>수신 및 처리: 수신 측에서 패킷을 복호화하고 인증한다.&lt;/li>
&lt;/ol>
&lt;p>IPSec의 주요 프로토콜:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>AH (Authentication Header)&lt;/p>
&lt;ul>
&lt;li>데이터 무결성, 데이터 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 헤더와 페이로드를 인증합니다.&lt;/li>
&lt;li>암호화는 제공하지 않습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ESP (Encapsulating Security Payload)&lt;/p>
&lt;ul>
&lt;li>데이터 기밀성(암호화), 무결성, 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 데이터그램 부분만 인증합니다.&lt;/li>
&lt;li>암호화 기능을 제공합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>IKE (Internet Key Exchange)&lt;/p>
&lt;ul>
&lt;li>SA(Security Association) 협상과 키 교환을 위한 프로토콜이다.&lt;/li>
&lt;li>AH와 ESP에서 사용할 암호화 알고리즘, 키 등의 보안 매개변수를 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>IP Address(IP 주소)&lt;/h3>&lt;p>IP 주소(IP Address)는 인터넷 프로토콜(Internet Protocol)에서 컴퓨터 네트워크에 연결된 장치들을 식별하기 위해 사용되는 고유한 주소이다.&lt;br>
네트워크 상의 장치를 고유하게 식별하는 숫자 체계로 데이터 패킷의 출발지와 목적지를 지정하는 데 사용된다.&lt;/p>
&lt;p>네트워크에 연결된 장치가 라우터이든, 일반 서버이든, 모든 기계는 이 특수한 번호를 가지고 있어야 한다. 이 번호를 이용하여 발신자를 대신하여 메시지가 전송되고 수신자를 향하여 예정된 목적지로 전달된다. 각 IP 패킷에는 패킷을 보내는 장치 또는 도메인의 IP 주소와 대상 수신자의 IP 주소가 모두 포함된다. IP Address 는 IPv4 와 IPv6 중 어떤 프로토콜을 사용하는지에 따라 형식이 다르다.&lt;/p>
&lt;p>IP 주소는 인터넷과 네트워크 통신의 근간을 이루는 중요한 요소로, 효율적인 데이터 전송과 네트워크 관리를 가능하게 한다.&lt;/p>
&lt;h4>IPv4 와 IPv6&lt;/h4>&lt;p>인터넷 프로토콜 (IP) 주소 지정 시스템의 두 가지 버전이다.&lt;br>
IPv6 는 IPv4 와의 하위 호환성을 제공하지 않아, 웹사이트가 IPv4 에서 실행되고 있지만 장치와 ISP 가 최신 프로토콜을 사용하는 경우 웹사이트에 접속할 수 없다.&lt;br>
두 버전은 동시에 실행할 수 있지만, IPv4 와 IPv6 장치 간의 통신을 용이하게 하기 위해서는 특별한 조치를 구현해야 한다. Network Address Translation(NAT) 과 같은 다른 주소 지정 시스템을 계층화하여 추상화는 것이 있다.&lt;br>
IPv4 인터넷 주소 중 약 5 억 8800 만 개는 예약된 주소이며 나머지는 공개적으로 사용할 수 있다.&lt;/p>
&lt;h5>IPv4 주소의 구성&lt;/h5>&lt;ul>
&lt;li>호스트가 속한 네트워크 주소인 Network Address, 호스트의 주소인 Host Address 로 구성된다.
&lt;ul>
&lt;li>Network Address 는 어떤 네트워크인지를 나타내 다른 네트워크와 구분하는 역할을 한다.&lt;/li>
&lt;li>Host Address 는 해당 네트워크의 어느 호스트인지를 나타내 다른 호스트와 구분하는 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Network Address 가 다르다는 것은 서로 다른 네트워크라는 의미이고, 라우터를 통하지 않고는 통신이 불가능하다는 의미이다.&lt;/li>
&lt;li>서로 다른 네트워크가 라우터를 통해 통신이 가능한 것은 라우터가 IP 주소의 Network Address 를 보고 라우팅하여 데이터를 전송하기 때문이다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/anatomy-of-ipv4-address.webp"
alt="Anatomy of IPv4 Address"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/" target="_blank" rel="noopener">https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/&lt;/a> _&lt;/p>
&lt;h5>IPv6 주소의 구성&lt;/h5>&lt;ul>
&lt;li>앞 64 비트를 Network Address 로, 뒤 64 비트를 네트워크에 연결된 랜카드 장비 등에 할당하는 Interface Address 로 활용한다. (RFC 2373 에 의거)&lt;/li>
&lt;li>Network Address 부분인 64 비트 내에서 앞 48 비트는 상위 네트워크 주소로 뒤 16 비트는 하위 네트워크 주소로 활용한다. (RIR(Regional Internet Registry) 간 협의에 기초)&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/whatis-ipv6_address-h.png"
alt="An example of the different segments of an IPv6 address"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.techtarget.com/iotagenda/definition/IPv6-address" target="_blank" rel="noopener">https://www.techtarget.com/iotagenda/definition/IPv6-address&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>주소 체계&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 크기&lt;/td>
&lt;td>32비트 (4바이트)&lt;/td>
&lt;td>128비트 (16바이트)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 공간&lt;/td>
&lt;td>약 43억개 (2^32)&lt;/td>
&lt;td>약 340간(2^128)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 표기법&lt;/td>
&lt;td>점분할 10진수 (예: 192.168.0.1)&lt;/td>
&lt;td>16진수 콜론 표기법 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>루프백 주소&lt;/td>
&lt;td>127.0.0.1&lt;/td>
&lt;td>::1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주소 관리 및 설정&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 구성 방식&lt;/td>
&lt;td>수동 구성, DHCP&lt;/td>
&lt;td>자동 구성(SLAAC), DHCPv6, 수동 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변환 필요성&lt;/td>
&lt;td>NAT 필요 (주소 부족)&lt;/td>
&lt;td>NAT 불필요 (주소 충분)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개인정보 보호&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>임시 주소 할당으로 향상된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로토콜 특성&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>코어 프로토콜&lt;/td>
&lt;td>IPv4&lt;/td>
&lt;td>IPv6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비연결 데이터 전송&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 유형&lt;/td>
&lt;td>유니캐스트, 브로드캐스트, 멀티캐스트&lt;/td>
&lt;td>유니캐스트, 멀티캐스트, 애니캐스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 처리&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60바이트 (가변)&lt;/td>
&lt;td>40바이트 (고정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 체크섬&lt;/td>
&lt;td>필수&lt;/td>
&lt;td>불필요 (상위 계층에서 처리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프래그먼테이션&lt;/td>
&lt;td>라우터와 송신 호스트에서 수행&lt;/td>
&lt;td>송신 호스트에서만 수행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>네트워크 운영&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS 해결 방식&lt;/td>
&lt;td>IPv4 주소 레코드(A)&lt;/td>
&lt;td>IPv6 주소 레코드(AAAA)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 효율성&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;td>단순화된 헤더로 향상된 효율성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>패킷 주소 지정&lt;/td>
&lt;td>복잡한 주소 지정 체계&lt;/td>
&lt;td>단순화된 주소 지정 체계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>Type of Service 필드 사용&lt;/td>
&lt;td>Traffic Class와 Flow Label 필드로 개선된 지원&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>IPv4 와 IPv6 의 Header 비교&lt;/h5>&lt;ul>
&lt;li>IPv4 와 IPv6 의 패킷은 서로 다르게 구성되어 있다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/comparing-ipv4-and-ipv6-headers.png"
alt="IPv4 Header vs IPv6 Header"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>필드&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>Bit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>IP 프로토콜 버전&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IHL&lt;/td>
&lt;td>IHL&lt;/td>
&lt;td>-&lt;/td>
&lt;td>헤더 길이 (IPv6 에서는 고정 길이로 제거됨)&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type of Service&lt;/td>
&lt;td>Type of Service&lt;/td>
&lt;td>Traffic Class&lt;/td>
&lt;td>패킷 우선순위 또는 서비스 유형 지정 지정&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total Length&lt;/td>
&lt;td>Total Length&lt;/td>
&lt;td>Payload Length&lt;/td>
&lt;td>데이터 페이로드 길이&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identification&lt;/td>
&lt;td>Identification&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flags&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fragment Offset&lt;/td>
&lt;td>Fragment Offset&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>13&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TTL&lt;/td>
&lt;td>TTL&lt;/td>
&lt;td>Hop Limit&lt;/td>
&lt;td>패킷의 최대 홉 수&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protocol&lt;/td>
&lt;td>Protocol&lt;/td>
&lt;td>Next Header&lt;/td>
&lt;td>상위 계층 프로토콜 식별&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Header Checksum&lt;/td>
&lt;td>Header Checksum&lt;/td>
&lt;td>-&lt;/td>
&lt;td>오류 검출 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>송신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>수신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Options&lt;/td>
&lt;td>Options&lt;/td>
&lt;td>-&lt;/td>
&lt;td>추가 옵션 (IPv6 에서는 확장 헤더로 대체됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Padding&lt;/td>
&lt;td>Padding&lt;/td>
&lt;td>-&lt;/td>
&lt;td>패딩 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Label&lt;/td>
&lt;td>-&lt;/td>
&lt;td>Flow Label&lt;/td>
&lt;td>플로우 식별을 위한 레이블&lt;/td>
&lt;td>20&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>구조&lt;/h4>&lt;ul>
&lt;li>IPv4: 32비트 주소 체계, 점으로 구분된 4개의 8비트 필드 (예: 192.168.1.1)&lt;/li>
&lt;li>IPv6: 128비트 주소 체계, 16진수로 표현 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/li>
&lt;/ul>
&lt;h4>할당 방식&lt;/h4>&lt;ul>
&lt;li>정적 IP: 수동으로 할당되는 고정 주소&lt;/li>
&lt;li>동적 IP: DHCP 등을 통해 자동으로 할당되는 주소&lt;/li>
&lt;/ul>
&lt;h4>중요성&lt;/h4>&lt;ul>
&lt;li>인터넷 통신의 기본 요소&lt;/li>
&lt;li>네트워크 장치 식별 및 데이터 라우팅에 필수적&lt;/li>
&lt;/ul>
&lt;h4>구성 요소&lt;/h4>&lt;ul>
&lt;li>네트워크 ID: 장치가 속한 네트워크를 식별&lt;/li>
&lt;li>호스트 ID: 해당 네트워크 내의 특정 장치를 식별&lt;/li>
&lt;/ul>
&lt;h4>클래스 체계 (IPv4)&lt;/h4>&lt;p>IPv4 도입 초기에는 클래스 (Class) 를 기준으로 Network Class 와 Host Address 를 나누는 방식을 사용했지만, 클래스 방식의 비효율성으로 인해 현재는 서브넷 마스크 (Subnet mask) 방식을 사용하고 있다.&lt;/p>
&lt;p>네트워크 클래스 (Network Class)는 IP 주소를 체계적으로 분류하고 할당하기 위해 만들어진 시스템으로, IP주소를 특정 범위로 나누어 분류한 체계이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/visual102-02.jpg"
alt="IPv4주소 구성"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://xn--3e0bx5euxnjje69i70af08bea817g.xn" target="_blank" rel="noopener">https://xn--3e0bx5euxnjje69i70af08bea817g.xn&lt;/a>&amp;ndash;3e0b707e/jsp/resources/ipv4Info.jsp _&lt;/p>
&lt;p>클래스 기준은 IP 주소를 앞에서 8 비트씩 나눈 그룹을 조합하여 Network Address 와 Host Address 를 정한 것이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>클래스&lt;/th>
&lt;th>A&lt;/th>
&lt;th>B&lt;/th>
&lt;th>C&lt;/th>
&lt;th>D&lt;/th>
&lt;th>E&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>네트워크 주소&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>호스트 주소&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>범위&lt;/td>
&lt;td>1.0.0.0 ~ 126.255.255.255&lt;/td>
&lt;td>128.0.0.0 ~ 191.255.255.255&lt;/td>
&lt;td>192.0.0.0 ~ 223.255.255.255&lt;/td>
&lt;td>224.0.0.0 ~ 239.255.255.255&lt;/td>
&lt;td>240.0.0.0 ~ 255.255.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 서브넷 마스크&lt;/td>
&lt;td>255.0.0.0&lt;/td>
&lt;td>255.255.0.0&lt;/td>
&lt;td>255.255.255.0&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사설 IP 주소&lt;/td>
&lt;td>10.0.0.0 ~ 10.255.255.255&lt;/td>
&lt;td>172.16.0.0 ~ 172.31.255.255&lt;/td>
&lt;td>192.168.0.0 ~ 192.168.255.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브로드캐스트 주소&lt;/td>
&lt;td>x.255.255.255&lt;/td>
&lt;td>x.x.255.255&lt;/td>
&lt;td>x.x.x.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특수 용도&lt;/td>
&lt;td>대규모 네트워크&lt;/td>
&lt;td>중규모 네트워크&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>멀티캐스트용&lt;/td>
&lt;td>예약된 주소로 미래에 사용될 용도로 구분해 놓은 네트워크&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>클래스 A:&lt;/p>
&lt;ul>
&lt;li>IP 주소 32 비트 중 앞 8 비트를 Network Address 로, 다음 24 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>제일 첫번째 비트는 클래스 A 의 식별비트인 &lt;code>0&lt;/code> 이 할당되기 때문에 00000000 ~ 01111111 의 번호가 Network Address 로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 A 의 네트워크 부는 0 ~ 127 번호가 할당&lt;/strong>&lt;/li>
&lt;li>Network Address 의 0 과 127 은 예약된 network ID 로 제외된다.&lt;br>
클래스 B:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 16 비트를 Network Address 로, 다음 16 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>맨 앞 2 비트는 클래스 B 의 식별 비트인 &lt;code>10&lt;/code> 으로 할당되기 때문에 10000000 ~ 10111111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 B 의 네트워크 부는 128.0 ~ 191.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 172.16~172.31 은 예약된 network ID 로 제외된다.&lt;br>
클래스 C:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 24 비트를 Network Address 로, 다음 8 비트를 Host Address 를 정한 것&lt;/li>
&lt;li>맨 앞 3 비트는 클래스 C 의 식별 비트인 &amp;lsquo;110&amp;rsquo; 으로 할당되기 때문에 11000000 ~ 11011111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 C 의 네트워크 부는 192.0.0 ~ 255.255.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 192.168.0~192.168.255 은 예약된 network ID 로 제외된다.&lt;/li>
&lt;/ul>
&lt;p>추가 정보:&lt;/p>
&lt;ul>
&lt;li>클래스 A, B, C는 유니캐스트 통신에 사용된다.&lt;/li>
&lt;li>127.0.0.0 ~ 127.255.255.255는 루프백 주소로 사용된다.&lt;/li>
&lt;li>사설 IP 주소는 인터넷에 직접 연결되지 않는 내부 네트워크에서 사용된다.&lt;/li>
&lt;li>현대 네트워크에서는 CIDR(Classless Inter-Domain Routing)을 사용하여 더 유연한 주소 할당이 가능하다.&lt;/li>
&lt;/ul>
&lt;p>주의사항:&lt;/p>
&lt;ul>
&lt;li>클래스 A의 0.0.0.0은 특수 용도로 사용되며, 127.x.x.x는 루프백 주소로 사용된다.&lt;/li>
&lt;li>각 클래스의 네트워크 주소와 브로드캐스트 주소는 호스트 주소로 사용할 수 없다.&lt;/li>
&lt;li>D와 E 클래스는 일반적인 호스트 주소 할당에 사용되지 않는다.&lt;/li>
&lt;/ul>
&lt;h4>종류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>Public IP&lt;/th>
&lt;th>Private IP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>인터넷에서 직접 접근 가능한 고유한 주소&lt;/td>
&lt;td>로컬 네트워크 내에서 사용되는 내부 주소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>할당 주체&lt;/td>
&lt;td>ISP(인터넷 서비스 제공자)&lt;/td>
&lt;td>라우터 또는 네트워크 관리자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>고유성&lt;/td>
&lt;td>인터넷 상에서 전 세계적으로 유일&lt;/td>
&lt;td>로컬 네트워크 내에서만 유일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>접근성&lt;/td>
&lt;td>내부 및 외부에서 접근 가능&lt;/td>
&lt;td>로컬 네트워크 내부에서만 접근 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 범위&lt;/td>
&lt;td>ISP에 의해 할당된 모든 주소&lt;/td>
&lt;td>클래스 A: 10.0.0.0 - 10.255.255.255&lt;br>클래스 B: 172.16.0.0 - 172.31.255.255&lt;br>클래스 C: 192.168.0.0 - 192.168.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인터넷 연결&lt;/td>
&lt;td>직접 인터넷에 연결 가능&lt;/td>
&lt;td>NAT를 통해 인터넷에 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>외부 공격에 더 취약&lt;/td>
&lt;td>외부로부터 직접 접근 불가능하여 상대적으로 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용&lt;/td>
&lt;td>일반적으로 유료&lt;/td>
&lt;td>무료로 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>용도&lt;/td>
&lt;td>서버 호스팅, 원격 접속 등&lt;/td>
&lt;td>가정이나 회사 내부 네트워크 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변경&lt;/td>
&lt;td>고정 또는 동적으로 변경 가능&lt;/td>
&lt;td>로컬 네트워크 내에서 변경 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Public IP (공인 IP)는 사용자의 전체 네트워크에 적용되기에 동일한 인터넷 연결을 사용하는 장치는 IP 주소를 공유하게 된다. 그리고, 인터넷 업체는 공인 IP 주소의 사용자가 누구인지 파악할 수 있기에 공인 IP 주소를 사용하는 경우 인터넷 활동이 추적되고 모니터링될 수 있다.&lt;/p>
&lt;p>Private IP (사설 IP)는 로컬 네트워크에서 할당되며 다른 네트워크의 IP 주소와 중복될 수 있다. 각자의 내부 네트워크에서 사용되기에 다른 네트워크의 IP 주소와 중복되더라도 문제가 없다. 대신 동일한 로컬 네트워크에 연결된 장치에는 같은 사설 IP 주소를 할당할 수 없다. 전 세계에는 수백만 개의 사설 네트워크가 존재하며 사설 네트워크에 연결된 장치에는 다음 사설 IP 대역 내의 IP 주소가 할당된다.&lt;/p>
&lt;h4>Loopback Address (루프백 주소)&lt;/h4>&lt;p>컴퓨터가 자신을 가리키는 데 사용하는 특수 목적의 IP 주소.&lt;/p>
&lt;p>용도:&lt;/p>
&lt;ul>
&lt;li>로컬 시스템 테스트.&lt;/li>
&lt;li>네트워크 소프트웨어 디버깅&lt;/li>
&lt;li>로컬 서버와의 통신.&lt;/li>
&lt;/ul>
&lt;p>특징:&lt;/p>
&lt;ul>
&lt;li>외부로 라우팅되지 않음.&lt;/li>
&lt;li>물리적 네트워크 인터페이스가 필요 없음.&lt;/li>
&lt;li>항상 사용 가능하며 항상 작동 상태임.&lt;/li>
&lt;/ul>
&lt;p>동작 원리:&lt;br>
Loopback Address (루프백 주소) 로 보내진 데이터는 실제로 네트워크로 나가지 않고, 네트워크 스택 내에서 즉시 &lt;strong>Loopback(루프백)&lt;/strong> 되어 다시 수신된다.&lt;/p>
&lt;p>보안:&lt;br>
외부에서 접근할 수 없어 상대적으로 안전함.&lt;/p>
&lt;p>네트워크 구성:&lt;br>
대부분의 운영 체제에서 루프백 인터페이스는 자동으로 구성되며, 별도의 설정이 필요없다.&lt;/p>
&lt;p>루프백 범위:&lt;br>
IPv4 에서 전체 127.0.0.0/8 네트워크가 루프백을 위해 예약되어 있지만, 일반적으로 127.0.0.1 만 사용된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>