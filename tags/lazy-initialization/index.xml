<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lazy-Initialization :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/lazy-initialization/</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Fri, 11 Oct 2024 18:21:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/lazy-initialization/index.xml" rel="self" type="application/rss+xml"/><item><title>Singleton Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/software-design-patterns/creational-design-patterns/singleton-pattern/</link><pubDate>Fri, 11 Oct 2024 18:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/software-design-patterns/creational-design-patterns/singleton-pattern/</guid><description>클래스의 인스턴스가 프로그램 전체에서 오직 하나만 생성되도록 보장하는 소프트웨어 디자인 패턴.</description></item></channel></rss>