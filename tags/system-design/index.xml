<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>System-Design on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/system-design/</link>
    <description>Recent content in System-Design on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Apr 2025 15:32:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/system-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System Design</title>
      <link>https://buenhyden.github.io/posts/system-design/</link>
      <pubDate>Thu, 19 Sep 2024 21:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/</guid>
      <description>소프트웨어 시스템 디자인은 소프트웨어의 구조와 동작을 계획하고 정의하는 과정</description>
    </item>
    <item>
      <title>E-Commerce Service</title>
      <link>https://buenhyden.github.io/posts/system-design/case-studies/e-commerce-service/</link>
      <pubDate>Tue, 03 Dec 2024 12:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/case-studies/e-commerce-service/</guid>
      <description>물품 구매 서비스를 구현하기 위해 필요한 사항들을 정리한다.</description>
    </item>
    <item>
      <title>선사용 IT 솔루션</title>
      <link>https://buenhyden.github.io/posts/system-design/case-studies/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</link>
      <pubDate>Tue, 03 Dec 2024 01:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/case-studies/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</guid>
      <description>해운업계의 디지털 전환 사례와 최신 기술 트렌드를 기반으로 정리</description>
    </item>
    <item>
      <title>Enterprise Resource Planning</title>
      <link>https://buenhyden.github.io/posts/system-design/case-studies/enterprise-resource-planning/</link>
      <pubDate>Tue, 03 Dec 2024 00:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/case-studies/enterprise-resource-planning/</guid>
      <description>ERP(Enterprise Resource Planning)는 기업의 모든 자원을 통합적으로 관리하고 운영하기 위한 시스템</description>
    </item>
    <item>
      <title>Warehouse Management System</title>
      <link>https://buenhyden.github.io/posts/system-design/case-studies/warehouse-management-system/</link>
      <pubDate>Tue, 03 Dec 2024 00:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/case-studies/warehouse-management-system/</guid>
      <description>WMS(Warehouse Management System)는 창고 관리 시스템으로, 창고 내의 물류 프로세스를 최적화하고 효율적으로 관리하기 위한 소프트웨어 애플리케이션을 말한다</description>
    </item>
    <item>
      <title>Cache Strategy vs Cache Policy</title>
      <link>https://buenhyden.github.io/posts/system-design/caching/cache-strategy-vs-cache-policy/</link>
      <pubDate>Mon, 30 Sep 2024 15:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/caching/cache-strategy-vs-cache-policy/</guid>
      <description>캐시 전략(Cache Strategy)과 캐시 정책(Cache Policy)은 컴퓨터 아키텍처에서 캐시 메모리의 효율적 운영을 위한 핵심 개념이다.</description>
    </item>
    <item>
      <title>Types</title>
      <link>https://buenhyden.github.io/posts/system-design/fundamentals/performance-vs-scalability/scalability/types/</link>
      <pubDate>Thu, 03 Apr 2025 15:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/fundamentals/performance-vs-scalability/scalability/types/</guid>
      <description>트래픽 증가나 데이터 처리량이 급증할 때 적절한 확장 전략을 선택하는 것은 시스템의 성공적인 운영에 핵심적인 역할을 한다.</description>
    </item>
    <item>
      <title>Ambassador</title>
      <link>https://buenhyden.github.io/posts/system-design/cloud-design-patterns/design-and-implementation/ambassador/</link>
      <pubDate>Tue, 19 Nov 2024 10:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/cloud-design-patterns/design-and-implementation/ambassador/</guid>
      <description>Ambassador Pattern은 클라이언트와 마이크로서비스 사이에 별도의 서비스(Ambassador)를 두어 통신을 관리하는 디자인 패턴이다.</description>
    </item>
    <item>
      <title>Istio</title>
      <link>https://buenhyden.github.io/posts/platform-engineering/cloud-native-platforms/service-mesh/tools/istio/istio/</link>
      <pubDate>Mon, 11 Nov 2024 06:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/platform-engineering/cloud-native-platforms/service-mesh/tools/istio/istio/</guid>
      <description>마이크로서비스 아키텍처에서 서비스 간 통신을 관리하고 제어하는 서비스 메시(Service Mesh) 플랫폼</description>
    </item>
  </channel>
</rss>
