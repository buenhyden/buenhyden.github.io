<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>명령형-프로그래밍 :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/%EB%AA%85%EB%A0%B9%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Wed, 09 Oct 2024 09:06:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/%EB%AA%85%EB%A0%B9%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/index.xml" rel="self" type="application/rss+xml"/><item><title>객체 지향 프로그래밍 (Object-Oriented Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/oop.html</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/oop.html</guid><description>현실 세계의 개체를 소프트웨어 객체로 모델링하는 프로그래밍 방식으로 데이터(속성)와 그 데이터를 처리하는 메서드(행동)를 하나의 단위인 객체로 묶는다.</description></item><item><title>구조적 프로그래밍 (Structured Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/structured-programming.html</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/structured-programming.html</guid><description>구조적 프로그래밍은 1960년대에 등장한 프로그래밍 패러다임으로, 프로그램을 순차, 선택, 반복의 세 가지 기본 제어 구조로 구성하여 코드의 흐름을 체계적으로 관리하는 방식</description></item><item><title>절차적 프로그래밍 (Procedural Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/procedural-programming.html</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/procedural-programming.html</guid><description>프로그램의 실행 흐름을 일련의 절차나 함수로 구성하는 프로그래밍 패러다임</description></item></channel></rss>