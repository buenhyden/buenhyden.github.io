<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>API-Integration-Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/api-integration-patterns/</link>
    <description>Recent content in API-Integration-Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Feb 2025 15:21:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/api-integration-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Synchronous vs Asynchronous APIs</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>API Gateways</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/api-gateways/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/api-gateways/</guid>
      <description>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트</description>
    </item>
    <item>
      <title>Webhooks vs Polling</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/</link>
      <pubDate>Sun, 23 Feb 2025 15:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/</guid>
      <description>&lt;h2 id=&#34;webhooks-vs-polling&#34;&gt;Webhooks vs Polling&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>폴링(Polling)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/polling/</link>
      <pubDate>Sun, 20 Oct 2024 16:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/polling/</guid>
      <description>폴링(Polling)은 소프트웨어 개발에서 중요한 통신 기법으로, 클라이언트가 주기적으로 서버에 데이터나 상태 변경을 요청하는 방식이다.</description>
    </item>
    <item>
      <title>웹훅 (Webhook)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/webhook/</link>
      <pubDate>Sat, 19 Oct 2024 06:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/webhooks-vs-polling/webhook/</guid>
      <description>웹훅은 웹 애플리케이션에서 특정 이벤트가 발생했을 때 다른 애플리케이션에 실시간으로 정보를 전달하는 방법이다.</description>
    </item>
    <item>
      <title>동기(Synchronous)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/synchronous/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/synchronous/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>비동기(Asynchronous)</title>
      <link>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/asynchronous/</link>
      <pubDate>Sun, 06 Oct 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend/api-design/api-integration-patterns/synchronous-vs-asynchronous-apis/asynchronous/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
  </channel>
</rss>
