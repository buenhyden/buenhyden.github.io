<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Event-Brokers-vs-Message-Brokers on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/event-brokers-vs-message-brokers/</link>
    <description>Recent content in Event-Brokers-vs-Message-Brokers on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Fri, 18 Jul 2025 05:58:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/event-brokers-vs-message-brokers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Broker</title>
      <link>https://buenhyden.github.io/posts/system-design/distributed-systems/message-oriented-systems/messaging-infrastructure/message-brokers/message-brokers-vs-event-brokers/event-broker/</link>
      <pubDate>Fri, 18 Jul 2025 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/distributed-systems/message-oriented-systems/messaging-infrastructure/message-brokers/message-brokers-vs-event-brokers/event-broker/</guid>
      <description>이벤트 브로커는 이벤트 발행자와 구독자 간의 메시지 교환을 중개하는 미들웨어로, 비동기 통신, 실시간 데이터 분배, 서비스 간 결합도 감소, 확장성 및 장애 복원력을 제공한다. Pub/Sub, 스트리밍, 다양한 QoS(서비스 품질) 와 같은 고급 기능을 지원하며, 현대 백엔드 아키텍처의 핵심 역할을 담당한다.</description>
    </item>
    <item>
      <title>Message Broker</title>
      <link>https://buenhyden.github.io/posts/system-design/distributed-systems/message-oriented-systems/messaging-infrastructure/message-brokers/</link>
      <pubDate>Fri, 18 Jul 2025 05:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/distributed-systems/message-oriented-systems/messaging-infrastructure/message-brokers/</guid>
      <description>메시지 브로커 (Message Broker) 는 송신자 (Sender) 와 수신자 (Receiver) 간의 메시지를 비동기적으로 중개하고 라우팅하는 미들웨어이다. 큐 (Queue) 나 토픽 (Topic) 기반의 메시지 전달로 시스템 간 결합도를 낮추고, 신뢰성, 확장성, 장애 복원력 있는 데이터 통신을 지원한다.</description>
    </item>
    <item>
      <title>Queue vs. Topic</title>
      <link>https://buenhyden.github.io/posts/system-design/distributed-systems/message-oriented-systems/messaging-fundamentals/queue-vs-topic/</link>
      <pubDate>Tue, 22 Apr 2025 13:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/distributed-systems/message-oriented-systems/messaging-fundamentals/queue-vs-topic/</guid>
      <description>Queue 와 Topic 은 메시징 시스템의 핵심 통신 패턴으로, Queue 는 point-to-point 모델을 통해 단일 소비자에게 메시지를 전달하는 반면, Topic 은 publish-subscribe 모델을 사용하여 다중 구독자에게 메시지를 브로드캐스트한다. 각각 다른 사용 사례와 특성을 가지며 분산 시스템 설계에서 중요한 역할을 담당한다.</description>
    </item>
  </channel>
</rss>
