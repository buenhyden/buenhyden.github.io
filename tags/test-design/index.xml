<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Test-Design</title><link>https://buenhyden.github.io/tags/test-design/</link><description>Recent content in Test-Design on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 21 Dec 2024 02:29:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/test-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Black-box Test and White-box Test</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-test-and-white-box-test/</link><pubDate>Sat, 21 Dec 2024 02:29:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-test-and-white-box-test/</guid><description>
&lt;h2>Black-box Test and White-box Test&lt;span class="hx-absolute -hx-mt-20" id="black-box-test-and-white-box-test">&lt;/span>
&lt;a href="#black-box-test-and-white-box-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Black-box Testing(블랙박스 테스팅)은 소프트웨어의 내부 구조나 동작 원리를 모르는 상태에서 진행하는 테스트 방식이다.&lt;br>
마치 불투명한 상자 안을 들여다볼 수 없는 것처럼, 테스터는 입력값을 넣고 그에 따른 출력값만을 확인한다.&lt;br>
예를 들어, 계산기 애플리케이션을 테스트할 때 &amp;ldquo;2+2&amp;quot;를 입력했을 때 &amp;ldquo;4&amp;quot;가 출력되는지만 확인하고, 그 계산 과정이 어떤 알고리즘으로 이루어지는지는 고려하지 않는다.&lt;/p>
&lt;p>Black-box Testing의 주요 특징은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>사용자 관점에서의 테스트가 가능하다. 실제 사용자들이 소프트웨어를 사용하는 방식과 유사하게 테스트할 수 있다.&lt;/li>
&lt;li>테스터가 코드에 대한 지식이 없어도 테스트를 수행할 수 있다.&lt;/li>
&lt;li>경계값 분석, 동등 분할, 결정 테이블 등의 기법을 활용할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>반면 White-box Testing(화이트박스 테스팅)은 소프트웨어의 내부 로직을 알고 있는 상태에서 진행하는 테스트이다.&lt;br>
투명한 상자처럼 내부 구조를 모두 볼 수 있어, 코드의 특정 부분이 어떻게 작동하는지 세세하게 테스트할 수 있다.&lt;br>
예를 들어, 로그인 기능을 테스트할 때 비밀번호 암호화 과정, 데이터베이스 접근 방식, 예외 처리 등의 내부 로직을 모두 확인한다.&lt;/p>
&lt;p>White-box Testing의 주요 특징은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>코드 커버리지를 높일 수 있다. 모든 코드 경로가 적어도 한 번은 실행되도록 테스트를 설계할 수 있다.&lt;/li>
&lt;li>불필요한 코드나 숨겨진 버그를 발견하기 쉽다.&lt;/li>
&lt;li>구문 커버리지, 분기 커버리지, 조건 커버리지 등 다양한 커버리지 지표를 활용한다.&lt;/li>
&lt;/ol>
&lt;p>이 두 방식은 상호 보완적인 관계에 있다. Black-box Testing은 사용자 관점에서의 기능 검증에 효과적이고, White-box Testing은 내부 로직의 정확성을 검증하는 데 효과적이다.&lt;br>
실제 개발 현장에서는 두 방식을 모두 활용하여 더 견고한 소프트웨어를 만들어낸다. 냅니다.&lt;/p>
&lt;p>예를 들어, 온라인 쇼핑몰의 결제 시스템을 테스트한다고 가정해보자:&lt;/p>
&lt;p>Black-box Testing 접근:&lt;/p>
&lt;ul>
&lt;li>정상적인 카드 결제가 이루어지는지 확인&lt;/li>
&lt;li>잘못된 카드 번호 입력 시 적절한 오류 메시지가 표시되는지 확인&lt;/li>
&lt;li>결제 완료 후 주문 확인 이메일이 발송되는지 확인&lt;/li>
&lt;/ul>
&lt;p>White-box Testing 접근:&lt;/p>
&lt;ul>
&lt;li>카드 정보 암호화 과정이 올바르게 작동하는지 확인&lt;/li>
&lt;li>데이터베이스에 주문 정보가 정확히 저장되는지 확인&lt;/li>
&lt;li>결제 실패 시 트랜잭션 롤백이 제대로 이루어지는지 확인&lt;/li>
&lt;/ul>
&lt;p>이러한 체계적인 테스팅을 통해 소프트웨어의 품질을 보장하고, 사용자에게 안정적인 서비스를 제공할 수 있다.&lt;/p>
&lt;h3>블랙박스 테스트 (Black-box Test)&lt;span class="hx-absolute -hx-mt-20" id="블랙박스-테스트-black-box-test">&lt;/span>
&lt;a href="#%eb%b8%94%eb%9e%99%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8-black-box-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>소프트웨어의 내부 구조나 작동 방식을 모르는 상태에서 외부 동작을 검증하는 방식이다.&lt;br>
마치 검은 상자 안을 들여다볼 수 없는 것처럼, 입력값을 넣고 출력값을 확인하는 방식으로 테스트를 수행한다.&lt;br>
예를 들어, 계산기 애플리케이션을 테스트할 때 2와 3을 더했을 때 5가 나오는지만 확인하고, 내부적으로 어떻게 덧셈을 수행하는지는 고려하지 않는다.&lt;/p>
&lt;p>블랙박스 테스팅은 &lt;strong>사용자 관점에서의 기능 검증&lt;/strong>에 중점을 둔다.&lt;/p>
&lt;h4>블랙박스 테스팅의 기본 원리&lt;span class="hx-absolute -hx-mt-20" id="블랙박스-테스팅의-기본-원리">&lt;/span>
&lt;a href="#%eb%b8%94%eb%9e%99%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>블랙박스 테스팅은 &amp;lsquo;명세 기반 테스팅&amp;rsquo;이라고도 불린다.&lt;br>
테스터는 소프트웨어가 &amp;lsquo;무엇을 해야 하는지&amp;rsquo;에 초점을 맞추고, &amp;lsquo;어떻게 구현되었는지&amp;rsquo;는 고려하지 않는다.&lt;br>
예를 들어, 계산기 프로그램을 테스트할 때 내부의 계산 알고리즘은 알 필요 없이, 입력한 숫자에 대해 올바른 계산 결과가 나오는지만 확인한다.&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>외부 동작 중심&lt;/strong>: 소프트웨어의 내부 구조를 알지 못한 채 외부에서 관찰 가능한 동작을 테스트한다.&lt;/li>
&lt;li>&lt;strong>기능 중심&lt;/strong>: 요구사항에 맞는 기능이 제대로 수행되는지 확인한다.&lt;/li>
&lt;li>&lt;strong>사용자 관점&lt;/strong>: 실제 사용자의 입장에서 소프트웨어를 테스트한다.&lt;/li>
&lt;li>&lt;strong>명세 기반&lt;/strong>: 요구사항 명세서, 시스템 스펙 등을 기반으로 테스트 케이스를 작성한다.&lt;/li>
&lt;li>&lt;strong>입출력 중심&lt;/strong>: 특정 입력에 대한 예상 출력을 검증한다.&lt;/li>
&lt;/ol>
&lt;h4>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>사용자 중심 접근&lt;/strong>: 실제 사용 환경에서 발생할 수 있는 오류를 효과적으로 발견할 수 있다.&lt;/li>
&lt;li>&lt;strong>내부 구조 지식 불필요&lt;/strong>: 테스터가 소프트웨어의 내부 구조나 코드를 알 필요가 없어 테스트 수행이 용이하다.&lt;/li>
&lt;li>&lt;strong>편견 없는 테스트&lt;/strong>: 개발 과정에서 고려하지 않았을 수 있는 잠재적 문제를 식별할 수 있다.&lt;/li>
&lt;li>&lt;strong>요구사항 검증&lt;/strong>: 소프트웨어가 사용자의 요구사항과 기대치를 충족하는지 확인하는 데 효과적이다.&lt;/li>
&lt;li>&lt;strong>효율적인 테스트 케이스 도출&lt;/strong>: 동등 분할, 경계값 분석 등의 기법을 통해 효율적으로 테스트 케이스를 생성할 수 있다.&lt;/li>
&lt;li>&lt;strong>자동화 용이성&lt;/strong>: 다양한 자동화 도구를 사용하여 테스트 과정을 자동화할 수 있어 시간과 노력을 절약할 수 있다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 소프트웨어의 규모와 복잡성에 따라 테스트를 확장할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>화이트박스 테스트 (White-box Test)&lt;span class="hx-absolute -hx-mt-20" id="화이트박스-테스트-white-box-test">&lt;/span>
&lt;a href="#%ed%99%94%ec%9d%b4%ed%8a%b8%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8a%b8-white-box-test" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>화이트박스 테스팅은 소프트웨어의 내부 로직과 구조를 알고 있는 상태에서 수행하는 테스트이다.&lt;br>
프로그램의 내부 로직과 코드 흐름을 상세히 검증한다.&lt;br>
이는 &amp;lsquo;구조 기반 테스팅&amp;rsquo; 또는 &amp;lsquo;글래스박스 테스팅&amp;rsquo;이라고도 불린다.&lt;/p>
&lt;p>화이트박스 테스팅은 &lt;strong>내부 로직의 정확성을 검증&lt;/strong>하는 데 초점을 맞춘다.&lt;/p>
&lt;h4>화이트박스 테스팅의 기본 원리&lt;span class="hx-absolute -hx-mt-20" id="화이트박스-테스팅의-기본-원리">&lt;/span>
&lt;a href="#%ed%99%94%ec%9d%b4%ed%8a%b8%eb%b0%95%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>테스터는 프로그램의 소스 코드를 직접 분석하고, 각 구문, 조건문, 반복문 등이 의도한 대로 동작하는지 확인한다.&lt;br>
예를 들어, if문의 모든 조건이 적절히 처리되는지, 반복문이 정확한 횟수만큼 실행되는지 등을 검증한다.&lt;br>
이는 마치 시계 수리공이 시계의 모든 톱니바퀴가 제대로 맞물려 돌아가는지 확인하는 것과 유사하다.&lt;/p>
&lt;h4>특징&lt;span class="hx-absolute -hx-mt-20" id="특징-1">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>내부 구조 기반: 소스 코드, 알고리즘, 내부 로직에 접근하여 테스트한다.&lt;/li>
&lt;li>코드 커버리지 분석: 테스트되지 않은 코드 영역을 식별한다.&lt;/li>
&lt;li>프로그래밍 지식 필요: 테스터는 프로그래밍 언어와 코드 구조를 이해해야 한다.&lt;/li>
&lt;li>다양한 테스트 유형: 구문 커버리지, 분기 커버리지, 조건 커버리지 등이 있다.&lt;/li>
&lt;/ol>
&lt;h4>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-1">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>코드 품질 향상: 내부 로직을 검증하여 소프트웨어의 전반적인 품질을 개선한다.&lt;/li>
&lt;li>조기 결함 발견: 개발 초기 단계에서 잠재적 문제를 식별하고 해결할 수 있다.&lt;/li>
&lt;li>보안 취약점 식별: 코드 내의 보안 취약점을 발견하고 수정할 수 있다.&lt;/li>
&lt;li>효율적인 테스트: 코드의 모든 경로를 체계적으로 테스트하여 테스트 커버리지를 극대화한다.&lt;/li>
&lt;li>자동화 용이성: 특히 단위 테스트에서 자동화가 쉽다.&lt;/li>
&lt;li>유지보수성 향상: 코드의 구조와 동작을 이해함으로써 향후 유지보수가 용이해진다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Scenario Testing vs Use Case Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/scenario-testing-vs-use-case-testing/</link><pubDate>Mon, 16 Dec 2024 17:12:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/scenario-testing-vs-use-case-testing/</guid><description>
&lt;h2>Scenario Testing Vs Use Case Testing&lt;span class="hx-absolute -hx-mt-20" id="scenario-testing-vs-use-case-testing">&lt;/span>
&lt;a href="#scenario-testing-vs-use-case-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Scenario Testing과 Use Case Testing은 소프트웨어 테스팅 기법으로, 사용자 관점에서 시스템의 기능과 동작을 검증하는 데 사용된다.&lt;br>
두 기법은 유사한 점이 있지만, 접근 방식과 세부 사항에서 차이가 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Scenario Testing&lt;/th>
&lt;th>Use Case Testing&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>실제 사용자의 행동과 상황을 기반으로 한 현실적인 시나리오를 통해 시스템을 테스트하는 방법&lt;/td>
&lt;td>사용자와 시스템 간의 상호작용을 구조화된 형식으로 정의하고 테스트하는 방법&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 관점&lt;/td>
&lt;td>사용자 중심적이며, 실제 업무 상황과 맥락을 중요시함&lt;/td>
&lt;td>시스템 중심적이며, 기능적 정확성과 완전성을 중요시함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>목적&lt;/td>
&lt;td>실제 사용 환경에서의 시스템 동작을 검증&lt;/td>
&lt;td>시스템의 기능적 요구사항을 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구조화 정도&lt;/td>
&lt;td>자유로운 형식으로, 스토리텔링 방식의 서술적 구조&lt;/td>
&lt;td>체계적이고 형식적인 구조 (기본 흐름, 대체 흐름, 예외 흐름)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 범위&lt;/td>
&lt;td>여러 기능이나 프로세스를 걸쳐 있는 end-to-end 시나리오&lt;/td>
&lt;td>주로 단일 기능이나 프로세스에 초점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 설계&lt;/td>
&lt;td>자유로운 형식으로 다양한 &amp;ldquo;가정&amp;rdquo; 상황을 포함&lt;/td>
&lt;td>유스케이스 문서의 기본 흐름과 대체 흐름을 따름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 케이스 도출&lt;/td>
&lt;td>다양한 소스(사용자 피드백, 시장 조사 등)에서 시나리오 개발&lt;/td>
&lt;td>유스케이스 문서에서 직접 테스트 케이스를 도출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상황 맥락&lt;/td>
&lt;td>사용자의 동기, 감정, 환경 등 풍부한 맥락 정보 포함&lt;/td>
&lt;td>객관적이고 기술적인 상호작용 위주의 맥락&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문서화 방식&lt;/td>
&lt;td>서술적이고 이야기 형식의 문서화&lt;/td>
&lt;td>구조화되고 단계별로 정형화된 문서화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 상황&lt;/td>
&lt;td>사용자 경험이 중요한 애플리케이션, 복잡한 업무 프로세스&lt;/td>
&lt;td>명확한 기능 요구사항이 있는 시스템, 트랜잭션 기반 애플리케이션&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 설계 난이도&lt;/td>
&lt;td>실제 사용자 경험에 대한 이해가 필요하며, 창의적인 시나리오 도출이 중요&lt;/td>
&lt;td>체계적인 분석과 문서화 능력이 필요하며, 기술적 이해가 중요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수성&lt;/td>
&lt;td>시나리오 수정이 비교적 자유롭고 유연함&lt;/td>
&lt;td>구조화된 형식으로 인해 변경 관리가 체계적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>재사용성&lt;/td>
&lt;td>특정 상황에 특화된 시나리오로 재사용이 제한적&lt;/td>
&lt;td>표준화된 형식으로 인해 재사용이 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커버리지 측정&lt;/td>
&lt;td>시나리오 기반의 정성적 측정이 주로 이루어짐&lt;/td>
&lt;td>흐름 기반의 정량적 측정이 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 자동화&lt;/td>
&lt;td>복잡한 시나리오로 인해 자동화가 어려울 수 있음&lt;/td>
&lt;td>구조화된 형식으로 인해 자동화가 비교적 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>예상치 못한 오류 발견에 효과적, 사용자 경험 개선에 도움&lt;/td>
&lt;td>요구사항 검증에 효과적, 체계적인 테스트 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>모든 가능한 시나리오를 고려하기 어려움&lt;/td>
&lt;td>유스케이스 문서의 품질에 의존적&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>실제 프로젝트에서는 이 두 방법을 상호 보완적으로 사용하는 것이 효과적이다.&lt;br>
예를 들어, Use Case Testing으로 기본적인 기능 정확성을 검증하고, Scenario Testing으로 실제 사용 환경에서의 사용성과 통합성을 검증하는 방식으로 활용할 수 있다.&lt;/p>
&lt;p>두 테스팅 방법의 효과적인 활용을 위해서는, 프로젝트의 특성과 목표를 고려하여 적절한 비중으로 조합하는 것이 중요하다.&lt;br>
또한, 각 방법의 장단점을 이해하고, 테스트 전략 수립 시 이를 고려하여 효율적인 테스트 계획을 수립하는 것이 바람직하다&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Use Case Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/use-case-testing/</link><pubDate>Thu, 12 Dec 2024 17:11:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/use-case-testing/</guid><description>
&lt;h2>유즈케이스 테스팅 (Use Case Testing))&lt;span class="hx-absolute -hx-mt-20" id="유즈케이스-테스팅-use-case-testing">&lt;/span>
&lt;a href="#%ec%9c%a0%ec%a6%88%ec%bc%80%ec%9d%b4%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85-use-case-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>유즈케이스 테스팅은 유즈케이스나 비즈니스 시나리오를 기반으로 테스트를 명세화하는 블랙박스 테스트 설계 기법이다.&lt;br>
이 방법은 액터와 시스템 간의 상호작용을 표현하고, 그 결과를 사용자에게 전달하는 과정을 테스트한다.&lt;/p>
&lt;p>실제 예시를 통해 구체적으로 살펴보자.&lt;br>
온라인 쇼핑몰의 상품 주문 기능에 대한 유즈케이스 테스팅을 설계한다고 가정해보면:&lt;/p>
&lt;p>기본 흐름(Basic Flow):&lt;/p>
&lt;ol>
&lt;li>사용자가 상품을 장바구니에 추가한다&lt;/li>
&lt;li>시스템이 장바구니 내용을 표시한다&lt;/li>
&lt;li>사용자가 주문하기 버튼을 클릭한다&lt;/li>
&lt;li>시스템이 배송 정보 입력 폼을 표시한다&lt;/li>
&lt;li>사용자가 배송 정보를 입력한다&lt;/li>
&lt;li>시스템이 결제 수단 선택 화면을 표시한다&lt;/li>
&lt;li>사용자가 결제 수단을 선택하고 결제한다&lt;/li>
&lt;li>시스템이 주문 완료 화면을 표시한다&lt;/li>
&lt;/ol>
&lt;p>대체 흐름(Alternative Flows):&lt;/p>
&lt;ul>
&lt;li>장바구니가 비어있는 경우&lt;/li>
&lt;li>배송 정보가 불완전한 경우&lt;/li>
&lt;li>결제가 실패한 경우&lt;/li>
&lt;/ul>
&lt;p>예외 흐름(Exception Flows):&lt;/p>
&lt;ul>
&lt;li>시스템 오류 발생 시&lt;/li>
&lt;li>네트워크 연결 끊김 시&lt;/li>
&lt;li>세션 만료 시&lt;/li>
&lt;/ul>
&lt;p>유즈케이스 테스팅의 단계별 수행 과정을 살펴보자:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>유즈케이스 분석 단계&lt;br>
먼저 테스트할 유즈케이스의 모든 구성 요소를 파악한다:&lt;/p>
&lt;ul>
&lt;li>선행 조건(예: 로그인된 상태여야 함)&lt;/li>
&lt;li>사용자 액션과 시스템 응답&lt;/li>
&lt;li>대체 흐름과 예외 상황&lt;/li>
&lt;li>후행 조건(예: 주문 정보가 데이터베이스에 저장되어야 함)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 시나리오 도출 단계&lt;br>
각 흐름별로 구체적인 테스트 시나리오를 작성한다.&lt;br>
기본 흐름뿐만 아니라 모든 대체 흐름과 예외 흐름에 대해서도 시나리오를 만든다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 설계 단계&lt;br>
각 시나리오를 구체적인 테스트 케이스로 변환한다.&lt;br>
테스트 케이스에는 다음 내용이 포함된다:&lt;/p>
&lt;ul>
&lt;li>테스트 목적&lt;/li>
&lt;li>선행 조건&lt;/li>
&lt;li>테스트 데이터&lt;/li>
&lt;li>테스트 단계&lt;/li>
&lt;li>예상 결과&lt;/li>
&lt;li>판단 기준&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 준비 단계&lt;br>
테스트 환경을 설정하고 필요한 테스트 데이터를 준비한다:&lt;/p>
&lt;ul>
&lt;li>테스트 계정 생성&lt;/li>
&lt;li>테스트용 상품 데이터 설정&lt;/li>
&lt;li>결제 시스템 테스트 모드 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 및 결과 검증 단계&lt;br>
준비된 테스트 케이스를 실행하고 결과를 검증한다:&lt;/p>
&lt;ul>
&lt;li>각 단계의 실행 결과 기록&lt;/li>
&lt;li>예상 결과와의 비교&lt;/li>
&lt;li>발견된 문제점 문서화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>프로세스 흐름 중심: 기본 흐름과 대체 흐름을 포함한 전체 프로세스를 테스트한다.&lt;/li>
&lt;li>사용자 중심 접근: 실제 사용자의 관점에서 시스템을 검증한다.&lt;/li>
&lt;li>시나리오 기반: 유즈케이스 상세(description)를 바탕으로 테스트 시나리오를 구성한다.&lt;/li>
&lt;li>다양한 테스트 레벨 적용: 컴포넌트(단위) 레벨과 시스템 레벨에서 모두 적용 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실제 사용 환경에서의 결함 발견: 시스템이 실제로 사용되는 프로세스 흐름에서 결함을 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>인수 테스트에 유용: 고객이나 사용자 그룹이 참여하는 인수 테스트 설계에 특히 효과적이다.&lt;/li>
&lt;li>통합 결함 식별: 통합 테스트 단계에서 컴포넌트 간 상호작용 문제를 찾는 데 도움이 된다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 프로세스&lt;span class="hx-absolute -hx-mt-20" id="테스트-프로세스">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 시나리오 구성: 어떤 흐름을 테스트할지 결정한다.&lt;/li>
&lt;li>필수 상황 선택: 유즈케이스 상세에서 테스트에 필요한 핵심 상황을 식별한다.&lt;/li>
&lt;li>상황 분류: 입력값, 출력값, 상황 처리 등으로 테스트 요소를 분류한다.&lt;/li>
&lt;li>ID 부여: 각 테스트 상황에 고유 ID를 할당한다.&lt;/li>
&lt;li>값 결정: 각 상황에 대해 가능한 값(유효/무효, 상한/하한 등)을 정의한다.&lt;/li>
&lt;/ol>
&lt;h3>테스트 레벨&lt;span class="hx-absolute -hx-mt-20" id="테스트-레벨">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%eb%a0%88%eb%b2%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>컴포넌트(단위) 레벨: 개별 유즈케이스를 독립적으로 테스트한다.&lt;/li>
&lt;li>시스템 레벨: 유즈케이스 간의 상호작용을 테스트한다. 활동 기반, 전이 기반, 경로 기반 커버리지 등의 방법을 사용할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>효과적인 유즈케이스 테스팅을 위한 고급 전략&lt;span class="hx-absolute -hx-mt-20" id="효과적인-유즈케이스-테스팅을-위한-고급-전략">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%ec%9c%a0%ec%a6%88%ec%bc%80%ec%9d%b4%ec%8a%a4-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%ec%9c%84%ed%95%9c-%ea%b3%a0%ea%b8%89-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>
&lt;p>경계값 분석 통합&lt;br>
각 입력 필드에 대해 경계값 테스트를 수행한다. 예를 들어, 주문 수량의 최소값과 최대값을 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>상태 전이 고려&lt;br>
시스템의 상태 변화를 추적하면서 테스트한다. 예를 들어, 주문 상태가 &amp;lsquo;결제 대기&amp;rsquo; → &amp;lsquo;결제 완료&amp;rsquo; → &amp;lsquo;배송 중&amp;rsquo;으로 올바르게 변경되는지 확인한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 일관성 검증&lt;br>
전체 프로세스 수행 후 데이터가 올바르게 저장되고 처리되었는지 확인한다.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>이러한 유즈케이스 테스팅은 현대의 복잡한 소프트웨어 시스템을 체계적으로 검증하는 데 매우 효과적인 방법이다. 특히 업무 프로세스가 복잡하거나 여러 시스템이 연계되어 있는 엔터프라이즈 애플리케이션 테스팅에서 큰 가치를 발휘한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Boundary Value Analysis</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/boundary-value-analysis/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/boundary-value-analysis/</guid><description>
&lt;h2>경계값 분석 (Boundary Value Analysis, BVA)&lt;span class="hx-absolute -hx-mt-20" id="경계값-분석-boundary-value-analysis-bva">&lt;/span>
&lt;a href="#%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d-boundary-value-analysis-bva" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>경계값 분석은 입력 또는 출력 범위의 경계 근처에서 결함이 발생할 가능성이 높다는 경험적 관찰에 기반한 테스트 기법.&lt;br>
프로그래머들이 흔히 &amp;ldquo;off-by-one&amp;rdquo; 오류를 범하거나 경계 조건을 잘못 처리하는 경향이 있기 때문에, 이러한 경계값을 집중적으로 테스트하는 것이 효과적이다.&lt;/p>
&lt;p>예를 들어, 어떤 시스템이 1에서 100 사이의 숫자만 받아들인다고 가정해보자.&lt;br>
이때 0, 1, 2와 99, 100, 101 같은 경계값들을 테스트하는 것이 중요하다.&lt;br>
왜냐하면 이러한 값들에서 시스템이 올바르게 작동하지 않을 가능성이 높기 때문이다.&lt;/p>
&lt;h3>경계값 분석의 주요 원칙&lt;span class="hx-absolute -hx-mt-20" id="경계값-분석의-주요-원칙">&lt;/span>
&lt;a href="#%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9b%90%ec%b9%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>경계값 분석에는 다음과 같은 핵심 원칙들이 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>최소값과 최대값 테스트:&lt;br>
유효 범위의 최소값과 최대값을 반드시 테스트한다.&lt;br>
예를 들어, 1-100 범위라면 1과 100을 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경계 근처의 값 테스트:&lt;br>
경계값 바로 안쪽과 바깥쪽의 값을 테스트한다.&lt;br>
1-100 범위의 경우:&lt;/p>
&lt;ul>
&lt;li>최소값 경계: 0, 1, 2&lt;/li>
&lt;li>최대값 경계: 99, 100, 101&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>대표적인 경계값 상황들&lt;span class="hx-absolute -hx-mt-20" id="대표적인-경계값-상황들">&lt;/span>
&lt;a href="#%eb%8c%80%ed%91%9c%ec%a0%81%ec%9d%b8-%ea%b2%bd%ea%b3%84%ea%b0%92-%ec%83%81%ed%99%a9%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>날짜와 시간:&lt;/p>
&lt;ul>
&lt;li>윤년/평년 전환 (2월 28일, 29일)&lt;/li>
&lt;li>월말/월초 전환 (31일, 1일)&lt;/li>
&lt;li>자정 전후 (23:59:59, 00:00:00)&lt;/li>
&lt;/ul>
&lt;p>수치 데이터:&lt;/p>
&lt;ul>
&lt;li>정수 자료형의 최대/최소값&lt;/li>
&lt;li>부동소수점 정밀도 한계&lt;/li>
&lt;li>배열의 첫 번째/마지막 요소&lt;/li>
&lt;/ul>
&lt;p>문자열 처리:&lt;/p>
&lt;ul>
&lt;li>빈 문자열&lt;/li>
&lt;li>최대 길이 문자열&lt;/li>
&lt;li>특수문자가 포함된 경계&lt;/li>
&lt;/ul>
&lt;h3>실제 적용 예시&lt;span class="hx-absolute -hx-mt-20" id="실제-적용-예시">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ec%a0%81%ec%9a%a9-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>학생 성적 처리 시스템을 예로 들어보자다:&lt;/p>
&lt;p>점수 범위: 0-100점&lt;br>
등급 기준:&lt;/p>
&lt;ul>
&lt;li>A: 90-100&lt;/li>
&lt;li>B: 80-89&lt;/li>
&lt;li>C: 70-79&lt;/li>
&lt;li>D: 60-69&lt;/li>
&lt;li>F: 0-59&lt;/li>
&lt;/ul>
&lt;p>이 시스템의 경계값 테스트 케이스는 다음과 같이 설계할 수 있다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>테스트 케이스 세트:
1. 최저 경계
- 입력값: -1 (유효하지 않은 값)
- 입력값: 0 (최소 유효값)
- 입력값: 1 (최소값 바로 위)
2. 등급 경계
- 입력값: 59, 60, 61 (F/D 경계)
- 입력값: 69, 70, 71 (D/C 경계)
- 입력값: 79, 80, 81 (C/B 경계)
- 입력값: 89, 90, 91 (B/A 경계)
3. 최고 경계
- 입력값: 99 (최대값 바로 아래)
- 입력값: 100 (최대 유효값)
- 입력값: 101 (유효하지 않은 값)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>효과적인 경계값 분석을 위한 지침&lt;span class="hx-absolute -hx-mt-20" id="효과적인-경계값-분석을-위한-지침">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%a7%80%ec%b9%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 범위 결정:&lt;br>
입력값뿐만 아니라 출력값의 경계도 고려한.&lt;br>
예를 들어, 화면에 표시되는 데이터의 크기나 형식에 대한 경계값도 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 타입 고려:&lt;br>
각 데이터 타입별로 특별히 고려해야 할 경계값들이 있다:&lt;/p>
&lt;ul>
&lt;li>정수형: 최대/최소값, 부호 전환점&lt;/li>
&lt;li>실수형: 정밀도 한계, 반올림/올림/내림 경계&lt;/li>
&lt;li>문자열: 길이 제한, 인코딩 경계&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>복합 경계값:&lt;br>
여러 조건이 결합된 경우, 각 조건의 경계값들을 조합하여 테스트한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>날짜와 시간이 결합된 경우&lt;/li>
&lt;li>다중 범위 조건이 있는 경우&lt;/li>
&lt;li>여러 입력 필드가 서로 연관된 경우&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>모든 테스트 레벨, 테스트 형태, 테스트 분류에 적용 가능하다.&lt;/li>
&lt;li>결함 발견율이 높고 적용하기 쉬운 장점이 있어 가장 많이 사용되는 테스트 기법 중 하나이다.&lt;/li>
&lt;li>경계값을 명시한 자세한 명세서가 있을 경우 적용하기가 수월하다.&lt;/li>
&lt;/ul>
&lt;h3>경계값 분석의 종류&lt;span class="hx-absolute -hx-mt-20" id="경계값-분석의-종류">&lt;/span>
&lt;a href="#%ea%b2%bd%ea%b3%84%ea%b0%92-%eb%b6%84%ec%84%9d%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>Boundary Value Analysis: 입력 범위의 경계값과 그 주변 값을 중점적으로 테스트하는 기법.&lt;br>
특징:&lt;br>
- 입력 도메인의 최소값, 최대값, 그리고 그 주변 값을 테스트한다.&lt;br>
- 유효한 입력 범위 내의 값들만 테스트한다.&lt;br>
- 많은 오류가 경계값 근처에서 발생한다는 경험에 기반한다.&lt;br>
예시1: 연령 입력 필드(유효 범위: 18-65세)에 대한 테스트 케이스.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>17세 (최소값 미만)&lt;/li>
&lt;li>18세 (최소값)&lt;/li>
&lt;li>19세 (최소값 초과)&lt;/li>
&lt;li>64세 (최대값 미만)&lt;/li>
&lt;li>65세 (최대값)&lt;/li>
&lt;li>66세 (최대값 초과)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Robustness Testing: 유효하지 않은 입력값과 예상치 못한 상황에 대한 시스템의 대응을 테스트하는 기법.&lt;br>
특징:&lt;br>
- 유효한 입력 범위를 벗어난 값들도 테스트한다.&lt;br>
- 시스템의 안정성과 오류 처리 능력을 평가한다.&lt;br>
예시: 연령 입력 필드(유효 범위: 18-65세)에 대한 테스트 케이스.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>-1세 (음수 값)&lt;/li>
&lt;li>0세 (최소값보다 작은 유효하지 않은 값)&lt;/li>
&lt;li>100세 (최대값보다 큰 유효하지 않은 값)&lt;/li>
&lt;li>&amp;ldquo;ABC&amp;rdquo; (문자열 입력)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Worst-Case Testing: 시스템이 처리할 수 있는 극단적인 상황을 테스트하는 기법.&lt;br>
특징:&lt;br>
- 여러 입력 변수의 극단적인 값 조합을 사용한다.&lt;br>
- 시스템의 한계를 테스트한다.&lt;br>
예시1: 사용자 등록 시스템에서의 Worst-Case Testing.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>이름: 최대 허용 길이의 문자열&lt;/li>
&lt;li>나이: 시스템이 허용하는 최대 나이 (예: 120세)&lt;/li>
&lt;li>이메일: 최대 길이의 유효한 이메일 주소&lt;/li>
&lt;li>비밀번호: 최대 허용 길이의 복잡한 문자열&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Robust worst-case Testing: Worst-Case Testing과 Robustness Testing을 결합한 기법.&lt;br>
특징:&lt;br>
- 극단적인 유효값과 유효하지 않은 값을 모두 테스트한다.&lt;br>
- 가장 포괄적인 경계값 테스팅 방법이다.&lt;br>
예시1: 사용자 등록 시스템에서의 Robust worst-case Testing.&lt;/p>
&lt;ul>
&lt;li>테스트 케이스:
&lt;ul>
&lt;li>이름: 빈 문자열 또는 특수 문자만으로 구성된 최대 길이 문자열&lt;/li>
&lt;li>나이: -1, 0, 최대 허용 나이보다 큰 값 (예: 150세)&lt;/li>
&lt;li>이메일: 유효하지 않은 최대 길이 문자열&lt;/li>
&lt;li>비밀번호: 빈 문자열 또는 시스템 제한을 초과하는 길이의 문자열&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>결함 발견 효율성이 높다&lt;/li>
&lt;li>테스트 케이스 수를 체계적으로 줄일 수 있다&lt;/li>
&lt;li>구현 오류를 효과적으로 찾아낼 수 있다&lt;/li>
&lt;/ul>
&lt;h3>한계&lt;span class="hx-absolute -hx-mt-20" id="한계">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>모든 가능한 결함을 찾아내지는 못한다&lt;/li>
&lt;li>복잡한 로직의 경우 경계값 정의가 어려울 수 있다&lt;/li>
&lt;li>여러 변수가 결합된 경우 테스트 케이스가 급증할 수 있다&lt;/li>
&lt;/ul>
&lt;h3>자동화 및 도구 활용&lt;span class="hx-absolute -hx-mt-20" id="자동화-및-도구-활용">&lt;/span>
&lt;a href="#%ec%9e%90%eb%8f%99%ed%99%94-%eb%b0%8f-%eb%8f%84%ea%b5%ac-%ed%99%9c%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>경계값 분석을 자동화하기 위한 방법들:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>테스트 데이터 생성기:&lt;/p>
&lt;ul>
&lt;li>정의된 범위에 대한 경계값을 자동으로 생성&lt;/li>
&lt;li>다양한 데이터 타입에 대한 경계값 생성 지원&lt;/li>
&lt;li>랜덤 테스트와의 결합 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 프레임워크:&lt;/p>
&lt;ul>
&lt;li>경계값 테스트를 위한 특별한 어노테이션이나 기능 제공&lt;/li>
&lt;li>테스트 결과의 자동 검증&lt;/li>
&lt;li>테스트 커버리지 측정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Cause-Effect Graphing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/cause-effect-graphing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/cause-effect-graphing/</guid><description>
&lt;h2>원인-결과 그래프 검사(Cause-Effect Graph Testing)&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사cause-effect-graph-testing">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%accause-effect-graph-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>원인-결과 그래프 검사(Cause-Effect Graph Testing)는 블랙박스 테스트 기법 중 하나로, 입력 조건(원인)과 출력 결과(결과) 사이의 관계를 체계적으로 분석하고 모델링하여 효과적인 테스트 케이스를 도출하는 방법.&lt;/p>
&lt;p>원인-결과 그래프 검사는 입력 데이터 간의 관계와 출력에 미치는 영향을 그래프로 표현하여 분석하는 기법.&lt;br>
이 방법은 여러 입력 조건을 결합해서 하나 이상의 결과를 얻는 것으로, 복잡한 입력 환경을 고려할 수 있는 장점이 있다.&lt;/p>
&lt;h3>원인-결과 그래프 검사의 목적&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-목적">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 입력 값들 간의 관계를 체계적으로 분석&lt;/li>
&lt;li>입력 조건에 따른 출력의 적절성 확인&lt;/li>
&lt;li>효율성이 높은 테스트 케이스 선정&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 절차&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-절차">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%a0%88%ec%b0%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>원인과 결과 식별&lt;/strong>: 요구사항 명세서, 설계서, 프로그램에서 원인(입력 조건)과 결과(출력 조건)를 찾아 식별한다.&lt;/li>
&lt;li>&lt;strong>그래프 작성&lt;/strong>: 원인과 결과를 연결하는 boolean 그래프를 작성한다. 이 그래프는 AND, OR, NOT 같은 boolean 연산자를 사용하여 원인과 결과 간의 논리적 관계를 표현한다.&lt;/li>
&lt;li>&lt;strong>제약 조건 표시&lt;/strong>: 불가능한 원인 조합 또는 결과 조합을 나타내는 제약(constraints)을 그래프에 표시한다.&lt;/li>
&lt;li>&lt;strong>의사결정 테이블 작성&lt;/strong>: 원인-결과 그래프를 의사결정 테이블(decision table)로 변환한다.&lt;/li>
&lt;li>&lt;strong>테스트 케이스 도출&lt;/strong>: 의사결정 테이블의 각 열을 테스트 케이스로 변환한다.&lt;/li>
&lt;/ol>
&lt;h3>그래프의 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="그래프의-구성-요소">&lt;/span>
&lt;a href="#%ea%b7%b8%eb%9e%98%ed%94%84%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>원인-결과 그래프는 다음과 같은 기본 요소들로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>원인(Causes): 시스템에 대한 입력 조건을 나타낸다. 예를 들어, 로그인 시스템에서 &amp;lsquo;사용자 ID 입력&amp;rsquo;, &amp;lsquo;비밀번호 입력&amp;rsquo; 등이 원인이 될 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과(Effects): 시스템의 출력이나 반응을 나타낸다. &amp;lsquo;로그인 성공&amp;rsquo;, &amp;lsquo;에러 메시지 표시&amp;rsquo; 등이 결과의 예시이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>논리 연산자: 원인과 결과를 연결하는 논리적 관계를 표현한다:&lt;/p>
&lt;ul>
&lt;li>AND: 모든 조건이 만족되어야 함&lt;/li>
&lt;li>OR: 하나 이상의 조건이 만족되면 됨&lt;/li>
&lt;li>NOT: 조건의 부정&lt;/li>
&lt;li>XOR: 상호 배타적 조건&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>제약 조건: 원인들 사이의 관계를 제한하는 조건:&lt;/p>
&lt;ul>
&lt;li>배타(E): 동시에 발생할 수 없는 조건&lt;/li>
&lt;li>포함(I): 한 조건이 다른 조건을 필요로 함&lt;/li>
&lt;li>단일(O): 여러 조건 중 하나만 발생 가능&lt;/li>
&lt;li>필수(R): 반드시 발생해야 하는 조건&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프의 표기법&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프의-표기법">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84%ec%9d%98-%ed%91%9c%ea%b8%b0%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>노드&lt;/strong>: 원인(입력 조건)은 그래프의 좌측에, 결과(출력 조건)는 우측에 위치시킨다. 각 노드는 1(참 또는 있음)과 0(거짓 또는 없음)의 두 가지 상태를 가진다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>연산자&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IDENTITY: 원인과 결과가 동일한 상태를 가짐을 나타낸다.&lt;/li>
&lt;li>AND: 여러 원인이 모두 참일 때 결과가 참임을 나타내다.&lt;/li>
&lt;li>OR: 하나 이상의 원인이 참일 때 결과가 참임을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>제약 심볼&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>R 제약: 한 원인이 참이면 다른 원인도 반드시 참이어야 함을 나타낸다.&lt;/li>
&lt;li>E 제약: 많아야 1개의 원인이 참일 수 있음을 나타낸다.&lt;/li>
&lt;li>O 제약: 정확히 1개의 원인만 참이어야 함을 나타낸다.&lt;/li>
&lt;li>M(Mask): 한 결과가 참이면 다른 결과는 강제로 거짓이 됨을 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 장점&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-장점">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>입력 조건과 출력 결과 간의 관계를 시각적으로 표현하여 이해하기 쉽다.&lt;/li>
&lt;li>복잡한 입력 환경을 체계적으로 분석할 수 있다.&lt;/li>
&lt;li>효율적인 테스트 케이스를 도출할 수 있어 테스트의 품질을 향상시킬 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>원인-결과 그래프 검사의 한계&lt;span class="hx-absolute -hx-mt-20" id="원인-결과-그래프-검사의-한계">&lt;/span>
&lt;a href="#%ec%9b%90%ec%9d%b8-%ea%b2%b0%ea%b3%bc-%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b2%80%ec%82%ac%ec%9d%98-%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>대규모 시스템에서는 그래프가 복잡해질 수 있어 적용이 어려울 수 있다.&lt;/li>
&lt;li>테스트 설계자의 경험과 지식에 따라 그래프의 품질이 달라질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>로그인 시스템에 대한 원인-결과 그래프 검사를 예로 들어보자.&lt;/p>
&lt;p>원인(입력 조건):&lt;/p>
&lt;ul>
&lt;li>C1: 아이디 입력됨&lt;/li>
&lt;li>C2: 아이디가 DB에 존재&lt;/li>
&lt;li>C3: 비밀번호 입력됨&lt;/li>
&lt;li>C4: 비밀번호가 일치&lt;/li>
&lt;/ul>
&lt;p>결과(출력 조건):&lt;/p>
&lt;ul>
&lt;li>E1: 로그인 성공&lt;/li>
&lt;li>E2: &amp;ldquo;아이디를 입력하세요&amp;rdquo; 메시지&lt;/li>
&lt;li>E3: &amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo; 메시지&lt;/li>
&lt;li>E4: &amp;ldquo;비밀번호를 입력하세요&amp;rdquo; 메시지&lt;/li>
&lt;li>E5: &amp;ldquo;비밀번호가 일치하지 않습니다&amp;rdquo; 메시지&lt;/li>
&lt;/ul>
&lt;p>논리적 관계의 예:&lt;/p>
&lt;ul>
&lt;li>로그인 성공(E1)이 되려면: 아이디 입력(C1) AND 아이디 존재(C2) AND 비밀번호 입력(C3) AND 비밀번호 일치(C4)&lt;/li>
&lt;li>&amp;ldquo;아이디를 입력하세요&amp;rdquo;(E2) 메시지는: NOT 아이디 입력(C1)&lt;/li>
&lt;li>&amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo;(E3) 메시지는: 아이디 입력(C1) AND NOT 아이디 존재(C2)&lt;/li>
&lt;/ul>
&lt;p>제약조건의 예:&lt;/p>
&lt;ul>
&lt;li>비밀번호가 일치(C4)하려면 반드시 비밀번호가 입력(C3)되어야 함&lt;/li>
&lt;li>아이디가 존재(C2)하려면 반드시 아이디가 입력(C1)되어야 함&lt;/li>
&lt;/ul>
&lt;p>이러한 관계를 그래프로 표현하면 다음과 같은 테스트 케이스를 도출할 수 있다:&lt;/p>
&lt;p>테스트 케이스 1: 아이디 미입력&lt;/p>
&lt;ul>
&lt;li>입력: 아이디 입력하지 않음&lt;/li>
&lt;li>예상 결과: &amp;ldquo;아이디를 입력하세요&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 2: 존재하지 않는 아이디&lt;/p>
&lt;ul>
&lt;li>입력: 존재하지 않는 아이디 입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;존재하지 않는 아이디입니다&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 3: 비밀번호 미입력&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디 입력, 비밀번호 미입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;비밀번호를 입력하세요&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 4: 비밀번호 불일치&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디, 잘못된 비밀번호 입력&lt;/li>
&lt;li>예상 결과: &amp;ldquo;비밀번호가 일치하지 않습니다&amp;rdquo; 메시지 출력&lt;/li>
&lt;/ul>
&lt;p>테스트 케이스 5: 로그인 성공&lt;/p>
&lt;ul>
&lt;li>입력: 올바른 아이디와 비밀번호 입력&lt;/li>
&lt;li>예상 결과: 로그인 성공&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Decision Table Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/decision-table-testing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/decision-table-testing/</guid><description>
&lt;h2>결정 테이블 테스팅 (Decision Table Testing)&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-테스팅-decision-table-testing">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%85%8c%ec%8a%a4%ed%8c%85-decision-table-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>결정 테이블 테스팅은 복잡한 비즈니스 로직이나 시스템의 동작을 테스트하기 위한 체계적인 방법.&lt;br>
여러 조건(conditions)과 그에 따른 행동(actions)의 모든 가능한 조합을 표 형태로 정리하여 테스트 케이스를 도출하는 기법.&lt;/p>
&lt;p>예를 들어, 온라인 쇼핑몰의 할인 정책을 테스트한다고 생각해보자.&lt;br>
회원 등급(일반/VIP), 구매 금액(5만원 이상/미만), 프로모션 코드 사용 여부에 따라 다른 할인율이 적용된다면, 이러한 여러 조건의 조합을 결정 테이블로 정리하여 체계적으로 테스트할 수 있다.&lt;/p>
&lt;h3>결정 테이블의 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블의-구성-요소">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>결정 테이블은 네 가지 주요 부분으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>조건 스텁(Condition Stub):&lt;br>
테스트 대상 시스템에 영향을 미치는 조건들을 나열한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>회원 등급&lt;/li>
&lt;li>구매 금액&lt;/li>
&lt;li>프로모션 코드 사용 여부&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>조건 항목(Condition Entries):&lt;br>
각 조건에 대한 가능한 값들을 표시합니다. 보통 &amp;lsquo;Y/N&amp;rsquo; 또는 &amp;lsquo;T/F&amp;rsquo;로 표현한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>행동 스텁(Action Stub):&lt;br>
시스템이 취할 수 있는 행동들을 나열한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>할인율 적용&lt;/li>
&lt;li>포인트 적립&lt;/li>
&lt;li>무료 배송 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>행동 항목(Action Entries):&lt;br>
각각의 조건 조합에 대해 시스템이 취해야 할 행동을 표시한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>결정 테이블 작성 과정&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-작성-과정">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ec%9e%91%ec%84%b1-%ea%b3%bc%ec%a0%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>조건 식별:&lt;br>
먼저 시스템에 영향을 미치는 모든 조건들을 식별한다. 이는 요구사항 문서나 시스템 명세를 바탕으로 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>행동 식별:&lt;br>
시스템이 취할 수 있는 모든 가능한 행동들을 식별한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>규칙 작성:&lt;br>
조건들의 모든 가능한 조합과 그에 따른 행동을 표로 정리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테이블 단순화:&lt;br>
불가능하거나 의미 없는 조합을 제거하여 테이블을 최적화한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>온라인 쇼핑몰 할인 정책 테스트&lt;/p>
&lt;p>조건:&lt;/p>
&lt;ul>
&lt;li>C1: 회원 등급 (VIP/일반)&lt;/li>
&lt;li>C2: 구매 금액 (5만원 이상/미만)&lt;/li>
&lt;li>C3: 프로모션 코드 사용 (예/아니오)&lt;/li>
&lt;/ul>
&lt;p>행동:&lt;/p>
&lt;ul>
&lt;li>A1: 10% 할인&lt;/li>
&lt;li>A2: 5% 할인&lt;/li>
&lt;li>A3: 추가 2% 할인&lt;/li>
&lt;li>A4: 무료 배송&lt;/li>
&lt;/ul>
&lt;p>이를 결정 테이블로 표현하면:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>| 규칙 번호 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |
| ------------- | ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |
| C1: VIP | Y | Y | Y | Y | N | N | N | N |
| C2: 5만원↑ | Y | Y | N | N | Y | Y | N | N |
| C3: 프로모션 | Y | N | Y | N | Y | N | Y | N |
| ------------- | ----- | ----- | ----- | ----- | ----- | ----- | ----- | ----- |
| A1: 10% 할인 | X | X | | | | | |
| A2: 5% 할인 | | | X | X | X | X | |
| A3: 2% 추가 | X | | X | | X | | X |
| A4: 무료배송 | X | X | | | X | X | |&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>테스트 케이스 도출&lt;/p>
&lt;p>결정 테이블에서 각 규칙(열)은 하나의 테스트 케이스가 된다.
예를 들어:&lt;/p>
&lt;p>테스트 케이스 1:&lt;/p>
&lt;ul>
&lt;li>입력: VIP 회원이 5만원 이상 구매하고 프로모션 코드 사용&lt;/li>
&lt;li>기대 결과: 10% 할인 + 2% 추가 할인 + 무료 배송&lt;/li>
&lt;/ul>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 비즈니스 규칙을 문서화하는 데 사용된다.&lt;/li>
&lt;li>시스템의 조건과 동작(Actions)을 식별한다.&lt;/li>
&lt;li>입력 조건과 동작은 주로 참(True)과 거짓(False)으로 표현된다.&lt;/li>
&lt;li>각 열(컬럼)은 하나의 비즈니스 규칙과 대응관계를 가진다.&lt;/li>
&lt;/ol>
&lt;h3>결정 테이블 테스팅의 장점&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-테스팅의-장점">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>체계성:
모든 가능한 조건 조합을 빠짐없이 테스트할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>명확성:
테스트 조건과 기대 결과가 명확하게 정의된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>효율성:
중복되거나 불필요한 테스트 케이스를 쉽게 식별하고 제거할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>유지보수성:
조건이나 행동이 변경될 때 테스트 케이스를 쉽게 업데이트할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>결정 테이블 테스팅의 제한사항과 해결 방안&lt;span class="hx-absolute -hx-mt-20" id="결정-테이블-테스팅의-제한사항과-해결-방안">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ed%85%8c%ec%9d%b4%eb%b8%94-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%a0%9c%ed%95%9c%ec%82%ac%ed%95%ad%ea%b3%bc-%ed%95%b4%ea%b2%b0-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테이블 크기 증가:
조건이 많아지면 테이블이 기하급수적으로 커질 수 있다.
해결방안:&lt;/p>
&lt;ul>
&lt;li>조건 그룹화&lt;/li>
&lt;li>동등 분할&lt;/li>
&lt;li>우선순위가 높은 조합만 선택&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>동적 조건 처리:
시간에 따라 변하는 조건을 표현하기 어렵다.
해결방안:&lt;/p>
&lt;ul>
&lt;li>상태 전이 테스팅과 결합&lt;/li>
&lt;li>시나리오 기반 테스트 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>복잡한 의존관계:
조건들 간의 복잡한 의존관계를 표현하기 어려울 수 있다.
해결방안:&lt;/p>
&lt;ul>
&lt;li>계층적 결정 테이블 사용&lt;/li>
&lt;li>의존관계를 명시적으로 문서화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>State Transition Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/state-transition-testing/</link><pubDate>Thu, 12 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/state-transition-testing/</guid><description>
&lt;h2>상태 전이 테스팅(State Transition Testing)&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스팅state-transition-testing">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8c%85state-transition-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>상태 전이 테스트는 시스템이나 객체의 상태 변화를 모델링하고, 이벤트에 따른 상태 전이와 그 결과를 검증하는 기법이다.&lt;br>
이 방법은 시스템의 현재 상황(Conditions)과 이전 이력(History)을 반영하는 상태(States) 및 그 변화(Transition)에 따라 시스템이 어떻게 동작하는지를 테스트한다.&lt;/p>
&lt;h3>상태 전이 테스트의 목적&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-목적">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>시스템의 모든 가능한 상태와 전이를 식별하고 테스트&lt;/li>
&lt;li>유효한 상태 전이뿐만 아니라 유효하지 않은 전이도 테스트&lt;/li>
&lt;li>상태 변화에 따른 시스템의 반응과 출력을 검증&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트의 주요 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-주요-구성-요소">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시스템의 상태 전이를 테스트하기 위해서는 다음 요소들을 이해하고 정의해야 한다:&lt;/p>
&lt;ol>
&lt;li>상태(States): 시스템이 특정 시점에 가질 수 있는 조건이나 상황을 의미한다. 예를 들어, 로그인 시스템의 경우 &amp;lsquo;로그아웃 상태&amp;rsquo;, &amp;lsquo;로그인 상태&amp;rsquo;, &amp;lsquo;잠금 상태&amp;rsquo; 등이 있을 수 있다.&lt;/li>
&lt;li>이벤트(Events): 상태 변화를 촉발하는 트리거를 말한다. &amp;lsquo;로그인 버튼 클릭&amp;rsquo;, &amp;lsquo;비밀번호 입력&amp;rsquo;, &amp;lsquo;시간 초과&amp;rsquo; 등이 이벤트의 예시이다.&lt;/li>
&lt;li>전이(Transitions): 한 상태에서 다른 상태로의 변화를 의미한다. 이는 특정 이벤트에 의해 발생하며, 조건이 충족되어야 실행된다.&lt;/li>
&lt;li>액션(Actions): 전이가 발생할 때 실행되는 동작이다. &amp;lsquo;에러 메시지 표시&amp;rsquo;, &amp;lsquo;데이터 저장&amp;rsquo;, &amp;lsquo;화면 갱신&amp;rsquo; 등이 여기에 해당한다.&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트 설계 방법&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트-설계-방법">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%84%a4%ea%b3%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>상태 전이 다이어그램 작성&lt;/strong>: 시스템의 모든 상태와 상태 간 전이를 표현하는 다이어그램을 작성한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>상태-이벤트 테이블 구성&lt;/strong>: 상태 전이 다이어그램을 바탕으로 모든 상태와 이벤트의 관계를 테이블로 정리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>전이 트리 구성&lt;/strong>: 상태-이벤트 테이블을 기반으로 상태가 전이되는 경로를 트리 형태로 표현한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 케이스 도출&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>유효 테스트 케이스: 정상적인 상태 전이를 검증하는 케이스&lt;/li>
&lt;li>무효 테스트 케이스: 유효하지 않은 상태 전이를 검증하는 케이스&lt;/li>
&lt;li>가드 조건 테스트 케이스: 상태 전이에 조건이 있는 경우, 해당 조건을 검증하는 케이스&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 프로시저 구성&lt;/strong>: 테스트 케이스를 실행 순서에 따라 나열하여 테스트 프로시저를 작성한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 적용 예시&lt;span class="hx-absolute -hx-mt-20" id="실제-적용-예시">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ec%a0%81%ec%9a%a9-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>자동판매기의 상태 전이 테스트를 예로 들어보자:&lt;/p>
&lt;p>상태:&lt;/p>
&lt;ul>
&lt;li>대기 상태&lt;/li>
&lt;li>금액 입력 상태&lt;/li>
&lt;li>제품 선택 상태&lt;/li>
&lt;li>제품 배출 상태&lt;/li>
&lt;li>거스름돈 반환 상태&lt;/li>
&lt;/ul>
&lt;p>테스트 시나리오:&lt;/p>
&lt;ol>
&lt;li>정상 흐름: 대기 → 금액 입력 → 제품 선택 → 제품 배출 → 거스름돈 반환 → 대기&lt;/li>
&lt;li>예외 상황:
&lt;ul>
&lt;li>잘못된 금액 투입&lt;/li>
&lt;li>재고 없는 제품 선택&lt;/li>
&lt;li>거스름돈 부족 상황&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>테스트 수행 전략&lt;span class="hx-absolute -hx-mt-20" id="테스트-수행-전략">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%88%98%ed%96%89-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>상태 전이 테스트는 다음과 같은 전략을 통해 수행된다:&lt;/p>
&lt;ol>
&lt;li>0-스위치 커버리지: 모든 상태를 최소한 한 번씩 방문하는 테스트.&lt;/li>
&lt;li>1-스위치 커버리지: 모든 전이를 최소한 한 번씩 수행하는 테스트.&lt;/li>
&lt;li>라운드-트립 커버리지: 시작 상태로 돌아오는 순환 경로를 테스트.&lt;/li>
&lt;li>N-스위치 커버리지: N개의 연속된 전이를 포함하는 경로를 테스트.&lt;/li>
&lt;/ol>
&lt;h3>테스트 결과 분석 및 문서화&lt;span class="hx-absolute -hx-mt-20" id="테스트-결과-분석-및-문서화">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ea%b2%b0%ea%b3%bc-%eb%b6%84%ec%84%9d-%eb%b0%8f-%eb%ac%b8%ec%84%9c%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>테스트 수행 후에는 다음 사항들을 철저히 분석하고 문서화해야 한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>발견된 결함:&lt;/p>
&lt;ul>
&lt;li>잘못된 상태 전이&lt;/li>
&lt;li>누락된 상태 처리&lt;/li>
&lt;li>예외 상황 처리 미흡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 커버리지:&lt;/p>
&lt;ul>
&lt;li>방문한 상태의 비율&lt;/li>
&lt;li>수행된 전이의 비율&lt;/li>
&lt;li>테스트되지 않은 경로&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>개선 제안:&lt;/p>
&lt;ul>
&lt;li>발견된 문제점에 대한 해결 방안&lt;/li>
&lt;li>추가 테스트 필요 영역&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트의 장점&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-장점">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 시스템의 동작을 체계적으로 모델링하고 테스트할 수 있다.&lt;/li>
&lt;li>누락되거나 잘못된 상태 전이를 효과적으로 발견할 수 있다.&lt;/li>
&lt;li>시스템의 동작을 사용자 관점에서 검증할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>상태 전이 테스트의 적용 분야&lt;span class="hx-absolute -hx-mt-20" id="상태-전이-테스트의-적용-분야">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ec%a0%84%ec%9d%b4-%ed%85%8c%ec%8a%a4%ed%8a%b8%ec%9d%98-%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>임베디드 소프트웨어 시스템&lt;/li>
&lt;li>자동화가 필요한 기술 분야&lt;/li>
&lt;li>비즈니스 객체 모델링&lt;/li>
&lt;li>인터넷 애플리케이션의 화면 흐름 테스트&lt;/li>
&lt;li>워크플로우 기반 시스템:
&lt;ul>
&lt;li>문서 관리 시스템&lt;/li>
&lt;li>결재 시스템&lt;/li>
&lt;li>주문 처리 시스템&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 인터페이스:
&lt;ul>
&lt;li>로그인 시스템&lt;/li>
&lt;li>회원가입 프로세스&lt;/li>
&lt;li>온라인 쇼핑 카트&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>상태 전이 다이어그램이 복잡해질 경우 테스트 설계와 실행이 어려워질 수 있다.&lt;/li>
&lt;li>모든 가능한 상태와 전이를 식별하고 테스트하는 것이 중요하므로, 시스템에 대한 깊은 이해가 필요하다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>비교 검사(Comparison Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/comparison-testing/</link><pubDate>Thu, 12 Dec 2024 00:13:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/comparison-testing/</guid><description>
&lt;h2>비교 검사(Comparison Testing)&lt;span class="hx-absolute -hx-mt-20" id="비교-검사comparison-testing">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%accomparison-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>비교 검사는 블랙박스 테스팅 기법 중 하나로, 동일한 기능을 수행하는 여러 버전의 소프트웨어나 시스템을 비교하여 테스트하는 방법.&lt;/p>
&lt;p>비교 검사는 동일한 입력값을 여러 버전의 소프트웨어에 제공하고, 그 출력값을 비교하는 방식으로 진행된다.&lt;br>
예를 들어, 새로운 버전의 소프트웨어와 이전 버전의 소프트웨어에 같은 입력을 주고 결과를 비교하여 일관성을 검증한다.&lt;/p>
&lt;p>비교 검사는 특히 다음과 같은 상황에서 효과적이다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>중요한 시스템 업그레이드 시:&lt;/p>
&lt;ul>
&lt;li>새로운 버전이 기존 기능을 정확히 수행하는지 확인&lt;/li>
&lt;li>예상치 못한 부작용 발견&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>호환성 검증 시:&lt;/p>
&lt;ul>
&lt;li>다양한 플랫폼이나 환경에서의 동작 비교&lt;/li>
&lt;li>크로스 플랫폼 애플리케이션 테스트&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화 검증 시:&lt;/p>
&lt;ul>
&lt;li>성능 개선 전후의 비교&lt;/li>
&lt;li>리소스 사용량, 응답 시간 등의 측정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 목적&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-목적">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>일관성 확인&lt;/strong>: 여러 버전 간의 출력 결과가 일관되는지 확인한다.&lt;/li>
&lt;li>&lt;strong>버그 식별&lt;/strong>: 특정 버전에서만 발생하는 문제를 식별할 수 있다.&lt;/li>
&lt;li>&lt;strong>성능 평가&lt;/strong>: 다른 버전 간의 성능 차이를 비교할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 특징&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-특징">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>여러 버전 비교&lt;/strong>: 동일한 기능을 수행하는 여러 버전의 프로그램을 대상으로 한다.&lt;/li>
&lt;li>&lt;strong>동일 입력 사용&lt;/strong>: 모든 버전에 동일한 테스트 데이터를 입력한다.&lt;/li>
&lt;li>&lt;strong>결과 비교&lt;/strong>: 각 버전에서 출력된 결과를 서로 비교한다.&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 주요 유형&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-주요-유형">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>백투백 테스팅(Back-to-Back Testing):&lt;/p>
&lt;ul>
&lt;li>동일한 사양으로 독립적으로 개발된 두 개 이상의 프로그램을 비교&lt;/li>
&lt;li>같은 입력에 대해 서로 다른 결과가 나오면 상세 분석을 수행&lt;/li>
&lt;li>예시: 두 개의 독립적인 개발팀이 만든 계산기 프로그램을 비교하여 결과의 정확성 검증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>버전 간 비교 테스팅:&lt;/p>
&lt;ul>
&lt;li>소프트웨어의 이전 버전과 새로운 버전을 비교&lt;/li>
&lt;li>업그레이드나 패치 후의 기능 정상 작동 여부 확인&lt;/li>
&lt;li>예시: 워드프로세서의 새 버전이 이전 버전의 모든 기능을 정상적으로 수행하는지 검증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사의 장점&lt;span class="hx-absolute -hx-mt-20" id="비교-검사의-장점">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>신뢰성 향상:&lt;/p>
&lt;ul>
&lt;li>여러 버전이나 구현체를 비교함으로써 결과의 신뢰성을 높일 수 있다&lt;/li>
&lt;li>한 버전에서만 발생하는 오류를 쉽게 발견할 수 있다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>효율적인 결함 탐지:&lt;/p>
&lt;ul>
&lt;li>이미 검증된 버전과의 비교를 통해 새로운 버전의 결함을 빠르게 찾아낼 수 있다&lt;/li>
&lt;li>회귀 테스팅(Regression Testing)과 결합하여 더욱 효과적인 테스팅이 가능하다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>객관적인 평가:&lt;/p>
&lt;ul>
&lt;li>동일한 입력에 대한 여러 결과를 비교함으로써 객관적인 평가가 가능하다&lt;/li>
&lt;li>성능, 정확성, 일관성 등 다양한 측면에서의 평가가 가능하다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사 수행 절차&lt;span class="hx-absolute -hx-mt-20" id="비교-검사-수행-절차">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac-%ec%88%98%ed%96%89-%ec%a0%88%ec%b0%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 계획 수립:&lt;/p>
&lt;ul>
&lt;li>비교할 버전/시스템 선정&lt;/li>
&lt;li>테스트 범위와 기준 정의&lt;/li>
&lt;li>입력 데이터 세트 준비&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 실행:&lt;/p>
&lt;ul>
&lt;li>동일한 입력 데이터를 각 버전에 적용&lt;/li>
&lt;li>결과값 수집 및 기록&lt;/li>
&lt;li>실행 환경의 동일성 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>결과 분석:&lt;/p>
&lt;ul>
&lt;li>출력값 비교 및 차이점 식별&lt;/li>
&lt;li>차이가 발생한 경우 원인 분석&lt;/li>
&lt;li>문제점 기록 및 보고서 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>비교 검사 수행 시 주의사항&lt;span class="hx-absolute -hx-mt-20" id="비교-검사-수행-시-주의사항">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b5%90-%ea%b2%80%ec%82%ac-%ec%88%98%ed%96%89-%ec%8b%9c-%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>환경의 통일성:&lt;/p>
&lt;ul>
&lt;li>테스트 환경을 최대한 동일하게 유지해야 정확한 비교가 가능하다&lt;/li>
&lt;li>하드웨어, 운영체제, 네트워크 환경 등을 고려해야 한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터의 대표성:&lt;/p>
&lt;ul>
&lt;li>테스트 데이터는 실제 사용 사례를 잘 반영해야 한다&lt;/li>
&lt;li>경계값, 예외 케이스 등 다양한 상황을 포함해야 한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>결과 해석의 신중성:&lt;/p>
&lt;ul>
&lt;li>차이가 발생했을 때 반드시 버그라고 단정 짓지 않아야 한다&lt;/li>
&lt;li>의도된 변경사항일 수 있으므로 사양을 꼼꼼히 확인해야 한다&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Function Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/function-coverage/</link><pubDate>Wed, 11 Dec 2024 10:30:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/function-coverage/</guid><description>
&lt;h2>함수 커버리지 (Function Coverage)&lt;span class="hx-absolute -hx-mt-20" id="함수-커버리지-function-coverage">&lt;/span>
&lt;a href="#%ed%95%a8%ec%88%98-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-function-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>함수 커버리지는 프로그램 내의 모든 함수가 테스트 중에 최소한 한 번 이상 호출되었는지를 측정하는 지표이다.&lt;/p>
&lt;p>간단한 예제:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Calculator&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">multiply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">divide&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Cannot divide by zero&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 계산기 클래스의 모든 함수를 테스트하기 위해서는 다음과 같은 테스트 코드가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculator&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Calculator&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># subtract 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># multiply 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">multiply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">12&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># divide 함수 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">divide&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">4&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 실제 개발에서 자주 마주치는 더 복잡한 예제:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">OrderProcessor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">validateOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">applyDiscounts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">updateInventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sendConfirmation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 주문 유효성 검사&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 총액 계산&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">applyDiscounts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 할인 적용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">updateInventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 재고 업데이트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">sendConfirmation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 주문 확인 메일 발송&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 주문 처리 시스템의 함수 커버리지를 확인하기 위한 테스트를 작성해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testOrderProcessing&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">OrderProcessor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OrderProcessor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Order&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 모든 함수가 호출되는 시나리오 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processOrder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 각 단계가 올바르게 실행되었는지 검증&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">isValid&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// validateOrder 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getTotal&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// calculateTotal 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getDiscounts&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// applyDiscounts 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getItems&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// updateInventory 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">testOrder&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">getCustomerEmail&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// sendConfirmation 호출 확인&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>함수 커버리지의 계산 방법은 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>함수 커버리지 = (호출된 함수의 수) / (전체 함수의 수) × 100%
예를 들어, OrderProcessor 클래스의 경우:
- 전체 함수 수: 6 (processOrder &amp;#43; 5개의 private 메서드)
- 호출된 함수 수: 6
따라서, 함수 커버리지 = (6/6) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>함수 커버리지를 측정할 때 특별히 주의해야 할 상황&lt;span class="hx-absolute -hx-mt-20" id="함수-커버리지를-측정할-때-특별히-주의해야-할-상황">&lt;/span>
&lt;a href="#%ed%95%a8%ec%88%98-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ec%b8%a1%ec%a0%95%ed%95%a0-%eb%95%8c-%ed%8a%b9%eb%b3%84%ed%9e%88-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%83%81%ed%99%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">FileHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">readFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parseContent&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">saveResults&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handleError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cleanup&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">readFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">parseContent&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">saveResults&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">cleanup&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">…&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이러한 경우, 정상 실행 경로와 예외 발생 경로 모두를 테스트해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testFileProcessing&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">FileHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileHandler&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 정상 경로 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;valid.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 예외 경로 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">processFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>측정 방법&lt;span class="hx-absolute -hx-mt-20" id="측정-방법">&lt;/span>
&lt;a href="#%ec%b8%a1%ec%a0%95-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>함수 커버리지는 다음과 같은 공식으로 계산된다:&lt;/p>
&lt;p>&lt;code>함수 커버리지(%) = (호출된 함수의 수 / 전체 함수의 수) × 100&lt;/code>&lt;/p>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>가장 기본적이고 가벼운 커버리지 측정 방법이다.&lt;/li>
&lt;li>함수의 내부 로직이나 실행 경로는 고려하지 않고, 단순히 함수가 호출되었는지만을 확인한다.&lt;/li>
&lt;li>테스트의 기본적인 수준을 빠르게 확인할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>구현이 간단하고 측정이 빠르다.&lt;/li>
&lt;li>프로그램의 전반적인 테스트 상태를 빠르게 파악할 수 있다.&lt;/li>
&lt;li>테스트되지 않은 함수를 쉽게 식별할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>함수 내부의 복잡한 로직이나 조건문을 고려하지 않아 테스트의 품질을 정확히 반영하지 못할 수 있다.&lt;/li>
&lt;li>함수가 호출되었다고 해서 그 함수의 모든 기능이 테스트되었다고 보장할 수 없다.&lt;/li>
&lt;li>다른 커버리지 기법들에 비해 테스트의 철저성을 보장하기 어렵다.&lt;/li>
&lt;/ol>
&lt;p>이러한 한계를 보완하기 위해, 함수 커버리지는 보통 다른 커버리지 지표들과 함께 사용된다:&lt;/p>
&lt;ol>
&lt;li>구문 커버리지로 함수 내부의 코드 실행을 확인&lt;/li>
&lt;li>분기 커버리지로 조건문의 다양한 경로를 검증&lt;/li>
&lt;li>통합 테스트로 함수들 간의 상호작용을 확인&lt;br>
이처럼 여러 테스트 기법을 조합함으로써, 소프트웨어의 품질을 더욱 효과적으로 보장할 수 있다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Requirements-based Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/requirements-based-testing/</link><pubDate>Wed, 11 Dec 2024 10:02:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/requirements-based-testing/</guid><description>
&lt;h2>요구사항 기반 테스팅 (Requirements-based Testing)&lt;span class="hx-absolute -hx-mt-20" id="요구사항-기반-테스팅-requirements-based-testing">&lt;/span>
&lt;a href="#%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85-requirements-based-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>요구사항 기반 테스팅은 소프트웨어 요구사항 명세서(SRS)에 명시된 기능적, 비기능적 요구사항을 검증하는 테스트 기법이다.&lt;br>
이 방법은 개발된 소프트웨어가 사용자와 개발 조직 간의 공식 합의에 따른 기능을 정확히 수행하는지 확인하는 것을 목표로 한다.&lt;/p>
&lt;p>실제 예시를 통해 더 구체적으로 살펴보자.&lt;br>
온라인 쇼핑몰의 로그인 기능에 대한 요구사항이 있다고 가정해보자:&lt;br>
&lt;code>&amp;quot;사용자는 이메일과 비밀번호로 로그인할 수 있어야 한다. 이메일은 올바른 형식이어야 하며, 비밀번호는 최소 8자 이상이어야 한다. 로그인 실패 시 적절한 오류 메시지를 표시해야 한다.&amp;quot;&lt;/code>&lt;/p>
&lt;p>이러한 요구사항을 기반으로 테스트를 설계하고 수행하는 과정을 단계별로 살펴보면:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>요구사항 분석 단계&lt;br>
먼저 요구사항을 세세하게 분석한다.&lt;br>
위의 예시에서 다음과 같은 핵심 요소들을 도출할 수 있다:&lt;/p>
&lt;ul>
&lt;li>이메일 형식 검증&lt;/li>
&lt;li>비밀번호 길이 검증&lt;/li>
&lt;li>로그인 성공/실패 처리&lt;/li>
&lt;li>오류 메시지 표시&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 도출 단계&lt;br>
각 요구사항 요소별로 테스트 케이스를 작성한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>올바른 이메일 형식으로 로그인 시도&lt;/li>
&lt;li>잘못된 이메일 형식으로 로그인 시도&lt;/li>
&lt;li>8자 미만의 비밀번호로 로그인 시도&lt;/li>
&lt;li>올바른 자격증명으로 로그인 시도&lt;/li>
&lt;li>잘못된 자격증명으로 로그인 시도&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 설계 단계&lt;br>
각 테스트 케이스에 대해 구체적인 테스트 시나리오를 작성한다.&lt;br>
여기에는 테스트 데이터, 실행 조건, 예상 결과 등이 포함된다.&lt;br>
예를 들어: 입력값: &lt;code>test@example.com&lt;/code> / &lt;code>password123&lt;/code> 예상 결과: 로그인 성공, 메인 페이지로 이동&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 단계&lt;br>
설계된 테스트 케이스를 실제로 실행하고 결과를 기록한다.&lt;br>
이때 요구사항과 실제 동작이 일치하는지 꼼꼼히 확인한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석 및 보고&lt;br>
단계 테스트 결과를 분석하고, 요구사항 충족 여부를 평가한다.&lt;br>
발견된 불일치나 문제점을 문서화하고 보고한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 중심: 테스트 케이스는 시스템의 문서화된 요구사항에서 직접 도출된다.&lt;/li>
&lt;li>포괄적 검증: 각 요구사항에 대해 최소한 하나 이상의 테스트 케이스가 생성되어 모든 요구사항이 검증되도록 보장한다.&lt;/li>
&lt;li>블랙박스 테스팅: 일반적으로 시스템의 내부 구조를 고려하지 않고 입력과 출력만을 바탕으로 테스트를 수행한다.&lt;/li>
&lt;li>추적성: 요구사항과 테스트 케이스 간의 명확한 매핑을 통해 추적성을 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>프로세스&lt;span class="hx-absolute -hx-mt-20" id="프로세스">&lt;/span>
&lt;a href="#%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 이해: 프로젝트의 기능적, 비기능적 요구사항을 철저히 검토하고 이해한다.&lt;/li>
&lt;li>테스트 케이스 생성: 이해된 요구사항에 기반하여 테스트 케이스를 설계한다.&lt;/li>
&lt;li>요구사항 매핑: 생성된 테스트 케이스를 원래의 요구사항에 매핑한다.&lt;/li>
&lt;li>테스트 실행: 설계된 테스트 케이스를 실행하고 결과를 분석한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>포괄적인 테스트 범위: 모든 요구사항이 테스트되도록 보장한다.&lt;/li>
&lt;li>조기 결함 발견: 개발 프로세스 초기에 결함을 식별할 수 있다.&lt;/li>
&lt;li>요구사항 명확화: 테스트 과정에서 모호한 요구사항을 식별하고 명확히 할 수 있다.&lt;/li>
&lt;li>개발 및 테스트 팀 간 협력 강화: 요구사항을 중심으로 팀 간 의사소통이 개선된다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 품질 의존성: 테스트의 효과성이 요구사항 문서의 품질에 크게 의존한다.&lt;/li>
&lt;li>예상치 못한 시나리오 누락: 문서화되지 않은 요구사항이나 예외 상황을 놓칠 수 있다.&lt;/li>
&lt;li>시간 소요: 모든 요구사항에 대한 테스트 케이스 설계와 실행에 상당한 시간이 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>요구사항 기반 테스팅을 더욱 효과적으로 수행하기 위한 방법들&lt;span class="hx-absolute -hx-mt-20" id="요구사항-기반-테스팅을-더욱-효과적으로-수행하기-위한-방법들">&lt;/span>
&lt;a href="#%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%eb%8d%94%ec%9a%b1-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%eb%b0%a9%eb%b2%95%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>요구사항 리뷰 참여
테스트 팀이 초기 요구사항 리뷰 단계부터 참여하여, 테스트 관점에서 요구사항의 명확성과 테스트 가능성을 검토한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>추적성 매트릭스 활용
요구사항과 테스트 케이스 간의 매핑을 명확히 하여, 모든 요구사항이 적절히 테스트되는지 추적한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>자동화 도구 활용
반복적인 테스트는 자동화하여 효율성을 높인다.
특히 회귀 테스트에서 유용하다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 현장에서 요구사항 기반 테스팅을 적용할 때의 팁&lt;span class="hx-absolute -hx-mt-20" id="실제-현장에서-요구사항-기반-테스팅을-적용할-때의-팁">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ed%98%84%ec%9e%a5%ec%97%90%ec%84%9c-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%ec%a0%81%ec%9a%a9%ed%95%a0-%eb%95%8c%ec%9d%98-%ed%8c%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>우선순위 설정
모든 요구사항을 동일한 수준으로 테스트할 수는 없으므로, 중요도와 위험도를 고려하여 우선순위를 설정한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경계값 분석
요구사항에 명시된 조건들의 경계값을 집중적으로 테스트한다. 예를 들어, 비밀번호 길이가 8자인 경우, 7자와 8자, 9자의 케이스를 모두 테스트합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네거티브 테스트 포함
요구사항을 만족하지 않는 상황에서의 시스템 동작도 테스트한다. 이는 시스템의 견고성을 높이는 데 중요하다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>이러한 요구사항 기반 테스팅은 소프트웨어 품질 보증의 기본이 되는 중요한 접근법이다. 특히 명확한 요구사항이 존재하는 프로젝트에서 매우 효과적이며, 다른 테스트 기법들과 보완적으로 사용될 때 최상의 결과를 얻을 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Metamorphic Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/metamorphic-testing/</link><pubDate>Wed, 11 Dec 2024 10:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/metamorphic-testing/</guid><description>
&lt;h2>메타모픽 테스팅 (Metamorphic Testing, MT)&lt;span class="hx-absolute -hx-mt-20" id="메타모픽-테스팅-metamorphic-testing-mt">&lt;/span>
&lt;a href="#%eb%a9%94%ed%83%80%eb%aa%a8%ed%94%bd-%ed%85%8c%ec%8a%a4%ed%8c%85-metamorphic-testing-mt" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>소프트웨어 테스트에서 &amp;ldquo;오라클 문제&amp;rdquo;(테스트 결과의 정확성을 판단하기 어려운 상황)를 해결하기 위해 개발된 방법으로,&lt;br>
메타모픽 테스팅은 소프트웨어의 의도된 기능에 대한 필수적인 속성인 메타모픽 관계(Metamorphic Relations, MRs)를 활용하여 테스트를 수행한다.&lt;br>
이 방법은 정확한 출력값을 알지 못해도 테스트가 가능하다는 점에서 특징적이다.&lt;/p>
&lt;p>메타모픽 테스팅의 핵심 원리는 입력값들 사이의 관계와 그에 따른 출력값들 사이의 관계를 활용하는 것이다.&lt;br>
예를 들어, 어떤 숫자에 2를 곱한 값과 원래 숫자의 제곱을 비교한다고 생각해보자.&lt;br>
입력값이 3일 때, 3 × 2 = 6이고 3² = 9이다.&lt;br>
여기서 우리는 &amp;ldquo;어떤 숫자에 2를 곱한 값은 항상 그 숫자의 제곱보다 작다&amp;quot;라는 메타모픽 관계를 발견할 수 있다.&lt;/p>
&lt;p>실제 적용 예시를 통해 더 자세히 살펴보자:&lt;/p>
&lt;p>검색 엔진 테스트의 경우:&lt;/p>
&lt;ul>
&lt;li>원래 검색어: &amp;ldquo;강아지 훈련&amp;rdquo;&lt;/li>
&lt;li>변형된 검색어: &amp;ldquo;강아지 훈련 방법&amp;rdquo;&lt;br>
메타모픽 관계: 두 번째 검색 결과는 첫 번째 검색 결과의 부분집합이어야 한다.&lt;/li>
&lt;/ul>
&lt;p>정렬 알고리즘 테스트의 경우:&lt;/p>
&lt;ul>
&lt;li>원래 입력: [4, 2, 7, 1]&lt;/li>
&lt;li>변형된 입력: [4, 2, 7, 1, 4]&lt;br>
메타모픽 관계: 두 번째 정렬 결과는 첫 번째 정렬 결과에 4가 한 번 더 추가된 형태여야 한다.&lt;/li>
&lt;/ul>
&lt;h2>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>속성 기반 테스팅: 입력과 출력 간의 관계가 아닌 입력들 간의 일반적인 관계를 기반으로 시스템 기능을 설명한다.&lt;/li>
&lt;li>다중 실행: 소프트웨어의 여러 실행 결과를 비교하여 테스트한다.&lt;/li>
&lt;li>오라클 문제 해결: 예상 출력을 정확히 알지 못해도 테스트가 가능하다.&lt;/li>
&lt;li>테스트 케이스 생성: MRs를 통해 소스 테스트 케이스로부터 후속 테스트 케이스를 자동으로 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;dl>
&lt;dt>&amp;ldquo;오라클 문제&amp;rdquo;&lt;/dt>
&lt;dd>테스트 결과의 정확성을 판단하기 어려운 상황&lt;/dd>
&lt;/dl>
&lt;/blockquote>
&lt;h3>메타모픽 테스팅의 수행 단계&lt;span class="hx-absolute -hx-mt-20" id="메타모픽-테스팅의-수행-단계">&lt;/span>
&lt;a href="#%eb%a9%94%ed%83%80%eb%aa%a8%ed%94%bd-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%88%98%ed%96%89-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>메타모픽 관계 식별&lt;br>
테스트 대상 시스템에서 성립해야 하는 메타모픽 관계를 찾는다.&lt;br>
이는 수학적 속성이나 비즈니스 규칙에서 도출될 수 있다.&lt;br>
예를 들어, 삼각함수에서 sin(x) = sin(x + 2π) 같은 관계를 활용할 수 있다.&lt;/li>
&lt;li>소스 테스트 케이스 생성&lt;br>
기본이 되는 테스트 케이스를 만든다.&lt;br>
예를 들어, 삼각함수 테스트에서 x = 30°를 소스 테스트 케이스로 선택할 수 있다.&lt;/li>
&lt;li>후속 테스트 케이스 생성&lt;br>
메타모픽 관계를 적용하여 새로운 테스트 케이스를 만든다.&lt;br>
위의 예에서는 x = 30° + 360°가 후속 테스트 케이스가 된다.&lt;/li>
&lt;li>테스트 실행 및 검증&lt;br>
두 테스트 케이스를 실행하고 결과가 메타모픽 관계를 만족하는지 확인한다.&lt;br>
sin(30°)와 sin(390°)의 값이 같아야 한다.&lt;/li>
&lt;/ol>
&lt;h3>적용 분야&lt;span class="hx-absolute -hx-mt-20" id="적용-분야">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>메타모픽 테스팅은 다양한 분야에서 적용되고 있다:&lt;/p>
&lt;ul>
&lt;li>웹 서비스&lt;/li>
&lt;li>컴퓨터 그래픽스&lt;/li>
&lt;li>임베디드 시스템&lt;/li>
&lt;li>시뮬레이션 및 모델링&lt;/li>
&lt;li>기계 학습&lt;/li>
&lt;li>의사 결정 지원 시스템&lt;/li>
&lt;li>생물정보학&lt;/li>
&lt;li>컴파일러 등&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>단순성: 개념이 간단하고 구현이 쉽다.&lt;/li>
&lt;li>자동화 용이성: MRs만 정의되면 테스트 과정의 대부분을 자동화할 수 있다.&lt;/li>
&lt;li>효과적인 결함 검출: 널리 사용되는 프로그램에서도 실제 결함을 발견할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>MR 식별의 어려움: 효과적인 MRs를 식별하는 것이 쉽지 않을 수 있다.&lt;/li>
&lt;li>복잡한 시스템에서의 적용: 매우 복잡한 시스템에서는 적용이 어려울 수 있다.&lt;/li>
&lt;/ol>
&lt;p>메타모픽 테스팅은 특히 테스트 오라클이 없거나 불완전한 경우, 그리고 입력 도메인이 매우 큰 경우에 유용하다.&lt;br>
이 기법은 다른 정적 및 동적 소프트웨어 분석 기법들과 결합하여 사용될 수 있으며, 소프트웨어의 검증, 유효성 검사 및 품질 평가를 위한 강력한 도구로 발전하고 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>분류 트리 방법 (Classification Tree Method)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/classification-tree-method/</link><pubDate>Wed, 11 Dec 2024 09:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/classification-tree-method/</guid><description>
&lt;h2>분류 트리 방법 (Classification Tree Method, CTM)&lt;span class="hx-absolute -hx-mt-20" id="분류-트리-방법-classification-tree-method-ctm">&lt;/span>
&lt;a href="#%eb%b6%84%eb%a5%98-%ed%8a%b8%eb%a6%ac-%eb%b0%a9%eb%b2%95-classification-tree-method-ctm" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>CTM은 1993년 Grimm과 Grochtmann에 의해 개발된 테스트 설계 방법으로, 소프트웨어의 테스트 관련 측면을 체계적으로 분류하고 조합하여 테스트 케이스를 생성한다.&lt;/p>
&lt;p>분류 트리 방법은 테스트 대상 시스템의 입력 도메인을 여러 분류(Classifications)로 나누고, 각 분류 아래에 클래스(Classes)들을 정의하는 방식으로 작동한다.&lt;br>
여기서 분류는 테스트할 특성이나 매개변수를 의미하고, 클래스는 그 특성이 가질 수 있는 구체적인 값들을 의미한다.&lt;/p>
&lt;p>예를 들어, 온라인 쇼핑몰의 주문 시스템을 테스트한다고 가정해보자:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>분류: 결제 방법&lt;/p>
&lt;ul>
&lt;li>클래스: 신용카드, 계좌이체, 휴대폰 결제&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분류: 배송 옵션&lt;/p>
&lt;ul>
&lt;li>클래스: 일반배송, 특급배송, 해외배송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분류: 주문 금액&lt;/p>
&lt;ul>
&lt;li>클래스: 1만원 미만, 1-5만원, 5만원 이상&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 단계&lt;span class="hx-absolute -hx-mt-20" id="주요-단계">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>분류(Classification): 테스트 관련 측면(classifications)과 해당 값(classes)을 식별한다.&lt;/li>
&lt;li>조합(Combination): 다양한 분류의 클래스들을 조합하여 테스트 케이스를 생성한다.&lt;/li>
&lt;li>명세(Specification): 생성된 조합을 바탕으로 실제 테스트 케이스를 작성한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>블랙박스 테스팅 방법으로, 다양한 유형의 시스템에 적용 가능하다.&lt;/li>
&lt;li>등가 분할(Equivalence Partitioning)과 경계값 분석(Boundary Value Analysis) 원칙을 활용한다.&lt;/li>
&lt;li>그래픽 기반 기법으로, 루트, 브랜치, 리프로 구성된 트리 구조를 사용한다.&lt;/li>
&lt;li>테스트 케이스 간의 관계를 시각적으로 표현하여 테스트 커버리지를 쉽게 이해할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>체계적인 접근: 테스트 프로세스에 구조화된 접근 방식을 제공한다.&lt;/li>
&lt;li>효율성: 테스트 케이스 설계와 생성 과정을 효율적으로 만든다.&lt;/li>
&lt;li>가시성: 테스트 케이스 간의 관계를 시각적으로 표현하여 이해도를 높인다.&lt;/li>
&lt;/ol>
&lt;h3>최근 발전&lt;span class="hx-absolute -hx-mt-20" id="최근-발전">&lt;/span>
&lt;a href="#%ec%b5%9c%ea%b7%bc-%eb%b0%9c%ec%a0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>우선순위 기반 테스트 케이스 생성: 요소에 가중치를 할당하여 테스트 케이스의 우선순위를 결정할 수 있다.&lt;/li>
&lt;li>테스트 시퀀스 생성: 클래스 간 유효한 전이를 정의하여 자동으로 테스트 시퀀스를 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>CTM은 테스트 설계를 체계화하고 효율화하는 강력한 도구이지만, 복잡한 시스템에서는 트리가 매우 복잡해질 수 있다는 점에 유의해야 한다.&lt;br>
따라서 적절한 수준의 추상화와 분류가 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Equivalence Partitioning</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/equivalence-partitioning/</link><pubDate>Wed, 11 Dec 2024 09:57:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/equivalence-partitioning/</guid><description>
&lt;h2>동등 분할(Equivalence Partitioning)&lt;span class="hx-absolute -hx-mt-20" id="동등-분할equivalence-partitioning">&lt;/span>
&lt;a href="#%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0equivalence-partitioning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>동등 분할은 입력 또는 출력 데이터를 의미 있는 그룹으로 나누어 테스트하는 기법.&lt;br>
이 방법의 핵심 아이디어는 같은 그룹에 속한 데이터는 프로그램에서 동일한 방식으로 처리될 것이라는 가정에 기반한다.&lt;br>
따라서 각 그룹에서 대표값만 테스트함으로써 효율적으로 테스트를 수행할 수 있다.&lt;/p>
&lt;p>예를 들어,&lt;br>
학생의 시험 점수(0-100점)를 등급(A, B, C, D, F)으로 변환하는 프로그램을 생각해보자.&lt;br>
이 경우 점수 범위를 다음과 같이 분할할 수 있다:&lt;/p>
&lt;p>유효 분할:&lt;/p>
&lt;ul>
&lt;li>90-100점: A등급&lt;/li>
&lt;li>80-89점: B등급&lt;/li>
&lt;li>70-79점: C등급&lt;/li>
&lt;li>60-69점: D등급&lt;/li>
&lt;li>0-59점: F등급&lt;/li>
&lt;/ul>
&lt;p>무효 분할:&lt;/p>
&lt;ul>
&lt;li>0점 미만&lt;/li>
&lt;li>100점 초과&lt;/li>
&lt;/ul>
&lt;h3>개념 및 정의&lt;span class="hx-absolute -hx-mt-20" id="개념-및-정의">&lt;/span>
&lt;a href="#%ea%b0%9c%eb%85%90-%eb%b0%8f-%ec%a0%95%ec%9d%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>입력값을 동등한 그룹(Equivalence Class)으로 분할한 후, 각 그룹에서 대표값을 선택하여 테스트한다.&lt;/li>
&lt;li>동일 그룹 내의 값들은 시스템이 동일하게 처리한다고 가정한다.&lt;/li>
&lt;li>하나의 값을 테스트함으로써 전체 그룹의 동작을 검증할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>목적 및 특징&lt;span class="hx-absolute -hx-mt-20" id="목적-및-특징">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81-%eb%b0%8f-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>입력값의 효율적인 테스트를 지원한다.&lt;/li>
&lt;li>모든 입력값을 개별적으로 테스트할 필요 없이, 각 그룹의 대표값으로 테스트를 수행한다.&lt;/li>
&lt;li>일반적으로 경계값 분석(Boundary Value Analysis)과 함께 사용된다.&lt;/li>
&lt;/ul>
&lt;h3>커버리지 계산&lt;span class="hx-absolute -hx-mt-20" id="커버리지-계산">&lt;/span>
&lt;a href="#%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-%ea%b3%84%ec%82%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>동등 분할 커버리지는 일반적으로 백분율로 표기하며, 다음과 같이 계산한다:&lt;br>
&lt;code>(최소한 한 개의 값으로 테스트한 동등 분할 수) / (식별한 모든 동등 분할의 수) * 100&lt;/code>&lt;/p>
&lt;h3>동등 분할의 종류&lt;span class="hx-absolute -hx-mt-20" id="동등-분할의-종류">&lt;/span>
&lt;a href="#%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0%ec%9d%98-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>유효 동등 분할: 유효한 입력값을 포함하는 그룹&lt;/li>
&lt;li>비유효 동등 분할: 유효하지 않은 입력값을 포함하는 그룹&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>입력 도메인을 식별한다.&lt;/li>
&lt;li>입력 도메인을 동등한 그룹으로 분할한다.&lt;/li>
&lt;li>각 그룹에서 대표값을 선택한다.&lt;/li>
&lt;li>선택된 대표값으로 테스트 케이스를 작성한다.&lt;/li>
&lt;/ol>
&lt;h3>동등 분할의 상세 원칙과 적용&lt;span class="hx-absolute -hx-mt-20" id="동등-분할의-상세-원칙과-적용">&lt;/span>
&lt;a href="#%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0%ec%9d%98-%ec%83%81%ec%84%b8-%ec%9b%90%ec%b9%99%ea%b3%bc-%ec%a0%81%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>분할 기준 설정:
&lt;ol>
&lt;li>
&lt;p>입력 조건 기반:&lt;/p>
&lt;ul>
&lt;li>값의 범위(예: 1-100)&lt;/li>
&lt;li>숫자의 개수(예: 2-5개의 항목)&lt;/li>
&lt;li>데이터 타입(예: 숫자, 문자, 날짜)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>출력 조건 기반:&lt;/p>
&lt;ul>
&lt;li>결과값의 종류&lt;/li>
&lt;li>오류 메시지의 유형&lt;/li>
&lt;li>시스템 상태의 변화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>실제 적용 예시: 회원가입 시스템&lt;/p>
&lt;p>비밀번호 규칙을 예로 들어보자:&lt;/p>
&lt;ul>
&lt;li>길이: 8-16자&lt;/li>
&lt;li>구성: 영문자, 숫자, 특수문자 포함&lt;/li>
&lt;li>제한: 연속된 문자 3개 이상 사용 불가&lt;/li>
&lt;/ul>
&lt;p>이에 대한 동등 분할:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>유효한 경우:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>분할 1: 정상적인 비밀번호
- 예: &amp;#34;Password1!&amp;#34;
- 특징: 모든 요구사항 충족
분할 2: 최소 길이 비밀번호
- 예: &amp;#34;Pass1!@#&amp;#34;
- 특징: 8자, 모든 요구사항 충족
분할 3: 최대 길이 비밀번호
- 예: &amp;#34;Password1!@#$%^&amp;amp;&amp;#34;
- 특징: 16자, 모든 요구사항 충족&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>무효한 경우:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>분할 4: 길이 부족
- 예: &amp;#34;Pass1!&amp;#34;
- 특징: 7자 미만
분할 5: 길이 초과
- 예: &amp;#34;PasswordPassword1!&amp;#34;
- 특징: 17자 이상
분할 6: 구성요소 누락
- 예: &amp;#34;Password&amp;#34;
- 특징: 숫자/특수문자 누락
분할 7: 연속된 문자 포함
- 예: &amp;#34;Password123!&amp;#34;
- 특징: 연속된 숫자 사용&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h3>테스트 케이스 설계 프로세스&lt;span class="hx-absolute -hx-mt-20" id="테스트-케이스-설계-프로세스">&lt;/span>
&lt;a href="#%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%bc%80%ec%9d%b4%ec%8a%a4-%ec%84%a4%ea%b3%84-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>단계별 접근 방식:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>입력 조건 분석:&lt;/p>
&lt;ul>
&lt;li>요구사항 문서 검토&lt;/li>
&lt;li>입력 가능한 모든 조건 식별&lt;/li>
&lt;li>제약사항 파악&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분할 영역 정의:&lt;/p>
&lt;ul>
&lt;li>유효한 입력 영역 구분&lt;/li>
&lt;li>무효한 입력 영역 구분&lt;/li>
&lt;li>경계 조건 고려&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 선택:&lt;/p>
&lt;ul>
&lt;li>각 분할에서 대표값 선정&lt;/li>
&lt;li>경계값과의 조합 고려&lt;/li>
&lt;li>특수한 시나리오 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 케이스 구체화:&lt;/p>
&lt;ul>
&lt;li>입력값 정의&lt;/li>
&lt;li>기대 결과 명시&lt;/li>
&lt;li>테스트 절차 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>테스트 케이스 수를 효율적으로 줄일 수 있다&lt;/li>
&lt;li>체계적인 접근으로 커버리지를 보장할 수 있다&lt;/li>
&lt;li>유지보수가 용이하다&lt;/li>
&lt;/ul>
&lt;h3>한계&lt;span class="hx-absolute -hx-mt-20" id="한계">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>분할 경계에서의 오류를 놓칠 수 있다&lt;/li>
&lt;li>복잡한 조건의 조합을 모두 다루기 어렵다&lt;/li>
&lt;li>분할 기준의 주관성이 있을 수 있다&lt;/li>
&lt;/ul>
&lt;h3>효과적인 동등 분할을 위한 권장사항&lt;span class="hx-absolute -hx-mt-20" id="효과적인-동등-분할을-위한-권장사항">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%eb%8f%99%eb%93%b1-%eb%b6%84%ed%95%a0%ec%9d%84-%ec%9c%84%ed%95%9c-%ea%b6%8c%ec%9e%a5%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>데이터 특성 고려:&lt;/p>
&lt;ul>
&lt;li>데이터의 성질과 의미를 충분히 이해&lt;/li>
&lt;li>업무 규칙과 제약조건 반영&lt;/li>
&lt;li>실제 사용 패턴 분석&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>분할 기준 최적화:&lt;/p>
&lt;ul>
&lt;li>너무 세밀한 분할 지양&lt;/li>
&lt;li>너무 큰 분할 지양&lt;/li>
&lt;li>의미 있는 구분점 선택&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 효율성 향상:&lt;/p>
&lt;ul>
&lt;li>자동화 도구 활용&lt;/li>
&lt;li>테스트 데이터 생성기 사용&lt;/li>
&lt;li>테스트 케이스 관리 도구 활용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Scenario Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/scenario-testing/</link><pubDate>Wed, 11 Dec 2024 09:57:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/scenario-testing/</guid><description>
&lt;h2>시나리오 테스팅 (Scenario Testing)&lt;span class="hx-absolute -hx-mt-20" id="시나리오-테스팅-scenario-testing">&lt;/span>
&lt;a href="#%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-%ed%85%8c%ec%8a%a4%ed%8c%85-scenario-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>시나리오 테스팅은 실제 상황을 시뮬레이션하여 소프트웨어를 검증하는 강력한 기술이다.
개별 기능에 초점을 맞춘 기존 테스트 케이스와 달리 시나리오 테스트에서는 일련의 이벤트나 상호 작용이 발생할 때 시스템이 어떻게 작동하는지 검사한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>사용자 중심 접근: 실제 사용자의 관점에서 소프트웨어를 테스트한다.&lt;/li>
&lt;li>전체 흐름 검증: 개별 기능이 아닌 전체 사용 흐름을 테스트한다.&lt;/li>
&lt;li>현실적인 상황 재현: 실제 사용 환경과 유사한 상황을 시뮬레이션한다.&lt;/li>
&lt;li>비기술적 언어 사용: 비기술적인 사용자도 이해할 수 있는 언어로 작성된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>사용자 경험 개선: 실제 사용자의 관점에서 테스트하므로 사용자 불편이나 흐름의 단절을 발견할 수 있다.&lt;/li>
&lt;li>종합적인 결함 발견: 기능 간 상호작용에서 발생하는 결함을 발견할 수 있다.&lt;/li>
&lt;li>예기치 못한 문제 파악: 다양한 상황을 미리 시뮬레이션하여 잠재적인 오류와 리스크를 발견할 수 있다.&lt;/li>
&lt;li>팀 간 협업 강화: 비기술적 이해관계자도 시나리오를 이해하기 쉬워 협업이 용이하다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>시나리오 정의: 테스트할 주요 시나리오를 식별한다.&lt;/li>
&lt;li>테스트 데이터 준비: 실제 환경에서 발생할 수 있는 모든 상황을 포괄하는 데이터를 준비한다.&lt;/li>
&lt;li>시나리오 실행: 정의된 시나리오에 따라 테스트를 수행한다.&lt;/li>
&lt;li>결과 분석: 시나리오 실행 결과를 분석하고 문제점을 식별한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>조합 테스트 설계 기법 (Combinatorial Test Design Techniques)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/combinatorial-test-design-techniques/</link><pubDate>Wed, 11 Dec 2024 09:42:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/combinatorial-test-design-techniques/</guid><description>
&lt;h2>조합 테스트 설계 기법 (Combinatorial Test Design Techniques)&lt;span class="hx-absolute -hx-mt-20" id="조합-테스트-설계-기법-combinatorial-test-design-techniques">&lt;/span>
&lt;a href="#%ec%a1%b0%ed%95%a9-%ed%85%8c%ec%8a%a4%ed%8a%b8-%ec%84%a4%ea%b3%84-%ea%b8%b0%eb%b2%95-combinatorial-test-design-techniques" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>조합 테스트 설계는 입력 매개변수의 다양한 조합을 사용하여 소프트웨어 애플리케이션을 테스트하는 방법이다.&lt;br>
이 기법은 모든 가능한 입력 조합을 테스트하는 대신 최적화된 조합을 선택하여 테스트 범위를 최대화하고 테스트 케이스 수를 최소화한다.&lt;/p>
&lt;p>실제 테스트 설계 시에는 다음과 같은 단계를 따르는 것이 좋다:&lt;/p>
&lt;ol>
&lt;li>테스트 대상 식별&lt;br>
먼저 어떤 요소들을 테스트할 것인지 명확히 한다.&lt;br>
각 요소가 가질 수 있는 값들도 정의한다.&lt;/li>
&lt;li>제약조건 파악&lt;br>
일부 조합은 현실적으로 불가능하거나 의미가 없을 수 있다.&lt;br>
예를 들어, 특정 운영체제 버전에서는 5G를 지원하지 않을 수 있다.&lt;/li>
&lt;li>테스트 방법 선택&lt;br>
시스템의 중요도와 가용 자원을 고려하여 적절한 테스트 방법을 선택한다.&lt;/li>
&lt;li>테스트 케이스 생성&lt;br>
선택한 방법에 따라 테스트 케이스를 생성한다.&lt;br>
이때 자동화 도구를 활용하면 더욱 효율적이다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>수학적 기반: 직교 배열(Orthogonal Arrays)과 같은 수학적 개념을 활용한다.&lt;/li>
&lt;li>효율성: 적은 수의 테스트 케이스로 넓은 범위의 입력 조합을 커버한다.&lt;/li>
&lt;li>리스크 감소: 특정 입력 조합에서 발생할 수 있는 결함을 효과적으로 찾아낸다.&lt;/li>
&lt;li>자동화 가능: 특수한 알고리즘이나 도구를 사용하여 테스트 케이스를 자동으로 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>주요 기법&lt;span class="hx-absolute -hx-mt-20" id="주요-기법">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>페어와이즈 테스팅(Pairwise Testing): 모든 가능한 입력 매개변수 쌍의 조합을 테스트한다.&lt;/li>
&lt;li>N-방향 테스팅(N-way Testing): 페어와이즈를 확장하여 3개 이상의 매개변수 조합을 고려한다.&lt;/li>
&lt;li>직교 배열 테스팅(Orthogonal Array Testing): 수학적 직교 배열을 사용하여 효율적인 테스트 조합을 생성한다.&lt;/li>
&lt;li>올페어 알고리즘(AllPairs Algorithm): 각 변수 쌍에 대한 모든 값 조합을 효율적으로 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 수 감소: 효율적인 조합으로 필요한 테스트 케이스 수를 줄인다.&lt;/li>
&lt;li>높은 결함 검출률: 다양한 입력 조합을 테스트하여 더 많은 결함을 발견할 수 있다.&lt;/li>
&lt;li>시간과 비용 절감: 적은 수의 테스트로 넓은 범위를 커버하여 테스트 시간과 비용을 줄인다.&lt;/li>
&lt;li>조기 결함 발견: 개발 초기 단계에서 결함을 식별할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 시스템에서의 적용 어려움: 매개변수가 많은 복잡한 시스템에서는 구현이 어려울 수 있다.&lt;/li>
&lt;li>모든 결함 검출 불가능: 특정 시퀀스나 의존성이 필요한 결함은 놓칠 수 있다.&lt;/li>
&lt;li>정확한 입력 데이터 필요: 효과적인 테스트를 위해서는 정확하고 완전한 입력 데이터가 필요하다.&lt;/li>
&lt;/ol>
&lt;h3>조합 테스트를 더욱 효과적으로 수행하기 위한 팁&lt;span class="hx-absolute -hx-mt-20" id="조합-테스트를-더욱-효과적으로-수행하기-위한-팁">&lt;/span>
&lt;a href="#%ec%a1%b0%ed%95%a9-%ed%85%8c%ec%8a%a4%ed%8a%b8%eb%a5%bc-%eb%8d%94%ec%9a%b1-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ed%8c%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>우선순위 설정:&lt;br>
모든 조합을 테스트할 수 없다면, 중요도나 위험도를 기준으로 우선순위를 정한다.&lt;br>
예를 들어, 사용자가 가장 많이 사용하는 조합이나 문제가 발생했을 때 영향이 큰 조합을 먼저 테스트한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 자동화:&lt;br>
조합 테스트는 많은 테스트 케이스를 다루기 때문에, 가능한 한 자동화하는 것이 좋다.&lt;br>
이를 통해 테스트 실행 시간을 단축하고 인적 오류를 줄일 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석:&lt;br>
테스트 결과를 체계적으로 분석하여 패턴을 찾는다.&lt;br>
특정 조합에서 문제가 자주 발생한다면, 그 원인을 심층적으로 조사할 필요가 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>조합 테스트 설계 기법은 효율적인 테스트 케이스 생성과 높은 결함 검출률을 제공하지만, 다른 테스트 기법들과 함께 사용하여 더 완전한 테스트 전략을 수립하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>랜덤 테스팅(Random Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/random-testing/</link><pubDate>Wed, 11 Dec 2024 07:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/random-testing/</guid><description>
&lt;h2>랜덤 테스팅 (Random Testing)&lt;span class="hx-absolute -hx-mt-20" id="랜덤-테스팅-random-testing">&lt;/span>
&lt;a href="#%eb%9e%9c%eb%8d%a4-%ed%85%8c%ec%8a%a4%ed%8c%85-random-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>랜덤 테스팅은 테스트 대상 시스템에 임의로 생성된 데이터를 입력하여 프로그램의 동작을 검증하는 기법이다.&lt;br>
이는 통계적 테스팅 또는 몬테카를로 테스팅으로도 알려져 있다.&lt;/p>
&lt;p>실제 예시를 통해 더 자세히 살펴보자.&lt;br>
숫자 정렬 프로그램을 테스트한다고 가정해보자.&lt;br>
전통적인 테스트 방식에서는 미리 정해진 테스트 케이스(예: &lt;code>[1,2,3]&lt;/code> 또는 &lt;code>[3,2,1]&lt;/code>)를 사용할 것.&lt;br>
하지만 랜덤 테스팅에서는 무작위로 생성된 숫자 배열을 사용한다.&lt;br>
이를 통해 개발자가 미처 생각하지 못한 경우의 수를 테스트할 수 있다.&lt;/p>
&lt;p>랜덤 테스팅의 실제 적용 과정을 단계별로 살펴보자:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>입력 도메인 정의&lt;br>
먼저 유효한 입력값의 범위와 특성을 정의한다.&lt;br>
예를 들어, 숫자 정렬 프로그램의 경우:&lt;/p>
&lt;ul>
&lt;li>배열의 길이: 1에서 1000 사이&lt;/li>
&lt;li>각 숫자의 범위: -10000에서 10000 사이&lt;/li>
&lt;li>중복 허용 여부 등을 정의합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>랜덤 데이터 생성기 구현&lt;br>
정의된 도메인 내에서 무작위 입력값을 생성하는 메커니즘을 구현한다.&lt;br>
여기서 중요한 것은 단순한 무작위가 아닌, 정의된 제약조건을 만족하는 데이터를 생성하는 것이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>테스트 실행 및 결과 검증&lt;br>
생성된 입력값으로 프로그램을 실행하고, 결과가 올바른지 검증한다.&lt;br>
정렬 프로그램의 경우, 결과 배열이 실제로 정렬되어 있는지 확인한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>결과 분석 및 피드백&lt;br>
발견된 오류를 분석하고, 필요한 경우 입력 생성 방식을 조정한다.&lt;br>
특정 유형의 입력에서 문제가 자주 발생한다면, 그러한 입력이 더 자주 생성되도록 조정할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>임의성: 입력 데이터가 무작위로 생성되어 예측 불가능한 시나리오를 테스트할 수 있다.&lt;/li>
&lt;li>자동화 가능성: 대량의 테스트 케이스를 자동으로 생성하고 실행할 수 있다.&lt;/li>
&lt;li>설계자 편향 회피: 테스트 설계자의 선입견을 피할 수 있어 예상치 못한 오류를 발견할 가능성이 있다.&lt;/li>
&lt;li>입력 도메인: 테스트 데이터는 사전 정의된 도메인에서 생성되며, 이는 랜덤 테스트의 중요한 측면이다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>예상치 못한 오류 발견: 개발자나 테스터가 예상하지 못한 시나리오를 테스트할 수 있다.&lt;/li>
&lt;li>테스트 케이스 생성 용이: 대량의 테스트 케이스를 쉽고 빠르게 생성할 수 있다.&lt;/li>
&lt;li>반복 실행의 이점: 같은 테스트를 여러 차례 반복 실행하여 새로운 결함 발견 가능성을 높일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>낮은 결함 발견 확률: 체계적인 테스팅 방법에 비해 오류를 발견할 확률이 상대적으로 낮을 수 있다.&lt;/li>
&lt;li>테스트 결과 예측 어려움: 무작위 입력으로 인해 예상 결과를 정확히 예측하기 어려울 수 있다.&lt;/li>
&lt;li>특정 시나리오 누락: 중요한 특정 시나리오를 테스트하지 못할 가능성이 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 분야&lt;span class="hx-absolute -hx-mt-20" id="적용-분야">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>랜덤 테스팅은 다양한 분야에서 활용될 수 있다:&lt;/p>
&lt;ol>
&lt;li>트레이딩 시스템: 금융 거래 시스템의 안정성과 성능을 테스트하는 데 사용된다.&lt;/li>
&lt;li>복잡한 알고리즘: 다양한 입력에 대한 알고리즘의 동작을 검증하는 데 유용하다.&lt;/li>
&lt;li>사용자 인터페이스: 예상치 못한 사용자 입력에 대한 시스템의 반응을 테스트한다.&lt;/li>
&lt;/ol>
&lt;h3>Random Testing이 발전된 기법들&lt;span class="hx-absolute -hx-mt-20" id="random-testing이-발전된-기법들">&lt;/span>
&lt;a href="#random-testing%ec%9d%b4-%eb%b0%9c%ec%a0%84%eb%90%9c-%ea%b8%b0%eb%b2%95%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>퍼징(Fuzzing)&lt;br>
특별히 설계된 랜덤 테스트 기법으로, 프로그램의 취약점을 찾기 위해 의도적으로 비정상적인 입력을 생성한다.&lt;br>
보안 테스팅에서 많이 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>적응형 랜덤 테스팅&lt;br>
이전 테스트 결과를 바탕으로 다음 테스트 케이스 생성 방식을 조정하는 방법.&lt;br>
문제가 발견된 영역 주변을 더 집중적으로 테스트할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>통계적 랜덤 테스팅&lt;br>
실제 사용 패턴의 통계적 분포를 반영하여 테스트 케이스를 생성하는 방법.&lt;br>
이를 통해 더 현실적인 테스트가 가능해진다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>구문 테스팅(Syntax Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/syntax-testing/</link><pubDate>Wed, 11 Dec 2024 07:22:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/syntax-testing/</guid><description>
&lt;h2>구문 테스팅(Syntax Testing)&lt;span class="hx-absolute -hx-mt-20" id="구문-테스팅syntax-testing">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ed%85%8c%ec%8a%a4%ed%8c%85syntax-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>구문 테스팅은 프로그램 코드의 모든 실행 가능한 구문을 최소한 한 번 이상 실행하도록 설계된 테스트 케이스를 사용하여 소프트웨어를 테스트하는 방법이다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>코드 커버리지 중심&lt;/strong>: 테스트 스위트에 의해 실행된 구문의 비율을 측정한다.&lt;/li>
&lt;li>&lt;strong>내부 구조 기반&lt;/strong>: 소프트웨어의 소스 코드에 직접 접근하여 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>최소 실행 보장&lt;/strong>: 모든 코드 구문이 적어도 한 번은 실행되도록 한다.&lt;/li>
&lt;/ol>
&lt;h3>구문 커버리지&lt;span class="hx-absolute -hx-mt-20" id="구문-커버리지">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>구문 커버리지는 구문 테스팅의 효과를 측정하는 지표이다:&lt;/p>
&lt;ul>
&lt;li>테스트 스위트에 의해 실행된 구문의 백분율로 표현된다.&lt;/li>
&lt;li>100% 구문 커버리지는 코드의 모든 실행 가능한 구문이 최소한 한 번 실행되었음을 의미한다.&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>철저한 코드 검증&lt;/strong>: 전체 코드와 구조를 테스트하므로 매우 철저하다.&lt;/li>
&lt;li>&lt;strong>코드 최적화&lt;/strong>: 불필요한 코드를 식별하고 제거하는 데 도움이 된다.&lt;/li>
&lt;li>&lt;strong>초기 단계 적용&lt;/strong>: 인터페이스가 필요 없어 개발 초기 단계에서 시작할 수 있다.&lt;/li>
&lt;li>&lt;strong>자동화 용이&lt;/strong>: 구조적 특성으로 인해 자동화하기 쉽다.&lt;/li>
&lt;/ol>
&lt;p>구문 테스팅의 실제 적용 예시를 살펴보면, 다음과 같은 시나리오들을 테스트할 수 있다:&lt;/p>
&lt;ol>
&lt;li>변수 선언과 초기화&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 테스트 케이스들&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">validDeclaration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 유효한 선언&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invalidDeclaration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;10&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 타입 불일치&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">uninitialized&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">초기화되지&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">않은&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">변수&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">사용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>함수 정의와 호출&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_function_syntax&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 올바른 함수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">valid_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">param1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">param2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 잘못된 함수 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">invalid_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 콜론 누락&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">param1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">param2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 잘못된 함수 호출&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">valid_function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 인자 개수 불일치&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>구문 테스팅을 통해 얻을 수 있는 이점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>조기 오류 발견: 구문 오류는 컴파일 시점에 발견되므로, 런타임 오류를 사전에 방지할 수 있다.&lt;/li>
&lt;li>코드 품질 향상: 일관된 코딩 스타일과 문법 사용으로 코드의 가독성과 유지보수성이 향상된다.&lt;/li>
&lt;li>개발 생산성 향상: 자동화된 도구를 통해 빠르게 구문 오류를 발견하고 수정할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>구문 테스팅의 주요 검증 대상&lt;span class="hx-absolute -hx-mt-20" id="구문-테스팅의-주요-검증-대상">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b2%80%ec%a6%9d-%eb%8c%80%ec%83%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>기본 문법 요소 검증&lt;br>
프로그래밍 언어의 기본적인 문법 규칙을 검사한다.&lt;br>
예를 들어 Java에서는 다음과 같은 요소들을 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 올바른 구문&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Example&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 세미콜론으로 문장 종료&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">setValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 중괄호로 블록 시작&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 중괄호로 블록 종료&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 잘못된 구문&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Example&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 세미콜론 누락&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">setValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 괄호 누락&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">value&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">newValue&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>식별자 규칙 검증&lt;br>
변수명, 함수명, 클래스명 등이 언어의 명명 규칙을 따르는지 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 올바른 식별자 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">totalCount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">calculateTotal&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 잘못된 식별자 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>&lt;span class="n">ndUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Jane&amp;#34;&lt;/span> &lt;span class="c1"># 숫자로 시작할 수 없음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">user&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span> &lt;span class="c1"># 하이픈 사용 불가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="err">= &amp;#34;&lt;/span>&lt;span class="nc">A&lt;/span>&lt;span class="s2">&amp;#34; # 예약어 사용 불가&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>타입 시스템 준수 검증&lt;br>
프로그래밍 언어의 타입 시스템 규칙을 준수하는지 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 올바른 타입 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">age&lt;/span>: &lt;span class="kt">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">25&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">name&lt;/span>: &lt;span class="kt">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 잘못된 타입 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">age&lt;/span>: &lt;span class="kt">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;25&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 문자열을 숫자 타입에 할당 불가
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">name&lt;/span>: &lt;span class="kt">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 숫자를 문자열 타입에 할당 불가
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>구조적 문법 검증&lt;br>
프로그램의 구조적 요소들이 올바르게 구성되었는지 확인한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 올바른 구조&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_total&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">total&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 잘못된 구조&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_total&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">items&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">item&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">total&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;This line will never execute&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 도달할 수 없는 코드&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>구문 테스팅을 효과적으로 수행하기 위한 접근 방법&lt;span class="hx-absolute -hx-mt-20" id="구문-테스팅을-효과적으로-수행하기-위한-접근-방법">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%9d%84-%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9c%bc%eb%a1%9c-%ec%88%98%ed%96%89%ed%95%98%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%a0%91%ea%b7%bc-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>정적 분석 도구 활용&lt;br>
대부분의 현대 IDE와 개발 도구들은 자동화된 구문 검사 기능을 제공한다.&lt;br>
예를 들어:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pylint를 사용한 파이썬 코드 검사 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_average&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">sum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># pylint: warning - &amp;#39;sum&amp;#39; shadows built-in name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">numbers&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">sum&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">n&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">sum&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>컴파일러 경고 수준 설정&lt;br>
컴파일러의 경고 수준을 높게 설정하여 잠재적인 구문 문제를 조기에 발견한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// javac -Xlint:all 옵션 사용 시 발견되는 경고&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Example&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">method&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 원시 타입 사용 경고&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>코드 포맷터 활용&lt;br>
자동화된 코드 포맷터를 사용하여 일관된 코드 스타일을 유지한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// prettier로 포맷팅 전
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">total&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="nx">total&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">total&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// prettier로 포맷팅 후
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">calculateTotal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">items&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">total&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>제한된 보장성&lt;/strong>: 모든 가능한 경우를 검증하지 못하는 보장성이 낮은 커버리지이다.&lt;/li>
&lt;li>&lt;strong>비용&lt;/strong>: 구현에 많은 시간과 자원이 필요할 수 있다.&lt;/li>
&lt;li>&lt;strong>코드 의존성&lt;/strong>: 코드 변경 시 테스트 케이스도 수정해야 한다.&lt;/li>
&lt;li>&lt;strong>전문성 요구&lt;/strong>: 테스터는 코드와 프로그래밍 언어에 대한 깊은 이해가 필요한다.&lt;/li>
&lt;li>&lt;strong>누락된 기능 감지 불가&lt;/strong>: 존재하지 않는 기능을 감지할 수 없다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>페어와이즈 테스팅(Pairwise Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/pairwise-testing/</link><pubDate>Wed, 11 Dec 2024 07:06:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/specification-based-test/pairwise-testing/</guid><description>
&lt;h2>페어와이즈 테스팅(Pairwise Testing)&lt;span class="hx-absolute -hx-mt-20" id="페어와이즈-테스팅pairwise-testing">&lt;/span>
&lt;a href="#%ed%8e%98%ec%96%b4%ec%99%80%ec%9d%b4%ec%a6%88-%ed%85%8c%ec%8a%a4%ed%8c%85pairwise-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>페어와이즈 테스팅은 모든 가능한 입력 값 조합을 테스트하는 대신, 입력 매개변수의 모든 쌍(pair)을 최소한 한 번씩 테스트하는 기법이다.&lt;br>
이는 대부분의 결함이 두 입력 값의 상호작용에 기인한다는 관찰에 기반한다.&lt;/p>
&lt;p>실제 예시를 통해 더 자세히 살펴보자.&lt;br>
웹 브라우저 애플리케이션을 테스트한다고 가정하면:&lt;/p>
&lt;p>운영체제: Windows, Mac, Linux&lt;br>
브라우저: Chrome, Firefox, Safari&lt;br>
화면 해상도: HD, FHD, 4K&lt;br>
언어 설정: 한국어, 영어, 일본어&lt;/p>
&lt;p>만약 모든 가능한 조합을 테스트하려면 몇 개의 테스트 케이스가 필요할까?&lt;br>
3(운영체제) × 3(브라우저) × 3(해상도) × 3(언어) = 81개의 테스트 케이스가 필요하다.&lt;/p>
&lt;p>하지만 연구에 따르면, 소프트웨어 결함의 대부분은 두 개 매개변수 간의 상호작용에서 발생한다고 한다.&lt;br>
이러한 통계적 사실을 바탕으로, 페어와이즈 테스팅은 테스트 케이스의 수를 크게 줄이면서도 효과적으로 결함을 발견할 수 있다.&lt;/p>
&lt;p>페어와이즈 테스팅의 실제 적용 과정을 단계별로 살펴보자:&lt;/p>
&lt;ol>
&lt;li>매개변수와 값 식별&lt;br>
먼저 테스트할 매개변수들과 각각이 가질 수 있는 값들을 정의한다.&lt;br>
위의 예시에서는 4개의 매개변수(운영체제, 브라우저, 해상도, 언어)와 각각의 값들을 식별하였다.&lt;/li>
&lt;li>페어와이즈 조합 생성&lt;br>
각 매개변수 쌍에 대해 가능한 모든 조합을 생성한다.&lt;br>
예를 들어:&lt;br>
운영체제와 브라우저의 조합: Windows-Chrome, Windows-Firefox, Windows-Safari, Mac-Chrome, Mac-Firefox, Mac-Safari, Linux-Chrome, Linux-Firefox, Linux-Safari&lt;br>
이런 식으로 모든 매개변수 쌍에 대해 조합을 만든다.&lt;/li>
&lt;li>최적화된 테스트 케이스 생성&lt;br>
이렇게 만든 조합들을 최소한의 테스트 케이스로 커버할 수 있도록 최적화한다.&lt;br>
이 과정은 복잡하므로 보통 자동화 도구를 사용한다.&lt;br>
결과적으로 81개가 아닌 약 9-12개 정도의 테스트 케이스로 모든 페어와이즈 조합을 테스트할 수 있게 된다.&lt;/li>
&lt;li>테스트 실행 및 결과 분석&lt;br>
생성된 테스트 케이스들을 실행하고 결과를 분석한다.&lt;br>
특히 특정 매개변수 쌍의 조합에서 자주 발생하는 문제가 있는지 주목한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>효율성: 모든 조합을 테스트하는 것보다 훨씬 적은 수의 테스트 케이스로 높은 커버리지를 달성한다.&lt;/li>
&lt;li>체계적 접근: 입력 매개변수의 모든 쌍을 고려하여 테스트 케이스를 설계한다.&lt;/li>
&lt;li>자동화 가능: PICT, ACTS 등의 도구를 사용하여 테스트 케이스를 자동으로 생성할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트할 매개변수와 각 매개변수의 가능한 값을 식별한다.&lt;/li>
&lt;li>모든 가능한 매개변수 쌍의 조합을 생성한다.&lt;/li>
&lt;li>각 쌍이 최소한 한 번씩 테스트되도록 테스트 케이스를 설계한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 수 감소: 모든 조합을 테스트하는 것보다 훨씬 적은 수의 테스트로 높은 커버리지를 달성한다.&lt;/li>
&lt;li>효율적인 결함 검출: 대부분의 결함을 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>시간과 비용 절감: 적은 수의 테스트로 넓은 범위를 커버하여 테스트 시간과 비용을 줄인다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 결함 검출 불가능: 세 개 이상의 매개변수 상호작용으로 인한 결함은 놓칠 수 있다.&lt;/li>
&lt;li>복잡한 시스템에서의 적용 어려움: 매개변수가 많은 복잡한 시스템에서는 구현이 어려울 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>도구&lt;span class="hx-absolute -hx-mt-20" id="도구">&lt;/span>
&lt;a href="#%eb%8f%84%ea%b5%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>페어와이즈 테스팅을 지원하는 다양한 도구가 있다:&lt;/p>
&lt;ol>
&lt;li>PICT (Pairwise Independent Combinatorial Testing): Microsoft에서 제공하는 무료 커맨드라인 도구.&lt;/li>
&lt;li>ACTS (Automated Combinatorial Testing for Software): NIST에서 제공하는 Java 기반 도구.&lt;/li>
&lt;li>AllPairs: Python으로 작성된 오픈 소스 도구.&lt;/li>
&lt;/ol>
&lt;p>페어와이즈 테스팅은 효율적인 테스트 케이스 생성과 높은 결함 검출률을 제공하지만, 다른 테스트 기법들과 함께 사용하여 더 완전한 테스트 전략을 수립하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Path Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/path-coverage/</link><pubDate>Tue, 10 Dec 2024 15:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/path-coverage/</guid><description>
&lt;h2>경로 커버리지(Path Coverage)&lt;span class="hx-absolute -hx-mt-20" id="경로-커버리지path-coverage">&lt;/span>
&lt;a href="#%ea%b2%bd%eb%a1%9c-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80path-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>경로 커버리지는 프로그램의 제어 흐름 그래프(Control Flow Graph, CFG)에서 모든 가능한 실행 경로를 테스트하는 구조적 테스팅 기법이다.&lt;br>
이는 프로그램의 입력과 출력 값보다는 내부 제어 흐름에 초점을 맞춘다.&lt;/p>
&lt;p>먼저 경로 커버리지의 기본 개념을 간단한 예제를 통해 이해해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_member&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_sale_period&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">is_member&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">is_sale_period&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.8&lt;/span> &lt;span class="c1"># 20% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.9&lt;/span> &lt;span class="c1"># 10% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">is_sale_period&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">0.95&lt;/span> &lt;span class="c1"># 5% 할인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">price&lt;/span> &lt;span class="c1"># 할인 없음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수에는 다음과 같은 가능한 실행 경로들이 있다:&lt;/p>
&lt;ol>
&lt;li>경로 1: 회원이면서 세일 기간인 경우&lt;/li>
&lt;li>경로 2: 회원이지만 세일 기간이 아닌 경우&lt;/li>
&lt;li>경로 3: 비회원이면서 세일 기간인 경우&lt;/li>
&lt;li>경로 4: 비회원이고 세일 기간도 아닌 경우&lt;/li>
&lt;/ol>
&lt;p>이러한 모든 경로를 테스트하기 위한 테스트 케이스를 작성해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_discount&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 1: 회원 + 세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">80&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 2: 회원 + 비세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">90&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 3: 비회원 + 세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">95&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 4: 비회원 + 비세일 기간&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">100&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 더 복잡한 예제를 통해 경로 커버리지를 알아보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">LoanApprovalSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasCollateral&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">700&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">50000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Approved&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hasCollateral&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Approved with Collateral&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Need Higher Income&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">600&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">70000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasCollateral&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Conditionally Approved&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Need Improvement&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Rejected&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 대출 승인 시스템의 모든 가능한 경로를 테스트하기 위해서는 다음과 같은 테스트 케이스들이 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testLoanApproval&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApprovalSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApprovalSystem&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 1: 높은 신용점수 + 충분한 수입&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Approved&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 2: 높은 신용점수 + 낮은 수입 + 담보 있음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Approved with Collateral&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">40000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 3: 높은 신용점수 + 낮은 수입 + 담보 없음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Need Higher Income&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">40000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 4: 중간 신용점수 + 높은 수입 + 담보 있음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Conditionally Approved&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">650&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">80000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 5: 중간 신용점수 + 조건 불충분&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Need Improvement&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">650&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경로 6: 낮은 신용점수&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertEquals&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Rejected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">evaluateLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">550&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">100000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>경로 커버리지의 계산 방법은 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>경로 커버리지 = (테스트된 경로의 수) / (가능한 총 경로의 수) × 100%
예를 들어, 위의 LoanApprovalSystem 예제에서:
- 총 가능한 경로 수: 6
- 테스트된 경로 수: 6
따라서, 경로 커버리지 = (6/6) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>경로 커버리지를 달성할 때 주의해야 할 점&lt;span class="hx-absolute -hx-mt-20" id="경로-커버리지를-달성할-때-주의해야-할-점">&lt;/span>
&lt;a href="#%ea%b2%bd%eb%a1%9c-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%eb%8b%ac%ec%84%b1%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>루프가 있는 경우의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">sumUntilNegative&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numbers&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이런 경우, 다음과 같은 시나리오를 고려해야 한다:&lt;/p>
&lt;ul>
&lt;li>빈 배열&lt;/li>
&lt;li>음수가 없는 배열&lt;/li>
&lt;li>첫 번째 요소가 음수인 배열&lt;/li>
&lt;li>중간에 음수가 있는 배열&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>예외 처리가 있는 경우:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">divide&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ArithmeticException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot divide by zero&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 경우 정상 실행 경로와 예외 발생 경로 모두를 테스트해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>경로 커버리지의 주요 장점은 다음과 같습니다:&lt;/p>
&lt;ol>
&lt;li>완전성: 프로그램의 모든 가능한 실행 경로를 검증할 수 있습니다.&lt;/li>
&lt;li>결함 발견: 특정 조건 조합에서만 발생하는 미묘한 버그를 찾아낼 수 있습니다.&lt;/li>
&lt;li>논리적 완전성: 모든 의사결정 경로가 테스트되므로 논리적 오류를 발견하기 쉽습니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 가능한 경로 테스트: 프로그램의 모든 가능한 실행 경로를 최소한 한 번씩 테스트한다.&lt;/li>
&lt;li>화이트박스 테스팅: 프로그램의 소스 코드를 분석하여 다양한 경로를 식별한다.&lt;/li>
&lt;li>순환 복잡도(Cyclomatic Complexity) 활용: 프로그램의 복잡도를 측정하여 테스트 케이스 설계에 활용한다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>코드 이해: 테스트할 코드를 철저히 분석하고 이해한다.&lt;/li>
&lt;li>제어 흐름 그래프(CFG) 작성: 프로그램의 제어 흐름을 그래프로 표현한다.&lt;/li>
&lt;li>경로 식별: CFG에서 모든 가능한 경로를 식별하고 나열한다.&lt;/li>
&lt;li>테스트 케이스 설계: 각 경로를 커버하는 테스트 케이스를 설계한다.&lt;/li>
&lt;li>테스트 실행 및 분석: 설계된 테스트 케이스를 실행하고 결과를 분석한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>철저한 테스트: 모든 가능한 경로를 테스트하여 숨겨진 결함을 발견할 수 있다.&lt;/li>
&lt;li>논리적 오류 검출: 프로그램 로직의 오류를 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>중복 테스트 감소: 각 코드 라인을 최소한 한 번씩 테스트하므로 중복 테스트를 줄일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성: 프로그램의 크기와 복잡도에 따라 가능한 경로의 수가 기하급수적으로 증가할 수 있다.&lt;/li>
&lt;li>시간과 비용: 모든 경로를 테스트하는 데 많은 시간과 자원이 필요할 수 있다.&lt;/li>
&lt;li>실현 가능성: 루프가 있는 경우 무한한 수의 경로 변형이 생길 수 있어 완전한 경로 커버리지를 달성하는 것이 불가능할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>경로 커버리지는 이론적으로 가장 강력한 커버리지 메트릭이지만, 실제 적용에는 한계가 있다.&lt;br>
따라서 다른 커버리지 기법들과 함께 사용하여 효과적인 테스팅 전략을 수립하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>조건 커버리지 (Condition Coverage)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/condition-coverage/</link><pubDate>Tue, 10 Dec 2024 15:01:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/condition-coverage/</guid><description>
&lt;h2>조건 커버리지 (Condition Coverage)&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지-condition-coverage">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-condition-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>조건 커버리지는 결정 포인트 내의 각 개별 조건식이 참(true)과 거짓(false)의 결과를 최소한 한 번씩 갖도록 테스트하는 기법이다.&lt;br>
이는 전체 조건식의 결과와는 독립적으로 각 개별 조건의 결과에 초점을 맞춘다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>개별 조건 중심: 전체 조건식이 아닌 각 개별 조건식의 결과를 검증한다.&lt;/li>
&lt;li>최소 요구사항: 각 조건이 최소한 한 번씩 참과 거짓의 결과를 가져야 한다.&lt;/li>
&lt;li>세분화된 테스트: 복잡한 조건문의 각 부분을 개별적으로 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>조건의 독립적 평가: 각 조건을 독립적으로 평가하여 더 세밀한 테스트가 가능하다.&lt;/li>
&lt;li>제어 흐름에 대한 높은 민감도: 프로그램의 제어 흐름을 더 정확하게 테스트할 수 있다.&lt;/li>
&lt;li>결정 커버리지보다 강력: 더 많은 테스트 케이스를 요구하므로 더 철저한 테스트가 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전체 조건식 결과 보장 부족: 개별 조건의 참/거짓만을 테스트하므로 전체 조건식의 모든 결과를 보장하지 않을 수 있다.&lt;/li>
&lt;li>테스트 케이스 증가: 조건의 수가 많아질수록 필요한 테스트 케이스의 수가 증가한다.&lt;br>
따라서 조건 커버리지는 다른 테스트 커버리지 지표들(구문 커버리지, 분기 커버리지 등)과 함께 사용되어야 하며, 이를 통해 더 완성도 높은 테스트를 수행할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>조건 커버리지를 계산하는 방법&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지를-계산하는-방법">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ea%b3%84%ec%82%b0%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isMember&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">purchaseAmount&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isMember&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">purchaseAmount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드에는 세 가지 개별 조건이 있다:&lt;/p>
&lt;ol>
&lt;li>age &amp;gt;= 60&lt;/li>
&lt;li>isMember&lt;/li>
&lt;li>purchaseAmount &amp;gt; 1000&lt;/li>
&lt;/ol>
&lt;p>완전한 조건 커버리지를 달성하기 위해서는, 각 조건이 독립적으로 참과 거짓을 모두 가져야 한다.&lt;br>
이를 위한 테스트 케이스를 설계해보면,&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testDiscountEligibility&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// age &amp;gt;= 60 조건 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// age: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// age: false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// isMember 조건 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// isMember: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// isMember: false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// purchaseAmount &amp;gt; 1000 조건 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1500&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// purchaseAmount: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligibleForDiscount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">800&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// purchaseAmount: false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>조건 커버리지 = (테스트된 조건 결과의 수) / (전체 가능한 조건 결과의 수) × 100%
예시에서:
- 전체 조건 수: 3개
- 각 조건당 가능한 결과: 2개 (참/거짓)
- 전체 가능한 조건 결과의 수: 3 × 2 = 6
- 테스트된 조건 결과의 수: 6
따라서, 조건 커버리지 = (6/6) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>조건 커버리지의 한계&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지의-한계">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%ec%9d%98-%ed%95%9c%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isActive&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isActive&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드에서 각 조건을 독립적으로 테스트하더라도, 조건들의 모든 가능한 조합을 커버하지는 못할 수 있다.&lt;br>
예를 들어:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 조건 커버리지는 만족하지만, 모든 시나리오를 커버하지는 못하는 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testUserValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// username != null 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// password != null 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// isActive 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>조건 커버리지를 향상시키기 위한 실제적인 접근 방법&lt;span class="hx-absolute -hx-mt-20" id="조건-커버리지를-향상시키기-위한-실제적인-접근-방법">&lt;/span>
&lt;a href="#%ec%a1%b0%ea%b1%b4-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ed%96%a5%ec%83%81%ec%8b%9c%ed%82%a4%ea%b8%b0-%ec%9c%84%ed%95%9c-%ec%8b%a4%ec%a0%9c%ec%a0%81%ec%9d%b8-%ec%a0%91%ea%b7%bc-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>테스트 자동화 도구 활용:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JaCoCo와 같은 테스트 커버리지 도구 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@CoverageTarget&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">CoverageType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CONDITION&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">comprehensiveTest&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 테스트 케이스들&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>경계값 분석과 결합:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasParentalConsent&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">19&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasParentalConsent&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testAgeValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경계값과 조건 커버리지를 결합한 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경계값 미만&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 최소 경계값&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 중간값&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">19&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 최대 경계값&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 경계값 초과&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 동의 없음&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다음과 같은 조건문이 있다고 가정해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">//&lt;/span> &lt;span class="n">코드&lt;/span> &lt;span class="n">실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>조건 커버리지를 만족시키기 위해서는 다음과 같은 테스트 케이스가 필요하다:&lt;/p>
&lt;ol>
&lt;li>a &amp;gt; 0 (참), b &amp;lt; 10 (참)&lt;/li>
&lt;li>a &amp;gt; 0 (참), b &amp;lt; 10 (거짓)&lt;/li>
&lt;li>a &amp;gt; 0 (거짓), b &amp;lt; 10 (참)&lt;/li>
&lt;li>a &amp;gt; 0 (거짓), b &amp;lt; 10 (거짓)&lt;/li>
&lt;/ol>
&lt;p>이렇게 각 개별 조건이 참과 거짓의 결과를 모두 가지도록 테스트 케이스를 구성한다.&lt;/p>
&lt;p>개별 조건식이 참/거짓을 모두 가지는 비율&lt;br>
예를 들어, (A &amp;amp;&amp;amp; B)라는 조건에서 A와 B 각각에 대해 true/false 케이스를 테스트한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">purchase_amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 테스트 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_discount_eligibility&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모든 조건 조합 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 미성년자&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 학생&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">25&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">150&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 성인, 비학생&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">is_eligible_for_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 구매액 부족&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Decision Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/decision-coverage/</link><pubDate>Tue, 10 Dec 2024 15:00:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/decision-coverage/</guid><description>
&lt;h2>결정 커버리지 (Decision Coverage)&lt;span class="hx-absolute -hx-mt-20" id="결정-커버리지-decision-coverage">&lt;/span>
&lt;a href="#%ea%b2%b0%ec%a0%95-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-decision-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>결정 커버리지는 프로그램의 모든 결정 포인트(조건문)에서 전체 조건식이 최소한 한 번씩 참(True)과 거짓(False)의 결과를 가지도록 테스트하는 방법이다.&lt;br>
이는 브랜치 커버리지(Branch Coverage)라고도 불린다.&lt;/p>
&lt;p>간단한 예제:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">LoanApproval&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">income&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">50000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">creditScore&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">700&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드의 결정 커버리지를 100% 달성하기 위해서는 다음과 같은 테스트 케이스가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testLoanApproval&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApproval&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LoanApproval&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 케이스 1: 두 조건 모두 true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 케이스 2: 첫 번째 조건 true, 두 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">60000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">650&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 케이스 3: 첫 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">loanApproval&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">approveLoan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">40000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">750&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>결정 커버리지를 계산하는 방법&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>결정 커버리지 = (테스트된 결정 결과의 수) / (가능한 총 결정 결과의 수) × 100%
예를 들어, 위의 LoanApproval 예제에서:
- 총 결정 포인트: 2개 (income 체크, creditScore 체크)
- 각 결정당 가능한 결과: 2개 (true/false)
- 총 가능한 결정 결과의 수: 4
- 테스트된 결정 결과의 수: 4
따라서, 결정 커버리지 = (4/4) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주의해야 할 중요한 포인트&lt;span class="hx-absolute -hx-mt-20" id="주의해야-할-중요한-포인트">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a4%91%ec%9a%94%ed%95%9c-%ed%8f%ac%ec%9d%b8%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>중첩된 조건문의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">username&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">password&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이런 중첩된 조건문의 경우, 모든 가능한 경로를 테스트해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testUserValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 모든 조건 true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 조건 true, 두 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 조건 false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;pass&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>복합 조건문의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">isEligible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasLicense&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">18&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasLicense&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>복합 조건문의 경우, 전체 조건식의 결과가 true와 false가 되는 경우만 테스트하면 된다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testEligibility&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 전체 조건 true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 전체 조건 false (여러 케이스 중 하나만 있어도 됨)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEligible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전체 조건식 중심: 개별 조건이 아닌 전체 조건식의 결과에 초점을 맞춘다.&lt;/li>
&lt;li>최소 테스트 케이스: 개별 조건식의 수와 관계없이 최소 2개의 테스트 케이스로 충족이 가능하다.&lt;/li>
&lt;li>구문 커버리지 보장: 100% 결정 커버리지를 달성하면 100% 구문 커버리지도 자동으로 달성된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>구문 커버리지보다 강력: 더 철저한 테스트가 가능하다.&lt;/li>
&lt;li>분기 테스트: 모든 분기문을 테스트할 수 있다.&lt;/li>
&lt;li>예외 상황 발견: 구문 커버리지로는 발견하기 어려운 예외 상황을 찾아낼 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡한 조건문 처리: 여러 개의 조건이 결합된 복잡한 조건문의 경우, 모든 가능한 조합을 테스트하지 못할 수 있다.&lt;/li>
&lt;li>개별 조건 무시: 전체 조건식의 결과만을 고려하기 때문에 개별 조건의 영향을 세밀하게 테스트하지 못할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 조건문 식별: 프로그램 내의 모든 조건문(if, switch 등)을 식별한다.&lt;/li>
&lt;li>테스트 케이스 설계: 각 조건문이 참과 거짓 결과를 모두 가지도록 테스트 케이스를 설계한다.&lt;/li>
&lt;li>테스트 실행: 설계된 테스트 케이스를 실행하고 결과를 확인한다.&lt;/li>
&lt;li>커버리지 측정: 전체 조건문 중 테스트된 조건문의 비율을 계산한다.&lt;/li>
&lt;/ol>
&lt;p>결정 커버리지는 구조적 테스팅에서 중요한 역할을 하며, 특히 분기문이 많은 복잡한 로직을 테스트하는 데 효과적이다.&lt;br>
하지만 더 철저한 테스트를 위해서는 조건 커버리지나 MC/DC(Modified Condition/Decision Coverage)와 같은 더 높은 수준의 커버리지 기법과 함께 사용하는 것이 좋다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Statement Coverage</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/statement-coverage/</link><pubDate>Tue, 10 Dec 2024 15:00:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/statement-coverage/</guid><description>
&lt;h2>구문 커버리지 (Statement Coverage)&lt;span class="hx-absolute -hx-mt-20" id="구문-커버리지-statement-coverage">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-statement-coverage" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>구문 커버리지는 프로그램을 구성하는 모든 문장들이 최소한 한 번은 실행될 수 있는 입력 데이터를 테스트 데이터로 선정하는 기준이다.&lt;br>
또한 라인 커버리지(Line Coverage)라고도 불린다.&lt;/p>
&lt;p>먼저 간단한 예제를 통해 구문 커버리지의 이해:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">score&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">score&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">90&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">score&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;B&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;C&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">grade&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수의 모든 구문을 실행하기 위해서는 다음과 같은 테스트 케이스가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_grade&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1, 2, 5를 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">95&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1, 3, 5를 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">85&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;B&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 구문 1, 4, 5를 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_grade&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">75&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;C&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>여기서 각 테스트 케이스가 실행하는 구문을 추적하면서 커버리지를 계산할 수 있다.&lt;br>
이 예제에서는 모든 구문(1-5)이 최소 한 번 이상 실행되므로 100% 구문 커버리지를 달성함.&lt;/p>
&lt;p>이제 더 복잡한 실제 예제를 통해 구문 커버리지의 중요성을 살펴보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">BankAccount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">frozen&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">frozen&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 6&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">balance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">amount&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 7&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 8&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 은행 계좌 시스템의 모든 구문을 테스트하기 위한 테스트 케이스를 작성해보면:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testWithdraw&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">BankAccount&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BankAccount&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 음수 금액 테스트 (구문 1, 2)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 계좌 동결 상태 테스트 (구문 1, 3, 4)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFrozen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">50&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 정상 출금 테스트 (구문 1, 3, 5, 6, 7)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setFrozen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">deposit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">50&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 잔액 부족 테스트 (구문 1, 3, 5, 8)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">withdraw&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>구문 커버리지의 계산 방법은 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>구문 커버리지 = (실행된 구문의 수) / (전체 구문의 수) × 100%
예를 들어, 위의 BankAccount 예제에서:
- 전체 구문 수: 8
- 실행된 구문 수: 8
따라서, 구문 커버리지 = (8/8) × 100% = 100%&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>구문 커버리지를 측정할 때 주의해야 할 점점&lt;span class="hx-absolute -hx-mt-20" id="구문-커버리지를-측정할-때-주의해야-할-점점">&lt;/span>
&lt;a href="#%ea%b5%ac%eb%ac%b8-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80%eb%a5%bc-%ec%b8%a1%ec%a0%95%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>예외 처리가 포함된 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">divideSafely&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numerator&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">denominator&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">numerator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">denominator&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ArithmeticException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Division by zero&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 경우 정상 실행과 예외 발생 상황 모두를 테스트해야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>조건부 실행이 있는 코드:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">processTransaction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">performTransaction&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 구문 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logDebugInfo&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>디버그 모드가 켜진 경우와 꺼진 경우 모두를 테스트해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>측정 방법&lt;span class="hx-absolute -hx-mt-20" id="측정-방법">&lt;/span>
&lt;a href="#%ec%b8%a1%ec%a0%95-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>구문 커버리지는 다음과 같은 공식으로 계산된다:&lt;/p>
&lt;p>&lt;code>구문 커버리지(%) = (실행된 구문의 수 / 전체 구문의 수) × 100&lt;/code>&lt;/p>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>코드의 모든 구문을 실행할 수 있는 입력값이나 이벤트 등의 테스트 데이터를 제공하면 달성된다.&lt;/li>
&lt;li>가장 기본적인 커버리지 측정 방법으로, 다른 커버리지 기법들에 비해 측정 강도가 가장 약하다.&lt;/li>
&lt;li>분기 커버리지, 다중 조건 커버리지, 경로 커버리지 등 포함관계가 더 큰 커버리지를 달성하면 저절로 달성된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>적은 개수의 테스트 데이터로 쉽게 달성할 수 있다.&lt;/li>
&lt;li>테스트 진행 정도를 코드의 범위 형태로 표현하기 때문에, 개발자가 커버리지의 의미를 직관적으로 이해할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>코드 상에 존재하는 가능한 경우 중 많은 부분을 검증하지 못하는 보장성이 낮은 커버리지이다.&lt;/li>
&lt;li>조건문의 모든 경우를 테스트하지 못할 수 있다. 예를 들어, if문의 조건이 참인 경우만 테스트되고 거짓인 경우는 테스트되지 않을 수 있다.&lt;/li>
&lt;/ol>
&lt;p>그래서 구문 커버리지는 보통 다른 커버리지 지표들(분기 커버리지, 조건 커버리지 등)과 함께 사용된다.&lt;br>
예를 들어, 다음과 같은 테스트 전략을 수립할 수 있다:&lt;/p>
&lt;ol>
&lt;li>기본적인 구문 커버리지로 시작하여 실행되지 않는 코드를 찾는다.&lt;/li>
&lt;li>분기 커버리지를 통해 조건문의 다양한 경로를 테스트한다.&lt;/li>
&lt;li>필요한 경우 더 높은 수준의 커버리지(조건, MC/DC 등)를 적용한다.&lt;br>
이러한 체계적인 접근을 통해 소프트웨어의 품질을 효과적으로 보장할 수 있다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>다중 조건 테스팅 (Branch Condition Combination Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/branch-condition-combination-testing/</link><pubDate>Tue, 10 Dec 2024 10:08:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/branch-condition-combination-testing/</guid><description>
&lt;h2>다중 조건 테스팅 (Branch Condition Combination Testing)&lt;span class="hx-absolute -hx-mt-20" id="다중-조건-테스팅-branch-condition-combination-testing">&lt;/span>
&lt;a href="#%eb%8b%a4%ec%a4%91-%ec%a1%b0%ea%b1%b4-%ed%85%8c%ec%8a%a4%ed%8c%85-branch-condition-combination-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>다중 조건 테스팅은 각 결정문에서 가능한 모든 조건 조합을 테스트하는 기법이다.&lt;br>
이는 조건 커버리지의 확장된 형태로, 가능한 모든 부울 조건 조합을 테스트하는 것을 목표로 한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>완전한 조건 조합&lt;/strong>: 결정문 내의 모든 개별 조건식에 대해 가능한 모든 true/false 조합을 테스트한다.&lt;/li>
&lt;li>&lt;strong>높은 커버리지&lt;/strong>: 100% 다중 조건 커버리지를 달성하면 결정 커버리지와 조건 커버리지도 100% 달성된다.&lt;/li>
&lt;li>&lt;strong>복잡한 로직 테스트&lt;/strong>: 여러 조건이 복합적으로 사용되는 복잡한 의사결정 구조를 철저히 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>철저한 테스트&lt;/strong>: 모든 가능한 조건 조합을 테스트하므로 누락된 경우의 수 없이 철저한 테스트가 가능하다.&lt;/li>
&lt;li>&lt;strong>숨겨진 버그 발견&lt;/strong>: 특정 조건 조합에서만 발생하는 오류를 찾아낼 수 있다.&lt;/li>
&lt;li>&lt;strong>로직 오류 검출&lt;/strong>: 복잡한 조건문의 로직 오류를 효과적으로 발견할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스트 케이스 증가&lt;/strong>: 조건의 수가 증가할수록 테스트 케이스의 수가 기하급수적으로 늘어난다.&lt;/li>
&lt;li>&lt;strong>시간과 비용&lt;/strong>: 많은 테스트 케이스로 인해 테스트 수행 시간과 비용이 증가한다.&lt;/li>
&lt;li>&lt;strong>복잡성&lt;/strong>: 조건이 많은 경우 모든 조합을 고려하는 것이 매우 복잡해질 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다중 조건 테스팅은 다음과 같은 상황에서 특히 유용하다:&lt;/p>
&lt;ol>
&lt;li>안전 중요 시스템: 모든 가능한 시나리오를 철저히 테스트해야 하는 경우&lt;/li>
&lt;li>금융 시스템: 복잡한 조건에 따라 중요한 결정이 이루어지는 경우&lt;/li>
&lt;li>복잡한 비즈니스 로직: 여러 조건이 복합적으로 작용하는 경우&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다음과 같은 코드가 있다고 가정해 보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_discount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">is_student&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">purchase_amount&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">is_student&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mf">0.2&lt;/span> &lt;span class="c1"># 20% discount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">18&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">60&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">purchase_amount&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mf">0.1&lt;/span> &lt;span class="c1"># 10% discount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="c1"># No discount&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 함수에 대한 다중 조건 테스트 케이스는 다음과 같이 구성될 수 있다:&lt;/p>
&lt;ol>
&lt;li>age &amp;lt; 18, is_student = True, purchase_amount &amp;gt; 100&lt;/li>
&lt;li>age &amp;lt; 18, is_student = True, purchase_amount &amp;lt;= 100&lt;/li>
&lt;li>age &amp;lt; 18, is_student = False, purchase_amount &amp;gt; 100&lt;/li>
&lt;li>age &amp;gt;= 18, age &amp;lt; 60, purchase_amount &amp;gt; 200&lt;/li>
&lt;li>age &amp;gt;= 18, age &amp;lt; 60, purchase_amount &amp;lt;= 200&lt;/li>
&lt;li>age &amp;gt;= 60, purchase_amount &amp;gt; 200&lt;/li>
&lt;li>age &amp;gt;= 60, purchase_amount &amp;lt;= 200&lt;/li>
&lt;/ol>
&lt;p>이렇게 모든 가능한 조건 조합을 테스트함으로써, 함수의 모든 경로와 로직을 철저히 검증할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Data Flow Testing</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/data-flow-testing/</link><pubDate>Tue, 10 Dec 2024 10:07:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/data-flow-testing/</guid><description>
&lt;h2>데이터 흐름 테스팅 (Data Flow Testing)&lt;span class="hx-absolute -hx-mt-20" id="데이터-흐름-테스팅-data-flow-testing">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%9d%90%eb%a6%84-%ed%85%8c%ec%8a%a4%ed%8c%85-data-flow-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>데이터 흐름 테스팅은 프로그램에서 변수의 정의와 사용 위치에 초점을 맞춰 테스트 케이스를 설계하고 실행하는 기법이다.&lt;br>
이 방법은 데이터가 프로그램 내에서 어떻게 생성되고 전달되는지를 확인하는 데 중점을 둔다.&lt;/p>
&lt;p>데이터 흐름에서 발생할 수 있는 주요 활동들:&lt;/p>
&lt;ol>
&lt;li>정의(Definition): 변수에 값이 할당되는 지점&lt;/li>
&lt;li>사용(Use): 변수의 값이 읽히는 지점
&lt;ul>
&lt;li>계산용(Computational use): 다른 값을 계산하는데 사용&lt;/li>
&lt;li>조건용(Predicate use): 조건문에서 사용&lt;br>
예제 코드를 통한 데이터 흐름:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">base_price&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 변수 정의(Definition)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 조건용 사용(Predicate use)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 변수 정의(Definition)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">discount&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.05&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 계산용 사용(Computational use)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">final_price&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">base_price&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">quantity&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">discount&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">final_price&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드에서 &lt;code>discount&lt;/code> 변수의 데이터 흐름을 분석해보면:&lt;/p>
&lt;ol>
&lt;li>초기 정의: discount = 0&lt;/li>
&lt;li>조건에 따른 재정의: quantity에 따라 0.1 또는 0.05로 설정&lt;/li>
&lt;li>계산에서의 사용: final_price 계산에 사용&lt;/li>
&lt;/ol>
&lt;p>이러한 흐름을 테스트하기 위한 테스트 케이스를 설계:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_calculate_final_price&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 할인 없는 경우 테스트 (quantity &amp;lt;= 5)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 5% 할인 케이스 테스트 (5 &amp;lt; quantity &amp;lt;= 10)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">665&lt;/span> &lt;span class="c1"># 100 * 7 * 0.95&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 10% 할인 케이스 테스트 (quantity &amp;gt; 10)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">calculate_final_price&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">15&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1350&lt;/span> &lt;span class="c1"># 100 * 15 * 0.9&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>데이터 중심&lt;/strong>: 변수의 정의와 사용에 초점을 맞춘다.&lt;/li>
&lt;li>&lt;strong>제어 흐름 그래프 활용&lt;/strong>: 데이터 흐름 테스트는 제어 흐름 그래프에 데이터 사용 현황을 추가한 그래프를 통해 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>화이트박스 테스트&lt;/strong>: 프로그램의 내부 구조를 이해하고 있어야 수행할 수 있는 화이트박스 테스트 기법이다.&lt;/li>
&lt;/ol>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터가 정확히 생성, 전달, 변환되는지 확인&lt;/li>
&lt;li>데이터 손실이나 중복 발생 여부 확인&lt;/li>
&lt;li>데이터가 필요한 모듈에 정확한 값으로 전달되는지 검증&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터의 흐름을 추적하여 잠재적인 오류를 발견할 수 있다.&lt;/li>
&lt;li>데이터 관련 문제를 조기에 식별하여 예방할 수 있다.&lt;/li>
&lt;li>복잡한 데이터 처리 로직을 체계적으로 테스트할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터 경로가 복잡한 시스템에서는 모든 흐름을 추적하는 데 비용이 많이 들 수 있다.&lt;/li>
&lt;li>테스트 케이스 설계와 실행에 상당한 시간과 노력이 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 단계&lt;span class="hx-absolute -hx-mt-20" id="적용-단계">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>데이터 흐름 테스팅은 설계 단계(모델)와 구현 단계(코드) 모두에서 검증이 필요하다.&lt;/p>
&lt;ol>
&lt;li>&lt;strong>모델 단계&lt;/strong>: 데이터의 전체 흐름을 설계하고 데이터 전달이 의도한 대로 이루어지는지 확인한다.&lt;/li>
&lt;li>&lt;strong>코드 단계&lt;/strong>: 실제 데이터가 모델 설계대로 이동하고, 필요한 데이터가 누락되거나 중복되지 않는지 확인한다.&lt;/li>
&lt;/ol>
&lt;p>데이터 흐름 테스팅은 소프트웨어의 데이터 처리 로직을 철저히 검증하여 데이터 관련 오류를 최소화하는 데 중요한 역할을 한다.&lt;br>
특히 데이터 중심적인 애플리케이션이나 복잡한 데이터 처리 로직을 가진 시스템에서 유용하게 활용될 수 있다.&lt;/p>
&lt;h3>데이터 흐름 테스팅에서 주의해야 할 주요 결함 패턴들&lt;span class="hx-absolute -hx-mt-20" id="데이터-흐름-테스팅에서-주의해야-할-주요-결함-패턴들">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%9d%90%eb%a6%84-%ed%85%8c%ec%8a%a4%ed%8c%85%ec%97%90%ec%84%9c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a3%bc%ec%9a%94-%ea%b2%b0%ed%95%a8-%ed%8c%a8%ed%84%b4%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>정의-정의(DD) 이상: 사용되지 않고 재정의되는 경우&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="c1"># 첫 번째 정의가 사용되지 않음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>정의-사용(DU) 이상: 정의된 변수가 사용되지 않는 경우&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculate_value&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># result가 이후에 사용되지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>미정의-사용(UR) 이상: 정의되지 않은 변수를 사용하는 경우&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">limit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># limit 변수가 정의되지 않음&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">BankAccount&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">initial_balance&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">initial_balance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target_account&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">amount&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 흐름: balance 정의 -&amp;gt; 사용 -&amp;gt; 재정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="n">amount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">target_account&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">amount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">apply_interest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rate&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 흐름: balance 사용 -&amp;gt; 재정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">interest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">rate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">interest&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드의 데이터 흐름을 테스트하기 위한 테스트 시나리오는 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_bank_account_data_flow&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 초기 balance 정의 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">account1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BankAccount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">account2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">BankAccount&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># transfer 메서드에서의 데이터 흐름 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">account2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">700&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">800&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 불충분한 잔액 케이스 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">account2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># apply_interest 메서드에서의 데이터 흐름 테스트&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apply_interest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">account1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">balance&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">770&lt;/span> &lt;span class="c1"># 700 + (700 * 0.1)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>데이터 흐름 테스팅을 효과적으로 수행하기 위한 전략은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>변수의 전체 생명주기 추적&lt;br>
- 변수가 언제 생성되고, 수정되며, 사용되는지 파악&lt;br>
- 각 단계에서의 값의 유효성 검증&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경계 조건 고려&lt;br>
- 변수가 초기화되지 않은 상태&lt;br>
- 최대/최소값 경계&lt;br>
- null 또는 undefined 상태&lt;/p>
&lt;/li>
&lt;li>
&lt;p>복잡한 데이터 구조 처리&lt;br>
- 객체의 속성 변경&lt;br>
- 컬렉션 요소의 수정&lt;br>
- 참조 전달과 값 전달의 차이&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>변경 조건/결정 커버리지 테스팅 (Modified Condition/Decision Coverage Testing, MC/DC)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/modified-condition-decision-coverage-testing/</link><pubDate>Tue, 10 Dec 2024 10:07:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/white-box-testing/modified-condition-decision-coverage-testing/</guid><description>
&lt;h2>변경 조건/결정 커버리지 테스팅 (Modified Condition/Decision Coverage Testing, MC/DC)&lt;span class="hx-absolute -hx-mt-20" id="변경-조건결정-커버리지-테스팅-modified-conditiondecision-coverage-testing-mcdc">&lt;/span>
&lt;a href="#%eb%b3%80%ea%b2%bd-%ec%a1%b0%ea%b1%b4%ea%b2%b0%ec%a0%95-%ec%bb%a4%eb%b2%84%eb%a6%ac%ec%a7%80-%ed%85%8c%ec%8a%a4%ed%8c%85-modified-conditiondecision-coverage-testing-mcdc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>MC/DC는 결정문 내의 각 조건이 독립적으로 결정의 결과에 영향을 미치는지 확인하는 테스트 기법이다.&lt;br>
이는 조건 커버리지와 결정 커버리지를 확장한 개념으로, 복잡한 논리 표현식의 각 입력이 출력에 미치는 영향을 독립적으로 보여준다.&lt;/p>
&lt;p>먼저, MC/DC의 기본 개념을 이해하기 쉬운 예제를 통해 살펴보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">autopilotEngaged&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">altitude&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">airspeed&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">autopilotEngaged&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">altitude&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">airspeed&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 코드는 비행 조건을 검증하는 간단한 함수이다. 자동조종장치가 켜져 있고, 고도나 속도 중 하나가 적절한 경우에만 비행이 허용된다.&lt;br>
MC/DC에서는 각 조건이 독립적으로 전체 결과에 영향을 미치는 것을 검증해야 한다.&lt;/p>
&lt;p>MC/DC를 만족하기 위한 테스트 케이스를 설계해보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testFlightValidation&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// autopilotEngaged의 영향을 테스트 (다른 조건은 고정)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// autopilot이 true일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// autopilot이 false일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// altitude의 영향을 테스트 (autopilot = true로 고정)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// altitude가 true일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// altitude가 false일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// airspeed의 영향을 테스트 (autopilot = true, altitude = false로 고정)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// airspeed가 true일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">validateFlight&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// airspeed가 false일 때&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이제 더 복잡한 예제를 통해 MC/DC의 중요성을 자세히 살펴보자:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MedicalAlertSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">highHeartRate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowBloodPressure&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">highTemperature&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowOxygenLevel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">highHeartRate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowBloodPressure&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">highTemperature&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lowOxygenLevel&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 의료 경보 시스템에서 MC/DC를 만족하기 위한 테스트 케이스를 설계해보면:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">testMedicalEmergencySystem&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">MedicalAlertSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MedicalAlertSystem&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 첫 번째 조건부 (highHeartRate &amp;amp;&amp;amp; lowBloodPressure) 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// highHeartRate의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// lowBloodPressure의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 두 번째 조건부 (highTemperature &amp;amp;&amp;amp; lowOxygenLevel) 테스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// highTemperature의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// lowOxygenLevel의 독립적 영향&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertTrue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">assertFalse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">system&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">requiresEmergencyResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>MC/DC의 주요 요구사항&lt;span class="hx-absolute -hx-mt-20" id="mcdc의-주요-요구사항">&lt;/span>
&lt;a href="#mcdc%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 진입점과 출구점이 실행되어야 한다.&lt;/li>
&lt;li>모든 조건이 가능한 모든 결과를 가져야 한다.&lt;/li>
&lt;li>각 조건이 다른 조건과 독립적으로 전체 결정의 결과에 영향을 미쳐야 한다.&lt;/li>
&lt;li>각 결정이 가능한 모든 결과를 가져야 한다.&lt;/li>
&lt;/ol>
&lt;h3>실제 개발 현장에서 MC/DC를 적용할 때 주의해야 할 점&lt;span class="hx-absolute -hx-mt-20" id="실제-개발-현장에서-mcdc를-적용할-때-주의해야-할-점">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ea%b0%9c%eb%b0%9c-%ed%98%84%ec%9e%a5%ec%97%90%ec%84%9c-mcdc%eb%a5%bc-%ec%a0%81%ec%9a%a9%ed%95%a0-%eb%95%8c-%ec%a3%bc%ec%9d%98%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>단축 평가(Short-circuit evaluation) 고려:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">checkSafety&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primarySystem&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">backupSystem&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">primarySystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">backupSystem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isPowerAvailable&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 경우, primarySystem이 true일 때는 나머지 조건이 평가되지 않는다는 점을 고려해야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>중첩된 조건의 처리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">validateProcess&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">condition1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">condition2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">condition2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>중첩된 조건에서는 각 조건의 독립적 영향을 더 신중하게 검증해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>각 조건의 독립적 영향 검증: 결정문 내의 모든 조건이 독립적으로 결과에 영향을 미치는지 확인한다.&lt;/li>
&lt;li>효율적인 테스트 케이스: n개의 조건에 대해 최소 n+1개의 테스트 케이스만으로 100% 커버리지를 달성할 수 있다[1].&lt;/li>
&lt;li>안전 중요 시스템에 적합: 항공, 자동차, 의료 기기 등 안전이 중요한 산업에서 널리 사용된다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>높은 오류 검출 확률: 복잡한 조건문에서 발생할 수 있는 오류를 효과적으로 찾아낼 수 있다.&lt;/li>
&lt;li>테스트 케이스 수 감소: 다중 조건 커버리지(MCC)에 비해 훨씬 적은 수의 테스트 케이스로 높은 커버리지를 달성할 수 있다.&lt;/li>
&lt;li>안전 중요 시스템의 신뢰성 향상: 철저한 테스트를 통해 소프트웨어의 신뢰성을 높일 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 케이스 설계의 복잡성: 각 조건의 독립적 영향을 보여주는 테스트 케이스를 설계하는 것이 어려울 수 있다.&lt;/li>
&lt;li>시간과 비용: 완전한 MC/DC 달성을 위해서는 상당한 시간과 리소스가 필요하다.&lt;/li>
&lt;li>도구 지원의 필요성: 복잡한 조건에서 MC/DC 분석을 수행하기 위해서는 자동화된 도구의 지원이 필요할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 방법&lt;span class="hx-absolute -hx-mt-20" id="적용-방법">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모든 결정문 식별: 프로그램 내의 복잡한 불리언 조건을 포함한 모든 결정문을 식별한다.&lt;/li>
&lt;li>테스트 케이스 설계: 각 조건이 독립적으로 결과에 영향을 미치도록 테스트 케이스를 설계한다.&lt;/li>
&lt;li>테스트 실행 및 분석: 설계된 테스트 케이스를 실행하고 결과를 분석하여 각 조건의 독립적 영향을 확인한다.&lt;/li>
&lt;li>커버리지 측정: MC/DC 기준에 따라 커버리지를 측정하고 필요한 경우 추가 테스트를 수행한다.&lt;/li>
&lt;/ol>
&lt;p>MC/DC는 복잡한 의사결정 구조를 철저히 테스트하여 숨겨진 결함을 찾아내는 데 효과적인 테스트 기법이다.&lt;br>
특히 안전이 중요한 시스템에서 소프트웨어의 신뢰성을 높이는 데 큰 도움이 된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>체크리스트 기반 테스팅 (Checklist-based Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/checklist-based-testing/</link><pubDate>Sun, 08 Dec 2024 08:09:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/checklist-based-testing/</guid><description>
&lt;h2>체크리스트 기반 테스팅 (Checklist-based Testing)&lt;span class="hx-absolute -hx-mt-20" id="체크리스트-기반-테스팅-checklist-based-testing">&lt;/span>
&lt;a href="#%ec%b2%b4%ed%81%ac%eb%a6%ac%ec%8a%a4%ed%8a%b8-%ea%b8%b0%eb%b0%98-%ed%85%8c%ec%8a%a4%ed%8c%85-checklist-based-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Checklist-based Testing은 테스트 대상의 중요한 항목들을 체크리스트로 만들어 이를 기반으로 테스트를 수행하는 경험 기반 테스트 기법이다.&lt;br>
숙련된 테스터가 제품 검증을 위한 일련의 규칙이나 기준, 또는 참고/확인/기억해야 하는 상위수준 아이템 목록을 사용한다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>구조화된 접근 방식: 테스트 과정에 체계적인 구조를 제공한다.&lt;/li>
&lt;li>일관성과 반복성: 모든 테스터가 동일한 단계를 따르고 동일한 항목을 확인하도록 보장한다.&lt;/li>
&lt;li>중요 항목 누락 방지: 체크리스트를 통해 중요한 테스트 항목을 놓치지 않도록 한다.&lt;/li>
&lt;li>경험 활용: 테스터의 경험과 지식을 체크리스트에 반영하여 활용한다.&lt;/li>
&lt;/ol>
&lt;h3>적용 분야&lt;span class="hx-absolute -hx-mt-20" id="적용-분야">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%eb%b6%84%ec%95%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Checklist-based Testing은 다양한 테스트 유형에 적용될 수 있다:&lt;/p>
&lt;ul>
&lt;li>기능 테스팅&lt;/li>
&lt;li>비기능 테스팅&lt;/li>
&lt;li>사용자 인터페이스 테스팅&lt;/li>
&lt;li>보안 테스팅 (PCI, HIPAA 등)&lt;/li>
&lt;li>모바일 테스팅&lt;/li>
&lt;li>접근성 테스팅 등&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>테스트 프로세스의 표준화&lt;/li>
&lt;li>일관성 있는 테스트 수행 가능&lt;/li>
&lt;li>테스트 팀 간 커뮤니케이션 개선&lt;/li>
&lt;li>테스트 문서 작성 및 유지보수 시간 단축&lt;/li>
&lt;/ol>
&lt;h3>한계점&lt;span class="hx-absolute -hx-mt-20" id="한계점">&lt;/span>
&lt;a href="#%ed%95%9c%ea%b3%84%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>체크리스트 작성과 유지보수에 시간 소요&lt;/li>
&lt;li>예상치 못한 오류 발견에 제한적일 수 있음&lt;/li>
&lt;li>테스터의 창의성을 제한할 수 있음&lt;/li>
&lt;/ol>
&lt;h3>수행 방법&lt;span class="hx-absolute -hx-mt-20" id="수행-방법">&lt;/span>
&lt;a href="#%ec%88%98%ed%96%89-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>체크리스트 작성: 테스트 범위 식별, 테스트 케이스 개요 작성, 전제 조건 및 예상 결과 정의&lt;/li>
&lt;li>체크리스트 할당: 적절한 테스터 선택 및 요구사항 이해 확인&lt;/li>
&lt;li>테스트 실행: 체크리스트에 따라 체계적으로 테스트 수행 및 결과 기록&lt;/li>
&lt;li>결과 검토 및 분석: 반복적인 문제 식별 및 체크리스트 효과성 분석&lt;/li>
&lt;li>체크리스트 업데이트 및 유지보수: 소프트웨어 변경에 따른 지속적인 업데이트&lt;/li>
&lt;/ol>
&lt;h3>예시&lt;span class="hx-absolute -hx-mt-20" id="예시">&lt;/span>
&lt;a href="#%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>로그인 기능에 대한 체크리스트는 다음과 같이 구성될 수 있다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">로그인 기능 테스트 체크리스트
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">1.&lt;/span> 입력 필드 검증
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 이메일 형식이 올바른지 확인
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 비밀번호 최소/최대 길이 제한 확인
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 특수문자 처리가 올바른지 확인
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> 인증 프로세스
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 올바른 계정으로 로그인 성공
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 잘못된 비밀번호로 로그인 실패
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 존재하지 않는 계정으로 로그인 실패
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 비밀번호 5회 오류 시 계정 잠금
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">3.&lt;/span> 보안 요구사항
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 비밀번호가 암호화되어 전송
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> HTTPS 프로토콜 사용
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> SQL 인젝션 방지 처리
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">4.&lt;/span> 사용자 경험
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 오류 메시지가 명확하게 표시
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">- [ ]&lt;/span> 로그인 상태 유지 기능 동작
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - [ ] 비밀번호 재설정 링크 제공&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>테스트 케이스 설계의 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_login_functionality&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;로그인 기능 테스트 케이스&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 입력 필드 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_email_validation&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">validate_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;user@example.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">validate_email&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;invalid-email&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 인증 프로세스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_authentication&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;valid@user.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;correct_password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">login&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;valid@user.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;wrong_password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 3. 보안 검증&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_security&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_password_encrypted&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;mypassword&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">is_using_https&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 4. 사용자 경험&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">test_user_experience&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">error_message_is_clear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">remember_me_works&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>체크리스트 기반 테스팅을 효과적으로 수행하기 위한 추천사항:&lt;/p>
&lt;ol>
&lt;li>프로젝트의 특성에 맞는 맞춤형 체크리스트를 작성하라.&lt;br>
일반적인 템플릿을 시작점으로 사용할 수 있지만, 프로젝트의 고유한 요구사항을 반영해야 한다.&lt;/li>
&lt;li>체크리스트를 계층적으로 구성하라.&lt;br>
상위 수준의 일반적인 항목에서 시작하여 세부적인 검증 항목으로 구체화하면 테스트의 구조화가 용이하다.&lt;/li>
&lt;li>자동화 가능한 항목은 자동화 테스트로 구현하라.&lt;br>
반복적인 검증 항목들은 자동화하여 테스트 효율성을 높일 수 있다.&lt;/li>
&lt;li>정기적인 리뷰와 업데이트를 수행하라.&lt;br>
새로운 기능이 추가되거나 기존 기능이 변경될 때마다 체크리스트를 검토하고 필요한 항목을 추가/수정한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>탐색적 테스팅(Exploratory Testing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/exploratory-testing/</link><pubDate>Sun, 08 Dec 2024 07:23:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/exploratory-testing/</guid><description>
&lt;h2>탐색적 테스팅(Exploratory Testing)&lt;span class="hx-absolute -hx-mt-20" id="탐색적-테스팅exploratory-testing">&lt;/span>
&lt;a href="#%ed%83%90%ec%83%89%ec%a0%81-%ed%85%8c%ec%8a%a4%ed%8c%85exploratory-testing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>탐색적 테스팅(Exploratory Testing)은 소프트웨어 테스팅의 한 접근 방식으로, 테스터의 창의성, 경험, 직관을 활용하여 소프트웨어를 자유롭게 탐색하며 결함을 발견하는 과정이다.
이 방법은 사전에 정의된 테스트 케이스에 의존하지 않고, 테스트 설계와 실행을 동시에 수행하는 특징이 있다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스터 중심&lt;/strong>: 테스터의 경험, 지식, 창의력을 최대한 활용한다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: 미리 정의된 테스트 케이스 없이도 즉시 테스트를 시작할 수 있다.&lt;/li>
&lt;li>&lt;strong>학습과 실행의 동시 진행&lt;/strong>: 소프트웨어를 사용하면서 동시에 새로운 테스트 시나리오를 생성한다.&lt;/li>
&lt;li>&lt;strong>발견 중심&lt;/strong>: 문서화보다는 결함 발견과 해결에 집중한다.&lt;/li>
&lt;/ol>
&lt;h3>핵심 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="핵심-구성-요소">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>테스트 차터&lt;/strong>: 테스트의 목적과 범위를 정의하는 간단한 문서.&lt;/li>
&lt;li>&lt;strong>시간 제한(Time Boxing)&lt;/strong>: 정해진 시간 동안 집중적으로 테스트를 수행한다.&lt;/li>
&lt;li>&lt;strong>테스트 노트&lt;/strong>: 테스트 중 발견한 사항과 아이디어를 기록한다.&lt;/li>
&lt;li>&lt;strong>요약 보고(Debriefing)&lt;/strong>: 테스트 결과와 발견된 이슈를 팀과 공유한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>속도와 비용 효율성&lt;/strong>: 사전 준비가 적어 빠르게 테스트를 시작할 수 있다.&lt;/li>
&lt;li>&lt;strong>예상치 못한 버그 발견&lt;/strong>: 정형화된 테스트로는 찾기 어려운 버그를 발견할 수 있다.&lt;/li>
&lt;li>&lt;strong>사용성 개선&lt;/strong>: 사용자 관점에서 제품을 평가할 수 있다.&lt;/li>
&lt;li>&lt;strong>요구사항 변화에 대응&lt;/strong>: 애자일 개발 환경에 적합하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>주관성&lt;/strong>: 테스터의 개인 능력에 크게 의존한다.&lt;/li>
&lt;li>&lt;strong>테스트 범위 확인 어려움&lt;/strong>: 체계적인 계획이 없어 테스트 범위를 정확히 파악하기 어렵다.&lt;/li>
&lt;li>&lt;strong>관리와 통제의 어려움&lt;/strong>: 테스트의 양과 질을 관리하기 어려울 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>적용 사례&lt;span class="hx-absolute -hx-mt-20" id="적용-사례">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>예를 들어, MP3 플레이어 앱을 테스트할 때 다음과 같은 탐색적 테스팅을 수행할 수 있다:&lt;/p>
&lt;ol>
&lt;li>음악 재생 중 전화가 왔을 때의 동작 확인&lt;/li>
&lt;li>백그라운드에서 음악 재생 시 다른 앱과의 상호작용 테스트&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>오류 예측 검사(Error Guessing)</title><link>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/error-guessing/</link><pubDate>Sun, 08 Dec 2024 00:13:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/qa/qc/test/test-design/black-box-testing/experience-based-test/error-guessing/</guid><description>
&lt;h2>오류 예측 검사(Error Guessing)&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사error-guessing">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%acerror-guessing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>오류 예측 검사(Error Guessing)는 블랙박스 테스트 기법 중 하나로, 테스터의 &lt;strong>경험, 지식, 직관&lt;/strong>을 활용하여 소프트웨어에서 발생할 가능성이 높은 오류를 예측하고 이를 기반으로 테스트 케이스를 설계하는 방법.&lt;br>
이 기법은 다른 테스트 기법으로는 발견하기 어려운 결함을 보완적으로 찾아내는 데 유용하다.&lt;/p>
&lt;h3>&lt;strong>오류 예측 검사의 특징&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-특징">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>경험 기반 접근&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>과거의 경험, 유사한 시스템에서 발견된 오류 유형, 그리고 직관을 활용하여 잠재적 오류를 예측한다.&lt;/li>
&lt;li>특정한 규칙이나 구조에 의존하지 않고 테스터의 전문성과 감각에 의존한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>보충적 검사 기법&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>명세 기반 테스트(예: 동치 분할, 경계값 분석)로 놓칠 수 있는 오류를 보완적으로 탐지한다.&lt;/li>
&lt;li>데이터 확인 검사라고도 불리며, 다른 기법과 함께 사용하여 테스트의 완성도를 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>유연성&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>정형화된 절차 없이 테스터의 판단에 따라 다양한 상황과 입력값을 테스트한다.&lt;/li>
&lt;li>예상치 못한 결함을 발견할 가능성을 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>일반적인 오류 예측 영역&lt;span class="hx-absolute -hx-mt-20" id="일반적인-오류-예측-영역">&lt;/span>
&lt;a href="#%ec%9d%bc%eb%b0%98%ec%a0%81%ec%9d%b8-%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ec%98%81%ec%97%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>입력 데이터 관련 오류:&lt;/p>
&lt;ul>
&lt;li>경계값 근처의 입력&lt;/li>
&lt;li>특수 문자가 포함된 데이터&lt;/li>
&lt;li>매우 큰 데이터 또는 작은 데이터&lt;/li>
&lt;li>한글, 이모지 등 유니코드 문자&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>처리 과정 관련 오류:&lt;/p>
&lt;ul>
&lt;li>동시 접근 상황&lt;/li>
&lt;li>메모리 부족 상황&lt;/li>
&lt;li>네트워크 지연 또는 단절&lt;/li>
&lt;li>데이터베이스 연결 실패&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인터페이스 관련 오류:&lt;/p>
&lt;ul>
&lt;li>브라우저 호환성 문제&lt;/li>
&lt;li>화면 크기 변경에 따른 레이아웃 깨짐&lt;/li>
&lt;li>다양한 디바이스에서의 동작 차이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>오류 예측의 주요 접근 방법&lt;span class="hx-absolute -hx-mt-20" id="오류-예측의-주요-접근-방법">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%a0%91%ea%b7%bc-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>시스템적 접근: 테스터는 먼저 시스템의 구조와 기능을 전체적으로 파악한다.&lt;br>
예를 들어, 웹 애플리케이션을 테스트할 때는 사용자 입력, 데이터 처리, 네트워크 통신 등 각 계층에서 발생할 수 있는 오류를 예측한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>경험 기반 접근: 과거 프로젝트에서 발견된 유사한 오류 패턴을 활용한다. 특정 기능이나 모듈에서 자주 발생했던 문제들을 기반으로 테스트 케이스를 설계한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>효과적인 오류 예측을 위한 전략&lt;span class="hx-absolute -hx-mt-20" id="효과적인-오류-예측을-위한-전략">&lt;/span>
&lt;a href="#%ed%9a%a8%ea%b3%bc%ec%a0%81%ec%9d%b8-%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1%ec%9d%84-%ec%9c%84%ed%95%9c-%ec%a0%84%eb%9e%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>과거 경험 활용: 이전 프로젝트에서 발견된 오류들을 데이터베이스화하여 참조한다. 이는 마치 의료 분야에서 케이스 스터디를 활용하는 것과 비슷하다.&lt;/li>
&lt;li>스트레스 상황 고려: 시스템이 극한 상황에서 어떻게 동작할지 예측한다.&lt;br>
예를 들어:
&lt;ul>
&lt;li>대량의 사용자 동시 접속&lt;/li>
&lt;li>시스템 리소스 부족&lt;/li>
&lt;li>네트워크 불안정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 행동 패턴 분석: 실제 사용자들이 시스템을 어떻게 사용할지, 어떤 실수를 할 수 있을지 예측한다.&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>오류 예측 검사의 설계 방법&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-설계-방법">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%84%a4%ea%b3%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>잠재적 오류 식별&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>과거 유사 프로젝트에서 발생했던 일반적인 결함 유형을 검토한다.&lt;/li>
&lt;li>소프트웨어의 복잡한 부분이나 오류가 발생하기 쉬운 영역(예: 경계값, 예외 처리)을 중점적으로 분석한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 케이스 작성&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>예상되는 오류 상황에 맞는 입력값과 조건을 설정한다.&lt;/li>
&lt;li>정상적인 입력뿐 아니라 비정상적이거나 극단적인 입력값도 포함시킨다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>테스트 실행 및 평가&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>작성된 테스트 케이스를 실행하여 시스템이 예상대로 동작하지 않는 부분을 확인한다.&lt;/li>
&lt;li>발견된 결함을 기록하고 수정 과정을 거친다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>&lt;strong>오류 예측 검사의 장점&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-장점">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>효율성&lt;/strong>: 테스터의 경험을 활용하여 빠르게 결함을 탐지할 수 있다.&lt;/li>
&lt;li>&lt;strong>보완적 역할&lt;/strong>: 다른 블랙박스 테스트 기법으로는 발견하기 어려운 오류를 찾아낼 수 있다.&lt;/li>
&lt;li>&lt;strong>적용 범위가 넓음&lt;/strong>: 다양한 소프트웨어 애플리케이션과 환경에 적용 가능하다.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>오류 예측 검사의 단점&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="오류-예측-검사의-단점">&lt;/span>
&lt;a href="#%ec%98%a4%eb%a5%98-%ec%98%88%ec%b8%a1-%ea%b2%80%ec%82%ac%ec%9d%98-%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>주관성 의존&lt;/strong>: 테스터의 경험과 능력에 크게 의존하므로 일관성이 부족할 수 있다.&lt;/li>
&lt;li>&lt;strong>체계적이지 않음&lt;/strong>: 정형화된 절차 없이 진행되기 때문에 모든 잠재적 결함을 포괄하지 못할 가능성이 있다.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>적용 사례&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="적용-사례">&lt;/span>
&lt;a href="#%ec%a0%81%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>복잡한 시스템이나 새로운 소프트웨어 도메인에서 초기 결함 탐지&lt;/li>
&lt;li>경계값 분석이나 상태 전이 테스트 등 명세 기반 기법으로 놓친 결함 보완&lt;/li>
&lt;li>사용자 입력 데이터를 다양하게 변형하여 예상치 못한 오류 탐지&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>