<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Software-Architecture on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/software-architecture/</link>
    <description>Recent content in Software-Architecture on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Jun 2025 13:42:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/software-architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data Pipeline Pattern</title>
      <link>https://buenhyden.github.io/posts/data-science-and-engineering/data-engineering/data-pipeline/data-pipeline-design/data-pipeline-pattern/</link>
      <pubDate>Tue, 19 Nov 2024 03:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-science-and-engineering/data-engineering/data-pipeline/data-pipeline-design/data-pipeline-pattern/</guid>
      <description>데이터 파이프라인 패턴은 데이터를 원천에서 목적지로 이동시키는 과정을 자동화하고 최적화하는 아키텍처 패턴이다.</description>
    </item>
    <item>
      <title>MSA 패턴 유형별 비교</title>
      <link>https://buenhyden.github.io/posts/system-design/use-cases/industry-patterns/msa-pattern-comparison/</link>
      <pubDate>Tue, 19 Nov 2024 02:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/use-cases/industry-patterns/msa-pattern-comparison/</guid>
      <description>MSA의 주요 패턴 유형들을 체계적으로 정리한 것.</description>
    </item>
    <item>
      <title>Strategic Design</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/design-methodology/domain-driven-design/strategic-design/</link>
      <pubDate>Wed, 04 Jun 2025 13:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/design-methodology/domain-driven-design/strategic-design/</guid>
      <description>Strategic Design 은 DDD 내부에서 &amp;#39;무엇을&amp;#39; &amp;#39;왜&amp;#39; 만들지 결정하는 고수준 접근 방식이다. 복잡한 비즈니스 도메인의 핵심 (Subdomain/Core Domain) 을 정의하고 Bounded Context(경계 컨텍스트) 를 설정하며 Ubiquitous Language(공통 언어) 를 개발해 조직과 도메인 간 협업 기반을 마련하며 Context Map (컨텍스트 맵) 으로 시스템 전체 아키텍처를 관리한다.</description>
    </item>
  </channel>
</rss>
