<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Greedy-Algorithm on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/greedy-algorithm/</link>
    <description>Recent content in Greedy-Algorithm on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Mar 2025 05:43:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/greedy-algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>탐욕 알고리즘 (Greedy Algorithm)</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/</link>
      <pubDate>Sun, 13 Oct 2024 05:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/</guid>
      <description>문제를 해결하는 과정에서 매 순간 현재 상황에서 가장 좋아 보이는 선택을 하는 방법이다. 즉, &amp;#39;탐욕적&amp;#39;으로 각 단계에서 최적이라고 생각되는 해를 선택하여 최종적인 해답에 도달하는 알고리즘이다.</description>
    </item>
    <item>
      <title>Greedy Choice Property</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/attributes/greedy-choice-property/</link>
      <pubDate>Mon, 10 Mar 2025 05:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/attributes/greedy-choice-property/</guid>
      <description>&lt;h2 id=&#34;greedy-choice-property&#34;&gt;Greedy Choice Property&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Optimal Substructure</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/attributes/optimal-substructure/</link>
      <pubDate>Mon, 10 Mar 2025 05:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/attributes/optimal-substructure/</guid>
      <description>&lt;h2 id=&#34;optimal-substructure&#34;&gt;Optimal Substructure&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Feasibility Check</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/principles/feasibility-check/</link>
      <pubDate>Wed, 22 Jan 2025 14:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/principles/feasibility-check/</guid>
      <description>&lt;h2 id=&#34;feasibility-check&#34;&gt;Feasibility Check&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Selection Procedure</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/principles/selection-procedure/</link>
      <pubDate>Wed, 22 Jan 2025 14:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/principles/selection-procedure/</guid>
      <description>&lt;h2 id=&#34;selection-procedure&#34;&gt;Selection Procedure&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Solution Check</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/principles/solution-check/</link>
      <pubDate>Wed, 22 Jan 2025 14:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/principles/solution-check/</guid>
      <description>&lt;h2 id=&#34;solution-check&#34;&gt;Solution Check&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Greedy Algorithm vs. Back tracking</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-back-tracking/</link>
      <pubDate>Tue, 21 Jan 2025 14:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-back-tracking/</guid>
      <description>&lt;h2 id=&#34;greedy-algorithm-vs-back-tracking&#34;&gt;Greedy Algorithm vs. Back tracking&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Greedy Algorithm vs. Dynamic Programming</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-dynamic-programming/</link>
      <pubDate>Tue, 21 Jan 2025 10:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-dynamic-programming/</guid>
      <description>&lt;h2 id=&#34;greedy-algorithm-vs-dynamic-programming&#34;&gt;Greedy Algorithm vs. Dynamic Programming&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Greedy Algorithm vs. Divide and Conquer</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-divide-and-conquer/</link>
      <pubDate>Sat, 28 Dec 2024 10:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-divide-and-conquer/</guid>
      <description>분할 정복은 문제를 더 작은 하위 문제로 나누어 해결하는 체계적인 접근 방식인 반면, 탐욕 알고리즘은 각 단계에서 지역적 최적 선택을 통해 문제를 해결하는 직관적인 접근 방식이다.</description>
    </item>
    <item>
      <title>Greedy Algorithm vs. Approximation algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-approximation-algorithm/</link>
      <pubDate>Mon, 09 Dec 2024 10:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures-and-algorithms/problem-solving-techniques/greedy-algorithm/greedy-algorithm-vs-approximation-algorithm/</guid>
      <description>&lt;h2 id=&#34;greedy-algorithm-vs-approximation-algorithm&#34;&gt;Greedy Algorithm vs. Approximation algorithm&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
  </channel>
</rss>
