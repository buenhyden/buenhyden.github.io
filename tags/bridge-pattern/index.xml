<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Bridge-Pattern on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/tags/bridge-pattern/</link>
    <description>Recent content in Bridge-Pattern on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Wed, 25 Sep 2024 06:14:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/tags/bridge-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bridge Pattern</title>
      <link>https://buenhyden.github.io/posts/software-engineering/design-and-architecture/software-design-patterns/gof/structural/bridge-pattern/</link>
      <pubDate>Wed, 25 Sep 2024 06:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/design-and-architecture/software-design-patterns/gof/structural/bridge-pattern/</guid>
      <description>브리지 패턴 (Bridge Pattern) 은 추상화 (Abstraction) 와 구현 (Implementation) 을 분리하여 두 계층이 독립적으로 변화할 수 있도록 하는 구조적 디자인 패턴이다.  상속 대신 컴포지션을 사용하여 클래스 계층의 폭발적 증가를 방지하고, 런타임에 구현체를 변경할 수 있는 유연성을 제공한다. 크로스 플랫폼 애플리케이션, 데이터베이스 추상화 계층, API 게이트웨이 등에서 광범위하게 활용된다.</description>
    </item>
  </channel>
</rss>
