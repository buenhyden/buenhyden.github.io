<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ambassador-Pattern :: Tag :: hyunyoun's Blog</title><link>https://buenhyden.github.io/tags/ambassador-pattern/</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Tue, 19 Nov 2024 10:07:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/tags/ambassador-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Ambassador Pattern</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/ambassador-pattern/</link><pubDate>Tue, 19 Nov 2024 10:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/ambassador-pattern/</guid><description>Ambassador Pattern은 클라이언트와 마이크로서비스 사이에 별도의 서비스(Ambassador)를 두어 통신을 관리하는 디자인 패턴이다.</description></item></channel></rss>