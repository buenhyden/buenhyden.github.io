<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Programming Languages on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/programming-languages/</link>
    <description>Recent content in Programming Languages on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Mar 2025 09:46:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/programming-languages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>어셈블러(Assembler)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/language-processor/assembler/</link>
      <pubDate>Thu, 05 Dec 2024 03:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/language-processor/assembler/</guid>
      <description>Assembler는 어셈블리 언어로 작성된 소스 코드를 컴퓨터가 직접 실행할 수 있는 기계어 코드로 변환하는 번역 도구</description>
    </item>
    <item>
      <title>ECMAScript</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/ecmascript/</link>
      <pubDate>Wed, 04 Dec 2024 17:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/ecmascript/</guid>
      <description>ECMAScript는 자바스크립트의 표준 규격으로, **Ecma International**이 ECMA-262 기술 규격을 통해 정의한 스크립트 프로그래밍 언어이다.</description>
    </item>
    <item>
      <title>Language Syntax</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/language-syntax/</link>
      <pubDate>Fri, 04 Oct 2024 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/language-syntax/</guid>
      <description>프로그래밍 언어의 구문(Language Syntax)은 코드의 구조와 형식을 결정하는 규칙 집합으로, 코드가 올바르게 실행되기 위한 기초 역할을 한다.</description>
    </item>
    <item>
      <title>Data Types</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/data-types/</link>
      <pubDate>Wed, 29 Jan 2025 01:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/data-types/</guid>
      <description>&lt;h2 id=&#34;data-types&#34;&gt;Data Types&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Javascript vs. Python</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-vs-python/</link>
      <pubDate>Sun, 22 Dec 2024 04:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-vs-python/</guid>
      <description>&lt;h2 id=&#34;javascript-vs-python&#34;&gt;Javascript vs. Python&lt;/h2&gt;
&lt;p&gt;JavaScript와 Python은 현대 프로그래밍 세계에서 가장 인기 있는 두 언어이다.&lt;br&gt;
두 언어 모두 높은 수준의 프로그래밍 언어이지만, 설계 철학, 사용 사례, 문법 등에서 중요한 차이점이 있다.&lt;/p&gt;
&lt;p&gt;JavaScript와 Python은 각각 고유한 강점과 약점을 가진 강력한 프로그래밍 언어이다.&lt;br&gt;
JavaScript는 웹 개발에서 독보적인 위치를 차지하고 있으며, 비동기 프로그래밍 모델과 빠른 실행 속도가 특징이다. Python은 가독성이 뛰어나고 데이터 과학, 기계 학습, 자동화 분야에서 뛰어난 라이브러리 지원을 제공한다.&lt;/p&gt;
&lt;h3 id=&#34;역사와-배경&#34;&gt;역사와 배경&lt;/h3&gt;
&lt;h4 id=&#34;javascript&#34;&gt;JavaScript&lt;/h4&gt;
&lt;p&gt;JavaScript는 1995년 Netscape의 Brendan Eich에 의해 웹 브라우저용 스크립팅 언어로 개발되었다.&lt;br&gt;
처음에는 &amp;lsquo;Mocha&amp;rsquo;라고 불렸으며, 나중에 &amp;lsquo;LiveScript&amp;rsquo;로 이름이 바뀌었고, 마지막으로 마케팅 목적으로 &amp;lsquo;JavaScript&amp;rsquo;라는 이름이 되었다 (Java와의 관련성은 거의 없다).&lt;br&gt;
JavaScript는 웹 페이지에 상호작용성을 추가하기 위해 만들어졌으며, 시간이 지남에 따라 Node.js와 같은 플랫폼 덕분에 서버 측 개발로 확장되었다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Web Framework</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/web-framework/</link>
      <pubDate>Fri, 29 Nov 2024 04:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework/</guid>
      <description>동적 웹사이트, 웹 서비스 및 웹 애플리케이션의 개발을 지원하기 위해 만들어진 소프트웨어 프레임워크</description>
    </item>
    <item>
      <title>Python</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/</link>
      <pubDate>Sat, 02 Nov 2024 01:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/</guid>
      <description>다양한 특징을 가진 강력하고 유연한 프로그래밍 언어</description>
    </item>
    <item>
      <title>Type Casting</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/type-casting/</link>
      <pubDate>Tue, 04 Mar 2025 10:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/type-casting/</guid>
      <description>&lt;h2 id=&#34;type-casting&#34;&gt;Type Casting&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Javascript</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/</link>
      <pubDate>Thu, 21 Nov 2024 01:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/</guid>
      <description>웹 개발에서 널리 사용되는 프로그래밍 언어</description>
    </item>
    <item>
      <title>라이브러리 (Library)와 프레임워크 (Framework)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/library-and-framework/</link>
      <pubDate>Wed, 20 Nov 2024 06:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/library-and-framework/</guid>
      <description>라이브러리(Library)는 특정 기능을 수행하는 코드의 모음이고, 프레임워크(Framework)는 애플리케이션 개발의 기본 구조를 제공한다.</description>
    </item>
    <item>
      <title>의사코드(Pseudocode)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/pseudo-code/</link>
      <pubDate>Thu, 05 Dec 2024 01:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/pseudo-code/</guid>
      <description>의사코드(Pseudocode)는 알고리즘을 설명하기 위한 비공식적이고 고수준의 표현 방식으로, 특정 프로그래밍 언어의 문법에 얽매이지 않고 간단한 텍스트 형태로 작성된다.</description>
    </item>
    <item>
      <title>Java</title>
      <link>https://buenhyden.github.io/posts/programming-languages/java/</link>
      <pubDate>Wed, 20 Nov 2024 01:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/java/</guid>
      <description>제임스 고슬링(James Gosling)과 썬 마이크로시스템즈(Sun Microsystems)에서 개발한 객체 지향 프로그래밍 언어.</description>
    </item>
    <item>
      <title>언어 프로세서(Language Processor)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/language-processor/</link>
      <pubDate>Thu, 05 Dec 2024 03:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/language-processor/</guid>
      <description>소스 코드나 어셈블리어 등 인간이 이해하기 편한 언어로 작성된 코드를 컴퓨터가 실행할 수 있는 기계어나 그에 가까운 형태로 변환하는 역할을 한다.</description>
    </item>
    <item>
      <title>Programming Languages</title>
      <link>https://buenhyden.github.io/posts/programming-languages/</link>
      <pubDate>Sun, 06 Oct 2024 10:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/</guid>
      <description>기계(컴퓨터)에게 명령이나 연산을 시킬 목적으로 설계되어 기계와 의사소통을 할 수 있게 해주는 언어</description>
    </item>
    <item>
      <title>Iteration vs Recursion</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/iteration-vs-recursion/</link>
      <pubDate>Sun, 06 Oct 2024 11:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/iteration-vs-recursion/</guid>
      <description>Iteration과 Recursion은 프로그래밍에서 반복적인 작업을 수행하는 두 가지 주요 방식이다.</description>
    </item>
    <item>
      <title>Process vs Thread vs Coroutine</title>
      <link>https://buenhyden.github.io/posts/computer-science/processes-and-threads/process-vs-thread-vs-coroutine/</link>
      <pubDate>Sun, 06 Oct 2024 08:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/processes-and-threads/process-vs-thread-vs-coroutine/</guid>
      <description>Process란 실행 중인 프로그램의 인스턴스를 이야기하며, Thread란 프로세스 내에서 실행되는 더 작은 실행 단위를 말한다.</description>
    </item>
    <item>
      <title>Javascript Testing</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/testing/</link>
      <pubDate>Fri, 22 Nov 2024 06:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/testing/</guid>
      <description>Javascript에서 활용할 수 있는 다양한 테스팅 도구</description>
    </item>
    <item>
      <title>Javascript Engines</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-engines/</link>
      <pubDate>Wed, 05 Mar 2025 09:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-engines/</guid>
      <description>&lt;h2 id=&#34;javascript-engines&#34;&gt;Javascript Engines&lt;/h2&gt;
&lt;p&gt;JavaScript 엔진은 JavaScript 코드를 이해하고 실행하는 프로그램이다.&lt;br&gt;
웹 브라우저나 Node.js와 같은 환경에서 JavaScript 코드를 해석하고 실행하는 핵심 요소이다.&lt;br&gt;
JavaScript는 원래 인터프리터 언어로 설계되었지만, 현대의 JavaScript 엔진들은 성능 향상을 위해 다양한 최적화 기술을 사용한다.&lt;/p&gt;
&lt;p&gt;JavaScript 엔진의 주요 역할:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript 코드를 읽고 구문 분석(파싱)&lt;/li&gt;
&lt;li&gt;코드를 기계어 또는 중간 표현으로 변환&lt;/li&gt;
&lt;li&gt;코드 실행&lt;/li&gt;
&lt;li&gt;메모리 관리 (가비지 컬렉션 포함)&lt;/li&gt;
&lt;li&gt;최적화 수행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JavaScript 엔진은 현대 웹의 핵심 구성 요소로, 웹 브라우저와 서버 측 애플리케이션 모두에서 JavaScript 코드를 실행하는 데 필수적이다. Google의 V8, Mozilla의 SpiderMonkey, Apple의 JavaScriptCore와 같은 주요 엔진들은 계속해서 발전하며, 성능을 향상시키고 새로운 언어 기능을 지원하고 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Closures</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/functions/scope-and-function-stack/closures/</link>
      <pubDate>Tue, 04 Mar 2025 09:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/functions/scope-and-function-stack/closures/</guid>
      <description>&lt;h2 id=&#34;closures&#34;&gt;Closures&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Object</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/data-types/object/</link>
      <pubDate>Wed, 29 Jan 2025 01:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/data-types/object/</guid>
      <description>&lt;h2 id=&#34;object&#34;&gt;Object&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Event Loop</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/runtime-environments/nodejs/fundamentals/async-programming/event-loop/</link>
      <pubDate>Thu, 26 Dec 2024 14:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/runtime-environments/nodejs/fundamentals/async-programming/event-loop/</guid>
      <description>Node.js의 이벤트 루프는 Node.js 애플리케이션의 핵심 작동 원리로, 비동기 I/O 작업을 효율적으로 처리하는 메커니즘이다.</description>
    </item>
    <item>
      <title>Primitive Types</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/data-types/primitive-types/</link>
      <pubDate>Wed, 25 Dec 2024 01:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/data-types/primitive-types/</guid>
      <description>&lt;h2 id=&#34;primitive-types&#34;&gt;Primitive Types&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>CommonJS</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/modules/commonjs/</link>
      <pubDate>Sun, 22 Dec 2024 04:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/modules/commonjs/</guid>
      <description>자바스크립트를 브라우저 외부 환경, 특히 서버 사이드에서 사용하기 위해 만들어진 모듈 시스템</description>
    </item>
    <item>
      <title>ES Modules</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/modules/es-modules/</link>
      <pubDate>Sun, 22 Dec 2024 04:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/modules/es-modules/</guid>
      <description>JavaScript 코드를 모듈 단위로 구성하고 관리할 수 있게 해주는 공식 표준 모듈 시스템이다.  이 시스템은 ECMAScript 2015(ES6)에서 처음 도입되었으며, 코드의 재사용성, 유지보수성, 그리고 의존성 관리를 크게 향상시켰다</description>
    </item>
    <item>
      <title>Python vs Javascript vs Typescript vs Java</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python-vs-javascript-vs-typescript-vs-java/</link>
      <pubDate>Fri, 06 Dec 2024 00:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python-vs-javascript-vs-typescript-vs-java/</guid>
      <description>프로그래밍 언어마다 각기 다른 설계 철학과 실행 방식, 개발 생태계 및 목적이 존재한다.</description>
    </item>
    <item>
      <title>Typescript vs. Javascript</title>
      <link>https://buenhyden.github.io/posts/programming-languages/typescript/typescript-vs-javascript/</link>
      <pubDate>Fri, 06 Dec 2024 00:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/typescript/typescript-vs-javascript/</guid>
      <description>JavaScript와 TypeScript는 둘 다 웹 및 기타 환경에서 널리 사용되는 프로그래밍 언어이지만, 설계와 사용 목적에 있어 몇 가지 중요한 차이가 있다.</description>
    </item>
    <item>
      <title>Python Web Application Server</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/</link>
      <pubDate>Sat, 30 Nov 2024 14:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/</guid>
      <description>gunicorn, uwsgi, daphne, uvicorn은 모두 Python 웹 애플리케이션을 실행하고 서비스하기 위한 서버 프로그램들이다.</description>
    </item>
    <item>
      <title>Python Testing</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/fundamentals/testing/</link>
      <pubDate>Fri, 29 Nov 2024 14:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/fundamentals/testing/</guid>
      <description>Python에서 활용할 수 있는 다양한 테스팅 도구</description>
    </item>
    <item>
      <title>Python Linter와 Formatter</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/fundamentals/linter-and-formatter/</link>
      <pubDate>Thu, 28 Nov 2024 13:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/fundamentals/linter-and-formatter/</guid>
      <description>Python에서 활용할 수 있는 소스 코드에서 문법 오류나 스타일 문제, 잠재적인 버그를 자동으로 검사해주는 도구</description>
    </item>
    <item>
      <title>PEP</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/fundamentals/pep/</link>
      <pubDate>Tue, 26 Nov 2024 13:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/fundamentals/pep/</guid>
      <description>Python Enhancement Proposal의 약자로 파이썬 커뮤니티에 새로운 기능을 알리거나 설명하는 설계 문서.</description>
    </item>
    <item>
      <title>Javascript Web Framework</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/runtime-environments/nodejs/apis/frameworks/</link>
      <pubDate>Fri, 22 Nov 2024 09:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/runtime-environments/nodejs/apis/frameworks/</guid>
      <description>Javascript Web Framework의 프론트엔드 영역과 백엔드 영역의 대표적인 프레임워크와 라이브러리에 대해 비교분석해본다.</description>
    </item>
    <item>
      <title>Javascript Linter와 Formatter</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/build-tools/linter-and-formatter/</link>
      <pubDate>Thu, 21 Nov 2024 13:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/fundamentals/build-tools/linter-and-formatter/</guid>
      <description>Javascript에서 활용할 수 있는 소스 코드에서 문법 오류나 스타일 문제, 잠재적인 버그를 자동으로 검사해주는 도구</description>
    </item>
    <item>
      <title>Typescript</title>
      <link>https://buenhyden.github.io/posts/programming-languages/typescript/</link>
      <pubDate>Wed, 20 Nov 2024 11:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/typescript/</guid>
      <description>TypeScript는 Microsoft가 개발한 오픈소스 프로그래밍 언어로, JavaScript의 상위 집합(superset)으로, JavaScript의 모든 기능을 포함하면서 정적 타입 시스템을 추가</description>
    </item>
    <item>
      <title>코루틴(Coroutine)</title>
      <link>https://buenhyden.github.io/posts/computer-science/processes-and-threads/coroutine/</link>
      <pubDate>Sat, 05 Oct 2024 06:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/processes-and-threads/coroutine/</guid>
      <description>코루틴은 &amp;#34;협력적인 루틴&amp;#34;이라는 의미로, 여러 작업이 협력하여 실행되는 방식을 말한다. 일반 함수와 달리, 코루틴은 실행 중간에 일시 중단되었다가 나중에 다시 재개될 수 있다.</description>
    </item>
  </channel>
</rss>
