<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Databases on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/databases/</link>
    <description>Recent content in Databases on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.146.4</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Feb 2025 15:11:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/databases/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Connection Pool</title>
      <link>https://buenhyden.github.io/posts/databases/fundamentals/connection-pool/</link>
      <pubDate>Fri, 25 Oct 2024 06:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/fundamentals/connection-pool/</guid>
      <description>Connection pool은 데이터베이스 연결을 재사용 가능한 형태로 캐시하는 메커니즘이다.  이는 애플리케이션이 데이터베이스에 연결할 때마다 새로운 연결을 생성하는 대신, 미리 생성된 연결을 사용할 수 있게 해준다.</description>
    </item>
    <item>
      <title>ER(Entity-Relationship) 모델링</title>
      <link>https://buenhyden.github.io/posts/databases/fundamentals/entity-relationship-modeling/</link>
      <pubDate>Fri, 25 Oct 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/fundamentals/entity-relationship-modeling/</guid>
      <description>실제 세계의 데이터를 개체(Entity), 관계(Relationship), 속성(Attribute)으로 표현하여 데이터베이스를 설계하는 방법</description>
    </item>
    <item>
      <title>SQL (Structured Query Language)</title>
      <link>https://buenhyden.github.io/posts/databases/rdbms/sql/</link>
      <pubDate>Thu, 27 Feb 2025 15:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/rdbms/sql/</guid>
      <description>SQL(Structured Query Language)은 관계형 데이터베이스 관리 시스템(RDBMS)에서 데이터를 관리하고 조작하기 위한 표준 프로그래밍 언어이다.</description>
    </item>
    <item>
      <title>Object-Relational Mapping</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/orm/</link>
      <pubDate>Mon, 16 Dec 2024 12:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/orm/</guid>
      <description>객체 지향 프로그래밍 언어와 관계형 데이터베이스 사이의 불일치를 해결하기 위한 기술</description>
    </item>
    <item>
      <title>데이터 불일치 (Data Inconsistency)</title>
      <link>https://buenhyden.github.io/posts/databases/fundamentals/data-inconsistency/</link>
      <pubDate>Fri, 25 Oct 2024 07:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/fundamentals/data-inconsistency/</guid>
      <description>동일한 데이터가 데이터베이스 내의 여러 위치에서 서로 다른 형식이나 값으로 존재하는 상황</description>
    </item>
    <item>
      <title>트랜잭션 (Tracsactions)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/tracsactions/</link>
      <pubDate>Thu, 24 Oct 2024 13:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/tracsactions/</guid>
      <description>데이터베이스의 상태를 변화시키기 위해 수행하는 작업의 단위</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링(Database Clustering)</title>
      <link>https://buenhyden.github.io/posts/databases/scaling-databases/clustering/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/scaling-databases/clustering/</guid>
      <description>하나의 데이터베이스를 여러 개의 서버 또는 인스턴스로 구성하여 운영하는 기술</description>
    </item>
    <item>
      <title>데이터베이스 파티셔닝 (Database Partitioning)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/partitioning/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/partitioning/</guid>
      <description>파티셔닝은 큰 테이블이나 인덱스를 더 작고 관리하기 쉬운 단위로 나누는 것</description>
    </item>
    <item>
      <title>샤딩 (sharding)</title>
      <link>https://buenhyden.github.io/posts/databases/scaling-databases/sharding/</link>
      <pubDate>Tue, 22 Oct 2024 06:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/scaling-databases/sharding/</guid>
      <description>대규모 데이터베이스 시스템에서 데이터를 수평적으로 분할하여 여러 서버에 분산 저장하는 기술</description>
    </item>
    <item>
      <title>분산 데이터베이스 (Distributed Database)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/distributed-database/</link>
      <pubDate>Tue, 22 Oct 2024 06:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/distributed-database/</guid>
      <description>물리적으로 여러 위치에 분산되어 있지만, 논리적으로는 하나의 데이터베이스처럼 동작하는 시스템</description>
    </item>
    <item>
      <title>데이터베이스 최적화 (Database Optimization)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/optimization/</link>
      <pubDate>Tue, 22 Oct 2024 06:12:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/optimization/</guid>
      <description>데이터베이스 시스템의 성능을 향상시키고 효율성을 높이기 위한 다양한 기법과 프로세스를 의미한다.</description>
    </item>
    <item>
      <title>데이터베이스 정규화 (Database Normalization)</title>
      <link>https://buenhyden.github.io/posts/databases/more-about-databases/normalization/</link>
      <pubDate>Tue, 22 Oct 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/databases/more-about-databases/normalization/</guid>
      <description>관계형 데이터베이스의 설계를 체계화하고 최적화하는 과정</description>
    </item>
  </channel>
</rss>
