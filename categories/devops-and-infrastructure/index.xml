<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DevOps and Infrastructure on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/devops-and-infrastructure/</link>
    <description>Recent content in DevOps and Infrastructure on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.7</generator>
    <language>en</language>
    <lastBuildDate>Thu, 08 May 2025 04:31:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/devops-and-infrastructure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Version Control System Theory</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/vcs-theory/</link>
      <pubDate>Thu, 01 May 2025 09:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/vcs-theory/</guid>
      <description></description>
    </item>
    <item>
      <title>Git Workflow</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/git-workflow/</link>
      <pubDate>Mon, 28 Oct 2024 12:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/git-workflow/</guid>
      <description></description>
    </item>
    <item>
      <title>CI/CD Automation</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/ci-cd/ci-cd-automation/</link>
      <pubDate>Wed, 02 Oct 2024 08:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/ci-cd/ci-cd-automation/</guid>
      <description>CI/CD Automation 은 소프트웨어 개발 라이프사이클 전반의 빌드, 테스트, 배포 과정을 자동화해 개발 효율성과 품질을 향상시키는 DevOps 핵심 전략이다. 지속적 통합 (CI) 은 개발자들이 코드를 주기적으로 통합하고 검증하는 과정을, 지속적 배포 (CD) 는 검증된 코드를 자동으로 프로덕션 환경에 배포하는 과정을 자동화한다. 이 자동화 시스템은 개발 주기를 단축하고, 코드 품질을 향상시키며, 배포 위험을 줄인다. 효과적인 CI/CD 파이프라인은 빌드 자동화, 포괄적인 테스트, 무중단 배포 전략, 롤백 메커니즘을 갖추고 있다.</description>
    </item>
    <item>
      <title>Version Control Systems</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/</link>
      <pubDate>Sat, 28 Sep 2024 15:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/</guid>
      <description>버전 관리 시스템은 소프트웨어 코드의 변경사항을 추적하고 관리하는 필수적인 도구로, 개발 과정에서 발생하는 변경 이력을 체계적으로 저장하고 여러 개발자 간의 효율적인 협업을 지원한다. 중앙 집중식과 분산식으로 크게 나뉘며, 현대 소프트웨어 개발에서는 Git과 같은 분산형 버전 관리 시스템이 주류를 이루고 있다. 이는 브랜칭과 머징, 변경 이력 추적, 롤백 기능을 통해 코드 품질을 유지하고 개발 워크플로우를 효율화하며, DevOps 환경에서 CI/CD 파이프라인과 긴밀하게 통합되어 현대 소프트웨어 개발의 핵심 인프라 역할을 담당한다.</description>
    </item>
    <item>
      <title>사이트 신뢰성 엔지니어링 (Site Reliability Engineering, SRE)</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/site-reliability-engineering/</link>
      <pubDate>Sat, 28 Sep 2024 09:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/site-reliability-engineering/</guid>
      <description>IT 운영에 대한 소프트웨어 엔지니어링 접근 방식</description>
    </item>
    <item>
      <title>CI/CD</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/ci-cd/</link>
      <pubDate>Mon, 23 Sep 2024 18:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/ci-cd/</guid>
      <description>CI/CD(지속적 통합/지속적 배포) 는 소프트웨어 개발과 배포 프로세스를 자동화하는 현대적인 방법론으로, 개발자가 코드 변경사항을 자주 통합하고 테스트하여 빠르고 안정적인 소프트웨어 배포를 가능하게 한다. 지속적 통합 (CI) 은 코드를 중앙 저장소에 자주 병합하고 자동 테스트하는 과정이며, 지속적 배포 (CD) 는 검증된 코드를 자동으로 프로덕션 환경에 배포하는 프로세스이다. CI/CD 는 버전 관리 시스템, CI/CD 서버, 빌드 도구, 테스트 프레임워크 등의 구성 요소로 이루어지며, 빠른 피드백 루프, 배포 주기 단축, 버그 감소 등의 장점을 제공한다.</description>
    </item>
    <item>
      <title>Deployment Strategies</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/ci-cd/deployment-strategies/</link>
      <pubDate>Mon, 23 Sep 2024 02:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/ci-cd/deployment-strategies/</guid>
      <description>배포 전략(Deployment Strategies)은 소프트웨어를 안전하고 효율적으로 업데이트하거나 새로운 버전을 릴리스하는 방법을 말한다.</description>
    </item>
    <item>
      <title>Cloud Native Platforms</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/cloud-native-platforms/</link>
      <pubDate>Thu, 08 May 2025 04:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/cloud-native-platforms/</guid>
      <description>클라우드 네이티브 플랫폼은 컨테이너, 오케스트레이션, 마이크로서비스 등 최신 기술을 활용해 클라우드 환경에서 애플리케이션을 유연하고 확장성 있게 운영하는 구조이다.  자동화, 복원력, 보안이 주요 특징이며, DevOps 와 긴밀히 통합되어 빠른 배포와 운영을 지원한다.</description>
    </item>
    <item>
      <title>Platform Infrastructure</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/</link>
      <pubDate>Sun, 10 Nov 2024 01:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/</guid>
      <description>Infrastructure(인프라스트럭처)는 조직의 IT 환경을 지원하고 운영하는 데 필요한 기본적인 구성 요소들의 집합이다. 이는 하드웨어, 소프트웨어, 네트워크 리소스 및 서비스를 포함한다.</description>
    </item>
    <item>
      <title>Collaboration</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/collaboration/</link>
      <pubDate>Tue, 01 Oct 2024 09:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/collaboration/</guid>
      <description></description>
    </item>
    <item>
      <title>Repo Hosting Services</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/repo-hosting-services/</link>
      <pubDate>Sun, 29 Dec 2024 01:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/repo-hosting-services/</guid>
      <description>저장소 호스팅 서비스는 개발자와 팀이 소스 코드를 저장, 관리, 공유 및 협업할 수 있는 온라인 플랫폼으로, 코드 저장소의 중앙화된 관리를 제공한다.  GitHub, GitLab, Bitbucket과 같은 주요 서비스들은 단순한 코드 저장을 넘어 코드 검토, 이슈 추적, CI/CD, 보안 스캐닝 등 광범위한 기능을 제공한다. 저장소 호스팅 서비스는 현대적인 소프트웨어 개발 워크플로우의 핵심 요소로, 개발 주기 전반에 걸쳐 코드 품질 관리와 팀 협업을 촉진한다.</description>
    </item>
    <item>
      <title>Security and Governance</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/security-and-governance/</link>
      <pubDate>Fri, 02 May 2025 08:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/security-and-governance/</guid>
      <description>&lt;h2 id=&#34;security-and-governance&#34;&gt;Security and Governance&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;용어-정리&#34;&gt;용어 정리&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;용어&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;
&lt;h2 id=&#34;보안-및-거버넌스-분석-보고서&#34;&gt;보안 및 거버넌스 분석 보고서&lt;/h2&gt;
&lt;h3 id=&#34;1-주제-분류-적절성-검토&#34;&gt;1. 주제 분류 적절성 검토&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&amp;ldquo;Computer Science &amp;amp; Engineering &amp;gt; DevOps &amp;amp; Infrastructure &amp;gt; Version Control Systems&amp;rdquo;&lt;/strong&gt; 분류는 버전 관리 시스템의 보안 정책과 규정 준수 메커니즘을 다루므로 적합합니다. 2025 년 기준 AI 기반 위협 탐지와 블록체인 기반 감사 추적이 핵심 요소로 부상.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-요약-200-자-내외&#34;&gt;2. 요약 (200 자 내외)&lt;/h3&gt;
&lt;p&gt;보안 및 거버넌스는 &lt;strong&gt;코드 무결성 보장&lt;/strong&gt;과 &lt;strong&gt;규정 준수&lt;/strong&gt;를 목표로 합니다. 주요 구성 요소로 RBAC, 정책 자동화 엔진, 암호화 감사 로그가 포함되며, 2025 년에는 DevSecOps 와 컴플라이언스 코드 (Compliance as Code) 통합이 필수화되었습니다. AI 기반 이상 탐지 시스템이 실시간 취약점 분석을 수행 [5][12].&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevOps</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/devops/</link>
      <pubDate>Sat, 28 Sep 2024 06:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/devops/</guid>
      <description>소프트웨어 개발(Development)과 IT 운영(Operations)을 통합하는 문화, 철학, 방법론</description>
    </item>
    <item>
      <title>Observability</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/observability/</link>
      <pubDate>Thu, 26 Sep 2024 02:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/observability/</guid>
      <description>현대 소프트웨어 개발과 운영에서 필수적인 개념으로, 시스템의 외부 출력(메트릭, 로그, 트레이스 등)을 통해 내부 상태를 이해하고 모니터링하는 능력을 의미한다.</description>
    </item>
    <item>
      <title>Enterprise Usage</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/enterprise-usage/</link>
      <pubDate>Mon, 30 Sep 2024 06:21:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/enterprise-usage/</guid>
      <description></description>
    </item>
    <item>
      <title>Infrastructure as Code (IaC)</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure-as-code/</link>
      <pubDate>Thu, 26 Sep 2024 00:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure-as-code/</guid>
      <description>전통적인 수동 인프라 구성 방식에서 벗어나 프로그래밍 언어를 사용하여 IT 인프라를 자동화하고 관리하는 접근법</description>
    </item>
    <item>
      <title>Advanced Topics</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/advanced-topics/</link>
      <pubDate>Sat, 26 Oct 2024 06:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/version-control-systems/advanced-topics/</guid>
      <description></description>
    </item>
    <item>
      <title>Service Mesh</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/cloud-native-platforms/service-mesh/</link>
      <pubDate>Wed, 13 Nov 2024 09:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/cloud-native-platforms/service-mesh/</guid>
      <description>마이크로서비스 아키텍처에서 서비스 간 통신을 관리하고 제어하기 위한 인프라 계층</description>
    </item>
    <item>
      <title>Virtualization</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/virtualization/</link>
      <pubDate>Mon, 11 Nov 2024 13:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/virtualization/</guid>
      <description>컴퓨터 리소스의 추상화를 가능하게 하는 기술</description>
    </item>
    <item>
      <title>온프레미스(On-Premise)</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/on-premise/</link>
      <pubDate>Sun, 10 Nov 2024 10:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/on-premise/</guid>
      <description>On-Premise는 기업이 자체적으로 보유한 시설이나 건물에 IT 인프라를 구축하고 운영하는 방식을 의미한다.</description>
    </item>
    <item>
      <title>Cloud</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/cloud/</link>
      <pubDate>Sun, 10 Nov 2024 06:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/infrastructure/cloud/</guid>
      <description>클라우드 컴퓨팅은 컴퓨팅 리소스(서버, 스토리지, 데이터베이스, 네트워킹, 소프트웨어 등)를 인터넷을 통해 필요에 따라 제공하고 사용하는 기술</description>
    </item>
    <item>
      <title>Cloud Security</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/security-and-compliance/cloud-security/</link>
      <pubDate>Mon, 21 Oct 2024 11:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/security-and-compliance/cloud-security/</guid>
      <description>클라우드 환경에서의 데이터, 애플리케이션, 인프라 보호를 위한 보안 개념, 기술, 모범 사례</description>
    </item>
    <item>
      <title>Container Security</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/security-and-compliance/container-security/</link>
      <pubDate>Mon, 21 Oct 2024 11:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/security-and-compliance/container-security/</guid>
      <description>컨테이너화된 애플리케이션과 환경의 보안 이슈와 대응 방안</description>
    </item>
    <item>
      <title>DevSecOps</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/devsecops/</link>
      <pubDate>Mon, 21 Oct 2024 11:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/devsecops/</guid>
      <description>개발, 보안, 운영 프로세스를 통합하여 소프트웨어 개발 라이프사이클 전반에 보안을 구현하는 접근 방식</description>
    </item>
    <item>
      <title>Observability vs. Monitoring</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/observability/observability-vs-monitoring/</link>
      <pubDate>Sat, 28 Sep 2024 08:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/observability/observability-vs-monitoring/</guid>
      <description>Observability는 시스템의 내부 상태를 외부 출력을 통해 이해하고 추론할 수 있는 능력을 말하고, Monitoring은 시스템의 동작과 성능을 지속적으로 관찰하고 추적하는 활동을 말한다.</description>
    </item>
    <item>
      <title>Platform Engineering</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/platform-engineering/</link>
      <pubDate>Thu, 19 Sep 2024 16:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/devops-and-operational-excellence/platform-engineering/</guid>
      <description>플랫폼 엔지니어링(Platform Engineering)은 개발자 경험과 생산성, 비즈니스 가치를 높이기 위해 내부 개발자 플랫폼(IDP, Internal Developer Platform)과 셀프서비스 환경을 설계·구축·운영하는 소프트웨어 엔지니어링 분야입니다. 주요 구성 요소로는 재사용 가능한 컴포넌트, 개발자 도구(CI/CD, IDE 등), 자동화된 인프라 관리, 보안 및 규정 준수, 관측성(모니터링·로깅), 개발자 포털, 문서화, 측정 및 피드백 체계 등이 있습니다. 플랫폼 엔지니어링은 DevOps와 SRE의 원칙을 바탕으로, 표준화된 도구와 자동화된 워크플로우를 통해 개발팀이 빠르고 안전하게 소프트웨어를 개발·배포할 수 있도록 지원합니다</description>
    </item>
  </channel>
</rss>
