<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>API Testing on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/api-testing/</link>
    <description>Recent content in API Testing on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Mar 2025 02:53:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/api-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unit Testing</title>
      <link>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/unit-testing/</link>
      <pubDate>Mon, 10 Mar 2025 02:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/unit-testing/</guid>
      <description>단위 테스팅은 API 설계 과정에서 개별 컴포넌트나 함수를 독립적으로 테스트하여 각 부분이 올바르게 작동하는지 확인하는 과정이다.</description>
    </item>
    <item>
      <title>Contract Testing</title>
      <link>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/contract-testing/</link>
      <pubDate>Mon, 10 Mar 2025 02:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/contract-testing/</guid>
      <description>계약 테스트(Contract Testing)는 서비스 간 상호작용이 명시된 계약을 준수하는지 확인하는 테스트 방법론이다.</description>
    </item>
    <item>
      <title>Functional Testing</title>
      <link>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/functional-testing/</link>
      <pubDate>Mon, 10 Mar 2025 02:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/functional-testing/</guid>
      <description>API 기능 테스트는 API가 의도한 모든 기능을 올바르게 수행하는지 검증하는 과정이다.</description>
    </item>
    <item>
      <title>Integration Testing</title>
      <link>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/integration-testing/</link>
      <pubDate>Mon, 10 Mar 2025 02:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/integration-testing/</guid>
      <description>API 통합 테스트는 API 개발 및 설계에서 필수적인 단계로, 개별 컴포넌트들이 서로 올바르게 상호작용하는지 검증하는 프로세스이다.</description>
    </item>
    <item>
      <title>Load Testing</title>
      <link>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/load-testing/</link>
      <pubDate>Mon, 10 Mar 2025 02:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/load-testing/</guid>
      <description>API 부하 테스트는 API가 예상된 사용자 부하와 그 이상의 상황에서 어떻게 동작하는지 검증하는 중요한 성능 테스트 유형이다.</description>
    </item>
    <item>
      <title>Mocking APIs</title>
      <link>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/mocking-apis/</link>
      <pubDate>Wed, 05 Feb 2025 04:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-and-development/software-development/api-development-and-implementation/api-testing/mocking-apis/</guid>
      <description>목 API는 소프트웨어 개발 과정에서 실제 API를 대체하여 테스트, 개발, 디버깅을 용이하게 하는 가상의 API이다.</description>
    </item>
  </channel>
</rss>
