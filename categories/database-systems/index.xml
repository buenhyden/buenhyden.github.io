<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Database Systems on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/database-systems/</link>
    <description>Recent content in Database Systems on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 Aug 2025 14:42:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/database-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Transaction Lifecycle</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-operations/transaction-management/transaction/transaction-lifecycle/</link>
      <pubDate>Sun, 10 Aug 2025 14:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-operations/transaction-management/transaction/transaction-lifecycle/</guid>
      <description>트랜잭션 생명주기는 시작→실행→동시성 제어(2PL/MVCC/OCC)→로그(WAL)·체크포인트→커밋/롤백→회복(Analysis→REDO→UNDO)으로 구성된다. ARIES/WAL 기반 로그와 2PC·Saga 등 분산 패턴으로 일관성·내구성을 확보한다.</description>
    </item>
    <item>
      <title>프로시저 (Procedure)</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/database-technologies/relational-databases/advanced-sql/functions/procedure/</link>
      <pubDate>Thu, 24 Oct 2024 09:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/database-technologies/relational-databases/advanced-sql/functions/procedure/</guid>
      <description>데이터베이스 프로시저(Database Procedure)는 데이터베이스 내에 저장되고 실행되는 일련의 SQL 문들의 집합이다.</description>
    </item>
    <item>
      <title>SQL (Structured Query Language)</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/database-technologies/relational-databases/sql-fundamentals/syntax/</link>
      <pubDate>Thu, 24 Oct 2024 01:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/database-technologies/relational-databases/sql-fundamentals/syntax/</guid>
      <description>관계형 데이터베이스를 관리하고 조작하기 위한 표준화된 프로그래밍 언어.</description>
    </item>
    <item>
      <title>Cardinality</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-fundamentals/data-modeling/conceptual-modeling/cardinality/</link>
      <pubDate>Tue, 22 Oct 2024 15:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-fundamentals/data-modeling/conceptual-modeling/cardinality/</guid>
      <description>두 엔티티 간의 최대 연관성 혹은 특정 컬럼에 존재하는 고유한 값의 개수를 의미한다.</description>
    </item>
    <item>
      <title>Query Optimization</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-operations/query-processing/query-optimization/</link>
      <pubDate>Tue, 22 Oct 2024 06:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-operations/query-processing/query-optimization/</guid>
      <description>데이터베이스 시스템의 성능을 향상시키고 효율성을 높이기 위한 중요한 프로세스</description>
    </item>
  </channel>
</rss>
