<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>IO Models on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/io-models/</link>
    <description>Recent content in IO Models on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Oct 2024 12:36:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/io-models/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Blocking vs Non-Blocking</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/system-software/operating-systems/io-system-fundamentals/io-models/blocking-vs-non-blocking/</link>
      <pubDate>Sun, 06 Oct 2024 12:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/system-software/operating-systems/io-system-fundamentals/io-models/blocking-vs-non-blocking/</guid>
      <description>Blocking은 I/O 완료까지 호출을 대기시켜 구현이 단순하지만 동시성이 낮다. Non-Blocking은 즉시 반환해 이벤트나 폴링으로 처리하며 높은 동시성과 자원 효율을 제공한다. 준비 기반과 완료 기반 모델을 선택해 백프레셔와 오류를 포함한 상태 관리를 설계해야 한다.</description>
    </item>
  </channel>
</rss>
