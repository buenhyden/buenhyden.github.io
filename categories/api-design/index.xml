<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>API Design on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/api-design/</link>
    <description>Recent content in API Design on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.5</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Apr 2025 02:23:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/api-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Real-time APIs</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/networking-knowledge/real-time-apis/</link>
      <pubDate>Fri, 31 Jan 2025 15:02:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/networking-knowledge/real-time-apis/</guid>
      <description>실시간 API(Real-time API)는 클라이언트와 서버 간에 지속적인 연결을 유지하면서 데이터가 생성되거나 변경되는 즉시 자동으로 전송하는 API이다.</description>
    </item>
    <item>
      <title>API Gateways</title>
      <link>https://buenhyden.github.io/posts/backend-development/web-infrastructure/api-gateways/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/web-infrastructure/api-gateways/</guid>
      <description>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트</description>
    </item>
    <item>
      <title>HIPAA</title>
      <link>https://buenhyden.github.io/posts/security-engineering/governance-and-management/compliance-and-regulations/hipaa/</link>
      <pubDate>Tue, 01 Apr 2025 02:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/governance-and-management/compliance-and-regulations/hipaa/</guid>
      <description>HIPAA는 1996년 미국에서 제정된 법률로, 의료 정보의 보호와 의료보험의 이식성을 보장하기 위한 규정을 제공한다.</description>
    </item>
    <item>
      <title>SAML</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/protocols/saml/</link>
      <pubDate>Tue, 11 Mar 2025 13:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/protocols/saml/</guid>
      <description>SAML(Security Assertion Markup Language)은 기업과 조직에서 단일 로그인(SSO, Single Sign-On)과 신원 연합(Identity Federation)을 구현하기 위한 XML 기반 표준 프레임워크이다.</description>
    </item>
    <item>
      <title>Token Authentication</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/implementations/token-based-authentication/</link>
      <pubDate>Tue, 11 Mar 2025 13:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/implementations/token-based-authentication/</guid>
      <description>토큰 기반 인증은 사용자가 자신의 자격 증명(일반적으로 사용자 이름과 비밀번호)을 인증 서버에 제출하면, 서버가 이를 검증한 후 디지털 토큰을 발급하는 방식이다.</description>
    </item>
    <item>
      <title>OpenID</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/protocols/openid/</link>
      <pubDate>Tue, 11 Mar 2025 13:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/protocols/openid/</guid>
      <description>OpenID는 사용자가 여러 웹사이트와 애플리케이션에 단일 자격 증명으로 로그인할 수 있게 해주는 분산형 인증 표준이다.</description>
    </item>
    <item>
      <title>OAuth</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/protocols/oauth/</link>
      <pubDate>Tue, 11 Mar 2025 12:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/protocols/oauth/</guid>
      <description>OAuth는 현대 웹과 모바일 애플리케이션의 인증 및 권한 부여 방식을 근본적으로 변화시킨 오픈 표준 프로토콜이다.</description>
    </item>
    <item>
      <title>Session-based Auth</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/implementations/session-based-authentication/</link>
      <pubDate>Sun, 09 Mar 2025 15:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/implementations/session-based-authentication/</guid>
      <description>세션 기반 인증은 서버 측에서 사용자의 상태를 유지하는 인증 방식이다.</description>
    </item>
    <item>
      <title>Cookie-Based Auth</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/implementations/cookie-based-authentication/</link>
      <pubDate>Sun, 09 Mar 2025 15:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authentication/implementations/cookie-based-authentication/</guid>
      <description>HTTP 프로토콜의 무상태(stateless) 특성을 극복하고 사용자의 로그인 상태를 유지하기 위한 메커니즘으로, 오랜 시간 동안 웹의 핵심 인증 기술로 자리잡아 왔다.</description>
    </item>
    <item>
      <title>Types of Real-time APIs</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/networking-knowledge/real-time-apis/types-of-real-time-apis/</link>
      <pubDate>Sat, 15 Feb 2025 01:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/networking-knowledge/real-time-apis/types-of-real-time-apis/</guid>
      <description>Real-time API는 클라이언트와 서버 간의 데이터를 거의 즉각적으로 주고받을 수 있는 API로, 실시간 데이터 교환을 가능하게 한다.</description>
    </item>
    <item>
      <title>Personal Identifiable Information (PII)</title>
      <link>https://buenhyden.github.io/posts/security-engineering/fundamentals/pii/</link>
      <pubDate>Sun, 02 Feb 2025 03:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/fundamentals/pii/</guid>
      <description>개인 식별 정보(Personal Identifiable Information, PII)는 개인의 신원을 식별하거나 추적하는 데 사용될 수 있는 정보를 의미한다.</description>
    </item>
    <item>
      <title>Microservices Architecture</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/microservices/</link>
      <pubDate>Sat, 01 Feb 2025 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/distributed/microservices/</guid>
      <description>마이크로서비스 아키텍처는 단일 애플리케이션을 작고 독립적인 서비스 집합으로 개발하는 접근 방식이다.</description>
    </item>
    <item>
      <title>Event Driven Architecture</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/messaging/event-driven-architecture/</link>
      <pubDate>Sat, 01 Feb 2025 03:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-styles/messaging/event-driven-architecture/</guid>
      <description>이벤트 기반 아키텍처는 시스템 내에서 발생하는 상태 변화나 중요한 사건을 &amp;#39;이벤트&amp;#39;로 정의하고, 이러한 이벤트의 생성, 전송, 처리를 중심으로 시스템을 구성하는 방식이다.</description>
    </item>
    <item>
      <title>DAC</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/dac/</link>
      <pubDate>Wed, 06 Nov 2024 23:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/dac/</guid>
      <description>리소스의 소유자가 해당 리소스에 대한다른  사용자들의 접근 권한을 직접 제어할 수 있는 접근 제어 방식</description>
    </item>
    <item>
      <title>MAC</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/mac/</link>
      <pubDate>Wed, 06 Nov 2024 23:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/mac/</guid>
      <description>시스템 전체에 걸쳐 중앙에서 정의된 보안 정책에 따라 접근 권한을 강제로 적용하는 접근 제어 방식.</description>
    </item>
    <item>
      <title>PBAC</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/pbac/</link>
      <pubDate>Wed, 06 Nov 2024 23:49:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/pbac/</guid>
      <description>중앙에서 정의된 정책들을 기반으로 접근 권한을 결정하는 접근 제어 방식.  각 정책은 &amp;#34;누가&amp;#34;, &amp;#34;무엇을&amp;#34;, &amp;#34;어떤 조건에서&amp;#34; 할 수 있는지를 정의하며, 이러한 정책들은 프로그래밍 방식으로 표현되고 평가된다.</description>
    </item>
    <item>
      <title>ABAC</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/abac/</link>
      <pubDate>Wed, 06 Nov 2024 23:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/abac/</guid>
      <description>ABAC는 주체(사용자), 객체(리소스), 작업, 환경 조건의 속성을 조합하여 접근 제어 정책을 정의한다.</description>
    </item>
    <item>
      <title>RBAC</title>
      <link>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/rbac/</link>
      <pubDate>Wed, 06 Nov 2024 23:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/access-control/authorization/authorization-models/rbac/</guid>
      <description>RBAC는 &amp;#34;만약 ~라면 ~할 수 있다&amp;#34;와 같은 형태의 규칙들을 사용하여 접근 권한을 제어한다. 각 규칙은 조건부와 결과부로 구성되며, 시스템은 이러한 규칙들을 순차적으로 평가하여 접근 허용 여부를 결정한다.</description>
    </item>
    <item>
      <title>Payment Card Industry Data Security Standard (PCI DSS)</title>
      <link>https://buenhyden.github.io/posts/security-engineering/governance-and-management/compliance-and-regulations/pci-dss/</link>
      <pubDate>Sun, 27 Oct 2024 13:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/security-engineering/governance-and-management/compliance-and-regulations/pci-dss/</guid>
      <description>PCI DSS(Payment Card Industry Data Security Standard)는 신용카드 결제 과정에서 카드 소유자의 데이터를 안전하게 보호하기 위해 주요 글로벌 카드 브랜드(Visa, MasterCard, American Express, Discover, JCB)가 공동으로 제정한 국제 보안 표준이다.</description>
    </item>
  </channel>
</rss>
