<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Data Architecture on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/data-architecture/</link>
    <description>Recent content in Data Architecture on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Tue, 18 Feb 2025 05:08:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/data-architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Replication</title>
      <link>https://buenhyden.github.io/posts/data--database-systems/data-architecture/scalability--distribution/replication/</link>
      <pubDate>Tue, 18 Feb 2025 05:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data--database-systems/data-architecture/scalability--distribution/replication/</guid>
      <description>복제 (Replication) 는 데이터나 서비스의 사본을 여러 노드나 시스템에 분산 저장하는 기법으로, 시스템의 가용성, 내결함성, 확장성을 향상시킨다. 주로 마스터 - 슬레이브, 다중 마스터, 액티브 - 액티브와 같은 아키텍처로 구현되며, 동기식 또는 비동기식 복제 방식을 사용한다. CAP 이론에 따라 일관성과 가용성 사이의 균형을 고려해 설계된다.</description>
    </item>
  </channel>
</rss>
