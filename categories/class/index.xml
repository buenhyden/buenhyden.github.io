<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Class on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/class/</link>
    <description>Recent content in Class on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.143.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Nov 2024 23:41:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/class/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python-Special Methods</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/special-methods/</link>
      <pubDate>Mon, 25 Nov 2024 23:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/special-methods/</guid>
      <description>클래스에 특별한 기능을 부여하는 특수한 메소드</description>
    </item>
    <item>
      <title>Python - Iterators</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/iterators/</link>
      <pubDate>Mon, 25 Nov 2024 17:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/iterators/</guid>
      <description>데이터 컬렉션의 요소들을 순차적으로 접근할 수 있게 해주는 객체</description>
    </item>
    <item>
      <title>Python Super</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/super/</link>
      <pubDate>Mon, 25 Nov 2024 02:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/super/</guid>
      <description>super()는 상속 관계에서 부모 클래스의 메서드를 호출하는 데 사용되는 중요한 도구.</description>
    </item>
    <item>
      <title>Method Resolution Order (MRO)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/method-resolution-order/</link>
      <pubDate>Mon, 25 Nov 2024 01:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/concepts/class/method-resolution-order/</guid>
      <description>파이썬에서 클래스의 상속 관계에서 메서드를 찾는 순서를 정의하는 규칙</description>
    </item>
  </channel>
</rss>
