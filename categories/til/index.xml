<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>TIL on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/til/</link>
    <description>Recent content in TIL on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.141.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Dec 2024 06:57:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/til/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Json (JavaScript Object Notation)</title>
      <link>https://buenhyden.github.io/til/2024/10/json/</link>
      <pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/json/</guid>
      <description>Javascript 객체 문법으로 구조화된 데이터를 표현하기 위한 문자 기반의 표준 포맷.</description>
    </item>
    <item>
      <title>TOML (Tom&#39;s Obvious Minimal Language)</title>
      <link>https://buenhyden.github.io/til/2024/10/toml/</link>
      <pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/toml/</guid>
      <description>서로 다른 시스템이나 프로그램 간에 데이터를 주고받을 때 사용하는 표준화된 형식</description>
    </item>
    <item>
      <title>YAML (YAML Ain&#39;t Markup Language)</title>
      <link>https://buenhyden.github.io/til/2024/10/yaml/</link>
      <pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/yaml/</guid>
      <description>서로 다른 시스템이나 프로그램 간에 데이터를 주고받을 때 사용하는 표준화된 형식</description>
    </item>
    <item>
      <title>데이터 교환 형식</title>
      <link>https://buenhyden.github.io/til/2024/10/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%90%ED%99%98-%ED%98%95%EC%8B%9D/</link>
      <pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%90%ED%99%98-%ED%98%95%EC%8B%9D/</guid>
      <description>서로 다른 시스템이나 프로그램 간에 데이터를 주고받을 때 사용하는 표준화된 형식</description>
    </item>
    <item>
      <title>인코딩 (Encoding)과 디코딩 (Decoding)</title>
      <link>https://buenhyden.github.io/til/2024/10/encoding-and-decoding/</link>
      <pubDate>Thu, 10 Oct 2024 07:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/encoding-and-decoding/</guid>
      <description>인코딩(Encoding)은 데이터를 특정 형식으로 변환하는 과정이고, 디코딩(Decoding)은 인코딩의 반대 과정으로, 변환된 데이터를 원래의 형식으로 되돌리는 과정</description>
    </item>
    <item>
      <title>클라우드 서비스 보안인증(CSAP, Cloud Security Assurance Program)</title>
      <link>https://buenhyden.github.io/til/2024/09/cloud-security-assurance-program/</link>
      <pubDate>Sun, 22 Sep 2024 11:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/09/cloud-security-assurance-program/</guid>
      <description>클라우드 서비스 보안인증(CSAP, Cloud Security Assurance Program)은 한국인터넷진흥원(KISA)에서 주관하는 클라우드 서비스의 보안성을 평가하고 인증하는 제도.</description>
    </item>
    <item>
      <title>WCS(Warehouse Control System)</title>
      <link>https://buenhyden.github.io/til/2024/12/warehouse-control-system/</link>
      <pubDate>Tue, 24 Dec 2024 06:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/warehouse-control-system/</guid>
      <description>WCS(Warehouse Control System)는 물류 창고의 자동화 설비를 실시간으로 제어하고 관리하는 시스템</description>
    </item>
    <item>
      <title>물류 운송 관리 시스템 (Transportation Management System, TMS)</title>
      <link>https://buenhyden.github.io/til/2024/12/transportation-management-system/</link>
      <pubDate>Tue, 24 Dec 2024 06:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/transportation-management-system/</guid>
      <description>물류 운송 관리 시스템으로, 기업의 물류 운송 프로세스를 효율적으로 관리하고 최적화하기 위한 솔루션</description>
    </item>
    <item>
      <title>Enterprise Resource Planning</title>
      <link>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning/</link>
      <pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning/</guid>
      <description>ERP(Enterprise Resource Planning)는 기업의 모든 자원을 통합적으로 관리하고 운영하기 위한 시스템</description>
    </item>
    <item>
      <title>Warehouse Management System</title>
      <link>https://buenhyden.github.io/til/2024/12/warehouse-management-system/</link>
      <pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/warehouse-management-system/</guid>
      <description>WMS(Warehouse Management System)는 창고 관리 시스템으로, 창고 내의 물류 프로세스를 최적화하고 효율적으로 관리하기 위한 소프트웨어 애플리케이션을 말한다</description>
    </item>
    <item>
      <title>E-Commerce Service</title>
      <link>https://buenhyden.github.io/til/2024/12/e-commerce-service/</link>
      <pubDate>Fri, 20 Dec 2024 12:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/e-commerce-service/</guid>
      <description>물품 구매 서비스를 구현하기 위해 필요한 사항들을 정리한다.</description>
    </item>
    <item>
      <title>선사용 IT 솔루션</title>
      <link>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</link>
      <pubDate>Fri, 20 Dec 2024 01:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</guid>
      <description>해운업계의 디지털 전환 사례와 최신 기술 트렌드를 기반으로 정리</description>
    </item>
    <item>
      <title>Streaming vs Polling</title>
      <link>https://buenhyden.github.io/til/2024/12/streaming-vs-polling/</link>
      <pubDate>Tue, 17 Dec 2024 08:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/streaming-vs-polling/</guid>
      <description>Streaming과 polling은 실시간 데이터 전송을 위해 사용되는 두 가지 주요 기술</description>
    </item>
    <item>
      <title>라이브러리 (Library)와 프레임워크 (Framework)</title>
      <link>https://buenhyden.github.io/til/2024/12/library-and-framework/</link>
      <pubDate>Tue, 03 Dec 2024 06:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/12/library-and-framework/</guid>
      <description>라이브러리(Library)는 특정 기능을 수행하는 코드의 모음이고, 프레임워크(Framework)는 애플리케이션 개발의 기본 구조를 제공한다.</description>
    </item>
    <item>
      <title>마이그레이션 (Migration)</title>
      <link>https://buenhyden.github.io/til/2024/11/migration/</link>
      <pubDate>Tue, 26 Nov 2024 15:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/migration/</guid>
      <description>IT 분야에서 데이터, 시스템, 애플리케이션 등을 한 환경에서 다른 환경으로 이동하는 과정</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://buenhyden.github.io/til/2024/11/api-gateway/</link>
      <pubDate>Tue, 26 Nov 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/api-gateway/</guid>
      <description>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트</description>
    </item>
    <item>
      <title>ER(Entity-Relationship) 모델링</title>
      <link>https://buenhyden.github.io/til/2024/11/entity-relationship-modeling/</link>
      <pubDate>Mon, 25 Nov 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/entity-relationship-modeling/</guid>
      <description>실제 세계의 데이터를 개체(Entity), 관계(Relationship), 속성(Attribute)으로 표현하여 데이터베이스를 설계하는 방법</description>
    </item>
    <item>
      <title>동기(Synchronous)와 비동기(Asynchronous) 그리고 Blocking와 Non-Blocking</title>
      <link>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous-and-blocking-and-non-blocking/</link>
      <pubDate>Sun, 17 Nov 2024 12:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous-and-blocking-and-non-blocking/</guid>
      <description>동기(Synchronous)와 비동기(Asynchronous) 그리고 Blocking와 Non-Blocking</description>
    </item>
    <item>
      <title>Lock and Mutex</title>
      <link>https://buenhyden.github.io/til/2024/11/lock-and-mutex/</link>
      <pubDate>Sun, 17 Nov 2024 11:25:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/lock-and-mutex/</guid>
      <description>Lock과 Mutex는 둘 다 여러 스레드가 공유 자원에 동시에 접근하는 것을 방지하는 동기화 도구이다. 한 스레드가 자원을 사용할 때 다른 스레드의 접근을 막는 것이다.</description>
    </item>
    <item>
      <title>VueJS vs ReactJS vs NextJS</title>
      <link>https://buenhyden.github.io/til/2024/11/vuejs-vs-reactjs-vs-nextjs/</link>
      <pubDate>Sun, 17 Nov 2024 04:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/vuejs-vs-reactjs-vs-nextjs/</guid>
      <description>VueJS, ReactJS, NextJS는 현대 웹 개발에서 사용되는 주요 프론트엔드 프레임워크와 라이브러리들이다.</description>
    </item>
    <item>
      <title>ExpressJS vs NestJS</title>
      <link>https://buenhyden.github.io/til/2024/11/expressjs-vs-nestjs/</link>
      <pubDate>Sun, 17 Nov 2024 04:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/expressjs-vs-nestjs/</guid>
      <description>Express.js와 Nest.js는</description>
    </item>
    <item>
      <title>ASGI vs CGI vs WSGI</title>
      <link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/</link>
      <pubDate>Sat, 16 Nov 2024 03:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/</guid>
      <description>웹 서버와 애플리케이션 간의 통신 방식을 정의하는 인터페이스 규격</description>
    </item>
    <item>
      <title>Blocking vs Non-Blocking</title>
      <link>https://buenhyden.github.io/til/2024/11/blocking-vs-non-blocking/</link>
      <pubDate>Tue, 12 Nov 2024 12:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/blocking-vs-non-blocking/</guid>
      <description>프로그래밍에서 작업 처리 방식에 따라 프로그램의 실행 흐름이 어떻게 영향을 받는지를 설명하는 개념.</description>
    </item>
    <item>
      <title>동기(Synchronous)와 비동기(Asynchronous)</title>
      <link>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous/</link>
      <pubDate>Tue, 12 Nov 2024 00:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous/</guid>
      <description>프로그래밍에서 작업을 처리하는 두 가지 주요 방식</description>
    </item>
    <item>
      <title>Linear Data Structure vs Non-Linear Data Structure</title>
      <link>https://buenhyden.github.io/til/2024/11/linear-data-structure-vs-non-linear-data-structure/</link>
      <pubDate>Wed, 06 Nov 2024 11:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/linear-data-structure-vs-non-linear-data-structure/</guid>
      <description>Linear Data Structure Vs Non-Linear Data Structure</description>
    </item>
  </channel>
</rss>
