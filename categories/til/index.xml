<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – TIL</title><link>https://buenhyden.github.io/categories/til/</link><description>Recent content in TIL on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 16 Jan 2025 08:24:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/til/index.xml" rel="self" type="application/rss+xml"/><item><title>Json (JavaScript Object Notation)</title><link>https://buenhyden.github.io/til/2024/10/json/</link><pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/10/json/</guid><description>
&lt;h2>Json (JavaScript Object Notation)&lt;/h2>&lt;p>Javascript 객체 문법으로 구조화된 데이터를 표현하기 위한 문자 기반의 표준 포맷.&lt;br>
프로그래밍 언어와 플랫폼에 독립적이며, 데이터를 저장하고 전송하는 데 널리 사용된다.&lt;br>
사람이 읽고 쓰기 쉽고 기계가 파싱(해석)하고 생성하기 쉽게 고안되었다.&lt;br>
JavaScript에서 객체를 표현하는 방식에서 파생되었지만, 현재는 언어 독립적인 텍스트 형식으로 발전.&lt;/p>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>텍스트 기반: JSON은 단순한 텍스트 형식이므로 사람이 읽고 쓰기 쉽다.&lt;/li>
&lt;li>언어 독립적: JSON은 C, C++, C#, Java, JavaScript, Python 등 대부분의 프로그래밍 언어에서 사용할 수 있다.&lt;/li>
&lt;li>자기 서술적: JSON 데이터는 키-값 쌍으로 구성되어 있어 데이터의 의미를 쉽게 파악할 수 있다.&lt;/li>
&lt;li>구조화된 데이터: JSON은 객체와 배열을 표현할 수 있어 복잡한 데이터 구조를 표현하기에 적합하다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>가독성이 높고 이해하기 쉽다.&lt;/li>
&lt;li>데이터 용량이 작아 전송 속도가 빠르다.&lt;/li>
&lt;li>대부분의 프로그래밍 언어에서 지원된다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>데이터가 텍스트 형식이므로 바이너리 데이터에 비해 크기가 클 수 있다.&lt;/li>
&lt;li>주석을 지원하지 않아 문서화에 제한이 있다.&lt;/li>
&lt;li>데이터 타입이 제한적(예: 날짜 타입 없음).&lt;/li>
&lt;li>XML에 비해 스키마 검증 기능이 부족.&lt;/li>
&lt;li>큰따옴표만 사용해야 하는 등 문법이 엄격.&lt;/li>
&lt;/ol>
&lt;h3>기본 구조&lt;/h3>&lt;ul>
&lt;li>객체(Object): 이름/값 쌍의 집합으로, 중괄호({})로 표현&lt;/li>
&lt;li>배열(Array): 값의 순서화된 리스트로, 대괄호([])로 표현&lt;/li>
&lt;/ul>
&lt;h3>지원하는 데이터 타입&lt;/h3>&lt;ul>
&lt;li>숫자(Number): 정수 또는 실수&lt;/li>
&lt;li>문자열(String): 큰따옴표로 둘러싸인 텍스트&lt;/li>
&lt;li>불리언(Boolean): true 또는 false&lt;/li>
&lt;li>null: 빈 값&lt;/li>
&lt;li>객체(Object): 중첩된 이름/값 쌍의 집합&lt;/li>
&lt;li>배열(Array): 순서화된 값의 목록&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>직렬화 (Serialization)&lt;br>
데이터 구조나 객체를 저장 또는 전송할 수 있는 형식으로 변환하는 과정&lt;/p>
&lt;ul>
&lt;li>직렬화된 JSON은 텍스트 형식이며, 네트워크 전송, 파일 저장 등 다양한 용도로 사용.&lt;/li>
&lt;li>주로 &lt;strong>데이터 교환&lt;/strong>을 목적으로 데이터를 플랫폼 및 언어에 독립적인 형태로 변환.&lt;/li>
&lt;/ul>
&lt;p>역직렬화 (Deserialization)&lt;br>
JSON 문자열을 본래의 데이터 구조나 객체로 복원하는 과정&lt;/p>
&lt;ul>
&lt;li>역직렬화된 데이터는 일반적으로 프로그래밍 언어의 기본 데이터 구조(예: 객체, 배열, 리스트, 딕셔너리)로 표현.&lt;/li>
&lt;li>JSON 문자열을 프로세스나 시스템에서 직접 사용할 수 있도록 해석.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3>언어별 활용 예시&lt;/h3>&lt;h4>Python에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python 객체를 JSON 문자열로 변환(인코딩)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">python_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;hobbies&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;street&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;123 Main St&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;city&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Boston&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dict를 JSON 문자열로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">json_string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">python_dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;JSON 문자열:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json_string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># JSON 문자열을 Python 객체로 변환(디코딩)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">decoded_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">json_string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;파이썬 딕셔너리:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">decoded_dict&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># JSON 파일 쓰기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data.json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;w&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">python_dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># JSON 파일 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data.json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loaded_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JavaScript 객체
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">age&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hobbies&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">address&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">street&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;123 Main St&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">city&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Boston&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 객체를 JSON 문자열로 변환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">jsonString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">person&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;JSON 문자열:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">jsonString&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JSON 문자열을 객체로 변환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">parsedPerson&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonString&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;파싱된 객체:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">parsedPerson&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JSON을 활용한 API 호출 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">fetchUserData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://api.example.com/users&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;데이터 fetch 오류:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Java에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Jackson 라이브러리 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">com.fasterxml.jackson.databind.ObjectMapper&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Person 클래스 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hobbies&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// getter와 setter 메서드 생략&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">street&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// getter와 setter 메서드 생략&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// JSON 처리 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">JsonExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObjectMapper&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mapper&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ObjectMapper&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Java 객체를 JSON 문자열로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setHobbies&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">asList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Address&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setStreet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;123 Main St&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setCity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Boston&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAddress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 객체를 JSON 문자열로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jsonString&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mapper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">writeValueAsString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;JSON 문자열: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jsonString&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// JSON 문자열을 Java 객체로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mapper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jsonString&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;파싱된 객체: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>활용 사례&lt;/h3>&lt;ul>
&lt;li>RESTful API: 클라이언트와 서버 간의 데이터 교환&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Flask를 사용한 REST API 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_user&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_json&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># JSON 요청 데이터 파싱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 처리 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;User created&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">}),&lt;/span> &lt;span class="mi">201&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>설정 파일&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5432&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;secret&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;debug&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>데이터 저장 및 교환&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데이터 캐싱 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">redis_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6379&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">cache_user_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Python 딕셔너리를 JSON 문자열로 변환하여 Redis에 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;user:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_cached_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Redis에서 JSON 문자열을 가져와 Python 객체로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;user:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>TOML (Tom's Obvious Minimal Language)</title><link>https://buenhyden.github.io/til/2024/10/toml/</link><pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/10/toml/</guid><description>
&lt;h2>TOML (Tom&amp;rsquo;s Obvious Minimal Language)&lt;/h2>&lt;p>2013년 Tom Preston-Werner가 만든 설정 파일 형식&lt;/p>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>2013년에 처음 등장한 비교적 새로운 형식.&lt;/li>
&lt;li>사람이 읽고 쓰기 쉽도록 설계되었다.&lt;/li>
&lt;li>INI 파일과 유사한 구조를 가지고 있다.&lt;/li>
&lt;li>명확한 사양을 가지고 있어 다양한 언어에서 일관되게 구현될 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>구조&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 이것은 TOML 문서입니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;TOML 예제&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">owner&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Tom Preston-Werner&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">organization&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;GitHub&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">server&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;192.168.1.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ports&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="mi">8001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8002&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">connection_max&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">enabled&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">servers&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">servers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">alpha&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ip&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;10.0.0.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">role&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;frontend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">servers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">beta&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ip&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;10.0.0.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">role&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;backend&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>가독성이 매우 높다. 특히 중첩된 구조를 표현할 때 YAML보다 명확하다.&lt;/li>
&lt;li>모호성이 적어 파싱이 용이하다.&lt;/li>
&lt;li>날짜와 시간 처리가 기본적으로 지원된다.&lt;/li>
&lt;li>문자열 처리가 직관적이고 유연하다.&lt;/li>
&lt;li>주석 지원이 잘 되어있어 문서화하기 좋다.&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;/h3>&lt;ul>
&lt;li>JSON이나 YAML에 비해 생태계가 상대적으로 작다.&lt;/li>
&lt;li>동적 타입을 지원하지 않는다.&lt;/li>
&lt;li>복잡한 데이터 구조를 표현할 때는 문법이 다소 장황할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>지원하는 데이터 타입&lt;/h3>&lt;ol>
&lt;li>String: &amp;ldquo;Hello&amp;rdquo; 또는 &amp;lsquo;Hello&amp;rsquo;&lt;/li>
&lt;li>Integer: 42&lt;/li>
&lt;li>Float: 3.14&lt;/li>
&lt;li>Boolean: true/false&lt;/li>
&lt;li>Datetime: 1979-05-27T07:32:00Z&lt;/li>
&lt;li>Array: [1, 2, 3]&lt;/li>
&lt;li>Table: [table_name]&lt;/li>
&lt;li>Inline Table: { key = &amp;ldquo;value&amp;rdquo; }&lt;/li>
&lt;li>Array of Tables: [[table_name]]&lt;/li>
&lt;/ol>
&lt;h3>언어별 활용 예시&lt;/h3>&lt;h4>Python에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">tomli&lt;/span> &lt;span class="c1"># Python 3.11 이전&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python 3.11 이후에는 tomllib 사용 가능&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TOML 파일 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;config.toml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;rb&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tomli&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 설정값 접근&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">database_host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s2">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">server_ports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s2">&amp;#34;ports&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 설정값 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Database host: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">database_host&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Server ports: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">server_ports&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">as&lt;/span> &lt;span class="nx">TOML&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@iarna/toml&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">readFileSync&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// TOML 파일 읽기
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">tomlStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./config.toml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">TOML&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tomlStr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 설정값 접근
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">dbHost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">serverPorts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ports&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Database host: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">dbHost&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Server ports: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">serverPorts&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Java에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">com.moandjiezana.toml.Toml&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.File&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ConfigReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toml&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toml&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toml&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;config.toml&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dbHost&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;database.server&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ports&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;database.ports&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Database host: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dbHost&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Server ports: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ports&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>활용 사례&lt;/h3>&lt;ul>
&lt;li>Cargo (Rust 패키지 매니저): Cargo.toml 파일에서 프로젝트 의존성과 메타데이터 관리&lt;/li>
&lt;li>Poetry (Python 패키지 매니저): pyproject.toml 파일에서 프로젝트 설정 관리&lt;/li>
&lt;li>GitHub Actions: workflow 설정 파일로 사용&lt;/li>
&lt;li>VS Code 확장 프로그램: 확장 설정 관리&lt;/li>
&lt;li>Netlify: netlify.toml 파일로 배포 설정 관리&lt;/li>
&lt;/ul>
&lt;p>실제 프로젝트에서의 활용:&lt;/p>
&lt;ol>
&lt;li>애플리케이션 설정 파일&lt;/li>
&lt;li>빌드 설정 관리&lt;/li>
&lt;li>환경 설정(개발/스테이징/프로덕션)&lt;/li>
&lt;li>의존성 관리&lt;/li>
&lt;li>배포 설정&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>YAML (YAML Ain't Markup Language)</title><link>https://buenhyden.github.io/til/2024/10/yaml/</link><pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/10/yaml/</guid><description>
&lt;h2>YAML (YAML Ain&amp;rsquo;t Markup Language)&lt;/h2>&lt;p>데이터를 구조화하고 표현하기 위한 간단한 문법을 가진 데이터 직렬화 언어&lt;br>
XML이나 JSON과 유사한 목적으로 사용되지만, 더 간결하고 사람이 읽기 쉽게 설계&lt;/p>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>가독성: 들여쓰기를 사용하여 데이터의 계층 구조를 표현하며, 불필요한 괄호와 태그를 사용하지 않아 직관적이다.&lt;/li>
&lt;li>구조적 표현: 들여쓰기를 기반으로 데이터의 계층을 표현한다.&lt;/li>
&lt;li>다양한 자료형 지원: 문자열, 숫자, 리스트, 딕셔너리, 부울값 등 다양한 기본 자료형을 지원한다.&lt;/li>
&lt;li>언어 독립적: 다양한 프로그래밍 언어에서 지원된다.&lt;/li>
&lt;li>JSON 호환성: JSON과 호환이 가능하며, JSON 형식의 데이터를 YAML로 변환할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>
&lt;p>간결한 문법으로 가독성이 높다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>주석을 지원하여 문서화가 용이하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>복잡한 데이터 구조를 쉽게 표현할 수 있다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 날짜와 시간&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;p>date: 2024-01-01
datetime: 2024-01-01T13:00:00Z&lt;/p>
&lt;h1>진위값&lt;/h1>&lt;p>boolean: true
also_true: yes
also_false: no&lt;/p>
&lt;h1>숫자&lt;/h1>&lt;p>integer: 123
float: 3.14
scientific: 1.23e+4&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>
4. 앵커와 별칭을 통해 데이터 재사용이 가능하다:
```yaml
defaults: &amp;amp;defaults
timeout: 30
retries: 3
development:
&amp;lt;&amp;lt;: *defaults # defaults의 모든 값을 상속
host: localhost
production:
&amp;lt;&amp;lt;: *defaults
host: production.example.com&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>들여쓰기 오류로 인한 파싱 오류가 발생할 수 있다.&lt;/li>
&lt;li>JSON에 비해 표준이 엄격하지 않아 구현에 따라 파싱 결과가 다를 수 있다.&lt;/li>
&lt;li>JSON에 비해 파싱 속도가 느릴 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>기본 문법과 구조&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 기본적인 키-값 쌍&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">John Doe&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 리스트&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">hobbies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">reading&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">swimming&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hiking&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 중첩된 객체&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">street&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">123&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Main St&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">city&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Boston&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">country&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">USA&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 여러 줄 문자열&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 이것은 여러 줄에 걸친
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 설명문입니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 들여쓰기가 유지됩니다.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 접힌 문자열 (줄바꿈이 공백으로 변환)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">folded_text&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 이 텍스트는
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 한 줄로
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> 합쳐집니다.&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>언어별 활용 예시&lt;/h3>&lt;h4>Python에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">yaml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># YAML 파일 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">read_yaml_config&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;config.yaml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># YAML 문서를 Python 객체로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">yaml&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">safe_load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;데이터베이스 호스트: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;database&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;host&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;포트: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;database&amp;#39;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s1">&amp;#39;port&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="n">yaml&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">YAMLError&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;YAML 파싱 오류: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># YAML 파일 작성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">write_yaml_config&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;database&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;host&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;port&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5432&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;username&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;logging&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;level&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;INFO&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;app.log&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;config.yaml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;w&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">yaml&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default_flow_style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">allow_unicode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">yaml&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;js-yaml&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// YAML 파일 읽기
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">yaml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;config.yaml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// YAML 파일 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">app&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;MyApp&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;1.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">settings&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">theme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;dark&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">language&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ko&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">yamlStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">yaml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;output.yaml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">yamlStr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Java에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.yaml.snakeyaml.Yaml&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">YamlExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// YAML 문자열 파싱&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Yaml&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yaml&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Yaml&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yamlStr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name: John Doe
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> age: 30
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> address:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> street: 123 Main St
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> city: Boston
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// YAML을 Java 객체로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yaml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">yamlStr&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 데이터 접근&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// YAML 파일 생성&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Test App&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yaml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>활용 사례&lt;/h3>&lt;ul>
&lt;li>Docker compose 설정&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">web&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;80:80&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">./html:/usr/share/nginx/html&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Github Actions 워크플로우&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">CI&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">npm run build&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>
&lt;p>Kubernetes 설정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;p>apiVersion: v1
kind: Pod
metadata:
name: web-app
spec:
containers:
- name: nginx
image: nginx:latest
ports:
- containerPort: 80&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>
## Protobuf (Protocol Buffers)
2008년에 오픈소스로 공개되었으며, 구글 내부에서는 그보다 훨씬 이전부터 사용되어 왔다.
이는 XML이나 JSON보다 더 작고, 빠르며, 단순한 데이터 교환 형식을 목표로 설계되었다.
데이터를 효율적으로 직렬화하고 역직렬화하는 방법을 제공한다.
이는.proto 파일에 데이터 구조를 정의하고, 이를 기반으로 다양한 프로그래밍 언어에서 사용할 수 있는 코드를 자동으로 생성하는 방식으로 작동한다.
### 특징
1. 언어 및 플랫폼 독립적: 다양한 프로그래밍 언어와 플랫폼에서 사용 가능하다.
2. 효율적인 직렬화: 데이터를 compact한 바이너리 형태로 직렬화하여 저장 공간과 네트워크 대역폭을 절약한다.
3. 빠른 파싱: 바이너리 형식으로 인해 파싱 속도가 빠르다.
4. 확장성: 기존 코드를 깨트리지 않고 메시지 형식을 변경할 수 있다.
5. 자동 생성 코드:.proto 파일을 기반으로 다양한 언어의 코드를 자동으로 생성한다.
### 장점
1. 데이터 크기가 작아 저장 공간과 네트워크 대역폭을 절약한다.
2. 파싱 속도가 빠르다.
3. 다양한 프로그래밍 언어를 지원한다.
4. 확장성이 뛰어나 기존 코드를 유지하면서 데이터 구조를 변경할 수 있다
### 단점
1. 바이너리 형식이므로 사람이 직접 읽기 어렵다.
2. 대용량 데이터(수 MB 이상)를 처리할 때는 적합하지 않을 수 있다.
### 프로토콜 버퍼의 작동 방식
1. 먼저.proto 파일에 데이터 구조를 정의한다.
```protobuf
syntax = &amp;#34;proto3&amp;#34;;
message Person {
string name = 1;
int32 age = 2;
repeated string hobbies = 3;
enum PhoneType {
MOBILE = 0;
HOME = 1;
WORK = 2;
}
message PhoneNumber {
string number = 1;
PhoneType type = 2;
}
repeated PhoneNumber phones = 4;
}&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>언어별 활용 예시&lt;/h3>&lt;h4>Python에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">person_pb2&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Person&lt;/span> &lt;span class="c1"># 컴파일된 프로토콜 버퍼 클래스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_person&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hobbies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 전화번호 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phones&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;123-456-7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PhoneType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">MOBILE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 직렬화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">serialized&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SerializeToString&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">serialized&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 파싱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_person&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialized_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ParseFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialized_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;이름: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;나이: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;취미: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hobbies&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">phone&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phones&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;전화번호: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">number&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> (&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PhoneType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">protobuf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;protobufjs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// .proto 파일 로드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">protobuf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;person.proto&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">Person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lookupType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Person&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 메시지 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">age&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hobbies&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">phones&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">number&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;123-456-7890&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;MOBILE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 유효성 검사
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">throw&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 인코딩
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">finish&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 디코딩
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">decoded&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">main&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Java에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 생성된 클래스 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ProtobufExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 메시지 생성&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Builder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addHobbies&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addHobbies&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PhoneNumber&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Builder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PhoneNumber&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;123-456-7890&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PhoneType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MOBILE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPhones&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 직렬화&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">serialized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">toByteArray&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 역직렬화&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">parseFrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialized&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;이름: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;나이: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAge&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InvalidProtocolBufferException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>활용 사례&lt;/h3>&lt;ul>
&lt;li>대용량 데이터 처리가 필요한 경우&lt;/li>
&lt;li>실시간 데이터 스트리밍&lt;/li>
&lt;li>모바일 애플리케이션에서의 데이터 전송&lt;/li>
&lt;li>고성능이 요구되는 시스템 간 통신&lt;/li>
&lt;li>gRPC 통신&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">service&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">rpc&lt;/span> &lt;span class="n">GetUser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">rpc&lt;/span> &lt;span class="n">CreateUser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserResponse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">UserRequest&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">user_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">User&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">UserResponse&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="n">success&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="kd">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>마이크로서비스 간 통신&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">user_service_pb2&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">UserRequest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">user_service_pb2_grpc&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">UserServiceStub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">grpc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insecure_channel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;localhost:50051&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">channel&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stub&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UserServiceStub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">request&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UserRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stub&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>고성능 데이터 저장&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">save_to_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;person.pb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SerializeToString&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">load_from_file&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;person.pb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;rb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ParseFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">person&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>TOML (Tom&amp;rsquo;s Obvious Minimal Language)&lt;/h2>&lt;p>2013년 Tom Preston-Werner가 만든 설정 파일 형식&lt;/p>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>2013년에 처음 등장한 비교적 새로운 형식.&lt;/li>
&lt;li>사람이 읽고 쓰기 쉽도록 설계되었다.&lt;/li>
&lt;li>INI 파일과 유사한 구조를 가지고 있다.&lt;/li>
&lt;li>명확한 사양을 가지고 있어 다양한 언어에서 일관되게 구현될 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>구조&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 이것은 TOML 문서입니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">title&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;TOML 예제&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">owner&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;Tom Preston-Werner&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">organization&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;GitHub&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">server&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;192.168.1.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">ports&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="mi">8001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8002&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">connection_max&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">5000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">enabled&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">servers&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">servers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">alpha&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ip&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;10.0.0.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">role&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;frontend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">servers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">beta&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ip&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;10.0.0.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">role&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;backend&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>가독성이 매우 높다. 특히 중첩된 구조를 표현할 때 YAML보다 명확하다.&lt;/li>
&lt;li>모호성이 적어 파싱이 용이하다.&lt;/li>
&lt;li>날짜와 시간 처리가 기본적으로 지원된다.&lt;/li>
&lt;li>문자열 처리가 직관적이고 유연하다.&lt;/li>
&lt;li>주석 지원이 잘 되어있어 문서화하기 좋다.&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;/h3>&lt;ul>
&lt;li>JSON이나 YAML에 비해 생태계가 상대적으로 작다.&lt;/li>
&lt;li>동적 타입을 지원하지 않는다.&lt;/li>
&lt;li>복잡한 데이터 구조를 표현할 때는 문법이 다소 장황할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>지원하는 데이터 타입&lt;/h3>&lt;ol>
&lt;li>String: &amp;ldquo;Hello&amp;rdquo; 또는 &amp;lsquo;Hello&amp;rsquo;&lt;/li>
&lt;li>Integer: 42&lt;/li>
&lt;li>Float: 3.14&lt;/li>
&lt;li>Boolean: true/false&lt;/li>
&lt;li>Datetime: 1979-05-27T07:32:00Z&lt;/li>
&lt;li>Array: [1, 2, 3]&lt;/li>
&lt;li>Table: [table_name]&lt;/li>
&lt;li>Inline Table: { key = &amp;ldquo;value&amp;rdquo; }&lt;/li>
&lt;li>Array of Tables: [[table_name]]&lt;/li>
&lt;/ol>
&lt;h3>언어별 활용 예시&lt;/h3>&lt;h4>Python에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">tomli&lt;/span> &lt;span class="c1"># Python 3.11 이전&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python 3.11 이후에는 tomllib 사용 가능&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TOML 파일 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;config.toml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;rb&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tomli&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 설정값 접근&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">database_host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s2">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">server_ports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="s2">&amp;#34;ports&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 설정값 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Database host: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">database_host&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Server ports: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">server_ports&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Javascript에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">as&lt;/span> &lt;span class="nx">TOML&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;@iarna/toml&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">readFileSync&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// TOML 파일 읽기
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">tomlStr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;./config.toml&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">config&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">TOML&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tomlStr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 설정값 접근
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">dbHost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">serverPorts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">config&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">database&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ports&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Database host: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">dbHost&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Server ports: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">serverPorts&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Java에서 처리&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">com.moandjiezana.toml.Toml&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.File&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ConfigReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Toml&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toml&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toml&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;config.toml&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dbHost&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;database.server&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ports&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">toml&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;database.ports&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Database host: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dbHost&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Server ports: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ports&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>활용 사례&lt;/h3>&lt;ul>
&lt;li>Cargo (Rust 패키지 매니저): Cargo.toml 파일에서 프로젝트 의존성과 메타데이터 관리&lt;/li>
&lt;li>Poetry (Python 패키지 매니저): pyproject.toml 파일에서 프로젝트 설정 관리&lt;/li>
&lt;li>GitHub Actions: workflow 설정 파일로 사용&lt;/li>
&lt;li>VS Code 확장 프로그램: 확장 설정 관리&lt;/li>
&lt;li>Netlify: netlify.toml 파일로 배포 설정 관리&lt;/li>
&lt;/ul>
&lt;p>실제 프로젝트에서의 활용:&lt;/p>
&lt;ol>
&lt;li>애플리케이션 설정 파일&lt;/li>
&lt;li>빌드 설정 관리&lt;/li>
&lt;li>환경 설정(개발/스테이징/프로덕션)&lt;/li>
&lt;li>의존성 관리&lt;/li>
&lt;li>배포 설정&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>데이터 교환 형식</title><link>https://buenhyden.github.io/til/2024/10/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%90%ED%99%98-%ED%98%95%EC%8B%9D/</link><pubDate>Thu, 10 Oct 2024 11:42:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/10/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%90%ED%99%98-%ED%98%95%EC%8B%9D/</guid><description>
&lt;h2>데이터 교환 형식&lt;/h2>&lt;p>서로 다른 시스템이나 프로그램 간에 데이터를 주고받을 때 사용하는 표준화된 형식&lt;/p>
&lt;h3>중요성&lt;/h3>&lt;ol>
&lt;li>상호운용성: 서로 다른 시스템 간의 원활한 통신을 가능하게 한다.&lt;/li>
&lt;li>효율성: 데이터를 구조화하고 압축하여 전송 효율을 높인다.&lt;/li>
&lt;li>확장성: 새로운 데이터 필드나 구조를 쉽게 추가할 수 있다.&lt;/li>
&lt;li>표준화: 공통된 형식을 사용함으로써 개발 및 통합 과정을 단순화한다.&lt;/li>
&lt;/ol>
&lt;h3>발전 방향&lt;/h3>&lt;ul>
&lt;li>바이너리 형식의 증가: 더 빠른 처리와 작은 데이터 크기 요구&lt;/li>
&lt;li>스키마 지원 강화: 데이터 유효성 검증의 중요성 증가&lt;/li>
&lt;li>하이브리드 접근: 여러 형식의 장점을 결합한 새로운 형식 등장&lt;/li>
&lt;li>실시간 처리 지원: 스트리밍 데이터 처리를 위한 최적화&lt;/li>
&lt;/ul>
&lt;h3>종류&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>JSON&lt;/th>
&lt;th>XML&lt;/th>
&lt;th>Protocol Buffers&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>가독성&lt;/td>
&lt;td>높음 (중첩된 구조에서는 다소 복잡)&lt;/td>
&lt;td>보통 (태그로 인해 장황)&lt;/td>
&lt;td>낮음 (바이너리 형식)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>파일 크기&lt;/td>
&lt;td>보통&lt;/td>
&lt;td>큼 (태그로 인한 오버헤드)&lt;/td>
&lt;td>매우 작음 (바이너리 인코딩)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>파싱 속도&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>매우 빠름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 검증&lt;/td>
&lt;td>제한적 (스키마 없음)&lt;/td>
&lt;td>가능 (XSD/DTD)&lt;/td>
&lt;td>강력함 (스키마 필수)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>언어 지원&lt;/td>
&lt;td>거의 모든 언어&lt;/td>
&lt;td>거의 모든 언어&lt;/td>
&lt;td>주요 언어 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>학습 곡선&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>보통&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>웹 API, 설정 파일&lt;/td>
&lt;td>문서 교환, SOAP API&lt;/td>
&lt;td>마이크로서비스 통신, 대용량 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 타입&lt;/td>
&lt;td>기본 타입만 지원&lt;/td>
&lt;td>확장 가능한 타입&lt;/td>
&lt;td>상세한 타입 시스템&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>스키마 정의&lt;/td>
&lt;td>선택적 (JSON Schema)&lt;/td>
&lt;td>가능 (XSD)&lt;/td>
&lt;td>필수 (proto 파일)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>버전 관리&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>우수 (하위 호환성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인코딩&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주석 지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>proto 파일에서만 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>에러 처리&lt;/td>
&lt;td>파싱 에러만 감지&lt;/td>
&lt;td>문법과 스키마 검증&lt;/td>
&lt;td>컴파일 시점 타입 체크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>기본적인 보안&lt;/td>
&lt;td>XML 보안 취약점 주의&lt;/td>
&lt;td>높은 보안성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Json (JavaScript Object Notation)&lt;/h4>&lt;p>Javascript 객체 문법으로 구조화된 데이터를 표현하기 위한 문자 기반의 표준 포맷.&lt;br>
프로그래밍 언어와 플랫폼에 독립적이며, 데이터를 저장하고 전송하는 데 널리 사용된다.&lt;br>
사람이 읽고 쓰기 쉽고 기계가 파싱(해석)하고 생성하기 쉽게 고안되었다.&lt;br>
JavaScript에서 객체를 표현하는 방식에서 파생되었지만, 현재는 언어 독립적인 텍스트 형식으로 발전.&lt;/p>
&lt;h5>특징&lt;/h5>&lt;ol>
&lt;li>텍스트 기반: JSON은 단순한 텍스트 형식이므로 사람이 읽고 쓰기 쉽다.&lt;/li>
&lt;li>언어 독립적: JSON은 C, C++, C#, Java, JavaScript, Python 등 대부분의 프로그래밍 언어에서 사용할 수 있다.&lt;/li>
&lt;li>자기 서술적: JSON 데이터는 키-값 쌍으로 구성되어 있어 데이터의 의미를 쉽게 파악할 수 있다.&lt;/li>
&lt;li>구조화된 데이터: JSON은 객체와 배열을 표현할 수 있어 복잡한 데이터 구조를 표현하기에 적합하다.&lt;/li>
&lt;/ol>
&lt;h5>장점&lt;/h5>&lt;ol>
&lt;li>가독성이 높고 이해하기 쉽다.&lt;/li>
&lt;li>데이터 용량이 작아 전송 속도가 빠르다.&lt;/li>
&lt;li>대부분의 프로그래밍 언어에서 지원된다.&lt;/li>
&lt;/ol>
&lt;h5>단점&lt;/h5>&lt;ol>
&lt;li>데이터가 텍스트 형식이므로 바이너리 데이터에 비해 크기가 클 수 있다.&lt;/li>
&lt;li>주석을 지원하지 않아 문서화에 제한이 있다.&lt;/li>
&lt;li>데이터 타입이 제한적(예: 날짜 타입 없음).&lt;/li>
&lt;li>XML에 비해 스키마 검증 기능이 부족.&lt;/li>
&lt;li>큰따옴표만 사용해야 하는 등 문법이 엄격.&lt;/li>
&lt;/ol>
&lt;h5>기본 구조&lt;/h5>&lt;ul>
&lt;li>객체(Object): 이름/값 쌍의 집합으로, 중괄호({})로 표현&lt;/li>
&lt;li>배열(Array): 값의 순서화된 리스트로, 대괄호([])로 표현&lt;/li>
&lt;/ul>
&lt;h5>지원하는 데이터 타입&lt;/h5>&lt;ul>
&lt;li>숫자(Number): 정수 또는 실수&lt;/li>
&lt;li>문자열(String): 큰따옴표로 둘러싸인 텍스트&lt;/li>
&lt;li>불리언(Boolean): true 또는 false&lt;/li>
&lt;li>null: 빈 값&lt;/li>
&lt;li>객체(Object): 중첩된 이름/값 쌍의 집합&lt;/li>
&lt;li>배열(Array): 순서화된 값의 목록&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>직렬화 (Serialization)&lt;br>
데이터 구조나 객체를 저장 또는 전송할 수 있는 형식으로 변환하는 과정&lt;/p>
&lt;ul>
&lt;li>직렬화된 JSON은 텍스트 형식이며, 네트워크 전송, 파일 저장 등 다양한 용도로 사용.&lt;/li>
&lt;li>주로 &lt;strong>데이터 교환&lt;/strong>을 목적으로 데이터를 플랫폼 및 언어에 독립적인 형태로 변환.&lt;/li>
&lt;/ul>
&lt;p>역직렬화 (Deserialization)&lt;br>
JSON 문자열을 본래의 데이터 구조나 객체로 복원하는 과정&lt;/p>
&lt;ul>
&lt;li>역직렬화된 데이터는 일반적으로 프로그래밍 언어의 기본 데이터 구조(예: 객체, 배열, 리스트, 딕셔너리)로 표현.&lt;/li>
&lt;li>JSON 문자열을 프로세스나 시스템에서 직접 사용할 수 있도록 해석.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h5>언어별 활용 예시&lt;/h5>&lt;h6>Python에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Python 객체를 JSON 문자열로 변환(인코딩)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">python_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;age&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;hobbies&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;street&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;123 Main St&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;city&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Boston&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dict를 JSON 문자열로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">json_string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">python_dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;JSON 문자열:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json_string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># JSON 문자열을 Python 객체로 변환(디코딩)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">decoded_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">json_string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;파이썬 딕셔너리:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">decoded_dict&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># JSON 파일 쓰기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data.json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;w&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">python_dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># JSON 파일 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data.json&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;r&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loaded_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Javascript에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JavaScript 객체
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">age&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hobbies&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">address&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">street&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;123 Main St&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">city&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Boston&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 객체를 JSON 문자열로 변환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">jsonString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">person&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;JSON 문자열:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">jsonString&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JSON 문자열을 객체로 변환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">parsedPerson&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">jsonString&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;파싱된 객체:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">parsedPerson&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// JSON을 활용한 API 호출 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">fetchUserData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;https://api.example.com/users&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;데이터 fetch 오류:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Java에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Jackson 라이브러리 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">com.fasterxml.jackson.databind.ObjectMapper&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// Person 클래스 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hobbies&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// getter와 setter 메서드 생략&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">street&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">city&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// getter와 setter 메서드 생략&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// JSON 처리 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">JsonExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ObjectMapper&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mapper&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ObjectMapper&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Java 객체를 JSON 문자열로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setHobbies&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">asList&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Address&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setStreet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;123 Main St&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setCity&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Boston&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAddress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">address&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 객체를 JSON 문자열로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jsonString&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mapper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">writeValueAsString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;JSON 문자열: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jsonString&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// JSON 문자열을 Java 객체로 변환&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mapper&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jsonString&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;파싱된 객체: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>활용 사례&lt;/h5>&lt;ul>
&lt;li>RESTful API: 클라이언트와 서버 간의 데이터 교환&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Flask를 사용한 REST API 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_user&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_json&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># JSON 요청 데이터 파싱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 처리 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;User created&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">}),&lt;/span> &lt;span class="mi">201&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>설정 파일&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;database&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;localhost&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5432&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;secret&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8080&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;debug&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>데이터 저장 및 교환&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데이터 캐싱 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">redis_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6379&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">cache_user_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">user_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Python 딕셔너리를 JSON 문자열로 변환하여 Redis에 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;user:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_cached_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Redis에서 JSON 문자열을 가져와 Python 객체로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;user:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>XML (eXtensible Markup Language)&lt;/h4>&lt;p>데이터를 저장하고 전송하기 위한 마크업 언어&lt;br>
웹에서 구조화된 문서를 표현하고 전송하도록 설계되었다.&lt;br>
HTML처럼 태그를 사용하지만, 사용자가 직접 태그를 정의할 수 있다는 특징이 있다.&lt;/p>
&lt;h5>특징&lt;/h5>&lt;ol>
&lt;li>확장성: 사용자가 직접 태그를 정의할 수 있어 다양한 데이터 구조를 표현할 수 있다.&lt;/li>
&lt;li>구조화: 트리 구조를 사용하여 데이터를 계층적으로 표현한다.&lt;/li>
&lt;li>자기 서술적: 데이터와 메타데이터가 함께 저장되어 데이터의 의미를 쉽게 파악할 수 있다.&lt;/li>
&lt;li>플랫폼 독립적: 텍스트 기반이므로 다양한 시스템에서 호환된다.&lt;/li>
&lt;li>유니코드 지원: 다국어 처리가 가능하다.&lt;/li>
&lt;/ol>
&lt;h5>구조&lt;/h5>&lt;ul>
&lt;li>XML 선언: 문서의 시작에 버전과 인코딩 정보를 명시한다.&lt;/li>
&lt;li>요소(Elements): 시작 태그와 종료 태그로 구성된다.&lt;/li>
&lt;li>속성(Attributes): 요소에 대한 추가 정보를 제공한다.&lt;/li>
&lt;li>계층 구조: 트리 형태의 문서 구조를 표현한다.&lt;/li>
&lt;/ul>
&lt;h5>장점&lt;/h5>&lt;ol>
&lt;li>데이터의 구조화가 용이하다.&lt;/li>
&lt;li>다양한 애플리케이션에서 사용 가능하다.&lt;/li>
&lt;li>데이터의 검증과 오류 체크가 쉽다.&lt;/li>
&lt;/ol>
&lt;h5>단점&lt;/h5>&lt;ol>
&lt;li>텍스트 기반이므로 파일 크기가 상대적으로 크다.&lt;/li>
&lt;li>파싱 과정이 필요하여 처리 속도가 느릴 수 있다.&lt;/li>
&lt;li>복잡한 구조의 경우 가독성이 떨어질 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>XML 문서의 예시&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;bookstore&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;book&lt;/span> &lt;span class="na">category=&lt;/span>&lt;span class="s">&amp;#34;fiction&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;title&amp;gt;&lt;/span>Harry Potter&lt;span class="nt">&amp;lt;/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;author&amp;gt;&lt;/span>J.K. Rowling&lt;span class="nt">&amp;lt;/author&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;year&amp;gt;&lt;/span>1997&lt;span class="nt">&amp;lt;/year&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;price&lt;/span> &lt;span class="na">currency=&lt;/span>&lt;span class="s">&amp;#34;USD&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>29.99&lt;span class="nt">&amp;lt;/price&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;book&lt;/span> &lt;span class="na">category=&lt;/span>&lt;span class="s">&amp;#34;science&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;title&amp;gt;&lt;/span>A Brief History of Time&lt;span class="nt">&amp;lt;/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;author&amp;gt;&lt;/span>Stephen Hawking&lt;span class="nt">&amp;lt;/author&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;year&amp;gt;&lt;/span>1988&lt;span class="nt">&amp;lt;/year&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;price&lt;/span> &lt;span class="na">currency=&lt;/span>&lt;span class="s">&amp;#34;USD&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>19.99&lt;span class="nt">&amp;lt;/price&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/book&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/bookstore&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>언어별 활용 예시&lt;/h5>&lt;h6>Python에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">xml.etree.ElementTree&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">ET&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># XML 생성 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_xml&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 루트 요소 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ET&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Element&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;bookstore&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 책 정보 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">book&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ET&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SubElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;book&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">book&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;category&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;fiction&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ET&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SubElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Harry Potter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ET&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SubElement&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">author&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;J.K. Rowling&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># XML 파일로 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ET&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ElementTree&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tree&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;books.xml&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">xml_declaration&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># XML 파싱 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_xml&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ET&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;books.xml&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tree&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getroot&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모든 책 정보 출력&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">book&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">root&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;book&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">book&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">book&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;제목: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, 저자: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Javascript에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// XML 문자열 파싱
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">parser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">DOMParser&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">xmlString&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;bookstore&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;book category=&amp;#34;fiction&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;title&amp;gt;Harry Potter&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;author&amp;gt;J.K. Rowling&amp;lt;/author&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;/book&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> &amp;lt;/bookstore&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">xmlDoc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">parser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parseFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">xmlString&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;text/xml&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// XML 데이터 접근
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">books&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">xmlDoc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementsByTagName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;book&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">book&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">books&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">book&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementsByTagName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">textContent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">author&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">book&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementsByTagName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;author&amp;#34;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">textContent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`제목: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">, 저자: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">author&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// AJAX를 사용한 XML 데이터 요청
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">fetchXMLData&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;books.xml&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">xmlText&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">xmlDoc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">parser&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parseFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">xmlText&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;text/xml&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// XML 처리 로직
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;XML 데이터 fetch 오류:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Java에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">javax.xml.bind.annotation.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 클래스 정의&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@XmlRootElement&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Book&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">year&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// getter와 setter 메서드&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@XmlElement&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getTitle&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">setTitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">title&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@XmlElement&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAuthor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">setAuthor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">author&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">author&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// XML 처리&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">XMLExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JAXBContext&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JAXBContext&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newInstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 마샬링 (객체 → XML)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Marshaller&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">marshaller&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createMarshaller&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setTitle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Harry Potter&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAuthor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;J.K. Rowling&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">marshaller&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">marshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">book&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;book.xml&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 언마샬링 (XML → 객체)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Unmarshaller&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unmarshaller&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createUnmarshaller&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">loadedBook&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Book&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unmarshaller&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unmarshal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;book.xml&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JAXBException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>활용 사례&lt;/h5>&lt;ul>
&lt;li>설정파일&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;database&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;host&amp;gt;&lt;/span>localhost&lt;span class="nt">&amp;lt;/host&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;port&amp;gt;&lt;/span>5432&lt;span class="nt">&amp;lt;/port&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;username&amp;gt;&lt;/span>admin&lt;span class="nt">&amp;lt;/username&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;password&amp;gt;&lt;/span>secret&lt;span class="nt">&amp;lt;/password&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/database&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;logging&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;level&amp;gt;&lt;/span>INFO&lt;span class="nt">&amp;lt;/level&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;file&amp;gt;&lt;/span>app.log&lt;span class="nt">&amp;lt;/file&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/logging&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>웹 서비스 (SOAP)&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;soap:Envelope&lt;/span> &lt;span class="na">xmlns:soap=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2003/05/soap-envelope&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;soap:Header&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;security&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;token&amp;gt;&lt;/span>abc123&lt;span class="nt">&amp;lt;/token&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/security&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/soap:Header&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;soap:Body&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;getBookPrice&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;isbn&amp;gt;&lt;/span>978-0-123456-78-9&lt;span class="nt">&amp;lt;/isbn&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/getBookPrice&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/soap:Body&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/soap:Envelope&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>안드로이드 레이아웃 파일&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;LinearLayout&lt;/span> &lt;span class="na">xmlns:android=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:layout_width=&lt;/span>&lt;span class="s">&amp;#34;match_parent&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:layout_height=&lt;/span>&lt;span class="s">&amp;#34;match_parent&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:orientation=&lt;/span>&lt;span class="s">&amp;#34;vertical&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;TextView&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:id=&lt;/span>&lt;span class="s">&amp;#34;@+id/textView&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:layout_width=&lt;/span>&lt;span class="s">&amp;#34;wrap_content&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:layout_height=&lt;/span>&lt;span class="s">&amp;#34;wrap_content&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:text=&lt;/span>&lt;span class="s">&amp;#34;Hello World!&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Button&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:id=&lt;/span>&lt;span class="s">&amp;#34;@+id/button&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:layout_width=&lt;/span>&lt;span class="s">&amp;#34;wrap_content&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:layout_height=&lt;/span>&lt;span class="s">&amp;#34;wrap_content&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">android:text=&lt;/span>&lt;span class="s">&amp;#34;Click Me&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/LinearLayout&amp;gt;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Protobuf (Protocol Buffers)&lt;/h4>&lt;p>2008년에 오픈소스로 공개되었으며, 구글 내부에서는 그보다 훨씬 이전부터 사용되어 왔다.&lt;br>
이는 XML이나 JSON보다 더 작고, 빠르며, 단순한 데이터 교환 형식을 목표로 설계되었다.&lt;br>
데이터를 효율적으로 직렬화하고 역직렬화하는 방법을 제공한다.&lt;br>
이는.proto 파일에 데이터 구조를 정의하고, 이를 기반으로 다양한 프로그래밍 언어에서 사용할 수 있는 코드를 자동으로 생성하는 방식으로 작동한다.&lt;/p>
&lt;h5>특징&lt;/h5>&lt;ol>
&lt;li>언어 및 플랫폼 독립적: 다양한 프로그래밍 언어와 플랫폼에서 사용 가능하다.&lt;/li>
&lt;li>효율적인 직렬화: 데이터를 compact한 바이너리 형태로 직렬화하여 저장 공간과 네트워크 대역폭을 절약한다.&lt;/li>
&lt;li>빠른 파싱: 바이너리 형식으로 인해 파싱 속도가 빠르다.&lt;/li>
&lt;li>확장성: 기존 코드를 깨트리지 않고 메시지 형식을 변경할 수 있다.&lt;/li>
&lt;li>자동 생성 코드:.proto 파일을 기반으로 다양한 언어의 코드를 자동으로 생성한다.&lt;/li>
&lt;/ol>
&lt;h5>장점&lt;/h5>&lt;ol>
&lt;li>데이터 크기가 작아 저장 공간과 네트워크 대역폭을 절약한다.&lt;/li>
&lt;li>파싱 속도가 빠르다.&lt;/li>
&lt;li>다양한 프로그래밍 언어를 지원한다.&lt;/li>
&lt;li>확장성이 뛰어나 기존 코드를 유지하면서 데이터 구조를 변경할 수 있다&lt;/li>
&lt;/ol>
&lt;h5>단점&lt;/h5>&lt;ol>
&lt;li>바이너리 형식이므로 사람이 직접 읽기 어렵다.&lt;/li>
&lt;li>대용량 데이터(수 MB 이상)를 처리할 때는 적합하지 않을 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>프로토콜 버퍼의 작동 방식&lt;/h5>&lt;ol>
&lt;li>먼저.proto 파일에 데이터 구조를 정의한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">Person&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">int32&lt;/span> &lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">repeated&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">hobbies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kd">enum&lt;/span> &lt;span class="n">PhoneType&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="n">MOBILE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="n">HOME&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="n">WORK&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kd">message&lt;/span> &lt;span class="nc">PhoneNumber&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="n">PhoneType&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">repeated&lt;/span> &lt;span class="n">PhoneNumber&lt;/span> &lt;span class="n">phones&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>언어별 활용 예시&lt;/h5>&lt;h6>Python에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">person_pb2&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Person&lt;/span> &lt;span class="c1"># 컴파일된 프로토콜 버퍼 클래스&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_person&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">age&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hobbies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 전화번호 추가&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phones&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">number&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;123-456-7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PhoneType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">MOBILE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 직렬화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">serialized&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SerializeToString&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">serialized&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 파싱&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">parse_person&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialized_data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ParseFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialized_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;이름: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;나이: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;취미: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="s1">&amp;#39;, &amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">hobbies&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">phone&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">phones&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;전화번호: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">number&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> (&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PhoneType&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Name&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Javascript에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">protobuf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;protobufjs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// .proto 파일 로드
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">protobuf&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;person.proto&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">Person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">root&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">lookupType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Person&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 메시지 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">age&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hobbies&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">phones&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">number&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;123-456-7890&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;MOBILE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 유효성 검사
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">error&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">throw&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 인코딩
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">payload&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">finish&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 디코딩
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">decoded&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">main&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h6>Java에서 처리&lt;/h6>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 생성된 클래스 사용&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ProtobufExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 메시지 생성&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Builder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;John Doe&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAge&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addHobbies&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;reading&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addHobbies&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;swimming&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PhoneNumber&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Builder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PhoneNumber&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newBuilder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setNumber&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;123-456-7890&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">PhoneType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MOBILE&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addPhones&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">phone&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 직렬화&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">serialized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">toByteArray&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 역직렬화&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Person&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">parseFrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">serialized&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;이름: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;나이: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parsedPerson&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAge&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InvalidProtocolBufferException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>활용 사례&lt;/h5>&lt;ul>
&lt;li>대용량 데이터 처리가 필요한 경우&lt;/li>
&lt;li>실시간 데이터 스트리밍&lt;/li>
&lt;li>모바일 애플리케이션에서의 데이터 전송&lt;/li>
&lt;li>고성능이 요구되는 시스템 간 통신&lt;/li>
&lt;li>gRPC 통신&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="n">syntax&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;proto3&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">service&lt;/span> &lt;span class="n">UserService&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">rpc&lt;/span> &lt;span class="n">GetUser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="k">rpc&lt;/span> &lt;span class="n">CreateUser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserResponse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">UserRequest&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">user_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">User&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="n">email&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="kd">message&lt;/span> &lt;span class="nc">UserResponse&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="n">success&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="kd">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>마이크로서비스 간 통신&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">user_service_pb2&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">User&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">UserRequest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">user_service_pb2_grpc&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">UserServiceStub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">grpc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">grpc&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insecure_channel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;localhost:50051&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">channel&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stub&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UserServiceStub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">channel&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">request&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">UserRequest&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">stub&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">GetUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>고성능 데이터 저장&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">save_to_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;person.pb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SerializeToString&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">load_from_file&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Person&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;person.pb&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;rb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">person&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ParseFromString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">person&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>인코딩 (Encoding)과 디코딩 (Decoding)</title><link>https://buenhyden.github.io/til/2024/10/encoding-and-decoding/</link><pubDate>Thu, 10 Oct 2024 07:05:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/10/encoding-and-decoding/</guid><description>
&lt;h2>인코딩 (Encoding)과 디코딩 (Decoding)&lt;/h2>&lt;p>인코딩과 디코딩은 데이터를 변환하고 처리하는 데 중요한 역할을 한다.&lt;br>
이 두 과정은 서로 반대되는 개념으로, 데이터의 효율적인 저장, 전송, 처리를 가능하게 한다.&lt;/p>
&lt;p>인코딩(Encoding)은 데이터를 특정 형식으로 변환하는 과정.&lt;br>
예를 들어, 우리가 사용하는 텍스트를 컴퓨터가 이해할 수 있는 이진 데이터로 변환하거나, 특수문자가 포함된 문자열을 웹에서 안전하게 전송할 수 있는 형식으로 변환하는 것을 말한다.&lt;/p>
&lt;p>디코딩(Decoding)은 인코딩의 반대 과정으로, 변환된 데이터를 원래의 형식으로 되돌리는 과정이다.&lt;br>
예를 들어, 이진 데이터를 다시 사람이 읽을 수 있는 텍스트로 변환하는 것.&lt;/p>
&lt;h3>인코딩 (Encoding)&lt;/h3>&lt;p>인코딩은 데이터를 특정 형식이나 규칙에 따라 다른 형태로 변환하는 과정&lt;/p>
&lt;h4>주요 목적&lt;/h4>&lt;ol>
&lt;li>&lt;strong>데이터 표준화&lt;/strong>: 다양한 시스템 간의 호환성을 보장한다.&lt;/li>
&lt;li>&lt;strong>저장 공간 절약&lt;/strong>: 데이터를 압축하여 효율적으로 저장한다.&lt;/li>
&lt;li>&lt;strong>전송 시간 단축&lt;/strong>: 압축된 데이터는 더 빠르게 전송된다.&lt;/li>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 데이터를 암호화하여 보안을 강화한다.&lt;/li>
&lt;/ol>
&lt;h4>주요 인코딩 유형&lt;/h4>&lt;ol>
&lt;li>&lt;strong>문자 인코딩&lt;/strong>:
&lt;ul>
&lt;li>ASCII: 영문 알파벳, 숫자, 특수 문자를 7비트로 표현한다.&lt;/li>
&lt;li>UTF-8: 유니코드 문자를 8비트 단위로 인코딩하며, 전 세계의 거의 모든 문자를 지원한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 문자열을 UTF-8로 인코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;안녕하세요&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">encoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># b&amp;#39;\xec\x95\x88\xeb\x85\x95\xed\x95\x98\xec\x84\xb8\xec\x9a\x94&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UTF-8로 인코딩된 데이터를 다시 문자열로 디코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">encoded&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decoded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># &amp;#39;안녕하세요&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>&lt;strong>Base64 인코딩&lt;/strong>:
&lt;ul>
&lt;li>이진 데이터를 ASCII 문자열로 변환한다.&lt;/li>
&lt;li>이메일 첨부 파일이나 이미지 데이터 전송에 자주 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">base64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 문자열을 Base64로 인코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, World!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">encoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">base64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">b64encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># b&amp;#39;SGVsbG8sIFdvcmxkIQ==&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Base64로 인코딩된 데이터를 디코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">base64&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">b64decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoded&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decoded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># &amp;#39;Hello, World!&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>&lt;strong>URL 인코딩&lt;/strong>:
&lt;ul>
&lt;li>URL에서 사용할 수 없는 문자를 %와 16진수로 변환한다.&lt;/li>
&lt;li>예: 공백은 &amp;ldquo;%20&amp;quot;으로 인코딩된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">urllib.parse&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">quote&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unquote&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># URL에서 사용할 수 없는 문자를 인코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello World! 안녕하세요&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">encoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">quote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># &amp;#39;Hello%20World%21%20%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 인코딩된 URL을 다시 원래 문자열로 디코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">unquote&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encoded&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decoded&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># &amp;#39;Hello World! 안녕하세요&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="3">
&lt;li>&lt;strong>멀티미디어 인코딩&lt;/strong>:
&lt;ul>
&lt;li>MP3: 오디오 파일을 압축한다.&lt;/li>
&lt;li>H.264: 비디오 데이터를 효율적으로 압축한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>디코딩 (Decoding)&lt;/h3>&lt;p>디코딩은 인코딩의 반대 과정으로, 인코딩된 데이터를 원래의 형태로 복원하는 작업이다.&lt;/p>
&lt;h4>주요 특징&lt;/h4>&lt;ol>
&lt;li>&lt;strong>데이터 해석&lt;/strong>: 인코딩된 데이터를 사람이나 시스템이 이해할 수 있는 형태로 변환한다.&lt;/li>
&lt;li>&lt;strong>원본 복원&lt;/strong>: 압축되거나 암호화된 데이터를 원래의 상태로 되돌린다.&lt;/li>
&lt;li>&lt;strong>호환성 유지&lt;/strong>: 다양한 시스템에서 데이터를 올바르게 해석할 수 있게 한다.&lt;/li>
&lt;/ol>
&lt;h4>디코딩 예시&lt;/h4>&lt;ol>
&lt;li>
&lt;p>&lt;strong>ASCII 디코딩&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>ASCII 코드 65를 문자 &amp;lsquo;A&amp;rsquo;로 변환한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Base64 디코딩&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Base64로 인코딩된 &amp;ldquo;SGVsbG8sIFdvcmxkIQ==&amp;ldquo;를 &amp;ldquo;Hello, World!&amp;ldquo;로 변환한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>URL 디코딩&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&amp;ldquo;%20&amp;quot;을 공백 문자로 변환한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>프로그래밍에서의 활용&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>데이터 전송&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>클라이언트-서버 통신에서 데이터를 안전하게 전송한다.&lt;/li>
&lt;li>예: JSON 데이터를 UTF-8로 인코딩하여 전송한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>파일 처리&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>텍스트 파일을 다룰 때 적절한 인코딩을 사용하여 읽고 쓴다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>암호화&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>민감한 정보를 안전하게 저장하고 전송한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>국제화&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>다국어 지원을 위해 UTF-8 인코딩을 사용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>데이터 압축&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>대용량 데이터를 효율적으로 저장하고 전송한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주의해야할 점&lt;/h3>&lt;ol>
&lt;li>인코딩 방식 일치:
&lt;ul>
&lt;li>인코딩과 디코딩 시 같은 방식을 사용해야 함&lt;/li>
&lt;li>불일치 시 데이터 손상이나 깨짐 현상 발생&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 잘못된 인코딩 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;안녕하세요&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">encoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decoded&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">encoded&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ascii&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># UnicodeDecodeError 발생&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="ne">UnicodeDecodeError&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;인코딩 방식이 일치하지 않습니다:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>인코딩 오버헤드:&lt;/p>
&lt;ul>
&lt;li>인코딩된 데이터는 일반적으로 원본보다 크기가 커짐&lt;/li>
&lt;li>Base64 인코딩의 경우 약 33% 정도 크기 증가&lt;/li>
&lt;li>대용량 데이터 처리 시 이를 고려한 설계 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>문자셋 호환성:&lt;/p>
&lt;ul>
&lt;li>모든 문자가 모든 인코딩 방식을 지원하지는 않음&lt;/li>
&lt;li>ASCII는 영문과 기본 특수문자만 지원&lt;/li>
&lt;li>UTF-8은 거의 모든 문자를 지원하지만 용량이 더 큼&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>클라우드 서비스 보안인증(CSAP, Cloud Security Assurance Program)</title><link>https://buenhyden.github.io/til/2024/09/cloud-security-assurance-program/</link><pubDate>Sun, 22 Sep 2024 11:39:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/09/cloud-security-assurance-program/</guid><description>
&lt;h2>클라우드 서비스 보안인증(CSAP, Cloud Security Assurance Program)&lt;/h2>&lt;p>클라우드 서비스 보안인증(CSAP, Cloud Security Assurance Program)은 한국인터넷진흥원(KISA)에서 주관하는 클라우드 서비스의 보안성을 평가하고 인증하는 제도.&lt;br>
이 제도는 클라우드 서비스 이용자의 정보보호를 강화하고 클라우드 서비스의 안정성과 신뢰성을 검증하기 위해 도입되었다.&lt;/p>
&lt;h3>CSAP의 주요 특징&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>인증 유형&lt;/strong>: CSAP는 다음과 같은 유형으로 분류된다:&lt;/p>
&lt;ul>
&lt;li>IaaS (Infrastructure as a Service)&lt;/li>
&lt;li>SaaS (Software as a Service)&lt;/li>
&lt;li>DaaS (Desktop as a Service)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>인증 등급&lt;/strong>: 2022년 12월 29일, 과학기술정보통신부는 CSAP 인증 기준을 개선하여 3단계 등급 체계(상, 중, 하)를 도입함.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>유효 기간&lt;/strong>: 인증의 유효 기간은 일반적으로 5년이며, SaaS 간편등급의 경우 3년이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>평가 기준&lt;/strong>: CSAP는 14개 통제 분야, 64개 통제 항목, 100개 상세 항목(하 등급 기준)으로 구성되어 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4>평가 기준&lt;/h4>&lt;p>CSAP(Cloud Security Assurance Program)의 평가 기준은 클라우드 서비스의 보안성을 평가하기 위한 항목이다.&lt;br>
2022년 12월 29일에 개선된 CSAP 인증 기준에 따르면, 하등급 기준으로 14개 통제 분야, 64개 통제 항목, 100개 상세 항목으로 구성되어 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>통제 분야&lt;/th>
&lt;th>주요 통제 항목&lt;/th>
&lt;th>통제 항목 수&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1. 정보보호 정책 및 조직&lt;/td>
&lt;td>정보보호 정책, 정보보호 조직&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2. 인적보안&lt;/td>
&lt;td>내부인력 보안, 외부인력 보안, 정보보호 교육&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3. 자산관리&lt;/td>
&lt;td>자산 식별 및 분류, 자산 변경관리, 위험관리&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4. 서비스 공급망 관리&lt;/td>
&lt;td>공급망 관리정책, 공급망 변경관리&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5. 침해사고관리&lt;/td>
&lt;td>침해사고 대응 절차 및 체계, 침해사고 대응, 사후관리&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6. 서비스 연속성 관리&lt;/td>
&lt;td>장애대응, 서비스 가용성&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7. 준거성&lt;/td>
&lt;td>법 및 정책 준수, 보안 감사&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8. 물리적 보안&lt;/td>
&lt;td>물리적 보호구역, 정보처리 시설 및 장비보호&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9. 가상화 보안&lt;/td>
&lt;td>가상화 인프라, 가상 환경&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10. 접근통제&lt;/td>
&lt;td>접근통제 정책, 접근권한 관리, 사용자 식별 및 인증&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>11. 네트워크 보안&lt;/td>
&lt;td>네트워크 보안&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>12. 데이터 보호 및 암호화&lt;/td>
&lt;td>데이터 보호, 매체 보안, 암호화&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>13. 시스템 개발 및 도입 보안&lt;/td>
&lt;td>시스템 분석 및 설계, 구현 및 시험, 외주 개발 보안, 시스템 도입 보안&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>14. 국가기관등의 보안요구사항&lt;/td>
&lt;td>관리적 보호조치, 물리적 보호조치, 기술적 보호조치&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 통제 항목은 여러 개의 상세 항목으로 구성되어 있으며, 총 100개의 상세 항목이 있다.&lt;br>
이 상세 항목들은 각 통제 항목을 더 구체적으로 평가하기 위한 기준을 제시한다.&lt;br>
예를 들어 접근통제 분야의 &amp;lsquo;사용자 식별 및 인증&amp;rsquo; 통제 항목에는 &amp;lsquo;안전한 인증 수단 제공&amp;rsquo;, &amp;lsquo;인증 실패 처리&amp;rsquo; 등의 상세 항목이 포함될 수 있다.&lt;/p>
&lt;h3>CSAP 인증 절차&lt;/h3>&lt;p>CSAP 인증 절차는 다음과 같이 진행된다:&lt;/p>
&lt;ol>
&lt;li>준비 단계: 기획 및 설계&lt;/li>
&lt;li>평가 단계:&lt;/li>
&lt;li>서면/현장 평가: 클라우드 서비스가 보안 평가 및 인증 기준에 맞게 적절하게 구축, 운영되고 있는지 확인한다.&lt;/li>
&lt;li>취약점 점검: 서비스의 보안 취약점을 식별하고 평가한다.&lt;/li>
&lt;li>모의침투테스트: 실제 해킹 시도를 통해 시스템의 보안 강도를 테스트한다.&lt;/li>
&lt;li>부적합 사항 및 취약점 보완 요청: 평가 기관이 발견된 문제점에 대해 신청 기관에 보완을 요청한다.&lt;/li>
&lt;li>보완 조치 및 결과 제출: 신청 기관은 지적된 사항에 대해 보완 조치를 수행하고 그 결과를 제출한다.&lt;/li>
&lt;li>보완 조치 확인: 평가 기관은 제출된 보완 조치 결과를 확인하고 이행 여부를 점검한다.&lt;/li>
&lt;li>평가 보고서 작성: 전체 평가 과정과 결과를 종합하여 평가 보고서를 작성한다.&lt;/li>
&lt;li>인증 단계: 인증위원회 개최 및 인증서 발급&lt;/li>
&lt;/ol>
&lt;p>평가 단계의 소요 기간은 인증 유형에 따라 다르며, 예를 들어 SaaS 간편등급의 경우 본점검 4일, 이행점검 3일로 총 7일이 소요된다.&lt;br>
전체 인증 과정은 최소 2개월에서 최대 6개월 이상 걸릴 수 있다.&lt;/p>
&lt;h3>CSAP의 중요성&lt;/h3>&lt;ol>
&lt;li>&lt;strong>공공 부문 진출&lt;/strong>: CSAP 인증은 민간 기업이 공공 부문에 클라우드 서비스를 제공하기 위한 필수 요건이다.&lt;/li>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 클라우드 서비스의 보안 수준을 향상시키고 이용자의 정보를 보호한다.&lt;/li>
&lt;li>&lt;strong>신뢰성 확보&lt;/strong>: 인증을 통해 클라우드 서비스의 안정성과 신뢰성을 검증받을 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>최근 동향&lt;/h3>&lt;ol>
&lt;li>&lt;strong>등급 체계 도입&lt;/strong>: 2022년 말, 시스템의 중요도에 따라 상, 중, 하 등급으로 나누는 체계가 도입되었다.&lt;/li>
&lt;li>&lt;strong>논리적 분리 허용&lt;/strong>: 하 등급 시스템의 경우, 물리적 분리 대신 논리적 분리를 허용하여 글로벌 클라우드 기업의 공공 시장 진입 가능성이 열렸다.&lt;/li>
&lt;li>&lt;strong>인증 기준 완화&lt;/strong>: 하 등급 시스템에 대한 평가 기준이 완화되어, SaaS 사업자들의 공공 시장 진입이 용이해졌다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Paging vs Segmentation</title><link>https://buenhyden.github.io/til/2024/12/paging-vs-segmentation/</link><pubDate>Thu, 16 Jan 2025 08:24:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/paging-vs-segmentation/</guid><description>
&lt;h2>Paging Vs Segmentation&lt;/h2>&lt;p>Paging과 Segmentation은 운영체제의 메모리 관리 기법이다.&lt;/p>
&lt;p>Paging:&lt;/p>
&lt;ul>
&lt;li>프로세스의 주소 공간을 고정 크기의 페이지로 나누어 관리한다.&lt;/li>
&lt;li>물리적 메모리를 같은 크기의 프레임으로 나눈다.&lt;/li>
&lt;li>외부 단편화 문제를 해결하고 메모리 할당을 단순화한다.&lt;/li>
&lt;/ul>
&lt;p>Segmentation:&lt;/p>
&lt;ul>
&lt;li>프로세스를 논리적 단위인 세그먼트로 나누어 관리한다.&lt;/li>
&lt;li>각 세그먼트의 크기는 가변적이다.&lt;/li>
&lt;li>프로그램의 논리적 구조를 반영하여 메모리를 관리한다.&lt;/li>
&lt;/ul>
&lt;h3>Paging과 Segmentation 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Paging&lt;/th>
&lt;th>Segmentation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>분할 단위&lt;/td>
&lt;td>고정 크기 페이지&lt;/td>
&lt;td>가변 크기 세그먼트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변환&lt;/td>
&lt;td>페이지 테이블 사용&lt;/td>
&lt;td>세그먼트 테이블 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>외부 단편화&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>발생 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>내부 단편화&lt;/td>
&lt;td>발생 가능&lt;/td>
&lt;td>거의 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 활용&lt;/td>
&lt;td>효율적&lt;/td>
&lt;td>유연함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>상대적으로 간단&lt;/td>
&lt;td>복잡함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>공유와 보호&lt;/td>
&lt;td>페이지 단위&lt;/td>
&lt;td>세그먼트 단위&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 관점&lt;/td>
&lt;td>투명함&lt;/td>
&lt;td>프로그램 구조 반영&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>할당/해제 속도&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>상대적으로 느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테이블 크기&lt;/td>
&lt;td>큼&lt;/td>
&lt;td>작음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>System Test vs End-to-End Test</title><link>https://buenhyden.github.io/til/2024/12/system-test-vs-end-to-end-test/</link><pubDate>Fri, 27 Dec 2024 02:11:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/system-test-vs-end-to-end-test/</guid><description>
&lt;h2>System Test Vs End-to-End Test&lt;/h2>&lt;p>System Testing과 End-to-End Testing은 소프트웨어 테스팅 과정에서 사용되는 두 가지 중요한 테스트 방법이다.
이 두 방법은 소프트웨어의 품질을 보장하기 위해 사용되지만, 그 범위와 목적에 차이가 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>System Test&lt;/th>
&lt;th>End-to-End Test&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>전체 시스템이 요구사항 명세서에 따라 정상적으로 동작하는지 검증하는 테스트&lt;/td>
&lt;td>실제 사용자의 시나리오에 따라 처음부터 끝까지의 전체 비즈니스 프로세스를 검증하는 테스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 범위&lt;/td>
&lt;td>시스템의 기능적/비기능적 요구사항 전체&lt;/td>
&lt;td>사용자 관점에서의 전체 비즈니스 프로세스 흐름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수행 시점&lt;/td>
&lt;td>통합 테스트 완료 후, 인수 테스트 전&lt;/td>
&lt;td>모든 하위 단계 테스트 완료 후 최종 단계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 환경&lt;/td>
&lt;td>테스트 환경 (실제 환경과 유사하게 구성)&lt;/td>
&lt;td>실제 운영 환경과 동일한 환경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 주체&lt;/td>
&lt;td>QA 팀, 테스트 엔지니어&lt;/td>
&lt;td>QA 팀, 비즈니스 분석가, 때로는 실제 최종 사용자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>검증 대상&lt;/td>
&lt;td>시스템의 모든 기능, 성능, 보안 등&lt;/td>
&lt;td>실제 사용자의 업무 흐름과 시나리오&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 데이터&lt;/td>
&lt;td>테스트용 데이터&lt;/td>
&lt;td>실제 운영 데이터와 유사한 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 관점&lt;/td>
&lt;td>기술적 관점과 비즈니스 관점 모두 포함&lt;/td>
&lt;td>순수하게 비즈니스 관점, 사용자 경험 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자동화 수준&lt;/td>
&lt;td>중간~높음&lt;/td>
&lt;td>낮음~중간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 케이스 작성 기준&lt;/td>
&lt;td>요구사항 명세서 기반&lt;/td>
&lt;td>사용자 시나리오 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>결함 발견 초점&lt;/td>
&lt;td>시스템 내부의 기술적 결함&lt;/td>
&lt;td>비즈니스 프로세스 상의 결함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 비용&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실행 시간&lt;/td>
&lt;td>비교적 짧음&lt;/td>
&lt;td>길음 (전체 프로세스 수행)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수 복잡도&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 준비 사항&lt;/td>
&lt;td>테스트 환경, 테스트 데이터, 테스트 케이스&lt;/td>
&lt;td>전체 시스템 구성, 외부 시스템 연동, 실제 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 목적&lt;/td>
&lt;td>시스템의 완전성과 정확성 검증&lt;/td>
&lt;td>비즈니스 프로세스의 정상 작동 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>피드백 대상&lt;/td>
&lt;td>개발팀, QA 팀&lt;/td>
&lt;td>비즈니스 팀, 최종 사용자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커버리지 중점&lt;/td>
&lt;td>기능 커버리지&lt;/td>
&lt;td>비즈니스 프로세스 커버리지&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 차이점들은 각각의 테스트가 서로 다른 목적과 관점에서 수행되면서도 상호 보완적인 역할을 한다는 것을 보여준다.&lt;br>
System Test가 시스템의 기술적인 완성도를 검증하는 데 중점을 둔다면, End-to-End Test는 실제 사용자의 관점에서 전체 비즈니스 프로세스가 정상적으로 작동하는지를 검증하는 데 초점을 맞춘다.&lt;/p>
&lt;p>두 테스트 모두 소프트웨어의 품질을 보장하는 데 중요한 역할을 하며, 프로젝트의 특성과 요구사항에 따라 적절한 비중으로 수행되어야 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Monitoring and Observability</title><link>https://buenhyden.github.io/til/2024/12/monitoring-and-observability/</link><pubDate>Wed, 25 Dec 2024 08:23:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/monitoring-and-observability/</guid><description>
&lt;h2>Monitoring and Observability&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Observability&lt;/th>
&lt;th>Monitoring&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>시스템의 내부 상태를 외부 출력을 통해 이해하고 추론할 수 있는 능력&lt;/td>
&lt;td>시스템의 동작과 성능을 지속적으로 관찰하고 추적하는 활동&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>목적&lt;/td>
&lt;td>예측하지 못한 문제의 근본 원인을 파악하고 시스템의 동작을 심층적으로 이해&lt;/td>
&lt;td>알려진 문제와 패턴을 감지하고 사전 정의된 임계값을 모니터링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 수집 방식&lt;/td>
&lt;td>이벤트, 로그, 트레이스, 메트릭스 등 다양한 형태의 원시 데이터 수집&lt;/td>
&lt;td>주로 미리 정의된 메트릭과 상태 정보 수집&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 분석 방식&lt;/td>
&lt;td>동적이고 탐색적인 분석, 실시간 질의 및 상관관계 분석&lt;/td>
&lt;td>사전 정의된 대시보드와 알림 규칙 기반 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문제 해결 접근법&lt;/td>
&lt;td>귀납적 접근 - 데이터를 통해 문제의 패턴과 원인을 발견&lt;/td>
&lt;td>연역적 접근 - 알려진 문제 패턴에 기반한 탐지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>도구의 특성&lt;/td>
&lt;td>유연하고 탐색적인 도구 (예: Jaeger, OpenTelemetry)&lt;/td>
&lt;td>고정된 대시보드와 알림 시스템 (예: Nagios, Prometheus)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 저장 기간&lt;/td>
&lt;td>일반적으로 더 긴 기간 (문제 패턴 분석을 위해)&lt;/td>
&lt;td>상대적으로 짧은 기간 (실시간 모니터링 중심)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 관점&lt;/td>
&lt;td>개발자, SRE, 운영팀의 심층 분석 도구&lt;/td>
&lt;td>운영팀의 일상적인 모니터링 도구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용 구조&lt;/td>
&lt;td>상대적으로 높은 초기 비용과 운영 비용&lt;/td>
&lt;td>상대적으로 낮은 초기 비용과 예측 가능한 운영 비용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>높음 (다양한 데이터 소스와 분석 도구 통합 필요)&lt;/td>
&lt;td>중간 (표준화된 메트릭 수집과 알림 구성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>매우 유연한 확장성 (새로운 데이터 소스와 분석 방법 추가 가능)&lt;/td>
&lt;td>제한된 확장성 (미리 정의된 메트릭과 알림 중심)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>필요한 기술 수준&lt;/td>
&lt;td>높은 수준의 기술적 이해와 분석 능력 필요&lt;/td>
&lt;td>중간 수준의 운영 지식으로 충분&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문제 감지 범위&lt;/td>
&lt;td>알려지지 않은 문제까지 포함한 광범위한 감지&lt;/td>
&lt;td>알려진 문제와 패턴 중심의 감지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>응답 시간&lt;/td>
&lt;td>상대적으로 길음 (심층 분석 필요)&lt;/td>
&lt;td>즉각적 (사전 정의된 알림 기반)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>복잡한 분산 시스템의 문제 해결, 성능 최적화&lt;/td>
&lt;td>시스템 상태 모니터링, SLA 준수 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 차이점들은 각각이 서로 다른 목적과 상황에서 중요한 역할을 한다는 것을 보여준다.&lt;br>
Monitoring이 시스템의 기본적인 건강 상태를 확인하는 데 중점을 둔다면, Observability는 더 심층적인 시스템 이해와 문제 해결을 가능하게 한다.&lt;/p>
&lt;p>현대의 복잡한 시스템에서는 두 가지 접근 방식을 모두 적절히 활용하는 것이 중요하다.&lt;br>
Monitoring을 통해 기본적인 시스템 상태를 지속적으로 확인하고, Observability를 통해 더 복잡한 문제를 해결하고 시스템을 최적화할 수 있다.&lt;br>
특히 마이크로서비스 아키텍처나 분산 시스템에서는 두 접근 방식의 조화로운 활용이 더욱 중요해지고 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Deadlock vs Livelock</title><link>https://buenhyden.github.io/til/2024/12/deadlock-vs-livelock/</link><pubDate>Wed, 25 Dec 2024 07:03:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/deadlock-vs-livelock/</guid><description>
&lt;h2>Deadlock Vs Livelock&lt;/h2>&lt;p>데드락(Deadlock)과 라이브락(Livelock)은 둘 다 동시성 프로그래밍에서 발생할 수 있는 문제 상황으로, 데드락과 라이브락은 모두 시스템의 진행을 방해하는 심각한 문제이다.&lt;/p>
&lt;p>데드락(Deadlock)은 두 개 이상의 프로세스나 스레드가 서로가 보유한 자원을 기다리며 무한정 대기하는 상태를 말하며, 상호 배제(Mutual Exclusion), 점유 대기(Hold and Wait), 비선점(No Preemption), 순환 대기(Circular Wait) 등의 조건이 충족되어야 한다. 예를 들어, 프로세스 A가 자원 X를 점유하고, 프로세스 B가 자원 Y를 점유한 상태에서, A는 Y를, B는 X를 요청하면 데드락이 발생한다&lt;/p>
&lt;p>라이브락(Livelock)은 프로세스들이 계속해서 상태를 변경하지만 실제로는 어떤 진전도 없는 상황을 말한다.&lt;br>
지속적인 상태 변경이 일어나지만, 진전이 없다. 예를 들어, 두 사람이 좁은 복도에서 마주쳤을 때, 서로 양보하려고 같은 방향으로 계속 이동하는 상황을 생각해볼 수 있다.&lt;/p>
&lt;h2>비교 분석 표&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>데드락 (Deadlock)&lt;/th>
&lt;th>라이브락 (Livelock)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>프로세스들이 서로의 자원을 기다리며 무한정 대기하는 상태&lt;/td>
&lt;td>프로세스들이 계속 상태를 변경하지만 진전이 없는 상태&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로세스 상태&lt;/td>
&lt;td>완전히 멈춰있음&lt;/td>
&lt;td>계속해서 상태 변경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자원 점유&lt;/td>
&lt;td>자원을 점유한 채로 다른 자원을 기다림&lt;/td>
&lt;td>자원을 점유하지 않고 계속 요청하고 해제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CPU 사용&lt;/td>
&lt;td>CPU 사용 없음&lt;/td>
&lt;td>CPU 계속 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>해결 가능성&lt;/td>
&lt;td>외부 개입 없이 해결 불가능&lt;/td>
&lt;td>시간이 지나면 자연스럽게 해결될 가능성 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>발생 원인&lt;/td>
&lt;td>자원 할당의 순환 의존성&lt;/td>
&lt;td>데드락을 피하려는 과정에서 발생 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로세스 진행&lt;/td>
&lt;td>완전히 멈춤&lt;/td>
&lt;td>진행은 하지만 실질적 진전 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>해결 방법&lt;/td>
&lt;td>예방, 회피, 탐지 및 복구&lt;/td>
&lt;td>무작위성 도입, 우선순위 부여, 타임아웃 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실제 예시&lt;/td>
&lt;td>두 프로세스가 서로의 자원을 점유하고 대기&lt;/td>
&lt;td>두 사람이 복도에서 서로 양보하며 계속 이동&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>해결 방법&lt;/h3>&lt;h4>데드락 해결 방법&lt;/h4>&lt;ol>
&lt;li>&lt;strong>예방&lt;/strong>: 데드락의 네 가지 조건 중 하나를 제거한다.&lt;/li>
&lt;li>&lt;strong>회피&lt;/strong>: 자원 할당 상태를 지속적으로 검사하여 안전한 상태를 유지한다.&lt;/li>
&lt;li>&lt;strong>탐지 및 복구&lt;/strong>: 데드락을 탐지하고, 발생 시 프로세스를 강제 종료하거나 자원을 선점한다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>데드락(Deadlock)의 네 가지 조건&lt;/p>
&lt;ol>
&lt;li>&lt;strong>상호 배제(Mutual Exclusion)&lt;/strong>: 자원은 한 번에 하나의 프로세스만 사용할 수 있다.&lt;/li>
&lt;li>&lt;strong>점유 대기(Hold and Wait)&lt;/strong>: 프로세스가 이미 자원을 보유한 상태에서 다른 자원을 요청한다.&lt;/li>
&lt;li>&lt;strong>비선점(No Preemption)&lt;/strong>: 다른 프로세스가 사용 중인 자원을 강제로 빼앗을 수 없다.&lt;/li>
&lt;li>&lt;strong>순환 대기(Circular Wait)&lt;/strong>: 프로세스들이 순환적으로 서로의 자원을 기다린다.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h4>라이브락 해결 방법&lt;/h4>&lt;ol>
&lt;li>&lt;strong>무작위성 도입&lt;/strong>: 프로세스들이 동작을 결정할 때 약간의 무작위성을 도입한다.&lt;/li>
&lt;li>&lt;strong>우선순위 부여&lt;/strong>: 프로세스들에게 서로 다른 우선순위를 부여한다.&lt;/li>
&lt;li>&lt;strong>타임아웃 설정&lt;/strong>: 일정 시간 동안 진전이 없으면 작업을 재시도하거나 포기한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>WCS(Warehouse Control System)</title><link>https://buenhyden.github.io/til/2024/12/warehouse-control-system/</link><pubDate>Tue, 24 Dec 2024 06:57:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/warehouse-control-system/</guid><description>
&lt;h2>WCS(Warehouse Control System)&lt;/h2>&lt;p>WCS(Warehouse Control System)는 물류 창고의 자동화 설비를 실시간으로 제어하고 관리하는 시스템이다.&lt;/p>
&lt;p>WCS의 기본 개념을 먼저 이해해보면, 이는 마치 물류 창고의 &amp;lsquo;신경계&amp;rsquo;와 같은 역할을 한다.&lt;br>
컨베이어, 자동 적재 장비, 분류기 등 다양한 자동화 설비들을 통합적으로 제어하여 물류의 흐름을 원활하게 만든다.&lt;/p>
&lt;p>WCS의 도입은 여러 가지 긍정적인 효과를 가져온다.&lt;br>
가장 큰 이점은 작업 효율성의 극대화이다.&lt;br>
자동화 설비들이 최적의 상태로 운영되므로, 물류 처리 속도가 빨라지고 오류가 줄어든다.&lt;br>
또한 실시간 모니터링을 통해 문제 상황에 신속하게 대응할 수 있어 다운타임을 최소화할 수 있다.&lt;/p>
&lt;p>현대의 WCS는 최신 기술을 적극적으로 활용한다.&lt;br>
인공지능 기술을 통해 더 똑똑한 의사결정이 가능해졌다.&lt;br>
예를 들어, 과거의 데이터를 분석하여 최적의 작업 순서를 예측하거나, 설비의 유지보수 시점을 미리 파악할 수 있다.&lt;/p>
&lt;p>IoT 센서들과의 연동도 중요한 발전 방향이다.&lt;br>
각 설비에 부착된 센서들이 상세한 운영 데이터를 수집하고, 이를 바탕으로 더 정교한 제어가 가능해진다.&lt;br>
마치 인체의 감각 신경이 뇌에 정보를 전달하듯이, 센서들은 WCS에 중요한 데이터를 제공한다.&lt;/p>
&lt;p>WCS는 다른 물류 시스템들과도 긴밀하게 연동된다.&lt;br>
상위 시스템인 WMS(Warehouse Management System)로부터 작업 지시를 받아 이를 실제 설비 동작으로 변환하고, 그 결과를 다시 WMS에 보고한다.&lt;br>
이러한 시스템 간의 원활한 통신은 전체 물류 프로세스의 효율성을 높이는 데 매우 중요하다.&lt;/p>
&lt;h3>WCS가 제공하는 핵심 기능&lt;/h3>&lt;ol>
&lt;li>
&lt;p>실시간 설비 제어 기능은 각종 자동화 장비들을 정확하게 통제한다.&lt;br>
예를 들어, 컨베이어 벨트의 속도를 조절하거나, 자동 적재 장비의 이동 경로를 지정하는 등의 작업을 수행한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>작업 할당 및 스케줄링 기능은 각 설비에 최적의 작업을 배분한다.&lt;br>
마치 교통 신호등이 차량의 흐름을 조절하듯이, WCS는 물류의 흐름을 효율적으로 관리한다.&lt;br>
예를 들어, 여러 주문이 동시에 들어왔을 때 어떤 순서로 처리할지, 어떤 설비를 활용할지를 결정한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>실시간 모니터링과 리포팅 기능도 중요하다.&lt;br>
모든 설비의 상태와 작업 진행 상황을 실시간으로 감시하고, 문제가 발생하면 즉시 알려준다.&lt;br>
이는 마치 병원의 환자 모니터링 시스템과 유사하게 작동한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>WCS 도입 시에는 몇 가지 중요한 고려사항&lt;/h3>&lt;ol>
&lt;li>
&lt;p>기존 설비들과의 호환성을 철저히 검토해야 한다.&lt;br>
서로 다른 제조사의 설비들이 혼재되어 있는 경우가 많은데, 이들을 모두 통합적으로 제어할 수 있어야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>시스템의 안정성과 신뢰성이 매우 중요하다.&lt;br>
WCS는 물류 창고의 핵심 시스템이므로, 장애가 발생하면 전체 물류 운영이 중단될 수 있다.&lt;br>
따라서 충분한 테스트와 검증이 필요하며, 비상 상황에 대한 대책도 마련해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>물류 운송 관리 시스템 (Transportation Management System, TMS)</title><link>https://buenhyden.github.io/til/2024/12/transportation-management-system/</link><pubDate>Tue, 24 Dec 2024 06:56:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/transportation-management-system/</guid><description>
&lt;h2>물류 운송 관리 시스템 (Transportation Management System, TMS)&lt;/h2>&lt;p>TMS(Transportation Management System)는 물류 운송 관리 시스템으로, 기업의 물류 운송 프로세스를 효율적으로 관리하고 최적화하기 위한 솔루션이다.&lt;/p>
&lt;p>TMS는 운송 계획 수립부터 실제 배송, 비용 정산까지 물류 운송과 관련된 모든 프로세스를 통합적으로 관리한다.&lt;br>
이는 마치 교통관제센터가 도시의 모든 교통 흐름을 모니터링하고 관리하는 것과 유사하다.&lt;/p>
&lt;h3>TMS가 제공하는 주요 기능&lt;/h3>&lt;ol>
&lt;li>
&lt;p>운송 계획 및 최적화&lt;br>
운송 경로를 최적화하여 배송 시간과 비용을 절감한다.&lt;br>
예를 들어, 여러 배송지를 방문해야 할 때 가장 효율적인 경로를 계산하고, 차량의 적재 용량을 고려하여 최적의 배차 계획을 수립한다.&lt;br>
실시간 교통 정보를 반영하여 더욱 정확한 계획이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>실시간 운송 추적&lt;br>
GPS와 모바일 기술을 활용하여 배송 차량의 위치를 실시간으로 추적한다.&lt;br>
이를 통해 고객에게 정확한 배송 현황을 제공할 수 있으며, 문제 발생 시 신속한 대응이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>비용 관리 및 정산&lt;br>
운송과 관련된 모든 비용을 체계적으로 관리한다.&lt;br>
유류비, 인건비, 통행료 등의 비용을 자동으로 계산하고 정산하며, 운송 실적에 따른 정확한 비용 분석이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>문서 관리&lt;br>
운송장, 인수증, 정산서 등 물류 운송과 관련된 각종 문서를 전자화하여 관리한다.&lt;br>
이는 페이퍼리스 환경을 구축하고 업무 효율성을 높이는 데 기여한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>TMS 도입의 주요 효과&lt;/h3>&lt;ol>
&lt;li>
&lt;p>운영 효율성 향상&lt;br>
자동화된 프로세스를 통해 인력 투입을 줄이고, 오류를 최소화할 수 있다.&lt;br>
예를 들어, 수작업으로 하던 배차 계획을 시스템이 자동으로 수립함으로써 시간과 비용을 절감할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>고객 서비스 개선&lt;br>
실시간 배송 추적과 정확한 도착 예정 시간 제공으로 고객 만족도를 높일 수 있다.&lt;br>
문제 발생 시에도 신속한 대응이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>비용 절감&lt;br>
최적화된 운송 경로와 효율적인 차량 운영으로 운송 비용을 절감할 수 있다.&lt;br>
또한, 정확한 비용 분석을 통해 추가적인 비용 절감 포인트를 발견할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Cloud and On-Premise</title><link>https://buenhyden.github.io/til/2024/12/cloud-and-on-premise/</link><pubDate>Sat, 21 Dec 2024 10:33:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/cloud-and-on-premise/</guid><description>
&lt;h2>Cloud Vs On-Premise&lt;/h2>&lt;p>Cloud와 On-Premise는 기업의 IT 인프라를 구축하고 관리하는 두 가지 주요 방식을 설명하는 개념이다.&lt;br>
이 두 방식은 데이터 저장, 애플리케이션 호스팅, 그리고 전반적인 IT 리소스 관리에 있어 근본적인 차이를 보인다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>On-Premise&lt;/th>
&lt;th>클라우드&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>초기 구축 비용&lt;/td>
&lt;td>- 서버, 네트워크 장비 등 높은 초기 투자 필요&lt;br>- 데이터센터 구축 비용 발생&lt;br>- 소프트웨어 라이선스 구매 필요&lt;/td>
&lt;td>- 초기 투자 비용 최소화&lt;br>- 필요한 만큼만 시작 가능&lt;br>- 하드웨어 구매 불필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>운영 비용&lt;/td>
&lt;td>- 예측 가능한 고정 비용&lt;br>- 전담 IT 인력 필요&lt;br>- 전기, 냉각 등 관리 비용 발생&lt;/td>
&lt;td>- 사용량 기반 과금&lt;br>- 탄력적인 비용 구조&lt;br>- 운영 인력 최소화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>- 물리적 인프라 확장 필요&lt;br>- 확장 시 많은 시간과 비용 소요&lt;br>- 사전 용량 계획 중요&lt;/td>
&lt;td>- 필요에 따라 즉시 확장 가능&lt;br>- 자동 확장/축소 지원&lt;br>- 글로벌 확장 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>- 물리적 보안 직접 통제&lt;br>- 데이터 위치 완벽 통제&lt;br>- 자체 보안 정책 수립 가능&lt;/td>
&lt;td>- 서비스 제공자의 보안 정책 따름&lt;br>- 공유 인프라 사용&lt;br>- 데이터 위치 선택 제한적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수&lt;/td>
&lt;td>- 모든 유지보수 직접 담당&lt;br>- 정기적인 하드웨어 교체 필요&lt;br>- 패치/업그레이드 직접 관리&lt;/td>
&lt;td>- 서비스 제공자가 유지보수 담당&lt;br>- 자동 업데이트/패치 적용&lt;br>- 최신 기술 자동 적용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>커스터마이징&lt;/td>
&lt;td>- 완전한 커스터마이징 자유&lt;br>- 하드웨어/소프트웨어 직접 선택&lt;br>- 특수 요구사항 수용 용이&lt;/td>
&lt;td>- 제한된 커스터마이징&lt;br>- 제공되는 서비스 내에서 선택&lt;br>- 표준화된 서비스 위주&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>가용성&lt;/td>
&lt;td>- 자체 인프라로 안정성 확보&lt;br>- 인터넷 연결 없이도 운영 가능&lt;br>- 장애 대응 직접 수행&lt;/td>
&lt;td>- 서비스 제공자의 SLA 따름&lt;br>- 인터넷 연결 필수&lt;br>- 여러 지역 동시 운영 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 주권&lt;/td>
&lt;td>- 완벽한 데이터 통제권 보유&lt;br>- 물리적 데이터 위치 확실&lt;br>- 규제 준수 용이&lt;/td>
&lt;td>- 데이터 주권 일부 제한&lt;br>- 국가간 데이터 이동 가능&lt;br>- 규제 준수 확인 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>접근성&lt;/td>
&lt;td>- 내부 네트워크 중심&lt;br>- 원격 접속 별도 구성 필요&lt;br>- 물리적 접근 통제 가능&lt;/td>
&lt;td>- 언제 어디서나 접근 가능&lt;br>- 다양한 디바이스 지원&lt;br>- 글로벌 접근성 우수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>재해 복구&lt;/td>
&lt;td>- 별도의 재해복구 센터 필요&lt;br>- 높은 구축/운영 비용&lt;br>- 복구 절차 직접 수행&lt;/td>
&lt;td>- 자동화된 백업/복구&lt;br>- 여러 지역 복제 용이&lt;br>- 신속한 재해 복구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 상황&lt;/td>
&lt;td>- 높은 보안이 필요한 경우&lt;br>- 특수한 규제 준수 필요&lt;br>- 레거시 시스템 운영&lt;/td>
&lt;td>- 빠른 시작이 필요한 경우&lt;br>- 유연한 확장성 필요&lt;br>- 글로벌 서비스 제공&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>실제로는 많은 기업들이 두 방식의 장점을 모두 활용하는 하이브리드 형태를 채택하고 있다.&lt;br>
기업의 특성, 요구사항, 예산 등을 종합적으로 고려하여 적절한 방식을 선택하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Enterprise Resource Planning</title><link>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning/</link><pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning/</guid><description>
&lt;h2>ERP (Enterprise Resource Planning)&lt;/h2>&lt;p>ERP(Enterprise Resource Planning)는 기업의 모든 자원을 통합적으로 관리하고 운영하기 위한 시스템.&lt;/p>
&lt;p>ERP는 기업의 인력, 자본, 자재, 기계 등 모든 경영자원을 효율적으로 통합 관리하여 기업의 경쟁력을 높이는 통합정보시스템이다.&lt;br>
이는 재무, 인사, 생산, 물류, 영업 등 기업의 전반적인 업무 프로세스를 하나의 통합된 시스템으로 구축하여 정보를 공유하고 업무 효율을 높이는 것을 목표로 한다.&lt;/p>
&lt;h3>ERP의 주요 기능 및 서비스&lt;/h3>&lt;ol>
&lt;li>
&lt;p>재무/회계 관리&lt;/p>
&lt;ul>
&lt;li>자금, 손익, 매출, 비용 등의 재무 정보 관리&lt;/li>
&lt;li>회계 보고서 자동 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인사/급여 관리&lt;/p>
&lt;ul>
&lt;li>직원 정보 관리&lt;/li>
&lt;li>급여 계산 및 지급&lt;/li>
&lt;li>4대 보험 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>생산/제조 관리&lt;/p>
&lt;ul>
&lt;li>생산 계획 수립&lt;/li>
&lt;li>원자재 소요량 계산&lt;/li>
&lt;li>제품 원가 산출&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>재고/물류 관리&lt;/p>
&lt;ul>
&lt;li>실시간 재고 현황 파악&lt;/li>
&lt;li>창고별 재고 관리&lt;/li>
&lt;li>물류 추적 및 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>영업/구매 관리&lt;/p>
&lt;ul>
&lt;li>고객 주문 관리&lt;/li>
&lt;li>판매/구매 내역 추적&lt;/li>
&lt;li>공급업체 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>고객 관계 관리(CRM)&lt;/p>
&lt;ul>
&lt;li>고객 정보 통합 관리&lt;/li>
&lt;li>마케팅 캠페인 관리&lt;/li>
&lt;li>고객 서비스 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프로젝트 관리&lt;/p>
&lt;ul>
&lt;li>프로젝트 일정 및 자원 관리&lt;/li>
&lt;li>비용 추적 및 분석&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 분석 및 보고&lt;/p>
&lt;ul>
&lt;li>실시간 데이터 분석&lt;/li>
&lt;li>맞춤형 보고서 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>시스템 통합 및 데이터 일원화&lt;/p>
&lt;ul>
&lt;li>부서 간 정보 공유 및 협업 지원&lt;/li>
&lt;li>데이터의 일관성 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안 및 접근 제어&lt;/p>
&lt;ul>
&lt;li>사용자 권한 관리&lt;/li>
&lt;li>데이터 보안 및 백업&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Warehouse Management System</title><link>https://buenhyden.github.io/til/2024/12/warehouse-management-system/</link><pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/warehouse-management-system/</guid><description>
&lt;h2>창고 관리 시스템 (Warehouse Management System, WMS)&lt;/h2>&lt;p>WMS(Warehouse Management System)는 창고 관리 시스템으로, 창고 내의 물류 프로세스를 최적화하고 효율적으로 관리하기 위한 소프트웨어 애플리케이션을 말한다.&lt;br>
WMS는 재고 관리, 주문 처리, 입출고 관리 등 창고 운영의 전반적인 과정을 자동화하고 최적화하는 데 사용된다.&lt;/p>
&lt;h3>WMS의 주요 기능과 서비스&lt;/h3>&lt;ol>
&lt;li>재고 관리 및 추적&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>실시간 재고 수준 모니터링&lt;/li>
&lt;li>재고 위치 추적 및 최적화&lt;/li>
&lt;li>바코드 및 RFID 기술을 활용한 재고 추적&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>주문 관리 및 처리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>주문 접수 및 처리 자동화&lt;/li>
&lt;li>피킹, 패킹, 배송 프로세스 최적화&lt;/li>
&lt;li>주문 상태 실시간 추적&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>입고 및 출고 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>입고 예약 및 처리&lt;/li>
&lt;li>출고 계획 수립 및 실행&lt;/li>
&lt;li>크로스도킹 관리&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>공간 최적화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>창고 레이아웃 최적화&lt;/li>
&lt;li>보관 위치 할당 및 관리&lt;/li>
&lt;li>공간 활용도 분석&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>노동력 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>작업 할당 및 스케줄링&lt;/li>
&lt;li>직원 성과 추적 및 분석&lt;/li>
&lt;li>생산성 향상을 위한 작업 최적화&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>보고 및 분석&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>재고 보고서 생성&lt;/li>
&lt;li>성과 지표(KPI) 분석&lt;/li>
&lt;li>예측 분석 및 의사결정 지원&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>운송 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>배송업체 선택 및 비용 최적화&lt;/li>
&lt;li>배송 추적 및 상태 업데이트&lt;/li>
&lt;li>운송 문서 자동 생성&lt;/li>
&lt;/ul>
&lt;ol start="8">
&lt;li>시스템 통합&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>ERP, TMS 등 다른 비즈니스 시스템과의 통합&lt;/li>
&lt;li>EDI(전자데이터교환) 지원&lt;/li>
&lt;li>API를 통한 맞춤형 통합 지원&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>E-Commerce Service</title><link>https://buenhyden.github.io/til/2024/12/e-commerce-service/</link><pubDate>Fri, 20 Dec 2024 12:54:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/e-commerce-service/</guid><description>
&lt;h2>E-Commerce Service&lt;/h2>&lt;p>여러 사용자가 동시에 하나의 물품을 구매하려고 할 때 발생할 수 있는 문제를 해결하기 위해 다음과 같은 요소들을 고려해야 한다.&lt;/p>
&lt;h3>고려해야 할 요소&lt;/h3>&lt;ol>
&lt;li>&lt;strong>동시성 제어&lt;/strong>: 여러 사용자가 동시에 같은 물품을 구매하려 할 때 발생할 수 있는 충돌을 관리해야 한다.&lt;/li>
&lt;li>&lt;strong>재고 관리&lt;/strong>: 실시간으로 정확한 재고 수량을 유지하고 업데이트해야 한다.&lt;/li>
&lt;li>&lt;strong>트랜잭션 일관성&lt;/strong>: 결제 과정과 재고 감소가 일관성 있게 처리되어야 한다.&lt;/li>
&lt;li>&lt;strong>사용자 경험&lt;/strong>: 구매 과정에서 사용자에게 명확한 피드백을 제공해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>핵심 영역&lt;/h3>&lt;ol>
&lt;li>상품 관리 시스템&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>상품 정보 관리 (이름, 가격, 재고, 카테고리, 상품 상태 등)&lt;/li>
&lt;li>재고 관리 시스템 (동시성 제어가 매우 중요)&lt;/li>
&lt;li>상품 검색 및 필터링 기능&lt;/li>
&lt;li>이미지 처리 및 저장&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>주문 처리 시스템 (매우 중요)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>주문 상태 관리 (결제대기, 결제완료, 배송준비, 배송중, 배송완료 등)&lt;/li>
&lt;li>장바구니 기능&lt;/li>
&lt;li>동시 주문 처리를 위한 동시성 제어&lt;/li>
&lt;li>재고 차감 로직&lt;/li>
&lt;li>주문 취소/환불 처리&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>결제 시스템&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>결제 게이트웨이 연동&lt;/li>
&lt;li>결제 상태 관리&lt;/li>
&lt;li>결제 실패 처리&lt;/li>
&lt;li>환불 처리&lt;/li>
&lt;li>결제 보안 (매우 중요)&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>사용자 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>회원가입/로그인&lt;/li>
&lt;li>권한 관리&lt;/li>
&lt;li>개인정보 보호&lt;/li>
&lt;li>주소록 관리&lt;/li>
&lt;li>구매 이력 관리&lt;/li>
&lt;/ul>
&lt;h3>구현 방법&lt;/h3>&lt;h4>데이터베이스 수준의 잠금 (Database-Level Locking)&lt;/h4>&lt;h5>낙관적 잠금 (Optimistic Locking)&lt;/h5>&lt;p>낙관적 잠금은 대부분의 트랜잭션이 충돌하지 않는다는 가정하에 작동한다.&lt;/p>
&lt;p>구현 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">item_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 SQL 문은 재고 값이 변경되지 않은 경우에만 항목을 업데이트한다.&lt;/p>
&lt;h5>비관적 잠금 (Pessimistic Locking)&lt;/h5>&lt;p>비관적 잠금은 트랜잭션 기간 동안 항목을 잠그어 다른 트랜잭션이 업데이트하지 못하게 한다.&lt;/p>
&lt;p>구현 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">BEGIN&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">item_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 재고 확인 및 가능한 경우 업데이트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">item_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>애플리케이션 수준의 처리&lt;/h4>&lt;h5>분산 잠금 (Distributed Locking)&lt;/h5>&lt;p>분산 잠금을 사용하면 여러 서버에서 동시에 접근하는 경우에도 일관성을 유지할 수 있다.&lt;/p>
&lt;p>구현 방법:&lt;/p>
&lt;ol>
&lt;li>사용자가 구매를 시도할 때 해당 항목에 대한 분산 잠금을 획득한다.&lt;/li>
&lt;li>잠금을 유지한 상태에서 구매 작업을 수행한다.&lt;/li>
&lt;li>작업 완료 후 잠금을 해제한다.&lt;/li>
&lt;/ol>
&lt;h4>상태 관리&lt;/h4>&lt;p>물품의 상태를 세 가지로 관리할 수 있다: 사용 가능, 보류 중, 판매됨.&lt;/p>
&lt;ul>
&lt;li>사용자가 결제 페이지로 이동할 때 물품 상태를 &amp;ldquo;보류 중&amp;quot;으로 변경.&lt;/li>
&lt;li>일정 시간(예: 10분) 후에 결제가 완료되지 않으면 상태를 다시 &amp;ldquo;사용 가능&amp;quot;으로 변경.&lt;/li>
&lt;/ul>
&lt;h4>실시간 재고 동기화&lt;/h4>&lt;p>여러 판매 채널을 사용하는 경우, 중앙 집중식 재고 관리 시스템을 구축하여 실시간으로 재고를 동기화해야 한다.&lt;/p>
&lt;h5>실시간 인벤토리 동기화를 구현하는 방법&lt;/h5>&lt;h6>데이터 통합 및 실시간 업데이트&lt;/h6>&lt;ol>
&lt;li>중앙 집중식 인벤토리 관리&lt;br>
모든 판매 채널의 재고를 단일 플랫폼에서 관리한다.&lt;br>
이를 통해 여러 채널에서의 재고 수준을 실시간으로 추적하고 동기화할 수 있다.&lt;/li>
&lt;li>자동화된 동기화&lt;br>
판매, 반품, 재입고 등 재고 변동이 발생할 때마다 자동으로 모든 연결된 채널에서 업데이트가 이루어진다.&lt;br>
이는 과잉 판매와 재고 부족을 방지하는 데 도움이 된다.&lt;/li>
&lt;/ol>
&lt;h6>기술적 구현 방법&lt;/h6>&lt;ol>
&lt;li>웹훅 (Webhooks)&lt;br>
재고 변경 시 즉각적인 알림을 통해 시스템 전체에 즉시 업데이트를 트리거한다.&lt;/li>
&lt;li>API 통합&lt;br>
다양한 소프트웨어 구성 요소 간의 원활한 통신을 가능하게 하여 모든 접점에서 재고 데이터의 일관성을 보장한다.&lt;/li>
&lt;li>데이터베이스 복제&lt;br>
재고 데이터베이스의 여러 복사본을 생성하여 다양한 위치에서 빠른 액세스와 업데이트를 가능하게 한다.&lt;/li>
&lt;/ol>
&lt;h6>고급 기능&lt;/h6>&lt;ol>
&lt;li>맞춤형 알림 설정&lt;br>
재고가 낮아질 때 알림을 받아 적시에 공급업체에 주문을 할 수 있도록 한다.&lt;/li>
&lt;li>멀티팩 및 번들 추적&lt;br>
키트를 구성하는 개별 아이템 수준에서 멀티팩과 번들을 추적한다.&lt;/li>
&lt;li>다중 창고 관리&lt;br>
여러 창고의 재고를 추적하고, 채널별로 창고 우선순위를 설정할 수 있다.&lt;/li>
&lt;/ol>
&lt;h6>구현 시 고려사항&lt;/h6>&lt;ol>
&lt;li>&lt;strong>데이터 일관성&lt;/strong>: 모든 채널에서 재고 정보가 일치하도록 유지해야 한다.&lt;/li>
&lt;li>&lt;strong>네트워크 지연&lt;/strong>: 실시간 업데이트 시 발생할 수 있는 지연을 최소화해야 한다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 비즈니스 성장에 따라 시스템이 확장될 수 있어야 한다.&lt;/li>
&lt;li>&lt;strong>오류 처리&lt;/strong>: 동기화 과정에서 발생할 수 있는 오류를 효과적으로 관리해야 한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>트랜잭션 관리&lt;br>
데이터베이스의 ACID 속성을 활용하여 트랜잭션의 일관성을 유지한다.&lt;br>
이를 통해 하나의 트랜잭션만 성공하고 나머지는 중단되도록 할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>구현예제&lt;/h3>&lt;p>사용된 주요 기술과 패턴들:&lt;/p>
&lt;ol>
&lt;li>분산 락(Distributed Lock):&lt;br>
Redis를 사용하여 분산 락을 구현.&lt;br>
이는 여러 서버에서 동시에 같은 상품에 대한 구매 요청이 들어올 때도 안전하게 처리할 수 있게 해준다.&lt;br>
Redis의 SETNX 명령어를 활용하여 락의 획득과 해제를 관리한다.&lt;/li>
&lt;li>데이터베이스 트랜잭션:&lt;br>
데이터베이스 수준에서 트랜잭션을 사용하여 재고 확인, 결제 처리, 주문 정보 저장이 모두 하나의 원자적 단위로 처리되도록 보장한다.&lt;br>
만약 중간에 실패가 발생하면 모든 변경사항이 롤백된다.&lt;/li>
&lt;li>SELECT FOR UPDATE 재고를 확인하고 수정할 때 데이터베이스의 row-level 락을 사용.&lt;br>
이를 통해 다른 트랜잭션이 동시에 같은 재고 정보를 수정하는 것을 방지한다.&lt;/li>
&lt;li>멱등성 처리&lt;br>
각 주문 요청에 고유한 idempotency_key를 할당하고, Redis를 사용하여 이를 관리한다.&lt;br>
같은 키로 중복 요청이 들어와도 한 번만 처리되도록 보장한다.&lt;/li>
&lt;li>예외 처리&lt;br>
모든 주요 작업에 대해 적절한 예외 처리를 구현하여, 시스템이 안정적으로 동작하도록 보장한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">timedelta&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">threading&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">dataclasses&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">uuid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">enum&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Enum&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sqlalchemy&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">create_engine&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">select&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sqlalchemy.orm&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sqlalchemy.exc&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">IntegrityError&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 상품 상태를 나타내는 열거형&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Enum&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PENDING&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;pending&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PAYMENT_PROCESSING&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;payment_processing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">COMPLETED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;completed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FAILED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderRequest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PurchaseSystem&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Redis 연결 설정 (동시성 제어를 위한 분산 락 구현에 사용)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6379&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터베이스 연결 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">engine&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;postgresql://user:password@localhost/dbname&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결제 시도 횟수 제한 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">max_retries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">acquire_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">timeout&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;분산 락 획득을 시도합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;product_lock:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_key&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">timeout&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nx&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">release_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;분산 락을 해제합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;product_lock:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock_key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">check_idempotency&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">dict&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;요청의 멱등성을 확인합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;idempotency:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">save_idempotency_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;멱등성 결과를 저장합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setex&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;idempotency:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timedelta&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hours&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">check_and_reserve_inventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Session&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;재고를 확인하고 예약합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SELECT FOR UPDATE를 사용하여 재고 데이터 락&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stmt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">with_for_update&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stmt&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scalar_one&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inventory&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inventory&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="n">quantity&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">order_request&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">OrderRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;결제를 처리합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 결제 처리 로직을 구현합니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 외부 결제 시스템과의 연동이 필요합니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">purchase&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">order_request&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">OrderRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;상품 구매를 처리합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 멱등성 체크&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idempotency_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">check_idempotency&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">idempotency_result&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">idempotency_result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 분산 락 획득 시도&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;다른 거래가 진행 중입니다&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">Session&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">engine&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 트랜잭션 시작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 재고 확인 및 예약&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">check_and_reserve_inventory&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quantity&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;재고가 부족합니다&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결제 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결제 실패 시 롤백은 자동으로 수행됨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;결제 처리에 실패했습니다&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 정보 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Order&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quantity&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_amount&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">OrderStatus&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">COMPLETED&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;order_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;구매가 완료되었습니다&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 멱등성 결과 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_idempotency_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 락 해제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">release_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>시스템을 실제로 운영할 때 고려해야 할 추가 사항들&lt;/h3>&lt;ol>
&lt;li>모니터링과 로깅&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>모든 주문 처리 과정을 로깅하여 문제 발생 시 추적할 수 있어야 합니다.&lt;/li>
&lt;li>시스템의 성능과 안정성을 모니터링해야 합니다.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>성능 최적화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>캐시를 활용하여 자주 조회되는 상품 정보의 접근 속도를 개선할 수 있습니다.&lt;/li>
&lt;li>데이터베이스 인덱스를 적절히 설정하여 조회 성능을 향상시킬 수 있습니다.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>확장성&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>시스템이 성장함에 따라 수평적 확장이 가능하도록 설계해야 합니다.&lt;/li>
&lt;li>마이크로서비스 아키텍처의 도입을 고려할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>RESTful API vs GraphQL API vs Webhook vs Server-sent Events vs Websocket vs WebRTC</title><link>https://buenhyden.github.io/til/2024/12/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc/</link><pubDate>Fri, 20 Dec 2024 06:08:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc/</guid><description>
&lt;h2>RESTful API Vs GraphQL API Vs Webhook Vs Server-sent Events Vs Websocket Vs WebRTC&lt;/h2>&lt;p>API의 여러 유형인 RESTful API, GraphQL API, Webhook, Server-sent Events, WebSocket, WebRTC에 대해 정리하고 비교 분석해보자.&lt;/p>
&lt;p>RESTful API는 HTTP 프로토콜을 기반으로 하는 웹 서비스 아키텍처이다. 리소스를 URI로 표현하고, HTTP 메서드(GET, POST, PUT, DELETE 등)를 사용하여 리소스를 조작한다. 클라이언트-서버 모델을 따르며, 상태를 저장하지 않는 특징이 있다.&lt;/p>
&lt;p>GraphQL은 페이스북에서 개발한 쿼리 언어 및 런타임으로, 클라이언트가 필요한 데이터를 정확하게 요청할 수 있게 해준다. 단일 엔드포인트를 사용하며, 클라이언트가 쿼리를 정의하여 필요한 데이터만 받을 수 있다.&lt;/p>
&lt;p>Webhook은 특정 이벤트가 발생했을 때 실시간으로 정보를 전달하는 방식이다. 서버에서 클라이언트로 HTTP POST 요청을 보내는 방식으로 작동하며, 실시간 업데이트나 알림 시스템에 주로 사용된다.&lt;/p>
&lt;p>SSE는 서버에서 클라이언트로 단방향 실시간 데이터 스트림을 제공하는 기술입니다. HTTP 연결을 통해 서버가 클라이언트에게 업데이트를 푸시할 수 있으며, 실시간 알림이나 업데이트에 적합합니다.&lt;/p>
&lt;p>WebSocket은 클라이언트와 서버 간의 양방향, 전이중 통신을 제공하는 프로토콜이다. 단일 TCP 연결을 통해 실시간 데이터 교환이 가능하며, 채팅 애플리케이션이나 실시간 게임 등에 사용된다.&lt;/p>
&lt;p>WebRTC(Web Real-Time Communication)는 브라우저 간 직접적인 피어-투-피어 통신을 가능하게 하는 기술이다. 비디오, 음성, 데이터의 실시간 통신을 지원하며, 화상 통화나 파일 공유 등에 사용된다.&lt;/p>
&lt;h3>비교 분석 표&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>RESTful API&lt;/th>
&lt;th>GraphQL API&lt;/th>
&lt;th>Webhook&lt;/th>
&lt;th>Server-sent Events&lt;/th>
&lt;th>WebSocket&lt;/th>
&lt;th>WebRTC&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>통신 방향&lt;/td>
&lt;td>양방향&lt;/td>
&lt;td>양방향&lt;/td>
&lt;td>단방향(서버→클라이언트)&lt;/td>
&lt;td>단방향(서버→클라이언트)&lt;/td>
&lt;td>양방향&lt;/td>
&lt;td>양방향&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간성&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>WebSocket&lt;/td>
&lt;td>UDP/TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 형식&lt;/td>
&lt;td>JSON, XML 등&lt;/td>
&lt;td>JSON&lt;/td>
&lt;td>JSON&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>바이너리, 텍스트&lt;/td>
&lt;td>바이너리, 텍스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 유지&lt;/td>
&lt;td>연결 유지 안 함&lt;/td>
&lt;td>연결 유지 안 함&lt;/td>
&lt;td>연결 유지 안 함&lt;/td>
&lt;td>단방향 연결 유지&lt;/td>
&lt;td>양방향 연결 유지&lt;/td>
&lt;td>P2P 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>일반적인 API&lt;/td>
&lt;td>유연한 데이터 요청&lt;/td>
&lt;td>이벤트 기반 알림&lt;/td>
&lt;td>실시간 업데이트&lt;/td>
&lt;td>실시간 양방향 통신&lt;/td>
&lt;td>미디어 스트리밍, P2P 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 표를 통해 각 기술의 특성과 용도를 비교할 수 있다.&lt;br>
선택은 애플리케이션의 요구사항, 실시간성, 양방향 통신 필요 여부, 구현 복잡성 등을 고려하여 결정해야 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>선사용 IT 솔루션</title><link>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</link><pubDate>Fri, 20 Dec 2024 01:43:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</guid><description>
&lt;h2>선사용 IT 솔루션&lt;/h2>&lt;p>선사용 IT 솔루션을 개발하기 위해 필요한 주요 기능과 서비스는 다음과 같다.&lt;br>
이는 해운업계의 디지털 전환 사례와 최신 기술 트렌드를 기반으로 정리되었다.&lt;/p>
&lt;ol>
&lt;li>선박 운영 및 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>선대 관리&lt;/strong>: 선박의 위치, 상태, 운항 스케줄을 실시간으로 모니터링하고 관리하는 기능.&lt;/li>
&lt;li>&lt;strong>연료 효율 관리&lt;/strong>: 연료 소비를 최적화하고 탄소 배출을 줄이기 위한 경로 최적화 및 연료 절감 시스템.&lt;/li>
&lt;li>&lt;strong>선박 유지보수&lt;/strong>: 선박 장비의 상태를 실시간으로 모니터링하고 예측 유지보수를 지원하는 시스템.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>화물 및 물류 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>화물 추적&lt;/strong>: RFID 및 IoT 기술을 활용하여 화물의 위치, 상태, 온도 등을 실시간으로 추적.&lt;/li>
&lt;li>&lt;strong>문서 디지털화&lt;/strong>: 블록체인을 활용한 전자 선하증권(e-BL) 및 기타 물류 문서의 디지털화로 투명성과 보안 강화.&lt;/li>
&lt;li>&lt;strong>물류 최적화&lt;/strong>: 화물 적재 및 하역 작업의 효율성을 높이고, 비용을 절감하는 시스템.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>데이터 분석 및 의사결정 지원&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>빅데이터 분석&lt;/strong>: 선박 운항 데이터와 물류 데이터를 분석하여 운영 효율성과 비용 절감을 위한 인사이트 제공.&lt;/li>
&lt;li>&lt;strong>AI 기반 분석&lt;/strong>: AI를 활용한 운항 경로 최적화, 사고 예방, 장비 고장 예측 등의 기능.&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>고객 서비스 향상&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>실시간 정보 제공&lt;/strong>: 고객에게 화물 상태와 예상 도착 시간 등의 정보를 실시간으로 제공하는 기능.&lt;/li>
&lt;li>&lt;strong>사용자 친화적인 인터페이스&lt;/strong>: 직관적인 UI/UX를 통해 고객과 운영자가 쉽게 시스템을 사용할 수 있게 설계.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>통합 및 자동화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>시스템 통합&lt;/strong>: ERP, WMS 등 기존 시스템과의 원활한 통합을 통해 데이터 공유와 프로세스 간소화.&lt;/li>
&lt;li>&lt;strong>자동화 프로세스&lt;/strong>: 문서 생성, 데이터 입력, 보고서 작성 등 반복 작업의 자동화를 통해 생산성 향상.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>보안 및 규제 준수&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 데이터 암호화, 접근 제어 등으로 민감한 정보를 보호하고 사이버 보안을 강화.&lt;/li>
&lt;li>&lt;strong>국제 규제 준수&lt;/strong>: IMO(국제해사기구) 탄소 배출 규제 및 CII 등급 관리 지원.&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>선원 복지&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>선상 인터넷 서비스&lt;/strong>: 저렴한 위성통신 비용으로 선원들에게 인터넷 접속 환경 제공.&lt;/li>
&lt;li>&lt;strong>안전 관리&lt;/strong>: AI 기반 CCTV 분석으로 선원의 이상 상태나 위험 상황을 사전에 감지하여 대응.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Streaming vs Polling</title><link>https://buenhyden.github.io/til/2024/12/streaming-vs-polling/</link><pubDate>Tue, 17 Dec 2024 08:44:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/streaming-vs-polling/</guid><description>
&lt;h2>Streaming Vs Polling&lt;/h2>&lt;p>Streaming과 polling은 실시간 데이터 전송을 위해 사용되는 두 가지 주요 기술입니다. 각각의 특징과 차이점을 자세히 살펴보겠습니다.&lt;/p>
&lt;h2>Streaming&lt;/h2>&lt;p>Streaming은 데이터를 연속적으로 전송하는 방식입니다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>연속적인 데이터 흐름: 서버에서 클라이언트로 데이터를 지속적으로 전송합니다.&lt;/li>
&lt;li>실시간성: 데이터가 생성되는 즉시 전송되어 높은 실시간성을 제공합니다.&lt;/li>
&lt;li>효율적인 대역폭 사용: 필요한 데이터만 전송하므로 대역폭을 효율적으로 사용합니다.&lt;/li>
&lt;li>지속적인 연결: 클라이언트와 서버 간 연결이 유지됩니다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;ul>
&lt;li>비디오/오디오 스트리밍&lt;/li>
&lt;li>실시간 주식 시세 정보&lt;/li>
&lt;li>라이브 이벤트 중계&lt;/li>
&lt;/ul>
&lt;h2>Polling&lt;/h2>&lt;p>Polling은 클라이언트가 주기적으로 서버에 데이터를 요청하는 방식입니다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>주기적 요청: 클라이언트가 일정 간격으로 서버에 데이터를 요청합니다.&lt;/li>
&lt;li>간단한 구현: HTTP 요청을 사용하여 쉽게 구현할 수 있습니다.&lt;/li>
&lt;li>서버 부하: 불필요한 요청으로 인해 서버에 부담을 줄 수 있습니다.&lt;/li>
&lt;li>실시간성 제한: 폴링 주기에 따라 실시간성이 제한됩니다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;ul>
&lt;li>이메일 확인&lt;/li>
&lt;li>소셜 미디어 피드 업데이트&lt;/li>
&lt;li>간단한 채팅 애플리케이션&lt;/li>
&lt;/ul>
&lt;h2>Streaming Vs Polling 비교 분석표&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Streaming&lt;/th>
&lt;th>Polling&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>서버에서 클라이언트로 실시간 데이터 전송&lt;/td>
&lt;td>클라이언트가 주기적으로 서버에 요청&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 유지 여부&lt;/td>
&lt;td>지속적인 연결 유지&lt;/td>
&lt;td>연결 유지 안 함 (요청마다 새 연결)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 지연 시간&lt;/td>
&lt;td>낮음 (실시간 데이터 전송)&lt;/td>
&lt;td>높음 (요청 주기에 따라 다름)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 부하&lt;/td>
&lt;td>높음 (지속적인 연결 유지로 인한 부하)&lt;/td>
&lt;td>낮음 (요청 주기에 따라 부하 분산 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>복잡 (지속적인 연결 관리 필요)&lt;/td>
&lt;td>간단 (HTTP 요청/응답 기반)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음 (폴링 주기에 의존)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>효율적 (필요한 데이터만 전송)&lt;/td>
&lt;td>비효율적 (불필요한 요청 발생 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>클라이언트 구현&lt;/td>
&lt;td>복잡 (스트림 처리 로직 필요)&lt;/td>
&lt;td>간단 (주기적 HTTP 요청)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>방화벽 통과&lt;/td>
&lt;td>어려울 수 있음&lt;/td>
&lt;td>쉬움 (표준 HTTP 사용)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 사용 사례&lt;/td>
&lt;td>라이브 비디오/오디오 스트리밍, 실시간 분석, 금융 거래 플랫폼&lt;/td>
&lt;td>이메일 확인, 소셜 미디어 피드 업데이트, 시스템 상태 모니터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)</title><link>https://buenhyden.github.io/til/2024/12/database-clustering-and-replication/</link><pubDate>Thu, 05 Dec 2024 15:42:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/database-clustering-and-replication/</guid><description>
&lt;h2>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)&lt;/h2>&lt;p>두 기술은 모두 데이터베이스의 가용성과 성능을 향상시키는 중요한 아키텍처 전략이지만, 각각의 목적과 구현 방식에서 차이가 있다.&lt;/p>
&lt;h3>기본 개념 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>클러스터링 (Clustering)&lt;/th>
&lt;th>레플리케이션 (Replication)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>여러 서버를 하나의 시스템처럼 운영하여 작업을 분산처리하는 방식&lt;/td>
&lt;td>데이터베이스를 복제하여 여러 위치에서 동일한 데이터를 유지하는 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 목적&lt;/td>
&lt;td>성능 향상 및 고가용성 확보&lt;/td>
&lt;td>데이터 안정성 및 가용성 확보&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>작동 방식&lt;/td>
&lt;td>여러 노드가 동시에 작업을 처리&lt;/td>
&lt;td>마스터 DB의 데이터를 슬레이브 DB에 복제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 동기화&lt;/td>
&lt;td>실시간 동기화 필수&lt;/td>
&lt;td>비동기 또는 동기식 복제 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>기술적 특징 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>클러스터링 (Clustering)&lt;/th>
&lt;th>레플리케이션 (Replication)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>노드 역할&lt;/td>
&lt;td>모든 노드가 동등한 역할 수행&lt;/td>
&lt;td>마스터-슬레이브 구조의 역할 구분&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>로드밸런싱&lt;/td>
&lt;td>자동 로드밸런싱 지원&lt;/td>
&lt;td>읽기 작업에 대한 로드밸런싱 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>수평적 확장 용이&lt;/td>
&lt;td>읽기 성능 위주의 확장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장애 대응&lt;/td>
&lt;td>자동 페일오버 지원&lt;/td>
&lt;td>수동 또는 반자동 페일오버&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>장단점 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>클러스터링 (Clustering)&lt;/th>
&lt;th>레플리케이션 (Replication)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>• 높은 가용성&lt;br>• 우수한 확장성&lt;br>• 효율적인 로드밸런싱&lt;br>• 실시간 데이터 동기화&lt;/td>
&lt;td>• 구현이 상대적으로 간단&lt;br>• 비용 효율적&lt;br>• 지리적 분산 용이&lt;br>• 읽기 성능 향상&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>• 구현 비용이 높음&lt;br>• 복잡한 구성&lt;br>• 네트워크 대역폭 필요&lt;br>• 관리 어려움&lt;/td>
&lt;td>• 데이터 일관성 보장 어려움&lt;br>• 쓰기 성능 향상 제한적&lt;br>• 마스터 노드 병목 현상&lt;br>• 복제 지연 가능성&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>적용 시나리오&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>클러스터링 (Clustering)&lt;/th>
&lt;th>레플리케이션 (Replication)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>최적 사용 사례&lt;/td>
&lt;td>• 고성능이 필요한 트랜잭션 처리&lt;br>• 실시간 데이터 처리&lt;br>• 무중단 서비스 필요&lt;br>• 대규모 동시 접속 처리&lt;/td>
&lt;td>• 데이터 백업&lt;br>• 읽기 작업이 많은 서비스&lt;br>• 지역별 서비스 제공&lt;br>• 재해 복구 대비&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>산업 분야&lt;/td>
&lt;td>• 금융 거래 시스템&lt;br>• 통신 서비스&lt;br>• 대형 전자상거래&lt;br>• 실시간 예약 시스템&lt;/td>
&lt;td>• 콘텐츠 제공 서비스&lt;br>• 분석 리포팅 시스템&lt;br>• 글로벌 서비스&lt;br>• 미디어 스트리밍&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>구현 고려사항&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>클러스터링 (Clustering)&lt;/th>
&lt;th>레플리케이션 (Replication)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>네트워크 요구사항&lt;/td>
&lt;td>• 고속 전용 네트워크 필요&lt;br>• 낮은 지연시간 필수&lt;br>• 안정적인 네트워크 연결&lt;/td>
&lt;td>• 일반 네트워크 사용 가능&lt;br>• 비동기 복제 시 네트워크 요구사항 낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>하드웨어 요구사항&lt;/td>
&lt;td>• 고성능 서버 필요&lt;br>• 동일한 사양의 노드 권장&lt;br>• 충분한 메모리&lt;/td>
&lt;td>• 마스터 노드 성능 중요&lt;br>• 슬레이브는 상대적으로 낮은 사양 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>운영 관리&lt;/td>
&lt;td>• 전문 관리자 필요&lt;br>• 모니터링 시스템 필수&lt;br>• 정기적인 유지보수&lt;/td>
&lt;td>• 상대적으로 간단한 관리&lt;br>• 백업 정책 중요&lt;br>• 복제 상태 모니터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>비용 분석&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>클러스터링 (Clustering)&lt;/th>
&lt;th>레플리케이션 (Replication)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>초기 구축 비용&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>운영 비용&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수 비용&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>중간~낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ROI&lt;/td>
&lt;td>장기적으로 높음&lt;/td>
&lt;td>중단기적으로 높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>특히 주목할 만한 차이점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>클러스터링은 모든 노드가 동등한 역할을 수행하는 반면, 레플리케이션은 마스터-슬레이브 구조를 가진다.&lt;/li>
&lt;li>클러스터링은 실시간 데이터 동기화가 필수적이지만, 레플리케이션은 비동기식 복제도 가능하다.&lt;/li>
&lt;li>비용 측면에서 클러스터링이 전반적으로 더 높은 투자가 필요하지만, 고성능과 고가용성을 요구하는 시스템에서는 필수적인 선택이 될 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>실제 적용&lt;/h3>&lt;p>많은 현대적인 분산 데이터베이스 시스템에서는 클러스터링과 레플리케이션을 결합하여 최적의 성능과 가용성을 달성한다.&lt;br>
예를 들어, Apache Cassandra, Google Spanner 등의 시스템은 두 기술의 장점을 통합하여 사용한다.&lt;/p>
&lt;h3>선택 고려 사항&lt;/h3>&lt;ul>
&lt;li>&lt;strong>성능 요구사항&lt;/strong>: 높은 처리량이 필요하면 클러스터링&lt;/li>
&lt;li>&lt;strong>가용성 중요성&lt;/strong>: 시스템 지속성이 중요하면 레플리케이션&lt;/li>
&lt;li>&lt;strong>데이터 특성&lt;/strong>: 대규모 트랜잭션은 클러스터링, 읽기 집중적 워크로드는 레플리케이션&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>라이브러리 (Library)와 프레임워크 (Framework)</title><link>https://buenhyden.github.io/til/2024/12/library-and-framework/</link><pubDate>Tue, 03 Dec 2024 06:47:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/library-and-framework/</guid><description>
&lt;h2>라이브러리 (Library)와 프레임워크 (Framework)&lt;/h2>&lt;p>프로그래밍에서 라이브러리와 프레임워크는 소프트웨어 개발의 핵심 도구&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 기준&lt;/th>
&lt;th>라이브러리 (Library)&lt;/th>
&lt;th>프레임워크 (Framework)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>특정 기능을 수행하는 코드의 재사용 가능한 모음&lt;/td>
&lt;td>애플리케이션 개발을 위한 기본 구조와 규칙의 집합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>제어 흐름&lt;/td>
&lt;td>개발자가 직접 제어 (Caller가 Callee를 호출)&lt;/td>
&lt;td>프레임워크가 제어 (IoC: Inversion of Control)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유연성&lt;/td>
&lt;td>높음 (필요한 부분만 선택적으로 사용 가능)&lt;/td>
&lt;td>상대적으로 낮음 (정해진 규칙과 구조를 따라야 함)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>학습 곡선&lt;/td>
&lt;td>상대적으로 낮음 (특정 기능만 학습)&lt;/td>
&lt;td>높음 (전체 구조와 규칙을 이해해야 함)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>코드 구조화&lt;/td>
&lt;td>개발자가 직접 설계&lt;/td>
&lt;td>프레임워크가 기본 구조 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대표적 예시&lt;/td>
&lt;td>• React.js (UI 라이브러리)&lt;br>• NumPy (수치 계산)&lt;br>• jQuery (DOM 조작)&lt;br>• Requests (HTTP 통신)&lt;/td>
&lt;td>• Django (Python 웹)&lt;br>• Spring (Java 엔터프라이즈)&lt;br>• Angular (웹 프론트엔드)&lt;br>• Laravel (PHP 웹)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 장점&lt;/td>
&lt;td>• 필요한 기능만 선택적 사용&lt;br>• 가볍고 유연한 구조&lt;br>• 빠른 학습과 적용 가능&lt;br>• 다른 도구와 쉽게 통합&lt;/td>
&lt;td>• 일관된 코드 구조&lt;br>• 표준화된 개발 방식&lt;br>• 보안, 성능 최적화 제공&lt;br>• 큰 규모의 프로젝트에 적합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 단점&lt;/td>
&lt;td>• 구조화된 가이드 부족&lt;br>• 일관성 있는 코드 작성 어려움&lt;br>• 큰 프로젝트에서 관리 어려움&lt;/td>
&lt;td>• 학습에 많은 시간 필요&lt;br>• 유연성 제한&lt;br>• 불필요한 기능도 포함될 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 시기&lt;/td>
&lt;td>• 특정 기능만 필요할 때&lt;br>• 작은 규모의 프로젝트&lt;br>• 최대한의 자유도가 필요할 때&lt;/td>
&lt;td>• 큰 규모의 프로젝트&lt;br>• 표준화된 개발이 필요할 때&lt;br>• 팀 단위 개발 시&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>라이브러리(Library)&lt;/h3>&lt;p>라이브러리는 특정 기능을 수행하는 함수, 클래스, 모듈 등의 모음이다.&lt;br>
개발자가 필요할 때 호출하여 사용할 수 있는 도구 모음이라고 볼 수 있다&lt;/p>
&lt;h3>프레임워크(Framework)&lt;/h3>&lt;p>프레임워크는 애플리케이션의 기본 구조를 제공하는 더 큰 규모의 소프트웨어 플랫폼이다.&lt;br>
프레임워크는 애플리케이션 개발의 전체적인 흐름과 구조를 정의한다.&lt;br>
특정 방식으로 코드를 작성하도록 규칙을 정하고, 전체적인 아키텍처를 제공한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Validation and Verification</title><link>https://buenhyden.github.io/til/2024/11/validation-and-verification/</link><pubDate>Thu, 28 Nov 2024 08:03:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/validation-and-verification/</guid><description>
&lt;h2>Validation and Verification&lt;/h2>&lt;p>소프트웨어 테스팅에서 Validation과 Verification은 서로 다른 관점과 목적을 가지고 있다.&lt;br>
Verification은 &amp;ldquo;제품을 올바르게 만들고 있는가?&amp;ldquo;를 확인하는 과정이고, Validation은 &amp;ldquo;올바른 제품을 만들고 있는가?&amp;ldquo;를 확인하는 과정이다.&lt;br>
이러한 근본적인 차이는 테스트 방법과 접근 방식에 큰 영향을 미친다.&lt;/p>
&lt;h3>Verification&lt;/h3>&lt;p>Verification은 &lt;strong>&amp;ldquo;우리가 제품을 올바르게 만들고 있는가?&amp;rdquo;&lt;/strong> 라는 질문에 답하는 프로세스로, 개발 과정 중에 제품이 명세된 요구사항과 설계 문서에 따라 정확하게 구현되고 있는지를 검증한다.&lt;/p>
&lt;p>개발자와 테스터가 수행하며, 코드 레벨에서의 정확성과 기술적 완성도를 중요시한다.&lt;br>
예를 들어, 특정 함수가 입력값에 대해 정확한 출력값을 반환하는지, 데이터베이스 쿼리가 예상대로 작동하는지 등을 확인한다.&lt;/p>
&lt;h3>Validation&lt;/h3>&lt;p>Validation은 &lt;strong>&amp;ldquo;우리가 올바른 제품을 만들고 있는가?&amp;rdquo;&lt;/strong> 라는 질문에 답하는 프로세스로, 개발된 제품이 실제 사용자의 요구사항과 기대를 충족시키는지 확인하는 과정이다.&lt;/p>
&lt;p>사용자 관점에서의 테스트가 주를 이루며, 실제 운영 환경에서의 적합성과 사용성을 중요시한다.&lt;br>
예를 들어, 사용자가 웹사이트에서 원하는 정보를 쉽게 찾을 수 있는지, 모바일 앱의 인터페이스가 직관적인지 등을 확인한다.&lt;/p>
&lt;h3>프로세스와 방법론의 차이&lt;/h3>&lt;p>Verification은 주로 정적 테스팅 방법을 사용한다.&lt;br>
코드 리뷰, 문서 검토, 정적 분석 등이 여기에 해당한다.&lt;br>
Validation은 동적 테스팅 방법을 주로 사용하며, 실제 시스템을 실행하면서 테스트를 수행한다.&lt;br>
사용자 시나리오 테스트, 성능 테스트, 사용성 테스트 등이 이에 해당한다.&lt;/p>
&lt;h3>품질 보증에서의 역할&lt;/h3>&lt;p>두 테스트 방식은 상호 보완적인 관계에 있다.&lt;br>
Verification이 제품의 기술적 완성도를 보장한다면, Validation은 제품의 실용적 가치를 보장한다.&lt;br>
따라서 효과적인 품질 보증을 위해서는 두 가지 접근 방식을 모두 적절히 활용해야 한다.&lt;/p>
&lt;h3>Validation and Verification&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 기준&lt;/th>
&lt;th>Verification (검증)&lt;/th>
&lt;th>Validation (확인)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>제품을 올바르게 만들고 있는지 검증 (Building the product right)&lt;/td>
&lt;td>올바른 제품을 만들고 있는지 확인 (Building the right product)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>목적&lt;/td>
&lt;td>개발 중인 제품이 명세와 표준을 준수하는지 확인&lt;/td>
&lt;td>개발된 제품이 실제 사용자의 요구사항을 충족하는지 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수행 시점&lt;/td>
&lt;td>개발 단계에서 지속적으로 수행&lt;/td>
&lt;td>개발 후반부나 완료 단계에서 수행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수행 주체&lt;/td>
&lt;td>개발팀, QA팀, 테스트 엔지니어&lt;/td>
&lt;td>최종 사용자, 고객, QA팀&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>검증 대상&lt;/td>
&lt;td>코드, 문서, 설계 명세, 기술 표준 준수 여부&lt;/td>
&lt;td>사용자 요구사항, 비즈니스 목표 달성 여부&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 활동&lt;/td>
&lt;td>- 코드 리뷰&lt;br>- 정적 분석&lt;br>- 단위 테스트&lt;br>- 통합 테스트&lt;br>- 기술 명세 검토&lt;/td>
&lt;td>- 시스템 테스트&lt;br>- 인수 테스트&lt;br>- 베타 테스트&lt;br>- 사용성 테스트&lt;br>- 성능 테스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>테스트 방식&lt;/td>
&lt;td>- 화이트박스 테스팅&lt;br>- 정적 테스팅&lt;br>- 구조 기반 테스팅&lt;/td>
&lt;td>- 블랙박스 테스팅&lt;br>- 동적 테스팅&lt;br>- 행위 기반 테스팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>평가 기준&lt;/td>
&lt;td>- 코딩 표준 준수&lt;br>- 기술 명세 충족&lt;br>- 설계 요구사항 만족&lt;/td>
&lt;td>- 사용자 요구사항 충족&lt;br>- 비즈니스 목표 달성&lt;br>- 실제 환경에서의 적합성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 산출물&lt;/td>
&lt;td>- 코드 리뷰 보고서&lt;br>- 테스트 결과 문서&lt;br>- 정적 분석 보고서&lt;br>- 기술 검토 문서&lt;/td>
&lt;td>- 사용자 인수 테스트 보고서&lt;br>- 시스템 테스트 결과&lt;br>- 성능 테스트 보고서&lt;br>- 베타 테스트 피드백&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오류 발견 시점&lt;/td>
&lt;td>개발 초기 단계에서 발견 가능&lt;/td>
&lt;td>개발 후반부나 실제 사용 단계에서 발견&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용 영향&lt;/td>
&lt;td>초기에 문제 발견으로 수정 비용 최소화&lt;/td>
&lt;td>후반부 발견으로 수정 비용이 상대적으로 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 범위&lt;/td>
&lt;td>개별 컴포넌트나 모듈 수준의 검증&lt;/td>
&lt;td>전체 시스템 수준의 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자동화 가능성&lt;/td>
&lt;td>높은 자동화 가능성 (단위 테스트, 정적 분석 등)&lt;/td>
&lt;td>부분적 자동화 가능 (일부 시스템 테스트)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>품질 관점&lt;/td>
&lt;td>내부 품질 (기술적 완성도) 중심&lt;/td>
&lt;td>외부 품질 (사용자 만족도) 중심&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리스크 관리&lt;/td>
&lt;td>기술적 리스크 감소에 중점&lt;/td>
&lt;td>비즈니스 리스크 감소에 중점&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>동적테스트(Dynamic Test)와 정적테스트(Static Test)</title><link>https://buenhyden.github.io/til/2024/11/dynamic-test-and-static-test/</link><pubDate>Thu, 28 Nov 2024 02:35:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/dynamic-test-and-static-test/</guid><description>
&lt;h2>동적테스트(Dynamic Test)와 정적테스트(Static Test)&lt;/h2>&lt;p>동적테스트 (Dynamic Test)과 정적테스트(Static Test)&lt;/p>
&lt;p>소프트웨어 테스팅은 프로그램의 품질을 확인하고 오류를 찾아내는 과정.&lt;br>
이는 크게 정적 테스팅과 동적 테스팅으로 나눌 수 있다.&lt;/p>
&lt;p>효과적인 테스팅을 위해서는 두 방식을 적절히 조합하여 사용하는 것이 중요하다.&lt;br>
예를 들어:&lt;/p>
&lt;ol>
&lt;li>개발 초기 단계:
&lt;ul>
&lt;li>정적 테스팅으로 기본적인 문제 해결&lt;/li>
&lt;li>코드 리뷰로 설계 문제 조기 발견&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개발 중기:
&lt;ul>
&lt;li>단위 테스트로 개별 기능 검증&lt;/li>
&lt;li>통합 테스트로 모듈 간 상호작용 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>개발 후기:
&lt;ul>
&lt;li>시스템 테스트로 전체 기능 검증&lt;/li>
&lt;li>성능 테스트로 실제 환경 적합성 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>동적 테스트 (Dynamic Test)&lt;/h3>&lt;p>소프트웨어 테스트 기법 중 하나로, 프로그램을 실제로 실행하면서 소프트웨어의 동작을 분석하고 평가하는 방법.&lt;br>
소프트웨어의 코드를 직접 실행시키며 수행하는 테스트 유형의 총칭.&lt;br>
소프트웨어의 런타임 동작을 관찰하고 평가하여 기능, 성능, 안정성 등을 검증한다.&lt;/p>
&lt;h4>동적 테스팅의 기본 원리&lt;/h4>&lt;p>동적 테스팅은 실행 시점의 프로그램 행동을 관찰한다.&lt;br>
프로그램이 실제 환경에서 어떻게 동작하는지, 어떤 결과를 출력하는지, 얼마나 빠르게 처리하는지 등을 직접적으로 확인할 수 있다.&lt;br>
예를 들어, 웹 애플리케이션을 테스트할 때 실제 사용자처럼 로그인을 시도하고 데이터를 입력하면서 시스템의 반응을 검증한다.&lt;/p>
&lt;h4>동적 테스팅의 특징&lt;/h4>&lt;ol>
&lt;li>실행 기반: 프로그램을 실제로 실행하여 메모리 사용, 성능, 보안 취약점, 오류 등을 분석한다.&lt;/li>
&lt;li>테스트 환경: 소프트웨어가 실행될 실제 또는 가상 환경에서 분석이 이루어진다.&lt;/li>
&lt;li>런타임 문제 발견: 메모리 누수, 경쟁 조건, 예외 처리 문제 등 실행 중에만 드러나는 문제를 발견할 수 있다.&lt;/li>
&lt;li>실제 사용 환경 반영: 소프트웨어가 실제로 어떻게 동작하는지, 실제 환경에서의 성능과 안정성을 평가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h4>동적 테스팅의 장점&lt;/h4>&lt;ol>
&lt;li>오류 탐색 정확도 높음: 실제 실행 환경에서 테스트하므로 오류를 정확하게 찾아낼 수 있다.&lt;/li>
&lt;li>실제 사용 시나리오 검증: 사용자 관점에서 소프트웨어의 동작을 검증할 수 있다.&lt;/li>
&lt;li>복잡한 버그 발견: 여러 컴포넌트 간의 상호작용에서 발생하는 복잡한 버그를 찾아낼 수 있다.&lt;/li>
&lt;li>성능 및 보안 평가: 실제 운영 환경에서의 성능을 측정하고 보안 취약점을 발견할 수 있다.&lt;/li>
&lt;li>사용자 경험 검증: 실제 사용자 상호작용을 시뮬레이션하여 사용자 경험을 검증할 수 있다.&lt;/li>
&lt;li>조기 피드백: 개발 과정 초기에 문제를 발견하여 효과적인 개선이 가능하다.&lt;/li>
&lt;/ol>
&lt;h4>동적 테스팅 비교 분석&lt;/h4>&lt;p>각 테스트 방법은 소프트웨어 개발 생명주기의 다른 단계에서 중요한 역할을 한다:&lt;/p>
&lt;ol>
&lt;li>단위 테스트는 개발 초기 단계에서 개별 코드 단위의 정확성을 확인한다.&lt;/li>
&lt;li>통합 테스트는 여러 모듈이 결합될 때 정상적으로 작동하는지 검증한다.&lt;/li>
&lt;li>기능 테스트는 소프트웨어의 기능적 요구사항 충족 여부를 확인한다.&lt;/li>
&lt;li>보안 테스트는 시스템의 취약점을 식별하고 보안 위협을 방지한다.&lt;/li>
&lt;li>성능 테스트는 시스템의 속도, 안정성, 확장성 등을 평가한다.&lt;/li>
&lt;li>수용 테스트는 최종 사용자 관점에서 요구사항 충족 여부를 확인한다.&lt;/li>
&lt;li>스모크 테스트는 빌드의 기본적인 안정성을 빠르게 확인한다.&lt;/li>
&lt;li>엔드투엔드 테스트는 전체 시스템의 흐름을 처음부터 끝까지 검증한다.&lt;/li>
&lt;/ol>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>테스트 유형&lt;/th>
&lt;th>주요 목적&lt;/th>
&lt;th>테스트 범위&lt;/th>
&lt;th>수행 시점&lt;/th>
&lt;th>수행 주체&lt;/th>
&lt;th>특징&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>단위테스트&lt;/td>
&lt;td>개별 구성 요소의 정확성 검증&lt;/td>
&lt;td>함수, 메서드, 클래스 단위&lt;/td>
&lt;td>개발 단계&lt;/td>
&lt;td>개발자&lt;/td>
&lt;td>자동화가 용이, 빠른 피드백 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통합테스트&lt;/td>
&lt;td>모듈 간 상호작용 검증&lt;/td>
&lt;td>여러 모듈의 결합&lt;/td>
&lt;td>단위테스트 이후&lt;/td>
&lt;td>개발자/QA&lt;/td>
&lt;td>모듈 간 인터페이스 검증에 중점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기능테스트&lt;/td>
&lt;td>기능적 요구사항 충족 확인&lt;/td>
&lt;td>개별 기능 단위&lt;/td>
&lt;td>개발 완료 후&lt;/td>
&lt;td>QA 팀&lt;/td>
&lt;td>사용자 시나리오 기반 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안테스트&lt;/td>
&lt;td>보안 취약점 발견&lt;/td>
&lt;td>전체 시스템&lt;/td>
&lt;td>개발 후반/운영 중&lt;/td>
&lt;td>보안 전문가&lt;/td>
&lt;td>주기적인 수행 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능테스트&lt;/td>
&lt;td>시스템 성능 검증&lt;/td>
&lt;td>전체 시스템&lt;/td>
&lt;td>개발 후반&lt;/td>
&lt;td>성능 테스트 전문가&lt;/td>
&lt;td>특수 도구 활용 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수용테스트&lt;/td>
&lt;td>사용자 요구사항 충족 확인&lt;/td>
&lt;td>전체 시스템&lt;/td>
&lt;td>개발 완료 후&lt;/td>
&lt;td>최종 사용자/고객&lt;/td>
&lt;td>실제 사용자 참여 필수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>스모크테스트&lt;/td>
&lt;td>기본 기능 동작 확인&lt;/td>
&lt;td>핵심 기능&lt;/td>
&lt;td>빌드 직후&lt;/td>
&lt;td>QA 팀&lt;/td>
&lt;td>빠른 수행, 간단한 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>엔드투엔드테스트&lt;/td>
&lt;td>전체 비즈니스 프로세스 검증&lt;/td>
&lt;td>전체 시스템&lt;/td>
&lt;td>통합 완료 후&lt;/td>
&lt;td>QA 팀&lt;/td>
&lt;td>실제 환경과 유사한 조건에서 수행&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>정적 테스트(Static Test)&lt;/h3>&lt;p>프로그램을 실행하지 않고 수행하는 테스트 방식&lt;br>
소프트웨어 개발 과정에서 생산되는 문서(코드, 설계서, 분석서, 계획서, 표준)에 대한 검토를 통해 오류를 발견하는 비실행 기반 테스트.&lt;/p>
&lt;h4>정적 테스팅의 기본 원리&lt;/h4>&lt;p>정적 테스팅은 소프트웨어의 정적 측면, 즉 실행하지 않고도 확인할 수 있는 특성들을 검사한다.&lt;br>
예를 들어, 코딩 표준 준수 여부, 변수 명명 규칙, 들여쓰기 등의 코드 스타일부터 메모리 누수 가능성이나 보안 취약점과 같은 잠재적 문제까지 다양한 측면을 검토한다.&lt;/p>
&lt;h4>정적 테스팅의 특징&lt;/h4>&lt;ol>
&lt;li>코드 실행 없이 수행: 프로그램을 실행하지 않고 소스 코드나 문서를 검토&lt;/li>
&lt;li>조기 결함 발견: 개발 초기 단계에서 잠재적 문제를 식별&lt;/li>
&lt;li>다양한 검토 대상: 코드, 요구사항 문서, 설계 문서 등 다양한 산출물 검토&lt;/li>
&lt;li>수동 및 자동화 방식: 인력에 의한 리뷰와 도구를 이용한 자동 분석 병행&lt;/li>
&lt;li>코딩 표준 준수 확인: 코딩 규칙, 가이드라인 준수 여부 검사&lt;/li>
&lt;/ol>
&lt;h4>정적 테스팅의 장점&lt;/h4>&lt;ol>
&lt;li>조기 결함 발견: 개발 초기에 문제를 발견하여 수정 비용과 시간 절감&lt;/li>
&lt;li>비용 효율성: 동적 테스팅에 비해 적은 비용으로 결함 발견 가능&lt;/li>
&lt;li>코드 품질 향상: 코딩 표준 준수와 구조적 문제 해결로 전반적인 코드 품질 개선&lt;/li>
&lt;li>보안성 강화: 보안 취약점을 조기에 발견하고 수정 가능&lt;/li>
&lt;li>개발 생산성 향상: 결함의 조기 발견으로 개발 과정의 효율성 증대&lt;/li>
&lt;li>협업 개선: 코드 리뷰를 통한 팀원 간 지식 공유와 의사소통 촉진&lt;/li>
&lt;li>테스트 범위 확대: 동적 테스팅으로 발견하기 어려운 결함 식별 가능&lt;/li>
&lt;/ol>
&lt;h4>정적 테스팅 비교 분석&lt;/h4>&lt;h5>Reviews (리뷰)&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>분류&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>적용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Informal Review&lt;/td>
&lt;td>• 공식적인 절차 없이 진행되는 검토 방식&lt;br>• 개발자 간 자유로운 토론과 피드백&lt;/td>
&lt;td>• 절차와 문서화 최소화&lt;br>• 빠른 피드백&lt;br>• 자유로운 의견 교환&lt;/td>
&lt;td>• 즉각적인 피드백 가능&lt;br>• 팀 내 지식 공유 촉진&lt;br>• 낮은 진입 장벽&lt;/td>
&lt;td>• 체계적인 추적이 어려움&lt;br>• 검토 누락 가능성&lt;br>• 품질 보증의 공식적 증거로 부족&lt;/td>
&lt;td>• 일상적인 코드 검토&lt;br>• quick fix 검증&lt;br>• 소규모 변경사항 검토&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Technical Review&lt;/td>
&lt;td>• 기술적 관점에서의 상세 검토&lt;br>• 동료 검토 중심의 체계적 접근&lt;/td>
&lt;td>• 기술적 완성도 중점&lt;br>• 대안 제시&lt;br>• 체크리스트 활용&lt;/td>
&lt;td>• 기술적 결함 조기 발견&lt;br>• 설계 개선 기회 제공&lt;br>• 기술 표준 준수 확인&lt;/td>
&lt;td>• 많은 시간과 자원 소요&lt;br>• 참여자의 전문성 필요&lt;br>• 범위 설정의 어려움&lt;/td>
&lt;td>• 아키텍처 검토&lt;br>• 성능 최적화 검증&lt;br>• 보안 취약점 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Walkthrough&lt;/td>
&lt;td>• 작성자가 주도하는 단계별 검토&lt;br>• 교육적 효과 중시&lt;/td>
&lt;td>• 시나리오 기반 검토&lt;br>• 상호 학습 기회&lt;br>• 단계별 설명&lt;/td>
&lt;td>• 지식 전파 효과적&lt;br>• 팀 이해도 향상&lt;br>• 새로운 관점 발견&lt;/td>
&lt;td>• 작성자 편향 가능성&lt;br>• 시간 소요가 큼&lt;br>• 객관성 확보 어려움&lt;/td>
&lt;td>• 신규 팀원 교육&lt;br>• 복잡한 로직 설명&lt;br>• 프로세스 이해&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Inspection&lt;/td>
&lt;td>• 가장 공식적이고 체계적인 검토&lt;br>• 철저한 문서화와 추적&lt;/td>
&lt;td>• 역할 분담 명확&lt;br>• 체계적 절차&lt;br>• 상세한 문서화&lt;/td>
&lt;td>• 높은 결함 발견율&lt;br>• 품질 보증 증거 확보&lt;br>• 체계적 개선 가능&lt;/td>
&lt;td>• 높은 비용과 시간&lt;br>• 과도한 문서화 부담&lt;br>• 유연성 부족&lt;/td>
&lt;td>• 중요 시스템 검증&lt;br>• 품질 인증 준비&lt;br>• 규제 준수 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>Static Analysis (정적 분석)&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>분류&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>적용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Syntax Analysis&lt;/td>
&lt;td>• 코드의 문법적 오류 검출&lt;br>• 컴파일러 수준의 검사&lt;/td>
&lt;td>• 자동화된 검사&lt;br>• 즉각적 피드백&lt;br>• 기본적 오류 검출&lt;/td>
&lt;td>• 빠른 오류 발견&lt;br>• 개발 생산성 향상&lt;br>• 기본적 품질 보장&lt;/td>
&lt;td>• 의미적 오류 발견 불가&lt;br>• 단순 오류만 검출&lt;br>• 컨텍스트 이해 부족&lt;/td>
&lt;td>• 컴파일 전 검사&lt;br>• IDE 통합 검사&lt;br>• 기본 코드 검증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Flow Analysis&lt;/td>
&lt;td>• 데이터의 흐름과 사용 패턴 분석&lt;br>• 변수 사용의 적절성 검증&lt;/td>
&lt;td>• 변수 추적&lt;br>• 초기화 검사&lt;br>• 사용 패턴 분석&lt;/td>
&lt;td>• 데이터 관련 버그 발견&lt;br>• 메모리 누수 방지&lt;br>• 안정성 향상&lt;/td>
&lt;td>• 분석 비용 높음&lt;br>• 오탐 가능성&lt;br>• 복잡한 패턴 분석 어려움&lt;/td>
&lt;td>• 메모리 관리 검증&lt;br>• 변수 사용 분석&lt;br>• 초기화 오류 검출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Control Flow Analysis&lt;/td>
&lt;td>• 프로그램 실행 경로 분석&lt;br>• 로직 흐름 검증&lt;/td>
&lt;td>• 경로 분석&lt;br>• 도달성 검사&lt;br>• 순환 복잡도 측정&lt;/td>
&lt;td>• 논리적 오류 발견&lt;br>• 코드 복잡도 관리&lt;br>• 실행 경로 최적화&lt;/td>
&lt;td>• 동적 경로 예측 한계&lt;br>• 복잡한 조건 분석 어려움&lt;br>• 성능 오버헤드&lt;/td>
&lt;td>• 분기문 검증&lt;br>• 데드코드 탐지&lt;br>• 복잡도 측정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Code Quality Analysis&lt;/td>
&lt;td>• 코딩 표준 준수 여부 검사&lt;br>• 품질 메트릭스 측정&lt;/td>
&lt;td>• 표준 준수 검사&lt;br>• 메트릭스 측정&lt;br>• 품질 지표 산출&lt;/td>
&lt;td>• 일관된 코드 품질&lt;br>• 유지보수성 향상&lt;br>• 객관적 품질 평가&lt;/td>
&lt;td>• 맥락 이해 부족&lt;br>• 과도한 규칙 적용&lt;br>• 거짓 양성 보고&lt;/td>
&lt;td>• 코딩 표준 검증&lt;br>• 품질 지표 측정&lt;br>• 리팩토링 대상 식별&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>Formal Methods (정형 기법)&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>분류&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>적용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Model Checking&lt;/td>
&lt;td>• 시스템 모델의 수학적 검증&lt;br>• 상태 공간 탐색&lt;/td>
&lt;td>• 형식적 검증&lt;br>• 전수 검사&lt;br>• 자동화된 분석&lt;/td>
&lt;td>• 완벽한 검증 가능&lt;br>• 중요 속성 보장&lt;br>• 숨은 오류 발견&lt;/td>
&lt;td>• 높은 복잡도&lt;br>• 전문성 요구&lt;br>• 큰 시스템에 적용 어려움&lt;/td>
&lt;td>• 안전중심 시스템&lt;br>• 프로토콜 검증&lt;br>• 동시성 검사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Theorem Proving&lt;/td>
&lt;td>• 수학적 증명을 통한 검증&lt;br>• 논리적 정확성 입증&lt;/td>
&lt;td>• 수학적 엄밀성&lt;br>• 형식적 명세&lt;br>• 증명 기반 접근&lt;/td>
&lt;td>• 절대적 정확성&lt;br>• 핵심 속성 보장&lt;br>• 수학적 완전성&lt;/td>
&lt;td>• 매우 높은 비용&lt;br>• 전문가 필요&lt;br>• 실용성 제한적&lt;/td>
&lt;td>• 핵심 알고리즘 검증&lt;br>• 보안 프로토콜&lt;br>• 미션크리티컬 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>마이그레이션 (Migration)</title><link>https://buenhyden.github.io/til/2024/11/migration/</link><pubDate>Tue, 26 Nov 2024 15:05:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/migration/</guid><description>
&lt;h2>마이그레이션 (Migration)&lt;/h2>&lt;p>마이그레이션(Migration)은 IT 분야에서 데이터, 시스템, 애플리케이션 등을 한 환경에서 다른 환경으로 이동하는 과정을 의미한다.&lt;/p>
&lt;p>마이그레이션은 기존 시스템 환경에서 새로운 환경으로 전환하는 것을 의미한다.&lt;br>
주요 목적은 비즈니스 선진화와 비용 절감, 시스템 성능 향상, 보안 강화 등이다.&lt;/p>
&lt;h3>마이그레이션의 유형&lt;/h3>&lt;ol>
&lt;li>데이터 마이그레이션: 데이터를 한 스토리지에서 다른 스토리지로 이동.&lt;/li>
&lt;li>애플리케이션 마이그레이션: 소프트웨어를 새로운 환경으로 이동.&lt;/li>
&lt;li>클라우드 마이그레이션: 온프레미스에서 클라우드로, 또는 클라우드 간 이동.&lt;/li>
&lt;li>비즈니스 프로세스 마이그레이션: 비즈니스 운영 방식 최적화를 위한 이동.&lt;/li>
&lt;/ol>
&lt;h3>마이그레이션 전략 (6R)&lt;/h3>&lt;ol>
&lt;li>Rehost (리호스팅): 애플리케이션 구조 변경 없이 클라우드로 전환&lt;/li>
&lt;li>Replatform (리플랫폼): 클라우드 환경의 일부 서비스를 활용하여 전환&lt;/li>
&lt;li>Refactor (리팩터): 클라우드 환경에 적합하게 애플리케이션 구조 변경&lt;/li>
&lt;li>Repurchase (리퍼체이스): 기존 시스템을 SaaS로 대체&lt;/li>
&lt;li>Retire (리타이어): 기존 시스템 폐기&lt;/li>
&lt;li>Retain (리테인): 현 상태 유지&lt;/li>
&lt;/ol>
&lt;h3>마이그레이션 과정&lt;/h3>&lt;ol>
&lt;li>계획: 요구사항 분석, 목표 설정, 전략 수립&lt;/li>
&lt;li>실행: 데이터 또는 시스템 이전&lt;/li>
&lt;li>검증: 이전된 데이터나 시스템의 정확성 및 성능 확인&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;/h3>&lt;ol>
&lt;li>데이터 손실 위험: 마이그레이션 중 데이터 손실 가능성 고려&lt;/li>
&lt;li>보안: 데이터 암호화 및 보안 조치 필요&lt;/li>
&lt;li>호환성: 새 환경과의 호환성 확인&lt;/li>
&lt;li>성능: 마이그레이션 후 성능 저하 가능성 고려&lt;/li>
&lt;li>비용: 예상치 못한 추가 비용 발생 가능성&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>API Gateway</title><link>https://buenhyden.github.io/til/2024/11/api-gateway/</link><pubDate>Tue, 26 Nov 2024 09:40:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/api-gateway/</guid><description>
&lt;h2>API Gateway&lt;/h2>&lt;p>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트&lt;/p>
&lt;h3>주요 기능&lt;/h3>&lt;ol>
&lt;li>
&lt;p>요청 라우팅 및 프록시&lt;br>
API Gateway는 클라이언트의 요청을 받아 적절한 백엔드 서비스로 라우팅한다.&lt;br>
이는 여러 마이크로서비스의 엔드포인트를 단일화하여 관리를 용이하게 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>인증 및 권한 부여&lt;br>
클라이언트의 요청에 대한 인증(Authentication)과 권한 부여(Authorization)를 처리한다.&lt;br>
이를 통해 각 마이크로서비스에서 중복으로 보안 로직을 구현할 필요가 없어진다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프로토콜 변환&lt;br>
클라이언트와 서버 간의 다양한 프로토콜을 지원하고 필요에 따라 변환한다.&lt;br>
예를 들어, REST API와 WebSocket API를 모두 지원할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>로드 밸런싱&lt;br>
여러 백엔드 서버로 트래픽을 분산시켜 시스템의 부하를 관리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>캐싱&lt;br>
자주 요청되는 데이터를 캐시하여 응답 시간을 개선하고 백엔드 서버의 부하를 줄인다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>모니터링 및 로깅&lt;br>
API 호출에 대한 모니터링과 로깅을 중앙에서 관리한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단일 진입점&lt;/strong>: 클라이언트는 여러 서비스에 대해 하나의 엔드포인트만 알면 된다.&lt;/li>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 인증, 권한 부여 등의 보안 기능을 중앙에서 관리할 수 있다.&lt;/li>
&lt;li>&lt;strong>캡슐화&lt;/strong>: 내부 시스템 구조를 클라이언트로부터 숨길 수 있다.&lt;/li>
&lt;li>&lt;strong>성능 최적화&lt;/strong>: 캐싱, 로드 밸런싱 등을 통해 전체 시스템의 성능을 향상시킬 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단일 장애 지점&lt;/strong>: API Gateway 자체가 다운되면 전체 시스템에 영향을 줄 수 있다.&lt;/li>
&lt;li>&lt;strong>추가 네트워크 홉&lt;/strong>: API Gateway를 거치는 추가적인 네트워크 홉으로 인해 약간의 지연이 발생할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>구현 방식&lt;/h3>&lt;ol>
&lt;li>&lt;strong>오픈소스 솔루션&lt;/strong>: 직접 운영하는 방식으로, 커스터마이징이 가능하지만 관리 부담이 있다.&lt;/li>
&lt;li>&lt;strong>클라우드 서비스&lt;/strong>: AWS API Gateway, Azure API Management 등의 관리형 서비스를 이용하는 방식&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;ol>
&lt;li>&lt;strong>마이크로서비스 아키텍처&lt;/strong>: 여러 마이크로서비스를 하나의 API로 통합하여 제공한다.&lt;/li>
&lt;li>&lt;strong>레거시 시스템 통합&lt;/strong>: 기존 레거시 시스템과 새로운 서비스를 통합하는 인터페이스로 사용된다.&lt;/li>
&lt;li>&lt;strong>멀티 클라우드 환경&lt;/strong>: 여러 클라우드 환경에 분산된 서비스를 단일 인터페이스로 제공한다.&lt;/li>
&lt;/ol>
&lt;p>API Gateway는 현대적인 분산 시스템 아키텍처에서 중요한 역할을 하며, 시스템의 확장성, 보안, 성능을 향상시키는 데 크게 기여한다.&lt;br>
그러나 구현 시 단일 장애 지점이 되지 않도록 주의해야 하며, 적절한 모니터링과 관리가 필요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>ER(Entity-Relationship) 모델링</title><link>https://buenhyden.github.io/til/2024/11/entity-relationship-modeling/</link><pubDate>Mon, 25 Nov 2024 02:06:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/entity-relationship-modeling/</guid><description>
&lt;h2>ER(Entity-Relationship) 모델링&lt;/h2>&lt;p>ER 모델링은 현실 세계의 데이터를 개체(Entity), 속성(Attribute), 관계(Relationship)로 표현하여 데이터베이스의 구조를 설계하는 방법.&lt;br>
이를 통해 복잡한 데이터 구조를 시각적으로 표현하고 이해하기 쉽게 만든다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/TIL/2024/11/1024px-ER_Diagram_MMORPG.png"
alt="An entity–attribute-relationship diagram for an MMORPG using Chens notation"
loading="lazy" />
&lt;/figure>&lt;br>
&lt;em>Source: &lt;a href="https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model#/media/File:ER_Diagram_MMORPG.png" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model#/media/File:ER_Diagram_MMORPG.png&lt;/a>&lt;/em>&lt;/p>
&lt;h3>주요 구성 요소&lt;/h3>&lt;ol>
&lt;li>개체(Entity)&lt;br>
개체는 데이터베이스에 저장하고자 하는 실제 대상을 나타낸다.&lt;br>
예를 들어, &amp;lsquo;학생&amp;rsquo;, &amp;lsquo;강좌&amp;rsquo;, &amp;lsquo;교수&amp;rsquo; 등이 개체가 될 수 있다. 개체는 보통 사각형으로 표현된다.&lt;br>
예시:&lt;br>
학생 개체의 경우:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>실체: 개별 학생들&lt;/li>
&lt;li>표현: &amp;lsquo;학생&amp;rsquo; 이라는 개체로 모델링&lt;/li>
&lt;li>속성: 학번, 이름, 학과, 연락처 등&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>속성(Attribute)&lt;br>
속성은 개체의 특성이나 성질을 나타낸다.&lt;br>
타원형으로 표현되며, 개체와 선으로 연결된다.&lt;br>
속성의 종류:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>단일값 속성: 하나의 값만 가지는 속성 (예: 학번)&lt;/li>
&lt;li>다중값 속성: 여러 값을 가질 수 있는 속성 (예: 전화번호)&lt;/li>
&lt;li>유도 속성: 다른 속성으로부터 계산되는 속성 (예: 나이)&lt;/li>
&lt;li>키 속성: 개체를 유일하게 식별하는 속성 (예: 학번)&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>관계(Relationship)&lt;br>
관계는 개체들 간의 연관성을 나타낸다.&lt;br>
마름모 형태로 표현되며, 관련된 개체들과 선으로 연결된다.&lt;br>
관계의 종류:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>일대일(1:1) 관계: 각 개체가 상대 개체와 최대 하나씩 연결&lt;/li>
&lt;li>일대다(1:N) 관계: 한 개체가 여러 개의 다른 개체와 연결&lt;/li>
&lt;li>다대다(N:M) 관계: 양쪽 개체 모두 여러 개의 상대 개체와 연결&lt;br>
관계 표현 예시:&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[학생] ----&amp;lt; 수강 &amp;gt;---- [강좌]
| |
(학번) (과목코드)
(이름) (과목명)
(학과) (학점)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>ER 모델링의 단계&lt;/h3>&lt;ol>
&lt;li>
&lt;p>요구사항 분석&lt;br>
시스템에서 필요한 데이터와 기능을 파악한다.&lt;br>
예: &amp;ldquo;대학 수강신청 시스템을 만들어야 한다. 학생들은 여러 강좌를 수강할 수 있으며…&amp;rdquo;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>개체 식별&lt;br>
주요 데이터 개체들을 파악한다.&lt;br>
예: 학생, 강좌, 교수, 학과 등&lt;/p>
&lt;/li>
&lt;li>
&lt;p>속성 정의&lt;br>
각 개체의 특성을 정의한다.&lt;br>
예: 학생(학번, 이름, 학과, 연락처)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>관계 설정&lt;br>
개체들 간의 관계를 정의한다.&lt;br>
예: 학생 - 수강 - 강좌 (다대다 관계)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>제약조건 정의&lt;br>
데이터의 무결성을 위한 제약조건을 설정한다.&lt;br>
예: &amp;ldquo;학생은 최대 6과목까지만 수강할 수 있다&amp;rdquo;&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 적용 예시&lt;/h3>&lt;p>대학 수강신청 시스템의 ER 모델:&lt;/p>
&lt;p>개체:&lt;/p>
&lt;ul>
&lt;li>학생(학번, 이름, 학과, 연락처)&lt;/li>
&lt;li>강좌(과목코드, 과목명, 학점, 수강정원)&lt;/li>
&lt;li>교수(교수번호, 이름, 학과, 연구실)&lt;/li>
&lt;/ul>
&lt;p>관계:&lt;/p>
&lt;ul>
&lt;li>수강(학생-강좌): 다대다 관계&lt;/li>
&lt;li>담당(교수-강좌): 일대다 관계&lt;/li>
&lt;li>소속(학생-학과): 다대일 관계&lt;/li>
&lt;/ul>
&lt;p>제약조건:&lt;/p>
&lt;ul>
&lt;li>학생은 한 학기에 최대 18학점까지 수강 가능&lt;/li>
&lt;li>각 강좌는 반드시 한 명의 담당 교수가 있어야 함&lt;/li>
&lt;li>강좌별 수강 인원은 수강정원을 초과할 수 없음&lt;/li>
&lt;/ul>
&lt;h3>ER 모델링의 장점&lt;/h3>&lt;ol>
&lt;li>
&lt;p>직관적 이해&lt;br>
시각적 표현을 통해 시스템의 구조를 쉽게 이해할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>의사소통 도구&lt;br>
개발자, 사용자, 관리자 간의 효과적인 의사소통을 가능하게 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>설계 검증&lt;br>
데이터베이스 구현 전에 설계상의 문제를 발견하고 수정할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Software Architecture pattern and Software Design Pattern</title><link>https://buenhyden.github.io/til/2024/11/software-architecture-pattern-and-software-design-pattern/</link><pubDate>Sat, 23 Nov 2024 08:19:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/software-architecture-pattern-and-software-design-pattern/</guid><description>
&lt;h2>Software Architecture Pattern and Software Design Pattern&lt;/h2>&lt;p>Software Architecture Pattern과 Software Design Pattern은 소프트웨어 개발에서 반복적으로 발생하는 문제들에 대한 검증된 해결책을 제공하는 개념이다.&lt;br>
이 두 패턴은 서로 다른 수준의 추상화와 범위를 다루고 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Software Architecture Pattern&lt;/th>
&lt;th>Software Design Pattern&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>소프트웨어 시스템의 전체적인 구조와 주요 컴포넌트 간의 관계를 정의하는 패턴&lt;/td>
&lt;td>특정 설계 문제에 대한 일반적이고 재사용 가능한 해결책을 제공하는 패턴&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>범위&lt;/td>
&lt;td>시스템 전체 또는 대규모 하위 시스템&lt;/td>
&lt;td>개별 컴포넌트나 모듈 수준&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>추상화 수준&lt;/td>
&lt;td>높은 수준의 추상화&lt;/td>
&lt;td>상대적으로 낮은 수준의 추상화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>목적&lt;/td>
&lt;td>시스템의 전반적인 구조와 상호작용 정의&lt;/td>
&lt;td>특정 설계 문제에 대한 해결책 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>영향&lt;/td>
&lt;td>전체 시스템의 성능, 확장성, 유지보수성에 영향&lt;/td>
&lt;td>코드의 구조, 품질, 재사용성에 영향&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>예시&lt;/td>
&lt;td>마이크로서비스, 레이어드 아키텍처, 이벤트 드리븐 아키텍처&lt;/td>
&lt;td>싱글톤, 팩토리, 옵저버, 전략 패턴&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 시점&lt;/td>
&lt;td>시스템 설계 초기 단계&lt;/td>
&lt;td>상세 설계 및 구현 단계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유연성&lt;/td>
&lt;td>시스템 수준의 변경에 대한 유연성 제공&lt;/td>
&lt;td>컴포넌트 수준의 변경에 대한 유연성 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>재사용성&lt;/td>
&lt;td>전체 시스템 구조의 재사용&lt;/td>
&lt;td>특정 문제 해결 방식의 재사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복잡성&lt;/td>
&lt;td>시스템 전체의 복잡성 관리&lt;/td>
&lt;td>특정 설계 문제의 복잡성 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문서화&lt;/td>
&lt;td>시스템 아키텍처 다이어그램, 컴포넌트 명세&lt;/td>
&lt;td>클래스 다이어그램, 시퀀스 다이어그램&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 고려사항&lt;/td>
&lt;td>확장성, 성능, 보안, 유지보수성&lt;/td>
&lt;td>코드 재사용, 유연성, 결합도, 응집도&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>아키텍처 패턴은 시스템 전체의 구조와 관련된 더 큰 규모의 결정을 다루는 반면, 디자인 패턴은 특정 코드 수준의 문제를 해결하는 데 중점을 둔다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>동기(Synchronous)와 비동기(Asynchronous) 그리고 Blocking와 Non-Blocking</title><link>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous-and-blocking-and-non-blocking/</link><pubDate>Sun, 17 Nov 2024 12:30:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous-and-blocking-and-non-blocking/</guid><description>
&lt;h2>동기(Synchronous)와 비동기(Asynchronous) 그리고 Blocking와 Non-Blocking&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>카테고리&lt;/th>
&lt;th>동기(Synchronous)&lt;/th>
&lt;th>비동기(Asynchronous)&lt;/th>
&lt;th>Blocking&lt;/th>
&lt;th>Non-Blocking&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>핵심 개념&lt;/strong>&lt;/td>
&lt;td>작업이 순차적으로 실행되며, 이전 작업이 완료될 때까지 다음 작업을 시작하지 않음&lt;/td>
&lt;td>작업들이 독립적으로 실행되며, 이전 작업의 완료를 기다리지 않고 다음 작업 수행 가능&lt;/td>
&lt;td>호출된 함수가 작업을 완료할 때까지 제어권을 반환하지 않음&lt;/td>
&lt;td>호출된 함수가 작업 완료 여부와 관계없이 즉시 제어권을 반환함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>작업 처리 방식&lt;/strong>&lt;/td>
&lt;td>순차적으로 작업을 처리하며, 각 작업이 완료된 후 다음 작업 시작&lt;/td>
&lt;td>여러 작업이 동시에 처리될 수 있으며, 작업 완료 순서는 불확실할 수 있음&lt;/td>
&lt;td>호출한 함수는 작업이 완료될 때까지 대기 상태 유지&lt;/td>
&lt;td>호출한 함수는 작업 진행 중에도 다른 작업 수행 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>제어 흐름&lt;/strong>&lt;/td>
&lt;td>프로그램의 제어 흐름이 순차적이고 예측 가능함&lt;/td>
&lt;td>제어 흐름이 비선형적이며, 콜백이나 이벤트로 처리&lt;/td>
&lt;td>제어권이 호출된 함수에 완전히 넘어감&lt;/td>
&lt;td>제어권이 호출한 함수에 즉시 반환됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>결과 처리&lt;/strong>&lt;/td>
&lt;td>작업 완료 후 바로 결과를 반환받아 처리&lt;/td>
&lt;td>콜백 함수, Promise, async/await 등을 통해 결과 처리&lt;/td>
&lt;td>결과를 직접 반환받아 처리&lt;/td>
&lt;td>상태 확인이나 콜백을 통해 결과 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주요 특징&lt;/strong>&lt;/td>
&lt;td>- 코드의 실행 순서가 명확함&lt;br>- 직관적인 코드 흐름&lt;br>- 단순한 구현&lt;/td>
&lt;td>- 작업의 병렬 처리 가능&lt;br>- 복잡한 이벤트 처리&lt;br>- 높은 확장성&lt;/td>
&lt;td>- 자원을 점유하며 대기&lt;br>- 단순한 구현&lt;br>- 예측 가능한 실행&lt;/td>
&lt;td>- 자원의 효율적 활용&lt;br>- 복잡한 구현&lt;br>- 높은 동시성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 처리&lt;/strong>&lt;/td>
&lt;td>try-catch 블록으로 즉시 에러 처리 가능&lt;/td>
&lt;td>Promise의 catch나 async/await의 try-catch로 처리&lt;/td>
&lt;td>동기적 에러 처리 가능&lt;/td>
&lt;td>비동기적 에러 처리 메커니즘 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- 단순 작업에서 오버헤드 적음&lt;br>- 순차 처리로 인한 대기 시간 발생&lt;/td>
&lt;td>- 동시 처리로 인한 전체 처리 시간 감소&lt;br>- 컨텍스트 스위칭 오버헤드&lt;/td>
&lt;td>- I/O 작업에서 성능 저하&lt;br>- 리소스 독점&lt;/td>
&lt;td>- 리소스 효율적 활용&lt;br>- 높은 처리량&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합한 사용 사례&lt;/strong>&lt;/td>
&lt;td>- 간단한 계산 작업&lt;br>- 메모리 내 데이터 처리&lt;br>- 순차적 처리 필요 작업&lt;/td>
&lt;td>- 네트워크 요청&lt;br>- 대용량 파일 처리&lt;br>- 독립적 실행 가능 작업&lt;/td>
&lt;td>- CPU 연산 작업&lt;br>- 간단한 파일 작업&lt;br>- 메모리 작업&lt;/td>
&lt;td>- I/O 작업&lt;br>- 네트워크 통신&lt;br>- 대용량 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실행 순서&lt;/strong>&lt;/td>
&lt;td>코드 작성 순서와 실행 순서가 동일&lt;/td>
&lt;td>실행 순서가 코드 작성 순서와 다를 수 있음&lt;/td>
&lt;td>작업 완료 순서가 예측 가능&lt;/td>
&lt;td>작업 완료 순서가 불확실&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>자원 활용&lt;/strong>&lt;/td>
&lt;td>단일 자원을 순차적으로 사용&lt;/td>
&lt;td>여러 자원을 동시에 효율적으로 활용&lt;/td>
&lt;td>자원을 독점적으로 사용&lt;/td>
&lt;td>자원을 공유하여 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>응답성&lt;/strong>&lt;/td>
&lt;td>작업 완료 전까지 다른 작업 불가&lt;/td>
&lt;td>여러 작업의 동시 처리로 높은 응답성&lt;/td>
&lt;td>대기 시간 동안 응답 불가&lt;/td>
&lt;td>지속적인 응답 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>디버깅&lt;/strong>&lt;/td>
&lt;td>코드 흐름 추적이 용이함&lt;/td>
&lt;td>비동기 로직으로 인한 디버깅 어려움&lt;/td>
&lt;td>문제 발생 지점 파악 쉬움&lt;/td>
&lt;td>문제 발생 지점 추적 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성&lt;/strong>&lt;/td>
&lt;td>수직적 확장에 제한적&lt;/td>
&lt;td>수평적/수직적 확장 용이&lt;/td>
&lt;td>동시 처리 능력 제한적&lt;/td>
&lt;td>높은 동시성 처리 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터 일관성&lt;/strong>&lt;/td>
&lt;td>데이터 일관성 보장이 쉬움&lt;/td>
&lt;td>경쟁 조건 고려 필요&lt;/td>
&lt;td>순차적 처리로 일관성 보장&lt;/td>
&lt;td>동시성 제어 메커니즘 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>추가적인 고려사항:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>시스템 설계 시 고려사항:&lt;/p>
&lt;ul>
&lt;li>시스템의 목적과 요구사항&lt;/li>
&lt;li>예상되는 부하와 처리량&lt;/li>
&lt;li>확장성 요구사항&lt;/li>
&lt;li>유지보수 용이성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화:&lt;/p>
&lt;ul>
&lt;li>작업의 특성에 따른 적절한 방식 선택&lt;/li>
&lt;li>리소스 사용량 모니터링&lt;/li>
&lt;li>병목 현상 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>개발 복잡도:&lt;/p>
&lt;ul>
&lt;li>팀의 기술적 역량&lt;/li>
&lt;li>유지보수 가능성&lt;/li>
&lt;li>디버깅 용이성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주요 차이점 분석&lt;/h3>&lt;h4>제어 흐름의 관점&lt;/h4>&lt;p>동기/비동기는 &lt;strong>작업의 실행 순서와 완료 시점&lt;/strong>에 관한 것.&lt;br>
반면 Blocking/Non-Blocking은 제어권의 반환 시점에 관한 것이다.&lt;/p>
&lt;h4>성능과 자원 활용&lt;/h4>&lt;ul>
&lt;li>&lt;strong>동기&lt;/strong>: 순차적 실행으로 자원 사용이 효율적이지 않을 수 있다.&lt;/li>
&lt;li>&lt;strong>비동기&lt;/strong>: 병렬 처리로 자원을 효율적으로 활용할 수 있다.&lt;/li>
&lt;li>&lt;strong>Blocking&lt;/strong>: 대기 시간 동안 자원이 낭비될 수 있다.&lt;/li>
&lt;li>&lt;strong>Non-Blocking&lt;/strong>: 대기 시간을 다른 작업에 활용할 수 있다.&lt;/li>
&lt;/ul>
&lt;h4>구현 복잡도&lt;/h4>&lt;p>동기와 Blocking 방식은 구현이 상대적으로 단순한 반면, 비동기와 Non-Blocking 방식은 콜백이나 이벤트 처리 등으로 인해 구현이 복잡할 수 있다.&lt;/p>
&lt;h3>조합별 비교 및 예시&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>동기 + Blocking&lt;/th>
&lt;th>동기 + Non-Blocking&lt;/th>
&lt;th>비동기 + Blocking&lt;/th>
&lt;th>비동기 + Non-Blocking&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>특징&lt;/strong>&lt;/td>
&lt;td>- 가장 단순한 실행 모델&lt;br>- 직관적인 코드 흐름&lt;br>- 순차적 실행 보장&lt;/td>
&lt;td>- 동기적 실행 흐름 유지&lt;br>- 리소스 점유 최소화&lt;br>Polling 방식 사용&lt;/td>
&lt;td>- Promise나 async/await 사용&lt;br>- 실행 순서 보장&lt;br>- 비동기 작업 대기&lt;/td>
&lt;td>- 가장 유연한 실행 모델&lt;br>- 높은 리소스 활용도&lt;br>- 이벤트 기반 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장점&lt;/strong>&lt;/td>
&lt;td>- 구현이 단순&lt;br>- 디버깅 용이&lt;br>- 결과 예측 쉬움&lt;/td>
&lt;td>- 리소스 효율성&lt;br>- 응답성 유지&lt;br>- 동기 코드 장점 유지&lt;/td>
&lt;td>- 비동기 코드의 동기적 처리&lt;br>- 에러 처리 용이&lt;br>- 코드 가독성 좋음&lt;/td>
&lt;td>- 최고의 성능&lt;br>- 높은 확장성&lt;br>- 리소스 효율적 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단점&lt;/strong>&lt;/td>
&lt;td>- 리소스 비효율적&lt;br>- 성능 저하&lt;br>- 응답성 저하&lt;/td>
&lt;td>- 구현 복잡도 증가&lt;br>CPU 사용률 증가&lt;br>Polling 오버헤드&lt;/td>
&lt;td>- 스레드 블로킹&lt;br>- 병렬 처리 제한&lt;br>- 성능 제약&lt;/td>
&lt;td>- 복잡한 에러 처리&lt;br>- 디버깅 어려움&lt;br>- 콜백 지옥 가능성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합한 시나리오&lt;/strong>&lt;/td>
&lt;td>- 단순한 계산 작업&lt;br>- 메모리 내 연산&lt;br>- 설정 파일 로딩&lt;/td>
&lt;td>- 주기적 상태 확인&lt;br>- 실시간 모니터링&lt;br>- 센서 데이터 처리&lt;/td>
&lt;td>- 순차적 API 호출&lt;br>- 데이터베이스 트랜잭션&lt;br>- 의존적 비동기 작업&lt;/td>
&lt;td>- 웹 서버&lt;br>- 실시간 애플리케이션&lt;br>- 대용량 I/O 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주의사항&lt;/strong>&lt;/td>
&lt;td>- 긴 작업 시 시스템 블로킹&lt;br>- 타임아웃 처리 필요&lt;br>- 리소스 고려&lt;/td>
&lt;td>- 무한 루프 주의&lt;br>CPU 사용량 모니터링&lt;br>- 폴링 간격 최적화&lt;/td>
&lt;td>- 데드락 가능성&lt;br>- 메모리 누수 주의&lt;br>- 타임아웃 설정&lt;/td>
&lt;td>- 상태 관리 복잡성&lt;br>- 동시성 제어&lt;br>- 메모리 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>동작 방식&lt;/strong>&lt;/td>
&lt;td>- 순차적 실행&lt;br>- 작업 완료까지 대기&lt;br>- 직접 결과 반환&lt;/td>
&lt;td>- 상태 확인 루프&lt;br>- 작업 병행 처리&lt;br>- 폴링 기반 결과 확인&lt;/td>
&lt;td>- 비동기 호출 후 대기&lt;br>Promise 기반 처리&lt;br>await 사용&lt;/td>
&lt;td>- 이벤트 루프 활용&lt;br>- 콜백 기반 처리&lt;br>- 비동기 이벤트 처리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>추가적인 구현 시 고려사항:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>에러 처리:&lt;/p>
&lt;ul>
&lt;li>동기 + Blocking: try-catch 직접 사용&lt;/li>
&lt;li>동기 + Non-Blocking: 상태 확인 시 에러 체크&lt;/li>
&lt;li>비동기 + Blocking: try-catch와 async/await 사용&lt;/li>
&lt;li>비동기 + Non-Blocking: 콜백의 에러 파라미터 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화:&lt;/p>
&lt;ul>
&lt;li>동기 + Blocking: 작업 크기 최소화&lt;/li>
&lt;li>동기 + Non-Blocking: 폴링 간격 최적화&lt;/li>
&lt;li>비동기 + Blocking: 병렬 처리 가능성 검토&lt;/li>
&lt;li>비동기 + Non-Blocking: 이벤트 루프 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>리소스 관리:&lt;/p>
&lt;ul>
&lt;li>동기 + Blocking: 타임아웃 설정&lt;/li>
&lt;li>동기 + Non-Blocking: CPU 사용량 모니터링&lt;/li>
&lt;li>비동기 + Blocking: 메모리 누수 방지&lt;/li>
&lt;li>비동기 + Non-Blocking: 동시성 제어&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>각 조합의 선택은 애플리케이션의 요구사항, 성능 목표, 개발 팀의 역량 등을 종합적으로 고려하여 결정해야 한다.&lt;/p>
&lt;h4>예시&lt;/h4>&lt;ol>
&lt;li>동기(Synchronous) + Blocking&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 동기 + Blocking 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">syncBlockingExample&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;1. 작업 시작&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 동기적으로 실행되며, 작업이 완료될 때까지 블로킹됨
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFileSync&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;example.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 파일 읽기가 완료된 후에만 실행됨
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2. 파일 내용:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 순차적으로 실행됨
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;3. 작업 완료&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>동기(Synchronous) + Non-Blocking&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 동기 + Non-Blocking 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">syncNonBlockingExample&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;1. 작업 시작&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 동기적이지만 블로킹하지 않음
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 작업 상태 확인 (polling)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">checkOperationStatus&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 다른 작업 수행 가능
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">doOtherWork&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2. 결과:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;3. 작업 완료&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="3">
&lt;li>비동기(Asynchronous) + Blocking&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 비동기 + Blocking 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">asyncBlockingExample&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;1. 작업 시작&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 비동기 호출이지만 결과를 기다림 (블로킹)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Promise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resolve&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 비동기 작업 수행
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;작업 결과&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 블로킹되어 기다린 후 실행
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2. 결과:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;3. 작업 완료&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="4">
&lt;li>비동기(Asynchronous) + Non-Blocking&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 비동기 + Non-Blocking 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">asyncNonBlockingExample&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;1. 작업 시작&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 비동기 호출 후 즉시 반환
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;example.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;utf8&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;에러 발생:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 작업 완료 시 콜백으로 처리
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;3. 파일 내용:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 파일 읽기 작업과 독립적으로 실행됨
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2. 다른 작업 실행&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>적용 가이드라인&lt;/h3>&lt;ol>
&lt;li>동기 방식이 적합한 경우:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>작업의 순서가 중요한 경우&lt;/li>
&lt;li>데이터의 정합성이 중요한 경우&lt;/li>
&lt;li>간단한 스크립트나 배치 작업&lt;/li>
&lt;li>즉각적인 결과가 필요한 경우&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>비동기 방식이 적합한 경우:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>다중 사용자 처리가 필요한 경우&lt;/li>
&lt;li>긴 작업 시간이 예상되는 경우&lt;/li>
&lt;li>높은 처리량이 요구되는 경우&lt;/li>
&lt;li>실시간 데이터 처리가 필요한 경우&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>Blocking이 적합한 경우:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>간단한 I/O 작업&lt;/li>
&lt;li>리소스 사용량이 적은 경우&lt;/li>
&lt;li>즉각적인 응답이 필요한 경우&lt;/li>
&lt;li>단일 사용자 시스템&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>Non-Blocking이 적합한 경우:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>높은 동시성이 요구되는 경우&lt;/li>
&lt;li>대규모 I/O 작업 처리&lt;/li>
&lt;li>실시간 네트워크 애플리케이션&lt;/li>
&lt;li>고성능이 요구되는 서버&lt;/li>
&lt;/ul>
&lt;h3>최적화 전략&lt;/h3>&lt;ol>
&lt;li>성능 최적화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>작업의 특성에 따른 적절한 방식 선택&lt;/li>
&lt;li>리소스 사용량 모니터링&lt;/li>
&lt;li>타임아웃 설정&lt;/li>
&lt;li>에러 처리 메커니즘 구축&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>리소스 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>메모리 사용량 관리&lt;/li>
&lt;li>스레드 풀 최적화&lt;/li>
&lt;li>커넥션 풀 관리&lt;/li>
&lt;li>캐시 활용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Lock and Mutex</title><link>https://buenhyden.github.io/til/2024/11/lock-and-mutex/</link><pubDate>Sun, 17 Nov 2024 11:25:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/lock-and-mutex/</guid><description>
&lt;h2>Lock and Mutex&lt;/h2>&lt;p>Lock과 Mutex는 둘 다 여러 스레드가 공유 자원에 동시에 접근하는 것을 방지하는 동기화 도구이다. 한 스레드가 자원을 사용할 때 다른 스레드의 접근을 막는 것이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Mutex&lt;/th>
&lt;th>Lock&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 개념&lt;/strong>&lt;/td>
&lt;td>상호 배제를 위한 동기화 객체로, 소유권 개념이 있음&lt;/td>
&lt;td>일반적인 동기화 메커니즘으로, 단순한 잠금/해제 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>소유권&lt;/strong>&lt;/td>
&lt;td>소유권 개념이 있어 획득한 스레드만 해제 가능&lt;/td>
&lt;td>소유권 개념이 없어 다른 스레드도 해제 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>재진입성&lt;/strong>&lt;/td>
&lt;td>보통 재진입 가능 (같은 스레드가 여러 번 획득 가능)&lt;/td>
&lt;td>구현에 따라 재진입 가능할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>용도&lt;/strong>&lt;/td>
&lt;td>스레드 간 엄격한 상호 배제가 필요한 경우&lt;/td>
&lt;td>간단한 동기화가 필요한 일반적인 상황&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능&lt;/strong>&lt;/td>
&lt;td>소유권 검사 등으로 인한 오버헤드 존재&lt;/td>
&lt;td>상대적으로 가벼운 오버헤드, 단 구현에 따라 다름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 처리&lt;/strong>&lt;/td>
&lt;td>소유권 위반 시 예외 발생 가능&lt;/td>
&lt;td>단순한 실패/성공 여부만 반환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>구현 복잡도&lt;/strong>&lt;/td>
&lt;td>상대적으로 복잡한 구현&lt;/td>
&lt;td>단순한 구현, 그러나 고급 기능 추가 시 복잡해질 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적용 범위&lt;/strong>&lt;/td>
&lt;td>프로세스 내 스레드 간 동기화&lt;/td>
&lt;td>프로세스 내 또는 프로세스 간 동기화에 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>우선순위 상속&lt;/strong>&lt;/td>
&lt;td>우선순위 상속 지원 가능&lt;/td>
&lt;td>일반적으로 지원하지 않음, 구현에 따라 다를 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>교착상태 처리&lt;/strong>&lt;/td>
&lt;td>소유권 추적으로 교착상태 감지 용이&lt;/td>
&lt;td>기본적인 교착상태 감지만 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 검사&lt;/strong>&lt;/td>
&lt;td>상세한 에러 검사 및 보고 기능&lt;/td>
&lt;td>기본적인 에러 검사, 구현에 따라 확장 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>메모리 사용&lt;/strong>&lt;/td>
&lt;td>소유권 정보 저장으로 추가 메모리 필요&lt;/td>
&lt;td>최소한의 메모리 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>유연성&lt;/strong>&lt;/td>
&lt;td>엄격한 규칙으로 유연성 제한&lt;/td>
&lt;td>상대적으로 유연한 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>디버깅&lt;/strong>&lt;/td>
&lt;td>소유권 정보로 디버깅 용이&lt;/td>
&lt;td>디버깅이 상대적으로 어려움, 구현에 따라 다를 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>사용 예시&lt;/strong>&lt;/td>
&lt;td>데이터베이스 트랜잭션, 파일 시스템 접근&lt;/td>
&lt;td>간단한 공유 자원 보호, 카운터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>타임아웃 지원&lt;/strong>&lt;/td>
&lt;td>보통 타임아웃 기능 내장&lt;/td>
&lt;td>구현에 따라 타임아웃 지원 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복구 기능&lt;/strong>&lt;/td>
&lt;td>비정상 종료 시 자동 복구 지원&lt;/td>
&lt;td>구현에 따라 자동 복구 기능 추가 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>중첩 사용&lt;/strong>&lt;/td>
&lt;td>재진입성으로 중첩 사용 가능&lt;/td>
&lt;td>구현에 따라 중첩 사용 가능, 주의 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>시스템 수준&lt;/strong>&lt;/td>
&lt;td>주로 커널 수준에서 구현&lt;/td>
&lt;td>사용자 수준 및 커널 수준 모두에서 구현 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>표준화&lt;/strong>&lt;/td>
&lt;td>POSIX 표준으로 잘 정의됨&lt;/td>
&lt;td>구현에 따라 동작이 다를 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>경쟁 상황에서 성능 저하 가능&lt;/td>
&lt;td>스핀락 구현 시 짧은 대기 시간에 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>공정성&lt;/strong>&lt;/td>
&lt;td>일반적으로 공정성 메커니즘 내장&lt;/td>
&lt;td>구현에 따라 공정성 보장 여부가 다름&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>실제 구현 시에는 고려할 사항&lt;/h3>&lt;ul>
&lt;li>동시성 요구사항 (얼마나 많은 스레드가 동시에 접근하는가)&lt;/li>
&lt;li>성능 요구사항 (응답 시간, 처리량 등)&lt;/li>
&lt;li>리소스 사용량 (메모리, CPU 사용률)&lt;/li>
&lt;li>오류 처리 및 복구 요구사항&lt;/li>
&lt;li>데드록 방지 필요성&lt;/li>
&lt;li>플랫폼 및 운영체제의 지원 여부&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>VueJS vs ReactJS vs NextJS</title><link>https://buenhyden.github.io/til/2024/11/vuejs-vs-reactjs-vs-nextjs/</link><pubDate>Sun, 17 Nov 2024 04:51:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/vuejs-vs-reactjs-vs-nextjs/</guid><description>
&lt;h2>VueJS Vs ReactJS Vs NextJS&lt;/h2>&lt;p>VueJS, ReactJS, NextJS는 모두 현대적인 웹 애플리케이션을 개발하기 위한 JavaScript 기반의 프레임워크 및 라이브러리로, 각각 고유한 특징과 장단점을 가지고 있으며, 다양한 웹 개발 시나리오에 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>Vue.js&lt;/th>
&lt;th>React.js&lt;/th>
&lt;th>Next.js&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 정의&lt;/strong>&lt;/td>
&lt;td>점진적이고 직관적인 JavaScript 프레임워크&lt;/td>
&lt;td>유연한 JavaScript UI 라이브러리&lt;/td>
&lt;td>React 기반 풀스택 웹 프레임워크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>개발사 및 출시&lt;/strong>&lt;/td>
&lt;td>2014년, Evan You가 개발&lt;/td>
&lt;td>2013년, Facebook(현 Meta) 개발&lt;/td>
&lt;td>2016년, Vercel이 개발&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>핵심 철학&lt;/strong>&lt;/td>
&lt;td>점진적 도입이 가능한 유연한 프레임워크&lt;/td>
&lt;td>선언적 UI 개발과 컴포넌트 기반 구조&lt;/td>
&lt;td>React의 장점을 서버 사이드와 결합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>기술적 특징&lt;/strong>&lt;/td>
&lt;td>- 반응형 데이터 바인딩&lt;br>- 양방향 데이터 흐름&lt;br>- 컴포넌트 기반 개발&lt;/td>
&lt;td>- Virtual DOM&lt;br>- 단방향 데이터 흐름&lt;br>JSX 문법&lt;/td>
&lt;td>- SSR/SSG 지원&lt;br>- 파일 기반 라우팅&lt;br>- 자동 코드 분할&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>상태 관리&lt;/strong>&lt;/td>
&lt;td>Vuex, Pinia (공식 상태 관리 도구)&lt;/td>
&lt;td>Redux, Context API (커뮤니티 기반)&lt;/td>
&lt;td>React 상태 관리 + 서버 상태&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 최적화&lt;/strong>&lt;/td>
&lt;td>- 작은 번들 크기&lt;br>- 효율적인 반응형 시스템&lt;/td>
&lt;td>- Virtual DOM 기반 최적화&lt;br>- 메모이제이션&lt;/td>
&lt;td>- 자동 이미지 최적화&lt;br>- 경로 기반 코드 분할&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>사용 시나리오&lt;/strong>&lt;/td>
&lt;td>- 중소규모 애플리케이션&lt;br>- 점진적 마이그레이션&lt;br>- 빠른 개발 필요 시&lt;/td>
&lt;td>- 대규모 SPA&lt;br>- 복잡한 UI 개발&lt;br>- 커스텀 솔루션 필요 시&lt;/td>
&lt;td>- SEO 중심 프로젝트&lt;br>- 풀스택 애플리케이션&lt;br>- 엔터프라이즈급 개발&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 용이성&lt;/strong>&lt;/td>
&lt;td>매우 낮은 진입 장벽, HTML 친화적&lt;/td>
&lt;td>중간 수준, JavaScript 숙련도 필요&lt;/td>
&lt;td>높은 수준, React 지식 필수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>생태계 특성&lt;/strong>&lt;/td>
&lt;td>공식 도구 중심의 통합된 생태계&lt;/td>
&lt;td>거대하고 다양한 커뮤니티 생태계&lt;/td>
&lt;td>React 생태계 + 서버 사이드 도구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>개발 도구&lt;/strong>&lt;/td>
&lt;td>Vue CLI, Vue DevTools&lt;/td>
&lt;td>Create React App, React DevTools&lt;/td>
&lt;td>내장 빌드 시스템, 분석 도구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>배포 특성&lt;/strong>&lt;/td>
&lt;td>단순한 정적 파일 배포 가능&lt;/td>
&lt;td>정적 파일 기반 배포&lt;/td>
&lt;td>서버 필요, Vercel 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로젝트 확장성&lt;/strong>&lt;/td>
&lt;td>중간 수준의 모듈식 확장&lt;/td>
&lt;td>높은 자유도의 확장성&lt;/td>
&lt;td>풀스택 확장 용이&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 세 기술은 각각의 고유한 장점과 사용 시나리오를 가지고 있다.&lt;br>
Vue.js는 빠른 학습과 개발이 가능하고, React.js는 유연하고 강력한 UI 개발을 지원하며, Next.js는 현대적인 웹 애플리케이션의 완벽한 솔루션을 제공한다.&lt;br>
프로젝트의 요구사항과 팀의 기술적 배경에 따라 적절한 선택을 하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>ExpressJS vs NestJS</title><link>https://buenhyden.github.io/til/2024/11/expressjs-vs-nestjs/</link><pubDate>Sun, 17 Nov 2024 04:50:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/expressjs-vs-nestjs/</guid><description>
&lt;h2>ExpressJS Vs NestJS&lt;/h2>&lt;p>ExpressJS와 NestJS의 주요 특징들을 상세히 비교 분석하여 표로 정리해드리겠습니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 기준&lt;/th>
&lt;th>ExpressJS&lt;/th>
&lt;th>NestJS&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>프레임워크 특성&lt;/strong>&lt;/td>
&lt;td>미니멀리스트, 유연한 Node.js 웹 프레임워크&lt;/td>
&lt;td>TypeScript 기반의 구조화된 풀스택 프레임워크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>아키텍처 스타일&lt;/strong>&lt;/td>
&lt;td>자유로운 구조 (개발자가 직접 설계)&lt;/td>
&lt;td>Angular 스타일의 모듈식 아키텍처 (강제됨)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>언어 지원&lt;/strong>&lt;/td>
&lt;td>JavaScript 중심 (TypeScript도 사용 가능)&lt;/td>
&lt;td>TypeScript 중심 (JavaScript도 사용 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>학습 곡선&lt;/strong>&lt;/td>
&lt;td>낮음 (시작하기 쉬움)&lt;/td>
&lt;td>높음 (많은 개념과 패턴 학습 필요)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>기본 구조&lt;/strong>&lt;/td>
&lt;td>최소한의 구조만 제공&lt;/td>
&lt;td>모듈, 컨트롤러, 서비스 등 세분화된 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>라우팅 예시&lt;/strong>&lt;/td>
&lt;td>&lt;code>javascript app.get('/users', (req, res) =&amp;gt; { res.send('Users list'); });&lt;/code>&lt;/td>
&lt;td>&lt;code>typescript @Controller('users') export class UsersController { @Get() findAll(): string { return 'Users list'; } }&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>의존성 주입&lt;/strong>&lt;/td>
&lt;td>없음 (수동으로 구현 필요)&lt;/td>
&lt;td>내장된 강력한 DI 시스템 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데코레이터 지원&lt;/strong>&lt;/td>
&lt;td>지원하지 않음&lt;/td>
&lt;td>광범위한 데코레이터 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>미들웨어 처리&lt;/strong>&lt;/td>
&lt;td>직관적이고 단순한 미들웨어 체인&lt;/td>
&lt;td>복잡하지만 강력한 미들웨어 시스템&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>테스트 용이성&lt;/strong>&lt;/td>
&lt;td>별도 테스트 도구 설정 필요&lt;/td>
&lt;td>내장된 테스트 도구 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>확장성&lt;/strong>&lt;/td>
&lt;td>수동 구성 필요&lt;/td>
&lt;td>모듈 시스템을 통한 쉬운 확장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능&lt;/strong>&lt;/td>
&lt;td>매우 가벼움 (적은 오버헤드)&lt;/td>
&lt;td>약간의 오버헤드 존재&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>실시간 처리&lt;/strong>&lt;/td>
&lt;td>WebSocket 수동 구현 필요&lt;/td>
&lt;td>WebSocket 데코레이터 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>유효성 검사&lt;/strong>&lt;/td>
&lt;td>외부 라이브러리 필요&lt;/td>
&lt;td>내장 파이프를 통한 유효성 검사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>문서화&lt;/strong>&lt;/td>
&lt;td>Swagger 등 수동 설정 필요&lt;/td>
&lt;td>자동 API 문서 생성 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합한 프로젝트&lt;/strong>&lt;/td>
&lt;td>- 작은 규모의 프로젝트&lt;br>- 빠른 프로토타이핑&lt;br>- 마이크로서비스&lt;/td>
&lt;td>- 대규모 엔터프라이즈 애플리케이션&lt;br>- 복잡한 비즈니스 로직&lt;br>- 팀 프로젝트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>개발 생산성&lt;/strong>&lt;/td>
&lt;td>초기에는 빠르나 규모가 커지면 관리 어려움&lt;/td>
&lt;td>초기 설정에 시간이 걸리나 장기적으로 생산성 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>커뮤니티/생태계&lt;/strong>&lt;/td>
&lt;td>매우 큰 커뮤니티, 풍부한 미들웨어&lt;/td>
&lt;td>성장하는 커뮤니티, 내장 기능 많음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 처리&lt;/strong>&lt;/td>
&lt;td>수동 구현 필요&lt;/td>
&lt;td>내장된 예외 필터 시스템&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>데이터베이스 통합&lt;/strong>&lt;/td>
&lt;td>ORM 선택 자유&lt;/td>
&lt;td>TypeORM/Sequelize 등과 쉬운 통합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>보안 기능&lt;/strong>&lt;/td>
&lt;td>외부 미들웨어 필요&lt;/td>
&lt;td>내장된 보안 기능 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>모니터링/로깅&lt;/strong>&lt;/td>
&lt;td>외부 도구 통합 필요&lt;/td>
&lt;td>내장된 로깅 시스템 제공&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>선택 가이드:&lt;/p>
&lt;p>ExpressJS를 선택하면 좋은 경우:&lt;/p>
&lt;ul>
&lt;li>작은 규모의 프로젝트를 빠르게 시작해야 할 때&lt;/li>
&lt;li>최대한의 자유도가 필요할 때&lt;/li>
&lt;li>가벼운 마이크로서비스를 구축할 때&lt;/li>
&lt;li>JavaScript에 익숙한 개발자가 많은 팀&lt;/li>
&lt;/ul>
&lt;p>NestJS를 선택하면 좋은 경우:&lt;/p>
&lt;ul>
&lt;li>대규모 엔터프라이즈 애플리케이션 개발 시&lt;/li>
&lt;li>체계적인 코드 구조가 필요할 때&lt;/li>
&lt;li>TypeScript를 사용하고 싶을 때&lt;/li>
&lt;li>Angular 경험이 있는 개발자가 많은 팀&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>ASGI CGI WSGI</title><link>https://buenhyden.github.io/til/2024/11/asgi-cgi-wsgi-%EB%B9%84%EA%B5%90/</link><pubDate>Sat, 16 Nov 2024 03:26:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/asgi-cgi-wsgi-%EB%B9%84%EA%B5%90/</guid><description>
&lt;h2>ASGI CGI WSGI 비교 분석&lt;/h2>&lt;p>이 기술들은 웹 서버와 애플리케이션 간의 통신 방식을 정의하는 인터페이스 규격.&lt;br>
시대 순으로 발전 과정을 이해하면 좋을 것 같다.&lt;/p>
&lt;h3>ASGI CGI WSGI 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특징&lt;/th>
&lt;th>CGI&lt;/th>
&lt;th>WSGI&lt;/th>
&lt;th>ASGI&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>등장 시기&lt;/td>
&lt;td>1990년대 초반&lt;/td>
&lt;td>2003년 (PEP 333)&lt;/td>
&lt;td>2016년&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>처리 방식&lt;/td>
&lt;td>프로세스 기반&lt;/td>
&lt;td>동기식&lt;/td>
&lt;td>비동기식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능&lt;/td>
&lt;td>매 요청마다 새 프로세스 생성 (낮음)&lt;/td>
&lt;td>프로세스 재사용 (중간)&lt;/td>
&lt;td>비동기 처리로 높은 성능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 지원&lt;/td>
&lt;td>HTTP/1.0&lt;/td>
&lt;td>HTTP/1.1&lt;/td>
&lt;td>HTTP/1.1, HTTP/2, WebSocket&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>단순함&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>상대적으로 복잡함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 사용&lt;/td>
&lt;td>높음 (프로세스당)&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동시성 처리&lt;/td>
&lt;td>프로세스 기반&lt;/td>
&lt;td>스레드/프로세스 기반&lt;/td>
&lt;td>이벤트 루프 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>레거시 시스템&lt;/td>
&lt;td>전통적인 웹 애플리케이션&lt;/td>
&lt;td>현대적 웹 애플리케이션&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>환경 변수 처리&lt;/td>
&lt;td>시스템 환경 변수&lt;/td>
&lt;td>environ 딕셔너리&lt;/td>
&lt;td>scope 딕셔너리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>스트리밍 지원&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>이터레이터 기반&lt;/td>
&lt;td>네이티브 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프레임워크 예시&lt;/td>
&lt;td>직접 구현&lt;/td>
&lt;td>Django, Flask&lt;/td>
&lt;td>FastAPI, Starlette&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 예시&lt;/td>
&lt;td>Apache&lt;/td>
&lt;td>gunicorn, uWSGI&lt;/td>
&lt;td>uvicorn, daphne&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오류 처리&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>표준화된 방식&lt;/td>
&lt;td>포괄적 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>설정 복잡도&lt;/td>
&lt;td>간단&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>상대적으로 복잡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>각 기술의 기본적인 구현 예제&lt;/h3>&lt;p>CGI (Common Gateway Interface):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ch">#!/usr/bin/python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Content-Type: text/html&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;h1&amp;gt;Hello from CGI!&amp;lt;/h1&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;p&amp;gt;Environment Variables:&amp;lt;/p&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;lt;br&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>WSGI (Web Server Gateway Interface):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">simple_wsgi_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_response&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;간단한 WSGI 애플리케이션&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;200 OK&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="s1">&amp;#39;Content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 환경 변수에서 요청 정보 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">request_method&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;REQUEST_METHOD&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">path_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;PATH_INFO&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Method: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">request_method&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Path: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">path_info&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">()]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>ASGI (Asynchronous Server Gateway Interface):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">simple_asgi_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scope&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;간단한 ASGI 애플리케이션&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 클라이언트로부터 요청 받기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 보내기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;http.response.start&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;headers&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;http.response.body&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;body&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;Hello from ASGI!&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>각 기술의 주요 사용 시나리오&lt;/h3>&lt;h4>파일 업로드 처리&lt;/h4>&lt;p>CGI:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="ch">#!/usr/bin/python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">cgi&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">form&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cgi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">FieldStorage&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">fileitem&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">form&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;filename&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">fileitem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">basename&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fileitem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">filename&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/tmp/&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">fn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;wb&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fileitem&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;파일이 업로드되었습니다&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;업로드 실패&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Content-Type: text/html&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>WSGI:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">file_upload_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">start_response&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">from&lt;/span> &lt;span class="nn">wsgiref.util&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">FileWrapper&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;200 OK&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="s1">&amp;#39;Content-Type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;text/html&amp;#39;&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">headers&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">environ&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;REQUEST_METHOD&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">post_env&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">copy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">post_env&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;QUERY_STRING&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 파일 처리 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s2">&amp;#34;File uploaded successfully&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s2">&amp;#34;Please upload a file&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>ASGI:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">file_upload_app&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">scope&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">scope&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;http&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 요청 본문 받기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">more_body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">more_body&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="n">receive&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">body&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;body&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">more_body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;more_body&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 파일 처리 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;http.response.start&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;headers&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;text/plain&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;type&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;http.response.body&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;body&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sa">b&lt;/span>&lt;span class="s1">&amp;#39;File processed asynchronously&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Blocking vs Non-Blocking</title><link>https://buenhyden.github.io/til/2024/11/blocking-vs-non-blocking/</link><pubDate>Tue, 12 Nov 2024 12:36:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/blocking-vs-non-blocking/</guid><description>
&lt;h2>Blocking and Non-Blocking&lt;/h2>&lt;p>Blocking과 Non-Blocking은 프로그램의 제어 흐름을 다루는 두 가지 주요 방식이다.&lt;br>
이 개념들은 I/O 작업, 프로세스 간 통신, 네트워크 통신 등 다양한 컴퓨팅 상황에서 중요한 역할을 한다.&lt;/p>
&lt;p>Blocking과 Non-Blocking의 주요 차이점은 제어권의 반환 시점이다.&lt;br>
Blocking은 작업이 완료될 때까지 제어권을 반환하지 않지만, Non-Blocking은 즉시 제어권을 반환한다.&lt;/p>
&lt;h3>Blocking&lt;/h3>&lt;p>Blocking은 특정 작업이 완료될 때까지 프로그램의 제어권을 붙잡고 있는 상태를 의미한다.&lt;br>
해당 작업이 완료되기 전까지는 다음 작업으로 진행할 수 없다.&lt;/p>
&lt;h4>동작 방식&lt;/h4>&lt;ol>
&lt;li>프로세스가 특정 작업을 요청한다.&lt;/li>
&lt;li>해당 작업이 완료될 때까지 프로세스는 대기 상태에 들어간다.&lt;/li>
&lt;li>작업이 완료되면 프로세스는 다시 실행 상태로 전환된다.&lt;/li>
&lt;li>그동안 다른 작업은 수행될 수 없다.&lt;/li>
&lt;/ol>
&lt;h4>특징&lt;/h4>&lt;ul>
&lt;li>프로그램의 실행 흐름이 순차적이고 예측 가능하다.&lt;/li>
&lt;li>리소스 사용이 일시적으로 중단된다.&lt;/li>
&lt;li>응답을 즉시 받을 수 있다.&lt;/li>
&lt;li>프로그램 구조가 단순하고 직관적이다.&lt;/li>
&lt;/ul>
&lt;h4>실제 예시&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Blocking I/O의 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;example.txt&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">FileInputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileInputStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">1024&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytesRead&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">input&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 이 지점에서 Blocking 발생&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">파일&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">읽기가&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">완료될&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">때까지&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">다음&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">코드로&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">진행하지&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">않음&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>성능 측면&lt;/h4>&lt;ul>
&lt;li>단일 작업의 처리 시간이 예측 가능하다.&lt;/li>
&lt;li>리소스 사용이 일시적으로 중단된다.&lt;/li>
&lt;li>대기 시간이 발생한다.&lt;/li>
&lt;/ul>
&lt;h4>구현 복잡도&lt;/h4>&lt;ul>
&lt;li>구현이 단순하다.&lt;/li>
&lt;li>디버깅이 쉽다.&lt;/li>
&lt;li>코드 흐름이 직관적이다.&lt;/li>
&lt;/ul>
&lt;h4>적합한 사례&lt;/h4>&lt;ul>
&lt;li>간단한 스크립트 작성&lt;/li>
&lt;li>순차적 데이터 처리&lt;/li>
&lt;li>즉각적인 응답이 필요한 경우&lt;/li>
&lt;li>작은 규모의 애플리케이션&lt;/li>
&lt;/ul>
&lt;h3>Non-Blocking&lt;/h3>&lt;p>Non-Blocking은 작업의 완료 여부와 관계없이 프로그램이 계속 실행될 수 있는 상태를 의미한다.&lt;br>
작업의 완료를 기다리는 동안에도 다른 작업을 수행할 수 있다.&lt;/p>
&lt;h4>동작 방식&lt;/h4>&lt;ol>
&lt;li>프로세스가 작업을 요청한다.&lt;/li>
&lt;li>작업의 완료 여부와 관계없이 즉시 제어권을 반환받는다.&lt;/li>
&lt;li>다른 작업을 계속 수행할 수 있다.&lt;/li>
&lt;li>작업이 완료되면 이벤트나 콜백을 통해 알림을 받는다.&lt;/li>
&lt;/ol>
&lt;h4>특징&lt;/h4>&lt;ul>
&lt;li>프로그램의 실행이 중단되지 않는다.&lt;/li>
&lt;li>리소스를 효율적으로 사용할 수 있다.&lt;/li>
&lt;li>높은 동시성을 제공한다.&lt;/li>
&lt;li>복잡한 프로그램 구조가 필요할 수 있다.&lt;/li>
&lt;/ul>
&lt;h4>실제 예시&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Non-Blocking I/O의 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;example.txt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">throw&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 파일을 읽는 동안에도 다음 코드가 실행됨
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;파일 읽기를 요청했습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>성능 측면&lt;/h4>&lt;ul>
&lt;li>전체적인 처리량이 향상된다.&lt;/li>
&lt;li>리소스를 지속적으로 활용할 수 있다.&lt;/li>
&lt;li>대기 시간을 다른 작업으로 활용한다.&lt;/li>
&lt;/ul>
&lt;h4>구현 복잡도&lt;/h4>&lt;ul>
&lt;li>구현이 복잡할 수 있다.&lt;/li>
&lt;li>디버깅이 어려울 수 있다.&lt;/li>
&lt;li>콜백이나 이벤트 핸들링이 필요하다.&lt;/li>
&lt;/ul>
&lt;h4>적합한 사례&lt;/h4>&lt;ul>
&lt;li>대규모 네트워크 애플리케이션&lt;/li>
&lt;li>실시간 데이터 처리 시스템&lt;/li>
&lt;li>높은 동시성이 요구되는 서버&lt;/li>
&lt;li>사용자 인터페이스가 있는 애플리케이션&lt;/li>
&lt;/ul>
&lt;h3>Blocking과 Non-Blocking의 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>카테고리&lt;/th>
&lt;th>Blocking&lt;/th>
&lt;th>Non-Blocking&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 개념&lt;/strong>&lt;/td>
&lt;td>- 호출된 함수가 자신의 작업을 완료할 때까지 제어권을 가지고 있음&lt;/td>
&lt;td>- 호출된 함수가 즉시 제어권을 반환함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 호출한 함수는 작업 완료까지 대기&lt;/td>
&lt;td>- 호출한 함수는 다른 작업을 계속 수행 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 실행 순서가 명확하고 예측 가능&lt;/td>
&lt;td>- 실행 순서가 비결정적일 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>제어권 처리&lt;/strong>&lt;/td>
&lt;td>- 제어권이 호출된 함수에 완전히 넘어감&lt;/td>
&lt;td>- 제어권이 호출한 함수에 즉시 반환됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 작업 완료 전까지 제어권 반환 없음&lt;/td>
&lt;td>- 작업 상태는 별도로 확인 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 호출 스택이 차단됨&lt;/td>
&lt;td>- 호출 스택이 차단되지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리소스 관리&lt;/strong>&lt;/td>
&lt;td>- 작업 중 시스템 리소스를 독점&lt;/td>
&lt;td>- 리소스를 효율적으로 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 메모리 사용량이 예측 가능&lt;/td>
&lt;td>- 동시성으로 인한 메모리 사용량 변동 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 리소스 해제가 명확함&lt;/td>
&lt;td>- 리소스 해제 시점 관리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- 단순 작업에서는 오버헤드가 적음&lt;/td>
&lt;td>- 문맥 교환으로 인한 오버헤드 발생 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- I/O 작업에서 성능 저하&lt;/td>
&lt;td>- I/O 작업에서 높은 성능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 동시성 처리에 제한적&lt;/td>
&lt;td>- 높은 동시성 처리 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 처리&lt;/strong>&lt;/td>
&lt;td>- 동기적 에러 처리 가능&lt;/td>
&lt;td>- 비동기적 에러 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- try-catch로 직접적인 처리&lt;/td>
&lt;td>- 콜백이나 Promise로 에러 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 스택 트레이스가 명확함&lt;/td>
&lt;td>- 스택 트레이스 추적이 복잡할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합한 사용 사례&lt;/strong>&lt;/td>
&lt;td>- 빠른 CPU 연산 작업&lt;/td>
&lt;td>- 네트워크 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 간단한 파일 읽기/쓰기&lt;/td>
&lt;td>- 대용량 파일 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 메모리 내 데이터 처리&lt;/td>
&lt;td>- 데이터베이스 쿼리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 동기화가 필요한 작업&lt;/td>
&lt;td>- 독립적인 병렬 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로그래밍 모델&lt;/strong>&lt;/td>
&lt;td>- 절차적 프로그래밍에 적합&lt;/td>
&lt;td>- 이벤트 기반 프로그래밍에 적합&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 코드 흐름이 직관적&lt;/td>
&lt;td>- 콜백이나 Promise 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 디버깅이 상대적으로 쉬움&lt;/td>
&lt;td>- 복잡한 비동기 패턴 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>시스템 확장성&lt;/strong>&lt;/td>
&lt;td>- 수직적 확장에 제한적&lt;/td>
&lt;td>- 수평적/수직적 확장 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 동시 처리 능력 제한&lt;/td>
&lt;td>- 높은 동시성 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 시스템 리소스 제약&lt;/td>
&lt;td>- 효율적인 리소스 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>개발 복잡도&lt;/strong>&lt;/td>
&lt;td>- 구현이 단순하고 직관적&lt;/td>
&lt;td>- 상태 관리가 필요함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 코드 흐름 추적이 쉬움&lt;/td>
&lt;td>- 비동기 로직으로 인한 복잡도 증가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 유지보수가 상대적으로 용이&lt;/td>
&lt;td>- 디버깅과 테스트가 어려울 수 있음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>실제 애플리케이션 개발에서는 각 작업의 특성과 요구사항을 고려하여 적절한 방식을 선택해야 한다.&lt;br>
특히:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>시스템의 응답성이 중요한 경우:&lt;/p>
&lt;ul>
&lt;li>Non-Blocking 방식이 더 적합할 수 있다.&lt;/li>
&lt;li>사용자 인터페이스의 반응성을 유지할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>정확성과 순서가 중요한 경우:&lt;/p>
&lt;ul>
&lt;li>Blocking 방식이 더 적합할 수 있다.&lt;/li>
&lt;li>작업의 순서와 결과를 정확히 제어할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>리소스 활용이 중요한 경우:&lt;/p>
&lt;ul>
&lt;li>Non-Blocking 방식이 시스템 리소스를 더 효율적으로 활용할 수 있다.&lt;/li>
&lt;li>높은 처리량이 필요한 시스템에 적합하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 특성들을 잘 이해하고 적절히 조합하여 사용하는 것이 현대 애플리케이션 개발에서 매우 중요하다.&lt;/p>
&lt;h3>최신 트렌드 및 발전 방향&lt;/h3>&lt;ol>
&lt;li>시스템 설계 측면&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>하이브리드 접근 방식의 증가&lt;/li>
&lt;li>마이크로서비스 아키텍처에서의 활용&lt;/li>
&lt;li>클라우드 네이티브 환경에서의 최적화&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>프로그래밍 언어 측면&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>비동기 프로그래밍 지원 강화&lt;/li>
&lt;li>새로운 동시성 모델 도입&lt;/li>
&lt;li>효율적인 리소스 관리 메커니즘 개발&lt;/li>
&lt;/ul>
&lt;h3>실제 구현 시 고려사항&lt;/h3>&lt;ol>
&lt;li>시스템 설계 시 고려사항&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>작업의 특성과 요구사항 분석&lt;/li>
&lt;li>리소스 사용량 예측&lt;/li>
&lt;li>확장성 고려&lt;/li>
&lt;li>에러 처리 메커니즘 설계&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>성능 최적화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>적절한 타임아웃 설정&lt;/li>
&lt;li>버퍼 크기 조정&lt;/li>
&lt;li>스레드 풀 관리&lt;/li>
&lt;li>메모리 사용량 모니터링&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>동기(Synchronous)와 비동기(Asynchronous)</title><link>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous/</link><pubDate>Tue, 12 Nov 2024 00:57:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/synchronous-and-asynchronous/</guid><description>
&lt;h2>동기(Synchronous)와 비동기(Asynchronous)&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>카테고리&lt;/th>
&lt;th>동기(Synchronous)&lt;/th>
&lt;th>비동기(Asynchronous)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>기본 개념&lt;/strong>&lt;/td>
&lt;td>- 작업이 순차적으로 실행됨&lt;/td>
&lt;td>- 작업이 독립적으로 실행됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 이전 작업이 완료될 때까지 다음 작업 대기&lt;/td>
&lt;td>- 작업의 완료를 기다리지 않고 다음 작업 진행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 실행 순서가 보장됨&lt;/td>
&lt;td>- 실행 순서가 보장되지 않음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>처리 방식&lt;/strong>&lt;/td>
&lt;td>- 단일 스레드에서 순차적 처리&lt;/td>
&lt;td>- 멀티 스레드 또는 이벤트 루프 기반 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 작업 완료까지 대기&lt;/td>
&lt;td>- 작업 완료 시 콜백/Promise/async-await 등으로 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 직관적인 코드 흐름&lt;/td>
&lt;td>- 비선형적 코드 흐름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>장점&lt;/strong>&lt;/td>
&lt;td>- 코드의 가독성이 좋음&lt;/td>
&lt;td>- 시스템 자원의 효율적 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 디버깅이 용이함&lt;/td>
&lt;td>- 더 나은 사용자 경험 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 에러 처리가 간단함&lt;/td>
&lt;td>- 높은 처리량(Throughput)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>단점&lt;/strong>&lt;/td>
&lt;td>- 시스템 자원 비효율적 사용&lt;/td>
&lt;td>- 코드의 복잡성 증가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 응답 시간이 길어질 수 있음&lt;/td>
&lt;td>- 디버깅이 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 사용자 경험 저하 가능성&lt;/td>
&lt;td>- 에러 처리가 복잡함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>적합한 사용 사례&lt;/strong>&lt;/td>
&lt;td>- 간단한 계산 작업&lt;/td>
&lt;td>- 네트워크 요청&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 메모리 내 데이터 처리&lt;/td>
&lt;td>- 파일 입출력&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 작은 크기의 데이터 처리&lt;/td>
&lt;td>- 대용량 데이터 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 순차적 처리가 필요한 작업&lt;/td>
&lt;td>- 독립적으로 실행 가능한 작업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>에러 처리&lt;/strong>&lt;/td>
&lt;td>- try-catch 블록으로 직접 처리&lt;/td>
&lt;td>- Promise의 catch 또는 try-catch와 async-await 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 즉시 에러 감지 및 처리&lt;/td>
&lt;td>- 에러 처리가 비동기적으로 발생&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 스택 트레이스 추적이 용이&lt;/td>
&lt;td>- 에러 발생 지점 추적이 복잡할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>성능 특성&lt;/strong>&lt;/td>
&lt;td>- CPU 집약적 작업에 유리&lt;/td>
&lt;td>- I/O 집약적 작업에 유리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 메모리 사용량이 예측 가능&lt;/td>
&lt;td>- 동시 처리로 인한 메모리 사용량 변동&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 단일 작업 처리 시간이 빠름&lt;/td>
&lt;td>- 전체 처리량 최적화에 유리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>코드 관리&lt;/strong>&lt;/td>
&lt;td>- 코드 구조가 단순함&lt;/td>
&lt;td>- 상태 관리가 필요함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 유지보수가 상대적으로 쉬움&lt;/td>
&lt;td>- 비동기 패턴에 대한 이해 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 테스트 작성이 용이함&lt;/td>
&lt;td>- 테스트 시나리오가 복잡할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>리소스 활용&lt;/strong>&lt;/td>
&lt;td>- 단일 리소스 점유&lt;/td>
&lt;td>- 리소스의 효율적 분배&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 대기 시간 동안 블로킹&lt;/td>
&lt;td>- 대기 시간 동안 다른 작업 수행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>- 시스템 부하가 예측 가능&lt;/td>
&lt;td>- 동시성으로 인한 부하 변동 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>최신 트렌드 및 발전 방향&lt;/h3>&lt;h4>동기 프로그래밍의 발전&lt;/h4>&lt;ul>
&lt;li>코루틴(Coroutine) 도입&lt;/li>
&lt;li>제너레이터(Generator) 함수 활용&lt;/li>
&lt;li>구조적 동시성(Structured Concurrency) 개념 도입&lt;/li>
&lt;/ul>
&lt;h4>비동기 프로그래밍의 발전&lt;/h4>&lt;ul>
&lt;li>Promise와 async/await의 보편화&lt;/li>
&lt;li>반응형 프로그래밍(Reactive Programming)의 확산&lt;/li>
&lt;li>이벤트 기반 아키텍처의 발전&lt;/li>
&lt;li>비동기 스트림 처리 기술의 발전&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Session base Auth and Cookie base Auth</title><link>https://buenhyden.github.io/til/2024/11/session-base-auth-and-cookie-base-auth/</link><pubDate>Mon, 11 Nov 2024 02:10:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/session-base-auth-and-cookie-base-auth/</guid><description>
&lt;h2>Session Base Auth and Cookie Base Auth&lt;/h2>&lt;p>세션 기반 인증(Session Based Authentication)과 쿠키 기반 인증(Cookie Based Authentication)은 웹 애플리케이션에서 사용자 인증을 처리하는 두 가지 주요 방식이다.&lt;br>
두 용어는 종종 혼용되어 사용되지만, 정확히 말하면 서로 다른 개념으로, 쿠키 기반 인증은 클라이언트 측의 저장 메커니즘을 가리키는 반면, 세션 기반 인증은 서버 측의 상태 관리 방식을 의미한다.&lt;br>
실제로 대부분의 세션 기반 인증은 쿠키를 전송 수단으로 사용한다. 이것이 바로 이 두 용어가 자주 혼용되는 이유이다.&lt;/p>
&lt;p>두 인증 방식을 비교 분석한 표:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>쿠키 기반 인증&lt;/th>
&lt;th>세션 기반 인증&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>데이터 저장 위치&lt;/td>
&lt;td>클라이언트 브라우저&lt;/td>
&lt;td>서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안성&lt;/td>
&lt;td>상대적으로 낮음 (클라이언트에 데이터 노출)&lt;/td>
&lt;td>높음 (서버에서 데이터 관리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>높음 (서버 부하 적음)&lt;/td>
&lt;td>상대적으로 낮음 (서버 메모리 사용)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>단순함&lt;/td>
&lt;td>더 복잡함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 용량 제한&lt;/td>
&lt;td>브라우저 제한 (보통 4KB)&lt;/td>
&lt;td>서버 리소스에 따라 유동적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>클라이언트 의존성&lt;/td>
&lt;td>높음 (쿠키 비활성화 시 작동 안 함)&lt;/td>
&lt;td>낮음 (다른 전송 방식 사용 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 부하&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>상대적으로 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CSRF 취약성&lt;/td>
&lt;td>취약할 수 있음&lt;/td>
&lt;td>대책 마련 시 더 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 수정 위험&lt;/td>
&lt;td>클라이언트에서 수정 가능&lt;/td>
&lt;td>서버에서만 수정 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>만료 관리&lt;/td>
&lt;td>클라이언트 측에서 관리&lt;/td>
&lt;td>서버 측에서 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>실제로는 이 두 방식이 함께 사용되는 경우가 많다.&lt;br>
전형적인 세션 기반 인증의 구현 과정을 보면:&lt;/p>
&lt;ol>
&lt;li>사용자 로그인 시:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 서버에서 세션 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">session&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">userId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 세션 ID를 쿠키로 전송
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cookie&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;sessionId&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sessionId&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">httpOnly&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">secure&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>이후 요청 처리:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 쿠키로부터 세션 ID 읽기
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">sessionId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cookies&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sessionId&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 서버의 세션 저장소에서 데이터 조회
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">sessionStore&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sessionId&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이러한 하이브리드 접근 방식의 장점은:&lt;/p>
&lt;ol>
&lt;li>보안성: 중요 데이터는 서버에 보관&lt;/li>
&lt;li>편의성: 쿠키의 자동 전송 메커니즘 활용&lt;/li>
&lt;li>유연성: 필요에 따라 추가 정보 저장 가능&lt;/li>
&lt;/ol>
&lt;p>따라서 &amp;ldquo;쿠키 기반 인증이냐 세션 기반 인증이냐&amp;quot;의 선택은 실제로는 &amp;ldquo;순수 쿠키 저장 방식이냐 쿠키-세션 하이브리드 방식이냐&amp;quot;의 선택이라고 볼 수 있다.&lt;br>
대부분의 현대 웹 애플리케이션은 보안과 사용자 경험을 위해 하이브리드 방식을 선택하고 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Linear Data Structure vs Non-Linear Data Structure</title><link>https://buenhyden.github.io/til/2024/11/linear-data-structure-vs-non-linear-data-structure/</link><pubDate>Wed, 06 Nov 2024 11:00:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/linear-data-structure-vs-non-linear-data-structure/</guid><description>
&lt;h2>Linear Data Structure Vs Non-Linear Data Structure&lt;/h2>&lt;p>데이터 구조는 크게 Linear Data Structure와 Non-Linear Data Structure로 나눌 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>측면&lt;/th>
&lt;th>Linear Data Structure&lt;/th>
&lt;th>Non-Linear Data Structure&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>데이터 요소가 순차적 또는 선형적으로 배열된 구조&lt;/td>
&lt;td>데이터 요소가 순차적이거나 선형적으로 배열되지 않은 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구조&lt;/td>
&lt;td>단일 레벨 구조&lt;/td>
&lt;td>다중 레벨 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 관계&lt;/td>
&lt;td>요소 간 1:1 관계&lt;/td>
&lt;td>요소 간 1:N 또는 N:N 관계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>순회&lt;/td>
&lt;td>단일 실행으로 모든 요소 순회 가능&lt;/td>
&lt;td>단일 실행으로 모든 요소 순회 불가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>구현이 상대적으로 간단&lt;/td>
&lt;td>구현이 상대적으로 복잡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 사용&lt;/td>
&lt;td>메모리 사용이 덜 효율적&lt;/td>
&lt;td>메모리 사용이 더 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>시간 복잡도&lt;/td>
&lt;td>입력 크기에 따라 증가&lt;/td>
&lt;td>특정 작업에서 더 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 접근&lt;/td>
&lt;td>순차적 접근&lt;/td>
&lt;td>계층적 또는 네트워크 기반 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>삽입/삭제&lt;/td>
&lt;td>상대적으로 간단&lt;/td>
&lt;td>더 복잡하지만 유연함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>응용 분야&lt;/td>
&lt;td>간단한 데이터 저장 및 처리&lt;/td>
&lt;td>복잡한 관계 표현, AI, 이미지 처리 등&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>예시&lt;/td>
&lt;td>배열, 연결 리스트, 스택, 큐&lt;/td>
&lt;td>트리, 그래프, 해시 테이블, 힙&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>공통점:&lt;/p>
&lt;ol>
&lt;li>둘 다 데이터를 구조화하고 관리하는 방법을 제공한다.&lt;/li>
&lt;li>특정 작업에 대해 효율적인 알고리즘을 지원한다.&lt;/li>
&lt;li>데이터의 삽입, 삭제, 검색 연산을 수행할 수 있다.&lt;/li>
&lt;/ol>
&lt;p>주요 차이점:&lt;/p>
&lt;ol>
&lt;li>데이터 배열 방식 (순차적 vs 계층적/네트워크)&lt;/li>
&lt;li>구현 복잡도 (간단 vs 복잡)&lt;/li>
&lt;li>메모리 효율성 (덜 효율적 vs 더 효율적)&lt;/li>
&lt;li>데이터 관계 표현 (1:1 vs 1:N 또는 N:N)&lt;/li>
&lt;li>응용 분야 (간단한 데이터 처리 vs 복잡한 관계 표현)&lt;/li>
&lt;/ol>
&lt;h3>선형 데이터 구조 (Linear Data Structure) 유형&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구조&lt;/th>
&lt;th>정의&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>주요 연산&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Array&lt;/td>
&lt;td>연속된 메모리 위치에 동일한 유형의 요소를 저장하는 구조&lt;/td>
&lt;td>- 고정 크기&lt;br>- 인덱스로 접근&lt;/td>
&lt;td>- 빠른 접근 시간 O(1)&lt;br>- 메모리 효율적&lt;/td>
&lt;td>- 크기 변경 어려움&lt;br>- 삽입/삭제 비효율적&lt;/td>
&lt;td>접근, 검색, 삽입, 삭제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Linked List&lt;/td>
&lt;td>노드가 데이터와 다음 노드 참조를 포함하는 연결 구조&lt;/td>
&lt;td>- 동적 크기&lt;br>- 비연속 메모리&lt;/td>
&lt;td>- 삽입/삭제 효율적&lt;br>- 유연한 크기&lt;/td>
&lt;td>- 임의 접근 어려움&lt;br>- 추가 메모리 필요&lt;/td>
&lt;td>삽입, 삭제, 순회&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack&lt;/td>
&lt;td>LIFO(Last-In-First-Out) 원칙을 따르는 구조&lt;/td>
&lt;td>- 한쪽 끝에서만 연산&lt;br>- 후입선출&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 역추적에 유용&lt;/td>
&lt;td>- 제한된 데이터 접근&lt;/td>
&lt;td>push, pop, peek&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Queue&lt;/td>
&lt;td>FIFO(First-In-First-Out) 원칙을 따르는 구조&lt;/td>
&lt;td>- 양쪽 끝에서 연산&lt;br>- 선입선출&lt;/td>
&lt;td>- 순서 보존&lt;br>- 버퍼링에 유용&lt;/td>
&lt;td>- 중간 데이터 접근 어려움&lt;/td>
&lt;td>enqueue, dequeue&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deque&lt;/td>
&lt;td>양쪽 끝에서 삽입과 삭제가 가능한 구조&lt;/td>
&lt;td>- 양방향 연산&lt;br>- 스택과 큐 기능 결합&lt;/td>
&lt;td>- 유연한 데이터 처리&lt;br>- 다양한 알고리즘 지원&lt;/td>
&lt;td>- 구현 복잡성&lt;/td>
&lt;td>pushFront, pushBack, popFront, popBack&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>비선형 데이터 구조 (Non-Linear Data Structure) 유형&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구조&lt;/th>
&lt;th>정의&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>주요 연산&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Graph&lt;/td>
&lt;td>노드(정점)와 엣지(간선)로 구성된 비선형 데이터 구조&lt;/td>
&lt;td>- 계층적 또는 네트워크 관계 표현&lt;br>- 방향성 있는/없는 그래프로 구분&lt;/td>
&lt;td>- 복잡한 관계 모델링&lt;br>- 효율적인 경로 탐색&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 메모리 사용량 큼&lt;/td>
&lt;td>삽입, 삭제, 탐색, 순회&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hash-based Structure&lt;/td>
&lt;td>키를 값에 매핑하는 데이터 구조&lt;/td>
&lt;td>- 해시 함수 사용&lt;br>- 충돌 해결 메커니즘 필요&lt;/td>
&lt;td>- 빠른 검색, 삽입, 삭제 (평균 O(1))&lt;br>- 효율적인 데이터 관리&lt;/td>
&lt;td>- 최악의 경우 성능 저하&lt;br>- 순서 정보 손실&lt;/td>
&lt;td>삽입, 검색, 삭제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tree&lt;/td>
&lt;td>계층적 구조를 가진 노드들의 집합&lt;/td>
&lt;td>- 루트 노드와 자식 노드로 구성&lt;br>- 사이클 없음&lt;/td>
&lt;td>- 계층적 데이터 표현&lt;br>- 효율적인 검색&lt;/td>
&lt;td>- 불균형 시 성능 저하&lt;br>- 구현 복잡성&lt;/td>
&lt;td>삽입, 삭제, 검색, 순회&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Heap&lt;/td>
&lt;td>완전 이진 트리 기반의 특수한 트리 구조&lt;/td>
&lt;td>- 최대 힙 또는 최소 힙&lt;br>- 부모-자식 간 대소 관계 유지&lt;/td>
&lt;td>- 최대/최소값 빠른 접근&lt;br>- 우선순위 큐 구현에 효과적&lt;/td>
&lt;td>- 임의 노드 접근 어려움&lt;br>- 중간값 찾기 비효율적&lt;/td>
&lt;td>삽입, 삭제, 힙 정렬&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>Hash-based data structure가 Non-linear data structure로 분류되는 근거&lt;/p>
&lt;ol>
&lt;li>고유한 접근 방식: Hash-based 구조는 해시 함수를 사용하여 데이터를 저장하고 검색한다. 이는 다른 non-linear 구조와는 다른 독특한 접근 방식이다.&lt;/li>
&lt;li>성능 특성: Hash-based 구조는 평균적으로 O(1)의 시간 복잡도로 삽입, 검색, 삭제 연산을 수행할 수 있어, 다른 non-linear 구조와 구별된다.&lt;/li>
&lt;li>다양한 응용: Hash-based 구조는 associative arrays, 데이터베이스 인덱싱, 캐시, 집합 등 다양한 응용 분야에서 사용된다.&lt;/li>
&lt;li>충돌 해결 메커니즘: Hash-based 구조는 충돌 해결을 위한 고유한 메커니즘(예: separate chaining, linear probing)을 가지고 있어, 다른 non-linear 구조와 구별된다.&lt;/li>
&lt;li>공간-시간 트레이드오프: Hash-based 구조는 메모리 사용과 연산 속도 사이의 특별한 균형을 제공한다.&lt;/li>
&lt;li>확률적 성능: Hash-based 구조의 성능은 해시 함수의 품질과 충돌 해결 방법에 따라 확률적으로 결정되며, 이는 다른 non-linear 구조와 다른 특성이다.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Primitive data structure vs Non-Primitive data structure</title><link>https://buenhyden.github.io/til/2024/11/primitive-data-structure-vs-non-primitive-data-structure/</link><pubDate>Wed, 06 Nov 2024 08:39:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/primitive-data-structure-vs-non-primitive-data-structure/</guid><description>
&lt;h2>Primitive Data Structure Vs Non-Primitive Data Structure&lt;/h2>&lt;h3>Primitive Data Structure&lt;/h3>&lt;p>Primitive data structure는 프로그래밍 언어에 내장된 가장 단순하고 기본적인 데이터 타입이다.&lt;br>
이들은 단일 값을 표현하며, 더 이상 분해할 수 없는 가장 작은 단위의 데이터 구조이다.&lt;/p>
&lt;h4>주요 특징&lt;/h4>&lt;ol>
&lt;li>&lt;strong>단순성&lt;/strong>: 가장 기본적이고 이해하기 쉬운 데이터 타입이다.&lt;/li>
&lt;li>&lt;strong>고정 크기&lt;/strong>: 일반적으로 고정된 메모리 크기를 가진다.&lt;/li>
&lt;li>&lt;strong>효율성&lt;/strong>: 메모리 사용과 접근 시간 측면에서 매우 효율적이다.&lt;/li>
&lt;li>&lt;strong>직접 표현&lt;/strong>: 컴퓨터 하드웨어에서 직접 지원되는 데이터 타입이다.&lt;/li>
&lt;li>&lt;strong>값 의미론&lt;/strong>: 변수에 실제 값이 직접 저장된다.&lt;/li>
&lt;li>&lt;strong>스택 할당&lt;/strong>: 주로 스택 메모리에 할당되어 빠른 접근이 가능하다.&lt;/li>
&lt;/ol>
&lt;p>주요 primitive data structure들을 비교 분석하여 정리한 표:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 타입&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>비트 수&lt;/th>
&lt;th>값 범위&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>Java&lt;/th>
&lt;th>JavaScript&lt;/th>
&lt;th>Python&lt;/th>
&lt;th>Go&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Boolean&lt;/td>
&lt;td>참/거짓 값을 나타내는 논리 데이터 타입&lt;/td>
&lt;td>1 비트 또는 1 바이트&lt;/td>
&lt;td>true/false&lt;/td>
&lt;td>조건문과 논리 연산에 사용&lt;/td>
&lt;td>boolean&lt;/td>
&lt;td>Boolean&lt;/td>
&lt;td>bool&lt;/td>
&lt;td>bool&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Character&lt;/td>
&lt;td>단일 문자를 나타내는 데이터 타입&lt;/td>
&lt;td>16 비트 (Java), 8 비트 (대부분)&lt;/td>
&lt;td>U+0000 ~ U+FFFF (Java)&lt;/td>
&lt;td>문자 인코딩에 따라 다름&lt;/td>
&lt;td>char&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>byte (uint8)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>String&lt;/td>
&lt;td>문자열을 나타내는 데이터 타입&lt;/td>
&lt;td>가변&lt;/td>
&lt;td>제한 없음 (메모리 한계까지)&lt;/td>
&lt;td>불변(Java, Python), 가변(JavaScript)&lt;/td>
&lt;td>String&lt;/td>
&lt;td>String&lt;/td>
&lt;td>str&lt;/td>
&lt;td>string&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Float (Half Precision)&lt;/td>
&lt;td>16비트 부동 소수점&lt;/td>
&lt;td>16 비트&lt;/td>
&lt;td>±6.10 × 10^−5 ~ ±6.55 × 10^4&lt;/td>
&lt;td>정밀도 낮음, 저장 공간 절약&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>float16 (패키지)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Float (Single Precision)&lt;/td>
&lt;td>32비트 부동 소수점&lt;/td>
&lt;td>32 비트&lt;/td>
&lt;td>±1.18 × 10^−38 ~ ±3.4 × 10^38&lt;/td>
&lt;td>일반적인 실수 계산에 사용&lt;/td>
&lt;td>float&lt;/td>
&lt;td>Number&lt;/td>
&lt;td>float&lt;/td>
&lt;td>float32&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Float (Double Precision)&lt;/td>
&lt;td>64비트 부동 소수점&lt;/td>
&lt;td>64 비트&lt;/td>
&lt;td>±2.23 × 10^−308 ~ ±1.80 × 10^308&lt;/td>
&lt;td>높은 정밀도 필요 시 사용&lt;/td>
&lt;td>double&lt;/td>
&lt;td>Number&lt;/td>
&lt;td>float&lt;/td>
&lt;td>float64&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Float (Quadruple Precision)&lt;/td>
&lt;td>128비트 부동 소수점&lt;/td>
&lt;td>128 비트&lt;/td>
&lt;td>±3.36 × 10^−4932 ~ ±1.18 × 10^4932&lt;/td>
&lt;td>매우 높은 정밀도, 특수 용도&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>Decimal (모듈)&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integer (Byte)&lt;/td>
&lt;td>8비트 정수&lt;/td>
&lt;td>8 비트&lt;/td>
&lt;td>-128 ~ 127&lt;/td>
&lt;td>작은 범위의 정수에 사용&lt;/td>
&lt;td>byte&lt;/td>
&lt;td>-&lt;/td>
&lt;td>int&lt;/td>
&lt;td>int8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integer (Short)&lt;/td>
&lt;td>16비트 정수&lt;/td>
&lt;td>16 비트&lt;/td>
&lt;td>-32,768 ~ 32,767&lt;/td>
&lt;td>중간 범위의 정수에 사용&lt;/td>
&lt;td>short&lt;/td>
&lt;td>-&lt;/td>
&lt;td>int&lt;/td>
&lt;td>int16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integer (Int)&lt;/td>
&lt;td>32비트 정수&lt;/td>
&lt;td>32 비트&lt;/td>
&lt;td>-2^31 ~ 2^31 - 1&lt;/td>
&lt;td>가장 일반적으로 사용되는 정수 타입&lt;/td>
&lt;td>int&lt;/td>
&lt;td>Number&lt;/td>
&lt;td>int&lt;/td>
&lt;td>int&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integer (Long)&lt;/td>
&lt;td>64비트 정수&lt;/td>
&lt;td>64 비트&lt;/td>
&lt;td>-2^63 ~ 2^63 - 1&lt;/td>
&lt;td>매우 큰 정수 값에 사용&lt;/td>
&lt;td>long&lt;/td>
&lt;td>BigInt&lt;/td>
&lt;td>int&lt;/td>
&lt;td>int64&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>사용법:&lt;/p>
&lt;ul>
&lt;li>Java:
&lt;ul>
&lt;li>Boolean: &lt;code>boolean b = true;&lt;/code>&lt;/li>
&lt;li>Character: &lt;code>char c = 'A';&lt;/code>&lt;/li>
&lt;li>String: &lt;code>String s = &amp;quot;Hello&amp;quot;;&lt;/code>&lt;/li>
&lt;li>Float: &lt;code>float f = 3.14f;&lt;/code> &lt;code>double d = 3.14;&lt;/code>&lt;/li>
&lt;li>Integer: &lt;code>byte b = 100;&lt;/code> &lt;code>short s = 1000;&lt;/code> &lt;code>int i = 10000;&lt;/code> &lt;code>long l = 1000000L;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>JavaScript:
&lt;ul>
&lt;li>Boolean: &lt;code>let b = true;&lt;/code>&lt;/li>
&lt;li>String: &lt;code>let s = &amp;quot;Hello&amp;quot;;&lt;/code>&lt;/li>
&lt;li>Number: &lt;code>let n = 3.14;&lt;/code> (모든 숫자는 64비트 부동 소수점)&lt;/li>
&lt;li>BigInt: &lt;code>let bi = 1234567890123456789n;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Python:
&lt;ul>
&lt;li>Boolean: &lt;code>b = True&lt;/code>&lt;/li>
&lt;li>String: &lt;code>s = &amp;quot;Hello&amp;quot;&lt;/code>&lt;/li>
&lt;li>Float: &lt;code>f = 3.14&lt;/code>&lt;/li>
&lt;li>Integer: &lt;code>i = 10000&lt;/code> (자동으로 크기 조정)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Go:
&lt;ul>
&lt;li>Boolean: &lt;code>var b bool = true&lt;/code>&lt;/li>
&lt;li>String: &lt;code>var s string = &amp;quot;Hello&amp;quot;&lt;/code>&lt;/li>
&lt;li>Float: &lt;code>var f float32 = 3.14&lt;/code> &lt;code>var d float64 = 3.14&lt;/code>&lt;/li>
&lt;li>Integer: &lt;code>var i int = 10000&lt;/code> &lt;code>var l int64 = 1000000&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>각 언어별 특징:&lt;/p>
&lt;ul>
&lt;li>Java: 가장 세분화된 데이터 타입 지원&lt;/li>
&lt;li>JavaScript: 동적 타입 언어로, 대부분의 숫자를 Number로 처리&lt;/li>
&lt;li>Python: 동적 타입 언어로, 정수와 부동소수점을 자동으로 처리&lt;/li>
&lt;li>Go: 정적 타입 언어로, 명시적인 타입 선언 필요&lt;/li>
&lt;/ul>
&lt;h3>Non-Primitive Data Structure&lt;/h3>&lt;p>Non-primitive data structure(비원시 자료구조)는 원시 자료형을 기반으로 만들어진 더 복잡하고 고급화된 자료구조를 의미한다. 이는 프로그래밍 언어에서 기본적으로 제공하는 원시 자료형을 조합하여 만든 사용자 정의 자료구조라고도 볼 수 있다.&lt;/p>
&lt;h4>주요 특징&lt;/h4>&lt;ol>
&lt;li>&lt;strong>복합성&lt;/strong>: 여러 원시 자료형을 조합하여 만들어진 복합적인 구조를 가진다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: 데이터의 저장, 접근, 수정이 더 유연하게 이루어질 수 있다.&lt;/li>
&lt;li>&lt;strong>동적 크기&lt;/strong>: 대부분의 비원시 자료구조는 크기가 동적으로 변할 수 있다.&lt;/li>
&lt;li>&lt;strong>참조 타입&lt;/strong>: 변수에 값 대신 메모리 주소를 저장한다.&lt;/li>
&lt;/ol>
&lt;h4>분류&lt;/h4>&lt;p>Non-primitive data structure는 크게 두 가지로 분류된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>Linear Data Structure&lt;/th>
&lt;th>Non-Linear Data Structure&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>데이터 요소가 순차적으로 배열되어 각 요소가 이전 및 다음 요소와 연결된 구조&lt;/td>
&lt;td>데이터 요소가 계층적으로 구성되어 여러 경로로 연결될 수 있는 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 단일 레벨 구조&lt;br>- 한 번의 실행으로 모든 요소 순회 가능&lt;br>- 구현이 상대적으로 간단&lt;br>- 메모리 사용이 덜 효율적&lt;/td>
&lt;td>- 다중 레벨 구조&lt;br>- 한 번의 실행으로 모든 요소 순회 불가&lt;br>- 구현이 상대적으로 복잡&lt;br>- 메모리 사용이 더 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 유형&lt;/td>
&lt;td>Array, Linked List, Stack, Queue, Deque&lt;/td>
&lt;td>Graph, Hash-based Structure, Tree, Heap&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>각 데이터 구조의 특징과 주요 프로그래밍 언어에서의 지원 여부 및 사용법&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 구조&lt;/th>
&lt;th>유형&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>Java&lt;/th>
&lt;th>JavaScript&lt;/th>
&lt;th>Python&lt;/th>
&lt;th>Go&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Array&lt;/td>
&lt;td>Linear&lt;/td>
&lt;td>연속된 메모리 위치에 요소 저장, 인덱스로 빠른 접근 가능&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;td>기본 지원 (List)&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Linked List&lt;/td>
&lt;td>Linear&lt;/td>
&lt;td>노드가 다음 노드를 가리키는 구조, 삽입/삭제 효율적&lt;/td>
&lt;td>java.util.LinkedList&lt;/td>
&lt;td>라이브러리 필요&lt;/td>
&lt;td>라이브러리 필요&lt;/td>
&lt;td>container/list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack&lt;/td>
&lt;td>Linear&lt;/td>
&lt;td>LIFO 원칙, 푸시/팝 연산&lt;/td>
&lt;td>java.util.Stack&lt;/td>
&lt;td>배열로 구현 가능&lt;/td>
&lt;td>리스트로 구현 가능&lt;/td>
&lt;td>슬라이스로 구현 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Queue&lt;/td>
&lt;td>Linear&lt;/td>
&lt;td>FIFO 원칙, 인큐/디큐 연산&lt;/td>
&lt;td>java.util.Queue&lt;/td>
&lt;td>배열로 구현 가능&lt;/td>
&lt;td>queue 모듈&lt;/td>
&lt;td>container/list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deque&lt;/td>
&lt;td>Linear&lt;/td>
&lt;td>양쪽 끝에서 삽입/삭제 가능&lt;/td>
&lt;td>java.util.Deque&lt;/td>
&lt;td>배열로 구현 가능&lt;/td>
&lt;td>collections.deque&lt;/td>
&lt;td>container/list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Graph&lt;/td>
&lt;td>Non-Linear&lt;/td>
&lt;td>노드와 엣지로 구성, 복잡한 관계 표현&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;td>라이브러리 필요&lt;/td>
&lt;td>networkx 라이브러리&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hash-based Structure&lt;/td>
&lt;td>Non-Linear&lt;/td>
&lt;td>키-값 쌍으로 데이터 저장, 빠른 검색&lt;/td>
&lt;td>java.util.HashMap&lt;/td>
&lt;td>Object, Map&lt;/td>
&lt;td>dict&lt;/td>
&lt;td>map&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tree&lt;/td>
&lt;td>Non-Linear&lt;/td>
&lt;td>계층적 구조, 루트와 자식 노드로 구성&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Heap&lt;/td>
&lt;td>Non-Linear&lt;/td>
&lt;td>완전 이진 트리 기반, 최대/최소 값 빠른 접근&lt;/td>
&lt;td>java.util.PriorityQueue&lt;/td>
&lt;td>사용자 정의 필요&lt;/td>
&lt;td>heapq 모듈&lt;/td>
&lt;td>container/heap&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 언어별 특징:&lt;/p>
&lt;ul>
&lt;li>Java: 대부분의 데이터 구조를 기본적으로 지원하거나 java.util 패키지를 통해 제공한다.&lt;/li>
&lt;li>JavaScript: 배열과 객체를 기본으로 제공하며, 다른 구조는 사용자 정의나 라이브러리를 통해 구현해야 한다.&lt;/li>
&lt;li>Python: 리스트, 딕셔너리, 세트 등 다양한 데이터 구조를 기본으로 제공하며, 추가 모듈을 통해 더 많은 구조를 지원한다.&lt;/li>
&lt;li>Go: 배열, 슬라이스, 맵을 기본으로 제공하며, container 패키지를 통해 list, heap 등을 지원한다.&lt;/li>
&lt;/ul>
&lt;p>이 데이터 구조들은 각각의 특성에 따라 다양한 상황에서 효율적으로 사용될 수 있으며, 프로그래밍 언어별로 지원 방식이 다르므로 적절한 선택이 중요하다.&lt;/p>
&lt;h3>Primitive Data Structure Vs Non-Primitive Data Structure 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Primitive Data Structure&lt;/th>
&lt;th>Non-Primitive Data Structure&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>프로그래밍 언어에 내장된 기본 데이터 타입&lt;/td>
&lt;td>기본 데이터 타입을 사용하여 구축된 복잡한 데이터 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>예시&lt;/td>
&lt;td>정수, 실수, 문자, 불리언&lt;/td>
&lt;td>배열, 연결 리스트, 스택, 큐, 트리, 그래프&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>크기&lt;/td>
&lt;td>고정 크기&lt;/td>
&lt;td>동적 크기 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복잡성&lt;/td>
&lt;td>단순함&lt;/td>
&lt;td>복잡함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 효율성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현&lt;/td>
&lt;td>언어에 내장됨&lt;/td>
&lt;td>사용자 정의 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NULL 값&lt;/td>
&lt;td>일반적으로 허용하지 않음&lt;/td>
&lt;td>허용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연산&lt;/td>
&lt;td>기본 연산만 지원&lt;/td>
&lt;td>복잡한 연산 및 메서드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>추상화 수준&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 목적&lt;/td>
&lt;td>단순한 데이터 표현&lt;/td>
&lt;td>복잡한 데이터 관계 및 구조 표현&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>공통점:&lt;/p>
&lt;ol>
&lt;li>둘 다 데이터를 저장하고 관리하는 데 사용된다.&lt;/li>
&lt;li>프로그래밍에서 중요한 역할을 한다.&lt;/li>
&lt;li>특정 연산과 조작이 가능하다.&lt;/li>
&lt;/ol>
&lt;p>차이점:&lt;/p>
&lt;ol>
&lt;li>복잡성: Primitive는 단순하고, Non-Primitive는 복잡하다.&lt;/li>
&lt;li>크기: Primitive는 고정 크기, Non-Primitive는 동적 크기가 가능하다.&lt;/li>
&lt;li>구현: Primitive는 언어에 내장되어 있고, Non-Primitive는 사용자가 정의할 수 있다.&lt;/li>
&lt;li>유연성: Non-Primitive는 더 유연하고 다양한 데이터 관계를 표현할 수 있다.&lt;/li>
&lt;li>메모리 사용: Primitive가 일반적으로 더 효율적이다.&lt;/li>
&lt;li>기능: Non-Primitive는 더 복잡한 연산과 메서드를 제공한다.&lt;/li>
&lt;/ol>
&lt;p>Primitive data structure는 기본적이고 효율적인 데이터 표현에 사용되며, Non-Primitive data structure는 복잡한 데이터 관계와 구조를 표현하는 데 사용된다.
프로그래밍에서는 두 유형을 적절히 조합하여 효율적이고 강력한 애플리케이션을 구축한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>CSR vs SSR</title><link>https://buenhyden.github.io/til/2024/11/csr-vs-ssr/</link><pubDate>Sun, 03 Nov 2024 12:28:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/csr-vs-ssr/</guid><description>
&lt;h2>CSR (Client Side Rendering) Vs SSR (Server Side Rendering)&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>Client Side Rendering (CSR)&lt;/th>
&lt;th>Server Side Rendering (SSR)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>렌더링 방식&lt;/td>
&lt;td>브라우저에서 JavaScript를 실행하여 콘텐츠를 렌더링&lt;/td>
&lt;td>서버에서 HTML을 생성하여 클라이언트에 전달&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>초기 로딩 시간&lt;/td>
&lt;td>상대적으로 긺 (JavaScript 번들을 모두 다운로드하고 실행해야 함)&lt;/td>
&lt;td>상대적으로 빠름 (이미 렌더링된 HTML을 받음)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>초기 컨텐츠 표시&lt;/td>
&lt;td>빈 페이지 후 로딩&lt;/td>
&lt;td>즉시 컨텐츠 표시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 부하&lt;/td>
&lt;td>낮음 (정적 파일만 제공)&lt;/td>
&lt;td>높음 (매 요청마다 HTML 생성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SEO 친화성&lt;/td>
&lt;td>낮음 (JavaScript 실행 전까지 빈 HTML)&lt;/td>
&lt;td>높음 (완성된 HTML이 검색 엔진에 제공)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상호작용성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>후속 페이지 로딩&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>각 요청마다 서버 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Time to First Paint (TFP)&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>빠름&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Time to Interactive (TTI)&lt;/td>
&lt;td>JavaScript 로드 후 빠름&lt;/td>
&lt;td>JavaScript 로드 필요시 추가 시간 소요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 사용량&lt;/td>
&lt;td>클라이언트 측 높음&lt;/td>
&lt;td>서버 측 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 경험&lt;/td>
&lt;td>초기 로딩 후 빠른 페이지 전환&lt;/td>
&lt;td>페이지 전환마다 서버 요청 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱 전략&lt;/td>
&lt;td>JavaScript 파일과 정적 자원 캐싱 용이&lt;/td>
&lt;td>동적 HTML 캐싱이 복잡할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개발 복잡도&lt;/td>
&lt;td>상대적으로 단순 (단일 JavaScript 애플리케이션)&lt;/td>
&lt;td>상대적으로 복잡 (서버와 클라이언트 로직 모두 관리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>중요 로직이 클라이언트에 노출될 수 있음&lt;/td>
&lt;td>중요 로직을 서버에서 처리하여 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오프라인 기능&lt;/td>
&lt;td>구현 용이&lt;/td>
&lt;td>제한적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 업데이트&lt;/td>
&lt;td>실시간 업데이트 용이&lt;/td>
&lt;td>페이지 새로고침 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>초기에 높음, 이후 낮음&lt;/td>
&lt;td>지속적으로 중간 수준&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 인프라 요구사항&lt;/td>
&lt;td>낮음 (정적 호스팅 가능)&lt;/td>
&lt;td>높음 (동적 서버 필요)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리소스 사용&lt;/td>
&lt;td>클라이언트 리소스 많이 사용&lt;/td>
&lt;td>서버 리소스 많이 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 업데이트&lt;/td>
&lt;td>실시간 업데이트 용이&lt;/td>
&lt;td>페이지 새로고침 필요할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 사용 사례&lt;/td>
&lt;td>대시보드, SPA, 관리자 패널&lt;/td>
&lt;td>블로그, 뉴스 사이트, 전자상거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프레임워크 예시&lt;/td>
&lt;td>React, Vue, Angular&lt;/td>
&lt;td>Next.js, Nuxt.js, Angular Universal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유지보수성&lt;/td>
&lt;td>프론트엔드 중심 유지보수&lt;/td>
&lt;td>프론트엔드와 백엔드 모두 유지보수 필요&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 방식은 각각의 장단점이 있으며, 최근에는 이들의 장점을 결합한 하이브리드 렌더링 방식(예: Next.js의 정적 생성과 서버 사이드 렌더링 조합)이 많이 사용되고 있다.&lt;br>
프로젝트의 요구사항과 특성에 따라 적절한 렌더링 방식을 선택하는 것이 중요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Concurrency vs Parallelism</title><link>https://buenhyden.github.io/til/2024/11/concurrency-vs-parallelism/</link><pubDate>Fri, 01 Nov 2024 02:38:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/concurrency-vs-parallelism/</guid><description>
&lt;h2>동시성 (Concurrency) Vs 병렬성 (Parallelism)&lt;/h2>&lt;p>동시성과 병렬성은 모두 여러 작업을 효율적으로 처리하기 위한 방법이지만, 그 접근 방식과 목적이 다르다.&lt;br>
동시성은 작업 관리와 응답성 향상에 중점을 두고, 병렬성은 전체적인 처리 속도 향상에 초점을 맞춘다.&lt;br>
실제 프로그래밍에서는 두 개념을 적절히 조합하여 사용하는 것이 효과적이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/TIL/2024/11/8e925d68-4f47-4ef9-8d51-6a39f19c75d2.jpg"
alt="Concurrent vs Parallel"
loading="lazy" />
&lt;/figure>{: width=&amp;ldquo;700&amp;rdquo; height=&amp;ldquo;400&amp;rdquo; }&lt;br>
&lt;em>Source: &lt;a href="https://www.codeproject.com/Articles/1267757/Concurrency-vs-Parallelism" target="_blank" rel="noopener">https://www.codeproject.com/Articles/1267757/Concurrency-vs-Parallelism&lt;/a>&lt;/em>&lt;/p>
&lt;p>동시성(Concurrency)은 여러 작업이 동시에 진행되는 것처럼 보이게 하는 개념으로, 단일 코어에서도 구현이 가능하며, 실제로는 작업들을 빠르게 전환하며 실행한다. 그래서, 실제로는 동시에 실행되지 않지만, 동시에 실행되는 것처럼 보인다.&lt;br>
이러한 작업들은 CPU가 여러 작업들을 빠르게 번갈아가며 처리하며, 이를 &amp;ldquo;컨텍스트 스위칭(Context Switching)&amp;ldquo;이라고 한다.&lt;/p>
&lt;p>병렬성(Parallelism)은 여러 작업을 실제로 동시에 처리하는 개념으로, 여러 코어나 프로세서가 필요하며, 실제로 동시에 실행된다. 이로 인해 전체적인 처리 속도를 향상시킬 수 있다.&lt;br>
이러한 작업들은 여러 코어나 프로세서가 각각 독립적인 작업을 동시에 처리하며 각 작업은 서로 다른 하드웨어 자원을 사용한다.&lt;/p>
&lt;h3>동시성(Concurrency)과 병렬성(Parallelism) 비교&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>동시성 (Concurrency)&lt;/th>
&lt;th>병렬성 (Parallelism)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>여러 작업을 번갈아가며 실행하여 동시에 처리되는 것처럼 보이게 함&lt;/td>
&lt;td>여러 작업을 실제로 동시에 처리함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실행 방식&lt;/td>
&lt;td>작업 간 빠른 전환 (Context Switching)&lt;/td>
&lt;td>실제 동시 실행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>하드웨어 요구사항&lt;/td>
&lt;td>단일 코어로도 가능&lt;/td>
&lt;td>다중 코어 또는 프로세서 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>목적&lt;/td>
&lt;td>응답성 향상, 자원 효율성 증대&lt;/td>
&lt;td>전체 처리 속도 향상&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>I/O 대기 시간 최소화&lt;/td>
&lt;td>CPU 처리량 최대화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복잡성&lt;/td>
&lt;td>작업 간 전환과 자원 공유로 인해 복잡할 수 있음&lt;/td>
&lt;td>작업 분할과 결과 통합 과정이 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 사례&lt;/td>
&lt;td>웹 서버, 사용자 인터페이스, 멀티태스킹 OS&lt;/td>
&lt;td>대규모 데이터 처리, 과학 계산, 그래픽 렌더링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 방법&lt;/td>
&lt;td>멀티스레딩, 비동기 프로그래밍&lt;/td>
&lt;td>멀티프로세싱, GPU 병렬 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자원 관리&lt;/td>
&lt;td>자원 공유와 동기화 필요&lt;/td>
&lt;td>각 작업이 독립적인 자원 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자원 공유&lt;/td>
&lt;td>쉬움 (공유 메모리)&lt;/td>
&lt;td>어려움 (프로세스 간 통신 필요)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>리소스 효율성&lt;/td>
&lt;td>대기 시간 활용으로 효율적&lt;/td>
&lt;td>CPU 자원 최대 활용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 사용&lt;/td>
&lt;td>공유 메모리 사용&lt;/td>
&lt;td>독립적인 메모리 공간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 작업&lt;/td>
&lt;td>I/O 바운드 작업&lt;br>(파일, 네트워크, DB 작업)&lt;/td>
&lt;td>CPU 바운드 작업&lt;br>(복잡한 계산, 데이터 처리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>단일 시스템 내에서 제한적&lt;br>I/O 작업에 대해 좋은 확장성&lt;/td>
&lt;td>여러 시스템으로 확장 가능&lt;br>CPU 코어 수에 비례하여 확장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 향상&lt;/td>
&lt;td>응답 시간 개선에 중점&lt;/td>
&lt;td>처리량 증가에 중점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>에러 처리&lt;/td>
&lt;td>상대적으로 단순&lt;/td>
&lt;td>복잡한 동기화 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>디버깅 난이도&lt;/td>
&lt;td>상대적으로 어려움 (타이밍 이슈)&lt;/td>
&lt;td>매우 어려움 (동시성 문제 + 분산 시스템 이슈)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로그래밍 모델&lt;/td>
&lt;td>이벤트 기반, 콜백, Promises 등&lt;/td>
&lt;td>MapReduce, 데이터 병렬화 등&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>선택 기준표&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>상황&lt;/th>
&lt;th>권장 방식&lt;/th>
&lt;th>이유&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>웹 서버 개발&lt;/td>
&lt;td>동시성&lt;/td>
&lt;td>대부분 I/O 작업 위주&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>이미지 처리&lt;/td>
&lt;td>병렬성&lt;/td>
&lt;td>CPU 집약적 작업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 인터페이스&lt;/td>
&lt;td>동시성&lt;/td>
&lt;td>반응성 향상 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대규모 데이터 분석&lt;/td>
&lt;td>병렬성&lt;/td>
&lt;td>독립적인 데이터 처리 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간 스트리밍&lt;/td>
&lt;td>동시성&lt;/td>
&lt;td>지속적인 I/O 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>과학적 계산&lt;/td>
&lt;td>병렬성&lt;/td>
&lt;td>복잡한 계산 작업 분할 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>성능 비교표&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>작업 유형&lt;/th>
&lt;th>동시성 성능&lt;/th>
&lt;th>병렬성 성능&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>I/O 작업&lt;/td>
&lt;td>매우 좋음&lt;/td>
&lt;td>보통&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CPU 작업&lt;/td>
&lt;td>보통&lt;/td>
&lt;td>매우 좋음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메모리 사용&lt;/td>
&lt;td>효율적&lt;/td>
&lt;td>많은 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>응답 시간&lt;/td>
&lt;td>일관적&lt;/td>
&lt;td>변동 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>처리량&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>자원 활용&lt;/td>
&lt;td>효율적&lt;/td>
&lt;td>최대화&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3>참고 및 출처&lt;/h3></description></item></channel></rss>