<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Computer Science and Engineering on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/computer-science-and-engineering/</link>
    <description>Recent content in Computer Science and Engineering on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.1</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Oct 2024 19:53:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/computer-science-and-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Computer Science Fundamentals</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/</link>
      <pubDate>Thu, 19 Sep 2024 01:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/</guid>
      <description>컴퓨터 과학은 컴퓨팅 시스템의 이론적 기초와 실제 구현을 연구하는 학문 분야입니다. 이 섹션에서는 프로그래밍 패러다임, 컴퓨터 아키텍처, 운영 체제, 성능 최적화 등 컴퓨터 과학의 핵심 개념을 다룹니다. 비트 연산, 부동소수점, 엔디안, 블로킹/논블로킹 등의 기초 개념부터 컴퓨터 시스템의 하드웨어, 메모리 관리, 인터럽트 처리 등의 시스템 수준 주제까지 포괄합니다. 이러한 기초 지식은 고성능, 안정적인 소프트웨어 시스템을 설계하고 구현하는 데 필수적인 역할을 합니다.</description>
    </item>
    <item>
      <title>Data Structures and Algorithms</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/data-structures-and-algorithms/</link>
      <pubDate>Thu, 19 Sep 2024 15:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/data-structures-and-algorithms/</guid>
      <description>데이터를 효율적으로 저장, 관리, 처리하는 방법에 관한 학문</description>
    </item>
    <item>
      <title>Backend Development</title>
      <link>https://buenhyden.github.io/posts/backend-development/</link>
      <pubDate>Thu, 19 Sep 2024 01:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/backend-development/</guid>
      <description>백엔드 개발은 웹 애플리케이션의 서버 측 로직 및 데이터 처리를 담당하는 영역입니다. 이 섹션에서는 DNS, 웹 서버, API 설계, 이벤트 처리 시스템 등 백엔드 개발의 핵심 기술과 개념을 다룹니다. RESTful API, GraphQL 등 다양한 API 설계 방식과 인증, 권한 관리, 성능 최적화 등 실제 개발에 필요한 주제를 포함합니다. 이벤트 기반 아키텍처, 메시지 브로커, 검색 엔진 통합 등 현대적인 백엔드 시스템 구성에 필요한 지식도 제공합니다.</description>
    </item>
    <item>
      <title>Quality Assurance (QA)</title>
      <link>https://buenhyden.github.io/posts/quality-assurance/</link>
      <pubDate>Sun, 27 Oct 2024 19:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/quality-assurance/</guid>
      <description>소프트웨어 개발의 전체 과정에서 품질을 보증하고 관리하는 체계적인 활동</description>
    </item>
    <item>
      <title>Software Design and Architecture</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/</link>
      <pubDate>Thu, 19 Sep 2024 10:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/</guid>
      <description>Software Architecture란 소프트웨어 시스템의 기본적인 구조와 조직을 정의하는 것이다.</description>
    </item>
    <item>
      <title>DevOps</title>
      <link>https://buenhyden.github.io/posts/devops-and-infrastructure/ops-frameworks/devops/</link>
      <pubDate>Sat, 28 Sep 2024 06:26:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/devops-and-infrastructure/ops-frameworks/devops/</guid>
      <description>소프트웨어 개발(Development)과 IT 운영(Operations)을 통합하는 문화, 철학, 방법론</description>
    </item>
    <item>
      <title>System Design</title>
      <link>https://buenhyden.github.io/posts/system-design/</link>
      <pubDate>Thu, 19 Sep 2024 21:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/</guid>
      <description>소프트웨어 시스템 디자인은 소프트웨어의 구조와 동작을 계획하고 정의하는 과정</description>
    </item>
    <item>
      <title>Programming Languages</title>
      <link>https://buenhyden.github.io/posts/programming-languages/</link>
      <pubDate>Thu, 19 Sep 2024 10:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/</guid>
      <description>기계(컴퓨터)에게 명령이나 연산을 시킬 목적으로 설계되어 기계와 의사소통을 할 수 있게 해주는 언어</description>
    </item>
    <item>
      <title>Data Engineering</title>
      <link>https://buenhyden.github.io/posts/data-engineering/</link>
      <pubDate>Thu, 19 Sep 2024 01:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-engineering/</guid>
      <description>원시 데이터를 수집, 저장, 처리하여 분석 가능한 형태로 변환하는 과정을 다루는 분야</description>
    </item>
    <item>
      <title>인공지능(Artificial Intelligence, AI)</title>
      <link>https://buenhyden.github.io/posts/ai/</link>
      <pubDate>Thu, 19 Sep 2024 01:29:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/ai/</guid>
      <description>인공지능(Artificial Intelligence)은 인간의 학습, 추론, 인식 등의 지능적 행동을 모방하는 컴퓨터 시스템을 연구하고 개발하는 분야이다. 이 섹션에서는 AI의 기초 개념부터 최신 기술까지 다양한 주제를 다룬다. 기계학습, 딥러닝, 컴퓨터 비전, 자연어 처리 등 AI의 핵심 분야와 함께 생성형 AI, LLM 엔지니어링, 멀티모달 AI 등 최신 주제도 탐구한다. 또한 AI 윤리와 산업별 응용 사례를 통해 AI의 사회적 영향과 실제 활용 방법을 알아본다.</description>
    </item>
    <item>
      <title>Frontend</title>
      <link>https://buenhyden.github.io/posts/frontend-development/</link>
      <pubDate>Thu, 19 Sep 2024 01:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/frontend-development/</guid>
      <description>사용자가 직접 보고 상호작용하는 웹사이트나 애플리케이션의 사용자 인터페이스(UI)와 사용자 경험(UX)을 개발하는 기술과 방법론을 다룹니다. HTML, CSS, JavaScript의 기초부터 현대적인 프레임워크, 상태 관리, 렌더링 전략까지 웹 개발의 클라이언트 측면을 포괄적으로 탐구합니다.</description>
    </item>
    <item>
      <title>Software Architecture pattern vs Software Design Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/software-architecture-pattern-vs-software-design-pattern/</link>
      <pubDate>Fri, 27 Sep 2024 08:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/software-architecture-pattern-vs-software-design-pattern/</guid>
      <description>Software Architecture Pattern과 Software Design Pattern은 소프트웨어 개발에서 반복적으로 발생하는 문제들에 대한 검증된 해결책을 제공하는 개념이다. 이 두 패턴은 서로 다른 수준의 추상화와 범위를 다루고 있다.</description>
    </item>
  </channel>
</rss>
