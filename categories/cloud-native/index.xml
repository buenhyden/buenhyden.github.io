<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cloud-Native on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/cloud-native/</link>
    <description>Recent content in Cloud-Native on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Jul 2025 02:10:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/cloud-native/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multi-Cloud Architecture</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/cloud-native-architecture/cloud-patterns/multi-cloud/</link>
      <pubDate>Sun, 06 Jul 2025 02:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/cloud-native-architecture/cloud-patterns/multi-cloud/</guid>
      <description>멀티클라우드 아키텍처 (Multi-Cloud Architecture) 는 둘 이상의 퍼블릭 클라우드 제공자를 활용해 애플리케이션이나 인프라를 분산 배치하는 전략이다. 이를 통해 유연성, 가용성, 비용 최적화, 벤더 종속성 해소, 규제 준수, 혁신 가속 등 다양한 이점을 얻을 수 있으며, 복잡한 관리와 보안, 네트워크, 데이터 일관성 등 도전 과제가 동반된다.</description>
    </item>
    <item>
      <title>Serverless Architecture</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/cloud-native-architecture/serverless/</link>
      <pubDate>Wed, 19 Mar 2025 12:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/cloud-native-architecture/serverless/</guid>
      <description>Serverless Architecture 는 개발자가 인프라 관리 없이 코드 (함수) 를 클라우드에 배포하고, 이벤트 기반으로 자동 실행·확장하며 **비용 효율성**, **운영 오버헤드 감소**, **빠른 시장 출시**를 달성하는 클라우드 네이티브 구성이며, FaaS 와 BaaS 가 핵심이다.</description>
    </item>
    <item>
      <title>Microservices Architecture</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/distributed-architecture/microservices/</link>
      <pubDate>Sat, 01 Feb 2025 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/architecture-styles/distributed-architecture/microservices/</guid>
      <description>마이크로서비스 아키텍처는 하나의 애플리케이션을 독립적으로 배포 가능한 작은 서비스들의 집합으로 구성하는 소프트웨어 아키텍처 스타일이다. 각 서비스는 특정 비즈니스 기능을 담당하며, API 를 통해 통신하고, 자체 데이터베이스를 보유한다. 확장성, 유연성, 기술적 다양성을 제공하여 현대 클라우드 네이티브 애플리케이션 개발의 핵심 방식으로 자리잡았다.</description>
    </item>
  </channel>
</rss>
