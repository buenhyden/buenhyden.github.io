<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Backend Development on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/backend-development/</link>
    <description>Recent content in Backend Development on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 14 Apr 2025 07:13:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/backend-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API Styles</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-styles/</link>
      <pubDate>Wed, 26 Feb 2025 06:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-styles/</guid>
      <description>API 스타일은 소프트웨어 아키텍처에서 중요한 설계 요소로, 다양한 시스템과 장치가 서로 쉽게 통신할 수 있도록 디지털 방식으로 연결하는 역할을 한다.</description>
    </item>
    <item>
      <title>API Design and Implementation</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-design-and-architecture/</link>
      <pubDate>Sat, 19 Oct 2024 17:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-design-and-architecture/</guid>
      <description>소프트웨어 애플리케이션 간의 통신을 가능하게 하는 중요한 도구</description>
    </item>
    <item>
      <title>API Performance</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-quality-and-performance/performance-considerations/api-performance/</link>
      <pubDate>Wed, 26 Feb 2025 06:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-quality-and-performance/performance-considerations/api-performance/</guid>
      <description>API 성능은 백엔드 시스템 설계에서 핵심적인 요소로, 최종 사용자 경험과 시스템 효율성에 직접적인 영향을 미친다.</description>
    </item>
    <item>
      <title>Real-time APIs</title>
      <link>https://buenhyden.github.io/posts/networking-and-communication/fundamentals/real-time-communication/</link>
      <pubDate>Fri, 31 Jan 2025 15:02:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-and-communication/fundamentals/real-time-communication/</guid>
      <description>실시간 API(Real-time API)는 클라이언트와 서버 간에 지속적인 연결을 유지하면서 데이터가 생성되거나 변경되는 즉시 자동으로 전송하는 API이다.</description>
    </item>
    <item>
      <title>Full-Text Search</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/search-engine-fundamentals/full-text-search/</link>
      <pubDate>Mon, 14 Apr 2025 07:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/search-engine-fundamentals/full-text-search/</guid>
      <description>전문 검색이란 **대량의 비정형 텍스트 데이터**에서 특정 단어/구문을 효율적으로 찾아 결과를 **관련성 순으로 정렬**하는 기술이다. 데이터베이스의 단순 패턴 매칭과 달리 자연어 처리(NLP) 기법을 활용해 의미와 맥락을 고려한다.</description>
    </item>
    <item>
      <title>Circuit Breaker</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/resilience-and-reliability/fault-tolerance/failure-recovery/retry-patterns/circuit-breaker/circuit-breaker/</link>
      <pubDate>Tue, 01 Apr 2025 15:17:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/resilience-and-reliability/fault-tolerance/failure-recovery/retry-patterns/circuit-breaker/circuit-breaker/</guid>
      <description>소프트웨어 서킷 브레이커는 장애가 발생한 서비스에 대한 호출을 일시적으로 중단하여 시스템 전체의 안정성을 보호한다.</description>
    </item>
    <item>
      <title>Backpressure</title>
      <link>https://buenhyden.github.io/posts/programming-languages/programming-paradigms/concurrency-paradigms/asynchronous-programming/backpressure-management/backpressure/backpressure/</link>
      <pubDate>Tue, 01 Apr 2025 15:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/programming-paradigms/concurrency-paradigms/asynchronous-programming/backpressure-management/backpressure/backpressure/</guid>
      <description>**Backpressure**는 데이터 처리 시스템에서 수신 측이 송신 측에게 자신의 처리 용량을 알려 데이터 흐름을 제어하는 메커니즘이다.</description>
    </item>
    <item>
      <title>Graceful Degradation</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/resilience-and-reliability/service-continuity/graceful-degradation/</link>
      <pubDate>Tue, 01 Apr 2025 15:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/resilience-and-reliability/service-continuity/graceful-degradation/</guid>
      <description>그레이스풀 디그레이데이션은 시스템의 일부 구성 요소나 기능이 사용 불가능해도 기본 기능을 계속 유지할 수 있도록 하는 설계 원칙이다.</description>
    </item>
    <item>
      <title>Domain Name</title>
      <link>https://buenhyden.github.io/posts/networking-and-communication/fundamentals/internet/domain-name/</link>
      <pubDate>Tue, 01 Apr 2025 02:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-and-communication/fundamentals/internet/domain-name/</guid>
      <description>도메인 이름은 인터넷에서 특정 위치를 식별하는 사람이 읽을 수 있는 주소이다.</description>
    </item>
    <item>
      <title>Hosting</title>
      <link>https://buenhyden.github.io/posts/networking-and-communication/fundamentals/internet/hosting/</link>
      <pubDate>Mon, 31 Mar 2025 23:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking-and-communication/fundamentals/internet/hosting/</guid>
      <description>호스팅은 API, 웹사이트, 애플리케이션과 같은 디지털 자산을 인터넷을 통해 사용자에게 제공하기 위해 서버 공간과 자원을 제공하는 서비스이다.</description>
    </item>
    <item>
      <title>API Testing</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-testing/</link>
      <pubDate>Mon, 10 Mar 2025 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-testing/</guid>
      <description>API 테스팅은 애플리케이션 프로그래밍 인터페이스(API)의 기능성, 신뢰성, 성능 및 보안을 확인하는 프로세스이다.</description>
    </item>
    <item>
      <title>Security</title>
      <link>https://buenhyden.github.io/posts/cybersecurity-and-information-security/application-and-software-security/web-security/server-side/backend-security/</link>
      <pubDate>Thu, 13 Feb 2025 01:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/cybersecurity-and-information-security/application-and-software-security/web-security/server-side/backend-security/</guid>
      <description>보안과 성능은 백엔드 시스템에서 상호 연결된 중요한 두 축이다.</description>
    </item>
    <item>
      <title>API Documentation</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-specification-and-documentation/api-documentation/</link>
      <pubDate>Wed, 12 Feb 2025 01:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-specification-and-documentation/api-documentation/</guid>
      <description>API 문서화란 API의 기능, 사용 방법, 엔드포인트, 매개변수, 응답 형식 등을 설명하는 기술 문서를 말한다.</description>
    </item>
    <item>
      <title>Performance Testing</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-testing/performance-testing/</link>
      <pubDate>Wed, 12 Feb 2025 01:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-testing/performance-testing/</guid>
      <description>성능 테스팅은 시스템이 예상된 부하 조건에서 어떻게 작동하는지 측정하고 평가하는 과정이다.</description>
    </item>
    <item>
      <title>Network</title>
      <link>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/network/</link>
      <pubDate>Wed, 12 Feb 2025 01:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/network/</guid>
      <description>네트워크 최적화는 백엔드 성능을 향상시키는 핵심 요소 중 하나이다. 사용자 경험에 직접적인 영향을 미치는 지연 시간과 처리량을 개선함으로써 웹 애플리케이션의 전반적인 성능을 크게 향상시킬 수 있다.</description>
    </item>
    <item>
      <title>Optimize API Response</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-implementation-fundamentals/request-response-handling/optimize-api-response/</link>
      <pubDate>Wed, 12 Feb 2025 01:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-implementation-fundamentals/request-response-handling/optimize-api-response/</guid>
      <description>API 응답 최적화는 현대 웹 애플리케이션의 성능, 사용자 경험 및 자원 효율성을 크게 향상시키는 핵심 요소이다.</description>
    </item>
    <item>
      <title>Monitoring and Logging</title>
      <link>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/monitoring-and-logging/</link>
      <pubDate>Wed, 12 Feb 2025 01:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/monitoring-and-logging/</guid>
      <description>모니터링과 로깅은 현대 백엔드 시스템의 건강 상태를 파악하고 성능을 최적화하는 데 필수적인 요소이다. 이러한 도구와 전략을 통해 시스템의 병목 현상을 식별하고, 문제가 발생하기 전에 예방적 조치를 취할 수 있으며, 사용자 경험을 크게 향상시킬 수 있다.</description>
    </item>
    <item>
      <title>Load Balancing and Scaling</title>
      <link>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/load-balancing-and-scaling/</link>
      <pubDate>Wed, 12 Feb 2025 01:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/load-balancing-and-scaling/</guid>
      <description>로드 밸런싱은 네트워크 트래픽을 여러 서버에 효율적으로 분산시켜 시스템의 안정성, 가용성, 응답 시간을 개선하는 기술이다.</description>
    </item>
    <item>
      <title>Databases</title>
      <link>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/database/</link>
      <pubDate>Wed, 12 Feb 2025 01:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/database/</guid>
      <description>백엔드 성능 최적화는 현대 웹 애플리케이션 개발에서 필수적인 요소이다. 사용자 경험을 향상시키고, 서버 자원을 효율적으로 활용하며, 확장성을 보장하기 위해서는 데이터베이스의 최적화가 필수적이다.</description>
    </item>
    <item>
      <title>Code Optimization</title>
      <link>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/code-optimization/</link>
      <pubDate>Wed, 12 Feb 2025 01:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/code-optimization/</guid>
      <description>백엔드 성능 최적화는 현대 웹 애플리케이션 개발에서 필수적인 요소이다. 사용자 경험을 향상시키고, 서버 자원을 효율적으로 활용하며, 확장성을 보장하기 위해서는 다양한 코드 최적화 기법을 적절히 적용해야 한다.</description>
    </item>
    <item>
      <title>Asynchronism</title>
      <link>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/asynchronism/</link>
      <pubDate>Wed, 12 Feb 2025 01:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/backend-development/backend-performance/asynchronism/</guid>
      <description>비동기 처리(Asynchronism)는 시스템의 응답성과 확장성을 크게 향상시킬 수 있다.</description>
    </item>
    <item>
      <title>Apache Pulsar</title>
      <link>https://buenhyden.github.io/posts/system-design/message-oriented-systems/message-brokers/apache-pulsar/</link>
      <pubDate>Thu, 06 Feb 2025 04:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/message-oriented-systems/message-brokers/apache-pulsar/</guid>
      <description>분산형 메시징 및 스트리밍 플랫폼이다. Pulsar는 기존의 메시지 큐와 스트리밍 시스템의 장점을 결합하여 높은 성능, 낮은 지연 시간, 그리고 강력한 내구성을 제공한다.</description>
    </item>
    <item>
      <title>API Lifecycle Management</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-lifecycle-management/</link>
      <pubDate>Sun, 02 Feb 2025 03:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-lifecycle-management/</guid>
      <description>API 라이프사이클 관리는 API의 계획 단계부터 폐기 단계까지 전체 수명주기를 체계적으로 관리하는 프로세스이다</description>
    </item>
    <item>
      <title>inverted index</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/search-engine-fundamentals/inverted-index/</link>
      <pubDate>Thu, 02 Jan 2025 05:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/search-engine-fundamentals/inverted-index/</guid>
      <description>역인덱스는 이 관계를 &amp;#39;뒤집어&amp;#39; 단어나 용어를 키로 하고, 그 단어가 등장하는 문서들의 목록을 값으로 저장한다.</description>
    </item>
    <item>
      <title>Authorization Models</title>
      <link>https://buenhyden.github.io/posts/cybersecurity-and-information-security/identity-and-access-management/authorization/authorization-models/</link>
      <pubDate>Wed, 06 Nov 2024 11:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/cybersecurity-and-information-security/identity-and-access-management/authorization/authorization-models/</guid>
      <description>API 권한 부여(Authorization)는 인증(Authentication)이 완료된 후, 사용자가 어떤 리소스에 접근할 수 있는지를 결정하는 중요한 보안 메커니즘이다.</description>
    </item>
    <item>
      <title>Authentication</title>
      <link>https://buenhyden.github.io/posts/cybersecurity-and-information-security/identity-and-access-management/authentication/</link>
      <pubDate>Wed, 06 Nov 2024 05:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/cybersecurity-and-information-security/identity-and-access-management/authentication/</guid>
      <description>API 인증은 API를 사용하는 클라이언트의 신원을 확인하고 승인된 사용자만 API 리소스에 접근할 수 있도록 보장하는 핵심 보안 메커니즘이다.</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)</title>
      <link>https://buenhyden.github.io/posts/system-design/database-systems/database-scaling-and-performance/horizontal-scaling/database-clustering-and-replication/</link>
      <pubDate>Fri, 25 Oct 2024 15:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/database-systems/database-scaling-and-performance/horizontal-scaling/database-clustering-and-replication/</guid>
      <description>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)은 데이터베이스의 가용성과 성능을 향상시키는 전략으로, 각각의 목적과 구현 방식에서 차이가 있다.</description>
    </item>
    <item>
      <title>RabbitMQ</title>
      <link>https://buenhyden.github.io/posts/system-design/message-oriented-systems/message-brokers/rabbitmq/</link>
      <pubDate>Fri, 25 Oct 2024 00:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/message-oriented-systems/message-brokers/rabbitmq/</guid>
      <description>rlang 언어로 작성된 오픈 소스 메시지 브로커 시스템으로, AMQP(Advanced Message Queuing Protocol)를 구현하고 있다</description>
    </item>
    <item>
      <title>Implementations of Search Engine</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/search-implementations/</link>
      <pubDate>Tue, 22 Oct 2024 06:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/search-implementations/</guid>
      <description>Elasticsearch는 Apache Lucene 기반의 오픈소스 검색엔진이며, Opensearch는 Elasticsearch의 포크 버전</description>
    </item>
    <item>
      <title>Web Infrastructure</title>
      <link>https://buenhyden.github.io/posts/system-design/system-design-fundamentals/infrastructure/web-infrastructure/</link>
      <pubDate>Mon, 21 Oct 2024 05:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-design-fundamentals/infrastructure/web-infrastructure/</guid>
      <description>백엔드 웹 인프라의 핵심 구성 요소와 아키텍처에 대한 종합적인 개요입니다. 웹 서버, 웹 애플리케이션 서버, 로드 밸런서, 리버스 프록시, 캐싱 메커니즘 및 콘텐츠 전송 네트워크(CDN)를 다룹니다. 효율적이고 확장 가능하며 안정적인 웹 애플리케이션 인프라를 설계하고 구축하는 데 필요한 지식을 제공합니다.</description>
    </item>
    <item>
      <title>GraphQL</title>
      <link>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-styles/query-oriented/graphql/</link>
      <pubDate>Sat, 19 Oct 2024 03:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development/api-development-and-implementation/api-styles/query-oriented/graphql/</guid>
      <description>GraphQL은 API를 위한 쿼리 언어이자 서버 측에서 데이터를 효율적으로 가져오기 위한 런타임 환경이다</description>
    </item>
  </channel>
</rss>
