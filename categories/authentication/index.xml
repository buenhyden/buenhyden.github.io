<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Authentication :: Category :: hyunyoun's Blog</title><link>https://buenhyden.github.io/categories/authentication.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Mon, 11 Nov 2024 11:30:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/authentication/index.xml" rel="self" type="application/rss+xml"/><item><title>Session based Auth</title><link>https://buenhyden.github.io/posts/security/authentication/session-based-auth.html</link><pubDate>Mon, 11 Nov 2024 11:30:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/session-based-auth.html</guid><description>웹 애플리케이션에서 사용자의 인증 상태를 유지하는 전통적인 방법</description></item><item><title>SAML</title><link>https://buenhyden.github.io/posts/security/authentication/saml.html</link><pubDate>Mon, 11 Nov 2024 11:25:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/saml.html</guid><description>웹 애플리케이션에서 사용자 인증과 권한 부여를 위한 개방형 표준 프로토콜</description></item><item><title>Basic Authentication</title><link>https://buenhyden.github.io/posts/security/authentication/basic-authentication.html</link><pubDate>Mon, 11 Nov 2024 11:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/basic-authentication.html</guid><description>HTTP 헤더에 사용자의 인증 정보를 포함시켜 전송하는 방식</description></item><item><title>Cookie Based Auth</title><link>https://buenhyden.github.io/posts/security/authentication/cookie-based-auth.html</link><pubDate>Mon, 11 Nov 2024 11:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/cookie-based-auth.html</guid><description>웹 애플리케이션에서 사용자 세션을 유지하는 전통적인 방법</description></item><item><title>JWT</title><link>https://buenhyden.github.io/posts/security/authentication/jwt.html</link><pubDate>Mon, 11 Nov 2024 11:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/jwt.html</guid><description>당사자 간에 정보를 안전하게 전송하기 위한 컴팩트하고 자체 포함된 방식을 정의하는 개방형 표준(RFC 7519)</description></item><item><title>OAuth</title><link>https://buenhyden.github.io/posts/security/authentication/oauth.html</link><pubDate>Mon, 11 Nov 2024 11:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/oauth.html</guid><description>사용자의 비밀번호를 공유하지 않고도 제3자 애플리케이션이 사용자의 데이터에 안전하게 접근할 수 있도록 하는 표준 프로토콜</description></item><item><title>OpenID Connect</title><link>https://buenhyden.github.io/posts/security/authentication/openid-connect.html</link><pubDate>Mon, 11 Nov 2024 11:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/openid-connect.html</guid><description>OAuth 2.0 프로토콜 위에 구축된 인증 계층으로, 사용자 인증과 기본적인 프로필 정보 획득을 위한 표준화된 방법을 제공</description></item><item><title>Token Authentication</title><link>https://buenhyden.github.io/posts/security/authentication/token-authentication.html</link><pubDate>Mon, 11 Nov 2024 11:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/security/authentication/token-authentication.html</guid><description>사용자 자격 증명 대신 고유한 토큰을 사용하여 인증을 수행하며, 반복적인 로그인 없이 지속적인 접근을 가능하게 한다.</description></item></channel></rss>