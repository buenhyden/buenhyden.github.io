<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>QC on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/qc/</link>
    <description>Recent content in QC on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.141.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 27 Dec 2024 04:10:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/qc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test</title>
      <link>https://buenhyden.github.io/posts/qa/qc/test/</link>
      <pubDate>Wed, 06 Nov 2024 06:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/test/</guid>
      <description>주요 이해관계자들에게 시험 대상 제품 또는 서비스의 품질에 관한 정보를 제공하는 조사 과정</description>
    </item>
    <item>
      <title>전문화된 테스팅 (Specialized Testing)</title>
      <link>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/</link>
      <pubDate>Fri, 27 Dec 2024 04:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/test/specialized-testing/</guid>
      <description>Specialized Testing은 소프트웨어 테스팅의 한 분야로, 특정 영역이나 기능에 초점을 맞춘 심층적인 테스트 방식이다.</description>
    </item>
    <item>
      <title>System Test vs End-to-End Test</title>
      <link>https://buenhyden.github.io/posts/qa/qc/test/system-test-vs-end-to-end-test/</link>
      <pubDate>Fri, 27 Dec 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/test/system-test-vs-end-to-end-test/</guid>
      <description>System Testing과 End-to-End Testing은 소프트웨어 테스팅 과정에서 사용되는 두 가지 중요한 테스트 방법이다. 이 두 방법은 소프트웨어의 품질을 보장하기 위해 사용되지만, 그 범위와 목적에 차이가 있다.</description>
    </item>
    <item>
      <title>Security Vulnerability Scanning</title>
      <link>https://buenhyden.github.io/posts/qa/qc/technical-verification/security-vulnerability-scanning/</link>
      <pubDate>Tue, 17 Dec 2024 16:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/technical-verification/security-vulnerability-scanning/</guid>
      <description>보안 취약점 스캔은 자동화된 도구를 사용하여 시스템과 소프트웨어의 보안 약점을 찾아내는 과정으로, 시스템, 네트워크, 소프트웨어의 보안 취약점을 식별하고 분석하는 프로세스이다</description>
    </item>
    <item>
      <title>Peer Review</title>
      <link>https://buenhyden.github.io/posts/qa/qc/deliverable-verification/peer-review/</link>
      <pubDate>Sat, 14 Dec 2024 15:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/deliverable-verification/peer-review/</guid>
      <description>Peer Review는 소프트웨어 개발 과정에서 중요한 품질 보증 활동으로, 동료 개발자들이 서로의 코드나 문서를 검토하여 오류를 찾고 개선점을 제시하는 과정이다.</description>
    </item>
    <item>
      <title>성능 프로파일링 (Performance Profiling)</title>
      <link>https://buenhyden.github.io/posts/qa/qc/technical-verification/performance-profiling/</link>
      <pubDate>Tue, 03 Dec 2024 16:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/technical-verification/performance-profiling/</guid>
      <description>성능 프로파일링(Performance Profiling)은 소프트웨어의 실행 동작을 분석하여 성능을 측정하고 개선하는 기술이다</description>
    </item>
    <item>
      <title>기본 테스팅 (Fundamental Testing)</title>
      <link>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/</link>
      <pubDate>Fri, 29 Nov 2024 04:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/test/fundamental-testing/</guid>
      <description>소프트웨어 테스팅의 기본적인 프로세스와 원칙을 의미한다.</description>
    </item>
    <item>
      <title>Validation and Verification</title>
      <link>https://buenhyden.github.io/posts/qa/qc/test/validation-and-verification/</link>
      <pubDate>Thu, 28 Nov 2024 08:03:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/test/validation-and-verification/</guid>
      <description>Verification은 &amp;#34;제품을 올바르게 만들고 있는가?&amp;#34;를 확인하는 과정이고, Validation은 &amp;#34;올바른 제품을 만들고 있는가?&amp;#34;를 확인하는 과정이다.</description>
    </item>
    <item>
      <title>정적 코드 분석 (Static Code analysis)</title>
      <link>https://buenhyden.github.io/posts/qa/qc/technical-verification/static-code-analysis/</link>
      <pubDate>Thu, 28 Nov 2024 06:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/technical-verification/static-code-analysis/</guid>
      <description>정적 코드 분석은 프로그램을 실행하지 않고 소스 코드를 분석하여 잠재적인 결함, 취약점, 코딩 표준 위반 등을 찾아내는 기술이다</description>
    </item>
    <item>
      <title>동적테스트(Dynamic Test)와 정적테스트(Static Test)</title>
      <link>https://buenhyden.github.io/posts/qa/qc/test/dynamic-test-and-static-test/</link>
      <pubDate>Thu, 28 Nov 2024 02:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/qa/qc/test/dynamic-test-and-static-test/</guid>
      <description>소프트웨어 테스팅은 프로그램의 품질을 확인하고 오류를 찾아내는 과정.</description>
    </item>
  </channel>
</rss>
