<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – System Design</title><link>https://buenhyden.github.io/categories/system-design/</link><description>Recent content in System Design on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 24 Dec 2024 06:57:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/system-design/index.xml" rel="self" type="application/rss+xml"/><item><title>Infrastructure</title><link>https://buenhyden.github.io/posts/system-design/infrastructure/</link><pubDate>Sat, 28 Sep 2024 01:29:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/infrastructure/</guid><description>
&lt;h2>Infrastructure&lt;span class="hx-absolute -hx-mt-20" id="infrastructure">&lt;/span>
&lt;a href="#infrastructure" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Infrastructure(인프라스트럭처)는 조직의 IT 환경을 지원하고 운영하는 데 필요한 기본적인 구성 요소들의 집합이다.&lt;br>
이는 하드웨어, 소프트웨어, 네트워크 리소스 및 서비스를 포함한다.&lt;/p>
&lt;h3>Infrastructure의 주요 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="infrastructure의-주요-구성-요소">&lt;/span>
&lt;a href="#infrastructure%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>하드웨어&lt;/p>
&lt;ul>
&lt;li>서버: 네트워크 저장소 및 애플리케이션 처리를 제공&lt;/li>
&lt;li>스토리지 장치: 하드 드라이브, SSD 등&lt;/li>
&lt;li>네트워킹 장비: 라우터, 스위치, 케이블 등&lt;/li>
&lt;li>데이터 센터: 중요한 IT 장비와 지원 인프라를 수용하는 시설&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>소프트웨어&lt;/p>
&lt;ul>
&lt;li>운영 체제: 하드웨어 운영 및 애플리케이션 실행의 기반&lt;/li>
&lt;li>데이터베이스: 대량의 데이터를 조직, 저장 및 접근 용이하게 함&lt;/li>
&lt;li>미들웨어: 소프트웨어 애플리케이션 간 통신 및 데이터 교환을 위한 연결 계층&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 인프라&lt;/p>
&lt;ul>
&lt;li>물리적 및 가상 구성 요소: 라우터, 스위치, 케이블, 무선 액세스 포인트&lt;/li>
&lt;li>프로토콜 및 서비스: 데이터 전송 및 통신을 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>클라우드 서비스&lt;/p>
&lt;ul>
&lt;li>원격 컴퓨팅 서비스: 인터넷을 통해 확장 가능한 IT 리소스 제공&lt;/li>
&lt;li>스토리지 및 처리 능력: 온디맨드로 사용 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Infrastructure의 중요성&lt;span class="hx-absolute -hx-mt-20" id="infrastructure의-중요성">&lt;/span>
&lt;a href="#infrastructure%ec%9d%98-%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>비즈니스 운영 지원: 원활하고 효율적인 운영을 위한 기반 제공&lt;/li>
&lt;li>정보 저장 및 처리: 안전한 데이터 관리 및 처리 가능&lt;/li>
&lt;li>확장성: 비즈니스 성장에 따른 리소스 확장 지원&lt;/li>
&lt;li>사이버 보안: 사이버 위협으로부터 보호&lt;/li>
&lt;li>커뮤니케이션: 내부 및 외부와의 효과적인 소통 지원&lt;/li>
&lt;/ol>
&lt;h3>Infrastructure 최적화&lt;span class="hx-absolute -hx-mt-20" id="infrastructure-최적화">&lt;/span>
&lt;a href="#infrastructure-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>클라우드 서비스 활용: 유연성과 확장성 향상&lt;/li>
&lt;li>자동화: 반복적인 작업 자동화로 효율성 증대&lt;/li>
&lt;li>보안 강화: 최신 보안 기술 및 프로토콜 적용&lt;/li>
&lt;li>모니터링 및 분석: 성능 최적화를 위한 지속적인 모니터링&lt;/li>
&lt;li>표준화: 일관된 구성 및 관리를 위한 표준 수립&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>분산 시스템 (Distributed System)</title><link>https://buenhyden.github.io/posts/system-design/distributed-system/</link><pubDate>Sat, 09 Nov 2024 02:51:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/distributed-system/</guid><description>
&lt;h2>분산 시스템 (Distributed System)&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템-distributed-system">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c-distributed-system" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>분산 시스템은 네트워크로 연결된 여러 독립적인 컴퓨터들이 하나의 통합된 시스템처럼 작동하는 컴퓨팅 환경을 말한다.&lt;br>
마치 여러 사람이 각자 맡은 일을 하면서도 하나의 팀으로 협력하는 것처럼, 분산 시스템의 각 컴퓨터들도 서로 메시지를 주고받으며 협력하여 작업을 수행한다.&lt;/p>
&lt;h3>분산 시스템의 주요 특징&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-주요-특징">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>동시성(Concurrency):&lt;br>
여러 컴포넌트가 동시에 작동하면서 자원을 공유하고 작업을 처리한다.&lt;br>
예를 들어, 온라인 쇼핑몰에서 수많은 사용자가 동시에 주문을 처리할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>확장성(Scalability):&lt;br>
시스템의 크기와 성능을 필요에 따라 쉽게 확장할 수 있다.&lt;br>
수평적 확장(더 많은 컴퓨터 추가)과 수직적 확장(더 강력한 컴퓨터로 교체) 모두 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>내결함성(Fault Tolerance):&lt;br>
일부 컴포넌트에 문제가 발생해도 전체 시스템은 계속 작동할 수 있다.&lt;br>
이는 마치 한 직원이 휴가를 가도 회사가 계속 운영되는 것과 비슷하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>투명성(Transparency):&lt;br>
사용자는 시스템의 복잡한 내부 구조를 알 필요 없이 마치 하나의 시스템을 사용하는 것처럼 서비스를 이용할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 구성 요소와 작동 방식&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-구성-요소와-작동-방식">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c%ec%99%80-%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>통신 메커니즘&lt;br>
분산 시스템에서 컴포넌트들은 다양한 방식으로 통신한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 메시지 패싱의 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Node&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">destination&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메시지 전송 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">destination&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">receive_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메시지 수신 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">receive&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>동기화와 조정&lt;br>
시스템 전체의 일관성을 유지하기 위해 다양한 동기화 메커니즘이 사용된다:&lt;br>
- 시계 동기화: 모든 노드가 동일한 시간을 참조할 수 있도록 한다.&lt;br>
- 분산 락: 공유 자원에 대한 접근을 조정한다.&lt;br>
- 합의 알고리즘: 여러 노드가 특정 값이나 상태에 대해 합의를 이룬다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 관리&lt;br>
분산 시스템에서는 데이터를 여러 노드에 분산하여 저장하고 관리한다:&lt;br>
- 복제(Replication): 데이터를 여러 노드에 복사하여 안정성과 가용성을 높인다.&lt;br>
- 샤딩(Sharding): 데이터를 여러 조각으로 나누어 저장한다.&lt;br>
- 일관성 모델: 데이터의 일관성을 유지하기 위한 규칙을 정의한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 아키텍처&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-아키텍처">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%95%84%ed%82%a4%ed%85%8d%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>분산 시스템은 다양한 아키텍처를 가질 수 있다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>클라이언트-서버&lt;/strong>: 클라이언트가 서버에 서비스를 요청하고 서버가 응답하는 구조.&lt;/li>
&lt;li>&lt;strong>피어-투-피어(P2P)&lt;/strong>: 각 노드가 클라이언트와 서버 역할을 동시에 수행한다.&lt;/li>
&lt;li>&lt;strong>다중 티어&lt;/strong>: 클라이언트-서버 모델을 확장하여 여러 계층으로 구성된다.&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 실제 응용 사례&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-실제-응용-사례">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%8b%a4%ec%a0%9c-%ec%9d%91%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>클라우드 컴퓨팅&lt;br>
AWS, Google Cloud, Azure와 같은 클라우드 서비스는 대규모 분산 시스템의 대표적인 예이다.&lt;br>
이들은 전 세계에 데이터센터를 두고 서비스를 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>분산 데이터베이스&lt;br>
분산 데이터베이스는 데이터를 여러 노드에 분산 저장하여 처리한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 분산 데이터베이스의 샤딩 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">users_shard_1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PARTITION&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">BY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RANGE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>분산 파일 시스템&lt;br>
HDFS(Hadoop Distributed File System)와 같은 시스템은 대용량 파일을 여러 노드에 나누어 저장한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 장점&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-장점">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>분산 시스템은 다음과 같은 장점을 제공한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>성능 향상&lt;/strong>: 여러 컴퓨터의 리소스를 활용하여 처리 능력을 높인다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 필요에 따라 시스템을 쉽게 확장할 수 있다.&lt;/li>
&lt;li>&lt;strong>fault tolerance&lt;/strong>: 일부 노드에 장애가 발생해도 시스템이 계속 작동할 수 있다.&lt;/li>
&lt;li>&lt;strong>비용 효율성&lt;/strong>: 고성능 단일 시스템보다 여러 저비용 시스템을 사용하는 것이 경제적일 수 있다.&lt;/li>
&lt;li>&lt;strong>지리적 유연성&lt;/strong>: 전 세계적으로 분산된 리소스를 활용할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 단점&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-단점">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>분산 시스템에는 다음과 같은 단점도 있다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>복잡성&lt;/strong>: 여러 노드 간의 조정과 통신이 필요하여 시스템이 복잡해진다.&lt;/li>
&lt;li>&lt;strong>보안 취약성&lt;/strong>: 여러 노드로 인해 공격 표면이 넓어질 수 있다.&lt;/li>
&lt;li>&lt;strong>동기화 문제&lt;/strong>: 여러 노드 간의 데이터 일관성 유지가 어려울 수 있다.&lt;/li>
&lt;li>&lt;strong>디버깅의 어려움&lt;/strong>: 분산된 환경에서 문제를 찾고 해결하기가 더 어렵다.&lt;/li>
&lt;/ol>
&lt;h3>분산 시스템의 과제와 해결 방안&lt;span class="hx-absolute -hx-mt-20" id="분산-시스템의-과제와-해결-방안">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%98-%ea%b3%bc%ec%a0%9c%ec%99%80-%ed%95%b4%ea%b2%b0-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>일관성과 가용성의 균형&lt;br>
CAP 이론에 따르면, 분산 시스템에서는 일관성(Consistency), 가용성(Availability), 분할 내성(Partition Tolerance) 중 세 가지를 동시에 만족할 수 없다. 시스템의 목적에 따라 적절한 타협점을 찾아야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네트워크 지연과 실패 처리&lt;br>
네트워크 문제로 인한 지연이나 실패는 피할 수 없으므로, 이를 고려한 설계가 필요하다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 재시도 메커니즘 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">reliable_operation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_retries&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">attempt&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_retries&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 작업 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">perform_operation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="n">NetworkError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">attempt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">max_retries&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">**&lt;/span> &lt;span class="n">attempt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 지수 백오프&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보안과 인증&lt;br>
분산된 환경에서는 보안과 인증이 더욱 중요하다.&lt;br>
SSL/TLS, 분산 인증 시스템 등이 사용된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처-1">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>WCS(Warehouse Control System)</title><link>https://buenhyden.github.io/til/2024/12/warehouse-control-system/</link><pubDate>Tue, 24 Dec 2024 06:57:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/warehouse-control-system/</guid><description>
&lt;h2>WCS(Warehouse Control System)&lt;span class="hx-absolute -hx-mt-20" id="wcswarehouse-control-system">&lt;/span>
&lt;a href="#wcswarehouse-control-system" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>WCS(Warehouse Control System)는 물류 창고의 자동화 설비를 실시간으로 제어하고 관리하는 시스템이다.&lt;/p>
&lt;p>WCS의 기본 개념을 먼저 이해해보면, 이는 마치 물류 창고의 &amp;lsquo;신경계&amp;rsquo;와 같은 역할을 한다.&lt;br>
컨베이어, 자동 적재 장비, 분류기 등 다양한 자동화 설비들을 통합적으로 제어하여 물류의 흐름을 원활하게 만든다.&lt;/p>
&lt;p>WCS의 도입은 여러 가지 긍정적인 효과를 가져온다.&lt;br>
가장 큰 이점은 작업 효율성의 극대화이다.&lt;br>
자동화 설비들이 최적의 상태로 운영되므로, 물류 처리 속도가 빨라지고 오류가 줄어든다.&lt;br>
또한 실시간 모니터링을 통해 문제 상황에 신속하게 대응할 수 있어 다운타임을 최소화할 수 있다.&lt;/p>
&lt;p>현대의 WCS는 최신 기술을 적극적으로 활용한다.&lt;br>
인공지능 기술을 통해 더 똑똑한 의사결정이 가능해졌다.&lt;br>
예를 들어, 과거의 데이터를 분석하여 최적의 작업 순서를 예측하거나, 설비의 유지보수 시점을 미리 파악할 수 있다.&lt;/p>
&lt;p>IoT 센서들과의 연동도 중요한 발전 방향이다.&lt;br>
각 설비에 부착된 센서들이 상세한 운영 데이터를 수집하고, 이를 바탕으로 더 정교한 제어가 가능해진다.&lt;br>
마치 인체의 감각 신경이 뇌에 정보를 전달하듯이, 센서들은 WCS에 중요한 데이터를 제공한다.&lt;/p>
&lt;p>WCS는 다른 물류 시스템들과도 긴밀하게 연동된다.&lt;br>
상위 시스템인 WMS(Warehouse Management System)로부터 작업 지시를 받아 이를 실제 설비 동작으로 변환하고, 그 결과를 다시 WMS에 보고한다.&lt;br>
이러한 시스템 간의 원활한 통신은 전체 물류 프로세스의 효율성을 높이는 데 매우 중요하다.&lt;/p>
&lt;h3>WCS가 제공하는 핵심 기능&lt;span class="hx-absolute -hx-mt-20" id="wcs가-제공하는-핵심-기능">&lt;/span>
&lt;a href="#wcs%ea%b0%80-%ec%a0%9c%ea%b3%b5%ed%95%98%eb%8a%94-%ed%95%b5%ec%8b%ac-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>실시간 설비 제어 기능은 각종 자동화 장비들을 정확하게 통제한다.&lt;br>
예를 들어, 컨베이어 벨트의 속도를 조절하거나, 자동 적재 장비의 이동 경로를 지정하는 등의 작업을 수행한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>작업 할당 및 스케줄링 기능은 각 설비에 최적의 작업을 배분한다.&lt;br>
마치 교통 신호등이 차량의 흐름을 조절하듯이, WCS는 물류의 흐름을 효율적으로 관리한다.&lt;br>
예를 들어, 여러 주문이 동시에 들어왔을 때 어떤 순서로 처리할지, 어떤 설비를 활용할지를 결정한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>실시간 모니터링과 리포팅 기능도 중요하다.&lt;br>
모든 설비의 상태와 작업 진행 상황을 실시간으로 감시하고, 문제가 발생하면 즉시 알려준다.&lt;br>
이는 마치 병원의 환자 모니터링 시스템과 유사하게 작동한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>WCS 도입 시에는 몇 가지 중요한 고려사항&lt;span class="hx-absolute -hx-mt-20" id="wcs-도입-시에는-몇-가지-중요한-고려사항">&lt;/span>
&lt;a href="#wcs-%eb%8f%84%ec%9e%85-%ec%8b%9c%ec%97%90%eb%8a%94-%eb%aa%87-%ea%b0%80%ec%a7%80-%ec%a4%91%ec%9a%94%ed%95%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>기존 설비들과의 호환성을 철저히 검토해야 한다.&lt;br>
서로 다른 제조사의 설비들이 혼재되어 있는 경우가 많은데, 이들을 모두 통합적으로 제어할 수 있어야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>시스템의 안정성과 신뢰성이 매우 중요하다.&lt;br>
WCS는 물류 창고의 핵심 시스템이므로, 장애가 발생하면 전체 물류 운영이 중단될 수 있다.&lt;br>
따라서 충분한 테스트와 검증이 필요하며, 비상 상황에 대한 대책도 마련해야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>물류 운송 관리 시스템 (Transportation Management System, TMS)</title><link>https://buenhyden.github.io/til/2024/12/transportation-management-system/</link><pubDate>Tue, 24 Dec 2024 06:56:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/transportation-management-system/</guid><description>
&lt;h2>물류 운송 관리 시스템 (Transportation Management System, TMS)&lt;span class="hx-absolute -hx-mt-20" id="물류-운송-관리-시스템-transportation-management-system-tms">&lt;/span>
&lt;a href="#%eb%ac%bc%eb%a5%98-%ec%9a%b4%ec%86%a1-%ea%b4%80%eb%a6%ac-%ec%8b%9c%ec%8a%a4%ed%85%9c-transportation-management-system-tms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>TMS(Transportation Management System)는 물류 운송 관리 시스템으로, 기업의 물류 운송 프로세스를 효율적으로 관리하고 최적화하기 위한 솔루션이다.&lt;/p>
&lt;p>TMS는 운송 계획 수립부터 실제 배송, 비용 정산까지 물류 운송과 관련된 모든 프로세스를 통합적으로 관리한다.&lt;br>
이는 마치 교통관제센터가 도시의 모든 교통 흐름을 모니터링하고 관리하는 것과 유사하다.&lt;/p>
&lt;h3>TMS가 제공하는 주요 기능&lt;span class="hx-absolute -hx-mt-20" id="tms가-제공하는-주요-기능">&lt;/span>
&lt;a href="#tms%ea%b0%80-%ec%a0%9c%ea%b3%b5%ed%95%98%eb%8a%94-%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>운송 계획 및 최적화&lt;br>
운송 경로를 최적화하여 배송 시간과 비용을 절감한다.&lt;br>
예를 들어, 여러 배송지를 방문해야 할 때 가장 효율적인 경로를 계산하고, 차량의 적재 용량을 고려하여 최적의 배차 계획을 수립한다.&lt;br>
실시간 교통 정보를 반영하여 더욱 정확한 계획이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>실시간 운송 추적&lt;br>
GPS와 모바일 기술을 활용하여 배송 차량의 위치를 실시간으로 추적한다.&lt;br>
이를 통해 고객에게 정확한 배송 현황을 제공할 수 있으며, 문제 발생 시 신속한 대응이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>비용 관리 및 정산&lt;br>
운송과 관련된 모든 비용을 체계적으로 관리한다.&lt;br>
유류비, 인건비, 통행료 등의 비용을 자동으로 계산하고 정산하며, 운송 실적에 따른 정확한 비용 분석이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>문서 관리&lt;br>
운송장, 인수증, 정산서 등 물류 운송과 관련된 각종 문서를 전자화하여 관리한다.&lt;br>
이는 페이퍼리스 환경을 구축하고 업무 효율성을 높이는 데 기여한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>TMS 도입의 주요 효과&lt;span class="hx-absolute -hx-mt-20" id="tms-도입의-주요-효과">&lt;/span>
&lt;a href="#tms-%eb%8f%84%ec%9e%85%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%9a%a8%ea%b3%bc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>운영 효율성 향상&lt;br>
자동화된 프로세스를 통해 인력 투입을 줄이고, 오류를 최소화할 수 있다.&lt;br>
예를 들어, 수작업으로 하던 배차 계획을 시스템이 자동으로 수립함으로써 시간과 비용을 절감할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>고객 서비스 개선&lt;br>
실시간 배송 추적과 정확한 도착 예정 시간 제공으로 고객 만족도를 높일 수 있다.&lt;br>
문제 발생 시에도 신속한 대응이 가능하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>비용 절감&lt;br>
최적화된 운송 경로와 효율적인 차량 운영으로 운송 비용을 절감할 수 있다.&lt;br>
또한, 정확한 비용 분석을 통해 추가적인 비용 절감 포인트를 발견할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>네트워크 기능 가상화(Network Functions Virtualization, NFV)</title><link>https://buenhyden.github.io/posts/system-design/network-functions-virtualization/</link><pubDate>Mon, 23 Dec 2024 02:06:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/network-functions-virtualization/</guid><description>
&lt;h2>네트워크 기능 가상화(Network Functions Virtualization, NFV)&lt;span class="hx-absolute -hx-mt-20" id="네트워크-기능-가상화network-functions-virtualization-nfv">&lt;/span>
&lt;a href="#%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac-%ea%b8%b0%eb%8a%a5-%ea%b0%80%ec%83%81%ed%99%94network-functions-virtualization-nfv" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>NFV는 전통적으로 전용 하드웨어 장비에서 실행되던 네트워크 기능들을 가상화하여 소프트웨어로 구현하는 네트워크 아키텍처 개념이다.&lt;br>
이를 통해 범용 서버에서 가상 네트워크 기능(VNF)을 실행할 수 있게 된다.&lt;/p>
&lt;h3>주요 구성요소&lt;span class="hx-absolute -hx-mt-20" id="주요-구성요소">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>가상화된 네트워크 기능(VNF): 소프트웨어로 구현된 네트워크 기능&lt;/li>
&lt;li>NFV 인프라(NFVI): VNF를 실행하기 위한 하드웨어 및 소프트웨어 환경&lt;/li>
&lt;li>NFV 관리 및 오케스트레이션(MANO): VNF와 NFVI를 관리하고 조율하는 프레임워크&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NFVArchitecture&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># NFVI (NFV Infrastructure)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compute_resources&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">VirtualCompute&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">network_resources&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">VirtualNetwork&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">storage_resources&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">VirtualStorage&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># VNF (Virtual Network Functions)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">network_functions&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;firewall&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">VirtualFirewall&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;load_balancer&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">VirtualLoadBalancer&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;router&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">VirtualRouter&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># MANO (Management and Orchestration)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">orchestrator&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NFVOrchestrator&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">vnf_manager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">VNFManager&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">infrastructure_manager&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">InfrastructureManager&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">VirtualNetworkFunction&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">function_type&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">function_type&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;initialized&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resources&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">deploy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resources&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;가상 네트워크 기능 배포&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resources&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">resources&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;deployed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">factor&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;자원 스케일링&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resources&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">factor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">resources&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>하드웨어 비용 절감&lt;/li>
&lt;li>유연성과 확장성 향상&lt;/li>
&lt;li>신규 서비스 출시 시간 단축&lt;/li>
&lt;li>운영 효율성 증대&lt;/li>
&lt;li>자동화를 통한 관리 간소화&lt;/li>
&lt;/ul>
&lt;h3>구현 과제와 해결 방안&lt;span class="hx-absolute -hx-mt-20" id="구현-과제와-해결-방안">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%ea%b3%bc%ec%a0%9c%ec%99%80-%ed%95%b4%ea%b2%b0-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>성능 최적화&lt;br>
가상화로 인한 성능 저하를 최소화하기 위한 전략들:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PerformanceOptimizer&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">optimize_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;성능 최적화&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># CPU 리소스 최적화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_optimize_cpu_allocation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 네트워크 I/O 최적화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_optimize_network_io&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메모리 사용 최적화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_optimize_memory_usage&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보안 고려사항&lt;br>
가상화 환경에서의 보안 위협에 대응:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SecurityManager&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">implement_security_measures&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;보안 조치 구현&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 네트워크 분리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_implement_network_isolation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 접근 제어&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_setup_access_control&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 암호화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_implement_encryption&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모니터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_setup_security_monitoring&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>로드 밸런서, 방화벽, 라우터 등의 네트워크 기능 가상화&lt;/li>
&lt;li>모바일 네트워크의 코어 기능 가상화 (예: IMS, EPC)&lt;/li>
&lt;li>엣지 컴퓨팅&lt;/li>
&lt;li>네트워크 슬라이싱&lt;/li>
&lt;/ul>
&lt;h4>실제 적용 사례&lt;span class="hx-absolute -hx-mt-20" id="실제-적용-사례">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ec%a0%81%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>통신사 네트워크&lt;br>
통신 사업자의 네트워크 현대화:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">TelcoNFVImplementation&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">modernize_network&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;네트워크 현대화&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 코어 네트워크 가상화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_virtualize_core_network&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 엣지 서비스 구현&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_implement_edge_services&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 서비스 자동화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_automate_service_delivery&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>엔터프라이즈 네트워크&lt;br>
기업 네트워크의 현대화:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">EnterpriseNFV&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">transform_network&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;기업 네트워크 변환&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SD-WAN 구현&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_implement_sdwan&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 보안 서비스 가상화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_virtualize_security_services&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 네트워크 관리 자동화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_automate_network_management&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>작동 방식&lt;span class="hx-absolute -hx-mt-20" id="작동-방식">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>NFV는 서버 가상화 기술을 활용하여 네트워크 기능을 가상 머신이나 컨테이너로 구현한다.&lt;br>
이를 통해 하드웨어와 소프트웨어를 분리하고, 필요에 따라 자원을 동적으로 할당할 수 있다.&lt;/p>
&lt;h3>영향&lt;span class="hx-absolute -hx-mt-20" id="영향">&lt;/span>
&lt;a href="#%ec%98%81%ed%96%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>NFV는 통신 서비스 제공업체들이 네트워크 인프라를 더욱 효율적으로 관리하고 혁신할 수 있게 해주며, 클라우드 네이티브 기술과의 융합을 통해 5G 및 미래 네트워크 발전에 중요한 역할을 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>소프트웨어 정의 네트워킹 (Software-Defined Networking, SDN)</title><link>https://buenhyden.github.io/posts/system-design/software-defined-networking/</link><pubDate>Mon, 23 Dec 2024 02:00:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/software-defined-networking/</guid><description>
&lt;h2>소프트웨어 정의 네트워킹 (Software-Defined Networking, SDN)&lt;span class="hx-absolute -hx-mt-20" id="소프트웨어-정의-네트워킹-software-defined-networking-sdn">&lt;/span>
&lt;a href="#%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ec%a0%95%ec%9d%98-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%82%b9-software-defined-networking-sdn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>네트워크의 제어 기능을 네트워크 장비에서 분리하여 소프트웨어 기반 컨트롤러로 중앙집중화하는 네트워크 아키텍처.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>네트워크 리소스 최적화&lt;/li>
&lt;li>변화하는 비즈니스 요구사항에 신속한 대응&lt;/li>
&lt;li>네트워크 관리 및 구성의 간소화&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>제어 평면 (Control Plane) 과 데이터 평면 (Data Plane) 의 분리&lt;/strong>: 네트워크 장비의 제어 기능 (라우팅 결정 등) 을 별도의 소프트웨어 컨트롤러로 분리.&lt;/li>
&lt;li>&lt;strong>중앙집중식 관리&lt;/strong>: 전체 네트워크를 단일 지점에서 관리할 수 있어 효율성이 향상.&lt;/li>
&lt;li>&lt;strong>프로그래밍 가능성&lt;/strong>: API 를 통해 네트워크 동작을 프로그래밍할 수 있어 유연성이 증가&lt;/li>
&lt;li>&lt;strong>개방형 표준&lt;/strong>: 표준화된 프로토콜과 인터페이스를 사용하여 다양한 벤더의 장비를 통합 관리할 수 있음.&lt;/li>
&lt;/ul>
&lt;h3>계층 구조&lt;span class="hx-absolute -hx-mt-20" id="계층-구조">&lt;/span>
&lt;a href="#%ea%b3%84%ec%b8%b5-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>애플리케이션 계층 (Application Layer)
&lt;ul>
&lt;li>네트워크 서비스, 비즈니스 애플리케이션&lt;/li>
&lt;li>API 를 통한 네트워크 제어&lt;/li>
&lt;li>↕ Northbound API&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>제어 계층 (Control Layer)
&lt;ul>
&lt;li>SDN 컨트롤러&lt;/li>
&lt;li>네트워크 정책 및 제어 로직&lt;/li>
&lt;li>↕ Southbound API (OpenFlow 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인프라 계층 (Infrastructure Layer)
&lt;ul>
&lt;li>스위치, 라우터 등 네트워크 장비&lt;/li>
&lt;li>패킷 전송 및 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>유연성과 민첩성: 네트워크 구성을 신속하게 변경할 수 있다.&lt;/li>
&lt;li>비용 절감: 하드웨어 의존도를 줄여 CAPEX 와 OPEX 를 절감할 수 있다.&lt;/li>
&lt;li>중앙집중식 관리: 네트워크 전체를 단일 지점에서 관리할 수 있다.&lt;/li>
&lt;li>보안 강화: 중앙에서 일관된 보안 정책을 적용할 수 있음.&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>단일 장애 지점: 중앙 컨트롤러에 문제가 생기면 전체 네트워크에 영향을 줌.&lt;/li>
&lt;li>성능 저하 가능성: 네트워크 규모가 커지면 컨트롤러의 부하가 증가할 수 있음.&lt;/li>
&lt;li>보안 취약점: 중앙 컨트롤러가 공격 대상이 될 수 있음.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>기업의 지출을 구분하는 두 가지 주요 카테고리&lt;/p>
&lt;ul>
&lt;li>CAPEX (Capital Expenditure, 자본 지출): 장기적인 자산 취득을 위한 지출&lt;/li>
&lt;li>OPEX (Operating Expenditure, 운영 비용): 기업의 일상적인 운영을 위한 지출&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>온프레미스(On-Premise)</title><link>https://buenhyden.github.io/posts/system-design/infrastructure/on-premise/</link><pubDate>Sat, 21 Dec 2024 10:29:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/infrastructure/on-premise/</guid><description>
&lt;h2>온프레미스(On-Premise)&lt;span class="hx-absolute -hx-mt-20" id="온프레미스on-premise">&lt;/span>
&lt;a href="#%ec%98%a8%ed%94%84%eb%a0%88%eb%af%b8%ec%8a%a4on-premise" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>On-Premise는 기업이 자체적으로 보유한 시설이나 건물에 IT 인프라를 구축하고 운영하는 방식을 의미한다.&lt;br>
&amp;lsquo;현장에서&amp;rsquo; 또는 &amp;lsquo;사내에서&amp;rsquo;라는 뜻의 이 용어는, 기업이 서버, 소프트웨어, 네트워크 등의 IT 자원을 직접 소유하고 관리하는 전통적인 방식을 설명한다.&lt;/p>
&lt;h3>On-Premise의 주요 특징&lt;span class="hx-absolute -hx-mt-20" id="on-premise의-주요-특징">&lt;/span>
&lt;a href="#on-premise%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>자체 인프라 구축과 관리&lt;br>
기업은 모든 하드웨어와 소프트웨어를 직접 구매하고 설치한다.&lt;br>
서버실을 운영하고, 네트워크를 구성하며, 필요한 보안 시스템을 구축한다.&lt;br>
이는 완전한 통제권을 가질 수 있다는 장점이 있지만, 동시에 많은 초기 투자와 지속적인 관리가 필요하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 보안과 통제&lt;br>
모든 데이터가 기업 내부에 저장되고 관리되므로, 데이터 보안에 대한 완전한 통제권을 갖는다.&lt;br>
특히 금융기관이나 정부기관처럼 높은 수준의 보안이 요구되는 조직에서 선호하는 방식이다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>On-Premise의 장점&lt;span class="hx-absolute -hx-mt-20" id="on-premise의-장점">&lt;/span>
&lt;a href="#on-premise%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>높은 보안성과 통제력&lt;br>
데이터와 시스템에 대한 물리적 접근을 직접 통제할 수 있어, 높은 수준의 보안을 구현할 수 있다.&lt;br>
중요한 기업 정보나 고객 데이터를 자체적으로 보호할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>커스터마이징 자유도&lt;br>
기업의 특수한 요구사항에 맞춰 시스템을 자유롭게 수정하고 최적화할 수 있다.&lt;br>
필요한 경우 하드웨어를 업그레이드하거나 소프트웨어를 커스터마이징할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네트워크 의존성 감소&lt;br>
인터넷 연결에 문제가 생겨도 내부 시스템은 계속 운영될 수 있다.&lt;br>
이는 중요한 업무의 연속성을 보장하는 데 도움이 된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>On-Premise의 단점&lt;span class="hx-absolute -hx-mt-20" id="on-premise의-단점">&lt;/span>
&lt;a href="#on-premise%ec%9d%98-%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>높은 초기 비용&lt;br>
서버, 네트워크 장비, 소프트웨어 라이선스 등을 구매하기 위한 큰 초기 투자가 필요하다.&lt;br>
또한 이를 설치하고 구성하는 데도 상당한 비용이 발생한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>유지보수 부담&lt;br>
하드웨어 관리, 소프트웨어 업데이트, 보안 패치 적용 등 지속적인 유지보수가 필요하다.&lt;br>
이를 위한 전문 인력도 필요하다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>확장성 제한&lt;br>
수요가 급증할 때 빠르게 시스템을 확장하기 어려울 수 있다.&lt;br>
새로운 서버를 추가하거나 용량을 늘리는 데 시간과 비용이 많이 소요된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>On-Premise 적용이 적합한 상황&lt;span class="hx-absolute -hx-mt-20" id="on-premise-적용이-적합한-상황">&lt;/span>
&lt;a href="#on-premise-%ec%a0%81%ec%9a%a9%ec%9d%b4-%ec%a0%81%ed%95%a9%ed%95%9c-%ec%83%81%ed%99%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>높은 보안이 요구되는 경우:&lt;/p>
&lt;ul>
&lt;li>금융 기관의 고객 데이터 관리&lt;/li>
&lt;li>정부 기관의 기밀 정보 처리&lt;/li>
&lt;li>의료 기관의 환자 정보 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>레거시 시스템 운영:&lt;/p>
&lt;ul>
&lt;li>기존 시스템과의 호환성이 중요한 경우&lt;/li>
&lt;li>특수한 하드웨어나 소프트웨어가 필요한 경우&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>규제 준수가 필요한 경우:&lt;/p>
&lt;ul>
&lt;li>데이터 현지화 요구사항이 있는 경우&lt;/li>
&lt;li>특정 산업 규제를 준수해야 하는 경우&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Enterprise Resource Planning</title><link>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning/</link><pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning/</guid><description>
&lt;h2>ERP (Enterprise Resource Planning)&lt;span class="hx-absolute -hx-mt-20" id="erp-enterprise-resource-planning">&lt;/span>
&lt;a href="#erp-enterprise-resource-planning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>ERP(Enterprise Resource Planning)는 기업의 모든 자원을 통합적으로 관리하고 운영하기 위한 시스템.&lt;/p>
&lt;p>ERP는 기업의 인력, 자본, 자재, 기계 등 모든 경영자원을 효율적으로 통합 관리하여 기업의 경쟁력을 높이는 통합정보시스템이다.&lt;br>
이는 재무, 인사, 생산, 물류, 영업 등 기업의 전반적인 업무 프로세스를 하나의 통합된 시스템으로 구축하여 정보를 공유하고 업무 효율을 높이는 것을 목표로 한다.&lt;/p>
&lt;h3>ERP의 주요 기능 및 서비스&lt;span class="hx-absolute -hx-mt-20" id="erp의-주요-기능-및-서비스">&lt;/span>
&lt;a href="#erp%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5-%eb%b0%8f-%ec%84%9c%eb%b9%84%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>재무/회계 관리&lt;/p>
&lt;ul>
&lt;li>자금, 손익, 매출, 비용 등의 재무 정보 관리&lt;/li>
&lt;li>회계 보고서 자동 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인사/급여 관리&lt;/p>
&lt;ul>
&lt;li>직원 정보 관리&lt;/li>
&lt;li>급여 계산 및 지급&lt;/li>
&lt;li>4대 보험 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>생산/제조 관리&lt;/p>
&lt;ul>
&lt;li>생산 계획 수립&lt;/li>
&lt;li>원자재 소요량 계산&lt;/li>
&lt;li>제품 원가 산출&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>재고/물류 관리&lt;/p>
&lt;ul>
&lt;li>실시간 재고 현황 파악&lt;/li>
&lt;li>창고별 재고 관리&lt;/li>
&lt;li>물류 추적 및 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>영업/구매 관리&lt;/p>
&lt;ul>
&lt;li>고객 주문 관리&lt;/li>
&lt;li>판매/구매 내역 추적&lt;/li>
&lt;li>공급업체 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>고객 관계 관리(CRM)&lt;/p>
&lt;ul>
&lt;li>고객 정보 통합 관리&lt;/li>
&lt;li>마케팅 캠페인 관리&lt;/li>
&lt;li>고객 서비스 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프로젝트 관리&lt;/p>
&lt;ul>
&lt;li>프로젝트 일정 및 자원 관리&lt;/li>
&lt;li>비용 추적 및 분석&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 분석 및 보고&lt;/p>
&lt;ul>
&lt;li>실시간 데이터 분석&lt;/li>
&lt;li>맞춤형 보고서 생성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>시스템 통합 및 데이터 일원화&lt;/p>
&lt;ul>
&lt;li>부서 간 정보 공유 및 협업 지원&lt;/li>
&lt;li>데이터의 일관성 유지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안 및 접근 제어&lt;/p>
&lt;ul>
&lt;li>사용자 권한 관리&lt;/li>
&lt;li>데이터 보안 및 백업&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Warehouse Management System</title><link>https://buenhyden.github.io/til/2024/12/warehouse-management-system/</link><pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/warehouse-management-system/</guid><description>
&lt;h2>창고 관리 시스템 (Warehouse Management System, WMS)&lt;span class="hx-absolute -hx-mt-20" id="창고-관리-시스템-warehouse-management-system-wms">&lt;/span>
&lt;a href="#%ec%b0%bd%ea%b3%a0-%ea%b4%80%eb%a6%ac-%ec%8b%9c%ec%8a%a4%ed%85%9c-warehouse-management-system-wms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>WMS(Warehouse Management System)는 창고 관리 시스템으로, 창고 내의 물류 프로세스를 최적화하고 효율적으로 관리하기 위한 소프트웨어 애플리케이션을 말한다.&lt;br>
WMS는 재고 관리, 주문 처리, 입출고 관리 등 창고 운영의 전반적인 과정을 자동화하고 최적화하는 데 사용된다.&lt;/p>
&lt;h3>WMS의 주요 기능과 서비스&lt;span class="hx-absolute -hx-mt-20" id="wms의-주요-기능과-서비스">&lt;/span>
&lt;a href="#wms%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5%ea%b3%bc-%ec%84%9c%eb%b9%84%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>재고 관리 및 추적&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>실시간 재고 수준 모니터링&lt;/li>
&lt;li>재고 위치 추적 및 최적화&lt;/li>
&lt;li>바코드 및 RFID 기술을 활용한 재고 추적&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>주문 관리 및 처리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>주문 접수 및 처리 자동화&lt;/li>
&lt;li>피킹, 패킹, 배송 프로세스 최적화&lt;/li>
&lt;li>주문 상태 실시간 추적&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>입고 및 출고 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>입고 예약 및 처리&lt;/li>
&lt;li>출고 계획 수립 및 실행&lt;/li>
&lt;li>크로스도킹 관리&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>공간 최적화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>창고 레이아웃 최적화&lt;/li>
&lt;li>보관 위치 할당 및 관리&lt;/li>
&lt;li>공간 활용도 분석&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>노동력 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>작업 할당 및 스케줄링&lt;/li>
&lt;li>직원 성과 추적 및 분석&lt;/li>
&lt;li>생산성 향상을 위한 작업 최적화&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>보고 및 분석&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>재고 보고서 생성&lt;/li>
&lt;li>성과 지표(KPI) 분석&lt;/li>
&lt;li>예측 분석 및 의사결정 지원&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>운송 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>배송업체 선택 및 비용 최적화&lt;/li>
&lt;li>배송 추적 및 상태 업데이트&lt;/li>
&lt;li>운송 문서 자동 생성&lt;/li>
&lt;/ul>
&lt;ol start="8">
&lt;li>시스템 통합&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>ERP, TMS 등 다른 비즈니스 시스템과의 통합&lt;/li>
&lt;li>EDI(전자데이터교환) 지원&lt;/li>
&lt;li>API를 통한 맞춤형 통합 지원&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>E-Commerce Service</title><link>https://buenhyden.github.io/til/2024/12/e-commerce-service/</link><pubDate>Fri, 20 Dec 2024 12:54:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/e-commerce-service/</guid><description>
&lt;h2>E-Commerce Service&lt;span class="hx-absolute -hx-mt-20" id="e-commerce-service">&lt;/span>
&lt;a href="#e-commerce-service" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>여러 사용자가 동시에 하나의 물품을 구매하려고 할 때 발생할 수 있는 문제를 해결하기 위해 다음과 같은 요소들을 고려해야 한다.&lt;/p>
&lt;h3>고려해야 할 요소&lt;span class="hx-absolute -hx-mt-20" id="고려해야-할-요소">&lt;/span>
&lt;a href="#%ea%b3%a0%eb%a0%a4%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>동시성 제어&lt;/strong>: 여러 사용자가 동시에 같은 물품을 구매하려 할 때 발생할 수 있는 충돌을 관리해야 한다.&lt;/li>
&lt;li>&lt;strong>재고 관리&lt;/strong>: 실시간으로 정확한 재고 수량을 유지하고 업데이트해야 한다.&lt;/li>
&lt;li>&lt;strong>트랜잭션 일관성&lt;/strong>: 결제 과정과 재고 감소가 일관성 있게 처리되어야 한다.&lt;/li>
&lt;li>&lt;strong>사용자 경험&lt;/strong>: 구매 과정에서 사용자에게 명확한 피드백을 제공해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>핵심 영역&lt;span class="hx-absolute -hx-mt-20" id="핵심-영역">&lt;/span>
&lt;a href="#%ed%95%b5%ec%8b%ac-%ec%98%81%ec%97%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>상품 관리 시스템&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>상품 정보 관리 (이름, 가격, 재고, 카테고리, 상품 상태 등)&lt;/li>
&lt;li>재고 관리 시스템 (동시성 제어가 매우 중요)&lt;/li>
&lt;li>상품 검색 및 필터링 기능&lt;/li>
&lt;li>이미지 처리 및 저장&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>주문 처리 시스템 (매우 중요)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>주문 상태 관리 (결제대기, 결제완료, 배송준비, 배송중, 배송완료 등)&lt;/li>
&lt;li>장바구니 기능&lt;/li>
&lt;li>동시 주문 처리를 위한 동시성 제어&lt;/li>
&lt;li>재고 차감 로직&lt;/li>
&lt;li>주문 취소/환불 처리&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>결제 시스템&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>결제 게이트웨이 연동&lt;/li>
&lt;li>결제 상태 관리&lt;/li>
&lt;li>결제 실패 처리&lt;/li>
&lt;li>환불 처리&lt;/li>
&lt;li>결제 보안 (매우 중요)&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>사용자 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>회원가입/로그인&lt;/li>
&lt;li>권한 관리&lt;/li>
&lt;li>개인정보 보호&lt;/li>
&lt;li>주소록 관리&lt;/li>
&lt;li>구매 이력 관리&lt;/li>
&lt;/ul>
&lt;h3>구현 방법&lt;span class="hx-absolute -hx-mt-20" id="구현-방법">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>데이터베이스 수준의 잠금 (Database-Level Locking)&lt;span class="hx-absolute -hx-mt-20" id="데이터베이스-수준의-잠금-database-level-locking">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%b2%a0%ec%9d%b4%ec%8a%a4-%ec%88%98%ec%a4%80%ec%9d%98-%ec%9e%a0%ea%b8%88-database-level-locking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>낙관적 잠금 (Optimistic Locking)&lt;span class="hx-absolute -hx-mt-20" id="낙관적-잠금-optimistic-locking">&lt;/span>
&lt;a href="#%eb%82%99%ea%b4%80%ec%a0%81-%ec%9e%a0%ea%b8%88-optimistic-locking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>낙관적 잠금은 대부분의 트랜잭션이 충돌하지 않는다는 가정하에 작동한다.&lt;/p>
&lt;p>구현 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">item_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 SQL 문은 재고 값이 변경되지 않은 경우에만 항목을 업데이트한다.&lt;/p>
&lt;h5>비관적 잠금 (Pessimistic Locking)&lt;span class="hx-absolute -hx-mt-20" id="비관적-잠금-pessimistic-locking">&lt;/span>
&lt;a href="#%eb%b9%84%ea%b4%80%ec%a0%81-%ec%9e%a0%ea%b8%88-pessimistic-locking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>비관적 잠금은 트랜잭션 기간 동안 항목을 잠그어 다른 트랜잭션이 업데이트하지 못하게 한다.&lt;/p>
&lt;p>구현 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">BEGIN&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">item_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FOR&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">-- 재고 확인 및 가능한 경우 업데이트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">UPDATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">SET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">item_id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">COMMIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>애플리케이션 수준의 처리&lt;span class="hx-absolute -hx-mt-20" id="애플리케이션-수준의-처리">&lt;/span>
&lt;a href="#%ec%95%a0%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%ec%88%98%ec%a4%80%ec%9d%98-%ec%b2%98%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>분산 잠금 (Distributed Locking)&lt;span class="hx-absolute -hx-mt-20" id="분산-잠금-distributed-locking">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%9e%a0%ea%b8%88-distributed-locking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>분산 잠금을 사용하면 여러 서버에서 동시에 접근하는 경우에도 일관성을 유지할 수 있다.&lt;/p>
&lt;p>구현 방법:&lt;/p>
&lt;ol>
&lt;li>사용자가 구매를 시도할 때 해당 항목에 대한 분산 잠금을 획득한다.&lt;/li>
&lt;li>잠금을 유지한 상태에서 구매 작업을 수행한다.&lt;/li>
&lt;li>작업 완료 후 잠금을 해제한다.&lt;/li>
&lt;/ol>
&lt;h4>상태 관리&lt;span class="hx-absolute -hx-mt-20" id="상태-관리">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ea%b4%80%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>물품의 상태를 세 가지로 관리할 수 있다: 사용 가능, 보류 중, 판매됨.&lt;/p>
&lt;ul>
&lt;li>사용자가 결제 페이지로 이동할 때 물품 상태를 &amp;ldquo;보류 중&amp;quot;으로 변경.&lt;/li>
&lt;li>일정 시간(예: 10분) 후에 결제가 완료되지 않으면 상태를 다시 &amp;ldquo;사용 가능&amp;quot;으로 변경.&lt;/li>
&lt;/ul>
&lt;h4>실시간 재고 동기화&lt;span class="hx-absolute -hx-mt-20" id="실시간-재고-동기화">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%8b%9c%ea%b0%84-%ec%9e%ac%ea%b3%a0-%eb%8f%99%ea%b8%b0%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>여러 판매 채널을 사용하는 경우, 중앙 집중식 재고 관리 시스템을 구축하여 실시간으로 재고를 동기화해야 한다.&lt;/p>
&lt;h5>실시간 인벤토리 동기화를 구현하는 방법&lt;span class="hx-absolute -hx-mt-20" id="실시간-인벤토리-동기화를-구현하는-방법">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%8b%9c%ea%b0%84-%ec%9d%b8%eb%b2%a4%ed%86%a0%eb%a6%ac-%eb%8f%99%ea%b8%b0%ed%99%94%eb%a5%bc-%ea%b5%ac%ed%98%84%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;h6>데이터 통합 및 실시간 업데이트&lt;span class="hx-absolute -hx-mt-20" id="데이터-통합-및-실시간-업데이트">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ed%86%b5%ed%95%a9-%eb%b0%8f-%ec%8b%a4%ec%8b%9c%ea%b0%84-%ec%97%85%eb%8d%b0%ec%9d%b4%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ol>
&lt;li>중앙 집중식 인벤토리 관리&lt;br>
모든 판매 채널의 재고를 단일 플랫폼에서 관리한다.&lt;br>
이를 통해 여러 채널에서의 재고 수준을 실시간으로 추적하고 동기화할 수 있다.&lt;/li>
&lt;li>자동화된 동기화&lt;br>
판매, 반품, 재입고 등 재고 변동이 발생할 때마다 자동으로 모든 연결된 채널에서 업데이트가 이루어진다.&lt;br>
이는 과잉 판매와 재고 부족을 방지하는 데 도움이 된다.&lt;/li>
&lt;/ol>
&lt;h6>기술적 구현 방법&lt;span class="hx-absolute -hx-mt-20" id="기술적-구현-방법">&lt;/span>
&lt;a href="#%ea%b8%b0%ec%88%a0%ec%a0%81-%ea%b5%ac%ed%98%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ol>
&lt;li>웹훅 (Webhooks)&lt;br>
재고 변경 시 즉각적인 알림을 통해 시스템 전체에 즉시 업데이트를 트리거한다.&lt;/li>
&lt;li>API 통합&lt;br>
다양한 소프트웨어 구성 요소 간의 원활한 통신을 가능하게 하여 모든 접점에서 재고 데이터의 일관성을 보장한다.&lt;/li>
&lt;li>데이터베이스 복제&lt;br>
재고 데이터베이스의 여러 복사본을 생성하여 다양한 위치에서 빠른 액세스와 업데이트를 가능하게 한다.&lt;/li>
&lt;/ol>
&lt;h6>고급 기능&lt;span class="hx-absolute -hx-mt-20" id="고급-기능">&lt;/span>
&lt;a href="#%ea%b3%a0%ea%b8%89-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ol>
&lt;li>맞춤형 알림 설정&lt;br>
재고가 낮아질 때 알림을 받아 적시에 공급업체에 주문을 할 수 있도록 한다.&lt;/li>
&lt;li>멀티팩 및 번들 추적&lt;br>
키트를 구성하는 개별 아이템 수준에서 멀티팩과 번들을 추적한다.&lt;/li>
&lt;li>다중 창고 관리&lt;br>
여러 창고의 재고를 추적하고, 채널별로 창고 우선순위를 설정할 수 있다.&lt;/li>
&lt;/ol>
&lt;h6>구현 시 고려사항&lt;span class="hx-absolute -hx-mt-20" id="구현-시-고려사항">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;ol>
&lt;li>&lt;strong>데이터 일관성&lt;/strong>: 모든 채널에서 재고 정보가 일치하도록 유지해야 한다.&lt;/li>
&lt;li>&lt;strong>네트워크 지연&lt;/strong>: 실시간 업데이트 시 발생할 수 있는 지연을 최소화해야 한다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 비즈니스 성장에 따라 시스템이 확장될 수 있어야 한다.&lt;/li>
&lt;li>&lt;strong>오류 처리&lt;/strong>: 동기화 과정에서 발생할 수 있는 오류를 효과적으로 관리해야 한다.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>트랜잭션 관리&lt;br>
데이터베이스의 ACID 속성을 활용하여 트랜잭션의 일관성을 유지한다.&lt;br>
이를 통해 하나의 트랜잭션만 성공하고 나머지는 중단되도록 할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>구현예제&lt;span class="hx-absolute -hx-mt-20" id="구현예제">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84%ec%98%88%ec%a0%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>사용된 주요 기술과 패턴들:&lt;/p>
&lt;ol>
&lt;li>분산 락(Distributed Lock):&lt;br>
Redis를 사용하여 분산 락을 구현.&lt;br>
이는 여러 서버에서 동시에 같은 상품에 대한 구매 요청이 들어올 때도 안전하게 처리할 수 있게 해준다.&lt;br>
Redis의 SETNX 명령어를 활용하여 락의 획득과 해제를 관리한다.&lt;/li>
&lt;li>데이터베이스 트랜잭션:&lt;br>
데이터베이스 수준에서 트랜잭션을 사용하여 재고 확인, 결제 처리, 주문 정보 저장이 모두 하나의 원자적 단위로 처리되도록 보장한다.&lt;br>
만약 중간에 실패가 발생하면 모든 변경사항이 롤백된다.&lt;/li>
&lt;li>SELECT FOR UPDATE 재고를 확인하고 수정할 때 데이터베이스의 row-level 락을 사용.&lt;br>
이를 통해 다른 트랜잭션이 동시에 같은 재고 정보를 수정하는 것을 방지한다.&lt;/li>
&lt;li>멱등성 처리&lt;br>
각 주문 요청에 고유한 idempotency_key를 할당하고, Redis를 사용하여 이를 관리한다.&lt;br>
같은 키로 중복 요청이 들어와도 한 번만 처리되도록 보장한다.&lt;/li>
&lt;li>예외 처리&lt;br>
모든 주요 작업에 대해 적절한 예외 처리를 구현하여, 시스템이 안정적으로 동작하도록 보장한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">timedelta&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">threading&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">dataclasses&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">uuid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">enum&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Enum&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sqlalchemy&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">create_engine&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">select&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sqlalchemy.orm&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">sqlalchemy.exc&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">IntegrityError&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 상품 상태를 나타내는 열거형&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Enum&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PENDING&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;pending&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PAYMENT_PROCESSING&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;payment_processing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">COMPLETED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;completed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FAILED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;failed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OrderRequest&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PurchaseSystem&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Redis 연결 설정 (동시성 제어를 위한 분산 락 구현에 사용)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6379&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터베이스 연결 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">engine&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_engine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;postgresql://user:password@localhost/dbname&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결제 시도 횟수 제한 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">max_retries&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">acquire_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">timeout&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;분산 락 획득을 시도합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;product_lock:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_key&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">timeout&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nx&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">release_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;분산 락을 해제합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_key&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;product_lock:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock_key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">check_idempotency&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nb">dict&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;요청의 멱등성을 확인합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;idempotency:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">result&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">save_idempotency_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;멱등성 결과를 저장합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setex&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;idempotency:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timedelta&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hours&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">check_and_reserve_inventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Session&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;재고를 확인하고 예약합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SELECT FOR UPDATE를 사용하여 재고 데이터 락&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stmt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">select&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">product_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">with_for_update&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stmt&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">scalar_one&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inventory&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inventory&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="n">quantity&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">order_request&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">OrderRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;결제를 처리합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 결제 처리 로직을 구현합니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 외부 결제 시스템과의 연동이 필요합니다&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">purchase&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">order_request&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">OrderRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;상품 구매를 처리합니다.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 멱등성 체크&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">idempotency_result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">check_idempotency&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">idempotency_result&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">idempotency_result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 분산 락 획득 시도&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;다른 거래가 진행 중입니다&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">Session&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">engine&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 트랜잭션 시작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 재고 확인 및 예약&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">check_and_reserve_inventory&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quantity&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;재고가 부족합니다&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결제 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_payment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결제 실패 시 롤백은 자동으로 수행됨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;결제 처리에 실패했습니다&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 정보 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Order&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">product_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">quantity&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">quantity&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_amount&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">total_amount&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">OrderStatus&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">COMPLETED&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;order_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">order&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;구매가 완료되었습니다&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 멱등성 결과 저장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save_idempotency_result&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">idempotency_key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;message&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 락 해제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">release_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>시스템을 실제로 운영할 때 고려해야 할 추가 사항들&lt;span class="hx-absolute -hx-mt-20" id="시스템을-실제로-운영할-때-고려해야-할-추가-사항들">&lt;/span>
&lt;a href="#%ec%8b%9c%ec%8a%a4%ed%85%9c%ec%9d%84-%ec%8b%a4%ec%a0%9c%eb%a1%9c-%ec%9a%b4%ec%98%81%ed%95%a0-%eb%95%8c-%ea%b3%a0%eb%a0%a4%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%b6%94%ea%b0%80-%ec%82%ac%ed%95%ad%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>모니터링과 로깅&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>모든 주문 처리 과정을 로깅하여 문제 발생 시 추적할 수 있어야 합니다.&lt;/li>
&lt;li>시스템의 성능과 안정성을 모니터링해야 합니다.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>성능 최적화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>캐시를 활용하여 자주 조회되는 상품 정보의 접근 속도를 개선할 수 있습니다.&lt;/li>
&lt;li>데이터베이스 인덱스를 적절히 설정하여 조회 성능을 향상시킬 수 있습니다.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>확장성&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>시스템이 성장함에 따라 수평적 확장이 가능하도록 설계해야 합니다.&lt;/li>
&lt;li>마이크로서비스 아키텍처의 도입을 고려할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>선사용 IT 솔루션</title><link>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</link><pubDate>Fri, 20 Dec 2024 01:43:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98/</guid><description>
&lt;h2>선사용 IT 솔루션&lt;span class="hx-absolute -hx-mt-20" id="선사용-it-솔루션">&lt;/span>
&lt;a href="#%ec%84%a0%ec%82%ac%ec%9a%a9-it-%ec%86%94%eb%a3%a8%ec%85%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>선사용 IT 솔루션을 개발하기 위해 필요한 주요 기능과 서비스는 다음과 같다.&lt;br>
이는 해운업계의 디지털 전환 사례와 최신 기술 트렌드를 기반으로 정리되었다.&lt;/p>
&lt;ol>
&lt;li>선박 운영 및 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>선대 관리&lt;/strong>: 선박의 위치, 상태, 운항 스케줄을 실시간으로 모니터링하고 관리하는 기능.&lt;/li>
&lt;li>&lt;strong>연료 효율 관리&lt;/strong>: 연료 소비를 최적화하고 탄소 배출을 줄이기 위한 경로 최적화 및 연료 절감 시스템.&lt;/li>
&lt;li>&lt;strong>선박 유지보수&lt;/strong>: 선박 장비의 상태를 실시간으로 모니터링하고 예측 유지보수를 지원하는 시스템.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>화물 및 물류 관리&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>화물 추적&lt;/strong>: RFID 및 IoT 기술을 활용하여 화물의 위치, 상태, 온도 등을 실시간으로 추적.&lt;/li>
&lt;li>&lt;strong>문서 디지털화&lt;/strong>: 블록체인을 활용한 전자 선하증권(e-BL) 및 기타 물류 문서의 디지털화로 투명성과 보안 강화.&lt;/li>
&lt;li>&lt;strong>물류 최적화&lt;/strong>: 화물 적재 및 하역 작업의 효율성을 높이고, 비용을 절감하는 시스템.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>데이터 분석 및 의사결정 지원&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>빅데이터 분석&lt;/strong>: 선박 운항 데이터와 물류 데이터를 분석하여 운영 효율성과 비용 절감을 위한 인사이트 제공.&lt;/li>
&lt;li>&lt;strong>AI 기반 분석&lt;/strong>: AI를 활용한 운항 경로 최적화, 사고 예방, 장비 고장 예측 등의 기능.&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>고객 서비스 향상&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>실시간 정보 제공&lt;/strong>: 고객에게 화물 상태와 예상 도착 시간 등의 정보를 실시간으로 제공하는 기능.&lt;/li>
&lt;li>&lt;strong>사용자 친화적인 인터페이스&lt;/strong>: 직관적인 UI/UX를 통해 고객과 운영자가 쉽게 시스템을 사용할 수 있게 설계.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>통합 및 자동화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>시스템 통합&lt;/strong>: ERP, WMS 등 기존 시스템과의 원활한 통합을 통해 데이터 공유와 프로세스 간소화.&lt;/li>
&lt;li>&lt;strong>자동화 프로세스&lt;/strong>: 문서 생성, 데이터 입력, 보고서 작성 등 반복 작업의 자동화를 통해 생산성 향상.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>보안 및 규제 준수&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 데이터 암호화, 접근 제어 등으로 민감한 정보를 보호하고 사이버 보안을 강화.&lt;/li>
&lt;li>&lt;strong>국제 규제 준수&lt;/strong>: IMO(국제해사기구) 탄소 배출 규제 및 CII 등급 관리 지원.&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>선원 복지&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;strong>선상 인터넷 서비스&lt;/strong>: 저렴한 위성통신 비용으로 선원들에게 인터넷 접속 환경 제공.&lt;/li>
&lt;li>&lt;strong>안전 관리&lt;/strong>: AI 기반 CCTV 분석으로 선원의 이상 상태나 위험 상황을 사전에 감지하여 대응.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>서비스 디스커버리 (Service Discovery)</title><link>https://buenhyden.github.io/posts/system-design/distributed-system/service-discovery/</link><pubDate>Wed, 11 Dec 2024 00:15:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/distributed-system/service-discovery/</guid><description>
&lt;h2>서비스 디스커버리 (Service Discovery)&lt;span class="hx-absolute -hx-mt-20" id="서비스-디스커버리-service-discovery">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%94%94%ec%8a%a4%ec%bb%a4%eb%b2%84%eb%a6%ac-service-discovery" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>현대 분산 시스템에서 핵심적인 컴포넌트.&lt;br>
분산 시스템에서 동적으로 변화하는 서비스의 위치를 자동으로 탐색하고 관리하는 중요한 기술이다.&lt;br>
분산 환경에서 서비스 간 통신을 원활하게 하고, 시스템의 확장성과 유연성을 높이는 데 핵심적인 역할을 한다.&lt;/p>
&lt;p>필요성:&lt;/p>
&lt;ol>
&lt;li>동적 환경 대응: 클라우드 및 컨테이너 기반 환경에서 서비스의 IP 주소와 포트가 동적으로 변경된다.&lt;/li>
&lt;li>자동 스케일링: 서비스 인스턴스가 자동으로 추가되거나 제거될 때 이를 감지하고 관리해야 한다.&lt;/li>
&lt;li>장애 대응: 서비스 장애 시 자동으로 대체 인스턴스로 전환할 수 있어야 한다.&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>유연성: 서비스의 위치가 동적으로 변경되어도 시스템이 원활하게 작동한다.&lt;/li>
&lt;li>확장성: 새로운 서비스 인스턴스를 쉽게 추가하고 제거할 수 있다.&lt;/li>
&lt;li>고가용성: 장애 발생 시 자동으로 정상 인스턴스로 전환할 수 있다.&lt;/li>
&lt;li>자동화: 서비스 등록과 탐색 과정이 자동화되어 운영 부담이 줄어든다.&lt;/li>
&lt;/ol>
&lt;p>핵심 동작 방식:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ServiceRegistry&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1"># 서비스 정보를 저장하는 저장소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">health_checks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1"># 상태 체크 정보&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">register_service&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">service_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;새로운 서비스 인스턴스 등록&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">service_name&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">service_name&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">service_name&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;id&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;host&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;port&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;metadata&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metadata&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;HEALTHY&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">discover_service&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">service_name&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;사용 가능한 서비스 인스턴스 찾기&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">service_name&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 로드 밸런싱을 위한 간단한 라운드 로빈 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">healthy_instances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">inst&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">inst&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">service_name&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">inst&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;HEALTHY&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">healthy_instances&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">healthy_instances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 실제로는 로드 밸런싱 적용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ServiceInstance&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">host&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metadata&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">host&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">metadata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">metadata&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주요 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="주요-구성-요소">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>서비스 레지스트리&lt;span class="hx-absolute -hx-mt-20" id="서비스-레지스트리">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%a0%88%ec%a7%80%ec%8a%a4%ed%8a%b8%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>서비스 인스턴스의 정보(IP, 포트 등)를 저장하고 관리하는 중앙 데이터베이스&lt;/p>
&lt;h4>서비스 등록(Registration)&lt;span class="hx-absolute -hx-mt-20" id="서비스-등록registration">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%93%b1%eb%a1%9dregistration" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>서비스 인스턴스가 시작될 때 자신의 정보를 레지스트리에 등록하는 과정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ServiceRegistration&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">register_with_eureka&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Eureka 서버에 서비스 등록&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">registration_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;instance&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;instanceId&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;hostName&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;app&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;ipAddr&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ip&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;UP&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;port&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;$&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;@enabled&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;true&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;healthCheckUrl&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;http://&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">/health&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">EUREKA_URL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">/apps/&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">registration_data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status_code&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">204&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>상태 확인 (Health Checking)&lt;span class="hx-absolute -hx-mt-20" id="상태-확인-health-checking">&lt;/span>
&lt;a href="#%ec%83%81%ed%83%9c-%ed%99%95%ec%9d%b8-health-checking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">HealthChecker&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">registry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">registry&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">check_service_health&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">service_instance&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;서비스 상태 확인&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">health_url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;http://&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">service_instance&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">service_instance&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">/health&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="n">aiohttp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ClientSession&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">with&lt;/span> &lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">health_url&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">status&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;HEALTHY&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Health check failed: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s1">&amp;#39;UNHEALTHY&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">run_health_checks&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;모든 서비스에 대한 주기적인 상태 확인&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">service_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">instances&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">check_service_health&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">instance&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">instance&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">asyncio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 30초 간격으로 체크&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>서비스 탐색(Discovery)&lt;span class="hx-absolute -hx-mt-20" id="서비스-탐색discovery">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b9%84%ec%8a%a4-%ed%83%90%ec%83%89discovery" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>클라이언트가 필요한 서비스의 위치 정보를 레지스트리에서 조회하는 과정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ServiceDiscovery&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">registry&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">registry&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_balancer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">LoadBalancer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_service&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">service_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">criteria&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;조건에 맞는 서비스 인스턴스 찾기&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">instances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">registry&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">service_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">healthy_instances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">inst&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">inst&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">instances&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">inst&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;HEALTHY&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="ow">and&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">meets_criteria&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inst&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">criteria&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">healthy_instances&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="n">ServiceNotFoundException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">service_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load_balancer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choose_instance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">healthy_instances&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">meets_criteria&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">criteria&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;인스턴스가 주어진 조건을 만족하는지 확인&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">criteria&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">criteria&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>로드 밸런싱 (Load Blanacing)&lt;span class="hx-absolute -hx-mt-20" id="로드-밸런싱-load-blanacing">&lt;/span>
&lt;a href="#%eb%a1%9c%eb%93%9c-%eb%b0%b8%eb%9f%b0%ec%8b%b1-load-blanacing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>여러 서비스 인스턴스 중에서 적절한 인스턴스를 선택한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">LoadBalancer&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">current_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">round_robin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;라운드 로빈 방식의 인스턴스 선택&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">current_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">current_index&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">instances&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">current_index&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">weighted_random&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;가중치 기반 랜덤 선택&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_weight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">sum&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">inst&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;weight&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">inst&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">r&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uniform&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">total_weight&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">upto&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">instance&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">weight&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;weight&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">upto&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">weight&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">instance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">upto&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">weight&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">instances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>서비스 디스커버리 패턴&lt;span class="hx-absolute -hx-mt-20" id="서비스-디스커버리-패턴">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%94%94%ec%8a%a4%ec%bb%a4%eb%b2%84%eb%a6%ac-%ed%8c%a8%ed%84%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>클라이언트 사이드 디스커버리&lt;span class="hx-absolute -hx-mt-20" id="클라이언트-사이드-디스커버리">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9d%bc%ec%9d%b4%ec%96%b8%ed%8a%b8-%ec%82%ac%ec%9d%b4%eb%93%9c-%eb%94%94%ec%8a%a4%ec%bb%a4%eb%b2%84%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>클라이언트가 직접 서비스 레지스트리에 질의하여 서비스 위치를 찾는다.&lt;/p>
&lt;p>장점:&lt;/p>
&lt;ul>
&lt;li>클라이언트가 로드 밸런싱을 직접 제어할 수 있다.&lt;/li>
&lt;li>서비스별로 다양한 로드 밸런싱 전략을 적용할 수 있다.&lt;/li>
&lt;/ul>
&lt;p>단점:&lt;/p>
&lt;ul>
&lt;li>클라이언트와 서비스 레지스트리 간의 의존성이 생긴다.&lt;/li>
&lt;li>각 프로그래밍 언어와 프레임워크에 맞는 클라이언트 라이브러리가 필요하다.&lt;/li>
&lt;/ul>
&lt;h4>서버 사이드 디스커버리&lt;span class="hx-absolute -hx-mt-20" id="서버-사이드-디스커버리">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b2%84-%ec%82%ac%ec%9d%b4%eb%93%9c-%eb%94%94%ec%8a%a4%ec%bb%a4%eb%b2%84%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>클라이언트는 로드 밸런서에 요청을 보내고, 로드 밸런서가 서비스 레지스트리를 조회하여 적절한 서비스 인스턴스로 요청을 라우팅한다.&lt;/p>
&lt;p>장점:&lt;/p>
&lt;ul>
&lt;li>클라이언트 구현이 단순해진다.&lt;/li>
&lt;li>클라이언트가 서비스 디스커버리 로직을 알 필요가 없다.&lt;/li>
&lt;/ul>
&lt;p>단점:&lt;/p>
&lt;ul>
&lt;li>로드 밸런서가 추가적인 네트워크 홉이 되어 지연이 발생할 수 있다.&lt;/li>
&lt;li>로드 밸런서 구성과 관리가 필요하다.&lt;/li>
&lt;/ul>
&lt;h3>주요 서비스 디스커버리 도구&lt;span class="hx-absolute -hx-mt-20" id="주요-서비스-디스커버리-도구">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ec%84%9c%eb%b9%84%ec%8a%a4-%eb%94%94%ec%8a%a4%ec%bb%a4%eb%b2%84%eb%a6%ac-%eb%8f%84%ea%b5%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Netflix Eureka: 클라이언트 사이드 디스커버리를 지원하는 REST 기반 서비스&lt;/li>
&lt;li>Consul: 서비스 디스커버리, 구성 관리, 헬스 체크 기능을 제공&lt;/li>
&lt;li>etcd: 분산 키-값 저장소로, 서비스 디스커버리에 활용 가능&lt;/li>
&lt;li>Apache ZooKeeper: 분산 조정 서비스로, 서비스 디스커버리 구현에 사용&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>분산 잠금 (Distributed Locking)</title><link>https://buenhyden.github.io/posts/system-design/distributed-system/distributed-locking/</link><pubDate>Fri, 18 Oct 2024 15:35:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/distributed-system/distributed-locking/</guid><description>
&lt;h2>분산 잠금 (Distributed Locking)&lt;span class="hx-absolute -hx-mt-20" id="분산-잠금-distributed-locking">&lt;/span>
&lt;a href="#%eb%b6%84%ec%82%b0-%ec%9e%a0%ea%b8%88-distributed-locking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>분산 시스템 환경에서 여러 노드 또는 프로세스 간에 공유 자원에 대한 접근을 동기화하는 메커니즘&lt;/p>
&lt;h3>개념과 필요성&lt;span class="hx-absolute -hx-mt-20" id="개념과-필요성">&lt;/span>
&lt;a href="#%ea%b0%9c%eb%85%90%ea%b3%bc-%ed%95%84%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>분산 시스템&lt;/strong>: 여러 노드가 네트워크를 통해 서로 통신하면서 작업을 수행하는 시스템입니다.&lt;/li>
&lt;li>&lt;strong>자원 관리&lt;/strong>: 여러 노드가 동일한 자원(데이터베이스, 파일 시스템 등)에 동시에 접근할 수 있어, 일관성 유지가 중요합니다.&lt;/li>
&lt;li>&lt;strong>동기화 필요성&lt;/strong>: 한 번에 하나의 노드만 자원에 접근할 수 있도록 하여 데이터 일관성을 보장합니다.&lt;/li>
&lt;/ul>
&lt;h3>작동 방식&lt;span class="hx-absolute -hx-mt-20" id="작동-방식">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>락 획득&lt;/strong>: 노드가 자원에 접근하기 전에 락을 요청하고 획득합니다.&lt;/li>
&lt;li>&lt;strong>자원 사용&lt;/strong>: 락을 획득한 노드만 해당 자원을 사용하거나 변경할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>락 해제&lt;/strong>: 작업 완료 후 락을 해제하여 다른 노드가 접근할 수 있도록 합니다.&lt;/li>
&lt;/ol>
&lt;h3>구현 방법&lt;span class="hx-absolute -hx-mt-20" id="구현-방법">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>중앙 집중식 락 서버&lt;/strong>: ZooKeeper, Redis의 Redlock 알고리즘 등을 사용합니다.&lt;/li>
&lt;li>&lt;strong>분산 데이터 저장소를 사용한 락&lt;/strong>: Apache Cassandra, Google&amp;rsquo;s Chubby 등이 있습니다.&lt;/li>
&lt;/ul>
&lt;h3>주요 특성&lt;span class="hx-absolute -hx-mt-20" id="주요-특성">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>상호 배제&lt;/strong>: 한 번에 하나의 프로세스만 락을 보유할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>데드락 방지&lt;/strong>: 프로세스가 무한정 대기하는 상황을 방지해야 합니다.&lt;/li>
&lt;li>&lt;strong>장애 허용&lt;/strong>: 프로세스 충돌 시에도 락이 해제되도록 하여 시스템 안정성을 유지합니다.&lt;/li>
&lt;/ul>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>데이터 일관성과 무결성 보장&lt;/li>
&lt;li>동시성 제어 가능&lt;/li>
&lt;li>분산 환경에서의 자원 관리 효율성&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>성능 저하 가능성: 락 획득 및 해제 과정에서 지연 발생&lt;/li>
&lt;li>구현 복잡성: 네트워크 지연, 노드 실패 등을 고려해야 함&lt;/li>
&lt;li>확장성 문제: 대규모 시스템에서 병목현상 발생 가능성&lt;/li>
&lt;/ul>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>데드락 방지&lt;/strong>: 락 획득 순서 관리, 타임아웃 설정 등의 전략 필요&lt;/li>
&lt;li>&lt;strong>성능 최적화&lt;/strong>: 락 유지 시간 최소화, 세밀한 락 범위 설정&lt;/li>
&lt;li>&lt;strong>장애 처리&lt;/strong>: 노드 실패 시 락 해제 메커니즘 구현&lt;/li>
&lt;/ul>
&lt;h3>고려해야 할 주요 사항들&lt;span class="hx-absolute -hx-mt-20" id="고려해야-할-주요-사항들">&lt;/span>
&lt;a href="#%ea%b3%a0%eb%a0%a4%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a3%bc%ec%9a%94-%ec%82%ac%ed%95%ad%eb%93%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>장애 상황 처리&lt;/p>
&lt;ul>
&lt;li>네트워크 단절&lt;/li>
&lt;li>Redis 서버 장애&lt;/li>
&lt;li>클라이언트 프로세스 중단&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화&lt;/p>
&lt;ul>
&lt;li>잠금 획득 재시도 전략&lt;/li>
&lt;li>만료 시간 설정&lt;/li>
&lt;li>잠금 범위 최소화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>모니터링과 디버깅&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MonitoredDistributedLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DistributedLock&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메트릭 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">record_metric&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lock_acquire_duration&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duration&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;lock_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>확장성 고려사항&lt;/p>
&lt;ul>
&lt;li>Redis 클러스터 구성&lt;/li>
&lt;li>장애 복구 전략&lt;/li>
&lt;li>부하 분산&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Redis를 이용한 분산 잠금 구현&lt;span class="hx-absolute -hx-mt-20" id="redis를-이용한-분산-잠금-구현">&lt;/span>
&lt;a href="#redis%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-%eb%b6%84%ec%82%b0-%ec%9e%a0%ea%b8%88-%ea%b5%ac%ed%98%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Redis를 이용한 분산락 사용 시 주의해야 할 점들:&lt;/p>
&lt;ol>
&lt;li>네트워크 지연 고려 네트워크 지연으로 인한 문제를 방지하기 위해 적절한 타임아웃과 재시도 메커니즘을 구현해야 합니다.&lt;/li>
&lt;li>Redis 서버 장애 대비 Redis 서버의 장애에 대비하여 페일오버 전략을 수립해야 합니다. Redis Sentinel이나 Redis Cluster를 사용할 수 있습니다.&lt;/li>
&lt;li>락의 범위 최소화 락이 필요한 최소한의 영역에만 적용하여 성능 저하를 방지해야 합니다.&lt;/li>
&lt;li>데드락 방지 적절한 만료 시간 설정과 락 획득 순서의 일관성 유지로 데드락을 방지해야 합니다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">redis&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">uuid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">contextlib&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">contextmanager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">RedisLock&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;Redis를 사용한 안전한 분산락 구현&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis_client&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expire_seconds&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">retry_times&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">retry_delay&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.2&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Parameters:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> redis_client: Redis 클라이언트 인스턴스
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> lock_name: 락의 이름 (리소스 식별자)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> expire_seconds: 락의 만료 시간 (초)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> retry_times: 락 획득 재시도 횟수
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> retry_delay: 재시도 간 대기 시간 (초)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis_client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;lock:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">lock_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expire_seconds&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">expire_seconds&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">retry_times&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">retry_times&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">retry_delay&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">retry_delay&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">uuid4&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="c1"># 락의 고유 식별자&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;락 획득을 시도합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> bool: 락 획득 성공 여부
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">retry_times&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SET NX EX 명령어로 원자적 락 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">success&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expire_seconds&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 만료 시간 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">nx&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span> &lt;span class="c1"># 키가 없을 때만 설정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">success&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 락 획득 실패 시 재시도 전 대기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">retry_delay&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">release&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;락을 안전하게 해제합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> bool: 락 해제 성공 여부
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Lua 스크립트를 사용한 원자적 락 해제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">release_script&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> if redis.call(&amp;#39;get&amp;#39;, KEYS[1]) == ARGV[1] then
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> return redis.call(&amp;#39;del&amp;#39;, KEYS[1])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> else
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> return 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> end
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eval&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">release_script&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># key 개수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># KEYS[1]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_id&lt;/span> &lt;span class="c1"># ARGV[1]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">additional_time&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;락의 만료 시간을 연장합니다.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Parameters:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> additional_time: 추가할 시간 (초)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> bool: 연장 성공 여부
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">extend_script&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> if redis.call(&amp;#39;get&amp;#39;, KEYS[1]) == ARGV[1] then
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> return redis.call(&amp;#39;expire&amp;#39;, KEYS[1], ARGV[2])
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> else
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> return 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> end
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">eval&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">extend_script&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_name&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">additional_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@contextmanager&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;컨텍스트 매니저를 통한 락 사용
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Example:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> with redis_lock.lock():
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> # 보호된 코드 실행
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">TimeoutError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;락 획득 실패&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">yield&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">release&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">WatchDogLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RedisLock&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;백그라운드에서 락의 만료 시간을 자동으로 갱신하는 분산락&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog_thread&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_stop_watchdog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_watchdog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;백그라운드에서 주기적으로 락의 만료 시간을 갱신&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_stop_watchdog&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expire_seconds&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 만료 시간의 1/3마다 갱신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">expire_seconds&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;락 획득 및 watchdog 시작&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kn">import&lt;/span> &lt;span class="nn">threading&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_stop_watchdog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog_thread&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">threading&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog_thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">daemon&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog_thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">release&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;락 해제 및 watchdog 중지&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_stop_watchdog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog_thread&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_watchdog_thread&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timeout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">1.0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">release&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 사용 예시와 에러 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">process_order&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;주문 처리 예시&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis_client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Redis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6379&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">db&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WatchDogLock&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis_client&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;order:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expire_seconds&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">30&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 주문 처리 로직&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">process_order_business_logic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">TimeoutError&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 락 획득 실패 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handle_lock_timeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="ne">Exception&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기타 예외 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">handle_processing_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">order_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 모니터링을 위한 확장&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MonitoredLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WatchDogLock&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;락의 사용 현황을 모니터링하는 분산락&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">success&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메트릭 기록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">record_metrics&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lock_acquire&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">duration&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">success&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">success&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock_name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">success&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>락의 안전성 보장 Redis의 SET NX EX 명령어를 사용하여 원자적으로 락을 설정합니다. 이는 여러 프로세스가 동시에 락을 획득하려 할 때 단 하나만 성공하도록 보장합니다. 락의 고유 식별자(UUID)를 사용하여 다른 프로세스의 락을 실수로 해제하는 것을 방지합니다.&lt;/li>
&lt;li>자동 만료 시간 설정 락에 만료 시간을 설정하여 프로세스가 비정상 종료되더라도 영구적으로 락이 남아있는 것을 방지합니다. WatchDogLock 클래스는 장시간 실행되는 작업을 위해 자동으로 만료 시간을 갱신합니다.&lt;/li>
&lt;/ul>
&lt;h3>실제 활용 사례&lt;span class="hx-absolute -hx-mt-20" id="실제-활용-사례">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ed%99%9c%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>재고 관리 시스템&lt;span class="hx-absolute -hx-mt-20" id="재고-관리-시스템">&lt;/span>
&lt;a href="#%ec%9e%ac%ea%b3%a0-%ea%b4%80%eb%a6%ac-%ec%8b%9c%ec%8a%a4%ed%85%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">update_inventory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RedisLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;inventory:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_stock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_current_stock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">current_stock&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">update_stock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">product_id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">current_stock&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">quantity&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>캐시 갱신&lt;span class="hx-absolute -hx-mt-20" id="캐시-갱신">&lt;/span>
&lt;a href="#%ec%ba%90%ec%8b%9c-%ea%b0%b1%ec%8b%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">refresh_cache&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cache_key&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RedisLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">redis_client&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;cache:&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">cache_key&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">acquire&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 캐시 데이터 갱신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">new_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fetch_latest_data&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">update_cache&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cache_key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">finally&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">release&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Istio</title><link>https://buenhyden.github.io/posts/system-design/distributed-system/istio/</link><pubDate>Fri, 18 Oct 2024 06:11:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/distributed-system/istio/</guid><description>
&lt;h2>Istio&lt;span class="hx-absolute -hx-mt-20" id="istio">&lt;/span>
&lt;a href="#istio" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>마이크로서비스 아키텍처에서 서비스 간 통신을 관리하고 제어하는 서비스 메시(Service Mesh) 플랫폼.&lt;/p>
&lt;p>Istio는 마이크로서비스 아키텍처에서 서비스 간 통신을 관리하고 보안, 관찰성, 트래픽 제어를 제공하는 도구로, Kubernetes의 기능을 확장하여 복잡한 마이크로서비스 환경을 효과적으로 운영할 수 있게 해준다.&lt;/p>
&lt;h3>Istio의 주요 기능&lt;span class="hx-absolute -hx-mt-20" id="istio의-주요-기능">&lt;/span>
&lt;a href="#istio%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>트래픽 관리:&lt;/p>
&lt;ul>
&lt;li>로드 밸런싱, 서비스 간 트래픽 라우팅&lt;/li>
&lt;li>A/B 테스트, 카나리 배포 지원&lt;/li>
&lt;li>재시도, 타임아웃, 서킷 브레이커 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안:&lt;/p>
&lt;ul>
&lt;li>서비스 간 상호 TLS(mTLS) 암호화&lt;/li>
&lt;li>강력한 인증 및 권한 부여 정책 적용&lt;/li>
&lt;li>제로 트러스트 네트워크 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>관찰 가능성:&lt;/p>
&lt;ul>
&lt;li>분산 추적&lt;/li>
&lt;li>메트릭 수집&lt;/li>
&lt;li>로깅&lt;/li>
&lt;li>서비스 그래프 시각화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>플랫폼 지원:&lt;/p>
&lt;ul>
&lt;li>Kubernetes뿐만 아니라 VM 기반 워크로드도 지원&lt;/li>
&lt;li>멀티 클러스터, 하이브리드, 멀티 클라우드 환경 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>정책 관리:&lt;br>
서비스에 대한 다양한 정책을 적용할 수 있다:&lt;/p>
&lt;ul>
&lt;li>속도 제한&lt;/li>
&lt;li>할당량 관리&lt;/li>
&lt;li>IP 기반 필터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Istio의 아키텍처&lt;span class="hx-absolute -hx-mt-20" id="istio의-아키텍처">&lt;/span>
&lt;a href="#istio%ec%9d%98-%ec%95%84%ed%82%a4%ed%85%8d%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Istio는 데이터 플레인과 컨트롤 플레인으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>컨트롤 플레인:&lt;br>
istiod라고 불리는 중앙 제어 시스템으로, 다음과 같은 핵심 기능을 제공한다:&lt;/p>
&lt;ul>
&lt;li>서비스 디스커버리&lt;/li>
&lt;li>구성 관리&lt;/li>
&lt;li>인증서 관리&lt;/li>
&lt;li>정책 적용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 플레인:&lt;br>
Envoy 프록시를 사이드카로 배포하여 서비스 간 모든 통신을 처리한다.&lt;br>
각 서비스 포드 옆에 배치되어 다음과 같은 기능을 수행한다:&lt;/p>
&lt;ul>
&lt;li>트래픽 라우팅&lt;/li>
&lt;li>로드 밸런싱&lt;/li>
&lt;li>보안 통신&lt;/li>
&lt;li>메트릭 수집&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Istio의 장점&lt;span class="hx-absolute -hx-mt-20" id="istio의-장점">&lt;/span>
&lt;a href="#istio%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>애플리케이션 코드 변경 없이 기능 추가 가능&lt;/li>
&lt;li>마이크로서비스 환경의 복잡성 관리 용이&lt;/li>
&lt;li>보안 강화 및 정책 일관성 유지&lt;/li>
&lt;li>상세한 모니터링 및 문제 해결 지원&lt;/li>
&lt;li>트래픽 제어를 통한 안정적인 서비스 운영&lt;/li>
&lt;/ol>
&lt;p>Istio는 Kubernetes 환경에서 마이크로서비스 아키텍처를 효과적으로 관리하고 운영하는 데 필수적인 도구로 자리잡고 있다.&lt;br>
복잡한 분산 시스템의 운영을 단순화하고 안정성, 보안성, 관찰성을 크게 향상시킨다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>virtualization</title><link>https://buenhyden.github.io/posts/system-design/infrastructure/virtualization/</link><pubDate>Wed, 16 Oct 2024 13:00:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/infrastructure/virtualization/</guid><description>
&lt;h2>가상화 (virtualization)&lt;span class="hx-absolute -hx-mt-20" id="가상화-virtualization">&lt;/span>
&lt;a href="#%ea%b0%80%ec%83%81%ed%99%94-virtualization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>컴퓨터 리소스의 추상화를 가능하게 하는 기술&lt;br>
​가상화는 하나의 물리적 컴퓨팅 자원(예: 서버, 운영 체제, 애플리케이션, 스토리지)을 여러 개의 가상 리소스로 나누거나, 여러 개의 물리적 리소스를 하나의 가상 리소스로 통합하는 기술이다. 이를 통해 하드웨어의 활용도를 높이고, 유연성과 확장성을 제공한다.&lt;/p>
&lt;h3>가상화의 유형&lt;span class="hx-absolute -hx-mt-20" id="가상화의-유형">&lt;/span>
&lt;a href="#%ea%b0%80%ec%83%81%ed%99%94%ec%9d%98-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>서버 가상화&lt;br>
서버 가상화는 하나의 물리적 서버를 여러 개의 가상 서버로 분할하는 기술.&lt;br>
이를 통해 각 가상 서버는 독립적인 운영 체제와 애플리케이션을 실행할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데스크톱 가상화&lt;br>
데스크톱 가상화는 사용자의 데스크톱 환경을 중앙 서버에서 가상화하여 제공하는 기술.&lt;br>
이를 통해 사용자는 어떤 장치에서든 자신의 가상 데스크톱에 접근할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>애플리케이션 가상화&lt;br>
애플리케이션 가상화는 애플리케이션을 로컬 시스템에 설치하지 않고 서버에서 실행하여 사용자에게 제공하는 기술.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>스토리지 가상화&lt;br>
스토리지 가상화는 여러 물리적 저장 장치를 하나의 논리적 저장 장치로 통합하는 기술.&lt;br>
이를 통해 스토리지 관리를 단순화하고 효율성을 높일 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>네트워크 가상화&lt;br>
네트워크 가상화는 물리적 네트워크 자원을 논리적으로 분할하거나 통합하여 가상 네트워크를 생성하는 기술.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>자원 활용도 향상: 하나의 물리적 서버에서 여러 가상 시스템을 운영함으로써 하드웨어 자원을 최대한 활용할 수 있다.&lt;/li>
&lt;li>비용 절감: 물리적 서버의 수를 줄임으로써 하드웨어 구매 및 유지보수 비용을 절감할 수 있다.&lt;/li>
&lt;li>관리 효율화: 중앙집중식 관리를 통해 시스템 관리와 유지보수가 용이해진다.&lt;/li>
&lt;li>유연성과 확장성: 필요에 따라 가상 시스템을 쉽게 생성, 삭제, 이동할 수 있어 IT 인프라의 유연성과 확장성이 향상된다.&lt;/li>
&lt;li>재해 복구 및 비즈니스 연속성: 가상화를 통해 백업 및 복구 프로세스가 간소화되어 재해 발생 시 빠른 복구가 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>초기 구축 비용: 가상화 환경을 구축하기 위한 초기 투자 비용이 높을 수 있다.&lt;/li>
&lt;li>성능 오버헤드: 가상화 레이어로 인해 일부 성능 저하가 발생할 수 있다.&lt;/li>
&lt;li>복잡성: 가상화 환경의 관리와 문제 해결이 더 복잡해질 수 있다.&lt;/li>
&lt;li>보안 위험: 하나의 물리적 서버에 여러 가상 시스템이 존재하므로, 보안 취약점이 발생할 경우 영향 범위가 넓어질 수 있다.&lt;/li>
&lt;li>하드웨어 의존성: 가상화 환경 전체가 물리적 서버에 의존하므로, 하드웨어 장애 시 모든 가상 시스템에 영향을 줄 수 있다.&lt;/li>
&lt;/ol>
&lt;p>가상화 기술은 현대 IT 인프라의 핵심 요소로, 클라우드 컴퓨팅의 기반이 되고 있다.&lt;br>
적절히 구현된 가상화는 기업의 IT 효율성을 크게 향상시키고 비용을 절감할 수 있지만, 동시에 신중한 계획과 관리가 필요하다.&lt;/p>
&lt;h4>서버 가상화&lt;span class="hx-absolute -hx-mt-20" id="서버-가상화">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b2%84-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-1">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>자원 활용도 향상: 하나의 물리적 서버에서 여러 가상 서버를 운영하여 하드웨어 자원을 최대한 활용할 수 있다.&lt;/li>
&lt;li>비용 절감: 물리적 서버의 수를 줄여 하드웨어 구매 및 유지보수 비용을 절감할 수 있다..&lt;/li>
&lt;li>관리 효율화: 중앙집중식 관리를 통해 시스템 관리와 유지보수가 용이해진다.&lt;/li>
&lt;li>유연성과 확장성: 필요에 따라 가상 서버를 쉽게 생성, 삭제, 이동할 수 있어 IT 인프라의 유연성과 확장성이 향상된다.&lt;/li>
&lt;li>재해 복구 및 비즈니스 연속성: 가상화를 통해 백업 및 복구 프로세스가 간소화되어 재해 발생 시 빠른 복구가 가능하다.&lt;/li>
&lt;/ol>
&lt;h5>단점&lt;span class="hx-absolute -hx-mt-20" id="단점-1">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>초기 구축 비용: 가상화 환경을 구축하기 위한 초기 투자 비용이 높을 수 있다.&lt;/li>
&lt;li>성능 오버헤드: 가상화 레이어로 인해 일부 성능 저하가 발생할 수 있다.&lt;/li>
&lt;li>복잡성: 가상화 환경의 관리와 문제 해결이 더 복잡해질 수 있다.&lt;/li>
&lt;li>보안 위험: 하나의 물리적 서버에 여러 가상 시스템이 존재하므로, 보안 취약점이 발생할 경우 영향 범위가 넓어질 수 있다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="virtualization-architecture.png" alt="Virtualization architecture" loading="lazy" />&lt;br>
_Source: &lt;a href="https://v2cloud.com/blog/top-5-virtualization-platforms" target="_blank" rel="noopener">https://v2cloud.com/blog/top-5-virtualization-platforms&lt;/a> _&lt;/p>
&lt;h4>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>하이퍼바이저 가성화&lt;span class="hx-absolute -hx-mt-20" id="하이퍼바이저-가성화">&lt;/span>
&lt;a href="#%ed%95%98%ec%9d%b4%ed%8d%bc%eb%b0%94%ec%9d%b4%ec%a0%80-%ea%b0%80%ec%84%b1%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;blockquote>
&lt;p>하이퍼바이저&lt;br>
물리적 하드웨어와 가상 머신(VM) 간의 중개 역할을 하는 소프트웨어.&lt;/p>
&lt;/blockquote>
&lt;p>Type 1 하이퍼바이저(베어메탈 하이퍼바이저) 방식에 해당한다.&lt;/p>
&lt;ul>
&lt;li>물리적 하드웨어 위에 직접 하이퍼바이저가 설치된다.&lt;/li>
&lt;li>하이퍼바이저 위에 여러 게스트 OS가 실행된다.&lt;/li>
&lt;/ul>
&lt;p>하이퍼바이저 가상화는 두 가지로 나눌 수 있다:&lt;/p>
&lt;ol>
&lt;li>전가상화(Full Virtualization): 하드웨어를 완전히 가상화하여 게스트 OS의 수정 없이 사용 가능하다.&lt;/li>
&lt;li>반가상화(Para-Virtualization): 하드웨어를 부분적으로 가상화하여 성능을 개선하지만, 게스트 OS의 수정이 필요하다.&lt;br>
&lt;img src="0_2SdhWwLOdbrcH17o.webp" alt="Para vs Full Virtualization" loading="lazy" />&lt;/li>
&lt;/ol>
&lt;h5>호스트 가상화&lt;span class="hx-absolute -hx-mt-20" id="호스트-가상화">&lt;/span>
&lt;a href="#%ed%98%b8%ec%8a%a4%ed%8a%b8-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>호스트 OS 위에 가상화 소프트웨어를 설치하여 가상 머신을 관리한다.&lt;br>
Type 2 하이퍼바이저 방식에 속한다.&lt;br>
이 방식은 구현이 간단하지만, 호스트 OS를 거쳐야 하므로 성능 오버헤드가 발생할 수 있다.&lt;/p>
&lt;ul>
&lt;li>물리적 하드웨어 위에 호스트 운영체제(Host OS)가 설치된다.&lt;/li>
&lt;li>호스트 OS 위에 가상화 소프트웨어(예: VMware Workstation, VirtualBox)가 설치된다.&lt;/li>
&lt;li>가상화 소프트웨어 위에 게스트 운영체제(Guest OS)가 실행된다.&lt;/li>
&lt;/ul>
&lt;h5>컨테이너 기반 가상화&lt;span class="hx-absolute -hx-mt-20" id="컨테이너-기반-가상화">&lt;/span>
&lt;a href="#%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%ea%b8%b0%eb%b0%98-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>OS 수준의 가상화 방식으로, 별도의 카테고리로 분류된다.&lt;/p>
&lt;p>&lt;img src="docker.png" alt="Docker" loading="lazy" /> _Source: &lt;a href="https://www.docker.com/resources/what-container/" target="_blank" rel="noopener">https://www.docker.com/resources/what-container/&lt;/a> _&lt;/p>
&lt;ul>
&lt;li>호스트 OS 위에 컨테이너 관리 소프트웨어(예: Docker)가 설치된다.&lt;/li>
&lt;li>컨테이너는 호스트 OS의 커널을 공유하면서 독립된 사용자 공간을 제공한다.&lt;/li>
&lt;li>각 컨테이너는 애플리케이션과 그 종속성만을 포함하여 매우 경량화되어 있다.&lt;/li>
&lt;/ul>
&lt;h4>데스크탑 가상화&lt;span class="hx-absolute -hx-mt-20" id="데스크탑-가상화">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%8a%a4%ed%81%ac%ed%83%91-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>데스크탑 가상화는 운영 체제, 애플리케이션, 사용자 데이터를 포함한 전체 데스크탑 환경을 가상화하여 중앙 서버에서 관리한다. 사용자는 다양한 기기를 통해 이 가상 데스크탑에 원격으로 접속할 수 있다.&lt;/p>
&lt;h5>작동 원리&lt;span class="hx-absolute -hx-mt-20" id="작동-원리">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>중앙 서버에서 가상 머신(VM)을 생성하고 관리한다.&lt;/li>
&lt;li>각 VM에는 운영 체제와 필요한 애플리케이션이 설치된다.&lt;/li>
&lt;li>사용자는 원격 디스플레이 프로토콜(RDP)을 통해 가상 데스크탑에 접속한다.&lt;/li>
&lt;li>사용자의 입력(키보드, 마우스)은 서버로 전송되고, 화면 업데이트는 사용자의 기기로 전송된다.&lt;/li>
&lt;/ol>
&lt;h5>유형&lt;span class="hx-absolute -hx-mt-20" id="유형">&lt;/span>
&lt;a href="#%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>VDI(Virtual Desktop Infrastructure): 각 사용자에게 전용 VM을 제공한다.&lt;/li>
&lt;li>원격 데스크탑 서비스(RDS): 여러 사용자가 하나의 서버 OS 인스턴스를 공유한다.&lt;/li>
&lt;li>DaaS(Desktop-as-a-Service): 클라우드 기반의 가상 데스크탑 서비스이다.&lt;/li>
&lt;/ol>
&lt;h5>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-2">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>유연성과 접근성: 어떤 기기에서든 자신의 데스크탑 환경에 접근 가능하다.&lt;/li>
&lt;li>중앙화된 관리: IT 팀이 모든 데스크탑을 중앙에서 관리할 수 있다.&lt;/li>
&lt;li>보안 강화: 데이터가 중앙 서버에 저장되어 정보 유출 위험이 감소한다.&lt;/li>
&lt;li>비용 절감: 하드웨어 구매 및 유지보수 비용을 줄일 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>단점&lt;span class="hx-absolute -hx-mt-20" id="단점-2">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>초기 구축 비용이 높을 수 있다.&lt;/li>
&lt;li>네트워크 의존성: 안정적인 인터넷 연결이 필요하다.&lt;/li>
&lt;li>성능 이슈: 네트워크 지연으로 인한 성능 저하가 발생할 수 있다.&lt;/li>
&lt;/ol>
&lt;h4>애플리케이션 가상화&lt;span class="hx-absolute -hx-mt-20" id="애플리케이션-가상화">&lt;/span>
&lt;a href="#%ec%95%a0%ed%94%8c%eb%a6%ac%ec%bc%80%ec%9d%b4%ec%85%98-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>애플리케이션 가상화는 애플리케이션을 물리적 하드웨어에 직접 설치하지 않고도 실행할 수 있도록 하는 기술.&lt;br>
이 기술은 사용자가 다양한 운영 체제에서 애플리케이션을 실행할 수 있게 해주며, 기업의 IT 관리와 보안을 개선하는 데 중요한 역할을 한다.&lt;br>
애플리케이션 가상화는 애플리케이션의 실행 환경을 가상화하여, 사용자가 원래 설계된 운영 체제와는 다른 환경에서도 애플리케이션을 사용할 수 있도록 한다.&lt;br>
예를 들어, Windows 애플리케이션을 Linux 환경에서 실행하거나, 특정 버전의 애플리케이션을 여러 사용자에게 제공할 수 있다.&lt;/p>
&lt;h5>작동 방식&lt;span class="hx-absolute -hx-mt-20" id="작동-방식">&lt;/span>
&lt;a href="#%ec%9e%91%eb%8f%99-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;strong>애플리케이션 스트리밍&lt;/strong>:&lt;br>
필요한 애플리케이션 코드의 일부만 클라이언트 장치로 전송되어 필요할 때만 실행된다.&lt;br>
이를 통해 전체 애플리케이션을 설치하지 않고도 사용할 수 있다.&lt;/li>
&lt;li>&lt;strong>서버 기반 애플리케이션 가상화&lt;/strong>:&lt;br>
사용자는 웹 브라우저나 클라이언트 인터페이스를 통해 원격 서버에서 호스팅되는 애플리케이션에 접근한다.&lt;br>
이 방식은 설치가 필요 없으며, 사용자는 인터넷만 있으면 언제 어디서나 애플리케이션을 사용할 수 있다.&lt;/li>
&lt;li>&lt;strong>로컬 애플리케이션 가상화&lt;/strong>:&lt;br>
애플리케이션 코드가 자체 환경에 포함되어 배포되므로, 사용자는 어떤 운영 체제에서도 변경 없이 실행할 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-3">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>유연성&lt;/strong>: 다양한 운영 체제에서 동일한 애플리케이션을 사용할 수 있어, 사용자 환경에 대한 제약이 줄어든다.&lt;/li>
&lt;li>&lt;strong>관리 용이성&lt;/strong>: IT 관리자는 중앙에서 모든 애플리케이션을 관리하고 업데이트할 수 있으며, 각 사용자에게 필요한 소프트웨어를 일괄적으로 배포할 수 있다.&lt;/li>
&lt;li>&lt;strong>비용 절감&lt;/strong>: 여러 버전의 애플리케이션을 동시에 운영할 수 있어, 하드웨어 및 라이선스 비용을 절감할 수 있다.&lt;/li>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 데이터는 중앙 서버에서 관리되므로 정보 유출 위험이 줄어들고, 각 사용자 단말기에서 데이터가 이동하지 않아 보안이 강화된다.&lt;/li>
&lt;/ul>
&lt;h5>단점&lt;span class="hx-absolute -hx-mt-20" id="단점-3">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90-3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>&lt;strong>초기 설정 복잡성&lt;/strong>: 가상화 환경을 구축하기 위해서는 초기 설정과 전문 지식이 필요하다.&lt;/li>
&lt;li>&lt;strong>네트워크 의존성&lt;/strong>: 원격 서버에 의존하므로 안정적인 네트워크 연결이 필수적이며, 네트워크 지연으로 인해 성능 저하가 발생할 수 있다.&lt;/li>
&lt;li>&lt;strong>서버 장애 시 영향&lt;/strong>: 모든 시스템이 중앙 서버에 의존하기 때문에 서버 장애가 발생하면 모든 사용자에게 영향을 미칠 수 있다.&lt;/li>
&lt;/ul>
&lt;h4>스토리지 가상화&lt;span class="hx-absolute -hx-mt-20" id="스토리지-가상화">&lt;/span>
&lt;a href="#%ec%8a%a4%ed%86%a0%eb%a6%ac%ec%a7%80-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>스토리지 가상화는 물리적 스토리지 자원을 논리적으로 추상화하여 단일 스토리지 풀로 통합 관리하는 기술이다.&lt;br>
이를 통해 스토리지 자원을 더욱 효율적으로 활용하고 관리할 수 있다.&lt;br>
스토리지 가상화는 여러 대의 이기종 저장 장치를 하나의 논리적 스토리지 풀로 통합하여 관리하는 기술.&lt;/p>
&lt;h5>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>공유(Sharing): 여러 서버가 동일한 스토리지 자원을 공유할 수 있다.&lt;/li>
&lt;li>단일화(Aggregation): 여러 물리적 스토리지를 하나의 논리적 스토리지로 통합한다.&lt;/li>
&lt;li>에뮬레이션(Emulation): 물리적으로 존재하지 않는 기능을 구현할 수 있다.&lt;/li>
&lt;li>절연(Insulation): 가상화된 자원과 물리적 자원 간의 매핑을 관리한다.&lt;/li>
&lt;/ul>
&lt;h5>유형&lt;span class="hx-absolute -hx-mt-20" id="유형-1">&lt;/span>
&lt;a href="#%ec%9c%a0%ed%98%95-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>블록 가상화: 여러 물리적 스토리지의 유휴 공간을 모아 가상 디스크를 생성한다.&lt;/li>
&lt;li>파일 가상화: 이기종 서버 간 파일 공유를 통해 동일한 파일명으로 공통 파일 그룹에 접근할 수 있게 한다.&lt;/li>
&lt;li>테이프 가상화: 디스크를 테이프 드라이브처럼 에뮬레이션하여 고속 백업을 가능하게 한다.&lt;/li>
&lt;li>디스크 컨트롤러 가상화: 하나의 물리적 스토리지 컨트롤러를 여러 개의 가상 컨트롤러로 분할한다.&lt;/li>
&lt;/ol>
&lt;h5>구현 방식&lt;span class="hx-absolute -hx-mt-20" id="구현-방식">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>어플라이언스 형태: IBM SAN Volume Controller (SVC)와 같은 전용 하드웨어를 사용한다.&lt;/li>
&lt;li>지능형 SAN 스위치: EMC의 Invista와 같이 스위치에 가상화 기능을 탑재한다.&lt;/li>
&lt;li>스토리지 컨트롤러 임베디드: 히타치의 TagmaStore처럼 스토리지 컨트롤러에 직접 가상화 기능을 구현한다.&lt;/li>
&lt;/ol>
&lt;h5>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-4">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>자원 활용도 향상: 유휴 스토리지 공간을 효율적으로 활용할 수 있다.&lt;/li>
&lt;li>관리 용이성: 중앙집중식 관리를 통해 스토리지 관리가 간소화된다.&lt;/li>
&lt;li>비용 절감: 하드웨어 구매 및 유지보수 비용을 줄일 수 있다.&lt;/li>
&lt;li>유연성과 확장성: 필요에 따라 스토리지를 쉽게 추가하거나 제거할 수 있다.&lt;/li>
&lt;li>가용성 향상: 데이터 복제 및 미러링을 통해 시스템 가용성을 높일 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>단점&lt;span class="hx-absolute -hx-mt-20" id="단점-4">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90-4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>초기 구축 비용: 가상화 환경 구축을 위한 초기 투자 비용이 발생할 수 있다.&lt;/li>
&lt;li>복잡성: 가상화 환경의 관리와 문제 해결이 더 복잡해질 수 있다.&lt;/li>
&lt;li>성능 오버헤드: 가상화 레이어로 인한 일부 성능 저하가 발생할 수 있다.&lt;/li>
&lt;/ol>
&lt;h4>네트워크 가상화&lt;span class="hx-absolute -hx-mt-20" id="네트워크-가상화">&lt;/span>
&lt;a href="#%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac-%ea%b0%80%ec%83%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>네트워크 가상화는 물리적 네트워크 인프라를 소프트웨어 기반으로 추상화하여 논리적인 가상 네트워크를 생성하는 기술이다.&lt;br>
이를 통해 하나의 물리적 네트워크를 여러 개의 가상 네트워크로 분할하거나, 여러 물리적 네트워크를 하나의 가상 네트워크로 통합할 수 있다.&lt;/p>
&lt;h5>유형&lt;span class="hx-absolute -hx-mt-20" id="유형-2">&lt;/span>
&lt;a href="#%ec%9c%a0%ed%98%95-2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;strong>외부 네트워크 가상화&lt;/strong>: 물리적으로 동일한 LAN에 연결된 시스템을 여러 개의 VLAN으로 분리하거나, 반대로 여러 개의 LAN을 하나의 VLAN으로 통합하는 방식이다.&lt;/li>
&lt;li>&lt;strong>내부 네트워크 가상화&lt;/strong>: 단일 서버 내에서 소프트웨어 컨테이너를 사용하여 물리적 네트워크를 에뮬레이션하는 방식이다. 이를 통해 서버의 효율성을 향상시킬 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h5>주요 기술&lt;span class="hx-absolute -hx-mt-20" id="주요-기술">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ea%b8%b0%ec%88%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;strong>VPN (Virtual Private Network)&lt;/strong>: 인터넷을 통해 여러 지역의 가상 네트워크를 연결하여 하나의 가상 네트워크를 구성하는 기술.&lt;/li>
&lt;li>&lt;strong>VLAN (Virtual Local Area Network)&lt;/strong>: 하나의 물리적 스위치를 여러 개의 논리적 스위치로 분할하여 가상 네트워크를 구성하는 기술.&lt;/li>
&lt;li>&lt;strong>VXLAN (Virtual Extensible LAN)&lt;/strong>: VLAN의 확장된 형태로, 더 큰 규모의 가상 네트워크를 구성할 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>장점&lt;span class="hx-absolute -hx-mt-20" id="장점-5">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90-5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;strong>자원 활용도 향상&lt;/strong>: 물리적 네트워크 자원을 더욱 효율적으로 활용할 수 있다.&lt;/li>
&lt;li>&lt;strong>유연성과 확장성&lt;/strong>: 필요에 따라 가상 네트워크를 쉽게 생성, 삭제, 이동할 수 있다.&lt;/li>
&lt;li>&lt;strong>비용 절감&lt;/strong>: 물리적 하드웨어의 수를 줄여 구매 및 유지보수 비용을 절감할 수 있다.&lt;/li>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 가상 네트워크 간 격리를 통해 보안을 향상시킬 수 있다.&lt;/li>
&lt;li>&lt;strong>중앙집중식 관리&lt;/strong>: 네트워크 관리와 제어를 중앙에서 효율적으로 수행할 수 있다.&lt;/li>
&lt;/ol>
&lt;h5>과제&lt;span class="hx-absolute -hx-mt-20" id="과제">&lt;/span>
&lt;a href="#%ea%b3%bc%ec%a0%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>&lt;strong>복잡성 증가&lt;/strong>: 가상 네트워크 환경의 관리와 문제 해결이 더 복잡해질 수 있다.&lt;/li>
&lt;li>&lt;strong>초기 구축 비용&lt;/strong>: 가상화 환경을 구축하기 위한 초기 투자 비용이 발생할 수 있다.&lt;/li>
&lt;li>&lt;strong>성능 오버헤드&lt;/strong>: 가상화 레이어로 인한 일부 성능 저하가 발생할 수 있다.&lt;/li>
&lt;li>&lt;strong>전문 인력 확보&lt;/strong>: 가상화된 네트워크를 관리할 수 있는 전문 인력이 필요하다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Cloud</title><link>https://buenhyden.github.io/posts/system-design/infrastructure/cloud/cloud/</link><pubDate>Tue, 15 Oct 2024 06:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/infrastructure/cloud/cloud/</guid><description>
&lt;h2>Cloud&lt;span class="hx-absolute -hx-mt-20" id="cloud">&lt;/span>
&lt;a href="#cloud" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>클라우드 컴퓨팅은 컴퓨팅 리소스(서버, 스토리지, 데이터베이스, 네트워킹, 소프트웨어 등)를 인터넷을 통해 필요에 따라 제공하고 사용하는 기술.&lt;br>
사용자는 물리적인 하드웨어나 데이터 센터를 직접 관리할 필요 없이, 필요한 만큼의 리소스를 사용하고 그에 따른 비용만 지불하면 된다.&lt;/p>
&lt;h3>서비스 유형&lt;span class="hx-absolute -hx-mt-20" id="서비스-유형">&lt;/span>
&lt;a href="#%ec%84%9c%eb%b9%84%ec%8a%a4-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>IaaS (Infrastructure as a Service)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>가상 서버, 스토리지, 네트워크 등 기본적인 컴퓨팅 인프라를 제공&lt;/li>
&lt;li>예시: AWS EC2, Google Compute Engine, Azure Virtual Machines&lt;/li>
&lt;li>사용자가 운영체제부터 직접 관리 가능하며 가장 유연한 형태의 클라우드 서비스&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>PaaS (Platform as a Service)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>애플리케이션을 개발, 실행, 관리할 수 있는 플랫폼 제공&lt;/li>
&lt;li>예시: Heroku, Google App Engine, Azure App Service&lt;/li>
&lt;li>개발자가 인프라 걱정 없이 애플리케이션 개발에 집중 가능&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>SaaS (Software as a Service)&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>완성된 소프트웨어를 인터넷을 통해 제공&lt;/li>
&lt;li>예시: Google Workspace, Microsoft 365, Salesforce&lt;/li>
&lt;li>사용자는 소프트웨어를 설치하거나 관리할 필요 없이 바로 사용 가능&lt;/li>
&lt;/ul>
&lt;h3>클라우드 배포 모델&lt;span class="hx-absolute -hx-mt-20" id="클라우드-배포-모델">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9d%bc%ec%9a%b0%eb%93%9c-%eb%b0%b0%ed%8f%ac-%eb%aa%a8%eb%8d%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>퍼블릭 클라우드&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>AWS, Google Cloud, Azure와 같은 공개 클라우드 서비스&lt;/li>
&lt;li>누구나 사용 가능하며 리소스를 공유하는 형태&lt;/li>
&lt;li>비용 효율적이지만 보안과 규정 준수에 제약이 있을 수 있음&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>프라이빗 클라우드&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>조직 내부에서만 사용하는 클라우드 환경&lt;/li>
&lt;li>보안과 규정 준수가 중요한 기업에서 선호&lt;/li>
&lt;li>직접 구축하고 관리해야 하므로 비용이 높음&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>하이브리드 클라우드&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>퍼블릭과 프라이빗 클라우드를 함께 사용&lt;/li>
&lt;li>상황에 따라 유연하게 리소스 활용 가능&lt;/li>
&lt;li>복잡한 관리가 필요하지만 장점을 최대한 활용 가능&lt;/li>
&lt;/ul>
&lt;h3>클라우드의 주요 특징&lt;span class="hx-absolute -hx-mt-20" id="클라우드의-주요-특징">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9d%bc%ec%9a%b0%eb%93%9c%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>탄력성과 확장성&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>필요에 따라 리소스를 즉시 확장하거나 축소 가능&lt;/li>
&lt;li>자동 확장 기능으로 수요 변화에 대응&lt;/li>
&lt;li>예시: 트래픽 급증 시 자동으로 서버 증설&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>종량제 과금&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>실제 사용한 리소스에 대해서만 비용 지불&lt;/li>
&lt;li>초기 투자 비용 최소화&lt;/li>
&lt;li>비즈니스 성장에 따라 유연하게 비용 조절&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>고가용성&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>여러 지역에 분산된 데이터 센터&lt;/li>
&lt;li>자동 백업과 재해 복구 기능&lt;/li>
&lt;li>서비스 중단 위험 최소화&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>자동화&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리소스 프로비저닝 자동화&lt;/li>
&lt;li>모니터링과 알림 자동화&lt;/li>
&lt;li>운영 효율성 향상&lt;/li>
&lt;/ul>
&lt;h3>클라우드의 활용 사례&lt;span class="hx-absolute -hx-mt-20" id="클라우드의-활용-사례">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9d%bc%ec%9a%b0%eb%93%9c%ec%9d%98-%ed%99%9c%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>웹 애플리케이션 호스팅&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// AWS Lambda를 사용한 서버리스 함수 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">exports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handler&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 이벤트 처리 로직
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">statusCode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hello from Lambda!&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>데이터 저장 및 분석&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// AWS S3를 사용한 파일 업로드 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">AWS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;aws-sdk&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">AWS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S3&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">uploadFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fileData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">bucketName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">params&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Bucket&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">bucketName&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">fileData&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">s3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">putObject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">promise&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;File uploaded successfully&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Upload failed:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>클라우드의 장점&lt;span class="hx-absolute -hx-mt-20" id="클라우드의-장점">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9d%bc%ec%9a%b0%eb%93%9c%ec%9d%98-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>비용 효율성&lt;/p>
&lt;ul>
&lt;li>초기 투자 비용 절감&lt;/li>
&lt;li>운영 비용 최적화&lt;/li>
&lt;li>필요한 만큼만 사용하고 지불&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>유연성과 확장성&lt;/p>
&lt;ul>
&lt;li>빠른 리소스 프로비저닝&lt;/li>
&lt;li>글로벌 확장 용이&lt;/li>
&lt;li>새로운 기술 도입 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안과 안정성&lt;/p>
&lt;ul>
&lt;li>전문적인 보안 관리&lt;/li>
&lt;li>정기적인 백업과 복구&lt;/li>
&lt;li>고가용성 보장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>클라우드의 단점과 고려사항&lt;span class="hx-absolute -hx-mt-20" id="클라우드의-단점과-고려사항">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9d%bc%ec%9a%b0%eb%93%9c%ec%9d%98-%eb%8b%a8%ec%a0%90%ea%b3%bc-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>보안과 규정 준수&lt;/p>
&lt;ul>
&lt;li>데이터 위치와 주권 문제&lt;/li>
&lt;li>규제 준수 필요성&lt;/li>
&lt;li>보안 위협에 대한 대비&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>의존성&lt;/p>
&lt;ul>
&lt;li>인터넷 연결 필요&lt;/li>
&lt;li>특정 공급자에 대한 종속성&lt;/li>
&lt;li>마이그레이션의 어려움&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>비용 관리&lt;/p>
&lt;ul>
&lt;li>복잡한 과금 체계&lt;/li>
&lt;li>예상치 못한 비용 발생 가능&lt;/li>
&lt;li>지속적인 비용 최적화 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>System Design</title><link>https://buenhyden.github.io/posts/system-design/</link><pubDate>Tue, 01 Oct 2024 21:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/system-design/</guid><description>
&lt;h2>System Design&lt;span class="hx-absolute -hx-mt-20" id="system-design">&lt;/span>
&lt;a href="#system-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>소프트웨어 시스템 디자인은 소프트웨어의 구조와 동작을 계획하고 정의하는 과정&lt;br>
이는 소프트웨어 개발의 초기 단계에서 이루어지며, 개발자들이 구현할 소프트웨어의 아키텍처, 컴포넌트, 인터페이스, 데이터 모델 및 기타 시스템 구성 요소를 결정하는 데 도움을 준다.&lt;/p>
&lt;h3>중요성&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>복잡성 관리&lt;/strong>: 시스템 디자인은 복잡한 소프트웨어 시스템을 관리 가능한 단위로 분해하고 조직화하는 데 도움을 준다.&lt;/li>
&lt;li>&lt;strong>유지보수성 향상&lt;/strong>: 잘 설계된 시스템은 유지보수가 쉽고 변경 사항을 쉽게 적용할 수 있다.&lt;/li>
&lt;li>&lt;strong>확장성 제공&lt;/strong>: 좋은 디자인은 시스템이 미래의 요구사항에 맞춰 확장될 수 있도록 한다.&lt;/li>
&lt;li>&lt;strong>품질 보장&lt;/strong>: 시스템 디자인은 소프트웨어의 품질 속성(성능, 보안성, 확장성 등)을 고려하여 설계된다.&lt;/li>
&lt;li>&lt;strong>의사소통 촉진&lt;/strong>: 시스템 디자인은 개발 팀 간의 의사소통을 돕고, 시스템에 대한 공통된 이해를 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>소프트웨어 시스템 디자인 원칙&lt;span class="hx-absolute -hx-mt-20" id="소프트웨어-시스템-디자인-원칙">&lt;/span>
&lt;a href="#%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ec%8b%9c%ec%8a%a4%ed%85%9c-%eb%94%94%ec%9e%90%ec%9d%b8-%ec%9b%90%ec%b9%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단일 책임 원칙 (SRP)&lt;/strong>: 각 모듈이나 클래스는 하나의 책임만을 가져야 한다.&lt;/li>
&lt;li>&lt;strong>개방-폐쇄 원칙 (OCP)&lt;/strong>: 소프트웨어 엔티티는 확장에는 열려 있어야 하지만, 수정에는 닫혀 있어야 한다.&lt;/li>
&lt;li>&lt;strong>리스코프 치환 원칙 (LSP)&lt;/strong>: 하위 타입은 상위 타입으로 대체 가능해야 한다.&lt;/li>
&lt;li>&lt;strong>인터페이스 분리 원칙 (ISP)&lt;/strong>: 클라이언트는 자신이 사용하지 않는 인터페이스에 의존해서는 안 된다.&lt;/li>
&lt;li>&lt;strong>의존관계 역전 원칙 (DIP)&lt;/strong>: 고수준 모듈은 저수준 모듈에 의존해서는 안 되며, 둘 다 추상화에 의존해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>소프트웨어 시스템 디자인의 주요 구성 요소&lt;span class="hx-absolute -hx-mt-20" id="소프트웨어-시스템-디자인의-주요-구성-요소">&lt;/span>
&lt;a href="#%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ec%8b%9c%ec%8a%a4%ed%85%9c-%eb%94%94%ec%9e%90%ec%9d%b8%ec%9d%98-%ec%a3%bc%ec%9a%94-%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>1. 아키텍처 설계 (Architectural Design)&lt;span class="hx-absolute -hx-mt-20" id="1-아키텍처-설계-architectural-design">&lt;/span>
&lt;a href="#1-%ec%95%84%ed%82%a4%ed%85%8d%ec%b2%98-%ec%84%a4%ea%b3%84-architectural-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>아키텍처 설계는 소프트웨어의 주요 구조적 요소와 이들 간의 관계를 정의한다.&lt;br>
이는 시스템의 전체적인 구조와 흐름을 묘사하며, 종종 다이어그램을 사용하여 표현된다.&lt;br>
아키텍처 설계는 시스템의 고수준 구조를 결정하고, 주요 컴포넌트들 간의 상호작용 방식을 정의한다.&lt;/p>
&lt;h4>2. 데이터/클래스 설계 (Data/Class Design)&lt;span class="hx-absolute -hx-mt-20" id="2-데이터클래스-설계-dataclass-design">&lt;/span>
&lt;a href="#2-%eb%8d%b0%ec%9d%b4%ed%84%b0%ed%81%b4%eb%9e%98%ec%8a%a4-%ec%84%a4%ea%b3%84-dataclass-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>데이터/클래스 설계는 시스템에서 사용될 데이터 구조와 클래스를 정의한다.&lt;br>
이 단계에서는 분석 클래스를 구현 클래스로 변환하고, 필요한 데이터 구조를 설계한다.&lt;/p>
&lt;h4>3. 인터페이스 설계 (Interface Design)&lt;span class="hx-absolute -hx-mt-20" id="3-인터페이스-설계-interface-design">&lt;/span>
&lt;a href="#3-%ec%9d%b8%ed%84%b0%ed%8e%98%ec%9d%b4%ec%8a%a4-%ec%84%a4%ea%b3%84-interface-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>인터페이스 설계는 시스템 간의 소통을 돕는 부분으로, 두 시스템에서 사용하는 데이터 구조의 형식을 맞추거나, 두 시스템의 액션 사이의 공통점을 연결 짓는 방법을 디자인한다.&lt;/p>
&lt;h4>4. 컴포넌트 수준 설계 (Component-Level Design)&lt;span class="hx-absolute -hx-mt-20" id="4-컴포넌트-수준-설계-component-level-design">&lt;/span>
&lt;a href="#4-%ec%bb%b4%ed%8f%ac%eb%84%8c%ed%8a%b8-%ec%88%98%ec%a4%80-%ec%84%a4%ea%b3%84-component-level-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>컴포넌트 수준 설계는 아키텍처의 구조적 요소를 소프트웨어 컴포넌트의 절차적인 설명으로 변환한다.&lt;br>
이 단계에서는 각 컴포넌트의 내부 구조와 동작을 자세히 정의한다.&lt;/p>
&lt;h3>소프트웨어 시스템 디자인의 주요 단계&lt;span class="hx-absolute -hx-mt-20" id="소프트웨어-시스템-디자인의-주요-단계">&lt;/span>
&lt;a href="#%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ec%8b%9c%ec%8a%a4%ed%85%9c-%eb%94%94%ec%9e%90%ec%9d%b8%ec%9d%98-%ec%a3%bc%ec%9a%94-%eb%8b%a8%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>요구사항 분석&lt;br>
이 단계에서는 개발할 소프트웨어의 기능, 제약조건, 목표 등을 명확히 정의한다.&lt;br>
사용자와 이해관계자의 요구사항을 수집하고 분석하여 소프트웨어가 해결해야 할 문제와 제공해야 할 기능을 파악한다.&lt;/li>
&lt;li>시스템 아키텍처 설계&lt;br>
전체 시스템의 구조와 주요 컴포넌트를 정의한다.&lt;br>
이 단계에서는 시스템의 고수준 구조와 컴포넌트 간의 상호작용 방식을 결정한다.&lt;/li>
&lt;li>상세 설계&lt;br>
아키텍처 설계를 바탕으로 각 컴포넌트의 세부 사항을 설계한다.&lt;br>
이는 다음과 같은 하위 단계를 포함한다:
&lt;ul>
&lt;li>데이터/클래스 설계: 시스템에서 사용될 데이터 구조와 클래스를 정의한다.&lt;/li>
&lt;li>인터페이스 설계: 사용자 인터페이스와 시스템 간 인터페이스를 설계한다.&lt;/li>
&lt;li>컴포넌트 수준 설계: 각 모듈의 내부 구조와 동작을 자세히 정의한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 및 성능 고려&lt;br>
시스템의 보안 요구사항을 분석하고 성능 목표를 설정한다.&lt;br>
잠재적인 보안 위협을 식별하고 이를 완화하기 위한 설계를 수행한다.&lt;/li>
&lt;li>프로토타입 개발&lt;br>
설계의 실현 가능성을 검증하고 사용자 피드백을 얻기 위해 프로토타입을 개발할 수 있다.&lt;/li>
&lt;li>설계 검토 및 승인&lt;br>
설계 문서를 작성하고 이해관계자들과 함께 검토한다.&lt;br>
필요한 경우 수정을 거쳐 최종 승인을 받는다.&lt;/li>
&lt;/ol>
&lt;h3>고려해야 할 주요 요소&lt;span class="hx-absolute -hx-mt-20" id="고려해야-할-주요-요소">&lt;/span>
&lt;a href="#%ea%b3%a0%eb%a0%a4%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%a3%bc%ec%9a%94-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>기능적 요구사항과 비기능적 요구사항&lt;span class="hx-absolute -hx-mt-20" id="기능적-요구사항과-비기능적-요구사항">&lt;/span>
&lt;a href="#%ea%b8%b0%eb%8a%a5%ec%a0%81-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad%ea%b3%bc-%eb%b9%84%ea%b8%b0%eb%8a%a5%ec%a0%81-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>아키텍처 설계 시 기능적 요구사항과 비기능적 요구사항을 모두 고려해야 한다.&lt;/p>
&lt;ul>
&lt;li>기능적 요구사항은 시스템이 수행해야 할 기능과 기능을 정의한다.&lt;/li>
&lt;li>비기능적 요구사항은 성능, 확장성, 보안성, 유지보수성 등의 품질 속성을 포함한다.&lt;/li>
&lt;/ul>
&lt;p>두 가지 요구사항을 균형있게 고려하여 비즈니스 목표에 부합하는 아키텍처를 설계해야 한다.&lt;/p>
&lt;h4>확장성과 유연성&lt;span class="hx-absolute -hx-mt-20" id="확장성과-유연성">&lt;/span>
&lt;a href="#%ed%99%95%ec%9e%a5%ec%84%b1%ea%b3%bc-%ec%9c%a0%ec%97%b0%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>시스템의 확장성과 유연성을 고려해야 한다.&lt;br>
사용자 수나 데이터 양이 증가하더라도 시스템이 이를 수용할 수 있도록 설계해야 한다.&lt;br>
클라우드 서비스나 마이크로서비스 아키텍처 등의 기술을 활용하여 확장성을 높일 수 있다.&lt;/p>
&lt;h4>모듈화와 재사용성&lt;span class="hx-absolute -hx-mt-20" id="모듈화와-재사용성">&lt;/span>
&lt;a href="#%eb%aa%a8%eb%93%88%ed%99%94%ec%99%80-%ec%9e%ac%ec%82%ac%ec%9a%a9%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>시스템을 모듈화하여 설계하는 것이 중요하다.&lt;br>
모듈화를 통해 시스템을 여러 개의 독립적인 컴포넌트로 나누어 설계함으로써 복잡성을 관리하고 유지보수성을 높일 수 있다.&lt;br>
또한 재사용 가능한 컴포넌트를 활용하여 개발 시간과 비용을 절감할 수 있다.&lt;/p>
&lt;h4>성능과 보안&lt;span class="hx-absolute -hx-mt-20" id="성능과-보안">&lt;/span>
&lt;a href="#%ec%84%b1%eb%8a%a5%ea%b3%bc-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>시스템의 성능과 보안을 최적화해야 한다.&lt;br>
정기적인 성능 테스트와 보안 테스트를 수행하여 시스템의 성능과 보안을 지속적으로 개선해야 한다.&lt;br>
특히 보안의 경우 제로 트러스트 접근 방식을 채택하여 시스템의 각 부분에 대한 인증과 권한 부여를 요구하는 것이 좋다.&lt;/p>
&lt;h4>이해관계자의 요구사항&lt;span class="hx-absolute -hx-mt-20" id="이해관계자의-요구사항">&lt;/span>
&lt;a href="#%ec%9d%b4%ed%95%b4%ea%b4%80%ea%b3%84%ec%9e%90%ec%9d%98-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>모든 이해관계자의 요구사항을 고려해야 한다.&lt;br>
아키텍처는 이해관계자 간의 의사소통 도구로 활용될 수 있어야 하며, 개발 비용, 기간, 조직의 역량 등 구현에 대한 제약 사항도 정의해야 한다.&lt;/p>
&lt;h4>변경 용이성&lt;span class="hx-absolute -hx-mt-20" id="변경-용이성">&lt;/span>
&lt;a href="#%eb%b3%80%ea%b2%bd-%ec%9a%a9%ec%9d%b4%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>시스템은 시간이 지남에 따라 변경될 수 있으므로, 아키텍처는 유연하게 설계되어야 한다.&lt;br>
변경 용이성을 고려하여 설계함으로써 향후 요구사항 변경이나 기술 변화에 쉽게 대응할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>