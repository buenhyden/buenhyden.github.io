<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – IP</title><link>https://buenhyden.github.io/categories/ip/</link><description>Recent content in IP on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 04 Oct 2024 11:51:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/ip/index.xml" rel="self" type="application/rss+xml"/><item><title>CIDR (Classless Inter-Domain Routing)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/cidr/</link><pubDate>Fri, 04 Oct 2024 11:51:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/cidr/</guid><description>
&lt;h2>CIDR (Classless Inter-Domain Routing)&lt;/h2>&lt;p>CIDR은 1993년에 도입된 IP 주소 할당 및 라우팅 방식으로, 기존의 클래스 기반 주소 체계(Classful Addressing)의 한계를 극복하기 위해 만들어졌다.&lt;br>
인터넷이 급속도로 성장하면서 기존의 고정된 클래스 체계로는 IP 주소를 효율적으로 할당하기 어려워졌고, 이를 해결하기 위해 더 유연한 주소 할당 방식이 필요해지면서 탄생되었다.&lt;br>
네트워크 정보를 여러 개로 나누어진 Sub-Network 들을 모두 나타낼 수 있는 하나의 Network 로 통합해서 보여주는 방법이다.&lt;/p>
&lt;h3>목적&lt;/h3>&lt;ul>
&lt;li>IP 주소 자원의 낭비를 줄임&lt;/li>
&lt;li>라우팅 테이블의 크기를 감소시킴&lt;/li>
&lt;li>더 유연하고 효율적인 주소 할당을 제공&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>
&lt;p>주소 집약(Route Aggregation)&lt;br>
CIDR의 가장 중요한 특징 중 하나는 라우팅 테이블을 간소화할 수 있는 주소 집약이다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>192.168.0.0/24&lt;/li>
&lt;li>192.168.1.0/24&lt;/li>
&lt;li>192.168.2.0/24&lt;/li>
&lt;li>192.168.3.0/24 이 네 개의 네트워크를 192.168.0.0/22로 집약할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>유연한 네트워크 설계&lt;br>
CIDR을 사용하면 네트워크 크기를 필요에 따라 정확하게 조절할 수 있다.&lt;br>
이는 다음과 같은 이점을 제공한다:&lt;/p>
&lt;ul>
&lt;li>IP 주소 낭비 최소화&lt;/li>
&lt;li>효율적인 주소 공간 활용&lt;/li>
&lt;li>네트워크 구조의 유연한 설계&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>
&lt;p>IP 주소 활용 효율성&lt;/p>
&lt;ul>
&lt;li>필요한 만큼의 주소만 할당 가능&lt;/li>
&lt;li>주소 공간 낭비 최소화&lt;/li>
&lt;li>미사용 주소의 재할당 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>라우팅 효율성&lt;/p>
&lt;ul>
&lt;li>라우팅 테이블 크기 감소&lt;/li>
&lt;li>네트워크 성능 향상&lt;/li>
&lt;li>라우터의 메모리 사용량 감소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 설계 유연성&lt;/p>
&lt;ul>
&lt;li>다양한 크기의 네트워크 수용&lt;/li>
&lt;li>쉬운 네트워크 확장&lt;/li>
&lt;li>효율적인 주소 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>표기법&lt;/h3>&lt;p>CIDR은 IP 주소와 슬래시(/) 뒤에 네트워크 프리픽스의 비트 수를 표기하는 방식을 사용한다.&lt;br>
이는 네트워크 주소와 프리픽스 길이로 표현되며, 프리픽스 길이는 네트워크 부분의 비트 수를 나타낸다.&lt;/p>
&lt;ul>
&lt;li>점과 숫자로 이루어진 4 부분의 주소와 &amp;lsquo;/&amp;rsquo; 뒤의 0 에서 32 까지의 숫자로 이루어진다.&lt;br>
즉, &lt;code>A.B.C.D/N&lt;/code> 과 같은 형태&lt;/li>
&lt;li>점과 숫자로 이루어진 부분은 IPv4 주소와 마찬가지로 4 개의 8 비트 단위 바이트로 이루어진 32 비트 이진 숫자이다.&lt;/li>
&lt;li>&amp;lsquo;/&amp;rsquo; 뒤의 숫자는 &lt;code>접두어 길이&lt;/code>라고 하며, 주소의 왼쪽으로부터 세어서 공유하는 초기 비트의 수를 가리킨다.&lt;/li>
&lt;/ul>
&lt;p>예를 들어 192.168.1.0/24는 다음을 의미한다:&lt;/p>
&lt;ul>
&lt;li>IP 주소: 192.168.1.0&lt;/li>
&lt;li>네트워크 프리픽스: 24비트&lt;/li>
&lt;li>호스트 비트: 8비트 (32-24) 이는 기존 클래스 체계의 서브넷 마스크 255.255.255.0과 동일한 의미를 가진다.&lt;/li>
&lt;/ul>
&lt;h4>CIDR 블록&lt;/h4>&lt;p>CIDR(Classless Inter-Domain Routing)는 IP 주소를 할당하고 라우팅하는 방식 자체를 의미하는 반면, &lt;strong>CIDR 블록&lt;/strong>은 CIDR 방식을 사용하여 실제로 정의된 특정 주소의 범위를 의미한다.&lt;br>
예를 들어 192.168.1.0/24와 같은 특정 네트워크 주소 범위를 CIDR 블록이라고 한다.&lt;/p>
&lt;p>구체적인 예시를 들어보면:&lt;/p>
&lt;ul>
&lt;li>CIDR은 &amp;ldquo;/24&amp;quot;나 &amp;ldquo;/16&amp;quot;과 같은 접두어 길이를 사용하여 네트워크를 유연하게 분할할 수 있게 해주는 방식.&lt;/li>
&lt;li>CIDR 블록은 이 방식을 사용하여 실제로 정의된 &amp;ldquo;192.168.1.0/24&amp;quot;나 &amp;ldquo;10.0.0.0/16&amp;quot;과 같은 특정 주소 범위.&lt;/li>
&lt;/ul>
&lt;p>예를 들어 192.168.1.0/24라는 CIDR 블록은 192.168.1.0부터 192.168.1.255까지의 256개 연속된 IP 주소를 포함한다.&lt;br>
CIDR 블록이라 불리는 그룹에 포함된 여러 IP 주소는 &lt;strong>이진 표기&lt;/strong>를 하였을 때 동일한 일련의 초기 비트를 가진다.&lt;br>
만약 이진 형태로 변화한 IP 주소의 첫 자리 비트에서 CIDR 접두어 N 비트 길이만큼 일치한다면, 해당 IP 주소는 CIDR 블록의 일부라고 하며, CIDR 접두어와 일치한다고 한다.&lt;/p>
&lt;p>IPv6 주소에서도 사용될 수 있으며, 이 경우 긴 주소로 말미암아 접두어 길이는 0~128 까지의 범위를 지닌다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/487px-IP_Address_Match.svg.png"
alt="CIDR 접두어 일치의 예시"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/CIDR&lt;/a> _&lt;/p>
&lt;ul>
&lt;li>CIDR 블록의 할당
&lt;ul>
&lt;li>1990 년대 후반, 208.130.29.33 은 &lt;code>www.fresssoft.org&lt;/code> 웹 서버에 할당되어 있었는데, 3 개의 CIDR 접두어를 가진다.
&lt;ul>
&lt;li>큰 CIDR 블록인 208.128.0.0/11 이 ARIN(북미 RIR) 에서 MCI 에 할당됨.&lt;/li>
&lt;li>버지니아주에 있는 재공급업자인 Automation Research Systems 는 MCI 로부터 인터넷 접속을 승인받아 208.130.28.0/22 를 부여받음.&lt;/li>
&lt;li>ARS 는 /24 블록을 공공 서버용으로 할당하였고, 208.130.29.33 은 그 중 하나이다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>하나의 주소에 대한 이러한 여러 CIDR 접두어는 네트워크상의 서로 다른 영역에서 각각 사용된다.
&lt;ul>
&lt;li>MCI 네트워크 외부에서는 208.128.0.0/11 접두어가 MCI 트래픽 영역으로 접근하기 위해 사용된다.&lt;/li>
&lt;li>MCI 네트워크 내부에서는 208.128.28.0/22 가 사용되며, 패킷을 ARS 로 보내는 역할을 한다.&lt;/li>
&lt;li>208.130.29.0/24 는 ARS 네트워크 내부에서만 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/640px-CIDR_Address.svg.png"
alt="An broken down by its CIDR prefixes"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/CIDR&lt;/a> _&lt;/p>
&lt;h3>CIDR의 작동 원리&lt;/h3>&lt;p>CIDR은 가변 길이 서브넷 마스킹(VLSM)을 사용하여 네트워크를 더 효율적으로 분할한다.&lt;br>
네트워크 프리픽스 길이를 자유롭게 조절할 수 있어서, 필요한 만큼의 호스트 주소만을 할당할 수 있다.&lt;/p>
&lt;p>예를 들어:&lt;/p>
&lt;ul>
&lt;li>/24 네트워크는 256개의 주소(254개 사용 가능)&lt;/li>
&lt;li>/25 네트워크는 128개의 주소(126개 사용 가능)&lt;/li>
&lt;li>/26 네트워크는 64개의 주소(62개 사용 가능)&lt;/li>
&lt;/ul>
&lt;h3>CIDR 계산 방법&lt;/h3>&lt;p>CIDR 네트워크를 계산할 때는 다음 단계를 따른다:&lt;/p>
&lt;ol>
&lt;li>네트워크 크기 결정 필요한 호스트 수를 파악하고, 이를 수용할 수 있는 가장 작은 2의 거듭제곱을 찾는다.&lt;/li>
&lt;li>프리픽스 길이 계산 32에서 필요한 호스트 비트 수를 뺀 값이 프리픽스 길이가 된다.&lt;/li>
&lt;li>네트워크 범위 계산 네트워크 주소와 브로드캐스트 주소를 계산하여 사용 가능한 IP 범위를 결정한다.&lt;/li>
&lt;/ol>
&lt;h4>실제 CIDR 적용 예시&lt;/h4>&lt;p>한 회사에서 직원 60명을 수용할 수 있는 네트워크를 설계해야 한다고 가정해보자.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>네트워크 크기 결정&lt;/p>
&lt;ul>
&lt;li>필요한 호스트 수: 60대&lt;/li>
&lt;li>네트워크 주소와 브로드캐스트 주소를 위해 추가로 2개 주소 필요&lt;/li>
&lt;li>따라서 총 필요한 주소 수: 62개&lt;/li>
&lt;li>이를 수용할 수 있는 가장 작은 2의 거듭제곱을 찾아보면:
&lt;ul>
&lt;li>2⁶ = 64가 62개의 주소를 수용할 수 있는 최소 크기&lt;/li>
&lt;li>즉, 6비트가 호스트 부분에 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프리픽스 길이 계산&lt;/p>
&lt;ul>
&lt;li>IPv4는 총 32비트&lt;/li>
&lt;li>필요한 호스트 비트 수는 6비트&lt;/li>
&lt;li>프리픽스 길이 = 32 - 6 = 26&lt;/li>
&lt;li>따라서 /26 네트워크가 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>네트워크 범위 계산&lt;br>
예를 들어 192.168.1.0/26 네트워크를 사용한다고 하면:&lt;/p>
&lt;ul>
&lt;li>네트워크 주소: 192.168.1.0
&lt;ul>
&lt;li>이진수로 표현: 11000000.10101000.00000001.00000000&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>브로드캐스트 주소: 192.168.1.63
&lt;ul>
&lt;li>이진수로 표현: 11000000.10101000.00000001.00111111&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 가능한 IP 주소 범위:
&lt;ul>
&lt;li>첫 번째 사용 가능 주소: 192.168.1.1&lt;/li>
&lt;li>마지막 사용 가능 주소: 192.168.1.62&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>총 사용 가능한 호스트 수: 62개 (64 - 2)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>접두어 합침 (Routing Prefix Aggregation, 혹은 summarization)&lt;/h3>&lt;p>접두어 합침(Routing Prefix Aggregation 또는 summarization)은 라우팅 테이블의 크기를 줄이고 네트워크 효율성을 높이기 위해 사용되는 중요한 기술이다.&lt;/p>
&lt;p>접두어 합침은 여러 개의 연속된 IP 주소 블록을 하나의 더 큰 블록으로 결합하는 과정이다.&lt;/p>
&lt;p>이 기술의 주요 목적은:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블 크기 감소&lt;/li>
&lt;li>네트워크 대역폭 절약&lt;/li>
&lt;li>라우터의 처리 부하 감소&lt;/li>
&lt;li>네트워크 안정성 향상&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블 크기 감소: 여러 개의 경로를 하나로 합치면 라우터의 메모리 사용량이 줄어든다.&lt;/li>
&lt;li>라우팅 효율성 향상: 작은 라우팅 테이블은 더 빠른 경로 검색을 가능하게 한다.&lt;/li>
&lt;li>네트워크 안정성 개선: 개별 경로의 변동이 전체 네트워크에 미치는 영향을 줄일 수 있다.&lt;/li>
&lt;/ol>
&lt;p>주의사항:&lt;br>
접두어 합침을 사용할 때는 주의가 필요하다.&lt;br>
과도한 합침은 라우팅의 정확성을 떨어뜨릴 수 있으며, 특정 상황에서는 비효율적인 라우팅을 초래할 수 있다.&lt;/p>
&lt;p>작동 방식:&lt;br>
접두어 합침은 여러 개의 작은 네트워크를 하나의 큰 네트워크로 표현한다.&lt;br>
이는 CIDR(Classless Inter-Domain Routing) 표기법을 사용하여 수행된다.&lt;/p>
&lt;p>예시:&lt;br>
다음과 같은 네트워크 주소들이 있다고 가정해 봅시다:&lt;/p>
&lt;ul>
&lt;li>172.16.64.0/24 ~ 172.16.71.0/24&lt;br>
이 네 개의 주소는 172.16.64.0/21로 합칠 수 있다.&lt;br>
이렇게 하면 라우팅 테이블에 네 개의 항목 대신 하나의 항목만 필요하게 된다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/GUID-CBB50420-82CE-4F46-98BA-24A1BF644290-low.png"
alt="Route Summarization"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://docs.vmware.com/en/VMware-SD-WAN/6.0/VMware-SD-WAN-Administration-Guide/GUID-72405FEF-C3B9-47E9-A332-869FB35DB1DC.html" target="_blank" rel="noopener">https://docs.vmware.com/en/VMware-SD-WAN/6.0/VMware-SD-WAN-Administration-Guide/GUID-72405FEF-C3B9-47E9-A332-869FB35DB1DC.html&lt;/a> _&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>CIDR&lt;/h3>&lt;p>&lt;a href="https://kim-dragon.tistory.com/9" target="_blank" rel="noopener">[네트워크] CIDR이란?(사이더 란?)&lt;/a>&lt;br>
&lt;a href="https://kim-dragon.tistory.com/154" target="_blank" rel="noopener">[네트워크] CIDR 범위 쉽게 계산하는 방법&lt;/a>&lt;br>
&lt;a href="https://ko.wikipedia.org/wiki/CIDR" target="_blank" rel="noopener">CIDR&lt;/a>&lt;/p></description></item><item><title>IP Delivery Modes</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/ip-delivery-modes/</link><pubDate>Fri, 04 Oct 2024 07:37:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/ip-delivery-modes/</guid><description>
&lt;h2>IP Delivery Modes&lt;/h2>&lt;p>네트워크에서 데이터를 전송하는 다양한 방식.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/unicast-broadcast-multicast-anycast.jpg"
alt="Unicast, Broadcast, Multicast, Anycast"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ipcisco.com/lesson/unicast-broadcast-multicast-anycast/#google_vignette" target="_blank" rel="noopener">https://ipcisco.com/lesson/unicast-broadcast-multicast-anycast/#google_vignette&lt;/a> _&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Unicast&lt;/th>
&lt;th>Multicast&lt;/th>
&lt;th>Broadcast&lt;/th>
&lt;th>Anycast&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>전송 방식&lt;/td>
&lt;td>1:1 통신으로, 하나의 송신자가 하나의 특정 수신자에게 데이터를 전송&lt;/td>
&lt;td>1:N 통신으로, 하나의 송신자가 특정 그룹에 속한 다수의 수신자에게 동시에 데이터를 전송&lt;/td>
&lt;td>1:모두 통신으로, 하나의 송신자가 네트워크 내의 모든 호스트에게 데이터를 전송&lt;/td>
&lt;td>1:1/다수 통신으로, 하나의 송신자가 동일한 주소를 가진 여러 노드 중 가장 가까운 하나의 노드에게 데이터를 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 체계&lt;/td>
&lt;td>각 호스트마다 고유한 IP 주소 사용&lt;/td>
&lt;td>Class D IP 주소(224.0.0.0 ~ 239.255.255.255) 사용. IPv6에서는 ff00::/8 프리픽스 사용&lt;/td>
&lt;td>IPv4에서 네트워크 주소의 호스트 부분이 모두 1인 주소 사용&lt;/td>
&lt;td>동일한 유니캐스트 주소를 여러 노드가 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>트래픽 효율성&lt;/td>
&lt;td>수신자가 많을 경우 네트워크 부하가 증가하여 비효율적&lt;/td>
&lt;td>그룹 멤버들에게 한 번의 전송으로 데이터 전달이 가능하여 효율적&lt;/td>
&lt;td>모든 호스트에게 전송되어 불필요한 트래픽 발생 가능성이 높음&lt;/td>
&lt;td>가까운 노드에게만 전송되어 효율적이며, 로드 밸런싱 효과 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>일반적인 인터넷 통신, 이메일, 웹 브라우징 등&lt;/td>
&lt;td>화상 회의, IPTV, 소프트웨어 배포, 실시간 주식 정보 전송 등&lt;/td>
&lt;td>네트워크 설정 정보 전파, DHCP, ARP 등&lt;/td>
&lt;td>DNS 서버, CDN 서비스, 로드 밸런싱이 필요한 서비스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성&lt;/td>
&lt;td>TCP를 사용할 경우 높은 신뢰성 보장&lt;/td>
&lt;td>UDP 기반으로 동작하여 상대적으로 신뢰성이 낮음. 필요시 응용 계층에서 신뢰성 보장 메커니즘 구현 필요&lt;/td>
&lt;td>신뢰성이 낮으며, 일반적으로 UDP 사용&lt;/td>
&lt;td>유니캐스트와 동일한 수준의 신뢰성 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv4 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>제한적 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv6 지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원 (향상된 기능)&lt;/td>
&lt;td>미지원 (대신 멀티캐스트 사용)&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 간단한 구현&lt;br>- 모든 프로토콜 지원&lt;br>- 보안성 우수&lt;/td>
&lt;td>- 네트워크 대역폭 효율적 사용&lt;br>- 다수의 수신자에게 효율적 전송&lt;br>- 확장성이 좋음&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 모든 호스트에 빠른 정보 전달&lt;br>- 네트워크 설정에 유용&lt;/td>
&lt;td>- 서버 이중화 용이&lt;br>- 로드 밸런싱 효과&lt;br>- 지연 시간 최소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 다수 수신자 전송 시 비효율적&lt;br>- 대역폭 소비가 큼&lt;/td>
&lt;td>- 라우터의 멀티캐스트 지원 필요&lt;br>- 구현 복잡&lt;br>- 신뢰성 보장 메커니즘 별도 필요&lt;/td>
&lt;td>- 불필요한 트래픽 발생&lt;br>- 네트워크 성능 저하&lt;br>IPv6에서 미지원&lt;/td>
&lt;td>- 구현 복잡&lt;br>- 라우팅 테이블 크기 증가&lt;br>- 관리 어려움&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 전달 방식은 고유한 특성과 장단점을 가지고 있으며, 사용 목적과 네트워크 환경에 따라 적절한 방식을 선택해야 한다.&lt;br>
IPv6에서는 브로드캐스트가 제거되고 멀티캐스트와 애니캐스트가 강화되어 더욱 효율적인 네트워크 구성이 가능해졌다.&lt;/p>
&lt;blockquote>
&lt;p>Incast (인캐스트)&lt;/p>
&lt;ul>
&lt;li>공식적인 IP 전송 모드가 아니라 네트워크 패턴 또는 현상을 설명하는 용어.&lt;/li>
&lt;li>특징
&lt;ul>
&lt;li>다대 1 통신&lt;/li>
&lt;li>여러 송신자가 동시에 하나의 수신자에게 데이터 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점
&lt;ul>
&lt;li>병렬 처리에 효과적&lt;/li>
&lt;li>대규모 데이터 수집에 유용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단점
&lt;ul>
&lt;li>네트워크 병목 현상 발생 가능&lt;/li>
&lt;li>버퍼 오버플로우 위험&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용 시기
&lt;ul>
&lt;li>빅데이터 처리&lt;/li>
&lt;li>분산 파일 시스템&lt;/li>
&lt;li>클라우드 스토리지 시스템&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>