<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Development Life Cycle :: Category :: hyunyoun's Blog</title><link>https://buenhyden.github.io/categories/software-development-life-cycle.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Tue, 01 Oct 2024 00:56:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/software-development-life-cycle/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 계획 (Planning)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/1-planning.html</link><pubDate>Tue, 01 Oct 2024 00:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/1-planning.html</guid><description>프로젝트의 방향성과 범위를 설정하고, 자원과 일정을 계획하며, 위험 요소를 식별하고 관리 전략을 수립한다.</description></item><item><title>2. 요구사항 수집 및 분석 (Requirements Gathering and Analysis)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/2-requirements-gathering-and-analysis.html</link><pubDate>Tue, 01 Oct 2024 00:53:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/2-requirements-gathering-and-analysis.html</guid><description>이해관계자의 요구사항을 수집하고 분석하여 시스템 요구사항을 정의하는 단계</description></item><item><title>3. 설계 (Design)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/3-design.html</link><pubDate>Tue, 01 Oct 2024 00:53:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/3-design.html</guid><description>요구사항을 바탕으로 시스템의 구조와 세부 사항을 설계하는 단계</description></item><item><title>4. 구현 (Implementation)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/4-implementation.html</link><pubDate>Tue, 01 Oct 2024 00:53:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/4-implementation.html</guid><description>설계를 바탕으로 실제 코드를 작성하는 단계</description></item><item><title>5. 테스트 (Testing)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/5-testing.html</link><pubDate>Tue, 01 Oct 2024 00:55:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/5-testing.html</guid><description>개발된 소프트웨어의 품질을 검증하고 결함을 식별하는 단계</description></item><item><title>6. 배포 (Deployment)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/6-deployment.html</link><pubDate>Tue, 01 Oct 2024 00:55:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/6-deployment.html</guid><description>완성된 소프트웨어를 실제 운영 환경에 설치하고 사용자에게 제공하는 단계</description></item><item><title>7. 유지보수 (Maintenance)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/7-maintenance.html</link><pubDate>Tue, 01 Oct 2024 00:56:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/7-maintenance.html</guid><description>배포된 소프트웨어를 지속적으로 관리하고 개선하는 단계</description></item></channel></rss>