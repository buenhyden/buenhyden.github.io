<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Function :: Category :: hyunyoun's Blog</title><link>https://buenhyden.github.io/categories/function.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Sat, 21 Dec 2024 02:00:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/function/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Super</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-super.html</link><pubDate>Sat, 21 Dec 2024 02:00:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-super.html</guid><description>super()는 상속 관계에서 부모 클래스의 메서드를 호출하는 데 사용되는 중요한 도구.</description></item><item><title>Python Lambda</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-lambda.html</link><pubDate>Fri, 15 Nov 2024 11:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-lambda.html</guid><description>익명 함수를 생성하는 강력한 도구</description></item><item><title>Python - Decorators</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-decorators.html</link><pubDate>Fri, 25 Oct 2024 17:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-decorators.html</guid><description>함수나 메서드를 수정하지 않고 기능을 확장하거나 변경할 수 있는 강력한 도구</description></item><item><title>classmethod and staticmethod</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/classmethod-and-staticmethod.html</link><pubDate>Fri, 25 Oct 2024 12:39:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/classmethod-and-staticmethod.html</guid><description>Python의 클래스에서 사용되는 두 가지 다른 종류의 메서드 데코레이터</description></item><item><title>Python - Generators</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-generators.html</link><pubDate>Fri, 25 Oct 2024 08:29:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-generators.html</guid><description>반복 가능한 객체를 생성하는 강력한 도구</description></item><item><title>내장 데코레이터 (Built-in Decorators)</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-%EB%82%B4%EC%9E%A5-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0.html</link><pubDate>Fri, 25 Oct 2024 07:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-%EB%82%B4%EC%9E%A5-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0.html</guid><description>파이썬에는 다양한 내장 데코레이터가 있으며, 이들은 코드를 최적화하고 기능을 확장하는 데 중요한 역할을 한다.</description></item></channel></rss>