<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Computer System on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/computer-system/</link>
    <description>Recent content in Computer System on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Oct 2024 14:39:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/computer-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Concurrency and Parallelism</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/process-management/concurrency-and-parallelism/</link>
      <pubDate>Sat, 05 Oct 2024 02:38:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/process-management/concurrency-and-parallelism/</guid>
      <description>동시성과 병렬성은 모두 여러 작업을 효율적으로 처리하기 위한 방법이지만, 그 접근 방식과 목적이 다르다.  동시성은 작업 관리와 응답성 향상에 중점을 두고, 병렬성은 전체적인 처리 속도 향상에 초점을 맞춘다.</description>
    </item>
    <item>
      <title>Computer Architecture</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/computer-architecture/</link>
      <pubDate>Sun, 29 Sep 2024 21:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/computer-architecture/</guid>
      <description>컴퓨터 시스템의 구조와 설계를 정의하는 기본적인 프레임워크.</description>
    </item>
    <item>
      <title>Operating System</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/</link>
      <pubDate>Tue, 01 Oct 2024 17:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/</guid>
      <description>운영체제는 컴퓨터 하드웨어 자원을 효율적으로 관리하고, 사용자가 컴퓨터를 편리하고 효과적으로 사용할 수 있는 환경을 제공하는 시스템 소프트웨어</description>
    </item>
    <item>
      <title>Multithreading vs. Multiprocessing vs Multitasking</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/multithreading/multithreading-vs-multiprocessing-vs-multitasking/</link>
      <pubDate>Sat, 05 Oct 2024 14:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/multithreading/multithreading-vs-multiprocessing-vs-multitasking/</guid>
      <description>Multithreading, Multiprocessing, Multitasking은 컴퓨터 시스템에서 동시성과 병렬성을 구현하는 세 가지 주요 개념이다.</description>
    </item>
    <item>
      <title>Linux Basic Command</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/popular-os/linux/linux-basic-command/</link>
      <pubDate>Tue, 01 Oct 2024 15:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/popular-os/linux/linux-basic-command/</guid>
      <description>Linux에서 자주 사용하는 명령어 모음</description>
    </item>
    <item>
      <title>Linux Permission</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/popular-os/linux/linux-permission/</link>
      <pubDate>Tue, 01 Oct 2024 15:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/popular-os/linux/linux-permission/</guid>
      <description>Linux 권한 설정</description>
    </item>
    <item>
      <title>동시성 (Concurrency)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/concurrency/</link>
      <pubDate>Fri, 04 Oct 2024 06:51:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/concurrency/</guid>
      <description>동시성 (Concurrency)은 여러 작업이 동시에 실행되는 것처럼 보이지만, 실제로는 매우 빠르게 작업 간 전환을 하면서 처리하는 방식이다.</description>
    </item>
    <item>
      <title>병렬성 (Parallelism)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/fundamentals/parallelism/</link>
      <pubDate>Fri, 04 Oct 2024 02:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/fundamentals/parallelism/</guid>
      <description>병렬성(Parallelism)은 컴퓨터 프로그래밍에서 여러 작업을 동시에 실행하여 전체적인 처리 속도를 향상시키는 기술을 말한다.</description>
    </item>
    <item>
      <title>Kernel</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/os-concepts/kernel/</link>
      <pubDate>Tue, 01 Oct 2024 16:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/operating-systems/os-concepts/kernel/</guid>
      <description>운영 체제의 커널은 컴퓨터 시스템의 핵심 구성 요소로, 하드웨어와 소프트웨어 간의 중개자 역할을 수행</description>
    </item>
    <item>
      <title>CPU</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/computer-architecture/cpu/</link>
      <pubDate>Sun, 29 Sep 2024 16:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/computer-architecture/cpu/</guid>
      <description>컴퓨터 시스템의 핵심 구성요소로, 프로그램의 명령어를 해석하고 실행하는 역할을 한다.</description>
    </item>
    <item>
      <title>Instruction Set Architecture</title>
      <link>https://buenhyden.github.io/posts/computer-science-fundamentals/computer-architecture/processor-architecture/instruction-set-architecture/</link>
      <pubDate>Sun, 29 Sep 2024 02:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science-fundamentals/computer-architecture/processor-architecture/instruction-set-architecture/</guid>
      <description>ISA는 프로세서가 실행할 수 있는 명령어들의 집합을 정의하며, 프로그래머와 컴파일러 작성자에게 중요한 추상화 계층을 제공한다.</description>
    </item>
  </channel>
</rss>
