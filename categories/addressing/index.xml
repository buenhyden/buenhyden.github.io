<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Addressing on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/addressing/</link>
    <description>Recent content in Addressing on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Sep 2025 04:28:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/addressing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Socket Address</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/socket-address/</link>
      <pubDate>Fri, 05 Sep 2025 04:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/socket-address/</guid>
      <description>소켓 주소는 통신 엔드포인트 식별자이며 주소 패밀리(AFam), IP 주소(IPv4/IPv6/Unix), 포트 번호(16비트, 네트워크 바이트순서), 필요시 스코프 정보를 포함한다. bind/connect/accept/getpeername/getsockname 호출의 기본 인자로 작동하고 소스·목적지의 4-튜플로 세션을 규정해 라우팅·보안·디버깅에 핵심 역할을 한다.</description>
    </item>
    <item>
      <title>Port Address</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/port-address/</link>
      <pubDate>Thu, 04 Sep 2025 02:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/port-address/</guid>
      <description>포트 주소는 전송 계층에서 서비스/프로세스를 구분하는 16비트 값이다. IANA가 시스템·등록·동적 범위를 관리한다. TCP·UDP·SCTP·DCCP는 헤더의 출발지/목적지 포트로 다중 통신을 지원하며, ICMP는 포트를 쓰지 않는다. NAT의 NAPT는 포트 변환으로 다수 호스트를 한 공인 IP에 연결한다.</description>
    </item>
    <item>
      <title>IP Address</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/ip-address/</link>
      <pubDate>Thu, 24 Apr 2025 06:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/ip-address/</guid>
      <description>IP 주소는 네트워크의 식별자이자 위치 정보로, IPv4/IPv6·CIDR·서브넷팅으로 구조화된다. DHCP/SLAAC로 배포하고 DNS/ARP·NDP로 해석한다. IPv4 고갈로 NAT가 쓰이지만 가시성·보안·운영 영향을 고려해 IPAM·로그·IPv6 전환 정책을 병행해야 한다.</description>
    </item>
    <item>
      <title>DNS 캐싱 (DNS Caching)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/network-services/dns/dns-fundamentals/caching/dns-caching/</link>
      <pubDate>Thu, 17 Oct 2024 07:30:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/core-protocols/application-layer/network-services/dns/dns-fundamentals/caching/dns-caching/</guid>
      <description>DNS 캐싱은 이전에 조회한 도메인 이름과 IP 주소의 매핑 정보를 임시로 저장하는 메커니즘이다.</description>
    </item>
    <item>
      <title>Media Access Control Address (MAC Address)</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/mac-address/</link>
      <pubDate>Wed, 16 Oct 2024 12:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/network-fundamentals/basic-concepts/addressing/mac-address/</guid>
      <description>MAC 주소(EUI-48)는 데이터 링크 계층(L2)에서 사용되는 48비트 식별자로, IEEE가 OUI/MA-L 등으로 제조사 블록을 관리한다. U/L 비트로 로컬/글로벌, I/G 비트로 단일/그룹을 구분하며 스위치 포워딩·ARP/NDP 연동에 필수적이다. 다만 OS·무선 랜덤화·가상화로 변경·랜덤화가 가능하므로 인증·접근제어는 MAC 단독 의존을 피하고 802.1X·NAC·IPAM 등으로 보완해야 한다.</description>
    </item>
  </channel>
</rss>
