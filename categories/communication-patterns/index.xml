<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Communication Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/communication-patterns/</link>
    <description>Recent content in Communication Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 18 Jul 2025 05:55:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/communication-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Event Broker vs. Message Broker</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-brokers-vs-event-brokers/</link>
      <pubDate>Fri, 18 Jul 2025 05:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-brokers-vs-event-brokers/</guid>
      <description>Event Broker 와 Message Broker 는 분산 시스템에서 애플리케이션 간 비동기 통신을 담당하는 미들웨어이다.  Message Broker 는 전통적인 큐 기반 메시지 전달에 특화되어 있으며, Event Broker 는 이벤트 스트리밍과 로그 기반 아키텍처를 통해 대용량 실시간 데이터 처리에 최적화되어 있다.</description>
    </item>
    <item>
      <title>Message Systems</title>
      <link>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/</link>
      <pubDate>Tue, 22 Apr 2025 13:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/networking--protocols/communication-patterns/message-infrastructure/message-systems/</guid>
      <description>메시징 시스템은 분산 애플리케이션의 구성 요소 간 비동기 통신을 지원하여 결합도를 낮추고, 신뢰성·확장성·유연성을 제공합니다. 메시지 큐, 이벤트 스트리밍, 태스크 큐 등 다양한 형태가 존재하며, 실시간 데이터 처리, 작업 분산, 장애 복원력 등 다양한 요구에 대응한다.</description>
    </item>
  </channel>
</rss>
