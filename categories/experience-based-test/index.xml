<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Experience-Based Test on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/experience-based-test/</link>
    <description>Recent content in Experience-Based Test on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Oct 2024 08:09:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/experience-based-test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>체크리스트 기반 테스팅 (Checklist-based Testing)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/test-design-techniques/experience-based-test/checklist-based-testing/</link>
      <pubDate>Sun, 27 Oct 2024 08:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/test-design-techniques/experience-based-test/checklist-based-testing/</guid>
      <description>Checklist-based Testing은 소프트웨어 테스팅 기법 중 하나로, 미리 정의된 체크리스트를 사용하여 체계적으로 테스트를 수행하는 방법</description>
    </item>
    <item>
      <title>탐색적 테스팅(Exploratory Testing)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/test-design-techniques/experience-based-test/exploratory-testing/</link>
      <pubDate>Sun, 27 Oct 2024 07:23:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/test-design-techniques/experience-based-test/exploratory-testing/</guid>
      <description>탐색적 테스팅(Exploratory Testing)은 소프트웨어 테스팅의 한 접근 방식으로, 테스터의 창의성, 경험, 직관을 활용하여 소프트웨어를 자유롭게 탐색하며 결함을 발견하는 과정</description>
    </item>
    <item>
      <title>오류 예측 검사(Error Guessing)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/test-design-techniques/experience-based-test/error-guessing/</link>
      <pubDate>Sun, 27 Oct 2024 00:13:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/test-design-techniques/experience-based-test/error-guessing/</guid>
      <description>오류 예측 검사(Error Guessing)는 블랙박스 테스트 기법 중 하나로, 테스터의 **경험, 지식, 직관**을 활용하여 소프트웨어에서 발생할 가능성이 높은 오류를 예측하고 이를 기반으로 테스트 케이스를 설계하는 방법</description>
    </item>
  </channel>
</rss>
