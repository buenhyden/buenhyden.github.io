<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Peer Review on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/peer-review/</link>
    <description>Recent content in Peer Review on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.151.2</generator>
    <language>en</language>
    <lastBuildDate>Tue, 29 Oct 2024 07:10:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/peer-review/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Desk Check</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/informal-review/desk-check/</link>
      <pubDate>Tue, 29 Oct 2024 07:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/informal-review/desk-check/</guid>
      <description>데스크 체크는 가장 기본적인 비형식 리뷰 방법 중 하나로, 개발자가 자신의 코드를 스스로 검토하는 과정</description>
    </item>
    <item>
      <title>워크스루(Walkthrough)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/walkthrough/</link>
      <pubDate>Tue, 29 Oct 2024 07:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/walkthrough/</guid>
      <description>워크스루는 코드 작성자가 다른 개발자들에게 코드를 단계별로 설명하며 진행하는 비형식적 리뷰 방식</description>
    </item>
    <item>
      <title>코드 리뷰 (Code Review)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/code-review/</link>
      <pubDate>Tue, 29 Oct 2024 07:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/code-review/</guid>
      <description>코드 리뷰는 개발자가 작성한 코드를 다른 개발자들이 검토하고 피드백을 제공하는 과정이다.</description>
    </item>
    <item>
      <title>패스 어라운드(Pass Around)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/informal-review/pass-around/</link>
      <pubDate>Tue, 29 Oct 2024 07:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/informal-review/pass-around/</guid>
      <description>패스 어라운드는 비형식적 코드 리뷰의 한 형태로, 코드가 여러 리뷰어들 사이를 &amp;#34;돌아다니며&amp;#34; 검토되는 방식을 말한다.</description>
    </item>
    <item>
      <title>감사(Audit)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/formal-review/audit/</link>
      <pubDate>Tue, 29 Oct 2024 07:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/formal-review/audit/</guid>
      <description>독립적인 검토자들이 소프트웨어 산출물과 프로세스를 체계적으로 검사하고 평가하는 공식적인 검토 과정이다.</description>
    </item>
    <item>
      <title>페어 프로그래밍(Pair Programming)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/informal-review/pair-programming/</link>
      <pubDate>Tue, 29 Oct 2024 07:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/informal-review/pair-programming/</guid>
      <description>페어 프로그래밍은 두 명의 개발자가 하나의 컴퓨터에서 함께 작업하는 협력적인 개발 방식</description>
    </item>
    <item>
      <title>Inspection</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/inspection/</link>
      <pubDate>Tue, 29 Oct 2024 07:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/inspection/</guid>
      <description>인스펙션은 FTR(Formal Technical Review)라고도 불리며, 정형화된 절차와 체크리스트를 사용하여 소프트웨어 산출물의 결함을 찾아내는 방법이다.</description>
    </item>
    <item>
      <title>관리 검토(Management Review)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/formal-review/management-review/</link>
      <pubDate>Tue, 29 Oct 2024 07:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/formal-review/management-review/</guid>
      <description>관리 검토는 소프트웨어 개발 프로젝트의 진행 상황, 목표 달성도, 리스크 등을 경영진과 프로젝트 관리자가 검토하는 공식적인 프로세스</description>
    </item>
    <item>
      <title>기술 검토(Technical Review)</title>
      <link>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/formal-review/technical-review/</link>
      <pubDate>Tue, 29 Oct 2024 07:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-development--engineering/development-practices/testing--quality/quality-assurance/reviews/peer-review/formal-review/technical-review/</guid>
      <description>기술 검토는 소프트웨어의 기술적 측면을 전문가들이 체계적으로 평가하는 공식적인 검토 프로세스이다.</description>
    </item>
  </channel>
</rss>
