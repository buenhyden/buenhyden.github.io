<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Traffic Control and Routing on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/traffic-control-and-routing/</link>
    <description>Recent content in Traffic Control and Routing on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Mar 2025 04:35:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/traffic-control-and-routing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementations of API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/</link>
      <pubDate>Sun, 23 Mar 2025 04:35:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/implementations/</guid>
      <description>API 게이트웨이는 현대적인 애플리케이션 아키텍처의 핵심 구성 요소로, 클라이언트 요청을 처리하고 다양한 마이크로서비스로 라우팅하는 중앙 진입점 역할을 한다.</description>
    </item>
    <item>
      <title>Load Balancer</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/load-balancer/</link>
      <pubDate>Mon, 17 Feb 2025 04:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/load-balancer/</guid>
      <description>로드 밸런서 (Load Balancer) 는 복수의 서버에 트래픽을 효율적으로 분산하여 시스템 부하를 균등하게 분배하고, 장애 발생 시에도 서비스 연속성을 보장하는 장치 또는 기술이다. 다양한 알고리즘과 유형을 활용하여 확장성과 고가용성, 탄력성을 제공하는 시스템 핵심 구성 요소이다.</description>
    </item>
    <item>
      <title>Service Mesh</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/</link>
      <pubDate>Wed, 13 Nov 2024 09:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/</guid>
      <description>서비스 메시는 **마이크로서비스 간 통신을 Sidecar 프록시 기반 Data Plane**으로 추상화하고, **Control Plane**에서 정책·보안·관찰 기능을 외부화하는 인프라 계층이다.  이를 통해 서비스 간 보안 (mTLS), 로드밸런싱, 리트라이, 트래픽 제어, 모니터링 등을 코드 수정 없이 적용할 수 있다.</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/</guid>
      <description>API Gateway 는 마이크로서비스 아키텍처에서 핵심 라우터이자 진입점 역할을 수행한다. 요청의 인증, 라우팅, 로드 밸런싱, 변환, 모니터링 등을 통합적으로 처리하여 클라이언트와 백엔드 서비스 간의 결합도를 낮추고 보안/운영 효율성을 높인다.</description>
    </item>
  </channel>
</rss>
