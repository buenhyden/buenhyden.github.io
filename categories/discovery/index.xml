<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Discovery on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/discovery/</link>
    <description>Recent content in Discovery on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.5</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 Nov 2024 11:47:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/discovery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3rd party registration</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/3rd-party-registration/</link>
      <pubDate>Thu, 14 Nov 2024 11:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/3rd-party-registration/</guid>
      <description>이 패턴에서는 서비스 인스턴스가 직접 자신을 서비스 레지스트리에 등록하지 않고, 별도의 외부 컴포넌트가 서비스의 등록과 해제를 담당한다.</description>
    </item>
    <item>
      <title>Self registration</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/self-registration/</link>
      <pubDate>Thu, 14 Nov 2024 11:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/self-registration/</guid>
      <description>각 마이크로서비스 인스턴스가 자신의 정보를 서비스 레지스트리에 직접 등록하고 관리하는 패턴이다</description>
    </item>
    <item>
      <title>Server-side discovery</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/server-side-discovery/</link>
      <pubDate>Thu, 14 Nov 2024 11:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/server-side-discovery/</guid>
      <description>Server-side Discovery는 클라이언트가 서비스의 위치를 직접 찾지 않고, 중간에 위치한 로드 밸런서나 프록시 서버가 서비스 위치를 찾아 요청을 라우팅하는 방식이다.</description>
    </item>
    <item>
      <title>Service registry</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/service-registry/</link>
      <pubDate>Thu, 14 Nov 2024 11:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/service-registry/</guid>
      <description>각 서비스 인스턴스의 네트워크 위치(IP 주소와 포트)를 저장하고 관리하는 중앙화된 데이터베이스</description>
    </item>
    <item>
      <title>Client-side discovery</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/client-side-discovery/</link>
      <pubDate>Thu, 14 Nov 2024 11:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/client-side-discovery/</guid>
      <description>Client-side Discovery는 서비스 클라이언트가 직접 서비스 레지스트리에 질의하여 필요한 서비스의 위치 정보를 얻고, 그 정보를 바탕으로 서비스를 호출하는 방식이다.</description>
    </item>
    <item>
      <title>Service Discovery</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/</link>
      <pubDate>Thu, 14 Nov 2024 10:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architectural-patterns/microservices/discovery/</guid>
      <description>Service Discovery는 네트워크 상의 서비스 위치(IP 주소와 포트)를 자동으로 감지하고 관리하는 프로세스이다.</description>
    </item>
  </channel>
</rss>
