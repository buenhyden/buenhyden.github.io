<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Integration Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/integration-patterns/</link>
    <description>Recent content in Integration Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.141.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Nov 2024 10:07:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/integration-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Anti-Corruption Layer Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/anti-corruption-layer-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 10:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/anti-corruption-layer-pattern/</guid>
      <description>&lt;h2 id=&#34;anti-corruption-layer-pattern&#34;&gt;Anti-Corruption Layer Pattern&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Backend for Frontend Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/backend-for-frontend-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 10:07:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/backend-for-frontend-pattern/</guid>
      <description>BFF는 특정 프론트엔드 애플리케이션을 위해 맞춤형으로 설계된 백엔드 서비스를 의미한다. 이는 마이크로서비스 아키텍처에서 자주 사용되는 패턴으로, 각각의 클라이언트(웹, 모바일, 태블릿 등)가 자신만의 전용 백엔드 서비스를 갖게 된다.</description>
    </item>
    <item>
      <title>Client-Side UI Composition Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/client-side-ui-composition-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 02:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/client-side-ui-composition-pattern/</guid>
      <description>&lt;h2 id=&#34;client-side-ui-composition-pattern&#34;&gt;Client-Side UI Composition Pattern&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Aggregator Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/aggregator-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 02:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/aggregator-pattern/</guid>
      <description>&lt;h2 id=&#34;aggregator-pattern&#34;&gt;Aggregator Pattern&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Gateway Routing Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/gateway-routing-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 02:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/gateway-routing-pattern/</guid>
      <description>&lt;h2 id=&#34;gateway-routing-pattern&#34;&gt;Gateway Routing Pattern&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Proxy Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/proxy-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 02:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/proxy-pattern/</guid>
      <description>&lt;h2 id=&#34;proxy-pattern&#34;&gt;Proxy Pattern&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
    <item>
      <title>API Gateway Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/api-gateway-pattern/</link>
      <pubDate>Sun, 24 Nov 2024 01:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/integration/api-gateway-pattern/</guid>
      <description>마이크로서비스 아키텍처에서 클라이언트와 백엔드 서비스 간의 단일 진입점 역할을 수행하는 중요한 구성 요소</description>
    </item>
  </channel>
</rss>
