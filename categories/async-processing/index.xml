<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Async Processing on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/async-processing/</link>
    <description>Recent content in Async Processing on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 19 Nov 2024 11:46:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/async-processing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Polling publisher</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/data-consistency/distributed-transactions/saga-pattern/transactional-messaging/outbox-pattern/polling-publisher/</link>
      <pubDate>Tue, 19 Nov 2024 11:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/data-consistency/distributed-transactions/saga-pattern/transactional-messaging/outbox-pattern/polling-publisher/</guid>
      <description>Outbox 테이블에 저장된 메시지를 주기적으로 조회(polling)하여 메시지 브로커로 발행한다.  데이터베이스 트랜잭션의 일부로 메시지를 Outbox 테이블에 저장한 후, 별도의 프로세스에서 이를 읽어 발행한다.</description>
    </item>
    <item>
      <title>Transaction log tailing</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/data-consistency/distributed-transactions/saga-pattern/transactional-messaging/outbox-pattern/transaction-log-tailing/</link>
      <pubDate>Tue, 19 Nov 2024 11:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/data-consistency/distributed-transactions/saga-pattern/transactional-messaging/outbox-pattern/transaction-log-tailing/</guid>
      <description>데이터베이스의 트랜잭션 로그를 실시간으로 읽어 변경사항을 메시지 브로커에 발행하는 방식이다.</description>
    </item>
    <item>
      <title>Transactional Outbox</title>
      <link>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/data-consistency/distributed-transactions/saga-pattern/transactional-messaging/transactional-outbox/</link>
      <pubDate>Tue, 19 Nov 2024 11:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-architecture--design/distributed-systems/data-consistency/distributed-transactions/saga-pattern/transactional-messaging/transactional-outbox/</guid>
      <description>Transactional Outbox 패턴은 데이터베이스 업데이트와 메시지 발행을 원자적으로 처리하기 위한 방법으로, 데이터베이스 트랜잭션과 메시지 발행 사이의 일관성을 보장하는 것을 목적으로 한다.</description>
    </item>
  </channel>
</rss>
