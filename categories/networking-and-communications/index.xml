<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Networking and Communications</title><link>https://buenhyden.github.io/categories/networking-and-communications/</link><description>Recent content in Networking and Communications on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 23 Dec 2024 12:35:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/categories/networking-and-communications/index.xml" rel="self" type="application/rss+xml"/><item><title>TCP/IP 4 Layers - 1. Network Access Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-1-network-access-layer/</link><pubDate>Fri, 27 Sep 2024 05:57:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-1-network-access-layer/</guid><description>
&lt;h2>네트워크 접근 계층 (Network Access Layer)&lt;/h2>&lt;p>네트워크 접근 계층(Network Access Layer)은 TCP/IP 4계층 모델에서 가장 하위 계층으로&lt;br>
OSI 7계층 모델의 물리 계층(1계층)과 데이터 링크 계층(2계층)에 해당한다.&lt;br>
데이터를 전송 매체에 맞게 포맷팅하고 물리적 하드웨어 주소를 기반으로 데이터를 주소 지정한다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/TCP%20IP%204%20Layers/tcp-ip-model-vs-osi.png"
alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>주요 기능과 역할&lt;/h3>&lt;p>네트워크 접근 계층은 세 가지 핵심적인 기능을 수행한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>프레임 캡슐화&lt;br>
데이터를 전기 신호로 변환하기 전에, 상위 계층에서 받은 데이터를 프레임이라는 단위로 캡슐화한다.&lt;br>
프레임에는 출발지와 목적지의 물리 주소(MAC 주소)가 포함되어 있어, 데이터가 올바른 목적지로 전달될 수 있도록 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>오류 제어&lt;br>
전송 중에 발생할 수 있는 데이터 손상을 감지하고 수정하는 메커니즘을 제공한다.&lt;br>
체크섬(checksum)이나 순환 중복 검사(CRC)와 같은 기술을 사용하여 데이터의 무결성을 보장한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>흐름 제어&lt;br>
송신자와 수신자 사이의 데이터 전송 속도를 조절한다.&lt;br>
수신자가 처리할 수 있는 속도보다 빠르게 데이터가 전송되는 것을 방지하여 데이터 손실을 예방한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>IP 데이터그램을 물리적 네트워크로 전송하는 방법을 정의한다.&lt;/li>
&lt;li>물리적 네트워크와의 인터페이스를 제공한다.&lt;/li>
&lt;li>데이터를 전송 매체에 맞게 포맷팅하고 물리적 하드웨어 주소를 기반으로 데이터를 주소 지정한다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위&lt;/h3>&lt;ul>
&lt;li>단위: 프레임(Frame)&lt;/li>
&lt;li>구조: 프레임 헤더 + 패킷 + 프레임 트레일러&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[프레임 헤더(14바이트)] [IP 패킷] [FCS(4바이트)]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">┌──────────────┬──────────────┬────────────┬──────────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ 목적지 MAC │ 출발지 MAC │ 타입/길이 │ 데이터 │ FCS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ (6바이트) │ (6바이트) │ (2바이트) │ │ (4바이트)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└──────────────┴──────────────┴────────────┴──────────┘&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>데이터 전송 과정&lt;/h3>&lt;p>네트워크 접근 계층에서의 데이터 전송 과정은 다음과 같이 이루어진다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>프레임 생성&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[프레임 시작 구분자] [목적지 MAC 주소] [출발지 MAC 주소] [데이터] [오류 검사] [프레임 종료 구분자]&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>물리적 주소 지정&lt;br>
MAC 주소를 사용하여 데이터의 출발지와 목적지를 지정한다.&lt;br>
MAC 주소는 네트워크 인터페이스 카드(NIC)에 고유하게 할당된 48비트 주소이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>매체 접근 제어&lt;br>
여러 장치가 동시에 네트워크를 사용하려 할 때, 충돌을 방지하기 위한 제어 메커니즘을 제공한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>네트워크 접근 계층의 중요성&lt;/h3>&lt;ol>
&lt;li>
&lt;p>신뢰성 보장&lt;br>
물리적 레벨에서의 오류 감지와 복구를 통해 데이터 전송의 신뢰성을 보장한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>상호운용성 제공&lt;br>
서로 다른 하드웨어와 소프트웨어 간의 통신을 가능하게 하는 표준화된 인터페이스를 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>성능 최적화&lt;br>
네트워크 리소스의 효율적인 사용을 위한 다양한 최적화 메커니즘을 제공한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>네트워크 접근 계층은 TCP/IP 프로토콜 스택의 기반이 되는 중요한 계층으로, 상위 계층의 모든 통신이 이 계층을 통해 이루어진다.&lt;br>
따라서 이 계층의 효율적인 동작은 전체 네트워크의 성능과 안정성에 직접적인 영향을 미친다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers and TCPIP 4 Layers</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers-and-tcpip-4-layers/</link><pubDate>Fri, 27 Sep 2024 02:11:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers-and-tcpip-4-layers/</guid><description>
&lt;h2>OSI 7Layers와 TCPIP 4계층 비교&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>비교 항목&lt;/th>
&lt;th>OSI 7계층 모델&lt;/th>
&lt;th>TCP/IP 모델&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>계층 수&lt;/td>
&lt;td>7계층&lt;/td>
&lt;td>4계층 (또는 5계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>계층 구성&lt;/td>
&lt;td>응용, 표현, 세션, 전송, 네트워크, 데이터 링크, 물리&lt;/td>
&lt;td>응용, 전송, 인터넷, 네트워크 접근 (또는 응용, 전송, 네트워크, 데이터 링크, 물리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개발 주체&lt;/td>
&lt;td>ISO (국제표준화기구)&lt;/td>
&lt;td>미국 국방부 DARPA&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개발 시기&lt;/td>
&lt;td>1984년&lt;/td>
&lt;td>1970년대 초반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개발 접근 방식&lt;/td>
&lt;td>이론적, 개념적 접근&lt;/td>
&lt;td>실용적, 프로토콜 중심 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 목적&lt;/td>
&lt;td>네트워크 통신의 표준 참조 모델&lt;/td>
&lt;td>실제 인터넷 통신의 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>유연성&lt;/td>
&lt;td>각 계층이 명확히 분리되어 유연성 높음&lt;/td>
&lt;td>계층 간 경계가 덜 명확하나 실용적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>복잡성&lt;/td>
&lt;td>상대적으로 복잡&lt;/td>
&lt;td>단순하고 구현하기 쉬움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 정의&lt;/td>
&lt;td>프로토콜을 명확히 정의하지 않음&lt;/td>
&lt;td>각 계층에 대한 프로토콜 명확히 정의&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 고려&lt;/td>
&lt;td>보안을 별도의 계층으로 고려하지 않음&lt;/td>
&lt;td>IP 계층에서 IPsec 등 보안 기능 포함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>계층 간 통신&lt;/td>
&lt;td>인접한 계층 간에만 통신&lt;/td>
&lt;td>인접하지 않은 계층 간 통신 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상용화&lt;/td>
&lt;td>실제 구현보다는 개념적 모델로 사용&lt;/td>
&lt;td>인터넷의 기반이 되어 널리 사용됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문제 해결 접근&lt;/td>
&lt;td>각 계층별 독립적 문제 해결 용이&lt;/td>
&lt;td>통합적 접근이 필요할 수 있음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 단위&lt;/td>
&lt;td>각 계층마다 다른 데이터 단위 사용 (PDU, SDU 등)&lt;/td>
&lt;td>주로 세그먼트, 패킷, 프레임 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 주소 지정&lt;/td>
&lt;td>데이터 링크 계층(MAC)과 네트워크 계층(IP)에서 처리&lt;/td>
&lt;td>인터넷 계층(IP)에서 주로 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>세션 관리&lt;/td>
&lt;td>세션 계층에서 별도로 관리&lt;/td>
&lt;td>응용 계층에서 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 표현&lt;/td>
&lt;td>표현 계층에서 별도로 처리&lt;/td>
&lt;td>응용 계층에서 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>표준화&lt;/td>
&lt;td>국제 표준으로 널리 인정됨&lt;/td>
&lt;td>사실상의 표준(de facto standard)으로 사용됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>새로운 프로토콜 추가가 상대적으로 어려움&lt;/td>
&lt;td>새로운 프로토콜 추가가 용이함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성&lt;/td>
&lt;td>각 계층에서 신뢰성 보장 메커니즘 제공&lt;/td>
&lt;td>주로 전송 계층(TCP)에서 신뢰성 보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 지향성&lt;/td>
&lt;td>연결 지향 및 비연결 지향 서비스 모두 지원&lt;/td>
&lt;td>TCP(연결 지향), UDP(비연결 지향) 프로토콜 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캡슐화 과정&lt;/td>
&lt;td>각 계층마다 헤더 추가 (7단계)&lt;/td>
&lt;td>주요 계층에서만 헤더 추가 (4단계)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>시장 수용도&lt;/td>
&lt;td>이론적 모델로 주로 사용&lt;/td>
&lt;td>실제 네트워크 구현에 널리 사용됨&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>계층 간 의존성&lt;/td>
&lt;td>각 계층이 독립적으로 동작&lt;/td>
&lt;td>계층 간 의존성이 상대적으로 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>트러블슈팅&lt;/td>
&lt;td>문제 발생 시 특정 계층 식별 용이&lt;/td>
&lt;td>문제 발생 시 여러 계층을 동시에 고려해야 할 수 있음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers - 1. Phygical Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-1-phygical-layer/</link><pubDate>Wed, 25 Sep 2024 07:18:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-1-phygical-layer/</guid><description>
&lt;h2>Physical Layer (물리적 계층)&lt;/h2>&lt;p>Physical Layer(물리 계층)는 네트워크 통신의 가장 기본적인 계층으로, 데이터의 물리적 전송을 담당한다.&lt;/p>
&lt;p>OSI 모델의 최하위 계층으로, 실제 데이터 비트를 물리적 매체를 통해 전송하는 역할을 한다. 이 계층은 데이터를 전기적, 광학적, 또는 전자기적 신호로 변환하여 전송한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi_model_physical_layer_1.png"
alt="Physical Layer"
title="Physical Layer"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>주요 역할과 기능&lt;/h3>&lt;ol>
&lt;li>
&lt;p>데이터의 물리적 전송:&lt;br>
컴퓨터의 0과 1로 이루어진 디지털 데이터를 전기 신호, 빛, 전파 등의 물리적 신호로 변환한다.&lt;br>
예를 들어:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>디지털 데이터: 1 0 1 1 0
물리적 신호: 높음-낮음-높음-높음-낮음 (전압 변화)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>전송 매체 관리:&lt;br>
다양한 종류의 케이블과 무선 매체를 통해 데이터를 전송한다.&lt;/p>
&lt;ol>
&lt;li>유선 매체:
&lt;ul>
&lt;li>트위스트 페어 케이블 (일반적인 랜선)&lt;/li>
&lt;li>동축 케이블 (케이블 TV에서 사용)&lt;/li>
&lt;li>광섬유 케이블 (빛을 사용한 고속 통신)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>무선 매체:
&lt;ul>
&lt;li>전파 (Wi-Fi, 휴대전화)&lt;/li>
&lt;li>적외선 (TV 리모컨)&lt;/li>
&lt;li>마이크로파 (위성 통신)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>비트 동기화: 송신자와 수신자 간의 비트 전송 타이밍을 맞춘다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 속도 제어: 초당 전송되는 비트 수를 관리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>물리적 토폴로지 정의: 네트워크의 물리적 배치 방식을 지정한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>데이터 단위&lt;/h3>&lt;p>데이터를 비트(Bit) 단위로 처리하며, 이 비트들은 전기 신호, 빛, 또는 전파 등의 물리적인 형태로 변환되어 전송된다.&lt;/p>
&lt;p>비트 스트림은 다음과 같은 구조로 구성된다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[프리앰블] [데이터 비트] [포스트앰블]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>각 필드의 역할은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>프리앰블 (Preamble)
&lt;ul>
&lt;li>수신자의 비트 동기화를 위한 특별한 비트 패턴&lt;/li>
&lt;li>일반적으로 반복되는 패턴 사용 (예: &amp;ldquo;10101010&amp;rdquo;)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 비트 (Data Bits)
&lt;ul>
&lt;li>실제 전송하고자 하는 정보&lt;/li>
&lt;li>인코딩 방식에 따라 변환됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>포스트앰블 (Postamble)
&lt;ul>
&lt;li>전송 종료를 나타내는 비트 패턴&lt;/li>
&lt;li>프레임 간 구분을 위해 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>디지털 데이터를 물리적 신호(전기, 광학, 무선)로 변환한다.&lt;/li>
&lt;li>수신 시 물리적 신호를 디지털 데이터(0과 1)로 변환하여 상위 계층으로 전달한다.&lt;/li>
&lt;/ol>
&lt;h4>신호 변환과 인코딩 방식&lt;/h4>&lt;p>물리 계층에서는 디지털 인코딩을 통하여 이진 데이터(0과 1)를 물리적 신호로 변환한다.&lt;/p>
&lt;ol>
&lt;li>단극성 인코딩 (Unipolar Encoding)&lt;br>
가장 단순한 형태의 인코딩 방식.&lt;br>
비트 0은 전압 없음(0V)으로 표현된다.&lt;br>
장점: 구현이 간단함&lt;br>
단점: DC 성분이 있어 전력 소비가 크고, 클록 복구가 어려움&lt;/li>
&lt;li>NRZ (Non-Return to Zero) 인코딩
&lt;ol>
&lt;li>NRZ-L (Level)&lt;br>
비트값에 따라 전압 레벨이 결정된다.&lt;/li>
&lt;li>NRZ-I (Invert)&lt;br>
비트 1에서 전압 레벨이 반전되고, 비트 0에서는 이전 레벨을 유지된다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Manchester 인코딩&lt;br>
비트당 두 개의 신호 레벨을 사용하며, 각 비트 주기의 중간에서 전이가 발생한다. IEEE 802.3 (이더넷)에서 사용된다.&lt;br>
장점:
&lt;ul>
&lt;li>클록 정보가 데이터에 포함됨&lt;/li>
&lt;li>DC 성분이 없음&lt;/li>
&lt;li>오류 검출이 용이함&lt;br>
단점:&lt;/li>
&lt;li>대역폭 요구사항이 높음&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>차동 Manchester 인코딩&lt;br>
Manchester 인코딩의 변형으로, 비트값에 따라 전이의 유무가 결정된다.&lt;/li>
&lt;li>MLT-3 (Multi-Level Transition) 인코딩&lt;br>
세 가지 신호 레벨(+V, 0, -V)을 사용하며, 비트 1에서만 다음 레벨로 순차적으로 전이된다.&lt;/li>
&lt;li>B8ZS (Bipolar with 8-Zero Substitution)&lt;br>
길다란 0의 시퀀스를 특별한 패턴으로 대체하여 클록 복구를 용이하게 한다.&lt;/li>
&lt;/ol>
&lt;p>각 인코딩 방식은 특정한 용도와 환경에 최적화되어 있다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>고속 네트워크: MLT-3 (100Base-TX)&lt;/li>
&lt;li>이더넷: Manchester (10Base-T)&lt;/li>
&lt;li>장거리 통신: B8ZS (T1 회선)&lt;/li>
&lt;/ul>
&lt;p>인코딩 방식 구현 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 단극성 인코딩 (Unipolar Encoding)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">unipolar_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 5V for bit 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 0V for bit 0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NRZ-L (Level)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">nrz_l_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># +5V&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># -5V&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NRZ-I (Invert)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">nrz_i_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="c1"># 시작 레벨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">current_level&lt;/span> &lt;span class="c1"># 레벨 반전&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_level&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Manchester 인코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">manchester_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="c1"># 하향 전이&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="c1"># 상향 전이&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 차동 Manchester 인코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">differential_manchester_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">previous_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 항상 중간에서 전이 발생&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">previous_level&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">previous_level&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">previous_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">previous_level&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시작에서 전이 후 중간에서도 전이&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">previous_level&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">previous_level&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">previous_level&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">previous_level&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># MLT-3 (Multi-Level Transition) 인코딩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">mlt3_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">levels&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 가능한 신호 레벨&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">current_index&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">levels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">current_index&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># B8ZS (Bipolar with 8-Zero Substitution)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">b8zs_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bits&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">zero_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">last_pulse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="c1"># 마지막 펄스의 극성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bits&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">bit&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">zero_count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">zero_count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 8개의 0을 특별한 패턴으로 대체&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">violation_pattern&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">last_pulse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">last_pulse&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">last_pulse&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">last_pulse&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">extend&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">violation_pattern&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">zero_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">last_pulse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">last_pulse&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">signal&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">last_pulse&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">zero_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">signal&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주의 사항과 고려 사항&lt;/h3>&lt;p>물리 계층을 설계하고 운영할 때 다음 사항들을 고려해야 한다:&lt;/p>
&lt;ol>
&lt;li>신호 감쇠 (Attenuation)&lt;br>
거리에 따른 신호 세기 감소를 고려해야 한다.&lt;/li>
&lt;li>간섭 (Interference)
&lt;ul>
&lt;li>전자기적 간섭&lt;/li>
&lt;li>크로스토크&lt;/li>
&lt;li>외부 노이즈&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>케이블 설치와 유지보수
&lt;ul>
&lt;li>최대 케이블 길이 준수&lt;/li>
&lt;li>적절한 접지&lt;/li>
&lt;li>물리적 보호&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>비용과 확장성
&lt;ul>
&lt;li>초기 설치 비용&lt;/li>
&lt;li>유지보수 비용&lt;/li>
&lt;li>향후 확장 가능성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>TCP/IP 4계층 - 2. Internet Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-2-internet-layer/</link><pubDate>Fri, 27 Sep 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-2-internet-layer/</guid><description>
&lt;h2>Internet Layer&lt;/h2>&lt;p>인터넷 계층은 TCP/IP 프로토콜 스택에서 네트워크 간의 통신을 담당하는 핵심 계층이다.&lt;br>
OSI 7계층 모델의 네트워크 계층(3계층)에 해당하며, 이 계층은 네트워크 간 데이터 전송을 담당하며, 데이터 패킷이 출발지에서 목적지까지 효율적으로 전달되도록 라우팅과 주소 지정(Addressing)을 수행한다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/TCP%20IP%204%20Layers/tcp-ip-model-vs-osi.png"
alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>Internet Layer의 주요 역할&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>패킷 전달 및 라우팅&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>데이터 패킷을 발신지에서 목적지로 전달하며, 중간 네트워크 장치(예: 라우터)를 통해 최적 경로를 선택한다.&lt;/li>
&lt;li>네트워크 간 경로를 설정하고, 데이터가 올바른 목적지에 도달하도록 보장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>주소 지정(Addressing)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IP 주소를 사용하여 발신지와 목적지를 식별한다.&lt;/li>
&lt;li>논리적 주소 체계를 활용하여 서로 다른 네트워크 간 통신을 가능하게 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>패킷 캡슐화 및 디캡슐화&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>상위 계층(전송 계층)에서 받은 데이터를 IP 패킷으로 캡슐화하여 전송한다.&lt;/li>
&lt;li>수신 측에서는 IP 패킷을 디캡슐화하여 상위 계층으로 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>프로토콜 관리&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>다양한 프로토콜(IP, ARP, ICMP 등)을 통해 데이터 전송 및 네트워크 제어를 수행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Internet Layer의 특징&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>비연결형 서비스&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>IP는 비연결형 프로토콜로, 데이터를 송신하기 전에 연결을 설정하지 않는다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>라우팅 기능&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>여러 네트워크 간 경로를 설정하고 최적화를 수행한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>독립적인 전송&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>각 패킷은 독립적으로 처리되며, 목적지에 도달할 때 순서가 바뀔 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>확장성&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>인터넷 규모의 대규모 네트워크 환경에서도 효율적으로 작동하도록 설계되었다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>Internet Layer의 데이터 단위&lt;/h3>&lt;ul>
&lt;li>단위: 패킷(Packet)&lt;/li>
&lt;li>구조: IP 헤더 + 전송 계층 세그먼트/데이터그램&lt;br>
상위 계층(전송 계층)에서 받은 세그먼트를 IP 헤더와 함께 캡슐화하여 패킷으로 만든다.&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[IP 헤더(20바이트)] [TCP/UDP 세그먼트]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">┌────┬────┬────────┬──────┬────┬────────┬──────────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│Ver │IHL │ ToS │길이 │ID │플래그 │ TTL │ …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│(4) │(4) │ (8) │(16) │(16)│ (16) │ (8) │
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└────┴────┴────────┴──────┴────┴────────┴──────────┘&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Internet Layer의 한계&lt;/h3>&lt;ul>
&lt;li>신뢰성 부족: 데이터 전송의 신뢰성을 보장하지 않으며, 패킷 손실이나 순서 변경이 발생할 수 있다.&lt;/li>
&lt;li>오류 복구 부재: 오류 검출 및 복구는 상위 계층(전송 계층)에서 처리해야 한다.&lt;/li>
&lt;/ul>
&lt;h3>Internet Layer의 중요성&lt;/h3>&lt;p>Internet Layer는 네트워크 간 데이터를 효율적으로 전달하고 글로벌 인터넷 연결성을 보장하는 핵심 계층이다.&lt;br>
IP와 같은 프로토콜은 인터넷 통신의 기반을 제공하며, 라우팅 및 주소 지정 기능은 현대 네트워크 시스템에서 필수적이다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers - 2. DataLink Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-2-datalink-layer/</link><pubDate>Wed, 25 Sep 2024 07:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-2-datalink-layer/</guid><description>
&lt;h2>DataLink Layer (데이터 연결 계층)&lt;/h2>&lt;p>OSI 7계층의 &lt;strong>Data Link Layer&lt;/strong> (데이터 연결 계층)은 OSI 모델의 두 번째 계층으로, 물리적 네트워크에서 노드 간의 데이터 전송을 담당한다.&lt;br>
이 계층은 상위 계층에서 받은 패킷을 프레임으로 캡슐화하고, 물리적 주소를 추가하여 데이터 전송을 관리한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/data_link_layer_osi_model.png"
alt="Data Link Layer"
title="Data Link Layer"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>기능&lt;/h3>&lt;ol>
&lt;li>프레이밍 (Framing):&lt;br>
패킷을 프레임으로 나누어 전송하며, 각 프레임의 시작과 끝을 정의하는 비트 패턴을 추가한다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>프레이밍 (Framing)&lt;br>
데이터링크 계층에서의 프레이밍은 상위 계층에서 받은 데이터를 물리적 전송에 적합한 크기의 프레임(frame)으로 나누는 과정이다. 각 프레임은 데이터를 안전하게 전달하기 위한 추가 정보들을 포함하게 된다.&lt;/p>
&lt;p>프레임의 구조와 각 부분의 역할&lt;br>
일반적인 프레임은 다음과 같은 구조를 가진다:&lt;/p>
&lt;ul>
&lt;li>시작 구분자(Start Delimiter): 프레임의 시작을 알리는 특별한 비트 패턴이다.&lt;/li>
&lt;li>헤더(Header): 송신자와 수신자의 MAC 주소, 프레임 유형, 제어 정보 등을 포함한다.&lt;/li>
&lt;li>페이로드(Payload): 실제 전송하고자 하는 데이터가 들어있는 부분.&lt;/li>
&lt;li>트레일러(Trailer): 오류 검출을 위한 체크섬(CRC)과 프레임 끝을 나타내는 구분자를 포함한다.&lt;/li>
&lt;/ul>
&lt;p>프레이밍 방식의 종류&lt;br>
프레이밍에는 여러 가지 방식이 있으며, 각각의 특징을 이해하는 것이 중요하다:&lt;/p>
&lt;ul>
&lt;li>문자 기반 프레이밍
&lt;ul>
&lt;li>특별한 문자를 사용하여 프레임의 시작과 끝을 표시한다.&lt;/li>
&lt;li>예를 들어, ASCII 문자의 STX(Start of Text)와 ETX(End of Text)를 사용할 수 있다. 이는 간단하지만, 데이터 안에 이러한 특별 문자가 포함되어 있을 경우 문제가 될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>비트 스터핑(Bit Stuffing)
&lt;ul>
&lt;li>특정 비트 패턴을 프레임의 경계로 사용하고, 데이터 내에 이러한 패턴이 나타나지 않도록 추가 비트를 삽입한다.&lt;/li>
&lt;li>예를 들어, 여섯 개의 연속된 1을 경계로 사용한다면, 데이터 내에서 다섯 개의 연속된 1이 나타날 때마다 0을 삽입한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>바이트 수 표시&lt;br>
프레임의 시작 부분에 전체 프레임의 길이를 명시한다.&lt;br>
이는 단순하고 효율적이지만, 길이 필드가 손상될 경우 프레임 전체를 잃을 수 있다.&lt;/p>
&lt;p>프레이밍의 중요성과 이점
- 신뢰성 있는 전송: 프레이밍은 데이터의 경계를 명확히 하고 오류를 검출할 수 있게 해준다.
- 흐름 제어와 오류 제어: 각 프레임 단위로 흐름 제어와 오류 제어를 수행할 수 있다. 문제가 발생하면 해당 프레임만 재전송하면 된다.
- 효율적인 네트워크 사용: 적절한 크기의 프레임으로 나눔으로써 네트워크 자원을 효율적으로 사용할 수 있다.&lt;/p>
&lt;p>프레이밍 관련 주의사항&amp;gt;
- 프레임 크기: 너무 크면 오류 가능성이 높아지고, 너무 작으면 오버헤드가 증가한다. 따라서 적절한 크기 선택이 중요하다.&lt;br>
오버헤드 고려: 각 프레임마다 헤더와 트레일러가 추가되므로, 이로 인한 오버헤드를 고려해야 한다.&lt;br>
프레임 동기화: 수신자가 프레임의 시작과 끝을 정확히 인식할 수 있도록 해야 한다.&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>```python
class Frame:
def __init__(self):
self.start_delimiter = 0x7E # 프레임 시작 표시
self.destination_address = None # 목적지 MAC 주소
self.source_address = None # 출발지 MAC 주소
self.data = None # 실제 데이터
self.fcs = None # Frame Check Sequence
self.end_delimiter = 0x7E # 프레임 종료 표시
```
&lt;/code>&lt;/pre>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>물리적 주소 지정 (Physical Addressing)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>각 프레임에 송신자와 수신자의 MAC 주소를 포함시킨다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>오류 감지 및 수정 (Error Detection and Correction)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>체크섬, CRC(순환 중복 검사) 등을 사용하여 오류를 감지하고, 오류 발생 시 재전송 요청을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>CRC(Cyclic Redundancy Check)&lt;br>
데이터의 무결성을 확인하기 위한 오류 감지 코드.&lt;/p>
&lt;ul>
&lt;li>목적
&lt;ul>
&lt;li>데이터 전송 중 발생할 수 있는 오류를 감지한다.&lt;/li>
&lt;li>저장 장치에서 데이터의 정확성을 확인한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>작동 방식
&lt;ol>
&lt;li>데이터를 이진 다항식으로 취급한다.&lt;/li>
&lt;li>미리 정의된 생성 다항식으로 데이터를 나눈다.&lt;/li>
&lt;li>나눗셈의 나머지가 CRC 체크섬이 된다.&lt;/li>
&lt;li>이 체크섬을 데이터에 추가하여 전송한다.&lt;/li>
&lt;li>수신자는 같은 과정을 반복하여 체크섬을 계산한다.&lt;/li>
&lt;li>계산된 체크섬과 받은 체크섬을 비교한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>장점
&lt;ul>
&lt;li>구현이 간단하다.&lt;/li>
&lt;li>하드웨어로 쉽게 구현할 수 있다.&lt;/li>
&lt;li>일반적인 전송 오류를 효과적으로 감지한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>활용
&lt;ul>
&lt;li>네트워크 통신에서 데이터 무결성 확인.&lt;/li>
&lt;li>저장 장치에서 데이터 정확성 검증&lt;/li>
&lt;li>다양한 통신 프로토콜에서 오류 감지에 사용.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>
&lt;p>&lt;strong>흐름 제어 (Flow Control)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>송신자가 수신자의 처리 능력을 초과하지 않도록 데이터를 조절한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>매체 접근 제어 (Media Access Control)&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>여러 장치가 동일한 전송 매체를 사용할 때 충돌을 방지하기 위한 규칙을 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>&lt;strong>복잡성&lt;/strong>: 데이터 링크 계층은 하드웨어의 복잡성을 숨기고, 상위 계층에 간단한 인터페이스를 제공한다.&lt;/li>
&lt;li>&lt;strong>하위 계층 의존성&lt;/strong>: 물리적 계층에 의존하여 데이터를 전송하며, 물리적 매체의 특성에 따라 다르게 동작할 수 있다.&lt;/li>
&lt;/ul>
&lt;h4>두 개의 서브 레이어&lt;/h4>&lt;p>데이터 링크 계층은 두 개의 부계층으로 나뉜다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">[데이터링크 계층]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── LLC (Logical Link Control) - 상위 계층
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── MAC (Media Access Control) - 하위 계층&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>LLC(Logical Link Control) 계층&lt;/h5>&lt;p>데이터링크 계층의 상위 계층으로, 네트워크 계층과 MAC 계층 사이의 인터페이스 역할을 한다.&lt;br>
프로토콜 다중화 및 흐름 제어 기능 제공한다.&lt;/p>
&lt;p>주요 기능:&lt;/p>
&lt;ul>
&lt;li>다중화 메커니즘 제공 (여러 네트워크 프로토콜이 동일한 네트워크 매체를 공유할 수 있게 함)&lt;/li>
&lt;li>흐름 제어&lt;/li>
&lt;li>오류 관리&lt;/li>
&lt;li>프레임 동기화&lt;/li>
&lt;/ul>
&lt;h5>MAC(Media Access Control) 계층&lt;/h5>&lt;p>데이터링크 계층의 하위 계층으로, 물리적 매체와 직접 상호작용하는 하드웨어를 제어한다.&lt;br>
물리적 매체 접근 관리 및 주소 지정&lt;/p>
&lt;p>MAC 주소 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>00:1A:2B:3C:4D:5E&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>주요 기능:&lt;/p>
&lt;ul>
&lt;li>프레임 구분 및 인식&lt;/li>
&lt;li>주소 지정 (MAC 주소 사용)&lt;/li>
&lt;li>데이터 전송의 투명성 제공&lt;/li>
&lt;li>오류 보호 (프레임 체크 시퀀스 생성 및 확인)&lt;/li>
&lt;li>물리적 전송 매체에 대한 접근 제어&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위와 기본 구조&lt;/h3>&lt;p>데이터 연결 계층의 기본 데이터 단위는 프레임(Frame)이다.&lt;/p>
&lt;p>기본 구조는 이와 같다:&lt;/p>
&lt;ul>
&lt;li>헤더(Header): MAC 주소 및 제어 정보 포함&lt;/li>
&lt;li>데이터(Data): 상위 계층에서 받은 패킷&lt;/li>
&lt;li>트레일러(Trailer): 오류 검출 정보 포함&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[프레임 시작 구분자] [주소 필드] [제어 필드] [데이터 필드] [FCS] [프레임 종료 구분자]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>각 필드의 역할은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>프레임 구분자
&lt;ul>
&lt;li>8비트 크기&lt;/li>
&lt;li>프레임의 시작과 끝을 표시&lt;/li>
&lt;li>일반적으로 특별한 비트 패턴 사용 (예: 10101011)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>주소 필드
&lt;ul>
&lt;li>MAC 주소 포함 (출발지, 목적지)&lt;/li>
&lt;li>각각 48비트 길이 (예: 00:1A:2B:3C:4D:5E)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>제어 필드
&lt;ul>
&lt;li>프레임 종류 식별&lt;/li>
&lt;li>순서 번호&lt;/li>
&lt;li>흐름 제어 정보&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 필드
&lt;ul>
&lt;li>실제 전송할 데이터&lt;/li>
&lt;li>일반적으로 46~1500바이트&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>FCS(Frame Check Sequence)
&lt;ul>
&lt;li>오류 검출을 위한 체크섬&lt;/li>
&lt;li>CRC-32 알고리즘 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>상위 계층에서 패킷을 수신하면 이를 프레임으로 캡슐화한다.&lt;/li>
&lt;li>각 프레임에 송신자와 수신자의 MAC 주소를 추가하고, 오류 검출 정보를 포함시킨다.&lt;/li>
&lt;li>프레임을 물리적 계층에 전달하여 전송한다.&lt;/li>
&lt;li>수신 측에서는 비트를 받아 프레임으로 조립하고, 오류를 검사한 후 상위 계층으로 전달한다.&lt;/li>
&lt;/ol>
&lt;h3>주의 사항&lt;/h3>&lt;ul>
&lt;li>충돌 관리: 여러 장치가 동일한 매체를 사용할 때 충돌이 발생할 수 있으므로 이를 관리해야 한다.&lt;/li>
&lt;li>신뢰성 보장: 데이터 링크 계층은 신뢰성 있는 전송을 보장하기 위해 오류 감지 및 수정 기능이 필요하다.&lt;/li>
&lt;li>다양한 네트워크 기술 지원: Ethernet, Wi-Fi 등 다양한 기술에 따라 동작 방식이 달라질 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>주요 프로토콜과 기술&lt;/h3>&lt;h4>이더넷(Ethernet)&lt;/h4>&lt;p>컴퓨터 네트워크 기술 중 가장 널리 사용되는 근거리 통신망(LAN) 기술.&lt;/p>
&lt;p>이더넷은 CSMA/CD(Carrier Sense Multiple Access with Collision Detection) 방식을 사용한다.&lt;br>
이를 실생활에 비유하면 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>다른 사람이 말하고 있는지 확인 (Carrier Sense)&lt;/li>
&lt;li>말하기 시작 (Multiple Access)&lt;/li>
&lt;li>다른 사람과 동시에 말했는지 확인 (Collision Detection)&lt;/li>
&lt;li>잠시 기다렸다가 다시 시도&lt;/li>
&lt;/ol>
&lt;p>이더넷(Ethernet) 프레임의 구조:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">[프리앰블(8바이트)][목적지 MAC(6바이트)][출발지 MAC(6바이트)][타입(2바이트)][데이터(46-1500바이트)][체크섬(4바이트)]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>
#### 이더넷 프레임의 구조
이더넷 프레임은 데이터를 전송하기 위한 기본 단위:
```python
class EthernetFrame:
def __init__(self):
self.preamble = &amp;#34;10101010&amp;#34; * 7 # 동기화
self.sfd = &amp;#34;10101011&amp;#34; # 프레임 시작
self.dest_mac = &amp;#34;&amp;#34; # 목적지 MAC 주소
self.src_mac = &amp;#34;&amp;#34; # 출발지 MAC 주소
self.type = &amp;#34;&amp;#34; # 프로토콜 타입
self.data = &amp;#34;&amp;#34; # 실제 데이터
self.fcs = &amp;#34;&amp;#34; # 오류 검사&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Preamble: 7바이트(56비트)의 특별한 패턴으로, 네트워크 장비들의 시계를 동기화하는 역할.&lt;/li>
&lt;li>SFD (Start Frame Delimiter): 1바이트(8비트)로, 실제 프레임의 시작을 알리는 표시. 프리앰블과 비슷하지만 마지막 비트가 다른 이 패턴은 &amp;ldquo;이제 진짜 데이터가 시작됩니다&amp;quot;라고 알리는 신호와 같다.&lt;/li>
&lt;li>Destination MAC Address (목적지 MAC 주소): 6바이트(48비트) 길이의 수신자 하드웨어 주소. 각 네트워크 장비는 이 주소를 보고 자신에게 온 프레임인지 판단한다. 예를 들어 &amp;ldquo;00:1A:2B:3C:4D:5E&amp;rdquo; 같은 형식을 가진다.&lt;/li>
&lt;li>Source MAC Address (출발지 MAC 주소): 역시 6바이트(48비트) 길이로, 보내는 장비의 하드웨어 주소. 응답이 필요할 때 이 주소로 회신할 수 있다.&lt;/li>
&lt;li>Type (또는 Length): 2바이트(16비트)로, 두 가지 용도로 사용된다:
&lt;ul>
&lt;li>1500보다 큰 값: 상위 계층 프로토콜의 종류를 나타낸다 (예: IPv4는 0x0800).&lt;/li>
&lt;li>1500이하의 값: 데이터 필드의 길이를 나타낸다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Data (페이로드): 46~1500바이트의 실제 전송할 데이터. 최소 46바이트가 되지 않으면 패딩(padding)을 추가하여 채운다. 이는 너무 작은 프레임으로 인한 충돌 감지의 어려움을 방지하기 위함.&lt;/li>
&lt;li>FCS (Frame Check Sequence): 4바이트(32비트)의 오류 검사 코드. CRC(Cyclic Redundancy Check) 알고리즘을 사용하여 프레임이 전송 중에 손상되었는지 확인.&lt;/li>
&lt;/ul>
&lt;p>이더넷의 장점과 특징:&lt;/p>
&lt;ol>
&lt;li>설치와 유지보수의 용이성
&lt;ul>
&lt;li>새로운 기기 추가가 쉬움&lt;/li>
&lt;li>문제 발견이 쉬움&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>확장성:
&lt;ul>
&lt;li>네트워크 확장이 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이더넷의 현대적 발전:&lt;/p>
&lt;ol>
&lt;li>Power over Ethernet (PoE):&lt;br>
네트워크 케이블을 통해 전력도 함께 공급&lt;/li>
&lt;li>에너지 효율적 이더넷:&lt;br>
사용하지 않을 때 전력 소비 감소&lt;/li>
&lt;/ol>
&lt;p>미래 발전 방향:&lt;/p>
&lt;ol>
&lt;li>속도 향상:&lt;br>
현재 400Gbps 이더넷까지 개발되어 있으며, 더 빠른 속도를 위한 연구가 진행 중.&lt;/li>
&lt;li>스마트 네트워킹:&lt;br>
인공지능과 결합하여 더 효율적인 네트워크 관리가 가능해질 것으로 예상.&lt;/li>
&lt;/ol>
&lt;h4>PPP(Point-to-Point Protocol)&lt;/h4>&lt;p>두 스테이션 간의 통신을 담당하며 강력한 보안기능과 여러가지 네트워크 계층 프로토콜을 한꺼번에 지원한다.&lt;/p>
&lt;p>PPP(Point-to-Point Protocol)는 VPN(Virtual Private Network) 기술의 기초가 되었으며, 모바일 네트워크에도 PPP의 개념이 활용된다.&lt;/p>
&lt;p>연결 설정 과정은 다음과 같은 단계로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>LCP(Link Control Protocol) 단계&lt;/li>
&lt;li>인증 단계 (선택사항)&lt;/li>
&lt;li>NCP(Network Control Protocol) 단계&lt;/li>
&lt;/ol>
&lt;p>PPP의 주요 구성 요소:&lt;/p>
&lt;ol>
&lt;li>LCP(Link Control Protocol): 링크를 설정하고 유지하는 역할을 담당한다.
&lt;ul>
&lt;li>최대 전송 단위(MTU) 설정&lt;/li>
&lt;li>인증 프로토콜 선택&lt;/li>
&lt;li>품질 모니터링 설정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인증 프로토콜: 두 가지 주요 인증 방식을 제공한다:
&lt;ol>
&lt;li>PAP(Password Authentication Protocol)&lt;/li>
&lt;li>CHAP(Challenge Handshake Authentication Protocol)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>NCP(Network Control Protocol): 네트워크 계층 프로토콜을 설정한다.
&lt;ol>
&lt;li>IP 주소 할당&lt;/li>
&lt;li>DNS 서버 설정&lt;/li>
&lt;li>라우팅 정보 교환&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>PPP 프레임의 기본 구조:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PPPFrame&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;01111110&amp;#39;&lt;/span> &lt;span class="c1"># 시작/끝 표시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">address&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;FF&amp;#39;&lt;/span> &lt;span class="c1"># 브로드캐스트 주소&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">control&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;03&amp;#39;&lt;/span> &lt;span class="c1"># 제어 필드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">protocol&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1"># 상위 계층 프로토콜&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">payload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1"># 실제 데이터&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fcs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="c1"># 오류 검사&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Flag (&amp;lsquo;01111110&amp;rsquo;): 플래그는 프레임의 시작과 끝을 나타내는 1바이트의 특별한 비트 패턴. 01111110이라는 고유한 패턴을 사용하여 프레임의 시작과 끝을 명확하게 구분한다. 만약 데이터 내용 중에 이 패턴이 우연히 나타나면 비트 스터핑(bit stuffing)이라는 기술을 사용하여 구분한다.&lt;/li>
&lt;li>Address (&amp;lsquo;FF&amp;rsquo;): PPP는 두 지점 간의 직접 연결이므로, 복잡한 주소 지정이 필요하지 않다. 따라서 이 필드는 항상 &amp;lsquo;FF&amp;rsquo;(브로드캐스트 주소)라는 단일 값을 사용한다.&lt;/li>
&lt;li>Control (&amp;lsquo;03&amp;rsquo;): 제어 필드는 프레임의 종류와 기능을 나타낸다.&lt;br>
기본값인 &amp;lsquo;03&amp;rsquo;은 비번호화된 정보를 의미이다.&lt;br>
제어 필드는 다음과 같은 정보를 포함할 수 있다:&lt;br>
- 프레임의 종류 (정보, 감독, 비번호)&lt;br>
- 시퀀스 번호&lt;br>
- 확인 응답 정보&lt;/li>
&lt;li>Protocol: 상위 계층에서 사용하는 프로토콜의 종류를 나타내는 2바이트 필드.&lt;br>
예를 들어:&lt;br>
- 0x0021: IPv4&lt;br>
- 0x0057: IPv6&lt;br>
- 0xc021: LCP (Link Control Protocol)&lt;br>
- 0x8021: IPCP (IP Control Protocol)&lt;/li>
&lt;li>Payload (실제 데이터): 전송하고자 하는 실제 데이터가 들어있는 필드. 이 부분의 크기는 가변적이며, MTU(Maximum Transmission Unit)에 따라 제한된다.&lt;br>
PPP는 다음과 같은 특징을 가진 데이터를 전송할 수 있다:
&lt;ul>
&lt;li>일반적인 IP 패킷&lt;/li>
&lt;li>압축된 TCP/IP 헤더&lt;/li>
&lt;li>인증 데이터&lt;/li>
&lt;li>링크 제어 정보&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>FCS (Frame Check Sequence): 프레임의 무결성을 검사하기 위한 오류 검사 코드. 기본적으로 16비트 CRC를 사용하지만, 선택적으로 32비트 CRC를 사용할 수도 있다.&lt;br>
FCS는 다음과 같은 기능을 수행한다:
&lt;ul>
&lt;li>전송 중 발생할 수 있는 비트 오류 검출&lt;/li>
&lt;li>데이터 손상 여부 확인&lt;/li>
&lt;li>필요한 경우 재전송 요청&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>PPP의 특징과 장점:&lt;/p>
&lt;ol>
&lt;li>오류 감지와 복구: 데이터 전송 중 발생하는 오류를 감지하고 처리한다.
&lt;ul>
&lt;li>프레임 체크섬 검사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>다중 프로토콜 지원: IP뿐만 아니라 다양한 네트워크 프로토콜을 지원한다.
&lt;ul>
&lt;li>IP 프로토콜 지원&lt;/li>
&lt;li>IPX 프로토콜 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>압축 기능: 데이터를 압축하여 전송 효율을 높인다.
&lt;ul>
&lt;li>헤더 압축&lt;/li>
&lt;li>데이터 압축&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>HDLC(High-Level Data Link Control)&lt;/h4>&lt;p>두 장치 간에 데이터를 안전하고 효율적으로 전송하기 위한 데이터 링크 계층 프로토콜.&lt;/p>
&lt;p>HDLC의 작동 방식:&lt;/p>
&lt;ol>
&lt;li>연결 설정:&lt;br>
SABM(Set Asynchronous Balanced Mode) 프레임 전송&lt;br>
UA(Unnumbered Acknowledgment) 응답 대기&lt;/li>
&lt;li>데이터 전송:&lt;br>
정보 프레임 생성 및 전송&lt;br>
확인응답 대기&lt;/li>
&lt;li>오류 제어:&lt;br>
HDLC는 다음과 같은 방식으로 오류를 처리한다:&lt;br>
- REJ(Reject) 프레임 전송&lt;br>
- 재전송 대기&lt;/li>
&lt;/ol>
&lt;p>HDLC 프레임의 구조:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>[Flag(8비트)][주소(8비트)][제어(8/16비트)][정보(가변길이)][FCS(16/32비트)][Flag(8비트)]&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>각 필드의 역할:
&lt;ol>
&lt;li>Flag (01111110):&lt;br>
프레임의 시작과 끝을 나타내는 특별한 비트 패턴.&lt;br>
마치 편지의 봉투와 같은 역할을 한다.&lt;/li>
&lt;li>주소 필드:&lt;br>
데이터를 받을 장치의 주소를 나타낸다.&lt;/li>
&lt;li>제어 필드:&lt;br>
프레임의 종류와 순서 번호 등을 나타낸다.
&lt;ul>
&lt;li>정보 프레임(I-frame): 실제 데이터 전송&lt;/li>
&lt;li>감독 프레임(S-frame): 흐름 제어와 오류 복구&lt;/li>
&lt;li>비번호 프레임(U-frame): 연결 관리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>HDLC의 주요 특징:&lt;/p>
&lt;ol>
&lt;li>비트 스터핑: 프레임 내에서 플래그 패턴이 우연히 나타나는 것을 방지한다.&lt;/li>
&lt;li>전이중 통신: 양방향으로 동시에 데이터를 전송할 수 있다:&lt;/li>
&lt;/ol>
&lt;p>실제 활용 사례:&lt;/p>
&lt;ol>
&lt;li>전용선 통신: 두 지점 간의 안정적인 데이터 통신에 사용된다.&lt;/li>
&lt;li>라우터 간 통신: 네트워크 장비 간의 데이터 전송에 활용된다.&lt;/li>
&lt;/ol>
&lt;h3>실생활 예시로 이해하기&lt;/h3>&lt;ol>
&lt;li>
&lt;p>Wi-Fi 연결 과정:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>1. 노트북이 공유기를 발견
2. MAC 주소를 확인하여 연결 요청
3. 공유기가 응답하고 연결 수립
4. 데이터 교환 시작&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>스마트폰 핫스팟:&lt;br>
다른 기기와 연결될 때 MAC 주소를 통한 식별이 이루어진다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>문제 해결과 주의사항&lt;/h3>&lt;p>일반적인 문제들과 해결 방법:&lt;/p>
&lt;ol>
&lt;li>MAC 주소 충돌&lt;/li>
&lt;li>프레임 손실: 재전송 메커니즘을 통해 해결한다.&lt;/li>
&lt;/ol>
&lt;h3>데이터링크 계층의 발전 방향&lt;/h3>&lt;ol>
&lt;li>
&lt;p>속도 개선:&lt;br>
새로운 이더넷 표준의 개발:&lt;br>
- 10 Gigabit Ethernet&lt;br>
- 40/100 Gigabit Ethernet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>보안 강화:&lt;br>
MAC 주소 필터링, 포트 보안 등의 기술 발전.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>에너지 효율:&lt;br>
그린 이더넷 기술의 발전:&lt;br>
- Energy Efficient Ethernet (IEEE 802.3az)&lt;br>
- 저전력 모드 지원&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Network Layer - OSI 7 계층</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/</link><pubDate>Wed, 25 Sep 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/</guid><description>
&lt;h2>OSI 7 계층 (Open Systems Interconnection Reference Model)&lt;/h2>&lt;p>네트워크 통신의 표준화된 프레임워크로, 다양한 통신 시스템 간의 상호 운용성을 촉진하기 위해 국제표준화기구 (ISO) 에서 1984 년에 개발.&lt;br>
네트워크 통신을 7 개의 계층으로 나누어 각 계층별로 특정 기능과 역할을 담당하게 함으로써 네트워크 통신을 구조적으로 이해하고 구현할 수 있게 함.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi-model-7-layers.svg"
alt="OSI 7Layers"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/what-is-a-protocol/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/network-layer/what-is-a-protocol/&lt;/a> _&lt;/p>
&lt;h3>의의&lt;/h3>&lt;ul>
&lt;li>표준화
&lt;ul>
&lt;li>네트워크 통신의 표준 프레임워크 제공&lt;/li>
&lt;li>다양한 시스템 간 호환성 보장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모듈화
&lt;ul>
&lt;li>복잡한 네트워크 과정을 단계별로 분리&lt;/li>
&lt;li>각 계층별 독립적 발전 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문제 해결
&lt;ul>
&lt;li>특정 계층의 문제 파악 용이&lt;/li>
&lt;li>효율적인 유지보수 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>OSI 7계층의 각 계층의 역할과 주 요 프로토콜&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>계층&lt;/th>
&lt;th>주요 역할&lt;/th>
&lt;th>주요 프로토콜/표준&lt;/th>
&lt;th>데이터 단위&lt;/th>
&lt;th>주요 장비/기술&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>7. 응용 계층 (Application)&lt;/td>
&lt;td>• 사용자 인터페이스 제공&lt;br>• 파일, 이메일, 데이터베이스 서비스&lt;br>• 네트워크 자원에 대한 접근 제공&lt;/td>
&lt;td>• HTTP/HTTPS&lt;br>• FTP&lt;br>• SMTP/POP3&lt;br>• DNS&lt;br>• SNMP&lt;/td>
&lt;td>데이터 (Data)&lt;/td>
&lt;td>• 애플리케이션 서버&lt;br>• 이메일 서버&lt;br>• 웹 브라우저&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6. 표현 계층 (Presentation)&lt;/td>
&lt;td>• 데이터 형식 변환&lt;br>• 암호화/복호화&lt;br>• 데이터 압축/압축해제&lt;/td>
&lt;td>• JPEG, GIF&lt;br>• MPEG&lt;br>• SSL/TLS&lt;br>• ASCII, EBCDIC&lt;/td>
&lt;td>데이터 (Data)&lt;/td>
&lt;td>• 암호화 도구&lt;br>• 코덱&lt;br>• 포맷 변환기&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5. 세션 계층 (Session)&lt;/td>
&lt;td>• 통신 세션 수립/유지/종료&lt;br>• 동기화&lt;br>• 대화 제어&lt;/td>
&lt;td>• NetBIOS&lt;br>• RPC&lt;br>• SQL&lt;br>• ASP&lt;/td>
&lt;td>데이터 (Data)&lt;/td>
&lt;td>• 게이트웨이&lt;br>• 세션 관리자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4. 전송 계층 (Transport)&lt;/td>
&lt;td>• 종단간 신뢰성 있는 데이터 전송&lt;br>• 오류 검출/복구&lt;br>• 흐름 제어/혼잡 제어&lt;br>• 세그먼테이션(Segmentation)&lt;/td>
&lt;td>• TCP&lt;br>• UDP&lt;br>• SCTP&lt;br>• SPX&lt;/td>
&lt;td>세그먼트 (Segment)&lt;/td>
&lt;td>• L4 스위치&lt;br>• 로드 밸런서&lt;br>• 방화벽&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3. 네트워크 계층 (Network)&lt;/td>
&lt;td>• 라우팅&lt;br>• 논리적 주소 지정&lt;br>• 패킷 포워딩&lt;br>• QoS 제공&lt;br>• 프레그먼테이션(Fragmentation)&lt;/td>
&lt;td>• IP (v4/v6)&lt;br>• ICMP&lt;br>• IGMP&lt;br>• RIP, OSPF&lt;/td>
&lt;td>패킷 (Packet)&lt;/td>
&lt;td>• 라우터&lt;br>• L3 스위치&lt;br>• 방화벽&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2. 데이터링크 계층 (Data Link)&lt;/td>
&lt;td>• 물리적 주소 지정 (MAC)&lt;br>• 오류 검출/재전송&lt;br>• 프레임 동기화&lt;br>• 흐름 제어&lt;br>• 프레이밍(Framing)&lt;/td>
&lt;td>• 이더넷&lt;br>• PPP&lt;br>• HDLC&lt;br>• Frame Relay&lt;/td>
&lt;td>프레임 (Frame)&lt;/td>
&lt;td>• 브리지&lt;br>• L2 스위치&lt;br>• NIC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1. 물리 계층 (Physical)&lt;/td>
&lt;td>• 비트 단위 데이터 전송&lt;br>• 전기적/기계적/물리적 특성 정의&lt;br>• 신호 변환&lt;/td>
&lt;td>• RS-232&lt;br>• USB&lt;br>• Bluetooth&lt;br>• IEEE 802.11&lt;/td>
&lt;td>비트 (Bit)&lt;/td>
&lt;td>• 허브&lt;br>• 리피터&lt;br>• 케이블&lt;br>• 모뎀&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 표를 보완하기 위해 몇 가지 중요한 점을 추가로 설명해보면,&lt;/p>
&lt;ol>
&lt;li>데이터 흐름: 데이터는 송신 시 응용 계층에서 물리 계층으로 내려가면서 각 계층의 헤더가 추가되고(캡슐화), 수신 시에는 반대로 물리 계층에서 응용 계층으로 올라가면서 헤더가 제거된다(역캡슐화).&lt;/li>
&lt;li>계층 간 독립성: 각 계층은 독립적으로 동작하며, 한 계층의 변경이 다른 계층에 영향을 미치지 않도록 설계되어 있다. 이는 네트워크 기술의 발전과 유지보수를 용이하게 한다.&lt;/li>
&lt;li>계층별 주소 체계: 각 계층은 서로 다른 주소 체계를 사용한다:
&lt;ul>
&lt;li>네트워크 계층: IP 주소 (논리적 주소)&lt;/li>
&lt;li>데이터링크 계층: MAC 주소 (물리적 주소)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안 관련: 각 계층별로 다양한 보안 메커니즘이 존재한다:
&lt;ul>
&lt;li>응용 계층: HTTPS, SSH&lt;/li>
&lt;li>표현 계층: 암호화/복호화&lt;/li>
&lt;li>네트워크 계층: IPSec&lt;/li>
&lt;li>데이터링크 계층: WPA, WPA2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>계층 간 상호작용과 인터페이스&lt;/h3>&lt;ol>
&lt;li>
&lt;p>인접한 계층 간의 상호작용 방식&lt;br>
상위 계층은 하위 계층에 서비스를 요청하고, 하위 계층은 상위 계층에 서비스를 제공한다.&lt;br>
이 과정에서 각 계층은 자신의 기능만을 수행하며, 다른 계층의 내부 동작에 대해서는 알 필요가 없다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>서비스 접근점(SAP)의 개념과 역할&lt;br>
SAP는 인접한 계층 간의 인터페이스 지점.&lt;br>
상위 계층이 하위 계층의 서비스를 이용할 때 SAP를 통해 접근한다.&lt;br>
예를 들어, 전송 계층과 네트워크 계층 사이의 SAP는 IP 주소와 포트 번호의 조합.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 네트워크 문제 해결에서의 OSI 모델 활용&lt;/h3>&lt;h4>OSI 모델을 활용한 문제 접근 방법&lt;/h4>&lt;p>문제 증상 파악&lt;br>
OSI 모델의 각 계층별로 문제 가능성 검토&lt;br>
하위 계층부터 상위 계층으로 순차적 점검&lt;br>
문제 발견 시 해당 계층에서의 해결책 적용&lt;/p>
&lt;h4>계층별 대표적인 문제 사례와 해결 방안&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>계층&lt;/th>
&lt;th>대표적인 문제 사례&lt;/th>
&lt;th>해결 방안&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>물리 계층&lt;/td>
&lt;td>케이블 연결 불량&lt;/td>
&lt;td>케이블 교체&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 링크 계층&lt;/td>
&lt;td>MAC 주소 충돌&lt;/td>
&lt;td>MAC 주소 재설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 계층&lt;/td>
&lt;td>IP 주소 충돌&lt;/td>
&lt;td>IP 주소 재할당&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 계층&lt;/td>
&lt;td>포트 번호 충돌&lt;/td>
&lt;td>포트 번호 변경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>세션 계층&lt;/td>
&lt;td>세션 연결 실패&lt;/td>
&lt;td>방화벽 설정 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>표현 계층&lt;/td>
&lt;td>데이터 암호화 오류&lt;/td>
&lt;td>암호화 알고리즘 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>응용 계층&lt;/td>
&lt;td>애플리케이션 오류&lt;/td>
&lt;td>애플리케이션 재설치 또는 업데이트&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>OSI 7계층의 전체 동작을 시뮬레이션하는 파이썬 코드&lt;/h3>&lt;p>이 시뮬레이션 코드는 OSI 7계층의 각 계층을 클래스로 구현하고, 데이터가 각 계층을 통과하면서 어떻게 처리되는지를 보여준다.&lt;/p>
&lt;p>주요 특징은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>계층별 구현:&lt;/p>
&lt;ul>
&lt;li>각 계층은 OSILayer 기본 클래스를 상속받아 구현되었다.&lt;/li>
&lt;li>각 계층은 process_down(캡슐화)와 process_up(디캡슐화) 메서드를 가진다.&lt;/li>
&lt;li>각 계층의 주요 기능이 주석으로 설명되어 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 캡슐화 과정:&lt;/p>
&lt;ul>
&lt;li>Application Layer: HTTP와 같은 프로토콜 정보 추가&lt;/li>
&lt;li>Presentation Layer: 데이터 암호화 및 인코딩&lt;/li>
&lt;li>Session Layer: 세션 관리를 위한 시퀀스 번호 할당&lt;/li>
&lt;li>Transport Layer: TCP 포트 정보 추가&lt;/li>
&lt;li>Network Layer: IP 주소 정보 추가&lt;/li>
&lt;li>Data Link Layer: 프레임 생성 및 오류 검사&lt;/li>
&lt;li>Physical Layer: 비트스트림으로 변환&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 디캡슐화 과정:&lt;/p>
&lt;ul>
&lt;li>물리 계층부터 응용 계층까지 역순으로 진행&lt;/li>
&lt;li>각 계층에서 추가된 헤더 정보를 확인하고 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Packet 클래스:&lt;/p>
&lt;ul>
&lt;li>네트워크 통신에 필요한 주요 정보들을 담는 데이터 클래스&lt;/li>
&lt;li>주소, 프로토콜, 포트 등의 정보 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>시뮬레이션을 실행하면 다음과 같은 과정이 진행된다:&lt;/p>
&lt;ol>
&lt;li>&amp;ldquo;Hello, OSI World!&amp;rdquo; 라는 메시지가 송신측의 응용 계층에서 시작&lt;/li>
&lt;li>각 계층을 거치면서 필요한 정보가 추가되는 캡슐화 과정&lt;/li>
&lt;li>물리 계층에서 비트스트림으로 변환되어 전송&lt;/li>
&lt;li>수신측에서 각 계층을 거치며 디캡슐화 진행&lt;/li>
&lt;li>최종적으로 원본 메시지가 수신측 응용 계층에 전달&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">dataclasses&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 각 계층별 헤더/트레일러 정보를 담는 클래스들&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ApplicationHeader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content_type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encoding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PresentationHeader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encryption&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">compression&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SessionHeader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session_id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sequence_number&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">TransportHeader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source_port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">destination_port&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sequence_number&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">checksum&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NetworkHeader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source_ip&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">destination_ip&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protocol&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ttl&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DataLinkHeader&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source_mac&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">destination_mac&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">frame_type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DataLinkTrailer&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">frame_check_sequence&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">OSILayer&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;OSI 계층의 기본 클래스&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;데이터 캡슐화 (추상 메서드)&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">NotImplementedError&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Any&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;데이터 디캡슐화 (추상 메서드)&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">NotImplementedError&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ApplicationLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;7계층 - 응용 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 사용자와 가장 가까운 계층으로 응용 프로그램 간의 데이터 교환을 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Application Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Encapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ApplicationHeader&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">content_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text/plain&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Decapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PresentationLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;6계층 - 표현 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 데이터의 형식 변환, 암호화, 압축을 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Presentation Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Encapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PresentationHeader&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encryption&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AES-256&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">compression&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;gzip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Decapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SessionLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;5계층 - 세션 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 통신 세션 구축 및 관리를 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Session Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_session_counter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Encapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_session_counter&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SessionHeader&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;SESSION_&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_session_counter&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sequence_number&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Decapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">TransportLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;4계층 - 전송 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 종단간 신뢰성 있는 데이터 전송을 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Transport Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Encapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TransportHeader&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source_port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">12345&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">destination_port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sequence_number&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">checksum&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ABC123&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Decapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NetworkLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;3계층 - 네트워크 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 패킷의 경로 설정과 주소 지정을 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Network Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Encapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NetworkHeader&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source_ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;192.168.1.1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">destination_ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;192.168.1.2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">protocol&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;TCP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Decapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DataLinkLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;2계층 - 데이터 링크 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 물리적 주소 지정과 오류 검출을 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Data Link Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Encapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">header&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataLinkHeader&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source_mac&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;00:11:22:33:44:55&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">destination_mac&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;66:77:88:99:AA:BB&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">frame_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Ethernet II&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">trailer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataLinkTrailer&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">frame_check_sequence&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;CRC32_XYZ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;header&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">header&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;trailer&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">trailer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Decapsulating data…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">PhysicalLayer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OSILayer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;1계층 - 물리 계층
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 비트 스트림의 전송을 담당&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">super&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Physical Layer&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Converting to bit stream…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 실제 비트 스트림 변환 대신 JSON 문자열로 시뮬레이션&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">lambda&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="vm">__dict__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Dict&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;[&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">] Converting from bit stream…&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># JSON 문자열에서 딕셔너리로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">NetworkStack&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;전체 OSI 7계층을 관리하는 클래스&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ApplicationLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">presentation&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PresentationLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SessionLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transport&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">TransportLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">network&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NetworkLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datalink&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataLinkLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">physical&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">PhysicalLayer&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">send_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;데이터 송신 - 캡슐화 과정&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">=== Starting Data Transmission ===&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 상위 계층에서 하위 계층으로 캡슐화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">presentation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transport&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">encapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datalink&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">bit_stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">physical&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">encapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">bit_stream&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">receive_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bit_stream&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;데이터 수신 - 디캡슐화 과정&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">=== Starting Data Reception ===&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 하위 계층에서 상위 계층으로 디캡슐화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">physical&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bit_stream&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">datalink&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transport&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">decapsulated_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">presentation&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">original_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">application&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decapsulate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">decapsulated_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">original_data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 사용 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 네트워크 스택 초기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">NetworkStack&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 전송할 데이터&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">original_message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, OSI World!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Original Message: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">original_message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 송신 (캡슐화)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">transmitted_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">original_message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Transmitted Data (bit stream):&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">transmitted_data&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 수신 (디캡슐화)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">received_message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">network&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">receive_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">transmitted_data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">Received Message: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">received_message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>결과:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">Original Message: Hello, OSI World!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=== Starting Data Transmission ===
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Application Layer] Encapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Presentation Layer] Encapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Session Layer] Encapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Transport Layer] Encapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Network Layer] Encapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Data Link Layer] Encapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Physical Layer] Converting to bit stream...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Transmitted Data (bit stream):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{&amp;#34;header&amp;#34;: {&amp;#34;source_mac&amp;#34;: &amp;#34;00:11:22:33:44:55&amp;#34;, &amp;#34;destination_mac&amp;#34;: &amp;#34;66:77:88:99:AA:BB&amp;#34;, &amp;#34;frame_type&amp;#34;: &amp;#34;Ethernet II&amp;#34;}, &amp;#34;data&amp;#34;: {&amp;#34;header&amp;#34;: {&amp;#34;source_ip&amp;#34;: &amp;#34;192.168.1.1&amp;#34;, &amp;#34;destination_ip&amp;#34;: &amp;#34;192.168.1.2&amp;#34;, &amp;#34;protocol&amp;#34;: &amp;#34;TCP&amp;#34;, &amp;#34;ttl&amp;#34;: 64}, &amp;#34;data&amp;#34;: {&amp;#34;header&amp;#34;: {&amp;#34;source_port&amp;#34;: 12345, &amp;#34;destination_port&amp;#34;: 80, &amp;#34;sequence_number&amp;#34;: 1, &amp;#34;checksum&amp;#34;: &amp;#34;ABC123&amp;#34;}, &amp;#34;data&amp;#34;: {&amp;#34;header&amp;#34;: {&amp;#34;session_id&amp;#34;: &amp;#34;SESSION_1&amp;#34;, &amp;#34;sequence_number&amp;#34;: 1}, &amp;#34;data&amp;#34;: {&amp;#34;header&amp;#34;: {&amp;#34;encryption&amp;#34;: &amp;#34;AES-256&amp;#34;, &amp;#34;compression&amp;#34;: &amp;#34;gzip&amp;#34;}, &amp;#34;data&amp;#34;: {&amp;#34;header&amp;#34;: {&amp;#34;content_type&amp;#34;: &amp;#34;text/plain&amp;#34;, &amp;#34;encoding&amp;#34;: &amp;#34;utf-8&amp;#34;}, &amp;#34;data&amp;#34;: &amp;#34;Hello, OSI World!&amp;#34;}}}}}, &amp;#34;trailer&amp;#34;: {&amp;#34;frame_check_sequence&amp;#34;: &amp;#34;CRC32_XYZ&amp;#34;}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=== Starting Data Reception ===
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Physical Layer] Converting from bit stream...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Data Link Layer] Decapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Network Layer] Decapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Transport Layer] Decapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Session Layer] Decapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Presentation Layer] Decapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Application Layer] Decapsulating data...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Received Message: Hello, OSI World!&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Layers Employed at Each Network Node&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/open-systems-interconnection-model-network-communication-protocols-1983.jpg"
alt="The open systems interconnection (OSI) model for network communication. Established in 1983 by the International Organization for Standardization, the OSI model divides network protocols (standardized procedures for exchanging information) into seven functional “layers.” This communications architecture enables end users employing different operating systems or working in different networks to communicate quickly and correctly."
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://www.britannica.com/science/computer-science/Networking-and-communication" target="_blank" rel="noopener">https://www.britannica.com/science/computer-science/Networking-and-communication&lt;/a> _&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>OSI 7Layers&lt;/h3>&lt;p>&lt;a href="https://cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">OSI 모델이란?&lt;/a>&lt;br>
&lt;a href="https://velog.io/@hidaehyunlee/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%A0%84%EB%8B%AC%EB%90%98%EB%8A%94-%EC%9B%90%EB%A6%AC-OSI-7%EA%B3%84%EC%B8%B5-%EB%AA%A8%EB%8D%B8%EA%B3%BC-TCPIP-%EB%AA%A8%EB%8D%B8#5-tcpip-%EB%AA%A8%EB%8D%B8" target="_blank" rel="noopener">&amp;ldquo;데이터가 전달되는 원리&amp;rdquo; OSI 7계층 모델과 TCP/IP 모델&lt;/a>&lt;br>
&lt;a href="https://lxxyeon.tistory.com/155" target="_blank" rel="noopener">OSI 7계층이란? - OSI 계층별 특징, TCP/IP 4계층&lt;/a>&lt;br>
&lt;a href="https://itwiki.kr/w/OSI_7%EA%B3%84%EC%B8%B5" target="_blank" rel="noopener">OSI 7계층&lt;/a>&lt;br>
&lt;a href="https://velog.io/@jybin96/OSI-7%EA%B3%84%EC%B8%B5%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C" target="_blank" rel="noopener">OSI 7계층이란 무엇일까?&lt;/a>&lt;br>
&lt;a href="https://velog.io/@cgotjh/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-OSI-7-%EA%B3%84%EC%B8%B5-OSI-7-LAYER-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EA%B0%81-%EA%B3%84%EC%B8%B5-%EC%84%A4%EB%AA%85" target="_blank" rel="noopener">[네트워크] OSI 7 계층 (OSI 7 LAYER) 기본 개념, 각 계층 설명&lt;/a>&lt;br>
&lt;a href="https://backendcode.tistory.com/167" target="_blank" rel="noopener">[네트워크] OSI 7 계층 (OSI 7 Layer)&lt;/a>&lt;br>
&lt;a href="https://www.infosectrain.com/blog/common-security-attacks-in-the-osi-layer-model/" target="_blank" rel="noopener">Common Security Attacks in the OSI Layer Model&lt;/a>&lt;br>
&lt;a href="https://velog.io/@xxell-8/OSI-7-Layers" target="_blank" rel="noopener">Network ① OSI 7 Layers&lt;/a>&lt;br>
&lt;a href="https://velog.io/@poiuyy0420/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-OSI-7-%EA%B3%84%EC%B8%B5-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">[네트워크] OSI 7 계층 개념 정리&lt;/a>&lt;br>
&lt;a href="https://github.com/ssafy-tech-concert/ssafy-tech-concert/blob/master/Computer-Science/OSI%207%20layer.md" target="_blank" rel="noopener">OSI 7 layer&lt;/a>&lt;/p></description></item><item><title>TCP/IP 4계층 - 3. Transport Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-3-transport-layer/</link><pubDate>Fri, 27 Sep 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-3-transport-layer/</guid><description>
&lt;h2>Transport Layer&lt;/h2>&lt;p>전송 계층은 서로 다른 호스트에서 동작하는 애플리케이션 프로세스 간의 논리적 통신을 제공한다.&lt;br>
이 계층은 애플리케이션 계층과 인터넷 계층 사이에 위치하여 두 계층을 이어주는 역할을 수행하며, 데이터가 목적지 애플리케이션까지 안전하게 전달되도록 한다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/TCP%20IP%204%20Layers/tcp-ip-model-vs-osi.png"
alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>주요 기능&lt;/h3>&lt;ol>
&lt;li>데이터 분할 및 재조립: 애플리케이션 계층에서 받은 데이터를 세그먼트로 분할하고, 수신 측에서 다시 조립한다.&lt;/li>
&lt;li>포트 번호 관리: 애플리케이션을 구분하기 위해 포트 번호를 사용한다.&lt;/li>
&lt;li>연결 제어: TCP의 경우 연결 지향적 통신을 제공한다.&lt;/li>
&lt;li>신뢰성 있는 데이터 전송: TCP는 데이터의 정확한 전달과 순서를 보장한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>종단 간 통신: 전송 계층 프로토콜은 네트워크 라우터가 아닌 종단 시스템에서 구현된다.&lt;/li>
&lt;li>다중화와 역다중화: 여러 애플리케이션의 데이터를 하나의 연결로 전송하고, 수신 측에서 다시 분리한다.&lt;/li>
&lt;li>흐름 제어와 혼잡 제어: TCP의 경우 이러한 기능을 제공하여 네트워크의 효율성을 높인다.&lt;/li>
&lt;/ol>
&lt;h3>데이터 단위&lt;/h3>&lt;ul>
&lt;li>단위: 세그먼트(TCP) / 데이터그램(UDP)&lt;/li>
&lt;li>구조: TCP/UDP 헤더 + 응용 계층 메시지&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">[TCP 헤더(20바이트)] [응용 계층 데이터]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">┌──────────┬──────────┬────────┬────────┬──────┐
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│출발지 포트│목적지 포트│시퀀스 번호│확인 응답│윈도우│ …
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ (16비트) │ (16비트) │(32비트) │(32비트)│(16비트)│
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└──────────┴──────────┴────────┴────────┴──────┘&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>전송 계층의 서비스 품질&lt;/h3>&lt;p>전송 계층은 다양한 서비스 품질(QoS) 요구사항을 지원한다:&lt;/p>
&lt;ol>
&lt;li>신뢰성이 필요한 경우: TCP 사용
&lt;ul>
&lt;li>파일 전송&lt;/li>
&lt;li>이메일&lt;/li>
&lt;li>웹 브라우징&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>속도가 중요한 경우: UDP 사용
&lt;ul>
&lt;li>실시간 스트리밍&lt;/li>
&lt;li>온라인 게임&lt;/li>
&lt;li>VoIP 통화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Network Layer - TCP/IP 4 Layers</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/</link><pubDate>Thu, 26 Sep 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/</guid><description>
&lt;h2>TCP/IP 4 계층&lt;/h2>&lt;p>인터넷과 네트워크 통신을 위한 프로토콜 체계로 데이터를 네트워크를 통해 안정적으로 전송하고 통신하기 위한 구조.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/TCP%20IP%204%20Layers/tcp-ip-model-vs-osi.png"
alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>유연성과 확장성
&lt;ul>
&lt;li>각 계층이 독립적으로 발전 가능&lt;/li>
&lt;li>새로운 프로토콜 추가 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>표준화
&lt;ul>
&lt;li>계층 간 표준 인터페이스 제공&lt;/li>
&lt;li>다양한 시스템 간 호환성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문제 해결 용이
&lt;ul>
&lt;li>계층별 독립적 문제 해결&lt;/li>
&lt;li>효율적인 유지 보수&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모듈화
&lt;ul>
&lt;li>복잡한 네트워크 기능을 단순화&lt;/li>
&lt;li>개발과 구현이 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>TCP/IP 4계층의 각 계층의 역할과 주요 프로토콜&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>계층&lt;/th>
&lt;th>주요 역할&lt;/th>
&lt;th>주요 프로토콜&lt;/th>
&lt;th>데이터 단위&lt;/th>
&lt;th>주요 장비/기술&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>응용 계층 (Application Layer)&lt;/td>
&lt;td>• 사용자와 직접 상호작용하는 인터페이스 제공&lt;br>• 데이터 형식 정의 및 응용 프로그램 간 통신 담당&lt;br>• 네트워크 서비스 제공&lt;/td>
&lt;td>• HTTP/HTTPS (웹)&lt;br>• FTP (파일 전송)&lt;br>• SMTP/POP3/IMAP (이메일)&lt;br>• DNS (도메인 네임)&lt;br>• SSH (보안 셸)&lt;br>• Telnet (원격 접속)&lt;/td>
&lt;td>메시지 (Message)&lt;/td>
&lt;td>• 웹 서버&lt;br>• 메일 서버&lt;br>• DNS 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 계층 (Transport Layer)&lt;/td>
&lt;td>• 종단간 신뢰성 있는 데이터 전송&lt;br>• 오류 검출 및 복구&lt;br>• 흐름 제어와 혼잡 제어&lt;br>• 포트 번호를 통한 프로세스 구분&lt;/td>
&lt;td>• TCP (신뢰성 있는 연결 지향)&lt;br>• UDP (비연결성, 실시간)&lt;br>• SCTP (스트림 제어)&lt;/td>
&lt;td>세그먼트 (Segment)&lt;/td>
&lt;td>• 방화벽&lt;br>• 로드 밸런서&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인터넷 계층 (Internet Layer)&lt;/td>
&lt;td>• 패킷의 경로 설정 (라우팅)&lt;br>• 논리적 주소 지정 (IP)&lt;br>• 패킷 분할과 재조립&lt;br>• 서로 다른 네트워크 연결&lt;/td>
&lt;td>• IPv4/IPv6 (IP 주소)&lt;br>• ICMP (오류 제어)&lt;br>• ARP (주소 변환)&lt;br>• IGMP (멀티캐스트)&lt;/td>
&lt;td>패킷 (Packet)&lt;/td>
&lt;td>• 라우터&lt;br>• L3 스위치&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 접근 계층 (Network Access Layer)&lt;/td>
&lt;td>• 물리적 주소 지정 (MAC)&lt;br>• 매체 접근 제어&lt;br>• 물리적 신호 전송&lt;br>• 에러 검출&lt;/td>
&lt;td>• 이더넷&lt;br>• Wi-Fi&lt;br>• PPP&lt;br>• HDLC&lt;/td>
&lt;td>프레임 (Frame)&lt;br>비트 (Bit)&lt;/td>
&lt;td>• 네트워크 카드&lt;br>• 스위치&lt;br>• 허브&lt;br>• 케이블&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 계층의 특징적인 기능을 추가로 설명해보면,&lt;/p>
&lt;ol>
&lt;li>&lt;strong>응용 계층&lt;/strong>은 사용자가 실제로 사용하는 네트워크 애플리케이션이 동작하는 계층.&lt;br>
웹 브라우징, 이메일, 파일 전송 등의 서비스가 이 계층에서 이루어진다.&lt;/li>
&lt;li>&lt;strong>전송 계층&lt;/strong>은 데이터의 신뢰성을 보장하며, TCP의 경우 3-way handshake를 통한 연결 설정, 흐름 제어, 혼잡 제어 등의 기능을 제공한다.&lt;/li>
&lt;li>&lt;strong>인터넷 계층&lt;/strong>은 서로 다른 네트워크를 연결하고, IP 주소를 기반으로 한 라우팅을 담당한다.&lt;br>
IPv4에서 IPv6로의 전환이 진행 중인 계층.&lt;/li>
&lt;li>&lt;strong>네트워크 접근 계층&lt;/strong>은 실제 물리적인 네트워크 연결과 관련된 모든 것을 처리한다.&lt;br>
하드웨어 수준의 통신 프로토콜과 물리적 매체를 통한 데이터 전송을 담당한다.&lt;/li>
&lt;/ol>
&lt;p>이러한 계층 구조는 각 계층이 독립적으로 동작하면서도 서로 유기적으로 연결되어 있어, 네트워크 통신의 복잡성을 관리하기 쉽게 만들어준다.&lt;br>
또한 한 계층의 변경이 다른 계층에 미치는 영향을 최소화할 수 있다는 장점이 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>TCP/IP&lt;/h3>&lt;p>&lt;a href="https://yozm.wishket.com/magazine/detail/1956/" target="_blank" rel="noopener">주니어 개발자를 위한 엄청 쉬운 TCP/IP 4계층 이야기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/2005/" target="_blank" rel="noopener">주니어 개발자를 위한 TCP/IP 주요 프로토콜 알아보기&lt;/a>&lt;br>
&lt;a href="https://wormwlrm.github.io/2021/09/23/Overview-of-TCP-and-UDP.html" target="_blank" rel="noopener">10분 만에 훑어보는 TCP와 UDP&lt;/a>&lt;/p>
&lt;h3>Port&lt;/h3>&lt;p>&lt;a href="https://sangbeomkim.tistory.com/101" target="_blank" rel="noopener">포트(PORT)란?&lt;/a>&lt;/p></description></item><item><title>OSI 7 Layers - 3. Network Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/</link><pubDate>Wed, 25 Sep 2024 07:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/</guid><description>
&lt;h2>Network Layer(네트워크 계층)&lt;/h2>&lt;p>네트워크 계층은 OSI 모델의 3계층으로, 데이터를 목적지까지 가장 안전하고 빠르게 전달하는 기능을 담당한다.&lt;br>
이 계층은 라우팅, 패킷 포워딩, 인터네트워킹 등을 수행한다.&lt;/p>
&lt;p>네트워크 계층은 데이터의 종단 간 전달을 담당하는 중요한 계층으로, 효율적인 라우팅과 주소 지정을 통해 복잡한 네트워크 환경에서도 안정적인 통신을 가능하게 한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/Network%20Layer/osi_model_network_layer_3.png"
alt="Network Layer"
title="Network Layer"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ol>
&lt;li>&lt;strong>라우팅&lt;/strong>: 데이터 패킷의 최적 경로를 결정한다.&lt;/li>
&lt;li>논리적 주소 지정: IP 주소를 사용하여 장치를 식별한다.&lt;/li>
&lt;li>패킷 포워딩: 패킷을 다음 네트워크 노드로 전달한다.&lt;/li>
&lt;li>패킷화: 상위 계층에서 받은 데이터를 패킷으로 분할한다.&lt;/li>
&lt;li>인터네트워킹: 서로 다른 네트워크 간의 통신을 가능하게 한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>비연결성 서비스를 제공한다.&lt;/li>
&lt;li>종단 간 통신을 담당한다.&lt;/li>
&lt;li>QoS(Quality of Service)를 제공한다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위와 구조&lt;/h3>&lt;ul>
&lt;li>데이터 단위: 패킷(Packet)&lt;/li>
&lt;li>기본 구조: 헤더 + 데이터
&lt;ul>
&lt;li>헤더: 출발지 IP 주소, 목적지 IP 주소, 프로토콜 정보 등&lt;/li>
&lt;li>데이터: 상위 계층에서 전달받은 정보&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>IPv4 와 IPv6 의 Header 비교&lt;/h4>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/Network%20Layer/comparing-ipv4-and-ipv6-headers.png"
alt="IPv4 Header vs IPv6 Header"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6&lt;/a> _&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>필드&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>Bit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>IP 프로토콜 버전&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IHL&lt;/td>
&lt;td>IHL&lt;/td>
&lt;td>-&lt;/td>
&lt;td>헤더 길이 (IPv6 에서는 고정 길이로 제거됨)&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type of Service&lt;/td>
&lt;td>Type of Service&lt;/td>
&lt;td>Traffic Class&lt;/td>
&lt;td>패킷 우선순위 또는 서비스 유형 지정 지정&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total Length&lt;/td>
&lt;td>Total Length&lt;/td>
&lt;td>Payload Length&lt;/td>
&lt;td>데이터 페이로드 길이&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identification&lt;/td>
&lt;td>Identification&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flags&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fragment Offset&lt;/td>
&lt;td>Fragment Offset&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>13&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TTL&lt;/td>
&lt;td>TTL&lt;/td>
&lt;td>Hop Limit&lt;/td>
&lt;td>패킷의 최대 홉 수&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protocol&lt;/td>
&lt;td>Protocol&lt;/td>
&lt;td>Next Header&lt;/td>
&lt;td>상위 계층 프로토콜 식별&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Header Checksum&lt;/td>
&lt;td>Header Checksum&lt;/td>
&lt;td>-&lt;/td>
&lt;td>오류 검출 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>송신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>수신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Options&lt;/td>
&lt;td>Options&lt;/td>
&lt;td>-&lt;/td>
&lt;td>추가 옵션 (IPv6 에서는 확장 헤더로 대체됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Padding&lt;/td>
&lt;td>Padding&lt;/td>
&lt;td>-&lt;/td>
&lt;td>패딩 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Label&lt;/td>
&lt;td>-&lt;/td>
&lt;td>Flow Label&lt;/td>
&lt;td>플로우 식별을 위한 레이블&lt;/td>
&lt;td>20&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>상위 계층으로부터 데이터를 받아 패킷으로 분할한다.&lt;/li>
&lt;li>각 패킷에 출발지와 목적지 IP 주소를 포함한 헤더를 추가한다.&lt;/li>
&lt;li>라우팅 알고리즘을 사용하여 최적의 경로를 결정한다.&lt;/li>
&lt;li>패킷을 다음 홉(hop)으로 전달한다.&lt;/li>
&lt;li>목적지에 도착할 때까지 3-4 과정을 반복한다.&lt;/li>
&lt;/ol>
&lt;h4>라우팅 프로토콜과 알고리즘&lt;/h4>&lt;p>네트워크 계층에서는 다양한 라우팅 프로토콜을 사용한다:&lt;/p>
&lt;ul>
&lt;li>정적 라우팅: 수동으로 설정된 경로를 사용한다.&lt;/li>
&lt;li>동적 라우팅: 자동으로 최적의 경로를 찾아 업데이트한다.&lt;/li>
&lt;/ul>
&lt;h3>주의 사항&lt;/h3>&lt;ul>
&lt;li>네트워크 계층은 신뢰성 있는 데이터 전송을 보장하지 않는다. 이는 상위 계층(전송 계층)의 역할이다.&lt;/li>
&lt;li>IP 주소 충돌을 방지해야 한다.&lt;/li>
&lt;li>라우팅 테이블의 최신성과 정확성을 유지해야 한다.&lt;/li>
&lt;/ul>
&lt;h3>네트워크 계층의 중요성&lt;/h3>&lt;p>네트워크 계층은 다음과 같은 이유로 중요하다:&lt;/p>
&lt;ol>
&lt;li>다양한 네트워크 연결: 서로 다른 유형의 네트워크를 연결할 수 있게 한다.&lt;/li>
&lt;li>확장성: 큰 규모의 네트워크를 효율적으로 관리할 수 있다.&lt;/li>
&lt;li>유연성: 다양한 라우팅 프로토콜을 사용하여 네트워크 환경에 적응할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>네트워크 계층의 주요 프로토콜&lt;/h3>&lt;ol>
&lt;li>IP(Internet Protocol): 가장 기본적인 네트워크 계층 프로토콜.&lt;/li>
&lt;li>ICMP(Internet Control Message Protocol): 네트워크 상태와 오류를 보고하는 프로토콜.&lt;/li>
&lt;li>RIP, OSPF와 같은 라우팅 프로토콜: 라우터들이 경로 정보를 교환하는 프로토콜.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Network Traffic</title><link>https://buenhyden.github.io/posts/networking-and-communications/network-traffic/</link><pubDate>Tue, 15 Oct 2024 02:43:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/network-traffic/</guid><description>
&lt;h2>네트워크 트래픽 (Network Traffic)&lt;/h2>&lt;p>네트워크 트래픽은 컴퓨터 네트워크를 통해 이동하는 데이터의 양을 의미한다.&lt;br>
이는 마치 도로의 차량 통행량과 유사한 개념으로 이해할 수 있다.&lt;br>
도로에 차가 많이 몰리면 정체가 발생하듯이, 네트워크에 데이터가 많이 몰리면 속도 저하나 지연이 발생할 수 있다.&lt;/p>
&lt;p>구체적으로는 서버와 스위치 등 네트워크 장치에서 일정 시간 내에 전송되는 데이터의 양을 말한다.&lt;br>
트래픽은 보통 바이트 단위(KB, MB, GB 등)로 측정되며, 웹사이트나 네트워크의 사용량을 나타내는 지표로 활용된다.&lt;/p>
&lt;p>네트워크 트래픽은 다음과 같은 특성을 가진다:&lt;/p>
&lt;ol>
&lt;li>시간에 따른 변동성: 트래픽은 시간대별로 변화하는 패턴을 보인다. 일반적으로 업무 시간 동안 증가하고 새벽에 감소하는 등의 time-of-day 특성을 나타낸다.&lt;/li>
&lt;li>프로토콜별 차이: TCP, UDP 등 프로토콜에 따라 트래픽의 특성이 다르다. 예를 들어, TCP는 UDP보다 패킷 크기가 더 큰 경향이 있다.&lt;/li>
&lt;li>방향성: 인바운드(외부에서 내부로)와 아웃바운드(내부에서 외부로) 트래픽으로 구분된다.&lt;/li>
&lt;/ol>
&lt;p>네트워크 트래픽은 다양한 기준으로 분류할 수 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>방향성 기준&lt;/p>
&lt;ul>
&lt;li>인바운드 트래픽: 외부에서 내부로 들어오는 데이터&lt;/li>
&lt;li>아웃바운드 트래픽: 내부에서 외부로 나가는 데이터&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프로토콜 기준&lt;/p>
&lt;ul>
&lt;li>TCP 트래픽: 신뢰성 있는 연결 지향적 통신&lt;/li>
&lt;li>UDP 트래픽: 빠른 속도의 비연결형 통신&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>애플리케이션 기준&lt;/p>
&lt;ul>
&lt;li>HTTP/HTTPS 트래픽: 웹 브라우징&lt;/li>
&lt;li>FTP 트래픽: 파일 전송&lt;/li>
&lt;li>SMTP/POP3/IMAP 트래픽: 이메일&lt;/li>
&lt;li>VoIP 트래픽: 음성 통화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>트래픽 모니터링과 분석&lt;/h3>&lt;p>네트워크 트래픽을 모니터링하고 분석하는 것은 네트워크 성능 최적화와 보안 유지에 중요하다.&lt;br>
주요 내용은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>모니터링 도구: Nagios, Cacti, Wireshark 등 다양한 오픈소스 및 상용 도구가 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>분석 방법:&lt;/p>
&lt;ul>
&lt;li>패킷 캡처: 네트워크를 통해 전송되는 패킷을 실시간으로 수집한다.&lt;/li>
&lt;li>데이터 분석: 수집된 패킷 데이터를 분석하여 트래픽 패턴, 성능 문제, 보안 위협 등을 파악한다.&lt;/li>
&lt;li>시각화: 분석된 데이터를 그래프, 차트, 대시보드 등으로 표현하여 이해를 돕는다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>특징 추출: 네트워크 패킷 헤더 정보, 통계적 특징(평균 패킷 크기, 도착 시간 간격 등), 그래프나 이미지 형태의 표현 등 다양한 특징을 활용한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>트래픽 제어와 관리&lt;/h3>&lt;p>네트워크 트래픽의 제어와 관리는 다양한 방식과 방법으로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>트래픽 쉐이핑(Traffic Shaping):
&lt;ul>
&lt;li>네트워크 트래픽의 속도를 조절하여 대역폭 사용을 최적화한다.&lt;/li>
&lt;li>특정 유형의 트래픽에 우선순위를 부여하거나 제한을 둔다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>트래픽 폴리싱(Traffic Policing):
&lt;ul>
&lt;li>설정된 대역폭 한계를 초과하는 트래픽을 드롭하거나 우선순위를 낮춘다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>로드 밸런싱(Load Balancing):
&lt;ul>
&lt;li>여러 서버나 네트워크 장치에 트래픽을 분산시켜 과부하를 방지한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>QoS(Quality of Service):
&lt;ul>
&lt;li>트래픽 유형에 따라 우선순위를 부여하여 중요한 애플리케이션의 성능을 보장한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>방화벽 설정:
&lt;ul>
&lt;li>firewalld와 같은 도구를 사용하여 특정 서비스나 포트에 대한 트래픽을 제어한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>트래픽 분류 및 모니터링:
&lt;ul>
&lt;li>네트워크 트래픽을 분석하고 모니터링하여 비정상적인 패턴을 감지한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>네트워크 세그멘테이션:
&lt;ul>
&lt;li>트래픽을 기능, 위치, 신원 등에 따라 더 작고 관리하기 쉬운 그룹으로 나눈다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>암호화:
&lt;ul>
&lt;li>중요한 트래픽을 암호화하여 보안을 강화한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>애플리케이션 레벨 제어:
&lt;ul>
&lt;li>F5의 BIG-IP와 같은 솔루션을 사용하여 애플리케이션 트래픽을 세밀하게 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 방법들은 네트워크 성능 최적화, 보안 강화, 리소스 효율적 사용 등을 목적으로 구현된다.&lt;/p>
&lt;h3>트래픽 측정과 성능 지표&lt;/h3>&lt;h4>대역폭(Bandwidth)&lt;/h4>&lt;p>대역폭은 네트워크가 처리할 수 있는 최대 데이터 용량을 의미한다.&lt;br>
이는 마치 도로의 차선 수와 같은 개념으로, 한 번에 얼마나 많은 데이터를 전송할 수 있는지를 나타낸다.&lt;br>
대역폭은 일반적으로 bps(bits per second)로 측정되며, Mbps나 Gbps 단위로 표현된다.&lt;/p>
&lt;p>네트워크 또는 채널이 &lt;strong>일정 시간 내에 처리 가능한 최대의 데이터 처리능력&lt;/strong>을 의미하며, 대역폭이 높을수록 많은 데이터가 네트워크에 실려서 전달하고 전달받을 수 있다.&lt;br>
&lt;strong>대역폭 자체는 전달 속도와는 관계가 없으며 오히려 용량 (capacity) 과 관계가 있다&lt;/strong>.&lt;br>
또한, 네트워크의 실질적인 성능을 나타내지 않는다.&lt;/p>
&lt;h4>처리량(Throughput)&lt;/h4>&lt;p>실제로 전송된 데이터의 양을 의미한다.&lt;br>
대역폭이 도로의 차선 수라면, 처리량은 실제로 그 도로를 지나는 차량의 수와 같다.&lt;br>
처리량은 대역폭보다 항상 작거나 같으며, 네트워크 상황에 따라 변동될 수 있다.&lt;/p>
&lt;p>얼마나 많은 데이터가 단위 시간 내에 목적지에 전달될 수 있는지에 대한 지표로 시간에 따라 달라지는 가변적인 값이다.&lt;br>
bps(bit/s), Mbps(Mbit/s), Gbps(Gbit/s) 단위로 표현한다.&lt;br>
네트워크 구간 중간에 패킷 손실이 발생할 수 있다.&lt;/p>
&lt;blockquote>
&lt;p>네트워크 출력 (Throughput) vs 대역폭 (Bandwidth) 의 상관관계&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/network_bandwidth_vs_throughput-f.png"
alt="Compare the differences between network bandwidth vs. throughput."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.techtarget.com/searchnetworking/feature/Network-bandwidth-vs-throughput-Whats-the-difference" target="_blank" rel="noopener">https://www.techtarget.com/searchnetworking/feature/Network-bandwidth-vs-throughput-Whats-the-difference&lt;/a> _&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>단위 시간 내 많은 양의 데이터를 한 번에 보내기 위한 출력도 높이고, 이를 받아서 전달하는 파이프 역할을 하는 대역폭도 커야 한다.&lt;/li>
&lt;li>출력이 높고 대역폭이 작다면, 네트워크 출구에서 대기하는 데이터가 많을 것이고, 이는 시스템의 성능에 안 좋은 영향을 미치게 된다.&lt;/li>
&lt;li>출력이 낮은데 대역폭이 크다면, 대역폭과 비용의 낭비가 예상된다.&lt;/li>
&lt;li>동일한 사용자의 요청이 지속된다고 하더라도, 예상하지 못한 변화가 잦은 이유는 네트워크 상의 변수가 많기 때문이다.
&lt;ul>
&lt;li>대표적인 요인
&lt;ul>
&lt;li>&lt;code>네트워크 지연(network latency)&lt;/code>: 예상하지 못한 시간 (time) 이 데이터 전달에 소요되는 현상.&lt;/li>
&lt;li>&lt;code>네트워크 혼잡(network congestion)&lt;/code>: 전달해야 하는 데이터의 양이 네트워크에 몰리는 현상&lt;/li>
&lt;li>&lt;code>패킷 손실(packet loss)&lt;/code>: 예상하지 못한 패킷 (packet) 이 전달하는 동안 손실되는 현상.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>지연 시간(Latency)&lt;/h4>&lt;p>데이터가 출발지에서 목적지까지 도달하는 데 걸리는 시간을 의미한다.&lt;br>
네트워크 지연은 다음과 같은 요소들에 의해 발생할 수 있다:&lt;/p>
&lt;ul>
&lt;li>전파 지연: 물리적 거리로 인한 지연&lt;/li>
&lt;li>처리 지연: 라우터 등 네트워크 장비에서의 처리 시간&lt;/li>
&lt;li>큐잉 지연: 네트워크 혼잡으로 인한 대기 시간&lt;/li>
&lt;/ul>
&lt;p>종류:&lt;/p>
&lt;ul>
&lt;li>Network Latency&lt;br>
데이터 요청이 요청을 작성하는 컴퓨터에서 응답하는 컴퓨터에 도달하는 데 걸리는 시간을 말한다. 이는 데이터가 응답하는 컴퓨터에서 요청한 컴퓨터로 다시 돌아오는 시간을 포함한다.&lt;/li>
&lt;li>Disk Latency&lt;br>
컴퓨터 (일반적으로 서버) 가 요청을 수신한 시점부터 응답을 반환하기까기 걸린 시간을 말한다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/throughput-bandwidth.png"
alt="Bandwidth vs. Throughput"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://obkio.com/blog/network-speed-bandwidth-throughput/" target="_blank" rel="noopener">https://obkio.com/blog/network-speed-bandwidth-throughput/&lt;/a> _&lt;/p>
&lt;h4>지터(Jitter)&lt;/h4>&lt;p>지터는 네트워크에서 데이터 패킷의 도착 시간 변동을 의미한다.&lt;br>
구체적으로:&lt;/p>
&lt;ul>
&lt;li>연속된 데이터 패킷 간의 도착 시간 차이의 변동을 측정한다.&lt;/li>
&lt;li>밀리초(ms) 단위로 표현된다.&lt;/li>
&lt;li>네트워크 연결의 안정성을 나타내는 지표이다.&lt;/li>
&lt;/ul>
&lt;p>지터는 다음과 같은 방법으로 측정할 수 있다:&lt;/p>
&lt;ul>
&lt;li>단일 엔드포인트에서 발생한 일련의 패킷의 왕복 시간(RTT) 측정&lt;/li>
&lt;li>네트워크의 두 엔드포인트 간 전송 시간 변동 측정&lt;/li>
&lt;li>네트워크 링크의 대역폭 테스트 수행&lt;br>
일반적으로 ping 명령어를 사용하여 기본적인 지터 측정이 가능하다.&lt;/li>
&lt;/ul>
&lt;p>높은 지터는 다음과 같은 영향을 미친다:&lt;/p>
&lt;ul>
&lt;li>실시간 애플리케이션(VoIP, 화상 회의 등)의 품질 저하&lt;/li>
&lt;li>오디오나 비디오의 끊김 현상 발생&lt;/li>
&lt;li>패킷 순서 변경 또는 손실로 인한 데이터 전송 중단&lt;/li>
&lt;li>사용자 경험 저하 및 네트워크 혼잡 악화&lt;/li>
&lt;/ul>
&lt;p>지터는 다음과 같은 요인들로 인해 발생할 수 있다:&lt;/p>
&lt;ul>
&lt;li>네트워크 혼잡 및 병목 현상&lt;/li>
&lt;li>하드웨어 제한 또는 오래된 네트워크 장비&lt;/li>
&lt;li>무선 간섭&lt;/li>
&lt;li>부적절한 QoS(Quality of Service) 설정&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>지터와 지연시간(Latency)의 차이&lt;/p>
&lt;ul>
&lt;li>지터와 지연시간은 모두 네트워크 성능과 관련이 있지만, 다음과 같은 차이가 있다:
&lt;ul>
&lt;li>지연시간: 패킷이 출발지에서 목적지까지 이동하는 총 시간&lt;/li>
&lt;li>지터: 패킷 간 도착 시간의 변동성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4>패킷 손실(Packet Loss)&lt;/h4>&lt;p>전송 중에 손실되는 패킷의 비율을 나타낸다.&lt;br>
높은 트래픽으로 인해 노드가 순간적으로 처리해야 할 패킷이 너무 많아지거나 네트워크상에 예기치 못한 장애가 발생해서 패킷을 처리하지 못하면 패킷 손실이 발생할 수 있으며, 이는 서비스 품질 저하로 이어질 수 있다.&lt;/p>
&lt;p>패킷 손실은 &lt;code>ping&lt;/code> 명령어를 통해서 확인할 수 있다.&lt;br>
&lt;code>ping&lt;/code> 명령어는 수신지로 다수의 패킷을 전송해 도달 가능한지 여부를 알려준다.&lt;br>
몇 개의 패킷을 보내고, 받았는지, 몇 % 의 패킷이 손실되었는지를 알 수 있다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/%ed%8c%a8%ed%82%b7-%ec%86%90%ec%8b%a4-1024x368.png"
alt="패킷 손실"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://hongong.hanbit.co.kr/network-%ED%8A%B8%EB%9E%98%ED%94%BD%EA%B3%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%84%B1%EB%8A%A5-%EC%A7%80%ED%91%9C/" target="_blank" rel="noopener">https://hongong.hanbit.co.kr/network-%ED%8A%B8%EB%9E%98%ED%94%BD%EA%B3%BC-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%84%B1%EB%8A%A5-%EC%A7%80%ED%91%9C/&lt;/a> _&lt;/p>
&lt;p>네트워크 성능 지표들을 체계적으로 비교 분석:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>성능 지표&lt;/th>
&lt;th>정의&lt;/th>
&lt;th>측정 방법&lt;/th>
&lt;th>QoS 관련성&lt;/th>
&lt;th>성능 최적화 방안&lt;/th>
&lt;th>일반적인 기준값&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>대역폭 (Bandwidth)&lt;/strong>&lt;/td>
&lt;td>• 네트워크가 처리할 수 있는 최대 데이터 용량 &lt;br>&lt;br> • 단위 시간당 전송 가능한 최대 비트 수 &lt;br>&lt;br> • 네트워크의 &amp;lsquo;잠재적&amp;rsquo; 전송 능력&lt;/td>
&lt;td>• 네트워크 인터페이스 카드(NIC) 속도 측정 &lt;br>&lt;br> • 대역폭 테스트 도구 사용 (예: Iperf) &lt;br>&lt;br> • ISP 제공 대역폭 확인&lt;/td>
&lt;td>• QoS 정책의 기본 설계 요소 &lt;br>&lt;br> • 서비스별 대역폭 할당의 기준 &lt;br>&lt;br> • 트래픽 쉐이핑의 기준점&lt;/td>
&lt;td>• 네트워크 인프라 업그레이드 &lt;br>&lt;br> • 대역폭 확장 &lt;br>&lt;br> • QoS를 통한 효율적 할당&lt;/td>
&lt;td>• 기업망: 1-10 Gbps &lt;br>&lt;br> • 가정용: 100Mbps-1Gbps &lt;br>&lt;br> • 모바일: 5-100Mbps&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>처리량 (Throughput)&lt;/strong>&lt;/td>
&lt;td>• 실제로 전송되는 데이터의 양 &lt;br>&lt;br> • 단위 시간당 성공적으로 전달된 데이터양 &lt;br>&lt;br> • 대역폭의 실제 사용량&lt;/td>
&lt;td>• 네트워크 모니터링 도구 &lt;br>&lt;br> • 패킷 캡처 및 분석 &lt;br>&lt;br> • 실시간 처리량 측정&lt;/td>
&lt;td>• 실제 서비스 성능 지표 &lt;br>&lt;br> • QoS 효과성 평가 기준 &lt;br>&lt;br> • 리소스 활용도 측정&lt;/td>
&lt;td>• 네트워크 병목 현상 제거 &lt;br>&lt;br> • 로드 밸런싱 구현 &lt;br>&lt;br> • 버퍼 최적화&lt;/td>
&lt;td>• 대역폭의 40-80% &lt;br>&lt;br> • 실시간 서비스: 최소 보장 처리량 설정 &lt;br>&lt;br> • 데이터 전송: 변동 허용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>지연 시간 (Latency)&lt;/strong>&lt;/td>
&lt;td>• 데이터 패킷의 편도 이동 시간 &lt;br>&lt;br> • 요청부터 응답까지의 시간 &lt;br>&lt;br> • 네트워크 반응성 지표&lt;/td>
&lt;td>• Ping 테스트 &lt;br>&lt;br> • RTT(Round Trip Time) 측정 &lt;br>&lt;br> • 전용 모니터링 도구&lt;/td>
&lt;td>• 실시간 애플리케이션 QoS 핵심 요소 &lt;br>&lt;br> • 서비스 품질 결정 요인 &lt;br>&lt;br> • 우선순위 정책 기준&lt;/td>
&lt;td>• 물리적 거리 최적화 &lt;br>&lt;br> • 라우팅 경로 최적화 &lt;br>&lt;br> • CDN 활용&lt;/td>
&lt;td>• VoIP: &amp;lt;150ms &lt;br>&lt;br> • 게이밍: &amp;lt;50ms &lt;br>&lt;br> • 웹 서비스: &amp;lt;200ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>지연 (Delay)&lt;/strong>&lt;/td>
&lt;td>• 모든 종류의 지연 시간 총합 &lt;br>&lt;br> • 전파, 처리, 큐잉 지연 포함 &lt;br>&lt;br> • 종단간 서비스 품질 지표&lt;/td>
&lt;td>• End-to-End 지연 측정 &lt;br>&lt;br> • 구간별 지연 분석 &lt;br>&lt;br> • 네트워크 분석 도구&lt;/td>
&lt;td>• 전체적인 서비스 품질 영향 &lt;br>&lt;br> • QoS 정책 효과 측정 &lt;br>&lt;br> • 성능 최적화 지표&lt;/td>
&lt;td>• QoS 정책 최적화 &lt;br>&lt;br> • 네트워크 구성 개선 &lt;br>&lt;br> • 하드웨어 성능 향상&lt;/td>
&lt;td>• 실시간 통신: &amp;lt;250ms &lt;br>&lt;br> • 스트리밍: &amp;lt;400ms &lt;br>&lt;br> • 일반 데이터: &amp;lt;1s&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 손실 (Packet Loss)&lt;/strong>&lt;/td>
&lt;td>• 전송 중 손실되는 패킷의 비율 &lt;br>&lt;br> • 네트워크 신뢰성 지표 &lt;br>&lt;br> • 혼잡도 측정 기준&lt;/td>
&lt;td>• ICMP 테스트 &lt;br>&lt;br> • 패킷 추적 도구 &lt;br>&lt;br> • 네트워크 모니터링&lt;/td>
&lt;td>• 서비스 품질 저하 요인 &lt;br>&lt;br> • QoS 정책 조정 기준 &lt;br>&lt;br> • 우선순위 처리 대상&lt;/td>
&lt;td>• 버퍼 크기 조정 &lt;br>&lt;br> • 혼잡 제어 구현 &lt;br>&lt;br> • 오류 복구 메커니즘&lt;/td>
&lt;td>• VoIP: &amp;lt;1% &lt;br>&lt;br> • 비디오: &amp;lt;2% &lt;br>&lt;br> • 데이터: &amp;lt;5%&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 성능 지표의 관계성 및 중요 고려사항:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>상호 연관성&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>대역폭과 처리량은 직접적인 관계가 있으며, 처리량은 항상 대역폭 이하&lt;/li>
&lt;li>지연과 패킷 손실은 처리량에 영향을 미침&lt;/li>
&lt;li>모든 지표는 전체적인 QoS에 영향을 줌&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>최적화 우선순위&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>실시간 서비스: 지연 시간과 지터 최소화가 중요&lt;/li>
&lt;li>대용량 데이터 전송: 처리량 최적화가 중요&lt;/li>
&lt;li>중요 업무 애플리케이션: 패킷 손실 최소화가 중요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>모니터링 전략&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>모든 지표의 통합적 모니터링 필요&lt;/li>
&lt;li>서비스 특성에 따른 중점 지표 선정&lt;/li>
&lt;li>임계값 설정 및 알림 구성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 성능 지표들은 네트워크 서비스의 품질을 결정하는 핵심 요소이며, 각 지표의 특성을 이해하고 적절히 관리하는 것이 중요하다.&lt;/p>
&lt;h3>QoS(Quality Of Service)&lt;/h3>&lt;p>QoS(Quality of Service)는 네트워크에서 특정 데이터 트래픽에 대해 우선순위를 부여하고 일정 수준의 서비스 품질을 보장하는 기술이다.&lt;/p>
&lt;p>주요 기능:&lt;/p>
&lt;ol>
&lt;li>트래픽 분류와 우선순위 설정&lt;/li>
&lt;li>대역폭 관리 및 할당&lt;/li>
&lt;li>지연(Latency), 지터(Jitter), 패킷 손실(Packet Loss) 최소화&lt;/li>
&lt;/ol>
&lt;p>QoS 구현 메커니즘:&lt;/p>
&lt;ol>
&lt;li>분류 (Classification)&lt;/li>
&lt;li>표시 (Marking): 패킷에 우선순위를 표시하여 네트워크 장비들이 이를 인식할 수 있게 한다.&lt;/li>
&lt;li>정책 (Policing) 및 쉐이핑 (Shaping): 트래픽의 양을 제어하고 제한한다.
&lt;ul>
&lt;li>QoS 정책을 설계할 때 고려해야 할 사항들:
&lt;ol>
&lt;li>트래픽 우선순위 정의
&lt;ul>
&lt;li>실시간 음성/영상 통신: 최우선 순위&lt;/li>
&lt;li>트랜잭션 데이터: 중간 우선순위&lt;/li>
&lt;li>일반 데이터: 낮은 우선순위&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>대역폭 할당&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>QoS 구현 방법:&lt;/p>
&lt;ol>
&lt;li>트래픽 쉐이핑(Traffic Shaping): 네트워크 트래픽의 속도를 조절하여 대역폭 사용을 최적화한다.&lt;/li>
&lt;li>트래픽 폴리싱(Traffic Policing): 설정된 대역폭 한계를 초과하는 트래픽을 제어한다.&lt;/li>
&lt;li>패킷 마킹: 패킷에 우선순위를 표시하여 네트워크 장비가 이를 인식하고 처리할 수 있게 한다.&lt;/li>
&lt;/ol>
&lt;p>QoS의 적용 사례:&lt;/p>
&lt;ol>
&lt;li>VoIP(Voice over IP): 음성 통화의 품질 유지&lt;/li>
&lt;li>비디오 스트리밍: 끊김 없는 영상 제공&lt;/li>
&lt;li>기업 네트워크: 중요 업무 애플리케이션의 성능 보장&lt;/li>
&lt;li>공공 네트워크: 긴급 서비스에 대한 우선순위 부여&lt;/li>
&lt;/ol>
&lt;p>QoS의 장점:&lt;/p>
&lt;ol>
&lt;li>중요 애플리케이션의 성능 보장&lt;/li>
&lt;li>네트워크 리소스의 효율적 관리&lt;/li>
&lt;li>사용자 경험 개선&lt;/li>
&lt;li>지점 간 트래픽 관리 최적화&lt;/li>
&lt;/ol>
&lt;p>QoS의 주요 매개변수&lt;/p>
&lt;ul>
&lt;li>대역폭(Bandwidth): 네트워크 링크의 용량&lt;/li>
&lt;li>지연(Delay): 패킷이 소스에서 목적지까지 이동하는 데 걸리는 시간&lt;/li>
&lt;li>지터(Jitter): 패킷 간 도착 시간의 변동&lt;/li>
&lt;li>패킷 손실(Packet Loss): 전송 중 손실되는 패킷의 비율&lt;/li>
&lt;/ul>
&lt;h3>네트워크 문제 진단 및 해결 방법&lt;/h3>&lt;p>네트워크 문제를 진단하고 해결하기 위한 체계적인 접근 방법:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>문제 식별&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>사용자 인터뷰를 통해 문제의 증상, 발생 시점, 영향 범위 등을 파악한다.&lt;/li>
&lt;li>네트워크 로그를 분석하여 이상 징후를 확인한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>물리적 연결 확인&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>모든 케이블이 올바르게 연결되어 있는지 확인한다.&lt;/li>
&lt;li>네트워크 장비(라우터, 스위치 등)의 전원 상태와 LED 표시등을 점검한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>기본적인 네트워크 명령어 사용&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>ping: 네트워크 연결성을 테스트한다.&lt;/li>
&lt;li>traceroute: 패킷이 목적지까지 거치는 경로를 추적한다.&lt;/li>
&lt;li>nslookup: DNS 조회 문제를 확인한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>네트워크 구성 확인&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>IP 주소, 서브넷 마스크, 게이트웨이 설정을 점검한다.&lt;/li>
&lt;li>DHCP 서버 설정을 확인한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>고급 진단 도구 활용&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>패킷 분석기(예: Wireshark)를 사용하여 네트워크 트래픽을 상세히 분석한다.&lt;/li>
&lt;li>네트워크 성능 모니터링 도구를 활용하여 실시간으로 네트워크 상태를 모니터링한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>문제 해결 및 최적화&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>식별된 문제에 따라 적절한 해결책을 적용한다. 예를 들어:
&lt;ul>
&lt;li>네트워크 장비 재시작&lt;/li>
&lt;li>펌웨어 업데이트&lt;/li>
&lt;li>네트워크 설정 조정&lt;/li>
&lt;li>대역폭 확장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>네트워크 트래픽 우선순위 설정을 통해 중요한 애플리케이션의 성능을 개선한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>문서화 및 모니터링&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>문제 해결 과정과 결과를 문서화하여 향후 참조할 수 있도록 한다.&lt;/li>
&lt;li>지속적인 모니터링을 통해 문제의 재발을 방지하고 네트워크 성능을 최적화한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>일반적인 네트워크 문제와 해결 방법&lt;/h3>&lt;ol>
&lt;li>
&lt;p>높은 지연시간&lt;/p>
&lt;ul>
&lt;li>MTU 크기 최적화&lt;/li>
&lt;li>네트워크 경로 추적&lt;/li>
&lt;li>QoS(Quality of Service) 설정 검토&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># MTU 크기 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ip link show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 경로 추적&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">traceroute google.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>패킷 손실&lt;/p>
&lt;ul>
&lt;li>물리적 연결 상태 확인&lt;/li>
&lt;li>네트워크 인터페이스 오류 검사&lt;/li>
&lt;li>버퍼 크기 조정&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 네트워크 인터페이스 상태 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ethtool eth0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 버퍼 크기 조정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -w net.core.rmem_max&lt;span class="o">=&lt;/span>&lt;span class="m">16777216&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -w net.core.wmem_max&lt;span class="o">=&lt;/span>&lt;span class="m">16777216&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>DNS 문제&lt;/p>
&lt;ul>
&lt;li>DNS 서버 응답 시간 측정&lt;/li>
&lt;li>DNS 캐시 초기화&lt;/li>
&lt;li>대체 DNS 서버 설정&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DNS 응답 시간 측정&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dig google.com &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;Query time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DNS 캐시 초기화 (Ubuntu/Debian)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemd-resolve --flush-caches&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>네트워크 문제 진단 도구와 방법&lt;/h3>&lt;ol>
&lt;li>
&lt;p>tcpdump를 사용한 패킷 분석:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HTTP 트래픽 캡처&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tcpdump -i eth0 port &lt;span class="m">80&lt;/span> -w capture.pcap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 특정 호스트와의 통신 모니터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tcpdump host 192.168.1.100&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>netstat을 사용한 네트워크 연결 상태 확인:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 활성화된 모든 연결 보기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netstat -an
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 리스닝 포트 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">netstat -tlnp&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>시스템 로그 분석:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 네트워크 관련 로그 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tail -f /var/log/syslog &lt;span class="p">|&lt;/span> grep -i network
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># dmesg를 통한 네트워크 드라이버 로그 확인&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dmesg &lt;span class="p">|&lt;/span> grep eth&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;p>네트워크 성능 모니터링 스크립트 예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">statistics&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">monitor_network_performance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">duration&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">300&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 5분 동안 네트워크 성능을 모니터링하는 함수
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Args:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> target: 모니터링할 대상 호스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> duration: 모니터링 지속 시간(초)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">latencies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packet_loss&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_pings&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">duration&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ping 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;ping&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;-c&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">capture_output&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timeout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total_pings&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">returncode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 지연시간 추출&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">latency&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;time=&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">()[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">latencies&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">latency&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packet_loss&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">except&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TimeoutExpired&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packet_loss&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">avg_latency&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">statistics&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mean&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">latencies&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">latencies&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packet_loss_rate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">packet_loss&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">total_pings&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;average_latency&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">avg_latency&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;packet_loss_rate&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">packet_loss_rate&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;min_latency&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">latencies&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">latencies&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;max_latency&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">latencies&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">latencies&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>네트워크 성능 최적화 팁&lt;/h3>&lt;ol>
&lt;li>
&lt;p>TCP 매개변수 튜닝:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TCP 윈도우 스케일링 활성화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -w net.ipv4.tcp_window_scaling&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># TCP 자동 튜닝 활성화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -w net.ipv4.tcp_moderate_rcvbuf&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>네트워크 인터페이스 최적화:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 인터럽트 처리 최적화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ethtool -C eth0 rx-usecs &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 오프로딩 기능 활성화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ethtool -K eth0 tso on gso on gro on&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>시스템 리소스 모니터링:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">monitor_system_resources&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;시스템 리소스 사용량 모니터링&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cpu_percent&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">psutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpu_percent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">interval&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">memory&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">psutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">virtual_memory&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network_io&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">psutil&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">net_io_counters&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;cpu_usage&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">cpu_percent&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;memory_usage&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">memory&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">percent&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;bytes_sent&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">network_io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bytes_sent&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;bytes_recv&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">network_io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bytes_recv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>TCP/IP 4계층 - 4. Application Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-4-application-layer/</link><pubDate>Fri, 27 Sep 2024 05:58:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/tcp-ip-4-layers/tcpip-4-layers-4-application-layer/</guid><description>
&lt;h2>Application Layer&lt;/h2>&lt;p>TCP/IP 프로토콜 스택에서 가장 상위 계층으로, 사용자와 가장 가까운 계층이다.&lt;br>
이메일, 웹 서핑, 파일 전송 등의 서비스를 위한 프로토콜들이 모여 있는 계층이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/TCP%20IP%204%20Layers/tcp-ip-model-vs-osi.png"
alt="A side-by-side comparison illustration of the TCP/IP mod_el structure and OSI model structure_."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/" target="_blank" rel="noopener">https://cheapsslsecurity.com/blog/what-is-the-tcp-model-an-exploration-of-tcp-ip-layers/&lt;/a> _&lt;/p>
&lt;h3>주요 기능&lt;/h3>&lt;ul>
&lt;li>사용자가 네트워크 서비스를 이용할 수 있도록 인터페이스를 제공한다.&lt;/li>
&lt;li>응용 프로그램 간의 데이터 통신을 위한 프로토콜을 정의한다.&lt;/li>
&lt;li>하위 계층의 서비스에 접근할 수 있는 기능을 제공한다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위&lt;/h3>&lt;ul>
&lt;li>단위: 메시지(Message) / 데이터(Data)&lt;/li>
&lt;li>구조: 순수한 애플리케이션 데이터&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>클라이언트-서버 모델이나 P2P 구조로 구현될 수 있다.&lt;/li>
&lt;li>소켓을 통해 전송 계층과 통신한다.&lt;/li>
&lt;li>OSI 7계층 모델의 세션 계층, 표현 계층, 응용 계층을 포함한다.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Application Layer에서 소켓(Socket)의 역할:&lt;/p>
&lt;ol>
&lt;li>인터페이스 제공: 소켓은 Application Layer와 Transport Layer 사이의 인터페이스 역할을 한다. 이를 통해 애플리케이션이 네트워크 통신을 할 수 있게 한다.&lt;/li>
&lt;li>데이터 전송 제어: 프로세스에서 전달하는 데이터와 프로세스로 전달되는 데이터를 제어한다.&lt;/li>
&lt;li>API 제공: 소켓은 프로세스가 메시지를 송수신할 수 있는 API나 함수를 제공한다.&lt;/li>
&lt;li>운영체제와의 연결: 애플리케이션에서 생성된 메시지를 운영체제의 커널로 전달하는 역할을 한다.&lt;/li>
&lt;li>프로토콜 사용 지원: 개발자가 TCP나 UDP와 같은 전송 프로토콜을 간접적으로 사용할 수 있게 한다.&lt;/li>
&lt;li>프로세스 간 통신 지원: 소켓을 통해 서로 다른 호스트의 프로세스들이 통신할 수 있다.&lt;br>
소켓은 애플리케이션 개발자가 네트워크 통신을 구현할 때 필수적인 요소로, 복잡한 하위 계층의 동작을 추상화하여 사용하기 쉬운 인터페이스를 제공한다.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h3>주소 체계&lt;/h3>&lt;blockquote>
&lt;p>port (포트)&lt;br>
네트워크에서 서로 다른 프로세스들이 통신할 수 있도록 구분해주는 논리적인 접속 위치.&lt;br>
각 포트는 16 비트 숫자로 표현되며, 범위는 0~65535&lt;br>
역할&lt;/p>
&lt;ul>
&lt;li>데이터 트래픽 분류: 포트는 컴퓨터가 받는 네트워크 트래픽을 종류별로 구분하는 데 도움을 준다.&lt;/li>
&lt;li>서비스 식별: 각 포트는 특정 서비스나 애플리케이션과 연결되어 있어, 데이터가 어떤 서비스로 전달되어야 하는 식별&lt;/li>
&lt;li>다중화 (Multiplexing): 하나의 네트워크 연결을 통해 여러 서비스나 애플리케이션이 동시에 통신할 수 있게 됨.&lt;br>
기능&lt;/li>
&lt;li>통신 엔드포인트 제공: 네트워크 상의 특정 서비스나 프로세스와의 통신을 위한 엔드포인트&lt;/li>
&lt;li>데이터 라우팅: 들어오는 데이터를 올바른 애플리케이션이나 서비스로 전달&lt;/li>
&lt;li>프로토콜 구분: 각 포트는 특정 네트워크 프로토콜 (예: HTTP(80), HTTPS(443), FTP(21), SMTP(25)) 과 연관되어 있어 프로토콜 별 통신을 가능하게 함.&lt;/li>
&lt;li>동시 연결 관리: 하나의 IP 주소에서 여러 개의 네트워크 연결을 동시에 관리할 수 있게 한다.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>포트 번호를 사용하여 특정 애플리케이션이나 프로세스를 식별한다.&lt;/li>
&lt;/ul>
&lt;p>Application Layer는 사용자가 직접 상호작용하는 계층으로, 다양한 네트워크 서비스를 제공하고 하위 계층과의 통신을 담당하는 중요한 역할을 수행한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers - 4. Transport Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-4-transport-layer/</link><pubDate>Wed, 25 Sep 2024 07:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-4-transport-layer/</guid><description>
&lt;h2>Transport Layer(전송 계층)&lt;/h2>&lt;p>전송 계층은 OSI 모델의 4번째 계층으로, 종단 간(end-to-end) 통신을 담당한다.&lt;br>
이 계층은 상위 계층에서 받은 데이터를 세그먼트로 분할하고, 목적지에서 다시 조립하여 신뢰성 있는 데이터 전송을 보장한다.&lt;/p>
&lt;p>전송 계층은 네트워크 통신의 신뢰성과 효율성을 보장하는 중요한 역할을 수행하며, 상위 계층의 애플리케이션에 투명한 데이터 전송 서비스를 제공한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi_model_transport_layer_4.png"
alt="Transport Layer"
title="Transport Layer"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ol>
&lt;li>세그멘테이션과 재조립: 데이터를 세그먼트로 분할하고 목적지에서 재조립한다.&lt;/li>
&lt;li>연결 제어: 연결 지향적(TCP) 또는 비연결형(UDP) 서비스를 제공한다.&lt;/li>
&lt;li>흐름 제어: 송신자와 수신자 간의 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>오류 제어: 데이터 전송 중 발생한 오류를 감지하고 수정한다.&lt;/li>
&lt;li>다중화와 역다중화: 여러 애플리케이션의 데이터를 하나의 연결로 전송하고 수신 시 분리한다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>세그멘테이션 (Segmentation)&lt;/p>
&lt;ul>
&lt;li>상위 계층에서 받은 큰 데이터를 더 작은 단위인 세그먼트로 나누는 과정이다.&lt;/li>
&lt;li>효율적인 오류 처리: 세그먼트 단위로 오류를 처리할 수 있어, 문제가 발생했을 때 해당 세그먼트만 재전송하면 된다.&lt;/li>
&lt;li>네트워크 자원의 효율적 사용: 작은 단위로 나누어 전송함으로써 네트워크 대역폭을 효율적으로 사용할 수 있다.&lt;/li>
&lt;li>다중화(Multiplexing) 가능: 여러 애플리케이션의 데이터를 동시에 전송할 수 있다.&lt;/li>
&lt;li>작동 방식
&lt;ol>
&lt;li>데이터 분할 애플리케이션 계층에서 받은 데이터를 적절한 크기의 세그먼트로 나눈다.&lt;br>
TCP의 경우, Maximum Segment Size(MSS)를 기준으로 데이터를 나눈다.&lt;br>
MSS는 일반적으로 MTU에서 IP와 TCP 헤더 크기를 뺀 값이다.&lt;/li>
&lt;li>순서 번호 할당 각 세그먼트에는 순서 번호(Sequence Number)가 부여된다.&lt;br>
이는 수신측에서 데이터를 올바른 순서로 재조립할 수 있게 해준다.&lt;/li>
&lt;li>헤더 추가 각 세그먼트에는 TCP 또는 UDP 헤더가 추가된다.&lt;br>
TCP 헤더의 경우 다음과 같은 중요한 정보를 포함한다:
&lt;ul>
&lt;li>출발지/목적지 포트 번호&lt;/li>
&lt;li>순서 번호(Sequence Number)&lt;/li>
&lt;li>확인 응답 번호(Acknowledgment Number)&lt;/li>
&lt;li>윈도우 크기&lt;/li>
&lt;li>체크섬&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>세그멘테이션 관련 고려사항
&lt;ol>
&lt;li>세그먼트 크기 선택
&lt;ul>
&lt;li>너무 크면: 재전송 시 비효율적&lt;/li>
&lt;li>너무 작으면: 헤더 오버헤드 증가&lt;/li>
&lt;li>최적의 크기 선택이 중요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>버퍼 관리: 수신측에서 세그먼트를 저장하고 재조립할 수 있는 충분한 버퍼 공간이 필요하다.&lt;/li>
&lt;li>타이밍 관리: 재전송 타이머, 확인 응답 대기 시간 등을 적절히 관리해야 한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>TCP와 UDP의 세그멘테이션 차이
&lt;ul>
&lt;li>TCP와 UDP는 세그멘테이션을 다르게 처리한다.&lt;/li>
&lt;li>TCP의 세그멘테이션:
&lt;ul>
&lt;li>신뢰성 있는 전송을 보장&lt;/li>
&lt;li>순서 보장&lt;/li>
&lt;li>흐름 제어와 혼잡 제어 제공&lt;/li>
&lt;li>세그먼트 손실 시 재전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>UDP의 세그멘테이션:
&lt;ul>
&lt;li>단순히 데이터그램으로 나누기만 함&lt;/li>
&lt;li>순서 보장 없음&lt;/li>
&lt;li>신뢰성 보장 없음&lt;/li>
&lt;li>더 빠른 전송 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>종단 간 통신을 제공한다.&lt;/li>
&lt;li>신뢰성 있는 데이터 전송을 보장한다.&lt;/li>
&lt;li>포트 번호를 사용하여 애플리케이션을 식별한다.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>port (포트)&lt;br>
네트워크에서 서로 다른 프로세스들이 통신할 수 있도록 구분해주는 논리적인 접속 위치.&lt;br>
각 포트는 16 비트 숫자로 표현되며, 범위는 0~65535&lt;br>
역할&lt;/p>
&lt;ul>
&lt;li>데이터 트래픽 분류: 포트는 컴퓨터가 받는 네트워크 트래픽을 종류별로 구분하는 데 도움을 준다.&lt;/li>
&lt;li>서비스 식별: 각 포트는 특정 서비스나 애플리케이션과 연결되어 있어, 데이터가 어떤 서비스로 전달되어야 하는 식별&lt;/li>
&lt;li>다중화 (Multiplexing): 하나의 네트워크 연결을 통해 여러 서비스나 애플리케이션이 동시에 통신할 수 있게 됨.&lt;br>
기능&lt;/li>
&lt;li>통신 엔드포인트 제공: 네트워크 상의 특정 서비스나 프로세스와의 통신을 위한 엔드포인트&lt;/li>
&lt;li>데이터 라우팅: 들어오는 데이터를 올바른 애플리케이션이나 서비스로 전달&lt;/li>
&lt;li>프로토콜 구분: 각 포트는 특정 네트워크 프로토콜 (예: HTTP(80), HTTPS(443), FTP(21), SMTP(25)) 과 연관되어 있어 프로토콜 별 통신을 가능하게 함.&lt;/li>
&lt;li>동시 연결 관리: 하나의 IP 주소에서 여러 개의 네트워크 연결을 동시에 관리할 수 있게 한다.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3>데이터 단위와 구조&lt;/h3>&lt;p>데이터 단위: 세그먼트(TCP) 또는 데이터그램(UDP)&lt;br>
기본 구조: 헤더 + 데이터&lt;br>
헤더 필드:&lt;/p>
&lt;ul>
&lt;li>출발지 포트 번호&lt;/li>
&lt;li>목적지 포트 번호&lt;/li>
&lt;li>시퀀스 번호 (TCP)&lt;/li>
&lt;li>확인 응답 번호 (TCP)&lt;/li>
&lt;li>체크섬&lt;/li>
&lt;/ul>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>애플리케이션 계층에서 데이터를 받는다.&lt;/li>
&lt;li>데이터를 세그먼트로 분할한다.&lt;/li>
&lt;li>각 세그먼트에 헤더를 추가한다.&lt;/li>
&lt;li>네트워크 계층으로 세그먼트를 전달한다.&lt;/li>
&lt;li>수신 측에서는 세그먼트를 재조립하여 애플리케이션 계층으로 전달한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 프로토콜&lt;/h3>&lt;ol>
&lt;li>TCP (Transmission Control Protocol):
&lt;ul>
&lt;li>연결 지향적이고 신뢰성 있는 데이터 전송을 제공한다.&lt;/li>
&lt;li>데이터의 순서를 보장하고 손실된 데이터를 재전송한다.&lt;/li>
&lt;li>흐름 제어와 혼잡 제어 제공&lt;/li>
&lt;li>3-way handshake: TCP 연결을 설정하는 과정.
&lt;ol>
&lt;li>SYN: 연결 요청&lt;/li>
&lt;li>SYN-ACK: 요청 승인&lt;/li>
&lt;li>ACK: 연결 설정 완료&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>4-way Handshake: 클라이언트와 서버 간의 연결을 종료하는 과정.
&lt;ol>
&lt;li>FIN (클라이언트 → 서버): 클라이언트가 연결 종료를 요청.&lt;/li>
&lt;li>ACK (서버 → 클라이언트): 서버가 FIN을 받았음을 확인. 클라이언트→서버 방향의 연결이 닫힌다.&lt;/li>
&lt;li>FIN (서버 → 클라이언트): 서버가 모든 데이터 전송을 완료하고 연결 종료를 요청한다.&lt;/li>
&lt;li>ACK (클라이언트 → 서버): 클라이언트가 서버의 FIN을 확인한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>UDP (User Datagram Protocol):
&lt;ul>
&lt;li>비연결형이고 신뢰성이 낮지만 빠른 전송을 제공한다.&lt;/li>
&lt;li>순서나 신뢰성 보장 없음&lt;/li>
&lt;li>실시간 애플리케이션에 적합하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>주의 사항&lt;/h3>&lt;ul>
&lt;li>네트워크 혼잡을 방지하기 위한 적절한 흐름 제어가 필요하다.&lt;/li>
&lt;li>TCP와 UDP의 특성을 이해하고 적절히 선택해야 한다.&lt;/li>
&lt;li>포트 번호 충돌을 피해야 한다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>APIs</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/</link><pubDate>Sat, 05 Oct 2024 17:42:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/</guid><description>
&lt;h2>API(Application Programming Interface)s&lt;/h2>&lt;p>두 애플리케이션이 서로 통신할 수 있게 해주는 소프트웨어 중개자.&lt;br>
이는 데이터와 기능을 안전하고 제어된 방식으로 공유할 수 있게 해주는 메커니즘이다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">레스토랑에서…
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 손님(클라이언트) = API를 사용하는 프로그램
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 웨이터(API) = 주문을 주방에 전달하고 음식을 가져오는 인터페이스
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- 주방(서버) = 실제 서비스를 제공하는 시스템&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>추상화: API는 복잡한 내부 로직을 숨기고 간단한 인터페이스를 제공한다.&lt;/li>
&lt;li>표준화: API는 일관된 방식으로 데이터를 주고받을 수 있게 한다.&lt;/li>
&lt;li>모듈성: API를 통해 애플리케이션을 독립적인 모듈로 분리할 수 있다.&lt;/li>
&lt;li>확장성: API를 사용하면 기존 시스템에 새로운 기능을 쉽게 추가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>API 설계할 때 원칙&lt;/h3>&lt;ol>
&lt;li>
&lt;p>일관성: API 구조, 명명 규칙, 오류 처리 등에서 일관성을 유지해야 한다.&lt;br>
- 명명 규칙 통일&lt;br>
- 응답 형식 통일&lt;br>
- 에러 처리 방식 통일&lt;br>
잘된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 명명 규칙 통일&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 목록 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users/&amp;lt;int:user_id&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 특정 사용자 정보 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 응답 형식 통일&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">api_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;status&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;success&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">data&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">error&lt;/span> &lt;span class="ow">is&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">error&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">response&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 에러 처리 방식 통일&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.errorhandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">not_found_error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">api_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Resource not found&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>잘못된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 일관성 없는 명명 규칙&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/getUsers&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">fetch_users&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 목록 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/user/&amp;lt;int:id&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_single_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 특정 사용자 정보 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 일관성 없는 응답 형식&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">api_response1&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">api_response2&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">jsonify&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;success&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">})&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>간결성: API는 가능한 한 간단하고 직관적이어야 한다.&lt;br>
- 간단하고 직관적인 엔드포인트&lt;br>
- 최소한의 복잡도&lt;br>
잘된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 목록 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_user&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 새 사용자 생성&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>잘못된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/get_all_users_from_database&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_all_users_from_database&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 사용자 목록 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/create_new_user_and_save_to_database&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">create_new_user_and_save_to_database&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 새 사용자 생성&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>명확성: API의 기능과 사용 방법이 명확해야 한다.&lt;br>
- 명확한 파라미터 이름&lt;br>
- 최소한의 복잡도&lt;br>
잘된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;page&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">limit&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;limit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 페이지네이션된 사용자 목록 반환&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>잘못된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;p&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;l&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 불명확한 파라미터 이름 사용&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>버전 관리: API의 변경사항을 관리하기 위해 버전 관리가 필요하다.&lt;br>
- API 버전 명시&lt;br>
- 하위 호환성 유지&lt;br>
- 점진적 업데이트&lt;br>
잘된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/v1/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users_v1&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># v1 사용자 목록 반환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/v2/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users_v2&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># v2 사용자 목록 반환 (새로운 기능 추가)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>잘못된 예)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;GET&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_users&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 버전 관리 없이 API 변경&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">some_condition&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 새로운 동작&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 기존 동작&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h4>엔드포인트를 설계할 때 주의해야 할 주요 사항&lt;/h4>&lt;ol>
&lt;li>명사 사용: 동사 대신 명사를 사용하여 리소스를 표현한다.
&lt;ul>
&lt;li>좋은 예: /users, /products&lt;/li>
&lt;li>나쁜 예: /getUsers, /createProduct&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>복수형 사용: 컬렉션을 나타낼 때는 복수형 명사를 사용한다.
&lt;ul>
&lt;li>예: /users, /posts&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>계층 구조 반영: 관계를 표현할 때 중첩을 사용한다.
&lt;ul>
&lt;li>예: /posts/{postId}/comments&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>불필요한 정보 제거:
&lt;ul>
&lt;li>마지막 슬래시(/) 제거&lt;/li>
&lt;li>대문자 사용 피하기&lt;/li>
&lt;li>밑줄(_) 대신 하이픈(-) 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>HTTP 메서드 활용: 리소스에 대한 행위는 HTTP 메서드로 표현한다.
&lt;ul>
&lt;li>GET, POST, PUT, DELETE 등을 적절히 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>명확한 매개변수 사용: 필터링, 정렬, 페이지네이션을 위한 매개변수는 목적을 명확히 나타내는 이름을 사용한다.
&lt;ul>
&lt;li>예: /users?name=John&amp;amp;age=25&amp;amp;sort=asc&amp;amp;page=2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>적절한 API 응답 코드를 사용하는 방법&lt;/h4>&lt;ol>
&lt;li>표준 HTTP 상태 코드 사용:&lt;br>
가능한 한 표준 HTTP 상태 코드를 사용하여 일관되고 잘 이해되는 사용자 경험을 제공한다.&lt;/li>
&lt;li>일관성 유지:&lt;br>
API 전체에서 상태 코드를 일관되게 사용하여 클라이언트가 각 코드의 의미를 쉽게 이해할 수 있도록 한다.&lt;/li>
&lt;li>적절한 코드 선택:&lt;br>
응답의 성격에 따라 적절한 상태 코드를 선택한다.&lt;/li>
&lt;li>상세한 오류 정보 제공:&lt;br>
오류 상태 코드 반환 시 클라이언트가 문제를 진단하고 해결할 수 있도록 상세한 오류 정보를 함께 제공한다.&lt;/li>
&lt;li>상태 코드 과부하 방지:&lt;br>
하나의 상태 코드를 다른 맥락에서 다른 의미로 사용하지 않도록 한다.&lt;/li>
&lt;li>API 문서화:&lt;br>
사용된 상태 코드와 그 의미를 명확히 문서화하여 개발자들이 쉽게 이해하고 사용할 수 있도록 한다.&lt;/li>
&lt;/ol>
&lt;h4>파라미터 이름을 선택할 때 고려할 사항&lt;/h4>&lt;ol>
&lt;li>설명적인 이름 사용:&lt;br>
파라미터의 목적과 기능을 명확히 나타내는 이름을 선택한다.&lt;/li>
&lt;li>의미 기반 이름 사용:&lt;br>
파라미터의 타입보다는 의미에 기반한 이름을 사용하는 것을 고려한다.&lt;/li>
&lt;li>약어와 숫자 인덱스 사용 지양:&lt;br>
이해하기 어려운 약어나 의미 없는 숫자 인덱스 대신 완전한 단어를 사용한다.&lt;/li>
&lt;li>간단하고 설명적인 이름 사용:&lt;br>
너무 길지 않으면서도 파라미터의 역할을 잘 설명하는 이름을 선택한다.&lt;/li>
&lt;li>오해의 소지가 있는 이름 피하기:&lt;br>
파라미터의 실제 기능과 일치하지 않는 이름은 사용하지 않는다.&lt;/li>
&lt;li>컨텍스트 반영:&lt;br>
파라미터가 사용되는 맥락을 고려하여 이름을 선택한다.&lt;/li>
&lt;li>필터링, 정렬, 페이지네이션을 위한 명확한 이름 사용:&lt;br>
예를 들어, &amp;rsquo;tags&amp;rsquo;, &amp;lsquo;sort&amp;rsquo;, &amp;lsquo;page&amp;rsquo; 등의 이름을 사용하여 각 기능을 명확히 나타낸다.&lt;/li>
&lt;/ol>
&lt;h3>API를 설계할 때 고려해야 할 사항&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>고려사항&lt;/th>
&lt;th>백엔드 방안&lt;/th>
&lt;th>프론트엔드 방안&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기술적&lt;/td>
&lt;td>성능 최적화&lt;/td>
&lt;td>- 데이터베이스 쿼리 최적화 &lt;br>- 비동기 처리 구현 &lt;br>- 데이터 압축 사용 &lt;br>- 서버 사이드 캐싱&lt;/td>
&lt;td>- 클라이언트 사이드 캐싱 &lt;br>- 최적화된 API 호출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>확장성&lt;/td>
&lt;td>- 수평적 확장 구현 &lt;br>- 마이크로서비스 아키텍처 &lt;br>- 로드 밸런싱&lt;/td>
&lt;td>- 모듈화된 코드 구조&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>유지보수성&lt;/td>
&lt;td>- 명확한 코드 구조와 문서화 &lt;br>- 버전 관리 전략 &lt;br>- 모듈화된 코드 설계&lt;/td>
&lt;td>- 컴포넌트 기반 아키텍처 &lt;br>- 코드 스플리팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>에러 처리&lt;/td>
&lt;td>- 일관된 에러 응답 형식 &lt;br>- 적절한 HTTP 상태 코드 &lt;br>- 상세한 에러 메시지&lt;/td>
&lt;td>- 에러 바운더리 사용 &lt;br>- 사용자 친화적 에러 메시지 표시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>캐싱 전략&lt;/td>
&lt;td>- 인메모리 캐시 사용 &lt;br>CDN 활용&lt;/td>
&lt;td>- 브라우저 캐시 활용 &lt;br>- 서비스 워커 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용자 경험&lt;/td>
&lt;td>직관적인 사용법&lt;/td>
&lt;td>- 명확한 API 엔드포인트 네이밍 &lt;br>RESTful 설계 원칙 준수&lt;/td>
&lt;td>- 일관된 UI/UX 디자인 &lt;br>- 직관적인 사용자 인터페이스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>명확한 피드백&lt;/td>
&lt;td>- 상세한 응답 메시지 제공&lt;/td>
&lt;td>- 로딩 상태 표시 &lt;br>- 성공/실패 메시지 표시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>적절한 응답 시간&lt;/td>
&lt;td>- 응답 시간 모니터링 및 최적화&lt;/td>
&lt;td>- 지연 로딩 구현 &lt;br>- 사용자 인터랙션 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>안정적인 서비스&lt;/td>
&lt;td>- 장애 복구 메커니즘 &lt;br>- 백업 및 복구 전략&lt;/td>
&lt;td>- 오프라인 모드 지원 &lt;br>- 재시도 메커니즘 구현&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>API 보안 및 관리&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>영역&lt;/th>
&lt;th>구성 요소&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>구현 방법&lt;/th>
&lt;th>모범 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>API 보안&lt;/strong>&lt;/td>
&lt;td>- 인증(Authentication)&lt;br>- 인가(Authorization)&lt;br>- 데이터 보호&lt;br>- 접근 제어&lt;br>- 로깅&lt;/td>
&lt;td>- 사용자 신원 확인&lt;br>- 권한 확인&lt;br>- 데이터 암호화&lt;br>- 접근 제한&lt;br>- 활동 기록&lt;/td>
&lt;td>- OAuth 2.0&lt;br>JWT&lt;br>HTTPS&lt;br>API 키&lt;br>- 감사 로그&lt;/td>
&lt;td>- 최소 권한 원칙&lt;br>- 정기적인 감사&lt;br>- 보안 업데이트&lt;br>- 취약점 점검&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API 문서화&lt;/strong>&lt;/td>
&lt;td>- API 스펙&lt;br>- 사용 예제&lt;br>- 에러 코드&lt;br>- 버전 정보&lt;br>- 변경 이력&lt;/td>
&lt;td>- 엔드포인트 설명&lt;br>- 요청/응답 예시&lt;br>- 오류 처리 방법&lt;br>- 버전별 차이&lt;br>- 업데이트 내역&lt;/td>
&lt;td>- Swagger/OpenAPI&lt;br>Postman&lt;br>GitBook&lt;br>Markdown&lt;br>API Blueprint&lt;/td>
&lt;td>- 실시간 업데이트&lt;br>- 예제 코드 포함&lt;br>- 명확한 설명&lt;br>- 검색 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API 테스트&lt;/strong>&lt;/td>
&lt;td>- 단위 테스트&lt;br>- 통합 테스트&lt;br>- 성능 테스트&lt;br>- 보안 테스트&lt;br>- 부하 테스트&lt;/td>
&lt;td>- 개별 기능 검증&lt;br>- 전체 흐름 검증&lt;br>- 응답 시간 측정&lt;br>- 보안 취약점 검사&lt;br>- 부하 대응력 검증&lt;/td>
&lt;td>- Postman&lt;br>JUnit&lt;br>JMeter&lt;br>SoapUI&lt;br>K6&lt;/td>
&lt;td>- 자동화 테스트&lt;br>CI/CD 통합&lt;br>- 테스트 케이스 관리&lt;br>- 정기적 실행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API 관리&lt;/strong>&lt;/td>
&lt;td>- 모니터링&lt;br>- 분석&lt;br>- 버전 관리&lt;br>- 접근 제어&lt;br>- 트래픽 관리&lt;/td>
&lt;td>- 성능 모니터링&lt;br>- 사용량 분석&lt;br>- 버전 추적&lt;br>- 사용자 관리&lt;br>- 부하 조절&lt;/td>
&lt;td>- API Gateway&lt;br>- 모니터링 도구&lt;br>- 로그 분석&lt;br>- 대시보드&lt;br>- 알림 시스템&lt;/td>
&lt;td>- 실시간 모니터링&lt;br>- 사용량 제한&lt;br>- 장애 대응&lt;br>- 백업 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3>종류&lt;/h3>&lt;h4>프로토콜에 따른 분류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API 종류&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>대표적 예시&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>REST API&lt;/strong>&lt;/td>
&lt;td>HTTP 프로토콜 기반의 웹 서비스 API&lt;/td>
&lt;td>- 리소스 중심 아키텍처&lt;br>HTTP 메서드 활용&lt;br>- 무상태성&lt;br>- 캐시 가능&lt;br>- 균일한 인터페이스&lt;/td>
&lt;td>- 이해하기 쉬움&lt;br>- 확장성 좋음&lt;br>- 캐싱 용이&lt;br>- 플랫폼 독립적&lt;br>- 광범위한 지원&lt;/td>
&lt;td>- 오버페칭/언더페칭&lt;br>- 엔드포인트 증가&lt;br>- 버전 관리 복잡&lt;br>- 문서화 필요&lt;/td>
&lt;td>- Twitter API&lt;br>GitHub API v3&lt;br>Stripe API&lt;br>Facebook Graph API&lt;br>Google Maps API&lt;/td>
&lt;td>- 웹 서비스&lt;br>- 모바일 앱&lt;br>- 마이크로서비스&lt;br>- 클라우드 서비스&lt;br>- 공개 API&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SOAP API&lt;/strong>&lt;/td>
&lt;td>XML 기반 메시징 프로토콜 사용 API&lt;/td>
&lt;td>- XML 메시지 형식&lt;br>- 강력한 타입 검사&lt;br>WS-* 표준 지원&lt;br>- 상태 저장 가능&lt;br>- 트랜잭션 보장&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 엄격한 보안&lt;br>- 트랜잭션 보장&lt;br>- 표준화된 에러처리&lt;br>- 플랫폼 독립적&lt;/td>
&lt;td>- 복잡한 구조&lt;br>- 무거운 메시지&lt;br>- 처리 속도 느림&lt;br>- 학습 곡선 높음&lt;/td>
&lt;td>- PayPal SOAP API&lt;br>Salesforce API&lt;br>SAP API&lt;br>- 금융권 API&lt;br>- 레거시 시스템&lt;/td>
&lt;td>- 기업용 시스템&lt;br>- 금융 서비스&lt;br>- 결제 시스템&lt;br>- 레거시 통합&lt;br>B2B 서비스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>GraphQL API&lt;/strong>&lt;/td>
&lt;td>클라이언트 중심 쿼리 언어 기반 API&lt;/td>
&lt;td>- 단일 엔드포인트&lt;br>- 클라이언트 주도 요청&lt;br>- 타입 시스템&lt;br>- 실시간 구독&lt;br>- 강력한 개발자 도구&lt;/td>
&lt;td>- 정확한 데이터 요청&lt;br>- 오버페칭 방지&lt;br>- 버전관리 불필요&lt;br>- 강력한 타입 시스템&lt;br>- 효율적인 데이터 로딩&lt;/td>
&lt;td>- 서버 구현 복잡&lt;br>- 캐싱 구현 어려움&lt;br>- 학습 곡선 존재&lt;br>- 파일 업로드 복잡&lt;/td>
&lt;td>- GitHub API v4&lt;br>Shopify StoreFront API&lt;br>Yelp API&lt;br>Atlassian API&lt;br>Netflix API&lt;/td>
&lt;td>- 모바일 앱&lt;br>- 복잡한 UI&lt;br>- 데이터 집약적 앱&lt;br>- 마이크로서비스&lt;br>- 실시간 앱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>gRPC API&lt;/strong>&lt;/td>
&lt;td>Google의 고성능 RPC 프레임워크 기반 API&lt;/td>
&lt;td>- Protocol Buffers&lt;br>- 양방향 스트리밍&lt;br>- 다중 언어 지원&lt;br>- 코드 생성&lt;br>HTTP/2 기반&lt;/td>
&lt;td>- 높은 성능&lt;br>- 강력한 타입 안정성&lt;br>- 효율적인 직렬화&lt;br>- 양방향 스트리밍&lt;br>- 언어 중립적&lt;/td>
&lt;td>- 브라우저 지원 제한&lt;br>- 학습 곡선 높음&lt;br>- 디버깅 어려움&lt;br>- 툴링 부족&lt;/td>
&lt;td>- Google Cloud API&lt;br>Cisco NSO API&lt;br>Netflix Internal API&lt;br>Kubernetes API&lt;br>Cloudflare API&lt;/td>
&lt;td>- 마이크로서비스&lt;br>- 실시간 통신&lt;br>- 고성능 시스템&lt;br>IoT 디바이스&lt;br>- 클라우드 서비스&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>기술 유형에 따른 분류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API 종류&lt;/th>
&lt;th>정의&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 예시&lt;/th>
&lt;th>일반적 사용 사례&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>데이터베이스 API&lt;/strong>&lt;/td>
&lt;td>데이터베이스와 상호작용하기 위한 인터페이스&lt;/td>
&lt;td>- CRUD 작업 수행&lt;br>- 트랜잭션 관리&lt;br>- 데이터 무결성 보장&lt;br>- 연결 풀링&lt;br>- 쿼리 최적화&lt;/td>
&lt;td>- MySQL Connector API&lt;br>MongoDB Driver API&lt;br>PostgreSQL API&lt;br>Oracle JDBC&lt;br>Redis API&lt;/td>
&lt;td>- 데이터 저장/조회&lt;br>- 트랜잭션 처리&lt;br>- 데이터 분석&lt;br>- 백업/복구&lt;br>- 데이터 동기화&lt;/td>
&lt;td>- 데이터 일관성&lt;br>- 효율적인 데이터 관리&lt;br>- 보안성&lt;br>- 표준화된 접근&lt;br>- 성능 최적화&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 성능 병목 가능성&lt;br>- 버전 호환성 문제&lt;br>- 높은 학습 곡선&lt;br>- 리소스 관리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>운영체제 API&lt;/strong>&lt;/td>
&lt;td>OS의 기능을 사용하기 위한 인터페이스&lt;/td>
&lt;td>- 시스템 리소스 접근&lt;br>- 하드웨어 제어&lt;br>- 프로세스 관리&lt;br>- 파일 시스템 접근&lt;br>- 메모리 관리&lt;/td>
&lt;td>- Windows API&lt;br>POSIX API&lt;br>Linux Kernel API&lt;br>macOS API&lt;br>Android API&lt;/td>
&lt;td>- 시스템 프로그래밍&lt;br>- 드라이버 개발&lt;br>- 보안 도구&lt;br>- 시스템 유틸리티&lt;br>- 디바이스 제어&lt;/td>
&lt;td>- 직접적인 하드웨어 접근&lt;br>- 높은 성능&lt;br>- 시스템 수준 제어&lt;br>- 강력한 기능&lt;br>- 네이티브 기능 활용&lt;/td>
&lt;td>- 플랫폼 종속성&lt;br>- 높은 복잡도&lt;br>- 보안 위험&lt;br>- 특수 권한 필요&lt;br>- 디버깅 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>원격 API&lt;/strong>&lt;/td>
&lt;td>네트워크를 통해 원격 리소스에 접근하는 인터페이스&lt;/td>
&lt;td>- 네트워크 통신&lt;br>- 분산 시스템 지원&lt;br>- 비동기 처리&lt;br>- 보안 통신&lt;br>- 서비스 발견&lt;/td>
&lt;td>- Java RMI&lt;br>gRPC&lt;br>CORBA&lt;br>Apache Thrift&lt;br>DCOM&lt;/td>
&lt;td>- 분산 시스템&lt;br>- 마이크로서비스&lt;br>- 클라우드 서비스&lt;br>- 원격 제어&lt;br>- 서비스 통합&lt;/td>
&lt;td>- 위치 투명성&lt;br>- 서비스 분리&lt;br>- 확장성&lt;br>- 유연한 구조&lt;br>- 부하 분산&lt;/td>
&lt;td>- 네트워크 지연&lt;br>- 보안 취약점&lt;br>- 복잡한 에러처리&lt;br>- 네트워크 의존성&lt;br>- 상태 관리 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>웹 서비스 API&lt;/strong>&lt;/td>
&lt;td>웹을 통해 서비스를 제공하는 인터페이스&lt;/td>
&lt;td>- HTTP/HTTPS 기반&lt;br>REST/SOAP 지원&lt;br>- 웹 표준 준수&lt;br>- 인증/인가&lt;br>- 상태 관리&lt;/td>
&lt;td>- AWS S3 API&lt;br>Stripe API&lt;br>PayPal API&lt;br>Google Maps API&lt;br>Twitter API&lt;/td>
&lt;td>- 클라우드 서비스&lt;br>- 결제 시스템&lt;br>- 소셜 미디어&lt;br>- 데이터 서비스&lt;br>SaaS 플랫폼&lt;/td>
&lt;td>- 플랫폼 독립적&lt;br>- 쉬운 통합&lt;br>- 넓은 지원&lt;br>- 확장성&lt;br>- 표준화&lt;/td>
&lt;td>- 보안 고려 필요&lt;br>- 성능 제한&lt;br>- 대역폭 의존&lt;br>- 버전 관리 필요&lt;br>- 상태 관리 복잡&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>대상에 따른 분류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API 종류&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>대표적 예시&lt;/th>
&lt;th>사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>공개 API&lt;/strong>&lt;br>(Public/Open API)&lt;/td>
&lt;td>누구나 사용 가능한 공개 API&lt;/td>
&lt;td>- 최소한의 제한&lt;br>- 광범위한 접근성&lt;br>- 일반적인 사용량 제한&lt;br>- 상세한 문서화&lt;br>- 범용적인 기능 제공&lt;/td>
&lt;td>- Google Maps API&lt;br>OpenWeatherMap API&lt;br>Twitter API&lt;br>YouTube Data API&lt;br>Spotify API&lt;/td>
&lt;td>- 지도 서비스 통합&lt;br>- 날씨 정보 표시&lt;br>- 소셜 미디어 통합&lt;br>- 콘텐츠 공유 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>파트너 API&lt;/strong>&lt;br>(Partner API)&lt;/td>
&lt;td>특정 비즈니스 파트너에게만 제공되는 API&lt;/td>
&lt;td>- 계약 기반 접근&lt;br>- 높은 수준의 보안&lt;br>SLA 보장&lt;br>- 맞춤형 기능&lt;br>- 전용 지원&lt;/td>
&lt;td>- eBay Partner Network API&lt;br>Amazon MWS&lt;br>Uber Partner API&lt;br>Salesforce Partner API&lt;br>Pinterest Partner API&lt;/td>
&lt;td>- B2B 통합&lt;br>- 제휴 마케팅&lt;br>- 리셀러 프로그램&lt;br>- 공급망 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>내부 API&lt;/strong>&lt;br>(Internal/Private API)&lt;/td>
&lt;td>조직 내부에서만 사용되는 비공개 API&lt;/td>
&lt;td>- 높은 보안성&lt;br>- 내부 시스템 최적화&lt;br>- 커스텀 프로토콜&lt;br>- 빠른 접근성&lt;br>- 상세한 기능 제공&lt;/td>
&lt;td>- 사내 인증 시스템 API&lt;br>- 내부 데이터 검색 API&lt;br>- 마이크로서비스 API&lt;br>HR 시스템 API&lt;br>- 문서 관리 API&lt;/td>
&lt;td>- 내부 시스템 통합&lt;br>- 데이터 동기화&lt;br>- 업무 자동화&lt;br>- 부서간 데이터 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>복합 API&lt;/strong>&lt;br>(Composite API)&lt;/td>
&lt;td>여러 API를 조합하여 사용하는 통합 API&lt;/td>
&lt;td>- 다중 API 통합&lt;br>- 복잡한 워크플로우&lt;br>- 서비스 오케스트레이션&lt;br>- 최적화된 응답&lt;br>- 단일 인터페이스&lt;/td>
&lt;td>- 여행 예약 시스템&lt;br>(항공+호텔+렌터카)&lt;br>- 통합 결제 시스템&lt;br>- 배달 서비스 플랫폼&lt;br>- 종합 쇼핑 플랫폼&lt;/td>
&lt;td>- 통합 서비스 제공&lt;br>- 복잡한 비즈니스 프로세스&lt;br>- 데이터 집계&lt;br>- 서비스 매쉬업&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>비즈니스 용도에 따른 분류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>API 종류&lt;/th>
&lt;th>정의&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>비즈니스 가치&lt;/th>
&lt;th>대표적 예시&lt;/th>
&lt;th>일반적 사용 사례&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>데이터 API&lt;/strong>&lt;/td>
&lt;td>기본적인 데이터 접근과 조작을 제공하는 API&lt;/td>
&lt;td>- CRUD 작업&lt;br>- 데이터 검증&lt;br>- 보안 관리&lt;br>- 데이터 필터링&lt;br>- 페이지네이션&lt;/td>
&lt;td>- 데이터 접근성 향상&lt;br>- 데이터 일관성&lt;br>- 비즈니스 인텔리전스&lt;br>- 데이터 통합&lt;br>- 리포팅&lt;/td>
&lt;td>- Salesforce Data API&lt;br>Google Analytics API&lt;br>Database APIs&lt;br>CRM Data APIs&lt;br>ERP Data APIs&lt;/td>
&lt;td>- 데이터 분석&lt;br>- 리포트 생성&lt;br>- 데이터 동기화&lt;br>- 데이터 백업&lt;br>- 데이터 마이그레이션&lt;/td>
&lt;td>- 표준화된 데이터 접근&lt;br>- 보안성&lt;br>- 확장성&lt;br>- 재사용성&lt;br>- 유지보수 용이&lt;/td>
&lt;td>- 성능 제약&lt;br>- 복잡한 쿼리 처리&lt;br>- 대용량 처리&lt;br>- 버전 관리&lt;br>- 보안 위험&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>내부 서비스 API&lt;/strong>&lt;/td>
&lt;td>내부 프로세스와 워크플로우를 노출하는 API&lt;/td>
&lt;td>- 비즈니스 로직&lt;br>- 프로세스 자동화&lt;br>- 워크플로우 관리&lt;br>- 시스템 통합&lt;br>- 보안 제어&lt;/td>
&lt;td>- 프로세스 효율화&lt;br>- 자동화&lt;br>- 생산성 향상&lt;br>- 비용 절감&lt;br>- 품질 향상&lt;/td>
&lt;td>- 워크플로우 API&lt;br>- 인사관리 API&lt;br>- 재고관리 API&lt;br>- 문서처리 API&lt;br>- 승인 프로세스 API&lt;/td>
&lt;td>- 업무 자동화&lt;br>- 시스템 통합&lt;br>- 프로세스 모니터링&lt;br>- 내부 도구 개발&lt;br>- 보고서 생성&lt;/td>
&lt;td>- 업무 효율성&lt;br>- 프로세스 일관성&lt;br>- 자동화&lt;br>- 통제력&lt;br>- 커스터마이징&lt;/td>
&lt;td>- 복잡성&lt;br>- 유지보수 비용&lt;br>- 의존성 관리&lt;br>- 변경 관리&lt;br>- 학습 곡선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>외부 서비스 API&lt;/strong>&lt;/td>
&lt;td>제3자 서비스를 통합하는 API&lt;/td>
&lt;td>- 서비스 통합&lt;br>- 인증/인가&lt;br>SLA 관리&lt;br>- 모니터링&lt;br>- 과금 체계&lt;/td>
&lt;td>- 기능 확장&lt;br>- 시장 경쟁력&lt;br>- 신규 서비스&lt;br>- 매출 증대&lt;br>- 고객 만족&lt;/td>
&lt;td>- PayPal API&lt;br>Stripe API&lt;br>AWS Services API&lt;br>Google Maps API&lt;br>Social Media APIs&lt;/td>
&lt;td>- 결제 처리&lt;br>- 위치 서비스&lt;br>- 소셜 통합&lt;br>- 클라우드 서비스&lt;br>- 분석 서비스&lt;/td>
&lt;td>- 빠른 기능 구현&lt;br>- 전문성 활용&lt;br>- 비용 효율성&lt;br>- 확장성&lt;br>- 신뢰성&lt;/td>
&lt;td>- 외부 의존성&lt;br>- 비용 발생&lt;br>- 통제력 제한&lt;br>- 보안 위험&lt;br>- 서비스 중단 위험&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>사용자 경험 API&lt;/strong>&lt;/td>
&lt;td>디바이스별 최적화된 경험을 제공하는 API&lt;/td>
&lt;td>- 디바이스 최적화&lt;br>- 응답성&lt;br>- 캐싱&lt;br>- 성능 최적화&lt;br>UX 고려&lt;/td>
&lt;td>- 사용자 만족도&lt;br>- 전환율 향상&lt;br>- 브랜드 가치&lt;br>- 경쟁 우위&lt;br>- 고객 유지&lt;/td>
&lt;td>- 모바일 API&lt;br>- 웹 클라이언트 API&lt;br>IoT 디바이스 API&lt;br>TV/스마트기기 API&lt;br>- 반응형 웹 API&lt;/td>
&lt;td>- 모바일 앱&lt;br>- 웹 애플리케이션&lt;br>IoT 서비스&lt;br>- 크로스플랫폼 앱&lt;br>- 반응형 서비스&lt;/td>
&lt;td>- 사용자 만족도&lt;br>- 성능 최적화&lt;br>- 디바이스 특화&lt;br>- 일관된 경험&lt;br>- 유연성&lt;/td>
&lt;td>- 개발 복잡도&lt;br>- 다양한 환경 대응&lt;br>- 테스트 부담&lt;br>- 유지보수 비용&lt;br>- 버전 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers - 5. Session Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-5-session-layer/</link><pubDate>Wed, 25 Sep 2024 07:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-5-session-layer/</guid><description>
&lt;h2>Session Layer(세션 계층)&lt;/h2>&lt;p>세션 계층은 OSI 모델의 5번째 계층으로, 통신 세션을 구성하는 계층이다.&lt;br>
응용 프로그램 간의 대화를 유지하기 위한 구조를 제공하고, 프로세스들의 논리적인 연결을 담당한다.&lt;/p>
&lt;p>세션 계층은 네트워크 통신에서 연결의 지속성과 신뢰성을 보장하는 중요한 역할을 수행한다.&lt;br>
특히 장기간 지속되는 연결이 필요한 애플리케이션에서 중요한 기능을 제공한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi_model_session_layer_5.png"
alt="Session Layer"
title="Session Layer"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ol>
&lt;li>세션 연결 설정 및 유지, 종료&lt;/li>
&lt;li>데이터 교환 동기화&lt;/li>
&lt;li>체크포인팅을 통한 데이터 복구&lt;/li>
&lt;li>대화 제어 (Duplex, Half-duplex, Full-duplex 통신)&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>TCP/IP 세션을 관리하고 연결을 유지한다.&lt;/li>
&lt;li>양방향 통신을 지원합니다.&lt;/li>
&lt;li>인증과 권한 부여 기능을 제공할 수 있습니다.&lt;/li>
&lt;/ul>
&lt;h3>데이터 단위&lt;/h3>&lt;p>세션 계층의 데이터 단위는 일반적으로 &amp;ldquo;메시지&amp;quot;라고 불린다.&lt;/p>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>세션 설정: 통신하려는 양쪽 응용 프로그램 간에 세션을 설정한다.
&lt;ol>
&lt;li>연결 요청&lt;/li>
&lt;li>매개변수 협상&lt;/li>
&lt;li>연결 확인&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>데이터 전송: 설정된 세션을 통해 데이터를 주고받는다.
&lt;ol>
&lt;li>동기화 지점 확인&lt;/li>
&lt;li>데이터 전송&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>동기화: 데이터 전송 중 체크포인트를 설정하여 오류 발생 시 복구할 수 있게 한다.&lt;/li>
&lt;li>세션 종료: 통신이 끝나면 세션을 종료한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 프로토콜&lt;/h3>&lt;ul>
&lt;li>NetBIOS (Network Basic Input/Output System)&lt;/li>
&lt;li>RPC (Remote Procedure Call)&lt;/li>
&lt;li>NFS (Network File System)&lt;/li>
&lt;/ul>
&lt;h3>주의 사항&lt;/h3>&lt;ul>
&lt;li>세션 계층은 현재 TCP/IP 모델에서는 응용 계층에 통합되어 있어, 실제 구현에서는 명확히 구분되지 않을 수 있다.&lt;/li>
&lt;li>세션 관리의 중요성을 인식하고, 적절한 세션 유지 및 종료 메커니즘을 구현해야 한다.
&lt;ul>
&lt;li>세션 타임아웃 관리&lt;/li>
&lt;li>리소스 사용량 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>성능 최적화
&lt;ul>
&lt;li>적절한 체크포인트 간격 설정&lt;/li>
&lt;li>효율적인 동기화 메커니즘 사용&lt;/li>
&lt;li>리소스 사용량 모니터링&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>참고 및 출처&lt;/h3></description></item><item><title>Network Protocol</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/</link><pubDate>Wed, 02 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/</guid><description>
&lt;h2>Network Protocol&lt;/h2>&lt;ul>
&lt;li>컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고 받는 양식과 규칙의 체계.&lt;/li>
&lt;li>신호 체계, 인증, 그리고 오류 감지 및 수정 기능을 포함한다.&lt;/li>
&lt;li>데이터 교환 방식을 정의하여 서로 다른 시스템 간의 원활한 통신을 가능하게 한다.&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>표준화&lt;/strong>: 프로토콜은 표준화된 규칙을 제공하여 다양한 기기 간 호환성을 보장합니다.&lt;/li>
&lt;li>&lt;strong>계층화&lt;/strong>: OSI 7계층 모델이나 TCP/IP 4계층 모델과 같이 계층별로 구분되어 모듈화된 구조를 가집니다.&lt;/li>
&lt;li>&lt;strong>캡슐화&lt;/strong>: 각 계층에서 데이터에 헤더 정보를 추가하여 패킷을 구성합니다.&lt;/li>
&lt;li>&lt;strong>흐름 제어&lt;/strong>: 데이터 전송 속도를 조절하여 수신측의 처리 능력에 맞춥니다.&lt;/li>
&lt;li>&lt;strong>오류 제어&lt;/strong>: 데이터 전송 중 발생할 수 있는 오류를 검출하고 정정합니다.&lt;/li>
&lt;/ol>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/TCP-IP-protocol-suit.png"
alt="seven layers of the OSI model."
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://techwavehub.net/protocol/" target="_blank" rel="noopener">https://techwavehub.net/protocol/&lt;/a> _&lt;/p>
&lt;h3>Physical Protocol&lt;/h3>&lt;p>물리 프로토콜은 실제 데이터가 물리적 매체를 통해 전송되는 방식을 정의한다.&lt;br>
이는 전기 신호, 광신호, 전파 등의 형태로 데이터를 전송하는 방법을 다룬다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>프로토콜&lt;/th>
&lt;th>OSI 계층&lt;/th>
&lt;th>TCP/IP 계층&lt;/th>
&lt;th>역할 및 기능&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>동작 방식&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Ethernet&lt;/td>
&lt;td>물리 계층, 데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>LAN에서 데이터 전송&lt;/td>
&lt;td>MAC 주소 사용, CSMA/CD 방식&lt;/td>
&lt;td>빠르고 안정적, 비용 효율적&lt;/td>
&lt;td>패킷 교환 방식, 스위치 기반 데이터 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Frame Relay&lt;/td>
&lt;td>데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>가상 회로를 통한 데이터 전송&lt;/td>
&lt;td>DLCI 사용, 간소화된 프로토콜&lt;/td>
&lt;td>X.25보다 효율적, 고속 데이터 전송&lt;/td>
&lt;td>가상 회로 기반, LMI 신호로 상태 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ATM&lt;/td>
&lt;td>데이터 링크 계층, 네트워크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>음성, 비디오, 데이터 통합 전송&lt;/td>
&lt;td>53바이트 셀 단위 전송, QoS 보장&lt;/td>
&lt;td>멀티미디어 데이터 전송에 적합, 하드웨어 기반 스위칭&lt;/td>
&lt;td>셀 기반 스위칭, 가상 회로 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SONET&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>광섬유 기반 고속 데이터 전송&lt;/td>
&lt;td>동기식 전송, STS 프레임 사용&lt;/td>
&lt;td>고속 전송, 표준화된 인터페이스&lt;/td>
&lt;td>프레임 기반 동기 전송, 다중화 기술 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SDH&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>SONET의 국제 표준 버전&lt;/td>
&lt;td>STM 프레임 사용&lt;/td>
&lt;td>글로벌 호환성, 유연한 대역폭 할당&lt;/td>
&lt;td>SONET와 유사한 동기 전송 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PDH&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>디지털 계위 신호 전송&lt;/td>
&lt;td>비동기식 다중화&lt;/td>
&lt;td>기존 네트워크와의 호환성&lt;/td>
&lt;td>준동기식 전송, 비트 스터핑 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CDMA&lt;/td>
&lt;td>물리 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>무선 통신에서 다중 접속&lt;/td>
&lt;td>코드 분할 다중 접속&lt;/td>
&lt;td>높은 용량, 간섭 저항성&lt;/td>
&lt;td>확산 스펙트럼 기술 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GSM&lt;/td>
&lt;td>물리 계층, 데이터 링크 계층&lt;/td>
&lt;td>네트워크 액세스 계층&lt;/td>
&lt;td>디지털 셀룰러 이동통신&lt;/td>
&lt;td>TDMA 기반, SIM 카드 사용&lt;/td>
&lt;td>글로벌 로밍, 음성 및 데이터 서비스&lt;/td>
&lt;td>시분할 다중 접속, 주파수 호핑&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>추가 설명:&lt;/p>
&lt;ol>
&lt;li>Ethernet은 현재 가장 널리 사용되는 LAN 프로토콜로, CSMA/CD 방식을 통해 데이터 충돌을 관리하며, 비교적 단순한 구조로 높은 효율성을 제공한다.&lt;/li>
&lt;li>Token Ring은 IBM이 개발한 프로토콜로, 토큰을 사용하여 충돌 없는 데이터 전송을 보장하지만, 현재는 Ethernet에 비해 사용빈도가 낮다.&lt;/li>
&lt;li>Frame Relay는 패킷 스위칭 기술을 사용하는 WAN 프로토콜로, 가상 회선을 통해 효율적인 데이터 전송을 제공한다.&lt;/li>
&lt;li>ATM은 고정 크기의 셀을 사용하여 다양한 형태의 트래픽을 통합 전송할 수 있으며, QoS를 보장하는 특징이 있다.&lt;/li>
&lt;li>SONET/SDH는 광통신 네트워크의 표준 프로토콜로, 높은 신뢰성과 관리 용이성을 제공한다.&lt;/li>
&lt;li>PDH는 SONET/SDH 이전에 사용된 디지털 전송 방식으로, 비동기식 특성으로 인해 관리가 다소 복잡할 수 있다.&lt;/li>
&lt;li>CDMA는 코드분할 방식을 사용하는 무선통신 프로토콜로, 높은 보안성과 간섭 저항성이 특징이다.&lt;/li>
&lt;li>GSM은 글로벌 이동통신 표준으로, SIM 카드를 통한 사용자 인증과 글로벌 로밍 서비스를 제공한다.&lt;/li>
&lt;/ol>
&lt;h3>Logical Protocol&lt;/h3>&lt;p>논리 프로토콜은 데이터의 논리적인 주소 지정, 라우팅, 흐름 제어 등을 담당한다.&lt;br>
이는 실제 물리적 연결과는 독립적으로 동작한다.&lt;/p>
&lt;h4>IP / IPSec&lt;/h4>&lt;p>IP는 인터넷 통신의 기본이 되는 프로토콜로, 데이터 패킷의 주소 지정과 라우팅을 담당한다.&lt;br>
반면 IPsec은 IP 통신에 보안 기능을 추가하여 데이터의 기밀성, 무결성, 인증을 제공한다.&lt;br>
IPsec은 VPN 구현에 널리 사용되며, 네트워크 계층에서 작동하여 전체 네트워크 트래픽을 보호할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IP (Internet Protocol)&lt;/th>
&lt;th>IPsec (Internet Protocol Security)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>데이터그램 기반의 패킷 전달 및 라우팅&lt;/td>
&lt;td>IP 통신의 보안성 제공 (인증, 암호화, 무결성)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 특성&lt;/td>
&lt;td>- 비연결형 서비스&lt;br>- 최선형 전달&lt;br>- 독립적 패킷 라우팅&lt;br>- 단편화/재조립 지원&lt;/td>
&lt;td>- 종단간 보안&lt;br>- 투명한 보안 서비스&lt;br>- 유연한 구성&lt;br>- 호환성 유지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 패킷 라우팅&lt;br>- 주소 지정&lt;br>- 단편화/재조립&lt;br>- 헤더 처리&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 패킷 인증&lt;br>- 무결성 보장&lt;br>- 키 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 모드&lt;/td>
&lt;td>- 데이터그램 방식&lt;br>- 패킷 독립 처리&lt;br>- 헤더 기반 라우팅&lt;br>TTL 기반 제어&lt;/td>
&lt;td>- 전송 모드&lt;br>- 터널 모드&lt;br>ESP/AH 프로토콜&lt;br>IKE 키 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 기본 보안 없음&lt;br>- 평문 전송&lt;br>- 위조/변조 가능&lt;br>- 도청 가능&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 패킷 인증&lt;br>- 재전송 방지&lt;br>- 키 관리 자동화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 구조&lt;/td>
&lt;td>- 버전&lt;br>- 헤더 길이&lt;br>- 서비스 유형&lt;br>- 전체 길이&lt;br>- 식별자&lt;br>- 플래그&lt;br>- 단편화 오프셋&lt;br>TTL&lt;br>- 프로토콜&lt;br>- 체크섬&lt;br>- 출발지/목적지 주소&lt;/td>
&lt;td>- AH 헤더 (인증)&lt;br>ESP 헤더 (암호화)&lt;br>- 보안 연관(SA) 정보&lt;br>- 시퀀스 번호&lt;br>- 무결성 체크값&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 효율적인 라우팅&lt;br>- 높은 확장성&lt;br>- 상호운용성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 투명한 적용&lt;br>- 유연한 구성&lt;br>- 표준화된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 신뢰성 없음&lt;br>- 보안성 없음&lt;br>QoS 보장 없음&lt;br>- 혼잡 제어 없음&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 성능 오버헤드&lt;br>- 키 관리 부담&lt;br>NAT 통과 문제&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>활용 분야&lt;/td>
&lt;td>- 인터넷 통신&lt;br>- 기본 네트워킹&lt;br>- 패킷 전달&lt;br>- 라우팅&lt;/td>
&lt;td>- VPN 구축&lt;br>- 기업 네트워크&lt;br>- 원격 접속&lt;br>- 보안 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>표준화 기구&lt;/td>
&lt;td>IETF&lt;/td>
&lt;td>IETF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>관련 프로토콜&lt;/td>
&lt;td>IPv4, IPv6&lt;/td>
&lt;td>ESP, AH, IKE&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 차이점과 상호 관계는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>기본 동작과 보안:&lt;/p>
&lt;ul>
&lt;li>IP: 기본적인 패킷 전달에 중점&lt;/li>
&lt;li>IPsec: IP 통신에 보안 기능을 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현 복잡성:&lt;/p>
&lt;ul>
&lt;li>IP: 단순하고 기본적인 구현&lt;/li>
&lt;li>IPsec: 복잡한 보안 메커니즘 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능과 오버헤드:&lt;/p>
&lt;ul>
&lt;li>IP: 최소한의 오버헤드&lt;/li>
&lt;li>IPsec: 보안 처리로 인한 추가 오버헤드&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>응용 환경:&lt;/p>
&lt;ul>
&lt;li>IP: 모든 인터넷 통신의 기본&lt;/li>
&lt;li>IPsec: 보안이 중요한 특수한 환경&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>IP와 IPsec은 서로 보완적인 관계에 있으며, 현대 네트워크에서는 요구사항에 따라 적절히 선택하여 사용된다.&lt;/p>
&lt;h4>TCP / UDP&lt;/h4>&lt;p>TCP는 신뢰성 있는 데이터 전송을 보장하며, 연결 지향적인 프로토콜이다.&lt;br>
3-way handshake를 통해 연결을 설정하고, 데이터의 순서를 보장하며, 오류 발생 시 재전송을 수행한다.&lt;br>
흐름 제어와 혼잡 제어 기능을 통해 네트워크의 안정성을 유지한다.&lt;/p>
&lt;p>UDP는 비연결 지향적이며 단순한 데이터 전송에 중점을 둔다.&lt;br>
연결 설정 과정이 없어 빠른 전송이 가능하지만, 데이터의 신뢰성과 순서를 보장하지 않는다.&lt;br>
실시간 스트리밍이나 게임 등 속도가 중요한 애플리케이션에서 주로 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>TCP (Transmission Control Protocol)&lt;/th>
&lt;th>UDP (User Datagram Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>전송 계층 (4계층)&lt;/td>
&lt;td>전송 계층 (4계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>전송 계층&lt;/td>
&lt;td>전송 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 특성&lt;/td>
&lt;td>연결형 프로토콜 (Connection-oriented)&lt;br>- 데이터 전송 전 연결 설정&lt;br>- 순차적 데이터 전송&lt;br>- 신뢰성 보장&lt;/td>
&lt;td>비연결형 프로토콜 (Connectionless)&lt;br>- 연결 설정 없음&lt;br>- 독립적 데이터 전송&lt;br>- 신뢰성 미보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 흐름 제어&lt;br>- 혼잡 제어&lt;br>- 오류 검출 및 복구&lt;br>- 데이터 순서 보장&lt;br>- 데이터 분할 및 재조립&lt;/td>
&lt;td>- 단순한 데이터 전송&lt;br>- 최소한의 오류 검출&lt;br>- 빠른 전송 속도&lt;br>- 실시간 데이터 처리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>세그먼트(Segment) 단위로 분할 전송&lt;br>3-way 핸드셰이킹&lt;br>- 순차번호 부여&lt;br>- 확인응답 사용&lt;/td>
&lt;td>데이터그램(Datagram) 단위로 독립 전송&lt;br>- 연결 설정 없음&lt;br>- 순차번호 없음&lt;br>- 확인응답 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>신뢰성 보장&lt;/td>
&lt;td>- 데이터 손실 시 재전송&lt;br>- 중복 데이터 제거&lt;br>- 순서 보장&lt;br>- 데이터 완전성 검증&lt;/td>
&lt;td>- 데이터 손실 가능&lt;br>- 중복 데이터 가능&lt;br>- 순서 보장 없음&lt;br>- 최소한의 오류 검출&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>속도 특성&lt;/td>
&lt;td>- 상대적으로 느림&lt;br>- 오버헤드 큼&lt;br>- 처리 시간 많이 소요&lt;/td>
&lt;td>- 상대적으로 빠름&lt;br>- 오버헤드 작음&lt;br>- 처리 시간 적게 소요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 분야&lt;/td>
&lt;td>- 파일 전송&lt;br>- 이메일&lt;br>- 웹 브라우징&lt;br>- 원격 접속&lt;/td>
&lt;td>- 실시간 스트리밍&lt;br>- 온라인 게임&lt;br>VoIP&lt;br>DNS 쿼리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 높은 신뢰성&lt;br>- 데이터 순서 보장&lt;br>- 혼잡 제어 기능&lt;br>- 완전성 보장&lt;/td>
&lt;td>- 빠른 전송 속도&lt;br>- 적은 지연 시간&lt;br>- 단순한 구조&lt;br>- 적은 시스템 부하&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 느린 전송 속도&lt;br>- 많은 시스템 자원 사용&lt;br>- 큰 프로토콜 오버헤드&lt;br>- 지연 시간 발생&lt;/td>
&lt;td>- 데이터 손실 가능&lt;br>- 신뢰성 부족&lt;br>- 순서 보장 없음&lt;br>- 혼잡 제어 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60 바이트&lt;/td>
&lt;td>8 바이트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 설정&lt;/td>
&lt;td>필요 (3-way handshaking)&lt;/td>
&lt;td>불필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>순서 제어&lt;/td>
&lt;td>있음 (순차번호 사용)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>흐름 제어&lt;/td>
&lt;td>있음 (윈도우 크기 조절)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>혼잡 제어&lt;/td>
&lt;td>있음 (혼잡 윈도우 사용)&lt;/td>
&lt;td>없음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>HTTP / HTTPS&lt;/h4>&lt;p>HTTP와 HTTPS는 모두 웹 통신에 사용되는 프로토콜이지만, HTTPS는 보안 기능이 추가되어 더 안전한 통신을 제공한다.&lt;br>
두 프로토콜 모두 OSI 모델과 TCP/IP 모델의 최상위 계층에서 동작하며, 웹 브라우저와 서버 간의 데이터 교환을 담당한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>HTTP (Hypertext Transfer Protocol)&lt;/th>
&lt;th>HTTPS (Hypertext Transfer Protocol Secure)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>80&lt;/td>
&lt;td>443&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 계층&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>SSL/TLS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>웹 브라우저와 웹 서버 간의 통신&lt;/td>
&lt;td>보안이 강화된 웹 브라우저와 웹 서버 간의 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>평문 전송&lt;/td>
&lt;td>암호화된 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 과정&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. HTTP 요청 전송&lt;br>3. HTTP 응답 수신&lt;br>4. 연결 종료&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. SSL/TLS 핸드셰이크&lt;br>3. 암호화된 HTTP 요청 전송&lt;br>4. 암호화된 HTTP 응답 수신&lt;br>5. 연결 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- Stateless 프로토콜&lt;br>- 확장 가능한 구조&lt;br>- 단순한 요청-응답 모델&lt;br>- 텍스트 기반 통신&lt;/td>
&lt;td>- HTTP에 보안 계층 추가&lt;br>- 데이터 암호화&lt;br>- 서버 인증&lt;br>- 데이터 무결성 보장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 웹 페이지 전송&lt;br>- 파일 전송&lt;br>- 폼 데이터 전송&lt;br>API 통신&lt;/td>
&lt;td>- 보안 웹 페이지 전송&lt;br>- 암호화된 파일 전송&lt;br>- 보안 API 통신&lt;br>- 전자 상거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HTTP 메소드 지원&lt;/td>
&lt;td>GET, POST, PUT, DELETE, HEAD, OPTIONS, TRACE, PATCH&lt;/td>
&lt;td>동일한 HTTP 메소드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 데이터 노출 위험&lt;br>- 중간자 공격 취약&lt;br>- 데이터 변조 가능&lt;br>- 서버 인증 없음&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 중간자 공격 방지&lt;br>- 데이터 무결성 보장&lt;br>- 서버 인증 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>- 빠른 통신 속도&lt;br>- 적은 리소스 사용&lt;br>- 낮은 서버 부하&lt;br>- 단순한 구현&lt;/td>
&lt;td>- 상대적으로 느린 속도&lt;br>- 더 많은 리소스 사용&lt;br>- 높은 서버 부하&lt;br>- 복잡한 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 빠른 속도&lt;br>- 적은 오버헤드&lt;br>- 쉬운 디버깅&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 데이터 보호&lt;br>- 신뢰성 있는 통신&lt;br>SEO 이점&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안성 부족&lt;br>- 데이터 노출&lt;br>- 신뢰성 부족&lt;br>- 무결성 보장 없음&lt;/td>
&lt;td>- 추가 처리 시간&lt;br>- 높은 리소스 사용&lt;br>- 인증서 비용&lt;br>- 복잡한 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>- 일반 웹사이트&lt;br>- 비중요 정보 전송&lt;br>- 내부 네트워크 통신&lt;br>- 테스트 환경&lt;/td>
&lt;td>- 전자상거래&lt;br>- 온라인 뱅킹&lt;br>- 민감한 정보 전송&lt;br>- 기업 웹사이트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 특성&lt;/td>
&lt;td>일반 텍스트 헤더&lt;/td>
&lt;td>암호화된 헤더&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱 가능 여부&lt;/td>
&lt;td>가능&lt;/td>
&lt;td>가능 (보안 고려 필요)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>HTTP/HTTPS의 발전 과정을 보면 다음과 같은 주요 버전들이 있다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>HTTP/1.0&lt;/p>
&lt;ul>
&lt;li>기본적인 요청-응답 모델&lt;/li>
&lt;li>연결당 하나의 요청만 처리&lt;/li>
&lt;li>단순한 헤더 구조&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/1.1&lt;/p>
&lt;ul>
&lt;li>지속적 연결 지원&lt;/li>
&lt;li>파이프라이닝 도입&lt;/li>
&lt;li>호스트 헤더 필수화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/2&lt;/p>
&lt;ul>
&lt;li>멀티플렉싱 지원&lt;/li>
&lt;li>헤더 압축&lt;/li>
&lt;li>서버 푸시&lt;/li>
&lt;li>스트림 우선순위&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP/3 (최신)&lt;/p>
&lt;ul>
&lt;li>QUIC 프로토콜 기반&lt;/li>
&lt;li>향상된 성능&lt;/li>
&lt;li>개선된 보안&lt;/li>
&lt;li>더 나은 모바일 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 웹 프로토콜들은 현대 인터넷의 근간을 이루며, 특히 HTTPS는 보안이 중요시되는 현대 웹 환경에서 필수적인 프로토콜로 자리잡았다.&lt;/p>
&lt;h4>SSL / TLS&lt;/h4>&lt;p>SSL과 TLS는 모두 웹 통신의 보안을 위해 설계된 프로토콜로, 데이터의 암호화, 인증, 무결성을 보장한다.&lt;br>
TLS는 SSL의 후속 버전으로, 더 강력한 보안 기능과 성능 개선을 제공한다.&lt;br>
현재는 SSL이 더 이상 사용되지 않고 TLS가 널리 사용되고 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SSL (Secure Sockets Layer)&lt;/th>
&lt;th>TLS (Transport Layer Security)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>표현 계층(6계층) / 세션 계층(5계층)&lt;/td>
&lt;td>표현 계층(6계층) / 세션 계층(5계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>네트워크 통신의 종단간 보안 제공&lt;/td>
&lt;td>네트워크 통신의 종단간 보안 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 상태&lt;/td>
&lt;td>더 이상 사용되지 않음 (Deprecated)&lt;/td>
&lt;td>현재 표준으로 사용 중&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>최신 버전&lt;/td>
&lt;td>SSL 3.0 (사용 중단)&lt;/td>
&lt;td>TLS 1.3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 데이터 암호화&lt;br>- 인증&lt;br>- 무결성 검증&lt;br>- 키 교환&lt;/td>
&lt;td>- 향상된 데이터 암호화&lt;br>- 강화된 인증&lt;br>- 개선된 무결성 검증&lt;br>- 최적화된 키 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핸드셰이크 과정&lt;/td>
&lt;td>1. Client Hello&lt;br>2. Server Hello&lt;br>3. 인증서 교환&lt;br>4. 키 교환&lt;br>5. 암호화 통신 시작&lt;/td>
&lt;td>1. Client Hello&lt;br>2. Server Hello + 인증서 + 키 교환&lt;br>3. 클라이언트 완료&lt;br>4. 암호화 통신 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지원 암호화 알고리즘&lt;/td>
&lt;td>- RC4&lt;br>DES&lt;br>3DES&lt;br>AES&lt;/td>
&lt;td>- AES&lt;br>ChaCha20&lt;br>Poly1305&lt;br>- 최신 암호화 알고리즘&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특징&lt;/td>
&lt;td>- 기본적인 암호화 제공&lt;br>- 취약한 암호화 알고리즘 포함&lt;br>- 알려진 보안 취약점 존재&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 취약한 알고리즘 제거&lt;br>- 최신 보안 기능 추가&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>성능 특성&lt;/td>
&lt;td>- 상대적으로 느린 핸드셰이크&lt;br>- 더 많은 라운드 트립 필요&lt;br>- 높은 지연 시간&lt;/td>
&lt;td>- 최적화된 핸드셰이크&lt;br>0-RTT 재개 지원&lt;br>- 낮은 지연 시간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 구현 단순&lt;br>- 광범위한 호환성&lt;br>- 기본적인 보안 제공&lt;/td>
&lt;td>- 향상된 보안&lt;br>- 더 나은 성능&lt;br>- 현대적 암호화&lt;br>- 지속적인 개선&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 알려진 취약점&lt;br>- 낮은 성능&lt;br>- 사용 중단됨&lt;br>- 더 이상의 개선 없음&lt;/td>
&lt;td>- 이전 버전과의 호환성 문제&lt;br>- 구현 복잡성&lt;br>- 더 많은 리소스 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>(현재는 사용하지 않음)&lt;/td>
&lt;td>- HTTPS 웹 통신&lt;br>- 이메일 보안&lt;br>VPN&lt;br>- 금융 거래&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 강도&lt;/td>
&lt;td>취약 (더 이상 안전하지 않음)&lt;/td>
&lt;td>매우 강력 (현재 표준)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증서 지원&lt;/td>
&lt;td>X 인증서&lt;/td>
&lt;td>X 인증서 (향상된 검증)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>키 교환 방식&lt;/td>
&lt;td>- RSA&lt;br>Diffie-Hellman&lt;/td>
&lt;td>- ECDHE&lt;br>DHE&lt;br>- 향상된 키 교환 방식&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>TLS의 발전 과정을 보면 다음과 같은 주요 개선사항들이 있었다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>TLS 1.0&lt;/p>
&lt;ul>
&lt;li>SSL 3.0을 기반으로 개발&lt;/li>
&lt;li>기본적인 보안 개선&lt;/li>
&lt;li>HMAC 도입&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.1&lt;/p>
&lt;ul>
&lt;li>CBC 공격 방어&lt;/li>
&lt;li>명시적 IV 사용&lt;/li>
&lt;li>에러 처리 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.2&lt;/p>
&lt;ul>
&lt;li>SHA-256 지원&lt;/li>
&lt;li>암호화 스위트 개선&lt;/li>
&lt;li>의사난수 함수 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TLS 1.3 (최신)&lt;/p>
&lt;ul>
&lt;li>핸드셰이크 최적화&lt;/li>
&lt;li>0-RTT 재개&lt;/li>
&lt;li>취약한 알고리즘 제거&lt;/li>
&lt;li>향상된 개인정보 보호&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 보안 프로토콜들은 현대 인터넷 보안의 근간을 이루며, 특히 TLS는 지속적인 개선을 통해 더욱 안전하고 효율적인 보안 통신을 가능하게 하고 있다.&lt;/p>
&lt;h4>FTP / SFTP / SCP / TFTP&lt;/h4>&lt;p>이 프로토콜들은 모두 파일 전송을 위한 것이지만, 각각의 특성과 보안 수준, 기능의 복잡성에서 차이가 있다.&lt;br>
FTP는 가장 오래되고 널리 사용되는 프로토콜이지만 보안에 취약하다.&lt;br>
SFTP와 SCP는 SSH를 기반으로 하여 보안성이 높다.&lt;br>
TFTP는 가장 단순한 구조로, 제한된 환경에서 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>FTP (File Transfer Protocol)&lt;/th>
&lt;th>SFTP (SSH File Transfer Protocol)&lt;/th>
&lt;th>SCP (Secure Copy Protocol)&lt;/th>
&lt;th>TFTP (Trivial File Transfer Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>20(데이터), 21(제어)&lt;/td>
&lt;td>22&lt;/td>
&lt;td>22&lt;/td>
&lt;td>69&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>암호화 없음 (기본)&lt;/td>
&lt;td>SSH 기반 암호화&lt;/td>
&lt;td>SSH 기반 암호화&lt;/td>
&lt;td>암호화 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>일반 파일 전송 및 관리&lt;/td>
&lt;td>보안 파일 전송 및 관리&lt;/td>
&lt;td>보안 파일 복사&lt;/td>
&lt;td>단순 파일 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 특성&lt;/td>
&lt;td>- 제어 연결과 데이터 연결 분리&lt;br>- 능동/수동 모드 지원&lt;br>- 지속적 연결&lt;/td>
&lt;td>- 단일 암호화 연결&lt;br>SSH 터널링 사용&lt;br>- 지속적 연결&lt;/td>
&lt;td>- 단일 암호화 연결&lt;br>- 일회성 연결&lt;br>- 비대화형&lt;/td>
&lt;td>- 단순 연결&lt;br>- 비연결형&lt;br>- 최소한의 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 파일 업로드/다운로드&lt;br>- 디렉토리 탐색&lt;br>- 파일 관리&lt;br>- 권한 관리&lt;/td>
&lt;td>- 파일 업로드/다운로드&lt;br>- 디렉토리 관리&lt;br>- 파일 권한 제어&lt;br>- 원격 파일 조작&lt;/td>
&lt;td>- 파일 복사&lt;br>- 디렉토리 복사&lt;br>- 재귀적 복사&lt;br>- 보존 모드 지원&lt;/td>
&lt;td>- 파일 읽기/쓰기&lt;br>- 단순 전송&lt;br>- 최소 메모리 사용&lt;br>- 간단한 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 방식&lt;/td>
&lt;td>사용자명/비밀번호&lt;/td>
&lt;td>- SSH 키 기반&lt;br>- 비밀번호&lt;br>- 인증서&lt;/td>
&lt;td>- SSH 키 기반&lt;br>- 비밀번호&lt;/td>
&lt;td>인증 없음 (기본)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 다양한 명령어 지원&lt;br>- 세션 유지&lt;br>ASCII/이진 모드&lt;br>- 재시작 기능&lt;/td>
&lt;td>- 풍부한 파일 작업&lt;br>- 플랫폼 독립적&lt;br>- 강력한 보안&lt;br>- 세션 관리&lt;/td>
&lt;td>- 간단한 사용법&lt;br>- 빠른 전송&lt;br>- 명령행 기반&lt;br>- 최소한의 기능&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 최소한의 메모리&lt;br>- 쉬운 구현&lt;br>- 빠른 시작&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 지원됨&lt;br>- 다양한 기능&lt;br>- 유연한 사용&lt;br>- 재시작 가능&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 다양한 기능&lt;br>- 호환성&lt;br>- 신뢰성&lt;/td>
&lt;td>- 간단한 사용&lt;br>- 높은 보안&lt;br>- 빠른 속도&lt;br>- 적은 오버헤드&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 적은 메모리&lt;br>- 빠른 전송&lt;br>ROM 부팅 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약&lt;br>- 복잡한 설정&lt;br>- 방화벽 문제&lt;br>- 오버헤드 큼&lt;/td>
&lt;td>- 구현 복잡&lt;br>- 높은 오버헤드&lt;br>- 느린 속도&lt;br>- 리소스 많이 사용&lt;/td>
&lt;td>- 제한된 기능&lt;br>- 진행률 표시 없음&lt;br>- 세션 관리 없음&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 보안 없음&lt;br>- 큰 파일 부적합&lt;br>- 신뢰성 낮음&lt;br>- 기능 제한적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 사용 사례&lt;/td>
&lt;td>- 웹 호스팅&lt;br>- 파일 공유&lt;br>- 백업&lt;br>- 일반 파일 전송&lt;/td>
&lt;td>- 보안 파일 전송&lt;br>- 원격 파일 관리&lt;br>- 자동화된 전송&lt;br>- 기업 환경&lt;/td>
&lt;td>- 서버 간 파일 복사&lt;br>- 백업&lt;br>- 스크립트 자동화&lt;br>- 단순 전송&lt;/td>
&lt;td>- 네트워크 부팅&lt;br>- 펌웨어 업데이트&lt;br>- 설정 파일 전송&lt;br>- 임베디드 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이들 프로토콜은 다음과 같은 상황에서 선택적으로 사용된다:&lt;/p>
&lt;ol>
&lt;li>일반적인 파일 전송이 필요한 경우: FTP&lt;/li>
&lt;li>보안이 중요한 파일 전송: SFTP 또는 SCP&lt;/li>
&lt;li>제한된 리소스 환경에서의 단순 전송: TFTP&lt;/li>
&lt;/ol>
&lt;p>각 프로토콜은 자신의 고유한 용도와 장점이 있으며, 네트워크 환경과 보안 요구사항에 따라 적절한 프로토콜을 선택하는 것이 중요하다.&lt;/p>
&lt;h4>SMTP / POP3 / IMAP&lt;/h4>&lt;p>이 세 프로토콜은 모두 이메일 통신에 중요한 역할을 하며, 각각의 특성에 따라 이메일 전송, 수신, 관리 기능을 제공한다.&lt;br>
SMTP는 이메일 전송을, POP3와 IMAP은 이메일 수신을 담당하지만, IMAP이 더 현대적이고 유연한 기능을 제공한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SMTP (Simple Mail Transfer Protocol)&lt;/th>
&lt;th>POP3 (Post Office Protocol 3)&lt;/th>
&lt;th>IMAP (Internet Message Access Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>25 (일반), 587 (TLS/SSL)&lt;/td>
&lt;td>110 (일반), 995 (TLS/SSL)&lt;/td>
&lt;td>143 (일반), 993 (TLS/SSL)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>이메일 발송 및 전달&lt;/td>
&lt;td>이메일 다운로드 및 삭제&lt;/td>
&lt;td>서버상의 이메일 관리 및 접근&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 방향&lt;/td>
&lt;td>클라이언트 → 서버&lt;br>서버 → 서버&lt;/td>
&lt;td>클라이언트 ← 서버&lt;/td>
&lt;td>양방향 (클라이언트 ↔ 서버)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 동작 방식&lt;/td>
&lt;td>1. 연결 수립&lt;br>2. 송신자 확인&lt;br>3. 수신자 확인&lt;br>4. 메시지 전송&lt;br>5. 연결 종료&lt;/td>
&lt;td>1. 서버 접속&lt;br>2. 인증&lt;br>3. 메일 다운로드&lt;br>4. 서버에서 메일 삭제(옵션)&lt;br>5. 연결 종료&lt;/td>
&lt;td>1. 서버 접속&lt;br>2. 인증&lt;br>3. 메일함 선택&lt;br>4. 메일 조작(읽기/이동/삭제 등)&lt;br>5. 상태 동기화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 텍스트 기반 프로토콜&lt;br>- 메일 릴레이 가능&lt;br>- 단순한 명령어 체계&lt;br>- 확장 가능한 구조&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 오프라인 접근 가능&lt;br>- 서버 저장공간 최소화&lt;br>- 한 기기에서만 접근&lt;/td>
&lt;td>- 서버 중심 관리&lt;br>- 다중 기기 접근&lt;br>- 폴더 구조 지원&lt;br>- 실시간 동기화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메일 저장 위치&lt;/td>
&lt;td>전달 중계 역할만 수행&lt;/td>
&lt;td>로컬 장치&lt;/td>
&lt;td>메일 서버&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>다중 기기 지원&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>제한적 (한 기기에서만 관리)&lt;/td>
&lt;td>완벽 지원 (모든 기기 동기화)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 자원 사용&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>메일 전송 시에만 사용&lt;/td>
&lt;td>전체 메일 다운로드로 많이 사용&lt;/td>
&lt;td>필요한 부분만 동기화하여 효율적&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 안정적인 전달&lt;br>- 낮은 리소스 사용&lt;br>- 높은 호환성&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 오프라인 사용 가능&lt;br>- 서버 부하 낮음&lt;br>- 구현 용이&lt;/td>
&lt;td>- 유연한 메일 관리&lt;br>- 다중 기기 지원&lt;br>- 서버 백업 용이&lt;br>- 부분 동기화 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 기본 보안 기능 없음&lt;br>- 인증 제한적&lt;br>- 스팸 메일 취약&lt;br>- 첨부파일 크기 제한&lt;/td>
&lt;td>- 한 기기에서만 관리&lt;br>- 메일 동기화 어려움&lt;br>- 폴더 구조 제한&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 높은 서버 부하&lt;br>- 느린 초기 접속&lt;br>- 많은 서버 자원 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>기본적으로 없음 (SMTPS로 보안 추가 가능)&lt;/td>
&lt;td>기본적으로 없음 (POP3S로 보안 추가 가능)&lt;/td>
&lt;td>기본적으로 없음 (IMAPS로 보안 추가 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 명령어&lt;/td>
&lt;td>- HELO/EHLO&lt;br>MAIL FROM&lt;br>RCPT TO&lt;br>DATA&lt;br>QUIT&lt;/td>
&lt;td>- USER&lt;br>PASS&lt;br>LIST&lt;br>RETR&lt;br>DELE&lt;/td>
&lt;td>- SELECT&lt;br>FETCH&lt;br>STORE&lt;br>SEARCH&lt;br>EXPUNGE&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 이메일 프로토콜들은 다음과 같이 함께 동작한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>이메일 발송 과정:&lt;/p>
&lt;ul>
&lt;li>사용자가 이메일 작성&lt;/li>
&lt;li>SMTP를 통해 발송 서버로 전송&lt;/li>
&lt;li>발송 서버가 수신 서버로 SMTP를 통해 전달&lt;/li>
&lt;li>수신 서버에 메일 저장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>이메일 수신 과정:&lt;/p>
&lt;ul>
&lt;li>POP3 사용 시: 모든 메일을 로컬로 다운로드&lt;/li>
&lt;li>IMAP 사용 시: 서버와 실시간 동기화하며 필요한 메일만 접근&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 프로토콜들의 조합으로 현대의 이메일 시스템이 안정적으로 작동하며, 특히 최근에는 보안과 다중 기기 지원이 중요해지면서 IMAP의 사용이 증가하는 추세이다.&lt;/p>
&lt;h4>SNMP / ICMP / NTP / RMON&lt;/h4>&lt;p>SNMP는 네트워크 장치의 상태를 모니터링하고 관리하는 데 사용되며, MIB를 통해 정보를 구조화한다.&lt;br>
Manager와 Agent 간의 통신으로 동작한다.&lt;/p>
&lt;p>ICMP는 네트워크 문제를 진단하고 오류를 보고하는 데 사용된다.&lt;br>
Ping과 Traceroute 같은 도구에서 활용되며, 연결 없이 메시지를 전송한다.&lt;/p>
&lt;p>NTP는 네트워크 상의 장치들 간에 시간을 동기화하는 데 사용된다.&lt;br>
계층적 구조를 통해 정확한 시간 정보를 전파하며, 네트워크 지연을 고려하여 시간을 조정한다.&lt;/p>
&lt;p>RMON은 SNMP의 확장된 형태로, 더 상세한 네트워크 모니터링 기능을 제공한다.&lt;/p>
&lt;p>모두 네트워크 관리와 운영에 중요한 역할을 하며, 각각의 특성에 따라 다양한 네트워크 기능을 지원한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>SNMP (Simple Network Management Protocol)&lt;/th>
&lt;th>ICMP (Internet Control Message Protocol)&lt;/th>
&lt;th>NTP (Network Time Protocol)&lt;/th>
&lt;th>RMON (Remote Network Monitoring)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>네트워크 장비 및 시스템 관리 및 모니터링&lt;/td>
&lt;td>네트워크 오류 보고 및 진단&lt;/td>
&lt;td>컴퓨터 시스템 간 시간 동기화&lt;/td>
&lt;td>원격 네트워크 모니터링 및 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 네트워크 모니터링&lt;br>- 성능 관리&lt;br>- 장비 구성 관리&lt;br>- 문제 감지 및 보고&lt;/td>
&lt;td>- 오류 메시지 전송&lt;br>- 네트워크 연결성 테스트&lt;br>- 경로 진단&lt;br>- 라우터 광고/요청&lt;/td>
&lt;td>- 시간 정보 동기화&lt;br>- 지연시간 측정&lt;br>- 시간 서버 계층 구조 관리&lt;br>- 정밀한 시간 조정&lt;/td>
&lt;td>- 트래픽 모니터링&lt;br>- 통계 수집&lt;br>- 이력 데이터 관리&lt;br>- 알람 설정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 관리자/에이전트 구조&lt;br>GET/SET 명령 사용&lt;br>MIB 기반 정보 관리&lt;br>- 트랩 메시지 사용&lt;/td>
&lt;td>- IP 프로토콜 기반&lt;br>- 요청/응답 메시지&lt;br>- 타입과 코드로 메시지 구분&lt;br>TTL 기반 작동&lt;/td>
&lt;td>- 계층적 서버 구조&lt;br>UDP 포트 123 사용&lt;br>- 폴링 방식&lt;br>- 지터 버퍼 사용&lt;/td>
&lt;td>- SNMP 기반 동작&lt;br>- 프로브/콘솔 구조&lt;br>- 지속적 데이터 수집&lt;br>- 이벤트 기반 알림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- UDP 기반 통신&lt;br>- 비연결형 서비스&lt;br>- 간단한 구조&lt;br>- 확장 가능한 구조&lt;/td>
&lt;td>- IP의 필수 구성요소&lt;br>- 신뢰성 없는 전송&lt;br>- 제어 메시지 전용&lt;br>- 낮은 우선순위&lt;/td>
&lt;td>- 정밀한 시간 동기화&lt;br>- 계층적 구조&lt;br>- 지연 보상&lt;br>- 신뢰성 있는 동기화&lt;/td>
&lt;td>- 분산 모니터링&lt;br>- 상세한 통계&lt;br>- 이력 데이터 저장&lt;br>- 유연한 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 버전 1, 2c, 3 존재&lt;br>- 보안 기능 강화(v3)&lt;br>- 표준화된 관리 체계&lt;br>- 다양한 플랫폼 지원&lt;/td>
&lt;td>- Echo 요청/응답&lt;br>- 도달 불가 메시지&lt;br>- 리다이렉션 메시지&lt;br>- 시간 초과 메시지&lt;/td>
&lt;td>- 스트라텀 레벨 구조&lt;br>- 밀리초 단위 정확도&lt;br>- 서머타임 자동 조정&lt;br>- 루트 지연 계산&lt;/td>
&lt;td>- 상세한 모니터링&lt;br>- 이력 데이터 관리&lt;br>- 유연한 분석&lt;br>- 선제적 대응 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 쉬운 구현&lt;br>- 낮은 네트워크 부하&lt;br>- 통합 관리 가능&lt;br>- 자동화된 모니터링&lt;/td>
&lt;td>- 간단한 구조&lt;br>- 필수적인 오류 보고&lt;br>- 네트워크 진단 용이&lt;br>- 빠른 응답&lt;/td>
&lt;td>- 높은 정확도&lt;br>- 안정적인 동기화&lt;br>- 확장성&lt;br>- 자동 조정&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 구현 복잡성&lt;br>- 높은 저장공간 요구&lt;br>- 관리 부담&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 보안(v1,v2c)&lt;br>- 복잡한 설정(v3)&lt;br>- 대역폭 제한&lt;br>- 확장성 제한&lt;/td>
&lt;td>- 보안 취약성&lt;br>- 신뢰성 부족&lt;br>- 제한된 기능&lt;br>- 차단 가능성&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 네트워크 지연 영향&lt;br>- 보안 취약성&lt;br>- 높은 자원 사용&lt;/td>
&lt;td>- 네트워크 성능 분석&lt;br>- 트래픽 모니터링&lt;br>- 장애 예방&lt;br>- 용량 계획&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 포트&lt;/td>
&lt;td>UDP 161(요청), 162(트랩)&lt;/td>
&lt;td>IP 프로토콜 타입 1&lt;/td>
&lt;td>UDP 123&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 기능&lt;/td>
&lt;td>- 커뮤니티 문자열(v1,v2c)&lt;br>- 인증/암호화(v3)&lt;br>- 접근 제어&lt;br>- 보안 모델&lt;/td>
&lt;td>- 기본 보안 기능 없음&lt;br>- 필터링 필요&lt;br>- 제한된 보안&lt;/td>
&lt;td>- 인증 지원&lt;br>- 대칭키 암호화&lt;br>- 접근 제어&lt;br>NTPv4 보안 강화&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 네트워크 모니터링&lt;br>- 성능 관리&lt;br>- 장애 관리&lt;br>- 구성 관리&lt;/td>
&lt;td>- Ping 테스트&lt;br>- 경로 추적&lt;br>- 오류 보고&lt;br>- 네트워크 진단&lt;/td>
&lt;td>- 서버 시간 동기화&lt;br>- 로그 시간 동기화&lt;br>- 금융 거래 시간 동기화&lt;br>- 네트워크 시간 관리&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>ARP / RARP / DHCP / DNS&lt;/h4>&lt;p>이러한 프로토콜들은 각각의 고유한 역할을 통해 현대 네트워크의 기반을 형성한다.&lt;br>
특히:&lt;/p>
&lt;ul>
&lt;li>ARP는 로컬 네트워크에서의 주소 해석을 담당&lt;/li>
&lt;li>RARP는 역방향 주소 해석을 제공했으나 현재는 거의 사용되지 않음&lt;/li>
&lt;li>DHCP는 네트워크 구성의 자동화를 담당&lt;/li>
&lt;li>DNS는 도메인 이름 시스템의 근간을 형성&lt;br>
이들은 서로 보완적인 관계를 가지며, 현대 네트워크에서 필수적인 역할을 수행한다.&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>ARP (Address Resolution Protocol)&lt;/th>
&lt;th>RARP (Reverse ARP)&lt;/th>
&lt;th>DHCP (Dynamic Host Configuration Protocol)&lt;/th>
&lt;th>DNS (Domain Name System)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>해당 없음&lt;/td>
&lt;td>UDP 67(서버), 68(클라이언트)&lt;/td>
&lt;td>UDP/TCP 53&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>IP 주소를 MAC 주소로 변환&lt;/td>
&lt;td>MAC 주소를 IP 주소로 변환&lt;/td>
&lt;td>자동 네트워크 구성&lt;/td>
&lt;td>도메인 이름을 IP 주소로 변환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- MAC 주소 검색&lt;br>ARP 캐시 관리&lt;br>- 브로드캐스트 요청&lt;br>- 유니캐스트 응답&lt;/td>
&lt;td>- IP 주소 요청&lt;br>- 부팅 시 IP 할당&lt;br>- 서버 기반 주소 관리&lt;br>- 하드웨어 주소 매핑&lt;/td>
&lt;td>- IP 주소 자동 할당&lt;br>- 네트워크 설정 제공&lt;br>- 임대 시간 관리&lt;br>- 주소 풀 관리&lt;/td>
&lt;td>- 이름 해석&lt;br>- 계층적 네임스페이스&lt;br>- 분산 데이터베이스&lt;br>- 캐싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. ARP 요청 브로드캐스트&lt;br>2. 대상 호스트 응답&lt;br>3. ARP 캐시 업데이트&lt;br>4. 통신 시작&lt;/td>
&lt;td>1. RARP 요청 브로드캐스트&lt;br>2. RARP 서버 응답&lt;br>3. IP 주소 할당&lt;br>4. 부팅 계속&lt;/td>
&lt;td>1. DHCP 발견&lt;br>2. DHCP 제안&lt;br>3. DHCP 요청&lt;br>4. DHCP 승인&lt;/td>
&lt;td>1. DNS 쿼리 전송&lt;br>2. 재귀적/반복적 검색&lt;br>3. 응답 수신&lt;br>4. 캐시 저장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 브로드캐스트 기반&lt;br>- 로컬 네트워크 한정&lt;br>- 캐시 사용&lt;br>- 자동 갱신&lt;/td>
&lt;td>- 서버 필요&lt;br>- 제한된 사용&lt;br>- 단순한 구조&lt;br>- 레거시 프로토콜&lt;/td>
&lt;td>- 클라이언트-서버 모델&lt;br>- 자동화된 설정&lt;br>- 중앙 관리&lt;br>- 동적 할당&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 분산 시스템&lt;br>- 캐시 메커니즘&lt;br>- 이중화 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 자동 주소 매핑&lt;br>- 간단한 구현&lt;br>- 효율적 동작&lt;br>- 자가 갱신&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 쉬운 구현&lt;br>- 중앙 관리&lt;br>- 일관성 보장&lt;/td>
&lt;td>- 자동화된 관리&lt;br>- 효율적인 주소 사용&lt;br>- 유연한 설정&lt;br>- 중앙 관리 용이&lt;/td>
&lt;td>- 사용자 친화적&lt;br>- 확장성&lt;br>- 유연성&lt;br>- 신뢰성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약성&lt;br>- 브로드캐스트 부하&lt;br>- 로컬 네트워크 제한&lt;br>ARP 스푸핑 위험&lt;/td>
&lt;td>- 서버 의존성&lt;br>- 제한된 기능&lt;br>- 확장성 부족&lt;br>- 현대 환경 부적합&lt;/td>
&lt;td>- 단일 장애점&lt;br>- 설정 복잡성&lt;br>- 보안 이슈&lt;br>- 서버 부하&lt;/td>
&lt;td>- 캐시 포이즈닝&lt;br>DNS 증폭 공격&lt;br>- 지연 가능성&lt;br>- 복잡한 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- LAN 통신&lt;br>IP 네트워킹&lt;br>- 게이트웨이 통신&lt;br>- 네트워크 연결&lt;/td>
&lt;td>- 디스크리스 워크스테이션&lt;br>- 단순 네트워크 구성&lt;br>- 레거시 시스템&lt;br>- 제한된 환경&lt;/td>
&lt;td>- 네트워크 자동 구성&lt;br>IP 주소 관리&lt;br>- 네트워크 설정 배포&lt;br>- 대규모 네트워크 관리&lt;/td>
&lt;td>- 웹 브라우징&lt;br>- 이메일 시스템&lt;br>- 네트워크 서비스&lt;br>- 도메인 관리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>IGMP / PIM&lt;/h4>&lt;p>두 프로토콜은 멀티캐스트 통신에서 서로 다른 역할을 수행하며 상호 보완적으로 동작한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>IGMP는 로컬 네트워크에서 멀티캐스트 그룹 관리를 담당하며:&lt;/p>
&lt;ul>
&lt;li>호스트의 그룹 가입/탈퇴 처리&lt;/li>
&lt;li>라우터의 그룹 멤버십 추적&lt;/li>
&lt;li>효율적인 멀티캐스트 전달 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>PIM은 네트워크 전반에서 멀티캐스트 라우팅을 담당하며:&lt;/p>
&lt;ul>
&lt;li>효율적인 멀티캐스트 트리 구성&lt;/li>
&lt;li>최적의 멀티캐스트 경로 계산&lt;/li>
&lt;li>다양한 네트워크 환경 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이 두 프로토콜의 조합으로 효율적인 멀티캐스트 통신이 가능해진다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IGMP (Internet Group Management Protocol)&lt;/th>
&lt;th>PIM (Protocol Independent Multicast)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 유형&lt;/td>
&lt;td>멀티캐스트 관리 프로토콜&lt;/td>
&lt;td>멀티캐스트 라우팅 프로토콜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>호스트와 라우터 간의 멀티캐스트 그룹 관리&lt;/td>
&lt;td>멀티캐스트 트래픽의 효율적인 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 모드&lt;/td>
&lt;td>- IGMPv1: 기본 질의/응답&lt;br>IGMPv2: 빠른 탈퇴 추가&lt;br>IGMPv3: 소스 필터링 지원&lt;/td>
&lt;td>- Dense Mode (DM)&lt;br>Sparse Mode (SM)&lt;br>Sparse-Dense Mode&lt;br>Bidirectional Mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 그룹 가입/탈퇴 관리&lt;br>- 멤버십 보고&lt;br>- 주기적인 질의&lt;br>- 그룹 상태 추적&lt;/td>
&lt;td>- 멀티캐스트 트리 구성&lt;br>- 최적 경로 계산&lt;br>RPF 확인&lt;br>RP 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 로컬 서브넷 범위&lt;br>IPv4/IPv6 지원&lt;br>- 질의/응답 기반&lt;br>- 상태 기반 프로토콜&lt;/td>
&lt;td>- 프로토콜 독립적&lt;br>- 유니캐스트 라우팅 활용&lt;br>- 확장성&lt;br>- 유연한 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 메시지 유형&lt;/td>
&lt;td>- Membership Query&lt;br>Membership Report&lt;br>Leave Group&lt;br>Group-Specific Query&lt;/td>
&lt;td>- Hello&lt;br>Join/Prune&lt;br>Assert&lt;br>Bootstrap&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. 라우터의 주기적 질의&lt;br>2. 호스트의 멤버십 보고&lt;br>3. 그룹 상태 유지&lt;br>4. 필요시 빠른 탈퇴&lt;/td>
&lt;td>1. 이웃 탐색&lt;br>2. 트리 구성&lt;br>3. 경로 최적화&lt;br>4. 주기적 갱신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 단순한 구현&lt;br>- 효율적인 그룹 관리&lt;br>- 빠른 응답성&lt;br>- 낮은 오버헤드&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 효율적인 트래픽 전달&lt;br>- 유연한 토폴로지&lt;br>- 다양한 모드 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 범위&lt;br>- 보안 취약성&lt;br>- 버전 호환성 문제&lt;br>- 대역폭 제한&lt;/td>
&lt;td>- 복잡한 구성&lt;br>- 높은 리소스 사용&lt;br>- 관리 부담&lt;br>- 초기 설정 복잡&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 환경&lt;/td>
&lt;td>- 로컬 네트워크&lt;br>- 엔드 시스템&lt;br>- 액세스 네트워크&lt;br>- 마지막 홉 라우터&lt;/td>
&lt;td>- 기업 네트워크&lt;br>- 서비스 제공자&lt;br>- 백본 네트워크&lt;br>- 대규모 네트워크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 버전별 기능 향상&lt;br>MLD와의 통합&lt;br>- 빠른 응답 메커니즘&lt;br>- 그룹별 관리&lt;/td>
&lt;td>- 다양한 동작 모드&lt;br>RP 기반 동작&lt;br>- 자동 RP 탐색&lt;br>- 경로 최적화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 고려사항&lt;/td>
&lt;td>- 무단 가입 위험&lt;br>- 스누핑 취약성&lt;br>DoS 공격 가능성&lt;br>- 인증 메커니즘 부재&lt;/td>
&lt;td>- 인증 필요&lt;br>RP 보안&lt;br>- 경로 검증&lt;br>- 액세스 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>Telnet / SSH&lt;/h4>&lt;p>네트워크를 통해 원격 시스템에 접속하여 명령어를 실행할 수 있게 해주는 프로토콜.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>TELNET (TELecommunication NETwork)&lt;/th>
&lt;th>SSH (Secure Shell)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>23&lt;/td>
&lt;td>22&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 암호화 없음&lt;br>- 평문 전송&lt;br>- 기본적인 인증만 제공&lt;br>- 보안 취약&lt;/td>
&lt;td>- 강력한 암호화&lt;br>- 다중 인증 방식&lt;br>- 데이터 무결성 검증&lt;br>- 키 기반 인증&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 원격 터미널 접속&lt;br>- 텍스트 기반 통신&lt;br>- 간단한 명령어 실행&lt;br>- 기본적인 세션 관리&lt;/td>
&lt;td>- 보안 원격 접속&lt;br>- 파일 전송(SFTP/SCP)&lt;br>- 포트 포워딩&lt;br>X11 포워딩&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인증 방식&lt;/td>
&lt;td>- 사용자명/비밀번호&lt;br>- 평문 전송&lt;br>- 단순 인증&lt;/td>
&lt;td>- 공개키/개인키&lt;br>- 비밀번호&lt;br>- 다중 인증&lt;br>- 인증서 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 전송 특성&lt;/td>
&lt;td>- 평문 전송&lt;br>- 압축 없음&lt;br>- 무결성 검사 없음&lt;br>- 중간자 공격 취약&lt;/td>
&lt;td>- 암호화 전송&lt;br>- 압축 지원&lt;br>- 무결성 검사&lt;br>- 중간자 공격 방지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>세션 관리&lt;/td>
&lt;td>- 단순한 세션 관리&lt;br>- 연결 유지 기능 제한&lt;br>- 재접속 시 새로운 세션&lt;/td>
&lt;td>- 고급 세션 관리&lt;br>- 연결 유지 기능&lt;br>- 세션 재사용 가능&lt;br>- 다중 채널 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 특징&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 적은 리소스 사용&lt;br>- 빠른 연결&lt;br>- 호환성 높음&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 다양한 기능&lt;br>- 확장성&lt;br>- 현대적 설계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 낮은 리소스 요구&lt;br>- 빠른 응답 속도&lt;br>- 널리 지원됨&lt;/td>
&lt;td>- 높은 보안성&lt;br>- 다양한 기능&lt;br>- 신뢰성&lt;br>- 표준화된 프로토콜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 보안 취약&lt;br>- 기능 제한&lt;br>- 현대 환경 부적합&lt;br>- 데이터 노출 위험&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 구현 복잡성&lt;br>- 초기 설정 필요&lt;br>- 상대적으로 느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. 사용자 인증&lt;br>3. 터미널 에뮬레이션&lt;br>4. 명령어 전송/수신&lt;/td>
&lt;td>1. TCP 연결 수립&lt;br>2. 버전 협상&lt;br>3. 키 교환&lt;br>4. 인증&lt;br>5. 채널 설정&lt;br>6. 암호화된 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 사용 사례&lt;/td>
&lt;td>- 레거시 시스템 관리&lt;br>- 간단한 원격 접속&lt;br>- 제한된 환경&lt;br>- 테스트 목적&lt;/td>
&lt;td>- 서버 관리&lt;br>- 보안 파일 전송&lt;br>- 원격 명령 실행&lt;br>- 터널링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 상태&lt;/td>
&lt;td>사용 권장되지 않음&lt;/td>
&lt;td>현재 표준으로 사용 중&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>SSH의 주요 보안 기능:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>암호화&lt;/p>
&lt;ul>
&lt;li>대칭키 암호화&lt;/li>
&lt;li>비대칭키 암호화&lt;/li>
&lt;li>완벽한 전방 비밀성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>인증 메커니즘&lt;/p>
&lt;ul>
&lt;li>공개키 인증&lt;/li>
&lt;li>비밀번호 인증&lt;/li>
&lt;li>호스트 기반 인증&lt;/li>
&lt;li>다중 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 무결성&lt;/p>
&lt;ul>
&lt;li>MAC (Message Authentication Code)&lt;/li>
&lt;li>해시 함수&lt;/li>
&lt;li>디지털 서명&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 원격 접속 프로토콜들은 시간이 지남에 따라 보안의 중요성이 증가하면서, TELNET에서 SSH로 대체되는 추세를 보이고 있다. 특히 기업 환경에서는 보안상의 이유로 SSH의 사용이 필수적이 되었다.&lt;/p>
&lt;h4>RIP / RIPv2 / RIPng / OSPF / EIGRP / IS-IS / BGP&lt;/h4>&lt;p>각 라우팅 프로토콜의 주요 특성을 요약한 것이다.&lt;br>
각 프로토콜은 네트워크의 규모와 요구사항에 따라 선택되어 사용된다.&lt;br>
예를 들어, RIP는 소규모 네트워크에 적합하고, OSPF와 IS-IS는 대규모 네트워크에 적합하며, BGP는 인터넷 백본과 같은 초대규모 네트워크에 사용된다.&lt;/p>
&lt;p>라우팅 프로토콜들의 특징을 체계적으로 비교 분석하여 표로 정리해드리겠습니다. 각 프로토콜의 특성과 동작 방식을 상세하게 설명하여 이해를 돕도록 하겠습니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RIP (Routing Information Protocol) / RIPv2 (Routing Information Protocol version 2)&lt;/th>
&lt;th>RIPng (Routing Information Protocol next generation)&lt;/th>
&lt;th>OSPF (Open Shortest Path First)&lt;/th>
&lt;th>EIGRP (Enhanced Interior Gateway Routing Protocol)&lt;/th>
&lt;th>IS-IS (Intermediate System to Intermediate System)&lt;/th>
&lt;th>BGP (Border Gateway Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;td>네트워크 계층 (3계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;td>인터넷 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 유형&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>내부 게이트웨이 프로토콜(IGP)&lt;/td>
&lt;td>외부 게이트웨이 프로토콜(EGP)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 알고리즘&lt;/td>
&lt;td>거리 벡터&lt;/td>
&lt;td>거리 벡터&lt;/td>
&lt;td>링크 스테이트&lt;/td>
&lt;td>하이브리드(DUAL)&lt;/td>
&lt;td>링크 스테이트&lt;/td>
&lt;td>경로 벡터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>메트릭 계산 방식&lt;/td>
&lt;td>홉 카운트&lt;/td>
&lt;td>홉 카운트&lt;/td>
&lt;td>비용(대역폭)&lt;/td>
&lt;td>복합 메트릭(대역폭, 지연, 부하, 신뢰성)&lt;/td>
&lt;td>비용&lt;/td>
&lt;td>다양한 속성(AS 경로, 로컬 선호도 등)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>최대 홉 카운트&lt;/td>
&lt;td>15&lt;/td>
&lt;td>15&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;td>제한 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>수렴 속도&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>매우 빠름&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>느림&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>업데이트 방식&lt;/td>
&lt;td>주기적(30초)&lt;/td>
&lt;td>주기적(30초)&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;td>변경 시&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>네트워크 규모&lt;/td>
&lt;td>소규모&lt;/td>
&lt;td>소규모&lt;/td>
&lt;td>대규모&lt;/td>
&lt;td>중대규모&lt;/td>
&lt;td>대규모&lt;/td>
&lt;td>초대규모(인터넷)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특징&lt;/td>
&lt;td>- 구현 간단&lt;br>- 설정 쉬움&lt;br>- 제한된 확장성&lt;br>- 카운팅 투 인피니티 문제&lt;/td>
&lt;td>- IPv6 지원&lt;br>RIPv2 기반&lt;br>- 향상된 보안&lt;br>- 동일한 제한사항&lt;/td>
&lt;td>- 영역 기반 계층구조&lt;br>- 빠른 수렴&lt;br>- 대규모 확장성&lt;br>- 정확한 토폴로지 정보&lt;/td>
&lt;td>- Cisco 전용&lt;br>- 빠른 수렴&lt;br>- 효율적인 대역폭 사용&lt;br>- 유연한 경로 선택&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 벤더 중립적&lt;br>- 대규모 확장성&lt;br>- 빠른 수렴&lt;/td>
&lt;td>- 정책 기반 라우팅&lt;br>- 대규모 확장성&lt;br>- 풍부한 경로 속성&lt;br>AS 간 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 이해하기 쉬움&lt;br>- 적은 리소스 사용&lt;br>- 간단한 구현&lt;br>- 모든 벤더 지원&lt;/td>
&lt;td>- IPv6 네이티브 지원&lt;br>- 보안 강화&lt;br>- 간단한 구현&lt;br>- 기존 RIP 호환&lt;/td>
&lt;td>- 효율적인 대역폭 사용&lt;br>- 빠른 수렴&lt;br>- 계층적 설계&lt;br>- 뛰어난 확장성&lt;/td>
&lt;td>- 빠른 수렴&lt;br>- 효율적인 리소스 사용&lt;br>- 유연한 토폴로지&lt;br>- 부분 업데이트&lt;/td>
&lt;td>- 높은 확장성&lt;br>- 벤더 중립성&lt;br>- 효율적인 라우팅&lt;br>IPv4/IPv6 통합 지원&lt;/td>
&lt;td>- 강력한 정책 제어&lt;br>- 뛰어난 확장성&lt;br>- 풍부한 경로 정보&lt;br>- 정교한 경로 선택&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 느린 수렴&lt;br>- 제한된 확장성&lt;br>- 비효율적 라우팅&lt;br>- 대역폭 낭비&lt;/td>
&lt;td>- 느린 수렴&lt;br>- 제한된 확장성&lt;br>IPv4 미지원&lt;br>- 홉 제한&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 리소스 요구&lt;br>- 복잡한 트러블슈팅&lt;br>- 많은 CPU/메모리 사용&lt;/td>
&lt;td>- Cisco 전용&lt;br>- 복잡한 메트릭&lt;br>- 라이센스 비용&lt;br>- 트러블슈팅 어려움&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 높은 학습 곡선&lt;br>- 복잡한 트러블슈팅&lt;br>- 전문성 요구&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 느린 수렴&lt;br>- 높은 리소스 요구&lt;br>- 전문성 요구&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적용 환경&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>IPv6 소규모 네트워크&lt;/td>
&lt;td>중대형 엔터프라이즈 네트워크&lt;/td>
&lt;td>Cisco 기반 네트워크&lt;/td>
&lt;td>대형 서비스 제공자 네트워크&lt;/td>
&lt;td>인터넷 서비스 제공자&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>RTP / RTCP / RTSP / SIP / H.323 / WebRTC / WebSocket&lt;/h4>&lt;p>RTP와 RTCP는 실시간 미디어 전송에 중점을 두고 있으며, RTSP는 스트리밍 미디어의 원격 제어에 사용된다.&lt;br>
SIP와 H.323은 VoIP와 화상 회의 등의 멀티미디어 통신 세션 설정에 사용되며, WebRTC는 웹 브라우저 기반의 실시간 통신을 WebSocket은 웹에서의 실시간 양방향 통신을 가능하게 한다.&lt;br>
각 프로토콜은 OSI 모델과 TCP/IP 모델에서 주로 응용 계층에 위치하지만, 실제 구현에서는 하위 계층의 프로토콜들과 함께 사용된다.&lt;br>
예를 들어, RTP는 주로 UDP를 기반으로 사용되며, SIP는 TCP나 UDP를 사용할 수 있다.&lt;br>
이러한 프로토콜들은 실시간 통신, 스트리밍 미디어, 인터넷 전화, 화상 회의 등 다양한 멀티미디어 애플리케이션에서 중요한 역할을 한다.&lt;br>
각 프로토콜의 특성과 장단점을 이해하면 적절한 상황에 맞는 프로토콜을 선택하여 효율적인 네트워크 통신을 구현할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RTP (Real-time Transport Protocol)&lt;/th>
&lt;th>RTCP (RTP Control Protocol)&lt;/th>
&lt;th>RTSP (Real Time Streaming Protocol)&lt;/th>
&lt;th>SIP (Session Initiation Protocol)&lt;/th>
&lt;th>H.323 (ITU-T H)&lt;/th>
&lt;th>WebRTC (Web Real-Time Communication)&lt;/th>
&lt;th>WebSocket&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>세션 계층 (5계층) / 표현 계층 (6계층)&lt;/td>
&lt;td>세션 계층 (5계층) / 표현 계층 (6계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>실시간 오디오/비디오 데이터 전송&lt;/td>
&lt;td>RTP 세션 모니터링 및 제어&lt;/td>
&lt;td>스트리밍 미디어 제어&lt;/td>
&lt;td>멀티미디어 세션 관리&lt;/td>
&lt;td>종합적인 멀티미디어 통신 제어&lt;/td>
&lt;td>브라우저 기반 실시간 통신&lt;/td>
&lt;td>웹 브라우저와 서버 간의 양방향 실시간 통신 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- 순차 번호 부여&lt;br>- 타임스탬프 관리&lt;br>- 페이로드 타입 식별&lt;br>- 미디어 동기화&lt;/td>
&lt;td>- QoS 모니터링&lt;br>- 세션 통계 수집&lt;br>- 참가자 식별&lt;br>- 세션 제어&lt;/td>
&lt;td>- 미디어 전송 제어&lt;br>- 재생/일시정지/정지&lt;br>- 세션 설정/해제&lt;br>- 미디어 속성 협상&lt;/td>
&lt;td>- 세션 설정/수정/종료&lt;br>- 사용자 위치 관리&lt;br>- 미디어 협상&lt;br>- 참가자 관리&lt;/td>
&lt;td>- 호 설정/해제&lt;br>- 대역폭 관리&lt;br>- 멀티포인트 제어&lt;br>- 보안 관리&lt;/td>
&lt;td>- P2P 연결&lt;br>- 미디어 스트리밍&lt;br>- 데이터 채널&lt;br>NAT 통과&lt;/td>
&lt;td>- 전이중 통신 지원&lt;br>- 실시간 양방향 데이터 교환&lt;br>- 단일 TCP 연결 유지&lt;br>- 연결 상태 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- UDP 기반 전송&lt;br>- 실시간 전송 최적화&lt;br>- 낮은 지연&lt;br>- 손실 허용&lt;/td>
&lt;td>- 주기적 보고&lt;br>- 제어 정보 전송&lt;br>- 대역폭 제한&lt;br>RTP 보완&lt;/td>
&lt;td>- TCP 기반&lt;br>- 상태 기반 프로토콜&lt;br>- 클라이언트-서버 모델&lt;br>HTTP 유사 구문&lt;/td>
&lt;td>- 텍스트 기반&lt;br>- 확장 가능&lt;br>- 독립적 동작&lt;br>- 모듈화 설계&lt;/td>
&lt;td>- 이진 프로토콜&lt;br>- 복잡한 구조&lt;br>- 종합적 기능&lt;br>- 엄격한 표준&lt;/td>
&lt;td>- 브라우저 내장&lt;br>- 표준 기반&lt;br>- 플러그인 불필요&lt;br>- 보안 중심&lt;/td>
&lt;td>- HTTP 기반 호환성&lt;br>- 지속적 연결 유지&lt;br>- 낮은 지연시간&lt;br>- 헤더 오버헤드 최소화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 패킷 단위 전송&lt;br>- 헤더 정보 처리&lt;br>- 스트리밍 최적화&lt;br>- 버퍼 관리&lt;/td>
&lt;td>- 주기적 리포트 전송&lt;br>- 피드백 제공&lt;br>- 통계 수집&lt;br>- 성능 모니터링&lt;/td>
&lt;td>- 요청/응답 방식&lt;br>- 세션 추적&lt;br>- 상태 관리&lt;br>- 명령어 처리&lt;/td>
&lt;td>- 요청/응답 방식&lt;br>- 프록시 서버 활용&lt;br>- 등록 관리&lt;br>- 다이얼로그 관리&lt;/td>
&lt;td>- 게이트키퍼 중심&lt;br>- 엔드포인트 등록&lt;br>- 대역폭 제어&lt;br>- 서비스 품질 관리&lt;/td>
&lt;td>- ICE/STUN/TURN 활용&lt;br>- 미디어 협상&lt;br>- 시그널링 서버 활용&lt;br>- 보안 연결 수립&lt;/td>
&lt;td>- HTTP 핸드셰이크로 시작&lt;br>- 웹소켓 프로토콜로 업그레이드&lt;br>- 양방향 채널 수립&lt;br>- 프레임 기반 메시지 교환&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 실시간 전송 최적화&lt;br>- 유연한 구조&lt;br>- 다양한 코덱 지원&lt;br>- 효율적 전송&lt;/td>
&lt;td>- 세션 품질 관리&lt;br>- 문제 진단 용이&lt;br>- 확장 가능&lt;br>- 효과적 모니터링&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 방화벽 통과 용이&lt;br>- 표준화된 제어&lt;br>- 확장성&lt;/td>
&lt;td>- 단순한 구조&lt;br>- 높은 확장성&lt;br>- 쉬운 구현&lt;br>- 유연성&lt;/td>
&lt;td>- 완벽한 기능 세트&lt;br>- 높은 안정성&lt;br>QoS 보장&lt;br>- 표준화&lt;/td>
&lt;td>- 쉬운 통합&lt;br>- 강력한 보안&lt;br>- 개방형 표준&lt;br>- 크로스 플랫폼&lt;/td>
&lt;td>- 실시간성 보장&lt;br>- 서버 푸시 가능&lt;br>- 효율적인 리소스 사용&lt;br>HTTP 호환성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- QoS 보장 없음&lt;br>- 보안 기능 부족&lt;br>- 대역폭 오버헤드&lt;br>- 복잡한 구현&lt;/td>
&lt;td>- 추가 대역폭 필요&lt;br>- 제한된 제어&lt;br>- 지연 발생&lt;br>- 구현 복잡성&lt;/td>
&lt;td>- 상태 관리 부담&lt;br>TCP 지연&lt;br>- 제한된 기능&lt;br>- 보안 취약성&lt;/td>
&lt;td>- 초기 지연&lt;br>NAT 문제&lt;br>- 복잡한 보안&lt;br>- 오버헤드&lt;/td>
&lt;td>- 높은 복잡도&lt;br>- 무거운 구현&lt;br>- 높은 비용&lt;br>- 유연성 부족&lt;/td>
&lt;td>- 브라우저 제한&lt;br>- 리소스 소모&lt;br>- 구형 브라우저 미지원&lt;br>- 복잡한 디버깅&lt;/td>
&lt;td>- 이전 브라우저 지원 제한&lt;br>- 연결 유지 부담&lt;br>- 프록시/방화벽 제한&lt;br>- 재연결 처리 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 스트리밍 서비스&lt;br>VoIP&lt;br>- 화상 회의&lt;br>- 실시간 방송&lt;/td>
&lt;td>- 스트리밍 품질 관리&lt;br>- 네트워크 모니터링&lt;br>- 성능 최적화&lt;br>- 문제 해결&lt;/td>
&lt;td>- 동영상 스트리밍&lt;br>- 미디어 서버 제어&lt;br>- 온디맨드 서비스&lt;br>- 라이브 방송&lt;/td>
&lt;td>- VoIP 서비스&lt;br>- 화상 통화&lt;br>- 인스턴트 메시징&lt;br>- 화상 회의&lt;/td>
&lt;td>- 기업용 화상 회의&lt;br>- 텔레프레즌스&lt;br>- 통합 커뮤니케이션&lt;br>- 원격 교육&lt;/td>
&lt;td>- 웹 기반 화상 채팅&lt;br>- 파일 공유&lt;br>- 실시간 게임&lt;br>- 원격 지원&lt;/td>
&lt;td>- 실시간 채팅&lt;br>- 실시간 데이터 피드&lt;br>- 온라인 게임&lt;br>- 실시간 모니터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>RADIUS / TACACS+&lt;/h4>&lt;p>두 프로토콜 모두 네트워크 접근 제어와 보안 강화에 중요한 역할을 한다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>RADIUS (Remote Authentication Dial-In User Service)&lt;/th>
&lt;th>TACACS+ (Terminal Access Controller Access Control System Plus)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>UDP 1812(인증), 1813(과금)&lt;/td>
&lt;td>TCP 49&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 프로토콜&lt;/td>
&lt;td>UDP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>네트워크 접근 인증, 권한 부여, 과금 관리&lt;/td>
&lt;td>네트워크 장비 접근 제어, 인증, 권한 부여, 감사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- 사용자 인증&lt;br>- 접근 권한 부여&lt;br>- 서비스 과금&lt;br>- 네트워크 정책 적용&lt;/td>
&lt;td>- 상세한 명령어 제어&lt;br>- 세분화된 권한 관리&lt;br>- 감사 로깅&lt;br>- 중앙집중식 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>1. 클라이언트 접근 요청&lt;br>2. RADIUS 서버 인증&lt;br>3. 권한 부여&lt;br>4. 과금 정보 수집&lt;/td>
&lt;td>1. 사용자 로그인&lt;br>2. 명령어 권한 검증&lt;br>3. 상세 로깅&lt;br>4. 세션 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 패킷 헤더만 암호화&lt;br>- 통합된 인증/권한부여&lt;br>- 확장 가능한 속성&lt;br>- 간단한 구현&lt;/td>
&lt;td>- 전체 패킷 암호화&lt;br>- 분리된 AAA 기능&lt;br>- 상세한 명령어 제어&lt;br>- 강력한 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- 패스워드만 암호화&lt;br>- 기본적인 보안&lt;br>- 제한된 암호화&lt;br>UDP 기반 취약성&lt;/td>
&lt;td>- 전체 세션 암호화&lt;br>- 강력한 보안&lt;br>TCP 기반 신뢰성&lt;br>- 상세한 감사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 사용됨&lt;br>- 구현 용이&lt;br>- 다양한 벤더 지원&lt;br>- 과금 기능 제공&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 상세한 제어&lt;br>- 명확한 감사&lt;br>- 확장성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 제한된 보안&lt;br>UDP 신뢰성 문제&lt;br>- 기본적 명령어 제어&lt;br>- 제한된 감사&lt;/td>
&lt;td>- 높은 리소스 사용&lt;br>- 복잡한 구성&lt;br>- 단일 벤더 의존&lt;br>- 높은 비용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AAA 기능 구현&lt;/td>
&lt;td>- 통합된 인증/권한부여&lt;br>- 단순한 과금&lt;br>- 기본적인 감사&lt;br>- 제한된 로깅&lt;/td>
&lt;td>- 분리된 AAA 처리&lt;br>- 상세한 권한 제어&lt;br>comprehensive 감사&lt;br>- 풍부한 로깅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>- 속성-값 쌍 확장&lt;br>- 벤더 특화 속성&lt;br>- 유연한 정책 설정&lt;br>- 다중 서버 지원&lt;/td>
&lt;td>- 상세한 명령어 제어&lt;br>- 계층적 권한 관리&lt;br>- 다양한 인증 방식&lt;br>- 그룹 기반 정책&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- ISP 서비스&lt;br>- 무선 네트워크&lt;br>VPN 접근&lt;br>- 원격 접속&lt;/td>
&lt;td>- 네트워크 장비 관리&lt;br>- 기업 인프라&lt;br>- 보안 중요 환경&lt;br>- 상세 접근 제어&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 차이점과 용도는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>RADIUS는:&lt;/p>
&lt;ul>
&lt;li>대중적이고 광범위한 사용&lt;/li>
&lt;li>ISP 환경에 적합&lt;/li>
&lt;li>과금 기능 중심&lt;/li>
&lt;li>다양한 벤더 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TACACS+는:&lt;/p>
&lt;ul>
&lt;li>상세한 명령어 제어&lt;/li>
&lt;li>기업 네트워크 관리에 적합&lt;/li>
&lt;li>강력한 보안 기능&lt;/li>
&lt;li>Cisco 환경에 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>선택 시 고려사항:&lt;/p>
&lt;ul>
&lt;li>보안 요구사항&lt;/li>
&lt;li>네트워크 규모&lt;/li>
&lt;li>관리 복잡도&lt;/li>
&lt;li>비용 효율성&lt;/li>
&lt;/ul>
&lt;p>이러한 특성을 고려하여 환경에 맞는 프로토콜을 선택하는 것이 중요하다.&lt;/p>
&lt;h4>PPPoE / L2TP&lt;/h4>&lt;p>PPPoE는 이더넷 상에서 PPP 연결을 제공하여 효율적인 사용자 접근 제어와 과금을 가능하게 한다.&lt;br>
L2TP는 VPN 구현에 사용되며, 다양한 L2 데이터 유형을 IP 네트워크를 통해 전송할 수 있게 해준다.&lt;br>
두 프로토콜 모두 네트워크 액세스에 중요한 역할을 하며, 각각의 특성에 따라 다양한 네트워크 환경에서 사용된다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>PPPoE (Point-to-Point Protocol over Ethernet)&lt;/th>
&lt;th>L2TP (Layer 2 Tunneling Protocol)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>데이터링크 계층 (2계층)&lt;/td>
&lt;td>데이터링크 계층 (2계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>네트워크 접근 계층&lt;/td>
&lt;td>네트워크 접근 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜 역할&lt;/td>
&lt;td>이더넷 상에서 PPP 프레임 전송 및 세션 관리&lt;/td>
&lt;td>가상 사설망(VPN) 구현을 위한 터널링 제공&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 기능&lt;/td>
&lt;td>- PPP 세션 설정/해제&lt;br>- 인증 및 암호화&lt;br>- 대역폭 관리&lt;br>- 서비스 과금 지원&lt;/td>
&lt;td>- 터널 생성/관리&lt;br>- 데이터 캡슐화&lt;br>- 세션 관리&lt;br>- 멀티프로토콜 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 단계&lt;/td>
&lt;td>1. 발견 단계&lt;br>2. 세션 설정&lt;br>3. PPP 세션 시작&lt;br>4. 데이터 전송&lt;br>5. 세션 종료&lt;/td>
&lt;td>1. 터널 설정&lt;br>2. 세션 설정&lt;br>3. 데이터 전송&lt;br>4. 터널 유지관리&lt;br>5. 세션 종료&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 연결 지향적&lt;br>- 세션 기반&lt;br>- 이더넷 프레임 사용&lt;br>- 점대점 연결&lt;/td>
&lt;td>- 터널링 프로토콜&lt;br>- 제어/데이터 분리&lt;br>UDP 기반&lt;br>- 다중 세션 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안 특성&lt;/td>
&lt;td>- PAP/CHAP 인증&lt;br>- 기본적인 암호화&lt;br>- 세션 격리&lt;br>- 접근 제어&lt;/td>
&lt;td>- 자체 보안 없음&lt;br>IPSec 결합 필요&lt;br>- 터널 인증&lt;br>- 데이터 무결성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 구조&lt;/td>
&lt;td>- PPPoE 헤더&lt;br>PPP 헤더&lt;br>- 이더넷 프레임&lt;br>- 페이로드&lt;/td>
&lt;td>- L2TP 헤더&lt;br>UDP 헤더&lt;br>IP 헤더&lt;br>- 페이로드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 간단한 구현&lt;br>- 널리 사용됨&lt;br>- 안정적인 연결&lt;br>- 과금 용이&lt;/td>
&lt;td>- 유연한 터널링&lt;br>- 프로토콜 독립적&lt;br>- 확장성&lt;br>NAT 통과 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 추가 오버헤드&lt;br>MTU 크기 제한&lt;br>- 성능 저하&lt;br>- 확장성 제한&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 보안 부족&lt;br>- 오버헤드&lt;br>- 추가 보안 필요&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 광대역 인터넷 접속&lt;br>ADSL 서비스&lt;br>- 가정용 인터넷&lt;br>- 소규모 사무실&lt;/td>
&lt;td>- 기업 VPN&lt;br>- 원격 접속&lt;br>ISP 서비스&lt;br>- 사이트 간 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>- 기본적인 QoS&lt;br>- 대역폭 제어&lt;br>- 우선순위 지원&lt;br>- 세션별 제어&lt;/td>
&lt;td>- QoS 태그 전달&lt;br>- 터널 수준 QoS&lt;br>- 세션별 QoS&lt;br>DSCP 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡도&lt;/td>
&lt;td>- 비교적 단순&lt;br>- 표준화된 구현&lt;br>- 쉬운 트러블슈팅&lt;br>- 적은 설정 필요&lt;/td>
&lt;td>- 상대적으로 복잡&lt;br>- 다양한 설정 필요&lt;br>- 전문성 요구&lt;br>- 세밀한 설정 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 두 프로토콜의 주요 활용 시나리오는 다음과 같다:&lt;/p>
&lt;p>PPPoE는:&lt;/p>
&lt;ul>
&lt;li>가정용 광대역 인터넷 연결&lt;/li>
&lt;li>ADSL/VDSL 서비스&lt;/li>
&lt;li>소규모 사무실 네트워크&lt;/li>
&lt;li>ISP 가입자 관리&lt;/li>
&lt;/ul>
&lt;p>L2TP는:&lt;/p>
&lt;ul>
&lt;li>기업용 VPN 구축&lt;/li>
&lt;li>원격 사무실 연결&lt;/li>
&lt;li>보안 터널링 요구 환경&lt;/li>
&lt;li>복잡한 네트워크 구성&lt;/li>
&lt;/ul>
&lt;p>이러한 특성을 고려하여 네트워크 환경과 요구사항에 맞는 프로토콜을 선택하는 것이 중요하다.&lt;br>
PPPoE는 단순하고 안정적인 연결이 필요한 경우에, L2TP는 더 복잡하고 유연한 터널링이 필요한 경우에 적합하다.&lt;/p>
&lt;h4>LDAP / SAML / Kerberos / OpenID Connect / SCIM&lt;/h4>&lt;p>이 프로토콜들은 모두 사용자 인증, 권한 부여, 또는 ID 관리와 관련된 기능을 제공하며, 주로 응용 계층에서 동작한다.&lt;br>
각 프로토콜은 특정 사용 사례와 환경에 맞게 설계되어 있어, 조직의 요구사항에 따라 적절한 프로토콜을 선택하여 사용할 수 있다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>LDAP (Lightweight Directory Access Protocol)&lt;/th>
&lt;th>SAML (Security Assertion Markup Language)&lt;/th>
&lt;th>Kerberos&lt;/th>
&lt;th>OpenID Connect&lt;/th>
&lt;th>SCIM (System for Cross-domain Identity Management)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OSI 7계층 위치&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;td>응용 계층 (7계층)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TCP/IP 4계층 위치&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;td>응용 계층&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 포트&lt;/td>
&lt;td>TCP 389 (LDAPS: 636)&lt;/td>
&lt;td>HTTP 기반&lt;/td>
&lt;td>TCP 88&lt;/td>
&lt;td>HTTPS 기반&lt;/td>
&lt;td>HTTPS 기반&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 역할&lt;/td>
&lt;td>디렉터리 서비스 접근 및 관리&lt;/td>
&lt;td>기업 간 SSO 인증&lt;/td>
&lt;td>네트워크 인증&lt;/td>
&lt;td>OAuth 2.0 기반 인증 및 인가&lt;/td>
&lt;td>사용자 신원 정보 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>핵심 기능&lt;/td>
&lt;td>- 디렉터리 검색&lt;br>- 사용자/그룹 관리&lt;br>- 속성 조회/수정&lt;br>- 조직 구조 관리&lt;/td>
&lt;td>- SSO 제공&lt;br>- 인증 정보 교환&lt;br>- 권한 위임&lt;br>- 페더레이션&lt;/td>
&lt;td>- 티켓 기반 인증&lt;br>- 상호 인증&lt;br>- 세션 관리&lt;br>- 키 분배&lt;/td>
&lt;td>- 인증&lt;br>- 사용자 정보 제공&lt;br>- 토큰 관리&lt;br>OAuth 2.0 확장&lt;/td>
&lt;td>- 신원 정보 동기화&lt;br>- 프로비저닝&lt;br>- 사용자 관리&lt;br>API 표준화&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동작 방식&lt;/td>
&lt;td>- 클라이언트-서버 모델&lt;br>- 바인딩 및 검색&lt;br>- 트리 구조 탐색&lt;br>- 필터링&lt;/td>
&lt;td>- XML 기반 통신&lt;br>IdP-SP 모델&lt;br>- 어설션 교환&lt;br>- 메타데이터 공유&lt;/td>
&lt;td>- 티켓 발급/검증&lt;br>TGT/ST 사용&lt;br>- 대칭키 암호화&lt;br>- 시간 동기화&lt;/td>
&lt;td>- REST/JSON 기반&lt;br>OAuth 2.0 흐름&lt;br>JWT 사용&lt;br>- 스코프 기반&lt;/td>
&lt;td>- REST API 기반&lt;br>JSON 스키마&lt;br>CRUD 작업&lt;br>- 벌크 작업&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특성&lt;/td>
&lt;td>- 계층적 구조&lt;br>- 확장 가능한 스키마&lt;br>- 읽기 최적화&lt;br>- 표준화된 인터페이스&lt;/td>
&lt;td>- 플랫폼 독립적&lt;br>XML 기반&lt;br>- 높은 보안성&lt;br>- 기업용 표준&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 단일 로그인&lt;br>- 시간 기반&lt;br>- 상호 인증&lt;/td>
&lt;td>- 경량화&lt;br>- 모바일 친화적&lt;br>OAuth 호환&lt;br>- 사용 편의성&lt;/td>
&lt;td>- 표준화된 API&lt;br>- 확장 가능&lt;br>- 플랫폼 독립적&lt;br>RESTful&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장점&lt;/td>
&lt;td>- 널리 사용됨&lt;br>- 효율적인 검색&lt;br>- 표준화&lt;br>- 확장성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 기업 환경 적합&lt;br>- 풍부한 생태계&lt;br>- 상호운용성&lt;/td>
&lt;td>- 강력한 보안&lt;br>- 중앙화된 인증&lt;br>- 검증된 방식&lt;br>- 효율적 관리&lt;/td>
&lt;td>- 구현 용이&lt;br>- 모던 웹 적합&lt;br>- 유연성&lt;br>JSON 기반&lt;/td>
&lt;td>- 표준화된 관리&lt;br>- 자동화 용이&lt;br>- 확장성&lt;br>- 통합 용이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>단점&lt;/td>
&lt;td>- 복잡한 설정&lt;br>- 보안 취약성&lt;br>- 쓰기 성능&lt;br>- 변경 관리 어려움&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 높은 오버헤드&lt;br>XML 복잡성&lt;br>- 설정 어려움&lt;/td>
&lt;td>- 복잡한 구현&lt;br>- 시간 동기화 필요&lt;br>- 확장 어려움&lt;br>- 초기 설정 복잡&lt;/td>
&lt;td>- 보안 고려 필요&lt;br>- 표준 준수 중요&lt;br>- 토큰 관리&lt;br>- 범위 제한&lt;/td>
&lt;td>- 구현 복잡성&lt;br>- 표준 해석 차이&lt;br>- 보안 고려 필요&lt;br>- 초기 도입 어려움&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>일반적 용도&lt;/td>
&lt;td>- 기업 디렉터리&lt;br>- 사용자 관리&lt;br>- 인증/인가&lt;br>- 조직 정보 관리&lt;/td>
&lt;td>- 기업 SSO&lt;br>- 클라우드 서비스&lt;br>B2B 통합&lt;br>- 페더레이션&lt;/td>
&lt;td>- 윈도우 도메인&lt;br>- 기업 네트워크&lt;br>- 내부 시스템&lt;br>- 보안 환경&lt;/td>
&lt;td>- 소비자 서비스&lt;br>- 모바일 앱&lt;br>- 웹 서비스&lt;br>API 보안&lt;/td>
&lt;td>- ID 관리 자동화&lt;br>- 클라우드 통합&lt;br>- 사용자 동기화&lt;br>HR 시스템&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이러한 프로토콜들은 각각의 용도에 따라 다음과 같이 활용된다:&lt;/p>
&lt;ol>
&lt;li>LDAP: 기업 내부의 디렉터리 서비스와 사용자 관리에 주로 사용된다.&lt;/li>
&lt;li>SAML: 기업 환경에서의 SSO와 페더레이션에 적합하다.&lt;/li>
&lt;li>Kerberos: 네트워크 수준의 강력한 인증이 필요한 환경에서 사용된다.&lt;/li>
&lt;li>OpenID Connect: 현대적인 웹/모바일 서비스의 인증에 적합하다.&lt;/li>
&lt;li>SCIM: 여러 시스템 간의 신원 정보 동기화에 사용된다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers - 6. Presentation Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-6-presentation-layer/</link><pubDate>Wed, 25 Sep 2024 07:17:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-6-presentation-layer/</guid><description>
&lt;h2>Presentation Layer(프레젠테이션 계층)&lt;/h2>&lt;p>프레젠테이션 계층은 OSI 모델의 6번째 계층으로, 데이터의 표현 방식을 담당한다.&lt;br>
이 계층은 응용 계층과 세션 계층 사이에 위치하며, 데이터의 형식과 구조를 결정한다.&lt;/p>
&lt;p>프레젠테이션 계층은 네트워크 통신에서 데이터의 표현과 보안을 담당하는 중요한 계층으로, 다양한 시스템 간의 원활한 데이터 교환을 가능하게 한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi_model_presentation_layer_6.png"
alt="Presentation Layer"
title="Presentation Layer"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ol>
&lt;li>데이터 변환: 송신 측과 수신 측 사이에서 데이터 형식을 변환한다.&lt;/li>
&lt;li>인코딩과 디코딩: 데이터를 다양한 형식으로 인코딩하고 디코딩한다.&lt;/li>
&lt;li>암호화와 복호화: 데이터의 보안을 위해 암호화 및 복호화를 수행한다.&lt;/li>
&lt;li>데이터 압축: 효율적인 전송을 위해 데이터를 압축하고 해제한다.&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>데이터의 의미와 구문을 보존하면서 형식을 변환한다.&lt;/li>
&lt;li>응용 계층의 부담을 덜어주는 역할을 한다.&lt;/li>
&lt;li>다양한 데이터 형식을 지원한다 (예: JPEG, MPEG, ASCII, EBCDIC).&lt;/li>
&lt;/ul>
&lt;h4>프레젠테이션 계층의 중요한 표준들&lt;/h4>&lt;ol>
&lt;li>
&lt;p>문자 인코딩:&lt;/p>
&lt;ul>
&lt;li>ASCII: 기본 영문자와 특수문자&lt;/li>
&lt;li>Unicode: 전 세계의 문자 지원&lt;/li>
&lt;li>UTF-8: 가변 길이 인코딩&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>멀티미디어 형식:&lt;/p>
&lt;ul>
&lt;li>이미지: JPEG, PNG, GIF&lt;/li>
&lt;li>비디오: MPEG, H&lt;/li>
&lt;li>오디오: MP3, WAV&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>암호화 프로토콜:&lt;/p>
&lt;ul>
&lt;li>SSL/TLS: 보안 통신&lt;/li>
&lt;li>DES, AES: 데이터 암호화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>데이터 단위&lt;/h3>&lt;p>프레젠테이션 계층의 데이터 단위는 일반적으로 &amp;ldquo;데이터&amp;quot;라고 불린다.&lt;/p>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>응용 계층에서 받은 데이터를 표준화된 형식으로 변환한다.&lt;/li>
&lt;li>필요한 경우 데이터를 압축하거나 암호화한다.&lt;/li>
&lt;li>변환된 데이터를 세션 계층으로 전달한다.&lt;/li>
&lt;li>수신 측에서는 역순으로 과정을 수행하여 원래의 데이터 형식으로 복원한다.&lt;/li>
&lt;/ol>
&lt;h3>주요 프로토콜&lt;/h3>&lt;p>JPEG, MPEG, SSL, TLS, ASCII, EBCDIC&lt;/p>
&lt;h3>주의 사항&lt;/h3>&lt;ul>
&lt;li>데이터 변환 과정에서 정보의 손실이 없도록 주의해야 한다.&lt;/li>
&lt;li>암호화 알고리즘의 선택과 관리에 신중해야 한다.&lt;/li>
&lt;li>다양한 시스템 간의 호환성을 고려해야 한다.&lt;/li>
&lt;/ul>
&lt;h3>중요성&lt;/h3>&lt;ol>
&lt;li>시스템 간 호환성: 서로 다른 데이터 표현 방식을 사용하는 시스템 간의 통신을 가능하게 한다.&lt;/li>
&lt;li>데이터 보안: 암호화를 통해 데이터의 기밀성을 보장한다.&lt;/li>
&lt;li>효율적인 데이터 전송: 데이터 압축을 통해 네트워크 리소스를 절약한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>OSI 7 Layers - 7. Application Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-7-application-layer/</link><pubDate>Wed, 25 Sep 2024 07:16:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/osi-7-layers-7-application-layer/</guid><description>
&lt;h2>Application Layer(애플리케이션 계층)&lt;/h2>&lt;p>애플리케이션 계층은 OSI 모델의 최상위 계층으로, 사용자와 직접 상호작용하는 소프트웨어를 지원하는 계층이다.&lt;br>
이 계층은 사용자가 네트워크 자원에 접근할 수 있도록 인터페이스를 제공한다.&lt;/p>
&lt;p>애플리케이션 계층은 네트워크 통신의 최종 목적지로, 사용자의 요구사항을 네트워크 서비스로 연결하는 중요한 역할을 수행한다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/OSI%207%20Layers/osi_model_application_layer_7.png"
alt="Application Layer"
title="Application Layer"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/ddos/glossary/open-systems-interconnection-model-osi/&lt;/a> _&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ol>
&lt;li>사용자와 네트워크 간의 인터페이스 제공&lt;/li>
&lt;li>다양한 네트워크 서비스 제공 (이메일, 파일 전송, 웹 브라우징 등)&lt;/li>
&lt;li>사용자 데이터의 송수신 관리&lt;/li>
&lt;li>네트워크 자원에 대한 접근 제어&lt;/li>
&lt;/ol>
&lt;h3>특징&lt;/h3>&lt;ol>
&lt;li>사용자 지향적: 사용자가 직접 상호작용하는 유일한 OSI 계층.&lt;/li>
&lt;li>다양한 프로토콜: 각 애플리케이션의 요구사항에 맞는 다양한 프로토콜을 사용한다.&lt;/li>
&lt;li>데이터 형식 관리: 애플리케이션 간에 교환되는 데이터의 형식을 관리한다.&lt;/li>
&lt;li>보안 및 인증: 사용자 인증 및 데이터 암호화와 같은 보안 메커니즘을 구현한다.&lt;/li>
&lt;li>하위 계층의 서비스를 활용하여 작동&lt;/li>
&lt;/ol>
&lt;h3>데이터 단위&lt;/h3>&lt;p>애플리케이션 계층의 데이터 단위는 &amp;ldquo;메시지&amp;rdquo; 또는 &amp;ldquo;데이터&amp;quot;라고 불린다.&lt;/p>
&lt;h3>주요 프로토콜&lt;/h3>&lt;p>HTTP, SMTP, FTP, DNS, SSH, Telnet 등&lt;/p>
&lt;h3>작동 방식&lt;/h3>&lt;ol>
&lt;li>사용자로부터 요청을 받음&lt;/li>
&lt;li>요청을 적절한 형식의 메시지로 변환&lt;/li>
&lt;li>하위 계층(표현 계층)으로 메시지 전달&lt;/li>
&lt;li>수신된 데이터를 사용자가 이해할 수 있는 형태로 변환하여 제공&lt;/li>
&lt;/ol>
&lt;h3>주의 사항&lt;/h3>&lt;ol>
&lt;li>보안: 애플리케이션 계층은 사용자와 직접 상호작용하므로 보안에 특히 주의해야 한다.&lt;/li>
&lt;li>성능: 대량의 데이터 처리 시 효율적인 관리가 필요하다.&lt;/li>
&lt;li>호환성: 다양한 애플리케이션과 프로토콜 간의 호환성을 고려해야 한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Websocket vs WebRTC</title><link>https://buenhyden.github.io/til/2024/10/websocket-vs-webrtc/</link><pubDate>Tue, 08 Oct 2024 05:53:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/10/websocket-vs-webrtc/</guid><description>
&lt;h2>Websocket Vs WebRTC&lt;/h2>&lt;p>WebSocket과 WebRTC는 실시간 웹 통신을 위한 중요한 기술이다.&lt;/p>
&lt;p>WebSocket:&lt;/p>
&lt;ul>
&lt;li>클라이언트와 서버 간의 양방향, 전이중 통신을 제공하는 프로토콜이다.&lt;/li>
&lt;li>TCP 연결을 기반으로 작동하며, 지속적인 연결을 유지한다.&lt;/li>
&lt;li>주로 텍스트 및 바이너리 데이터 전송에 사용된다.&lt;/li>
&lt;li>서버-클라이언트 모델을 따른다.&lt;/li>
&lt;/ul>
&lt;p>WebRTC:&lt;/p>
&lt;ul>
&lt;li>브라우저 간 직접적인 피어-투-피어(P2P) 통신을 가능하게 하는 기술이다.&lt;/li>
&lt;li>오디오, 비디오, 데이터의 실시간 통신을 지원한다.&lt;/li>
&lt;li>UDP를 주로 사용하여 낮은 지연 시간을 제공한다.&lt;/li>
&lt;li>브라우저에 내장된 API를 통해 구현된다.&lt;/li>
&lt;/ul>
&lt;p>WebSocket과 WebRTC의 비교 분석:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>WebSocket&lt;/th>
&lt;th>WebRTC&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>통신 모델&lt;/td>
&lt;td>클라이언트-서버&lt;/td>
&lt;td>피어-투-피어&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜&lt;/td>
&lt;td>TCP 기반&lt;/td>
&lt;td>주로 UDP 사용 (TCP도 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>실시간 데이터 교환, 채팅&lt;/td>
&lt;td>음성/영상 통화, 파일 공유&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지연 시간&lt;/td>
&lt;td>상대적으로 높음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 유형&lt;/td>
&lt;td>텍스트, 바이너리&lt;/td>
&lt;td>오디오, 비디오, 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>상대적으로 간단&lt;/td>
&lt;td>복잡 (NAT 통과 등 고려)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>기본적인 보안 기능&lt;/td>
&lt;td>내장된 암호화 기능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>서버 기반으로 확장 용이&lt;/td>
&lt;td>P2P로 인한 확장 제한&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브라우저 지원&lt;/td>
&lt;td>광범위한 지원&lt;/td>
&lt;td>대부분의 최신 브라우저 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사용 사례&lt;/td>
&lt;td>채팅, 실시간 업데이트&lt;/td>
&lt;td>화상 통화, 화면 공유&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Webhook vs Server-Sent Events</title><link>https://buenhyden.github.io/til/2024/12/webhook-vs-server-sent-events/</link><pubDate>Fri, 20 Dec 2024 06:04:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/webhook-vs-server-sent-events/</guid><description>
&lt;h2>Webhook Vs Server-Sent Events&lt;/h2>&lt;p>Webhook과 Server-Sent Events(SSE)는 실시간 데이터 전송을 위한 웹 기술이다.&lt;/p>
&lt;p>Webhook은 특정 이벤트가 발생했을 때 HTTP POST 요청을 통해 다른 애플리케이션에 실시간으로 데이터를 전송하는 방식으로, 애플리케이션 간 실시간 통신을 가능하게 하며, 이벤트 기반 업데이트를 제공한다.&lt;br>
Server-Sent Events (SSE)은 서버에서 클라이언트로 단방향 실시간 데이터 스트림을 제공하는 기술로, 서버가 클라이언트에게 지속적으로 업데이트를 푸시할 수 있게 한다.&lt;/p>
&lt;p>두 기술 모두 실시간 데이터 전송을 위해 사용되지만, 각각의 특성에 따라 적절한 상황에서 선택하여 사용된다.&lt;/p>
&lt;h3>Webhook과 Server-Sent Events(SSE)&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Webhook&lt;/th>
&lt;th>Server-Sent Events (SSE)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>통신 방향&lt;/td>
&lt;td>서버에서 클라이언트로 단방향&lt;/td>
&lt;td>서버에서 클라이언트로 단방향&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜&lt;/td>
&lt;td>HTTP/HTTPS&lt;/td>
&lt;td>HTTP/HTTPS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 유지&lt;/td>
&lt;td>연결 유지하지 않음 (이벤트 발생 시 새로운 연결)&lt;/td>
&lt;td>지속적인 연결 유지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>상대적으로 간단&lt;/td>
&lt;td>매우 간단&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간성&lt;/td>
&lt;td>거의 실시간&lt;/td>
&lt;td>실시간&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>클라이언트 요구사항&lt;/td>
&lt;td>공개적으로 접근 가능한 엔드포인트 필요&lt;/td>
&lt;td>특별한 요구사항 없음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브라우저 지원&lt;/td>
&lt;td>모든 브라우저 지원&lt;/td>
&lt;td>IE를 제외한 대부분의 현대 브라우저 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 형식&lt;/td>
&lt;td>주로 JSON&lt;/td>
&lt;td>텍스트 기반 (주로 JSON)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>오류 처리&lt;/td>
&lt;td>재시도 메커니즘 필요&lt;/td>
&lt;td>자동 재연결 지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>높음 (여러 서버로 부하 분산 가능)&lt;/td>
&lt;td>제한적 (브라우저당 연결 수 제한)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 사용 사례&lt;/td>
&lt;td>서버 간 통신, 이벤트 기반 업데이트&lt;/td>
&lt;td>실시간 업데이트, 알림, 뉴스 피드&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>SSH (Secure Shell)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssh/</link><pubDate>Mon, 23 Dec 2024 12:35:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssh/</guid><description>
&lt;h2>SSH (Secure Shell)&lt;/h2>&lt;p>SSH는 네트워크 상의 다른 컴퓨터에 안전하게 접속하기 위한 암호화 네트워크 프로토콜.&lt;br>
1995년 핀란드 헬싱키 공과대학의 타투 일로넨(Tatu Ylönen)이 개발했으며, 당시 빈번하게 발생하던 비밀번호 스니핑 공격에 대응하기 위해 만들어졌다.&lt;br>
기존의 텔넷(Telnet)이나 rsh(Remote Shell)와 같은 비보안 프로토콜을 대체하기 위해 설계되었다.&lt;/p>
&lt;h3>SSH의 주요 특징과 장점&lt;/h3>&lt;p>SSH는 다음과 같은 중요한 특징을 가지고 있다:&lt;/p>
&lt;ol>
&lt;li>강력한 암호화: 통신 내용을 암호화하여 데이터의 기밀성을 보장한다. 현재 SSH-2 버전에서는 AES, 3DES 등의 강력한 암호화 알고리즘을 사용한다.&lt;/li>
&lt;li>인증 메커니즘: 서버와 클라이언트 간의 상호 인증을 제공한다. 비밀번호 기반 인증뿐만 아니라, 공개키 기반의 인증도 지원하여 보다 안전한 인증이 가능하다.&lt;/li>
&lt;li>데이터 무결성: 통신 과정에서 데이터가 변조되지 않았음을 보장한다. MAC(Message Authentication Code)을 사용하여 데이터의 무결성을 검증한다.&lt;/li>
&lt;li>포트 포워딩: 로컬 포트 포워딩과 리모트 포트 포워딩을 통해 다른 프로토콜의 트래픽도 SSH 터널을 통해 안전하게 전송할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>SSH의 동작 방식&lt;/h3>&lt;p>SSH의 동작 과정은 다음과 같은 단계로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>TCP 연결 수립&lt;br>
먼저 클라이언트와 서버 간에 TCP 연결이 수립된다.&lt;br>
기본적으로 22번 포트를 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프로토콜 버전 교환&lt;br>
클라이언트와 서버가 지원하는 SSH 프로토콜 버전을 교환한다.&lt;br>
현재는 대부분 SSH-2 버전을 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>키 교환&lt;br>
서버와 클라이언트는 세션 키를 생성하기 위한 키 교환 과정을 수행한다.&lt;br>
Diffie-Hellman 키 교환 알고리즘이 주로 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>인증&lt;br>
사용자 인증이 이루어진다.&lt;br>
다음과 같은 인증 방식이 지원된다:&lt;/p>
&lt;ul>
&lt;li>패스워드 인증&lt;/li>
&lt;li>공개키 인증&lt;/li>
&lt;li>키보드 인터랙티브 인증&lt;/li>
&lt;li>GSSAPI 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>세션 설정&lt;br>
인증이 완료되면 암호화된 채널이 설정되고, 실제 데이터 통신이 시작된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>SSH의 주요 용도와 활용&lt;/h3>&lt;p>SSH는 다양한 목적으로 활용된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>원격 시스템 관리:&lt;/p>
&lt;ul>
&lt;li>서버 원격 접속 및 관리&lt;/li>
&lt;li>시스템 설정 변경&lt;/li>
&lt;li>소프트웨어 설치 및 업데이트&lt;/li>
&lt;li>로그 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>파일 전송:&lt;/p>
&lt;ul>
&lt;li>SFTP(SSH File Transfer Protocol)를 통한 안전한 파일 전송&lt;/li>
&lt;li>SCP(Secure Copy)를 이용한 파일 복사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>터널링과 포트 포워딩:&lt;/p>
&lt;ul>
&lt;li>다른 프로토콜의 암호화된 통신&lt;/li>
&lt;li>방화벽 우회&lt;/li>
&lt;li>VPN 대체&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>자동화된 작업:&lt;/p>
&lt;ul>
&lt;li>스크립트를 통한 자동화된 시스템 관리&lt;/li>
&lt;li>배치 작업 실행&lt;/li>
&lt;li>지속적 통합/배포(CI/CD) 파이프라인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>SSH 보안 강화 방안&lt;/h3>&lt;p>SSH를 더욱 안전하게 사용하기 위한 주요 보안 설정:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>인증 관련:&lt;/p>
&lt;ul>
&lt;li>공개키 인증 사용 권장&lt;/li>
&lt;li>루트 로그인 비활성화&lt;/li>
&lt;li>강력한 비밀번호 정책 적용&lt;/li>
&lt;li>허용된 사용자만 접속 가능하도록 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>설정 관련:&lt;/p>
&lt;ul>
&lt;li>기본 포트 변경&lt;/li>
&lt;li>프로토콜 버전 2만 허용&lt;/li>
&lt;li>유휴 세션 타임아웃 설정&lt;/li>
&lt;li>로그인 시도 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>암호화 관련:&lt;/p>
&lt;ul>
&lt;li>강력한 암호화 알고리즘 사용&lt;/li>
&lt;li>취약한 암호화 알고리즘 비활성화&lt;/li>
&lt;li>정기적인 키 교체&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>모니터링:&lt;/p>
&lt;ul>
&lt;li>로그 모니터링 강화&lt;/li>
&lt;li>비정상 접속 시도 감시&lt;/li>
&lt;li>정기적인 보안 감사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>최신 트렌드와 발전 방향&lt;/h3>&lt;p>SSH는 계속해서 발전하고 있으며, 다음과 같은 트렌드가 있다:&lt;/p>
&lt;ul>
&lt;li>양자 내성 암호화 알고리즘 도입 준비&lt;/li>
&lt;li>클라우드 환경에서의 SSH 관리 자동화&lt;/li>
&lt;li>제로 트러스트 아키텍처와의 통합&lt;/li>
&lt;li>생체 인증 등 새로운 인증 방식 도입&lt;/li>
&lt;li>컨테이너와 마이크로서비스 환경에서의 SSH 활용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>웹훅 (Webhook)</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/webhook/</link><pubDate>Fri, 20 Dec 2024 06:46:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/webhook/</guid><description>
&lt;h2>웹훅 (Webhook)&lt;/h2>&lt;p>웹훅은 웹 애플리케이션에서 특정 이벤트가 발생했을 때 다른 애플리케이션에 실시간으로 정보를 전달하는 방법이다.&lt;br>
쉽게 말해, 어떤 일이 일어났을 때 자동으로 알림을 보내는 시스템이라고 생각하면 된다.&lt;/p>
&lt;h3>웹훅의 작동 원리&lt;/h3>&lt;ol>
&lt;li>애플리케이션 A가 특정 URL(콜백 URL)을 애플리케이션 B에 등록한다.&lt;/li>
&lt;li>애플리케이션 B에서 중요한 이벤트가 발생한다.&lt;/li>
&lt;li>애플리케이션 B는 등록된 URL로 HTTP POST 요청을 보낸다.&lt;/li>
&lt;li>애플리케이션 A는 이 요청을 받아 필요한 작업을 수행한다.&lt;/li>
&lt;/ol>
&lt;h3>웹훅의 장점&lt;/h3>&lt;ol>
&lt;li>실시간 업데이트: 이벤트 발생 즉시 알림을 받을 수 있다.&lt;/li>
&lt;li>효율성: 필요할 때만 통신하므로 리소스 사용이 적다.&lt;/li>
&lt;li>자동화: 이벤트에 따른 작업을 자동으로 처리할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>웹훅의 단점&lt;/h3>&lt;ol>
&lt;li>보안 문제: 콜백 URL이 노출될 경우 악의적인 요청을 받을 수 있다.&lt;/li>
&lt;li>신뢰성: 네트워크 문제로 알림이 손실될 수 있다.&lt;/li>
&lt;li>단방향 통신: 서버에서 클라이언트로의 통신만 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>웹훅의 사용 사례&lt;/h3>&lt;ol>
&lt;li>결제 시스템: 결제 완료 시 즉시 알림&lt;/li>
&lt;li>소셜 미디어: 새 게시물 작성 시 연동 서비스에 알림&lt;/li>
&lt;li>버전 관리 시스템: 코드 변경 시 자동 빌드 시작&lt;/li>
&lt;li>IoT: 센서 데이터가 특정 값을 초과할 때 알림&lt;/li>
&lt;/ol>
&lt;h3>웹훅 구현 시 주의사항&lt;/h3>&lt;ol>
&lt;li>보안: 요청의 출처를 반드시 확인해야 한다.&lt;/li>
&lt;li>에러 처리: 네트워크 문제 등으로 인한 실패에 대비해야 한다.&lt;/li>
&lt;li>재시도 메커니즘: 전송 실패 시 재시도 로직을 구현해야 한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>RESTful API vs GraphQL API vs Webhook vs Server-sent Events vs Websocket vs WebRTC</title><link>https://buenhyden.github.io/til/2024/12/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc/</link><pubDate>Fri, 20 Dec 2024 06:08:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc/</guid><description>
&lt;h2>RESTful API Vs GraphQL API Vs Webhook Vs Server-sent Events Vs Websocket Vs WebRTC&lt;/h2>&lt;p>API의 여러 유형인 RESTful API, GraphQL API, Webhook, Server-sent Events, WebSocket, WebRTC에 대해 정리하고 비교 분석해보자.&lt;/p>
&lt;p>RESTful API는 HTTP 프로토콜을 기반으로 하는 웹 서비스 아키텍처이다. 리소스를 URI로 표현하고, HTTP 메서드(GET, POST, PUT, DELETE 등)를 사용하여 리소스를 조작한다. 클라이언트-서버 모델을 따르며, 상태를 저장하지 않는 특징이 있다.&lt;/p>
&lt;p>GraphQL은 페이스북에서 개발한 쿼리 언어 및 런타임으로, 클라이언트가 필요한 데이터를 정확하게 요청할 수 있게 해준다. 단일 엔드포인트를 사용하며, 클라이언트가 쿼리를 정의하여 필요한 데이터만 받을 수 있다.&lt;/p>
&lt;p>Webhook은 특정 이벤트가 발생했을 때 실시간으로 정보를 전달하는 방식이다. 서버에서 클라이언트로 HTTP POST 요청을 보내는 방식으로 작동하며, 실시간 업데이트나 알림 시스템에 주로 사용된다.&lt;/p>
&lt;p>SSE는 서버에서 클라이언트로 단방향 실시간 데이터 스트림을 제공하는 기술입니다. HTTP 연결을 통해 서버가 클라이언트에게 업데이트를 푸시할 수 있으며, 실시간 알림이나 업데이트에 적합합니다.&lt;/p>
&lt;p>WebSocket은 클라이언트와 서버 간의 양방향, 전이중 통신을 제공하는 프로토콜이다. 단일 TCP 연결을 통해 실시간 데이터 교환이 가능하며, 채팅 애플리케이션이나 실시간 게임 등에 사용된다.&lt;/p>
&lt;p>WebRTC(Web Real-Time Communication)는 브라우저 간 직접적인 피어-투-피어 통신을 가능하게 하는 기술이다. 비디오, 음성, 데이터의 실시간 통신을 지원하며, 화상 통화나 파일 공유 등에 사용된다.&lt;/p>
&lt;h3>비교 분석 표&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>RESTful API&lt;/th>
&lt;th>GraphQL API&lt;/th>
&lt;th>Webhook&lt;/th>
&lt;th>Server-sent Events&lt;/th>
&lt;th>WebSocket&lt;/th>
&lt;th>WebRTC&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>통신 방향&lt;/td>
&lt;td>양방향&lt;/td>
&lt;td>양방향&lt;/td>
&lt;td>단방향(서버→클라이언트)&lt;/td>
&lt;td>단방향(서버→클라이언트)&lt;/td>
&lt;td>양방향&lt;/td>
&lt;td>양방향&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간성&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프로토콜&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>HTTP&lt;/td>
&lt;td>WebSocket&lt;/td>
&lt;td>UDP/TCP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 형식&lt;/td>
&lt;td>JSON, XML 등&lt;/td>
&lt;td>JSON&lt;/td>
&lt;td>JSON&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>바이너리, 텍스트&lt;/td>
&lt;td>바이너리, 텍스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 유지&lt;/td>
&lt;td>연결 유지 안 함&lt;/td>
&lt;td>연결 유지 안 함&lt;/td>
&lt;td>연결 유지 안 함&lt;/td>
&lt;td>단방향 연결 유지&lt;/td>
&lt;td>양방향 연결 유지&lt;/td>
&lt;td>P2P 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주요 용도&lt;/td>
&lt;td>일반적인 API&lt;/td>
&lt;td>유연한 데이터 요청&lt;/td>
&lt;td>이벤트 기반 알림&lt;/td>
&lt;td>실시간 업데이트&lt;/td>
&lt;td>실시간 양방향 통신&lt;/td>
&lt;td>미디어 스트리밍, P2P 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>확장성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>매우 높음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>낮음&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>높음&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>이 표를 통해 각 기술의 특성과 용도를 비교할 수 있다.&lt;br>
선택은 애플리케이션의 요구사항, 실시간성, 양방향 통신 필요 여부, 구현 복잡성 등을 고려하여 결정해야 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Streaming vs Polling</title><link>https://buenhyden.github.io/til/2024/12/streaming-vs-polling/</link><pubDate>Tue, 17 Dec 2024 08:44:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/12/streaming-vs-polling/</guid><description>
&lt;h2>Streaming Vs Polling&lt;/h2>&lt;p>Streaming과 polling은 실시간 데이터 전송을 위해 사용되는 두 가지 주요 기술입니다. 각각의 특징과 차이점을 자세히 살펴보겠습니다.&lt;/p>
&lt;h2>Streaming&lt;/h2>&lt;p>Streaming은 데이터를 연속적으로 전송하는 방식입니다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>연속적인 데이터 흐름: 서버에서 클라이언트로 데이터를 지속적으로 전송합니다.&lt;/li>
&lt;li>실시간성: 데이터가 생성되는 즉시 전송되어 높은 실시간성을 제공합니다.&lt;/li>
&lt;li>효율적인 대역폭 사용: 필요한 데이터만 전송하므로 대역폭을 효율적으로 사용합니다.&lt;/li>
&lt;li>지속적인 연결: 클라이언트와 서버 간 연결이 유지됩니다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;ul>
&lt;li>비디오/오디오 스트리밍&lt;/li>
&lt;li>실시간 주식 시세 정보&lt;/li>
&lt;li>라이브 이벤트 중계&lt;/li>
&lt;/ul>
&lt;h2>Polling&lt;/h2>&lt;p>Polling은 클라이언트가 주기적으로 서버에 데이터를 요청하는 방식입니다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>주기적 요청: 클라이언트가 일정 간격으로 서버에 데이터를 요청합니다.&lt;/li>
&lt;li>간단한 구현: HTTP 요청을 사용하여 쉽게 구현할 수 있습니다.&lt;/li>
&lt;li>서버 부하: 불필요한 요청으로 인해 서버에 부담을 줄 수 있습니다.&lt;/li>
&lt;li>실시간성 제한: 폴링 주기에 따라 실시간성이 제한됩니다.&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;ul>
&lt;li>이메일 확인&lt;/li>
&lt;li>소셜 미디어 피드 업데이트&lt;/li>
&lt;li>간단한 채팅 애플리케이션&lt;/li>
&lt;/ul>
&lt;h2>Streaming Vs Polling 비교 분석표&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>Streaming&lt;/th>
&lt;th>Polling&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>데이터 전송 방식&lt;/td>
&lt;td>서버에서 클라이언트로 실시간 데이터 전송&lt;/td>
&lt;td>클라이언트가 주기적으로 서버에 요청&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 유지 여부&lt;/td>
&lt;td>지속적인 연결 유지&lt;/td>
&lt;td>연결 유지 안 함 (요청마다 새 연결)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>데이터 지연 시간&lt;/td>
&lt;td>낮음 (실시간 데이터 전송)&lt;/td>
&lt;td>높음 (요청 주기에 따라 다름)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 부하&lt;/td>
&lt;td>높음 (지속적인 연결 유지로 인한 부하)&lt;/td>
&lt;td>낮음 (요청 주기에 따라 부하 분산 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구현 복잡성&lt;/td>
&lt;td>복잡 (지속적인 연결 관리 필요)&lt;/td>
&lt;td>간단 (HTTP 요청/응답 기반)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>실시간성&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>낮음 (폴링 주기에 의존)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>대역폭 사용&lt;/td>
&lt;td>효율적 (필요한 데이터만 전송)&lt;/td>
&lt;td>비효율적 (불필요한 요청 발생 가능)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>클라이언트 구현&lt;/td>
&lt;td>복잡 (스트림 처리 로직 필요)&lt;/td>
&lt;td>간단 (주기적 HTTP 요청)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>방화벽 통과&lt;/td>
&lt;td>어려울 수 있음&lt;/td>
&lt;td>쉬움 (표준 HTTP 사용)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>적합한 사용 사례&lt;/td>
&lt;td>라이브 비디오/오디오 스트리밍, 실시간 분석, 금융 거래 플랫폼&lt;/td>
&lt;td>이메일 확인, 소셜 미디어 피드 업데이트, 시스템 상태 모니터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>RDMA</title><link>https://buenhyden.github.io/posts/networking-and-communications/rdma/</link><pubDate>Tue, 10 Dec 2024 01:36:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/rdma/</guid><description>
&lt;h2>RDMA (Remote Direct Memory Access)&lt;/h2>&lt;p>네트워크 상의 한 컴퓨터에서 다른 컴퓨터의 메모리에 직접 접근할 수 있게 해주는 기술로, CPU의 개입 없이 데이터를 전송할 수 있는 고성능 네트워크 기술&lt;/p>
&lt;p>주요 특징:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>낮은 지연 시간(Low Latency)&lt;/strong>:
&lt;ul>
&lt;li>CPU 개입 없이 메모리 간 직접 데이터 전송이 가능하므로, 전송 지연 시간이 매우 짧다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>높은 대역폭(High Bandwidth)&lt;/strong>:
&lt;ul>
&lt;li>데이터 복사 과정이 없기 때문에 빠르고 효율적으로 대량의 데이터를 처리할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>낮은 CPU 사용률(Low CPU Utilization)&lt;/strong>:
&lt;ul>
&lt;li>데이터 전송 작업이 네트워크 어댑터(NIC)에서 이루어지기 때문에 CPU는 다른 작업에 집중할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>제로-카피(Zero-Copy)&lt;/strong>:
&lt;ul>
&lt;li>데이터가 중간 버퍼링 없이 메모리에서 바로 전송되므로, 데이터 복사로 인한 오버헤드가 없다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>효율성(Efficiency)&lt;/strong>:
&lt;ul>
&lt;li>운영 체제와 CPU의 개입을 최소화하여 시스템 전체의 효율성을 높인다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>성능 향상&lt;/strong>: 낮은 지연 시간과 높은 대역폭으로 데이터 전송 성능을 크게 향상시킵니다.&lt;/li>
&lt;li>&lt;strong>CPU 부하 감소&lt;/strong>: CPU 개입이 최소화되어 다른 작업에 더 많은 리소스를 할당할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 클러스터 및 분산 시스템에서 서버와 스토리지 장치 간 확장성이 뛰어납니다.&lt;/li>
&lt;li>&lt;strong>효율성&lt;/strong>: 운영 체제 및 중간 단계 없이 데이터를 직접 처리하여 효율성을 극대화합니다.&lt;/li>
&lt;/ol>
&lt;p>RDMA의 한계 및 고려사항:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>네트워크 구성 복잡성&lt;/strong>: QoS(Quality of Service) 설정 및 트래픽 관리가 필요하다.&lt;/li>
&lt;li>&lt;strong>보안 문제&lt;/strong>: RDMA 트래픽에 대한 적절한 보안 조치가 필요하다.&lt;/li>
&lt;li>&lt;strong>호환성 문제&lt;/strong>: 다양한 네트워크 장치 및 프로토콜 간 호환성을 고려해야 한다.&lt;/li>
&lt;/ol>
&lt;p>구현 방식:&lt;/p>
&lt;ol>
&lt;li>InfiniBand: 고성능 컴퓨팅 환경에서 널리 사용되는 RDMA 프로토콜.&lt;/li>
&lt;li>RoCE(RDMA over Converged Ethernet): 이더넷 네트워크에서 RDMA를 구현한다.&lt;/li>
&lt;li>iWARP(Internet Wide Area RDMA Protocol): TCP/IP를 전송 계층으로 사용하여 이더넷에서 RDMA를 구현한다.&lt;/li>
&lt;/ol>
&lt;p>효과적으로 사용하기 위한 고려사항:&lt;/p>
&lt;ol>
&lt;li>메모리 관리의 복잡성&lt;/li>
&lt;li>보안 고려사항&lt;/li>
&lt;li>하드웨어 지원 필요성&lt;/li>
&lt;li>프로그래밍 모델의 복잡성&lt;/li>
&lt;/ol>
&lt;p>주요 작동 방식:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>메모리 등록&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">RDMAMemoryRegion&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">register_memory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메모리 페이지를 고정(pin)하여 페이징되지 않도록 함&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pinned_pages&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pin_memory_pages&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 메모리 영역의 가상 주소를 물리 주소로 변환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">physical_addresses&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">virtual_to_physical&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pinned_pages&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># RDMA 장치에 메모리 영역 등록&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rkey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">rdma_device&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">physical_addresses&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rkey&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>RDMA 연결 설정&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">RDMAConnection&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">establish_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">remote_node&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># QP(Queue Pair) 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queue_pair&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_queue_pair&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 원격 노드와 QP 정보 교환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote_qp_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">exchange_qp_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">remote_node&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 연결 상태로 전환&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">queue_pair&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">transition_to_rts&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">remote_qp_info&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;p>주요 동작모드:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Write 작업&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rdma_write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue_pair&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">local_buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">remote_address&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rkey&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 원격 메모리에 직접 쓰기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">wr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WorkRequest&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">opcode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">RDMA_WRITE&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">local_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">local_buffer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">remote_address&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">rkey&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">local_buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">queue_pair&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Read 작업&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rdma_read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue_pair&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">local_buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">remote_address&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rkey&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 원격 메모리에서 직접 읽기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">wr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WorkRequest&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">opcode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">RDMA_READ&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">local_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">local_buffer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">remote_address&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">rkey&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">local_buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">queue_pair&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Atomic 작업&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rdma_atomic_compare_and_swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue_pair&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">remote_address&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">compare_value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">swap_value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rkey&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 원자적 연산 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">wr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">WorkRequest&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">opcode&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">RDMA_ATOMIC_CMP_AND_SWP&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote_addr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">remote_address&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">compare_value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">compare_value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">swap_value&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">swap_value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">rkey&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">queue_pair&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">post_send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">wr&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>전통적인 네트워크 통신과 RDMA의 차이&lt;/h3>&lt;p>전통적인 네트워크 통신:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 전통적인 네트워크 통신의 의사 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">traditional_network_transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">destination&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. 유저 공간에서 커널 공간으로 데이터 복사&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">kernel_buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">copy_to_kernel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 2. 커널에서 네트워크 스택 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">create_network_packet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">kernel_buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 3. 네트워크 카드로 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network_card&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packet&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 수신측에서도 비슷한 과정을 역순으로 수행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 많은 CPU 사이클과 컨텍스트 스위칭 발생&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>RDMA 통신:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># RDMA 통신의 의사 코드&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">rdma_transfer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">remote_memory_address&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 1. RDMA 네트워크 카드에 직접 전송 명령&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rdma_card&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write_direct&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">local_buffer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">remote_address&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">remote_memory_address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터가 CPU를 거치지 않고 직접 전송됨&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>RDMA의 응용 분야&lt;/h3>&lt;p>RDMA를 사용할 경우 이점이 생기는 상황:&lt;/p>
&lt;ul>
&lt;li>대용량 데이터 전송이 필요한 경우&lt;/li>
&lt;li>초저지연이 요구되는 애플리케이션&lt;/li>
&lt;li>CPU 리소스를 효율적으로 사용해야 하는 경우&lt;/li>
&lt;li>실시간 데이터 처리가 필요한 경우&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>고성능 컴퓨팅(HPC)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">HPCCluster&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">distribute_computation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data_chunks&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 각 노드에 데이터 분배&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">chunk&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">zip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compute_nodes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data_chunks&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rdma_connections&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write_direct&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">chunk&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memory_address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 결과 수집&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compute_nodes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rdma_connections&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read_direct&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">result_address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>데이터 센터 및 클라우드 컴퓨팅&lt;/p>
&lt;/li>
&lt;li>
&lt;p>스토리지 솔루션&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DistributedStorage&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">replicate_data&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">replica_nodes&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터를 여러 노드에 동시에 복제&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_operations&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">replica_nodes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">op&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">rdma_connections&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">async_write&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">node&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">storage_address&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_operations&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모든 복제 완료 대기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">wait_for_completion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">write_operations&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>금융 거래 시스템&lt;/p>
&lt;/li>
&lt;li>
&lt;p>실시간 데이터 처리가 필요한 애플리케이션&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Server sent Events</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/server-sent-events/</link><pubDate>Sat, 30 Nov 2024 06:18:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/server-sent-events/</guid><description>
&lt;h2>Server Sent Events (SSE)&lt;/h2>&lt;p>실시간 알림, 주식 시세, 실시간 점수 업데이트 등을 구현하기 위해서는 서버가 클라이언트에게 능동적으로 데이터를 보낼 수 있어야 한다.&lt;br>
이를 위한 기술 중 하나가 바로 SSE이다.&lt;/p>
&lt;p>SSE는 서버가 클라이언트로 단방향 실시간 이벤트 스트림을 전송할 수 있게 해주는 웹 기술이다.&lt;br>
WebSocket과 비교했을 때 더 단순하고 HTTP를 기반으로 하기 때문에 구현이 쉽다는 장점이 있다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단방향 통신&lt;/strong>: SSE는 서버에서 클라이언트로의 단방향 통신만을 지원한다.&lt;/li>
&lt;li>&lt;strong>HTTP 프로토콜 사용&lt;/strong>: SSE는 기존 HTTP 프로토콜을 사용하므로, 특별한 프로토콜이나 서버 설정이 필요하지 않다.&lt;/li>
&lt;li>&lt;strong>자동 재연결&lt;/strong>: 연결이 끊어졌을 때 브라우저가 자동으로 재연결을 시도한다. 개발자가 별도의 재연결 로직을 구현할 필요가 없다.&lt;/li>
&lt;li>&lt;strong>실시간 데이터 전송&lt;/strong>: 서버에서 발생하는 이벤트나 데이터 변경 사항을 클라이언트에게 실시간으로 전달할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>간단한 구현&lt;/strong>: WebSocket에 비해 구현이 더 간단하다.&lt;/li>
&lt;li>&lt;strong>브라우저 호환성&lt;/strong>: 대부분의 최신 브라우저에서 지원된다.&lt;/li>
&lt;li>&lt;strong>서버 부하 감소&lt;/strong>: HTTP 연결을 재사용하므로, WebSocket보다 서버 부하가 적을 수 있다.&lt;/li>
&lt;li>&lt;strong>방화벽 친화적&lt;/strong>: 기존 HTTP 프로토콜을 사용하므로 방화벽이나 프록시 서버와의 호환성이 좋다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단방향 통신&lt;/strong>: 양방향 통신이 필요한 경우에는 적합하지 않다.&lt;/li>
&lt;li>&lt;strong>연결 제한&lt;/strong>: 브라우저당 동시 SSE 연결 수에 제한이 있을 수 있다.&lt;/li>
&lt;li>&lt;strong>IE 지원 부족&lt;/strong>: Internet Explorer에서는 지원되지 않는다.&lt;/li>
&lt;/ol>
&lt;h3>동작 원리&lt;/h3>&lt;ol>
&lt;li>클라이언트가 서버에 SSE 연결 요청을 보낸다.&lt;/li>
&lt;li>서버는 클라이언트와 매핑되는 SSE 통신 객체(예: SseEmitter)를 생성한다.&lt;/li>
&lt;li>서버에서 이벤트가 발생하면 해당 객체를 통해 클라이언트로 데이터를 전송한다.&lt;/li>
&lt;/ol>
&lt;h3>활용사례&lt;/h3>&lt;ul>
&lt;li>실시간 알림 시스템&lt;/li>
&lt;li>주식 시세나 스포츠 점수 업데이트&lt;/li>
&lt;li>소셜 미디어 피드 업데이트&lt;/li>
&lt;li>로그 스트리밍&lt;/li>
&lt;li>진행 상황 모니터링&lt;/li>
&lt;/ul>
&lt;h3>고려사항&lt;/h3>&lt;ol>
&lt;li>
&lt;p>연결 관리:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ConnectionManager&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connections&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">connection&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">disconnect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connections&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">connection&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">broadcast&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">connection&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connections&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>메모리 관리: 긴 연결을 유지하므로 메모리 사용량을 모니터링하고 필요한 경우 연결을 정리해야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>로드 밸런싱: 여러 서버 인스턴스 간에 SSE 연결을 분산하는 전략이 필요할 수 있다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>예제&lt;/h3>&lt;h4>서버&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">fastapi&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">FastAPI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">fastapi.responses&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">StreamingResponse&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">asyncio&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">FastAPI&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">event_generator&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;이벤트 스트림을 생성하는 제너레이터 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 매 2초마다 카운터 증가하고 이벤트 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s2">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;timestamp&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">())})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># SSE 형식에 맞춰 데이터 포맷팅&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">yield&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;data: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\n\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="n">asyncio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/stream&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">async&lt;/span> &lt;span class="k">def&lt;/span> &lt;span class="nf">stream_events&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">StreamingResponse&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">event_generator&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">media_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text/event-stream&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">headers&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Cache-Control&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;no-cache&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Connection&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;keep-alive&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>클라이언트&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">eventSource&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">EventSource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/stream&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 이벤트 수신 시 실행될 콜백 함수
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">eventSource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onmessage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;새로운 이벤트:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 에러 처리
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">eventSource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onerror&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SSE 에러:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">eventSource&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>API Gateway</title><link>https://buenhyden.github.io/til/2024/11/api-gateway/</link><pubDate>Tue, 26 Nov 2024 09:40:00 +0000</pubDate><guid>https://buenhyden.github.io/til/2024/11/api-gateway/</guid><description>
&lt;h2>API Gateway&lt;/h2>&lt;p>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트&lt;/p>
&lt;h3>주요 기능&lt;/h3>&lt;ol>
&lt;li>
&lt;p>요청 라우팅 및 프록시&lt;br>
API Gateway는 클라이언트의 요청을 받아 적절한 백엔드 서비스로 라우팅한다.&lt;br>
이는 여러 마이크로서비스의 엔드포인트를 단일화하여 관리를 용이하게 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>인증 및 권한 부여&lt;br>
클라이언트의 요청에 대한 인증(Authentication)과 권한 부여(Authorization)를 처리한다.&lt;br>
이를 통해 각 마이크로서비스에서 중복으로 보안 로직을 구현할 필요가 없어진다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프로토콜 변환&lt;br>
클라이언트와 서버 간의 다양한 프로토콜을 지원하고 필요에 따라 변환한다.&lt;br>
예를 들어, REST API와 WebSocket API를 모두 지원할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>로드 밸런싱&lt;br>
여러 백엔드 서버로 트래픽을 분산시켜 시스템의 부하를 관리한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>캐싱&lt;br>
자주 요청되는 데이터를 캐시하여 응답 시간을 개선하고 백엔드 서버의 부하를 줄인다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>모니터링 및 로깅&lt;br>
API 호출에 대한 모니터링과 로깅을 중앙에서 관리한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단일 진입점&lt;/strong>: 클라이언트는 여러 서비스에 대해 하나의 엔드포인트만 알면 된다.&lt;/li>
&lt;li>&lt;strong>보안 강화&lt;/strong>: 인증, 권한 부여 등의 보안 기능을 중앙에서 관리할 수 있다.&lt;/li>
&lt;li>&lt;strong>캡슐화&lt;/strong>: 내부 시스템 구조를 클라이언트로부터 숨길 수 있다.&lt;/li>
&lt;li>&lt;strong>성능 최적화&lt;/strong>: 캐싱, 로드 밸런싱 등을 통해 전체 시스템의 성능을 향상시킬 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>단일 장애 지점&lt;/strong>: API Gateway 자체가 다운되면 전체 시스템에 영향을 줄 수 있다.&lt;/li>
&lt;li>&lt;strong>추가 네트워크 홉&lt;/strong>: API Gateway를 거치는 추가적인 네트워크 홉으로 인해 약간의 지연이 발생할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>구현 방식&lt;/h3>&lt;ol>
&lt;li>&lt;strong>오픈소스 솔루션&lt;/strong>: 직접 운영하는 방식으로, 커스터마이징이 가능하지만 관리 부담이 있다.&lt;/li>
&lt;li>&lt;strong>클라우드 서비스&lt;/strong>: AWS API Gateway, Azure API Management 등의 관리형 서비스를 이용하는 방식&lt;/li>
&lt;/ol>
&lt;h3>사용 사례&lt;/h3>&lt;ol>
&lt;li>&lt;strong>마이크로서비스 아키텍처&lt;/strong>: 여러 마이크로서비스를 하나의 API로 통합하여 제공한다.&lt;/li>
&lt;li>&lt;strong>레거시 시스템 통합&lt;/strong>: 기존 레거시 시스템과 새로운 서비스를 통합하는 인터페이스로 사용된다.&lt;/li>
&lt;li>&lt;strong>멀티 클라우드 환경&lt;/strong>: 여러 클라우드 환경에 분산된 서비스를 단일 인터페이스로 제공한다.&lt;/li>
&lt;/ol>
&lt;p>API Gateway는 현대적인 분산 시스템 아키텍처에서 중요한 역할을 하며, 시스템의 확장성, 보안, 성능을 향상시키는 데 크게 기여한다.&lt;br>
그러나 구현 시 단일 장애 지점이 되지 않도록 주의해야 하며, 적절한 모니터링과 관리가 필요하다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>WebSocket API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/websocket-api/</link><pubDate>Tue, 08 Oct 2024 05:37:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/websocket-api/</guid><description>
&lt;h2>WebSocket API&lt;/h2>&lt;p>WebSocket API는 WebSocket 프로토콜을 사용하여 클라이언트와 서버 간의 양방향, 실시간 통신을 가능하게 하는 웹 API로, HTTP 프로토콜의 단방향 통신과 폴링 방식의 한계를 극복하고, 클라이언트와 서버 간의 실시간 양방향 통신을 제공하는 기술이다.&lt;br>
WebSocket API는 이 프로토콜을 웹 애플리케이션에서 사용할 수 있게 해주는 인터페이스이다.&lt;/p>
&lt;h3>주요 기능 및 특징&lt;/h3>&lt;ol>
&lt;li>양방향 통신: 클라이언트와 서버가 동시에 데이터를 주고받을 수 있다.&lt;/li>
&lt;li>지속적 연결: 한 번 연결이 수립되면 지속적으로 유지된다.&lt;/li>
&lt;li>실시간 데이터 교환: 폴링 없이 즉시 데이터를 주고받을 수 있다.&lt;/li>
&lt;li>효율적인 리소스 사용: 연결이 유지되므로 반복적인 HTTP 요청의 오버헤드가 줄어든다.&lt;/li>
&lt;/ol>
&lt;h3>WebSocket 객체 생성 및 기본 사용법&lt;/h3>&lt;p>WebSocket 객체를 생성하여 연결을 시작합니다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">WebSocket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ws://example.com/socketserver&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onopen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;WebSocket 연결이 열렸습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onmessage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;서버로부터 메시지를 받았습니다:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onerror&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;WebSocket 오류:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onclose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;WebSocket 연결이 닫혔습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 메시지 전송
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Hello, Server!&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>주요 속성과 메서드&lt;/h3>&lt;p>속성:&lt;/p>
&lt;ul>
&lt;li>readyState: 연결의 현재 상태를 나타낸다.
&lt;ul>
&lt;li>CONNECTING (0): 연결 중&lt;/li>
&lt;li>OPEN (1): 연결됨&lt;/li>
&lt;li>CLOSING (2): 종료 중&lt;/li>
&lt;li>CLOSED (3): 종료됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>bufferedAmount: 전송을 위해 큐에 들어있는 데이터의 바이트 수&lt;/li>
&lt;li>protocol: 서버와 협상된 하위 프로토콜&lt;/li>
&lt;/ul>
&lt;p>메서드:&lt;/p>
&lt;ul>
&lt;li>send(): 서버로 데이터를 전송한다.&lt;/li>
&lt;li>close(): 연결을 종료한다.&lt;/li>
&lt;/ul>
&lt;p>이벤트 핸들러:&lt;/p>
&lt;ul>
&lt;li>onopen&lt;/li>
&lt;li>onmessage&lt;/li>
&lt;li>onclose&lt;/li>
&lt;li>onerror&lt;/li>
&lt;/ul>
&lt;h3>실제 예시&lt;/h3>&lt;p>WebSocket API는 실시간 채팅, 라이브 스코어 업데이트, 협업 도구, 실시간 알림 시스템 등 다양한 애플리케이션에서 사용된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">WebSocketClient&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectAttempts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">maxReconnectAttempts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">maxReconnectAttempts&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectInterval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectInterval&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">init&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">WebSocket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">url&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setupEventHandlers&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">setupEventHandlers&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onopen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;연결이 설정되었습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectAttempts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 연결 성공 시 재시도 횟수 초기화
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 연결 성공 시 인증 데이터 전송
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authToken&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;auth&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">token&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">authToken&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onmessage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;메시지 파싱 오류:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onerror&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;WebSocket 오류:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onclose&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;연결이 종료되었습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleReconnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;ping&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;pong&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 다른 메시지 타입 처리
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readyState&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">WebSocket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">OPEN&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;연결이 열려있지 않습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">handleReconnection&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectAttempts&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">maxReconnectAttempts&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`재연결 시도 &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectAttempts&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">maxReconnectAttempts&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectAttempts&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">init&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reconnectInterval&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;최대 재연결 시도 횟수를 초과했습니다.&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">close&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ws&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>고려 사항&lt;/h3>&lt;ol>
&lt;li>브라우저 지원: 대부분의 현대 브라우저에서 지원되지만, 구형 브라우저 호환성을 확인해야 힌다.&lt;/li>
&lt;li>보안: &lt;code>wss://&lt;/code> (WebSocket Secure) 프로토콜을 사용하여 암호화된 연결을 구현해야 한다.&lt;/li>
&lt;li>연결 관리: 연결 끊김 상황에 대비한 재연결 로직이 필요할 수 있다.&lt;/li>
&lt;li>서버 리소스: 많은 동시 연결을 처리할 수 있는 서버 인프라가 필요하다.&lt;/li>
&lt;/ol>
&lt;p>WebSocket API는 실시간성이 요구되는 웹 애플리케이션에서 강력한 도구로 활용될 수 있으며, 적절한 구현과 관리를 통해 효율적인 양방향 통신을 실현할 수 있다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>WebSocket</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/websocket/</link><pubDate>Tue, 08 Oct 2024 04:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/websocket/</guid><description>
&lt;h2>WebSocket&lt;/h2>&lt;p>OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;/p>
&lt;p>WebSocket은 HTTP를 기반으로 한 통신 프로토콜이지만, 연결이 수립된 후에는 HTTP와는 독립적으로 동작한다.&lt;br>
HTTP가 단방향 통신만을 지원하는 것과 달리, WebSocket은 전이중(Full-duplex) 통신을 지원한다.&lt;br>
이는 전화 통화처럼 양쪽에서 동시에 데이터를 주고받을 수 있다는 의미이다.&lt;br>
즉, 클라이언트와 서버 간의 지속적인 연결을 통해 양방향, 실시간 통신을 가능하게 하는 컴퓨터 통신 프로토콜이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/web-socket.png"
alt="Web Socket"
loading="lazy" />
&lt;/figure> _Source: &lt;a href="https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96" target="_blank" rel="noopener">https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>전이중 통신: 클라이언트와 서버가 동시에 데이터를 주고받을 수 있습니다.&lt;/li>
&lt;li>지속적 연결: 한 번 연결이 수립되면 계속 유지됩니다.&lt;/li>
&lt;li>실시간 데이터 전송: 서버에서 클라이언트로 요청 없이도 데이터를 전송할 수 있습니다.&lt;/li>
&lt;li>낮은 지연 시간: 연결이 유지되므로 데이터 전송 시 지연이 적습니다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>실시간 통신: 채팅, 게임, 실시간 협업 도구 등에 적합하다.&lt;/li>
&lt;li>효율성: HTTP에 비해 오버헤드가 적어 네트워크 리소스를 효율적으로 사용한다.&lt;/li>
&lt;li>양방향 통신: 서버에서 클라이언트로의 푸시 알림이 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;/h3>&lt;ol>
&lt;li>복잡성: 연결 관리, 오류 처리 등 구현이 복잡할 수 있다.&lt;/li>
&lt;li>브라우저 지원: 일부 구형 브라우저에서는 지원되지 않을 수 있다.&lt;/li>
&lt;li>서버 부하: 많은 동시 연결을 유지해야 하므로 서버 리소스 사용이 증가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;/h3>&lt;ol>
&lt;li>핸드셰이크:&lt;br>
웹소켓 연결은 HTTP를 통해 시작된다.&lt;br>
클라이언트가 &amp;ldquo;Upgrade: websocket&amp;rdquo; 헤더를 포함한 요청을 보내면, 서버는 이를 수락하여 웹소켓 연결로 전환한다.&lt;/li>
&lt;li>데이터 전송:&lt;br>
연결이 수립된 후, 클라이언트와 서버는 웹소켓 프로토콜을 사용하여 데이터를 주고받는다.&lt;br>
데이터는 프레임 단위로 전송된다.&lt;/li>
&lt;li>연결 종료:&lt;br>
클라이언트나 서버 중 어느 한 쪽이 연결을 종료할 수 있다.&lt;/li>
&lt;/ol>
&lt;h4>연결 수립 과정 (Handshake)&lt;/h4>&lt;p>연결 수립 과정(Handshake)에 대해서 조금더 자세히 알아보도록 하자.&lt;/p>
&lt;p>먼저 클라이언트는 특별한 HTTP 요청을 서버에 보낸다. 이를 &amp;ldquo;WebSocket Handshake Request&amp;quot;라고 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-http" data-lang="http">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">GET&lt;/span> &lt;span class="nn">/chat&lt;/span> &lt;span class="kr">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Host&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">server.example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Upgrade&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">websocket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">Upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">dGhlIHNhbXBsZSBub25jZQ==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Origin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">http://example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Protocol&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">chat, superchat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">13&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>여기서 중요한 헤더들의 의미를 살펴보면:&lt;/p>
&lt;ul>
&lt;li>Upgrade와 Connection 헤더는 HTTP 연결을 WebSocket 연결로 업그레이드하겠다는 의미이다.&lt;/li>
&lt;li>Sec-WebSocket-Key는 연결의 보안을 위한 임의의 키값.&lt;/li>
&lt;li>Sec-WebSocket-Protocol은 클라이언트가 지원하는 서브프로토콜 목록.&lt;/li>
&lt;/ul>
&lt;p>서버는 이 요청에 대해 다음과 같은 응답을 보낸다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-http" data-lang="http">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span> &lt;span class="m">101&lt;/span> &lt;span class="ne">Switching Protocols&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Upgrade&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">websocket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">Upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Accept&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">s3pPLMBiTxaQ9kYGzzhZRbK+xOo=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Protocol&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">chat&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>연결이 수립된 후의 데이터 전송 방식도 주목할 만한 특징이 있다.&lt;br>
WebSocket은 데이터를 &amp;lsquo;프레임(Frame)&amp;lsquo;이라는 단위로 전송한다.&lt;br>
프레임의 구조는 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-------&amp;#43;-&amp;#43;-------------&amp;#43;-------------------------------&amp;#43;
|F|R|R|R| opcode|M| Payload len | Extended payload length |
|I|S|S|S| (4) |A| (7) | (16/64) |
|N|V|V|V| |S| | (if payload len==126/127) |
| |1|2|3| |K| | |
&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-------&amp;#43;-&amp;#43;-------------&amp;#43;-------------------------------&amp;#43;
| Extended payload length continued, if payload len == 127 |
&amp;#43;-------------------------------&amp;#43;-------------------------------&amp;#43;
| |Masking-key, if MASK set to 1 |
&amp;#43;-------------------------------&amp;#43;-------------------------------&amp;#43;
| Masking-key (continued) | Payload Data |
&amp;#43;-------------------------------- - - - - - - - - - - - - - - -&amp;#43;
: Payload Data continued ... :
&amp;#43; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &amp;#43;
| Payload Data continued ... |
&amp;#43;---------------------------------------------------------------&amp;#43;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>프레임의 각 필드가 하는 역할을 이해하는 것이 중요하다:&lt;/p>
&lt;ul>
&lt;li>FIN: 메시지의 마지막 프레임임을 나타낸다.&lt;/li>
&lt;li>RSV1-3: 확장을 위해 예약된 비트이다.&lt;/li>
&lt;li>Opcode: 프레임의 종류를 나타낸다(텍스트, 바이너리, 연결 종료 등).&lt;/li>
&lt;li>MASK: 페이로드가 마스킹되었는지를 나타낸다.&lt;/li>
&lt;li>Payload length: 페이로드의 길이를 나타낸다.&lt;/li>
&lt;/ul>
&lt;h3>WebSocket Protocol의 다양한 기능&lt;/h3>&lt;ol>
&lt;li>Ping/Pong 프레임:&lt;br>
연결이 여전히 살아있는지 확인하기 위해 사용된다.&lt;br>
서버나 클라이언트는 Ping 프레임을 보낼 수 있으며, 받는 쪽은 반드시 Pong으로 응답해야 한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// WebSocket에서 Ping/Pong 처리 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onping&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Ping received&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Pong은 자동으로 전송됩니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>Close 프레임:&lt;br>
연결을 정상적으로 종료할 때 사용된다.&lt;br>
상태 코드와 종료 이유를 포함할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프래그먼테이션(Fragmentation):&lt;br>
대용량 메시지를 여러 프레임으로 나누어 전송할 수 있다.&lt;br>
이는 네트워크 효율성을 높이고 메모리 사용을 최적화한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>WebSocket Protocol의 보안&lt;/h3>&lt;ol>
&lt;li>
&lt;p>wss:// (WebSocket Secure):&lt;br>
TLS/SSL을 통한 암호화된 연결을 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Origin 검사:&lt;br>
브라우저는 WebSocket 연결 시 Origin 헤더를 포함시켜, 서버가 신뢰할 수 있는 출처의 연결만을 수락할 수 있게 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>마스킹:&lt;br>
클라이언트에서 서버로 전송되는 모든 프레임은 반드시 마스킹되어야 한다.&lt;br>
이는 캐시 포이즈닝과 같은 보안 공격을 방지한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;/h3>&lt;ol>
&lt;li>
&lt;p>연결 관리&lt;/p>
&lt;ul>
&lt;li>연결이 끊어졌을 때의 재연결 로직 구현&lt;/li>
&lt;li>주기적인 연결 상태 확인 (heartbeat)&lt;/li>
&lt;li>적절한 에러 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안&lt;/p>
&lt;ul>
&lt;li>wss:// (WebSocket Secure) 프로토콜 사용&lt;/li>
&lt;li>메시지 검증&lt;/li>
&lt;li>사용자 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화&lt;/p>
&lt;ul>
&lt;li>적절한 메시지 크기 관리&lt;/li>
&lt;li>연결 수 제한&lt;/li>
&lt;li>효율적인 데이터 구조 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>DNS(Domain Name System)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/</link><pubDate>Sun, 06 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/</guid><description>
&lt;h2>DNS(Domain Name System)&lt;/h2>&lt;p>인터넷에서 도메인 이름을 IP 주소로 변환하는 분산형 데이터베이스 시스템이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/DNS/ddos-dns.svg"
alt="IP 주소란 무엇이고 IP 주소는 왜 중요할까요?"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/&lt;/a> _&lt;/p>
&lt;p>&lt;strong>인터넷 전화전화부&lt;/strong>로 비유되며 특정 컴퓨터 (또는 네트워크로 연결된 임의의 장치) 의 주소를 찾기 위해, 사람이 이해하기 쉬운 호스트 이름 (예: &amp;lt;www.example.com&amp;gt;) 을 실제 네트워크 상에서 사용하는 IP 주소 (예: 192.168.1.1) 로 변환하고 해당 IP 주소로 접속하는 일련의 시스템을 DNS(Domain Name System) 이라고 한다.&lt;/p>
&lt;p>DNS 는 전세계적으로 약속된 규칙을 공유한다.&lt;br>
웹 브라우저는 DNS 확인이 &lt;strong>막후에서&lt;/strong> 발생하며 최초의 사용자 요청 외에 사용자 컴퓨터와의 추가적인 대화는 필요하지 않다.&lt;/p>
&lt;h3>역할과 기능&lt;/h3>&lt;ul>
&lt;li>도메인 이름을 IP 주소로 변환 (정방향 조회)&lt;/li>
&lt;li>IP 주소를 도메인 이름으로 변환 (역방향 조회)&lt;/li>
&lt;li>이메일 라우팅을 위한 메일 서버 정보 제공&lt;/li>
&lt;li>도메인에 대한 서비스 정보 제공&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>계층적 구조로 분산 관리&lt;/li>
&lt;li>캐싱을 통한 빠른 응답 제공&lt;/li>
&lt;li>전 세계적으로 표준화된 시스템&lt;/li>
&lt;/ul>
&lt;h3>DNS 조회는 어떻게 작동하는가?&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/DNS/3607857746_b4372ba3ba_o.png"
alt="Verisign Domain Name Industry Brief, June 2007 (PDF)"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="http://www.verisign.com/static/DNIB_09_0529web.pdf" target="_blank" rel="noopener">http://www.verisign.com/static/DNIB_09_0529web.pdf&lt;/a> _&lt;/p>
&lt;ol>
&lt;li>&lt;strong>사용자 요청&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>사용자가 브라우저에 도메인 이름 (예: www.example.com/) 입력한다.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&lt;strong>로컬 DNS 캐시 확인&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>브라우저는 먼저 로컬 캐시를 확인하여 이미 저장된 IP 주소가 있는지 확인한다.&lt;/li>
&lt;li>특정 DNS 서버가 관여하지 않는다.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>&lt;strong>재귀적 DNS 리졸버&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>로컬 캐시에 IP 주소가 없으면, 요청은 재귀적 DNS 리졸버로 전달된다.&lt;/li>
&lt;li>일반적으로 ISP 에서 제공하며, DNS 조회 과정을 대신 수행한다&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>&lt;strong>루트 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 먼저 루트 네임서버에 쿼리를 보낸다.&lt;/li>
&lt;li>루트 서버는 최상위 도메인 (TLD) 서버의 위치를 알려준다.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>&lt;strong>TLD 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 TLD 서버 (.com,.org 등) 에 쿼리를 보내 해당 도메인의 권한 있는 네임서버의 위치를 확인한다.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>&lt;strong>권한 있는 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>마지막으로, 리졸버는 권한 있는 네임서버에 쿼리를 보내 최종적으로 도메인에 대한 정확한 IP 주소를 얻는다.&lt;/li>
&lt;li>이는 도메인 등록 기관이나 호스팅 제공업체의 DNS 서버이다.&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>&lt;strong>응답 및 캐싱&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 얻은 IP 주소를 사용자의 브라우저에 반환하고, 향후 요청을 위해 이 정보를 캐시에 저장한다.&lt;/li>
&lt;/ul>
&lt;h3>DNS 서버 유형&lt;/h3>&lt;ul>
&lt;li>웹페이지 로드와 관련된 DNS 서버&lt;/li>
&lt;/ul>
&lt;h4>DNS Recursive Resolver(DNS 재귀적 리졸버)&lt;/h4>&lt;ul>
&lt;li>별칭: DNS 리커서, 캐싱 네임 서버&lt;/li>
&lt;li>역할: 클라이언트의 DNS 쿼리를 받아 처리하는 첫 번째 중간자.&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>클라이언트의 요청을 받아 다른 DNS 서버에 추가 쿼리를 보내 응답을 얻음.&lt;/li>
&lt;li>얻은 정보를 캐시하여 향후 쿼리 처리 속도를 높임.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관리 주체: 인터넷 서비스 공급자 (ISP), 대기업, 또는 타사 DNS 서비스 공급자가 운영한다.&lt;/li>
&lt;/ul>
&lt;h4>DNS Root Nameserver(루트 이름 서버)&lt;/h4>&lt;ul>
&lt;li>역할: DNS 계층 구조의 최상위에 위치하며, 전 세계적으로 13 개의 DNS Root Nameserver(루트 이름 서버) 가 있으나 수백 개의 미러 서버가 운영되고 있다.&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>TLD 네임서버의 IP 주소 정보를 제공한다.&lt;/li>
&lt;li>DNS 리졸버의 쿼리 해결 과정의 시작점.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>DNS TLD Nameserver (TLD 이름 서버)&lt;/h4>&lt;ul>
&lt;li>역할: 특정 TLD (.com,.org,.net 등) 에 대한 정보를 관리&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>해당 TLD 내의 권한있는 네임 서버 정보를 제공.&lt;/li>
&lt;li>예:.com TLD 서버는 example.com 의 권한 있는 네임서버 정보를 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관리: ICANN 이 관리하며, 각 TLD 별로 다른 조직에 위임.&lt;/li>
&lt;/ul>
&lt;h4>Authoritative Nameserver (권한 있는 이름 서버)&lt;/h4>&lt;ul>
&lt;li>역할: 특정 도메인에 대한 최종적이고 공식적인 DNS 정보를 제공.&lt;/li>
&lt;li>유형:
&lt;ul>
&lt;li>Primary (마스터) 서버: 도메인의 원본 레코드를 유지 관리&lt;/li>
&lt;li>Secondary (슬레이브) 서버: Primary 서버의 데이터를 복제하여 로드 분산과 중복성 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>도메인의 A, AAAA, MX, CNAME 등 모든 DNS 레코드 정보를 저장 및 제공&lt;/li>
&lt;li>도메인 소유자가 직접 관리하거나 DNS 호스팅 서비스를 통해 관리됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>Local DNS 캐시&lt;/h4>&lt;ul>
&lt;li>사용자의 개별 컴퓨터나 디바이스에 임시로 저장되는 DNS 조회 결과 모음.&lt;/li>
&lt;li>목적:
&lt;ul>
&lt;li>DNS 쿼리의 응답 시간을 단축시켜 웹 브라우징의 속도를 향상시킨다.&lt;/li>
&lt;li>네트워크 트래픽을 줄여 대역폭을 절약한다.&lt;/li>
&lt;li>DNS 서버의 부하를 감소시킨다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>작동 방식:
&lt;ul>
&lt;li>사용자가 웹 사이트에 처음 접속할 때, OS 는 DNS 조회 결과를 로컬 캐시에 저장한다.&lt;/li>
&lt;li>이후 같은 도메인에 접속할 때, OS 는 로컬 캐시를 확인한다.&lt;/li>
&lt;li>캐시에 정보가 있으면 즉시 사용하고, 없으면 일반적인 DNS 조회 과정을 시작한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>저장 위치:
&lt;ul>
&lt;li>Windows: DNS Client 서비스에 의해 관리된다.&lt;/li>
&lt;li>macOS / Linux: nscd (Name Service Cache Daemon) 또는 시스템 수준의 캐시 메커니즘에 의해 관리된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TTL (Time To Live):
&lt;ul>
&lt;li>각 DNS 레코드는 TTL 값을 가지며, 이는 캐시에 해당 정보를 얼마나 오래 보관할지 결정한다.&lt;/li>
&lt;li>TTL 이 만료되면 해당 정보는 캐시에서 제거되고, 다음 요청시 새로운 DNS 조회가 수행된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점:
&lt;ul>
&lt;li>빠른 웹 페이지 로딩&lt;/li>
&lt;li>네트워크 효율성&lt;/li>
&lt;li>오프라인 상태에서도 이전에 방문한 사이트의 IP 주소 제공 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단점:
&lt;ul>
&lt;li>오래된 정보를 제공할 수 있다. (특히 TTL 이 긴 경우)&lt;/li>
&lt;li>DNS 변경사항이 즉시 반영되지 않을 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>주의 사항:
&lt;ul>
&lt;li>DNS 캐시 중독: 악의적인 공격자가 캐시를 조작하여 사용자를 가짜 웹사이트로 유도할 수 있다.&lt;/li>
&lt;li>오래된 정보: 웹사이트의 IP 주소가 변경되었을 때 캐시된 정보가 최신 상태가 아닐 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>DNS 보안 위협 및 보호 기술&lt;/h3>&lt;h4>DNS 보안 위협&lt;/h4>&lt;h5>DNS 스푸핑 (DNS Spoofing)&lt;/h5>&lt;ul>
&lt;li>정의: 공격자가 DNS 응답을 가로채고 조작하여 사용자를 의도하지 않은 사이트로 유도하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>중간자 공격의 일종.&lt;/li>
&lt;li>사용자가 정상적인 웹사이트에 접속하고 있다고 믿게 만듦.&lt;/li>
&lt;li>피싱이나 악성코드 배포에 주로 사용됨.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 캐시 포이즈닝 (DNS Cache Poisoning)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 리졸버의 캐시에 거짓 정보를 삽입하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 리졸버가 잘못된 IP 주소를 캐시에 저장하게 됨.&lt;/li>
&lt;li>공격 효과가 캐시 TTL 동안 지속됨.&lt;/li>
&lt;li>다수의 사용자에게 영향을 미칠 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 하이재킹 (DNS Hijacking)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 설정을 변경하여 트래픽을 공격자가 제어하는 서버로 리디렉션 (Redirection) 하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 서버 자체를 대상으로 하는 경우가 많음.&lt;/li>
&lt;li>사용자 디바이스의 DNS 설정을 변경하기도 함.&lt;/li>
&lt;li>광범위한 영향을 미칠 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 증폭 공격 (DNS Amplification Attack)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 서버를 이용해 대량의 트래픽을 생성하여 대상 시스템을 마비시키는 DDos 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>작은 쿼리로 큰 응답을 유발하여 트래픽을 증폭시킴.&lt;/li>
&lt;li>공개 DNS 리졸버를 악용함.&lt;/li>
&lt;li>네트워크 대역폭을 소진시켜 서비스 중단을 유발.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 터널링 (DNS Tunneling)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 프로토콜을 악용하여 다른 프로토콜의 데이터를 DNS 쿼리와 응답에 숨겨 전송하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>방화벽 우회, 데이터 유출 등에 사용될 수 있음.&lt;/li>
&lt;li>정상적인 DNS 트래픽으로 위장하여 탐지가 어려움.&lt;/li>
&lt;li>네트워크 성능 저하를 유발할 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>DNS 보호 기술&lt;/h4>&lt;h5>DNSSEC (Domain Name System Security Extensions)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 응답의 무결성과 출처를 암호화 방식으로 검증하는 보장 확장 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>디지털 서명을 사용하여 DNS 데이터의 신뢰성 보장.&lt;/li>
&lt;li>DNS 스푸핑과 DNS 캐시 포이즈닝 공격 방지.&lt;/li>
&lt;li>점진적으로 도입 가능하나, 전체 DNS 체인의 참여가 필요함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS over HTTPS (DoH)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 쿼리를 HTTPS 프로토콜을 통해 암호화하여 전송하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 쿼리의 프라이버시 보호.&lt;/li>
&lt;li>중간자 공격 방지.&lt;/li>
&lt;li>기존 방화벽 정책과 충돌할 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS over TLS (DoT)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 쿼리를 TLS 프로토콜을 통해 암호화하여 전송하는 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 쿼리의 기밀성 보장.&lt;/li>
&lt;li>전용 포트 (853) 를 사용하여 트래픽 식별이 용이.&lt;/li>
&lt;li>DoH 에 비해 네트워크 관리가 쉬움.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DANE (DNS-based Authentication of Named Entities)&lt;/h5>&lt;ul>
&lt;li>정의: DNS 를 사용하여 TLS 인증서의 유효성을 검증하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNSSEC 과 연계하여 사용.&lt;/li>
&lt;li>인증기관 (CA) 의존도 감소.&lt;/li>
&lt;li>자체 서명 인증서의 안전한 사용 가능.&lt;br>
RPZ (Response POLICY Zones)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정의: DNS 서버 레벨에서 악성 도메인에 대한 접근을 차단하는 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>중앙 집중식 보안 정책 적용 가능.&lt;/li>
&lt;li>실시간 업데이트 지원.&lt;/li>
&lt;li>유연한 정책 설정 가능 (차단, 리다이렉션 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>DNS&lt;/h3>&lt;p>&lt;a href="https://ko.wikipedia.org/wiki/%EB%8F%84%EB%A9%94%EC%9D%B8_%EB%84%A4%EC%9E%84_%EC%8B%9C%EC%8A%A4%ED%85%9C" target="_blank" rel="noopener">도메인 네임 시스템&lt;/a>&lt;br>
&lt;a href="https://hanamon.kr/dns%EB%9E%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%85%90%EB%B6%80%ED%84%B0-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D%EA%B9%8C%EC%A7%80/" target="_blank" rel="noopener">DNS란? (도메인 네임 시스템 개념부터 작동 방식까지)&lt;/a>&lt;br>
&lt;a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;amp;blogId=gaegurijump&amp;amp;logNo=110186376474" target="_blank" rel="noopener">DNS(Domain Name System)란?&lt;/a>&lt;br>
&lt;a href="https://gentlysallim.com/dns%EB%9E%80-%EB%AD%90%EA%B3%A0-%EB%84%A4%EC%9E%84%EC%84%9C%EB%B2%84%EB%9E%80-%EB%AD%94%EC%A7%80-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC/" target="_blank" rel="noopener">DNS란 뭐고, 네임서버란 뭔지 개념정리&lt;/a>&lt;br>
&lt;a href="https://ko.wikipedia.org/wiki/%EB%A3%A8%ED%8A%B8_%EB%84%A4%EC%9E%84_%EC%84%9C%EB%B2%84" target="_blank" rel="noopener">루트 네임 서버&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=164603&amp;amp;boardType=" target="_blank" rel="noopener">개발자가 알아야할 DNS 동작&lt;/a>&lt;br>
&lt;a href="https://www.ibm.com/kr-ko/topics/dns" target="_blank" rel="noopener">도메인 이름 시스템(DNS)이란 무엇인가요?&lt;/a>&lt;/p>
&lt;h3>DNS 레코드&lt;/h3>&lt;p>&lt;a href="https://inpa.tistory.com/entry/WEB-%F0%9F%8C%90-DNS-%EB%A0%88%EC%BD%94%EB%93%9C-%EC%A2%85%EB%A5%98-%E2%98%85-%EC%95%8C%EA%B8%B0-%EC%89%BD%EA%B2%8C-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">DNS 레코드 종류 ★ 완벽 정리&lt;/a>&lt;/p>
&lt;h3>TLD&lt;/h3>&lt;p>&lt;a href="https://developer.mozilla.org/ko/docs/Glossary/TLD" target="_blank" rel="noopener">최상위 도메인 (top-level domain, TLD)&lt;/a>&lt;br>
&lt;a href="https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/" target="_blank" rel="noopener">최상위 도메인이란?&lt;/a>&lt;/p></description></item><item><title>SSL and TLS</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssl-and-tls/</link><pubDate>Sat, 05 Oct 2024 08:48:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssl-and-tls/</guid><description>
&lt;h2>SSL(Secure Sockets Layer)과 TLS(Transport Layer Security)&lt;/h2>&lt;p>인터넷 상에서 데이터를 안전하게 전송하기 위한 암호화 프로토콜.&lt;br>
TLS는 SSL의 후속 버전으로, 보안성과 성능이 향상되었다.&lt;/p>
&lt;h3>SSL의 역사와 개념&lt;/h3>&lt;p>SSL은 1995년 Netscape에 의해 개발되었다.&lt;br>
주요 목적은 웹 브라우징 시 데이터의 기밀성과 무결성을 보장하는 것.&lt;br>
SSL은 다음과 같은 버전으로 발전했다:&lt;/p>
&lt;ol>
&lt;li>SSL 1.0 (내부적으로만 사용)&lt;/li>
&lt;li>SSL 2.0 (1995년 공개)&lt;/li>
&lt;li>SSL 3.0 (1996년 공개)&lt;/li>
&lt;/ol>
&lt;h3>TLS의 등장과 발전&lt;/h3>&lt;p>TLS는 SSL 3.0을 기반으로 1999년 IETF(Internet Engineering Task Force)에 의해 개발되었다.&lt;br>
TLS는 SSL의 보안 취약점을 개선하고 더 강력한 암호화 알고리즘을 도입했다.&lt;br>
TLS의 주요 버전은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>TLS 1.0 (1999년)&lt;/li>
&lt;li>TLS 1.1 (2006년)&lt;/li>
&lt;li>TLS 1.2 (2008년)&lt;/li>
&lt;li>TLS 1.3 (2018년)&lt;/li>
&lt;/ol>
&lt;h3>OSI 7계층과 TCP/IP 모델에서의 위치&lt;/h3>&lt;ul>
&lt;li>OSI 7계층:&lt;br>
전송 계층(4계층)과 응용 계층(7계층) 사이에서 동작&lt;/li>
&lt;li>TCP/IP 모델:&lt;br>
전송 계층과 응용 계층 사이에서 동작&lt;/li>
&lt;/ul>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>공개키 암호화와 대칭키 암호화를 모두 사용한다.&lt;/li>
&lt;li>디지털 인증서를 통해 서버의 신원을 확인한다.&lt;/li>
&lt;li>다양한 암호화 알고리즘과 프로토콜 버전을 지원한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>데이터 전송의 보안성 강화&lt;/li>
&lt;li>서버 인증을 통한 신뢰성 확보&lt;/li>
&lt;li>검색 엔진 최적화(SEO) 향상&lt;/li>
&lt;li>규정 준수 지원 (예: PCI DSS)&lt;/li>
&lt;li>사용자 신뢰도 증가&lt;/li>
&lt;/ol>
&lt;h3>SSL과 TLS의 차이점&lt;/h3>&lt;ol>
&lt;li>버전:
&lt;ul>
&lt;li>SSL은 1.0, 2.0, 3.0 버전이 있으며 모두 취약점이 발견되어 더 이상 사용되지 않는다.&lt;/li>
&lt;li>TLS는 1.0, 1.1, 1.2, 1.3 버전이 있으며, 현재는 1.2와 1.3이 주로 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안성:
&lt;ul>
&lt;li>TLS가 SSL보다 더 강력한 암호화 알고리즘과 보안 기능을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>핸드셰이크 과정:
&lt;ul>
&lt;li>TLS는 SSL보다 더 효율적이고 빠른 핸드셰이크 과정을 가진다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>암호 스위트:
&lt;ul>
&lt;li>TLS는 더 다양하고 안전한 암호 스위트를 지원한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>메시지 인증:
&lt;ul>
&lt;li>SSL은 MAC(Message Authentication Code)를 사용하지만, TLS는 HMAC(Hash-based Message Authentication Code)를 사용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;/h3>&lt;ol>
&lt;li>핸드셰이크(handshake) 과정:
&lt;ol>
&lt;li>&lt;strong>클라이언트 헬로&lt;/strong>: 클라이언트가 지원하는 암호화 방식 등을 서버에 전송한다.&lt;/li>
&lt;li>&lt;strong>서버 헬로&lt;/strong>: 서버가 선택한 암호화 방식과 인증서를 클라이언트에 전송한다.&lt;/li>
&lt;li>&lt;strong>인증서 검증&lt;/strong>: 클라이언트가 서버의 인증서를 검증한다.&lt;/li>
&lt;li>&lt;strong>키 교환&lt;/strong>: 안전한 통신을 위한 대칭 키를 교환한다.&lt;/li>
&lt;li>&lt;strong>암호화 통신 시작&lt;/strong>: 협상된 암호화 방식으로 데이터를 암호화하여 통신한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>데이터 전송: 생성된 세션 키를 사용하여 데이터를 암호화하고 전송한다.&lt;/li>
&lt;li>연결 종료: 통신이 완료되면 세션을 종료하고 세션 키를 폐기한다.&lt;/li>
&lt;/ol>
&lt;p>SSL(Secure Sockets Layer)과 TLS(Transport Layer Security)는 네트워크 통신을 안전하게 암호화하기 위한 프로토콜입니다. 두 프로토콜의 주요 차이점과 관련 개념들에 대해 설명하겠습니다.&lt;/p>
&lt;h3>인증서 체인&lt;/h3>&lt;p>인증서 체인은 디지털 인증서의 신뢰성을 확립하는 계층적 구조이다.&lt;br>
일반적으로 다음과 같은 구조로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>루트 인증서: 최상위 신뢰 기관의 자체 서명 인증서&lt;/li>
&lt;li>중간 인증서: 루트 인증 기관이 서명한 인증서&lt;/li>
&lt;li>최종 사용자 인증서: 웹사이트나 서비스에 발급된 인증서&lt;br>
완전한 인증서 체인을 제공하는 것이 중요하며, 이를 통해 브라우저는 인증서의 유효성을 검증할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>암호 스위트&lt;/h3>&lt;p>암호 스위트는 SSL/TLS 연결에서 사용되는 암호화 알고리즘의 조합.&lt;br>
주요 구성 요소는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>키 교환 알고리즘 (예: RSA, ECDHE)&lt;/li>
&lt;li>인증 알고리즘 (예: RSA, ECDSA)&lt;/li>
&lt;li>대칭 암호화 알고리즘 (예: AES, ChaCha20)&lt;/li>
&lt;li>메시지 인증 코드 알고리즘 (예: SHA-256, POLY1305)&lt;br>
최신 TLS 버전에서는 보안성이 높은 암호 스위트를 우선적으로 사용한다.&lt;/li>
&lt;/ol>
&lt;h3>전방 비밀성&lt;/h3>&lt;p>전방 비밀성(Forward Secrecy)은 현재 세션의 키가 노출되더라도 과거 세션의 통신 내용을 해독할 수 없도록 하는 보안 속성이다.&lt;br>
ECDHE나 DHE와 같은 키 교환 방식을 사용하여 구현된다.&lt;/p>
&lt;h3>HTTPS&lt;/h3>&lt;p>HTTPS는 HTTP 프로토콜에 SSL/TLS를 적용한 것이다.&lt;br>
웹 브라우저와 서버 간의 모든 통신을 암호화하여 데이터의 기밀성과 무결성을 보장한다.&lt;/p>
&lt;h3>성능 최적화&lt;/h3>&lt;p>SSL/TLS 성능 최적화를 위한 주요 방법들:&lt;/p>
&lt;ol>
&lt;li>세션 재개: 이전 연결의 정보를 재사용하여 핸드셰이크 과정을 단축한다.&lt;/li>
&lt;li>OCSP Stapling: 인증서 상태 확인 과정을 최적화한다.&lt;/li>
&lt;li>HTTP/2 지원: 연결 다중화를 통해 성능을 향상시킨다.&lt;/li>
&lt;li>적절한 암호 스위트 선택: 보안과 성능의 균형을 고려한다.&lt;/li>
&lt;li>하드웨어 가속: 암호화 작업을 전용 하드웨어로 처리하여 성능을 개선한다.&lt;/li>
&lt;/ol>
&lt;p>추가적으로 알아야 할 내용:&lt;/p>
&lt;ol>
&lt;li>SSL과 TLS의 차이: TLS는 SSL의 후속 버전으로, 더 강화된 보안 기능을 제공합니다.&lt;/li>
&lt;li>인증서 체인: 루트 인증서, 중간 인증서, 최종 엔티티 인증서로 구성된 체인을 통해 신뢰성을 확보합니다.&lt;/li>
&lt;li>암호 스위트: 다양한 암호화 알고리즘의 조합을 지원하며, 클라이언트와 서버가 협상하여 사용할 암호 스위트를 결정합니다.&lt;/li>
&lt;li>전방 비밀성: 세션 키가 노출되더라도 과거의 통신 내용을 해독할 수 없도록 하는 기능을 제공합니다.&lt;/li>
&lt;li>HTTPS: SSL/TLS는 HTTPS 프로토콜의 기반이 되며, 웹 브라우징 보안에 필수적입니다.&lt;/li>
&lt;li>성능 최적화: TLS 1.3에서는 핸드셰이크 과정을 간소화하여 연결 속도를 개선했습니다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/</link><pubDate>Sat, 05 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/</guid><description>
&lt;h2>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)&lt;/h2>&lt;p>HTTP는 OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;br>
HTTP는 웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다.&lt;/p>
&lt;h3>HTTP의 특징&lt;/h3>&lt;ul>
&lt;li>클라이언트-서버 모델 기반&lt;/li>
&lt;li>상태를 유지하지 않는 (Stateless) 프로토콜&lt;/li>
&lt;li>연결을 유지하지 않는 (Connectionless) 프로토콜&lt;/li>
&lt;li>요청(Request)과 응답(Response) 구조로 통신&lt;/li>
&lt;li>TCP/IP 기반으로 동작&lt;/li>
&lt;li>80번 포트를 기본으로 사용&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Stateless vs Stateful&lt;br>
Stateless (무상태)&lt;/p>
&lt;ul>
&lt;li>서버가 클라이언트의 이전 요청에 대한 정보를 저장하지 않는다.&lt;/li>
&lt;li>매번 필요한 모든 정보를 함께 전달해야 한다.&lt;/li>
&lt;li>서버 확장성이 높다. 여러 서버를 쉽게 추가할 수 있어 대규모 트래픽 처리에 유리하다.&lt;/li>
&lt;li>클라이언트가 매번 모든 정보를 전송해야 해서 데이터량이 증가할 수 있다.&lt;br>
Stateful (상태 유지)&lt;/li>
&lt;li>서버가 클라이언트의 이전 요청 정보를 기억하는 방식&lt;/li>
&lt;li>예를 들어, 온라인 쇼핑 카트나 로그인 세션 등이 이에 해당&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Connectionless (비연결성)&lt;br>
클라이언트가 서버에 요청을 보내고 서버가 응답한 후에는 연결을 즉시 종료한다.&lt;br>
서버 자원을 효율적으로 사용할 수 있다. 많은 사용자가 동시에 서비스를 이용해도 실제로 서버가 처리하는 요청은 상대적으로 적을 수 있다.&lt;br>
매 요청마다 새로운 연결을 설정해야 해서 약간의 시간이 소요될 수 있다.&lt;/p>
&lt;/blockquote>
&lt;h3>HTTP 요청과 응답의 구조&lt;/h3>&lt;h4>HTTP 요청 구조&lt;/h4>&lt;ol>
&lt;li>
&lt;p>시작 줄 (Request Line)&lt;/p>
&lt;ul>
&lt;li>HTTP 메서드 (GET, POST 등)&lt;/li>
&lt;li>요청 대상 (URL 또는 경로)&lt;/li>
&lt;li>HTTP 버전&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>헤더&lt;/p>
&lt;ul>
&lt;li>요청에 대한 추가 정보 (예: Host, Content-Type, Accept 등)&lt;/li>
&lt;li>각 헤더는 대소문자를 구분하지 않는 문자열, 콜론(:), 값으로 구성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>빈 줄&lt;/p>
&lt;ul>
&lt;li>헤더의 끝을 나타냄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>본문 (선택적)&lt;/p>
&lt;ul>
&lt;li>POST, PUT, PATCH 등의 요청에서 서버로 전송할 데이터 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">POST /users HTTP/1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host: example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: 50
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name=FirstName%20LastName&amp;amp;email=bsmth%40example.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>HTTP 응답 구조&lt;/h4>&lt;ol>
&lt;li>
&lt;p>상태 줄 (Status Line)&lt;/p>
&lt;ul>
&lt;li>HTTP 버전&lt;/li>
&lt;li>상태 코드 (예: 200, 404 등)&lt;/li>
&lt;li>상태 메시지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>헤더&lt;/p>
&lt;ul>
&lt;li>응답에 대한 추가 정보 (예: Content-Type, Content-Length 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>빈 줄&lt;/p>
&lt;ul>
&lt;li>헤더의 끝을 나타냄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>본문 (선택적)&lt;/p>
&lt;ul>
&lt;li>요청된 리소스 또는 오류 메시지 등 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">HTTP/1.1 200 OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: text/html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: 138
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;title&amp;gt;Example Page&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h1&amp;gt;Welcome to the Example Page&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;This is an example of an HTML response body.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/html&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTP Versions&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>HTTP/0.9 (1991)&lt;/th>
&lt;th>HTTP/1.0 (1996)&lt;/th>
&lt;th>HTTP/1.1 (1997)&lt;/th>
&lt;th>HTTP/2 (2015)&lt;/th>
&lt;th>HTTP/3 (2022)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>프로토콜 형식&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지원 메서드&lt;/td>
&lt;td>GET만 지원&lt;/td>
&lt;td>GET, POST 등 추가&lt;/td>
&lt;td>다양한 메서드 지원&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 방식&lt;/td>
&lt;td>요청마다 새 연결&lt;/td>
&lt;td>요청마다 새 연결&lt;/td>
&lt;td>연결 재사용 (keep-alive)&lt;/td>
&lt;td>멀티플렉싱&lt;/td>
&lt;td>QUIC 기반 멀티플렉싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>도입&lt;/td>
&lt;td>개선&lt;/td>
&lt;td>압축&lt;/td>
&lt;td>HTTP/2와 유사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상태 코드&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>도입&lt;/td>
&lt;td>개선&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;td>개선된 메커니즘&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>파이프라이닝&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>멀티플렉싱으로 대체&lt;/td>
&lt;td>멀티플렉싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 푸시&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 계층&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP (QUIC)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>선택적 (SSL)&lt;/td>
&lt;td>선택적 (TLS)&lt;/td>
&lt;td>권장 (TLS)&lt;/td>
&lt;td>의무화 (TLS 1.3)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>멀티플렉싱 (Multiplexing)&lt;/p>
&lt;ul>
&lt;li>기본 개념
&lt;ul>
&lt;li>하나의 연결(Connection)을 통해 여러 개의 요청과 응답을 동시에 주고받을 수 있는 기술&lt;/li>
&lt;li>HTTP/2에서 도입된 핵심 기능&lt;/li>
&lt;li>단일 연결을 통해 여러 요청과 응답을 동시에 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점
&lt;ol>
&lt;li>성능 향상
&lt;ul>
&lt;li>여러 요청을 동시에 처리&lt;/li>
&lt;li>대기 시간 감소&lt;/li>
&lt;li>전체 로딩 시간 단축&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>효율성
&lt;ul>
&lt;li>하나의 연결로 여러 작업 처리&lt;/li>
&lt;li>서버 자원 절약&lt;/li>
&lt;li>네트워크 사용 효율 증가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 경험
&lt;ul>
&lt;li>웹페이지 로딩 속도 향상&lt;/li>
&lt;li>끊김 없는 서비스 제공&lt;/li>
&lt;li>반응성 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>예시
&lt;ul>
&lt;li>쇼핑몰 웹페이지 로딩 상황:
&lt;ul>
&lt;li>HTTP/1.1 (순차적 처리)
&lt;ol>
&lt;li>메인 페이지 로딩&lt;/li>
&lt;li>스타일시트 다운로드&lt;/li>
&lt;li>자바스크립트 파일 다운로드&lt;/li>
&lt;li>상품 이미지들 다운로드 → 모든 과정이 순차적으로 진행되어 전체 로딩 시간이 김&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>HTTP/2 (멀티플렉싱)
&lt;ul>
&lt;li>모든 리소스를 동시에 요청하고 받을 수 있음&lt;/li>
&lt;li>이미지, 스타일, 스크립트 등을 병렬로 처리&lt;/li>
&lt;li>전체 로딩 시간이 크게 단축됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">웹페이지 로딩 시나리오:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/1.1 순차적 처리 (HOL Blocking 발생):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html (200ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">style.css (150ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">script.js (180ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image1.jpg (300ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">총 소요시간: 830ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/2 (멀티플렉싱):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html (200ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">style.css (150ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">script.js (180ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image1.jpg (300ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">총 소요시간: 300ms (가장 긴 요청 시간)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/blockquote>
&lt;h3>HTTP 헤더&lt;/h3>&lt;p>Content-Type: 리소스의 미디어 타입을 지정&lt;br>
Authorization: 인증 정보를 전달&lt;br>
Cache-Control: 캐싱 동작을 제어&lt;br>
Cookie/Set-Cookie: 쿠키 정보를 처리&lt;br>
CORS 관련 헤더: 교차 출처 리소스 공유를 제어&lt;/p>
&lt;h3>HTTP 메시지 구조&lt;/h3>&lt;p>HTTP 메시지는 다음과 같은 구조로 이루어져 있다:&lt;/p>
&lt;ol>
&lt;li>시작 라인 (요청 라인 또는 상태 라인)&lt;/li>
&lt;li>헤더&lt;/li>
&lt;li>빈 라인&lt;/li>
&lt;li>본문 (선택적)&lt;/li>
&lt;/ol>
&lt;h3>HTTP 메서드&lt;/h3>&lt;p>주요 HTTP 메서드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>GET: 리소스 조회&lt;/li>
&lt;li>POST: 리소스 생성&lt;/li>
&lt;li>PUT: 리소스 수정&lt;/li>
&lt;li>DELETE: 리소스 삭제&lt;/li>
&lt;li>PATCH: 리소스 부분 수정&lt;/li>
&lt;/ul>
&lt;h3>HTTP 상태 코드&lt;/h3>&lt;p>HTTP 응답 상태 코드는 다음과 같이 분류된다:&lt;/p>
&lt;ul>
&lt;li>1xx: 정보 제공&lt;/li>
&lt;li>2xx: 성공&lt;/li>
&lt;li>3xx: 리다이렉션&lt;/li>
&lt;li>4xx: 클라이언트 오류&lt;/li>
&lt;li>5xx: 서버 오류&lt;/li>
&lt;/ul>
&lt;h3>HTTPS와 보안&lt;/h3>&lt;p>HTTPS는 HTTP에 보안 계층을 추가한 프로토콜이다.&lt;br>
주요 특징은 다음과 같다.&lt;/p>
&lt;ol>
&lt;li>SSL/TLS를 통해 다음과 같은 보안 기능을 제공한다:
&lt;ol>
&lt;li>데이터 암호화: 통신 내용을 제3자가 읽을 수 없게 한다.&lt;/li>
&lt;li>무결성 보장: 데이터가 전송 중에 변조되지 않았음을 보장한다.&lt;/li>
&lt;li>인증: 통신 상대방이 신뢰할 수 있는 서버임을 증명한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>443번 포트를 기본으로 사용&lt;/li>
&lt;li>데이터의 기밀성과 무결성 보장&lt;/li>
&lt;li>웹사이트의 신뢰성 증가&lt;/li>
&lt;li>SEO에 긍정적 영향&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HTTPS 서버 예시 (Python Flask)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Flask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ssl_context&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cert.pem&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;key.pem&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTPS의 동작 원리&lt;/h3>&lt;p>HTTPS는 다음과 같은 과정으로 동작한다.&lt;/p>
&lt;ol>
&lt;li>SSL/TLS 핸드셰이크를 통한 연결 설정&lt;/li>
&lt;li>대칭키와 비대칭키 암호화 방식을 결합하여 사용&lt;/li>
&lt;li>인증서를 통한 서버 신원 확인&lt;/li>
&lt;/ol>
&lt;h3>HTTPS 도입 시 고려사항&lt;/h3>&lt;p>HTTPS를 도입할 때 다음 사항들을 고려해야 한다.&lt;/p>
&lt;ol>
&lt;li>적절한 SSL/TLS 인증서 선택&lt;/li>
&lt;li>서버 구성 및 최적화&lt;/li>
&lt;li>리디렉션 설정 (HTTP에서 HTTPS로)&lt;/li>
&lt;li>혼합 콘텐츠 문제 해결&lt;/li>
&lt;li>성능 영향 고려&lt;/li>
&lt;/ol>
&lt;h3>보안 강화를 위한 추가 조치&lt;/h3>&lt;p>HTTPS 외에도 다음과 같은 보안 조치를 취해야 한다.&lt;/p>
&lt;ol>
&lt;li>콘텐츠 보안 정책(CSP) 설정&lt;/li>
&lt;li>XSS, CSRF 등 웹 취약점 방지&lt;/li>
&lt;li>데이터 입력 검증&lt;/li>
&lt;li>SQL 인젝션 방지&lt;/li>
&lt;li>HSTS(HTTP Strict Transport Security) 헤더 설정&lt;/li>
&lt;li>Referrer-Policy 헤더 설정&lt;/li>
&lt;/ol>
&lt;p>XSS(Cross-Site Scripting) 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데이터 이스케이프 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">markupsafe&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">escape&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user/&amp;lt;name&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">user_profile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;Hello, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">escape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">!&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>CSRF(Cross-Site Request Forgery) 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_wtf.csrf&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">CSRFProtect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">csrf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CSRFProtect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>SQL 인젝션 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파라미터화된 쿼리 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cursor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SELECT * FROM users WHERE id = ?&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>성능 최적화&lt;/h3>&lt;p>HTTP 성능 최적화를 위한 주요 기술들:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>캐싱 전략&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/data&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_data&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">make_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jsonify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Cache-Control&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;public, max-age=300&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>압축&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_compress&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Compress&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">compress&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Compress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Keep-Alive 연결&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Connection&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;keep-alive&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>세션과 쿠키&lt;/h3>&lt;p>상태 관리를 위한 메커니즘을 이해해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 세션 관리 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">login&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authenticate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">form&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;user_id&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/dashboard&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTP/2와 HTTP/3&lt;/h3>&lt;p>최신 버전의 HTTP 프로토콜에 대해서도 이해가 필요하다:&lt;/p>
&lt;ol>
&lt;li>HTTP/2: 멀티플렉싱, 헤더 압축 등을 통한 성능 개선&lt;/li>
&lt;li>HTTP/3: QUIC 프로토콜 기반, 더 빠른 연결 설정과 향상된 성능&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>HTTP(S)&lt;/h3>&lt;p>&lt;a href="https://yozm.wishket.com/magazine/detail/1686/" target="_blank" rel="noopener">웹 개발자라면 알고 있어야 할 HTTP의 진화 과정&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/experts/techBoardDetail.do?ID=163937&amp;amp;boardType=experts" target="_blank" rel="noopener">[네트워크] Low Level HTTP 통신&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/experts/techBoardDetail.do?ID=165318&amp;amp;boardType=experts" target="_blank" rel="noopener">[네트워크] Raw HTTP Message 확인하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/130/" target="_blank" rel="noopener">HTTP vs HTTPS 차이, 알면 사이트의 레벨이 보인다.&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/694/" target="_blank" rel="noopener">HTTP의 새로운 메서드, 서치(SEARCH)에 대하여&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/471/" target="_blank" rel="noopener">HTTP, 그리고 HTTPS의 이해&lt;/a>&lt;br>
&lt;a href="https://brunch.co.kr/@swimjiy/47" target="_blank" rel="noopener">그림으로 쉽게 보는 HTTPS, SSL, TLS&lt;/a>&lt;br>
&lt;a href="https://wormwlrm.github.io/2022/09/02/Evolution-of-HTTP.html" target="_blank" rel="noopener">웹 개발자라면 알고 있어야 할 HTTP의 진화 과정&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1852/" target="_blank" rel="noopener">안전한 웹을 위해 HTTPS 이해하기: 1. HTTPS의 작동 원리&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1862/" target="_blank" rel="noopener">안전한 웹을 위해 HTTPS 이해하기: 2. HTTPS를 강제하는 HSTS 기술&lt;/a>&lt;br>
&lt;a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Status" target="_blank" rel="noopener">HTTP status Code&lt;/a>&lt;br>
&lt;a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Methods" target="_blank" rel="noopener">HTTP 요청 메서드&lt;/a>&lt;/p></description></item><item><title>IP(Internet Protocol)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</link><pubDate>Fri, 04 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</guid><description>
&lt;h2>IP (Internet Protocol)&lt;/h2>&lt;p>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합이다.&lt;/p>
&lt;p>OSI 7계층에서 네트워크 계층(3계층)에 위치하며, TCP/IP 4계층에서는 인터넷 계층에 해당한다.&lt;br>
이 위치에서 IP는 데이터 패킷의 주소지정과 라우팅을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>IP 정보는 각 패킷에 첨부되며, 이 정보는 라우터가 패킷을 올바른 위치로 보내는 데 도움이 된다.&lt;br>
인터넷에 연결하는 모든 장치나 도메인에는 IP 주소가 할당되며, 패킷이 연결된 IP 주소로 전달되면 데이터가 필요한 곳에 도착한다.&lt;br>
패킷이 목적지에 도착하면 IP 와 함께 어떤 전송 프로토콜이 사용되는지에 따라 다르게 처리된다.&lt;br>
모든 IP 데이터 패킷은 특정 정보를 특정 순서로 표시해야 하며 모든 IP 주소는 표준화된 형식을 따른다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/internet_protocol_ip_address_diagram.svg"
alt="Internet Protocol(IP) Address Diagram"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>비연결성: 데이터 전송 전 연결 설정 과정이 없다.&lt;/li>
&lt;li>비신뢰성: 데이터 전송의 신뢰성을 보장하지 않는다.&lt;/li>
&lt;li>단편화(Fragmentation): 큰 패킷을 작은 단위로 나누어 전송할 수 있다&lt;/li>
&lt;li>라우팅(Routing): 목적지까지의 경로를 결정하여 패킷을 전달한다&lt;/li>
&lt;/ol>
&lt;h3>IP 패킷 구조&lt;/h3>&lt;p>IP 패킷은 헤더와 데이터로 구성된다.&lt;br>
주요 헤더 필드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>버전&lt;/li>
&lt;li>헤더 길이&lt;/li>
&lt;li>서비스 유형&lt;/li>
&lt;li>전체 길이&lt;/li>
&lt;li>식별자&lt;/li>
&lt;li>플래그&lt;/li>
&lt;li>프래그먼트 오프셋&lt;/li>
&lt;li>TTL (Time To Live)&lt;/li>
&lt;li>프로토콜&lt;/li>
&lt;li>헤더 체크섬&lt;/li>
&lt;li>출발지 IP 주소&lt;/li>
&lt;li>목적지 IP 주소&lt;/li>
&lt;/ul>
&lt;h3>IP의 한계와 보완&lt;/h3>&lt;p>IP의 주요 한계점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>신뢰성 부족: 패킷 손실, 중복, 순서 뒤바뀜 등의 문제가 발생할 수 있다.&lt;/li>
&lt;li>흐름 제어 부재: 수신자의 처리 능력을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;li>혼잡 제어 부재: 네트워크 상황을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;/ol>
&lt;p>이러한 한계는 상위 계층 프로토콜인 TCP에 의해 보완된다.&lt;/p>
&lt;h3>IP 라우팅&lt;/h3>&lt;p>IP 라우팅은 패킷이 목적지까지 도달하는 경로를 결정하는 과정.&lt;br>
주요 개념은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블: 목적지 네트워크와 다음 홉 정보를 저장한다.&lt;/li>
&lt;li>최단 경로 알고리즘: 최적의 경로를 결정하는 데 사용된다.&lt;/li>
&lt;li>BGP (Border Gateway Protocol): 자율 시스템 간의 라우팅에 사용된다.&lt;/li>
&lt;/ol>
&lt;h3>IP와 관련된 주요 프로토콜&lt;/h3>&lt;ol>
&lt;li>ARP (Address Resolution Protocol): IP 주소를 MAC 주소로 변환한다.&lt;/li>
&lt;li>ICMP (Internet Control Message Protocol): 네트워크 상태 및 오류 보고에 사용된다.&lt;/li>
&lt;li>DHCP (Dynamic Host Configuration Protocol): IP 주소를 동적으로 할당한다.&lt;/li>
&lt;/ol>
&lt;h3>IP 보안&lt;/h3>&lt;p>IPSec (Internet Protocol Security)는 IP 계층에서 보안을 제공하는 프로토콜 집합이다.&lt;br>
주요 기능은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>데이터 무결성&lt;/li>
&lt;li>데이터 기밀성&lt;/li>
&lt;li>인증&lt;/li>
&lt;/ol>
&lt;p>주요 특징:&lt;/p>
&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>두 가지 주요 프로토콜(AH, ESP)을 사용한다.&lt;/li>
&lt;li>두 가지 동작 모드(전송 모드, 터널 모드)를 지원한다.&lt;/li>
&lt;li>키 관리 및 보안 연관(SA) 협상을 위해 IKE 프로토콜을 사용한다.&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>강력한 보안: 암호화와 인증을 통해 데이터를 보호한다.&lt;/li>
&lt;li>유연성: 다양한 네트워크 환경에서 사용 가능하다다.&lt;/li>
&lt;li>투명성: 상위 계층 애플리케이션에 영향을 주지 않고 적용 가능하다.&lt;/li>
&lt;li>VPN 구현에 적합: 안전한 원격 접속을 제공한다.&lt;/li>
&lt;li>표준화: 다양한 벤더 간 상호 운용성을 제공한다.&lt;/li>
&lt;/ol>
&lt;p>동작 방식:&lt;/p>
&lt;ol>
&lt;li>트래픽 식별: IPSec 정책에 따라 보호가 필요한 트래픽을 식별한다.&lt;/li>
&lt;li>SA(Security Association) 협상: IKE 프로토콜을 사용하여 통신 당사자 간 보안 매개변수를 협상한다.&lt;/li>
&lt;li>데이터 처리:
&lt;ul>
&lt;li>AH(Authentication Header): 데이터 무결성과 인증을 제공한다.&lt;/li>
&lt;li>ESP(Encapsulating Security Payload): 암호화, 무결성, 인증을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패킷 전송: 암호화 및 인증된 패킷을 목적지로 전송한다.&lt;/li>
&lt;li>수신 및 처리: 수신 측에서 패킷을 복호화하고 인증한다.&lt;/li>
&lt;/ol>
&lt;p>IPSec의 주요 프로토콜:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>AH (Authentication Header)&lt;/p>
&lt;ul>
&lt;li>데이터 무결성, 데이터 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 헤더와 페이로드를 인증합니다.&lt;/li>
&lt;li>암호화는 제공하지 않습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ESP (Encapsulating Security Payload)&lt;/p>
&lt;ul>
&lt;li>데이터 기밀성(암호화), 무결성, 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 데이터그램 부분만 인증합니다.&lt;/li>
&lt;li>암호화 기능을 제공합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>IKE (Internet Key Exchange)&lt;/p>
&lt;ul>
&lt;li>SA(Security Association) 협상과 키 교환을 위한 프로토콜이다.&lt;/li>
&lt;li>AH와 ESP에서 사용할 암호화 알고리즘, 키 등의 보안 매개변수를 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>IP Address(IP 주소)&lt;/h3>&lt;p>IP 주소(IP Address)는 인터넷 프로토콜(Internet Protocol)에서 컴퓨터 네트워크에 연결된 장치들을 식별하기 위해 사용되는 고유한 주소이다.&lt;br>
네트워크 상의 장치를 고유하게 식별하는 숫자 체계로 데이터 패킷의 출발지와 목적지를 지정하는 데 사용된다.&lt;/p>
&lt;p>네트워크에 연결된 장치가 라우터이든, 일반 서버이든, 모든 기계는 이 특수한 번호를 가지고 있어야 한다. 이 번호를 이용하여 발신자를 대신하여 메시지가 전송되고 수신자를 향하여 예정된 목적지로 전달된다. 각 IP 패킷에는 패킷을 보내는 장치 또는 도메인의 IP 주소와 대상 수신자의 IP 주소가 모두 포함된다. IP Address 는 IPv4 와 IPv6 중 어떤 프로토콜을 사용하는지에 따라 형식이 다르다.&lt;/p>
&lt;p>IP 주소는 인터넷과 네트워크 통신의 근간을 이루는 중요한 요소로, 효율적인 데이터 전송과 네트워크 관리를 가능하게 한다.&lt;/p>
&lt;h4>IPv4 와 IPv6&lt;/h4>&lt;p>인터넷 프로토콜 (IP) 주소 지정 시스템의 두 가지 버전이다.&lt;br>
IPv6 는 IPv4 와의 하위 호환성을 제공하지 않아, 웹사이트가 IPv4 에서 실행되고 있지만 장치와 ISP 가 최신 프로토콜을 사용하는 경우 웹사이트에 접속할 수 없다.&lt;br>
두 버전은 동시에 실행할 수 있지만, IPv4 와 IPv6 장치 간의 통신을 용이하게 하기 위해서는 특별한 조치를 구현해야 한다. Network Address Translation(NAT) 과 같은 다른 주소 지정 시스템을 계층화하여 추상화는 것이 있다.&lt;br>
IPv4 인터넷 주소 중 약 5 억 8800 만 개는 예약된 주소이며 나머지는 공개적으로 사용할 수 있다.&lt;/p>
&lt;h5>IPv4 주소의 구성&lt;/h5>&lt;ul>
&lt;li>호스트가 속한 네트워크 주소인 Network Address, 호스트의 주소인 Host Address 로 구성된다.
&lt;ul>
&lt;li>Network Address 는 어떤 네트워크인지를 나타내 다른 네트워크와 구분하는 역할을 한다.&lt;/li>
&lt;li>Host Address 는 해당 네트워크의 어느 호스트인지를 나타내 다른 호스트와 구분하는 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Network Address 가 다르다는 것은 서로 다른 네트워크라는 의미이고, 라우터를 통하지 않고는 통신이 불가능하다는 의미이다.&lt;/li>
&lt;li>서로 다른 네트워크가 라우터를 통해 통신이 가능한 것은 라우터가 IP 주소의 Network Address 를 보고 라우팅하여 데이터를 전송하기 때문이다.&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/anatomy-of-ipv4-address.webp"
alt="Anatomy of IPv4 Address"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/" target="_blank" rel="noopener">https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/&lt;/a> _&lt;/p>
&lt;h5>IPv6 주소의 구성&lt;/h5>&lt;ul>
&lt;li>앞 64 비트를 Network Address 로, 뒤 64 비트를 네트워크에 연결된 랜카드 장비 등에 할당하는 Interface Address 로 활용한다. (RFC 2373 에 의거)&lt;/li>
&lt;li>Network Address 부분인 64 비트 내에서 앞 48 비트는 상위 네트워크 주소로 뒤 16 비트는 하위 네트워크 주소로 활용한다. (RIR(Regional Internet Registry) 간 협의에 기초)&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/whatis-ipv6_address-h.png"
alt="An example of the different segments of an IPv6 address"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.techtarget.com/iotagenda/definition/IPv6-address" target="_blank" rel="noopener">https://www.techtarget.com/iotagenda/definition/IPv6-address&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>주소 체계&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 크기&lt;/td>
&lt;td>32비트 (4바이트)&lt;/td>
&lt;td>128비트 (16바이트)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 공간&lt;/td>
&lt;td>약 43억개 (2^32)&lt;/td>
&lt;td>약 340간(2^128)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 표기법&lt;/td>
&lt;td>점분할 10진수 (예: 192.168.0.1)&lt;/td>
&lt;td>16진수 콜론 표기법 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>루프백 주소&lt;/td>
&lt;td>127.0.0.1&lt;/td>
&lt;td>::1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주소 관리 및 설정&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 구성 방식&lt;/td>
&lt;td>수동 구성, DHCP&lt;/td>
&lt;td>자동 구성(SLAAC), DHCPv6, 수동 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변환 필요성&lt;/td>
&lt;td>NAT 필요 (주소 부족)&lt;/td>
&lt;td>NAT 불필요 (주소 충분)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개인정보 보호&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>임시 주소 할당으로 향상된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로토콜 특성&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>코어 프로토콜&lt;/td>
&lt;td>IPv4&lt;/td>
&lt;td>IPv6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비연결 데이터 전송&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 유형&lt;/td>
&lt;td>유니캐스트, 브로드캐스트, 멀티캐스트&lt;/td>
&lt;td>유니캐스트, 멀티캐스트, 애니캐스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 처리&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60바이트 (가변)&lt;/td>
&lt;td>40바이트 (고정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 체크섬&lt;/td>
&lt;td>필수&lt;/td>
&lt;td>불필요 (상위 계층에서 처리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프래그먼테이션&lt;/td>
&lt;td>라우터와 송신 호스트에서 수행&lt;/td>
&lt;td>송신 호스트에서만 수행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>네트워크 운영&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS 해결 방식&lt;/td>
&lt;td>IPv4 주소 레코드(A)&lt;/td>
&lt;td>IPv6 주소 레코드(AAAA)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 효율성&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;td>단순화된 헤더로 향상된 효율성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>패킷 주소 지정&lt;/td>
&lt;td>복잡한 주소 지정 체계&lt;/td>
&lt;td>단순화된 주소 지정 체계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>Type of Service 필드 사용&lt;/td>
&lt;td>Traffic Class와 Flow Label 필드로 개선된 지원&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>IPv4 와 IPv6 의 Header 비교&lt;/h5>&lt;ul>
&lt;li>IPv4 와 IPv6 의 패킷은 서로 다르게 구성되어 있다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/comparing-ipv4-and-ipv6-headers.png"
alt="IPv4 Header vs IPv6 Header"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>필드&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>Bit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>IP 프로토콜 버전&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IHL&lt;/td>
&lt;td>IHL&lt;/td>
&lt;td>-&lt;/td>
&lt;td>헤더 길이 (IPv6 에서는 고정 길이로 제거됨)&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type of Service&lt;/td>
&lt;td>Type of Service&lt;/td>
&lt;td>Traffic Class&lt;/td>
&lt;td>패킷 우선순위 또는 서비스 유형 지정 지정&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total Length&lt;/td>
&lt;td>Total Length&lt;/td>
&lt;td>Payload Length&lt;/td>
&lt;td>데이터 페이로드 길이&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identification&lt;/td>
&lt;td>Identification&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flags&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fragment Offset&lt;/td>
&lt;td>Fragment Offset&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>13&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TTL&lt;/td>
&lt;td>TTL&lt;/td>
&lt;td>Hop Limit&lt;/td>
&lt;td>패킷의 최대 홉 수&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protocol&lt;/td>
&lt;td>Protocol&lt;/td>
&lt;td>Next Header&lt;/td>
&lt;td>상위 계층 프로토콜 식별&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Header Checksum&lt;/td>
&lt;td>Header Checksum&lt;/td>
&lt;td>-&lt;/td>
&lt;td>오류 검출 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>송신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>수신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Options&lt;/td>
&lt;td>Options&lt;/td>
&lt;td>-&lt;/td>
&lt;td>추가 옵션 (IPv6 에서는 확장 헤더로 대체됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Padding&lt;/td>
&lt;td>Padding&lt;/td>
&lt;td>-&lt;/td>
&lt;td>패딩 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Label&lt;/td>
&lt;td>-&lt;/td>
&lt;td>Flow Label&lt;/td>
&lt;td>플로우 식별을 위한 레이블&lt;/td>
&lt;td>20&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>구조&lt;/h4>&lt;ul>
&lt;li>IPv4: 32비트 주소 체계, 점으로 구분된 4개의 8비트 필드 (예: 192.168.1.1)&lt;/li>
&lt;li>IPv6: 128비트 주소 체계, 16진수로 표현 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/li>
&lt;/ul>
&lt;h4>할당 방식&lt;/h4>&lt;ul>
&lt;li>정적 IP: 수동으로 할당되는 고정 주소&lt;/li>
&lt;li>동적 IP: DHCP 등을 통해 자동으로 할당되는 주소&lt;/li>
&lt;/ul>
&lt;h4>중요성&lt;/h4>&lt;ul>
&lt;li>인터넷 통신의 기본 요소&lt;/li>
&lt;li>네트워크 장치 식별 및 데이터 라우팅에 필수적&lt;/li>
&lt;/ul>
&lt;h4>구성 요소&lt;/h4>&lt;ul>
&lt;li>네트워크 ID: 장치가 속한 네트워크를 식별&lt;/li>
&lt;li>호스트 ID: 해당 네트워크 내의 특정 장치를 식별&lt;/li>
&lt;/ul>
&lt;h4>클래스 체계 (IPv4)&lt;/h4>&lt;p>IPv4 도입 초기에는 클래스 (Class) 를 기준으로 Network Class 와 Host Address 를 나누는 방식을 사용했지만, 클래스 방식의 비효율성으로 인해 현재는 서브넷 마스크 (Subnet mask) 방식을 사용하고 있다.&lt;/p>
&lt;p>네트워크 클래스 (Network Class)는 IP 주소를 체계적으로 분류하고 할당하기 위해 만들어진 시스템으로, IP주소를 특정 범위로 나누어 분류한 체계이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Protocol/IP/visual102-02.jpg"
alt="IPv4주소 구성"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://xn--3e0bx5euxnjje69i70af08bea817g.xn" target="_blank" rel="noopener">https://xn--3e0bx5euxnjje69i70af08bea817g.xn&lt;/a>&amp;ndash;3e0b707e/jsp/resources/ipv4Info.jsp _&lt;/p>
&lt;p>클래스 기준은 IP 주소를 앞에서 8 비트씩 나눈 그룹을 조합하여 Network Address 와 Host Address 를 정한 것이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>클래스&lt;/th>
&lt;th>A&lt;/th>
&lt;th>B&lt;/th>
&lt;th>C&lt;/th>
&lt;th>D&lt;/th>
&lt;th>E&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>네트워크 주소&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>호스트 주소&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>범위&lt;/td>
&lt;td>1.0.0.0 ~ 126.255.255.255&lt;/td>
&lt;td>128.0.0.0 ~ 191.255.255.255&lt;/td>
&lt;td>192.0.0.0 ~ 223.255.255.255&lt;/td>
&lt;td>224.0.0.0 ~ 239.255.255.255&lt;/td>
&lt;td>240.0.0.0 ~ 255.255.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 서브넷 마스크&lt;/td>
&lt;td>255.0.0.0&lt;/td>
&lt;td>255.255.0.0&lt;/td>
&lt;td>255.255.255.0&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사설 IP 주소&lt;/td>
&lt;td>10.0.0.0 ~ 10.255.255.255&lt;/td>
&lt;td>172.16.0.0 ~ 172.31.255.255&lt;/td>
&lt;td>192.168.0.0 ~ 192.168.255.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브로드캐스트 주소&lt;/td>
&lt;td>x.255.255.255&lt;/td>
&lt;td>x.x.255.255&lt;/td>
&lt;td>x.x.x.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특수 용도&lt;/td>
&lt;td>대규모 네트워크&lt;/td>
&lt;td>중규모 네트워크&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>멀티캐스트용&lt;/td>
&lt;td>예약된 주소로 미래에 사용될 용도로 구분해 놓은 네트워크&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>클래스 A:&lt;/p>
&lt;ul>
&lt;li>IP 주소 32 비트 중 앞 8 비트를 Network Address 로, 다음 24 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>제일 첫번째 비트는 클래스 A 의 식별비트인 &lt;code>0&lt;/code> 이 할당되기 때문에 00000000 ~ 01111111 의 번호가 Network Address 로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 A 의 네트워크 부는 0 ~ 127 번호가 할당&lt;/strong>&lt;/li>
&lt;li>Network Address 의 0 과 127 은 예약된 network ID 로 제외된다.&lt;br>
클래스 B:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 16 비트를 Network Address 로, 다음 16 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>맨 앞 2 비트는 클래스 B 의 식별 비트인 &lt;code>10&lt;/code> 으로 할당되기 때문에 10000000 ~ 10111111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 B 의 네트워크 부는 128.0 ~ 191.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 172.16~172.31 은 예약된 network ID 로 제외된다.&lt;br>
클래스 C:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 24 비트를 Network Address 로, 다음 8 비트를 Host Address 를 정한 것&lt;/li>
&lt;li>맨 앞 3 비트는 클래스 C 의 식별 비트인 &amp;lsquo;110&amp;rsquo; 으로 할당되기 때문에 11000000 ~ 11011111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 C 의 네트워크 부는 192.0.0 ~ 255.255.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 192.168.0~192.168.255 은 예약된 network ID 로 제외된다.&lt;/li>
&lt;/ul>
&lt;p>추가 정보:&lt;/p>
&lt;ul>
&lt;li>클래스 A, B, C는 유니캐스트 통신에 사용된다.&lt;/li>
&lt;li>127.0.0.0 ~ 127.255.255.255는 루프백 주소로 사용된다.&lt;/li>
&lt;li>사설 IP 주소는 인터넷에 직접 연결되지 않는 내부 네트워크에서 사용된다.&lt;/li>
&lt;li>현대 네트워크에서는 CIDR(Classless Inter-Domain Routing)을 사용하여 더 유연한 주소 할당이 가능하다.&lt;/li>
&lt;/ul>
&lt;p>주의사항:&lt;/p>
&lt;ul>
&lt;li>클래스 A의 0.0.0.0은 특수 용도로 사용되며, 127.x.x.x는 루프백 주소로 사용된다.&lt;/li>
&lt;li>각 클래스의 네트워크 주소와 브로드캐스트 주소는 호스트 주소로 사용할 수 없다.&lt;/li>
&lt;li>D와 E 클래스는 일반적인 호스트 주소 할당에 사용되지 않는다.&lt;/li>
&lt;/ul>
&lt;h4>종류&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>Public IP&lt;/th>
&lt;th>Private IP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>인터넷에서 직접 접근 가능한 고유한 주소&lt;/td>
&lt;td>로컬 네트워크 내에서 사용되는 내부 주소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>할당 주체&lt;/td>
&lt;td>ISP(인터넷 서비스 제공자)&lt;/td>
&lt;td>라우터 또는 네트워크 관리자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>고유성&lt;/td>
&lt;td>인터넷 상에서 전 세계적으로 유일&lt;/td>
&lt;td>로컬 네트워크 내에서만 유일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>접근성&lt;/td>
&lt;td>내부 및 외부에서 접근 가능&lt;/td>
&lt;td>로컬 네트워크 내부에서만 접근 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 범위&lt;/td>
&lt;td>ISP에 의해 할당된 모든 주소&lt;/td>
&lt;td>클래스 A: 10.0.0.0 - 10.255.255.255&lt;br>클래스 B: 172.16.0.0 - 172.31.255.255&lt;br>클래스 C: 192.168.0.0 - 192.168.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인터넷 연결&lt;/td>
&lt;td>직접 인터넷에 연결 가능&lt;/td>
&lt;td>NAT를 통해 인터넷에 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>외부 공격에 더 취약&lt;/td>
&lt;td>외부로부터 직접 접근 불가능하여 상대적으로 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용&lt;/td>
&lt;td>일반적으로 유료&lt;/td>
&lt;td>무료로 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>용도&lt;/td>
&lt;td>서버 호스팅, 원격 접속 등&lt;/td>
&lt;td>가정이나 회사 내부 네트워크 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변경&lt;/td>
&lt;td>고정 또는 동적으로 변경 가능&lt;/td>
&lt;td>로컬 네트워크 내에서 변경 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Public IP (공인 IP)는 사용자의 전체 네트워크에 적용되기에 동일한 인터넷 연결을 사용하는 장치는 IP 주소를 공유하게 된다. 그리고, 인터넷 업체는 공인 IP 주소의 사용자가 누구인지 파악할 수 있기에 공인 IP 주소를 사용하는 경우 인터넷 활동이 추적되고 모니터링될 수 있다.&lt;/p>
&lt;p>Private IP (사설 IP)는 로컬 네트워크에서 할당되며 다른 네트워크의 IP 주소와 중복될 수 있다. 각자의 내부 네트워크에서 사용되기에 다른 네트워크의 IP 주소와 중복되더라도 문제가 없다. 대신 동일한 로컬 네트워크에 연결된 장치에는 같은 사설 IP 주소를 할당할 수 없다. 전 세계에는 수백만 개의 사설 네트워크가 존재하며 사설 네트워크에 연결된 장치에는 다음 사설 IP 대역 내의 IP 주소가 할당된다.&lt;/p>
&lt;h4>Loopback Address (루프백 주소)&lt;/h4>&lt;p>컴퓨터가 자신을 가리키는 데 사용하는 특수 목적의 IP 주소.&lt;/p>
&lt;p>용도:&lt;/p>
&lt;ul>
&lt;li>로컬 시스템 테스트.&lt;/li>
&lt;li>네트워크 소프트웨어 디버깅&lt;/li>
&lt;li>로컬 서버와의 통신.&lt;/li>
&lt;/ul>
&lt;p>특징:&lt;/p>
&lt;ul>
&lt;li>외부로 라우팅되지 않음.&lt;/li>
&lt;li>물리적 네트워크 인터페이스가 필요 없음.&lt;/li>
&lt;li>항상 사용 가능하며 항상 작동 상태임.&lt;/li>
&lt;/ul>
&lt;p>동작 원리:&lt;br>
Loopback Address (루프백 주소) 로 보내진 데이터는 실제로 네트워크로 나가지 않고, 네트워크 스택 내에서 즉시 &lt;strong>Loopback(루프백)&lt;/strong> 되어 다시 수신된다.&lt;/p>
&lt;p>보안:&lt;br>
외부에서 접근할 수 없어 상대적으로 안전함.&lt;/p>
&lt;p>네트워크 구성:&lt;br>
대부분의 운영 체제에서 루프백 인터페이스는 자동으로 구성되며, 별도의 설정이 필요없다.&lt;/p>
&lt;p>루프백 범위:&lt;br>
IPv4 에서 전체 127.0.0.0/8 네트워크가 루프백을 위해 예약되어 있지만, 일반적으로 127.0.0.1 만 사용된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>HATEOAS (Hypermedia As The Engine Of Application State)</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/hateoas/</link><pubDate>Thu, 03 Oct 2024 07:35:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/hateoas/</guid><description>
&lt;h2>HATEOAS (Hypermedia As The Engine Of Application State)&lt;/h2>&lt;p>서버가 클라이언트에게 하이퍼 미디어를 통해 정보를 동적으로 제공해주는 것을 말한다.&lt;br>
RESTful API 설계의 중요한 개념으로, 클라이언트와 서버 간의 동적이고 유연한 상호작용을 가능하게 하는 방식.&lt;br>
하이퍼미디어를 애플리케이션의 상태를 관리하기 위한 메커니즘으로 사용한다. 이는 클라이언트가 서버와 동적으로 상호작용할 수 있도록 하며, API 응답에 관련 리소스에 대한 링크를 포함시키는 방식으로 구현된다.&lt;/p>
&lt;h3>전통적인 API와 HATEOAS API의 차이점&lt;/h3>&lt;p>기존 API:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;orderId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;total&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;pending&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>HATEOAS API:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;orderId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;total&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;pending&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;_links&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;self&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/orders/123&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;cancel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/orders/123/cancel&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;pay&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/orders/123/payment&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;customer&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nt">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/customers/456&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HATEOAS의 작동 방식&lt;/h3>&lt;ol>
&lt;li>서버는 클라이언트의 요청에 대한 응답으로 데이터와 함께 관련된 작업에 대한 링크를 제공한다.&lt;/li>
&lt;li>클라이언트는 이러한 링크를 통해 다음에 수행할 수 있는 작업을 동적으로 파악할 수 있다.&lt;/li>
&lt;li>이를 통해 클라이언트는 API의 구조에 대한 사전 지식 없이도 서버와 상호작용할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>HATEOAS 구현 방법&lt;/h3>&lt;p>대표적인 HATEOAS 표현 형식:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>HAL (Hypertext Application Language): JSON이나 XML에서 하이퍼링크를 표현하기 위한 간단한 형식.&lt;br>
주요 특징:&lt;/p>
&lt;ul>
&lt;li>리소스와 링크 두 가지 개념으로 구성&lt;/li>
&lt;li>&lt;code>_links&lt;/code> 속성을 사용하여 관련 리소스 링크 제공&lt;/li>
&lt;li>&lt;code>_embedded&lt;/code> 속성으로 관련 리소스 포함 가능&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;_links&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;self&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;/orders/523&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;warehouse&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;/warehouse/56&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;invoice&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;/invoices/873&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;_embedded&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;items&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;_links&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;self&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;/items/1&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Widget&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;price&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mf">9.99&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;total&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mf">30.00&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;currency&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;USD&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;shipped&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>JSON-LD (JSON for Linking Data): JSON-LD는 링크드 데이터를 JSON으로 인코딩하는 방법.&lt;br>
주요 특징:&lt;/p>
&lt;ul>
&lt;li>&lt;code>@context&lt;/code>를 사용하여 용어 정의&lt;/li>
&lt;li>&lt;code>@id&lt;/code>로 리소스 식별&lt;/li>
&lt;li>&lt;code>@type&lt;/code>으로 리소스 유형 지정&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;@context&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;https://schema.org&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;@type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Person&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;@id&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;https://example.com/person/123&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Jane Doe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;jobTitle&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Professor&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;telephone&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;(425) 123-4567&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;url&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;https://www.example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Siren: 엔티티를 표현하기 위한 하이퍼미디어 명세.&lt;br>
주요 특징:&lt;/p>
&lt;ul>
&lt;li>엔티티, 액션, 링크 구조 제공&lt;/li>
&lt;li>&lt;code>class&lt;/code> 속성으로 의미론적 분류 지원&lt;/li>
&lt;li>&lt;code>actions&lt;/code> 속성으로 상태 전이 정의&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;class&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;order&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;properties&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;orderNumber&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;itemCount&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;pending&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;entities&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;class&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;items&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;collection&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;http://x.io/rels/order-items&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://api.x.io/orders/42/items&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;actions&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;add-item&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Add Item&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://api.x.io/orders/42/items&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;fields&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;orderNumber&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;hidden&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;42&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;productCode&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;text&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;quantity&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;number&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;links&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;self&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://api.x.io/orders/42&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;previous&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://api.x.io/orders/41&amp;#34;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;next&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://api.x.io/orders/43&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Collection+JSON: Collection+JSON은 읽기/쓰기를 지원하는 JSON 기반 하이퍼미디어 타입.&lt;br>
주요 특징:&lt;/p>
&lt;ul>
&lt;li>collection 객체 안에 여러 항목 포함&lt;/li>
&lt;li>queries와 template 제공&lt;/li>
&lt;li>items 배열에 데이터와 링크 포함&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;collection&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://example.org/friends/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;links&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;feed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://example.org/friends/rss&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;items&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://example.org/friends/jdoe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;full-name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;J. Doe&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;jdoe@example.org&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;links&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;blog&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://examples.org/blogs/jdoe&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;queries&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;rel&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;search&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;href&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;http://example.org/friends/search&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;prompt&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Search&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;template&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;full-name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;email&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;blog&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h3>HATEOAS의 주요 장점&lt;/h3>&lt;ol>
&lt;li>
&lt;p>클라이언트 독립성&lt;/p>
&lt;ul>
&lt;li>서버가 제공하는 링크를 통해 클라이언트는 동적으로 다음 가능한 액션을 발견할 수 있다.&lt;/li>
&lt;li>클라이언트 코드를 하드코딩된 URL에서 해방시켜 준다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>느슨한 결합&lt;/p>
&lt;ul>
&lt;li>서버와 클라이언트 간의 강한 의존성을 줄인다.&lt;/li>
&lt;li>API 엔드포인트가 변경되어도 클라이언트 코드를 최소한으로 수정할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>자가 설명적인 API&lt;/p>
&lt;ul>
&lt;li>각 리소스는 그 자체로 어떤 작업을 수행할 수 있는지 설명한다.&lt;/li>
&lt;li>API 문서를 읽지 않아도 직관적으로 API를 탐색할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>HATEOAS를 구현할 때의 고려사항&lt;/h3>&lt;ol>
&lt;li>링크 관계&lt;br>
명명 표준 관계 타입(self, next, prev 등)을 사용하고, 커스텀 관계는 명확한 의미를 가지도록 정의한다.&lt;/li>
&lt;li>응답 크기&lt;br>
너무 많은 링크를 포함하면 응답 크기가 커질 수 있으므로, 실제로 필요한 링크만 포함하도록 한다.&lt;/li>
&lt;li>캐싱 전략&lt;br>
링크가 자주 변경되는 경우, 적절한 캐싱 전략을 수립해야 한다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>WebRTC(Web Real-Time Communication) API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/webrtc-api/</link><pubDate>Thu, 03 Oct 2024 06:37:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/webrtc-api/</guid><description>
&lt;h2>WebRTC(Web Real-Time Communication) API&lt;/h2>&lt;p>WebRTC(Web Real-Time Communication) API는 웹 브라우저 간에 플러그인 없이 실시간 통신을 가능하게 하는 기술.&lt;br>
웹 브라우저 간에 실시간으로 음성, 영상, 데이터를 직접 주고받을 수 있게 해주는 기술로 기존의 웹 통신이 항상 서버를 거쳐야 했던 것과 달리, WebRTC는 브라우저 간 직접 통신(P2P)을 가능하게 한다.&lt;/p>
&lt;h3>핵심 구성 요소&lt;/h3>&lt;p>WebRTC(Web Real-Time Communication) API는 웹 브라우저 간에 플러그인 없이 실시간 통신을 가능하게 하는 기술입니다. WebRTC API는 주로 세 가지 핵심 구성 요소로 이루어져 있습니다:&lt;/p>
&lt;h4>MediaStream (getUserMedia) API&lt;/h4>&lt;p>사용자의 카메라와 마이크에 접근하여 오디오 및 비디오 스트림을 캡처한다.&lt;/p>
&lt;ul>
&lt;li>주요 메서드: navigator.mediaDevices.getUserMedia()&lt;/li>
&lt;li>기능: 미디어 장치 선택, 스트림 처리 및 조작&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">getMediaAccess&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 카메라와 마이크 접근 요청
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mediaDevices&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserMedia&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">audio&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 비디오 엘리먼트에 스트림 연결
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">videoElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srcObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">stream&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;미디어 접근 실패:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>RTCPeerConnection API&lt;/h4>&lt;p>브라우저 간 피어 투 피어 연결을 설정하고 관리한다.&lt;/p>
&lt;ul>
&lt;li>주요 기능:
&lt;ul>
&lt;li>신호 처리&lt;/li>
&lt;li>코덱 처리&lt;/li>
&lt;li>NAT 통과 및 방화벽 우회&lt;/li>
&lt;li>암호화된 데이터 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>연결 설정, 미디어 스트림 전송, ICE(Interactive Connectivity Establishment) 프로세스 처리&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">VideoChatConnection&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// STUN 서버 설정
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">configuration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">iceServers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">urls&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;stun:stun.l.google.com:19302&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// PeerConnection 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">RTCPeerConnection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">configuration&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 이벤트 핸들러 설정
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onicecandidate&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleICECandidate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ontrack&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleTrackEvent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">createOffer&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">offer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createOffer&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setLocalDescription&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">offer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">offer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;오퍼 생성 실패:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>RTCDataChannel API&lt;/h4>&lt;p>피어 간 임의의 데이터를 양방향으로 전송할 수 있게 한다.&lt;/p>
&lt;ul>
&lt;li>특징:
&lt;ul>
&lt;li>낮은 지연 시간&lt;/li>
&lt;li>신뢰성 있는 데이터 전송 (선택적)&lt;/li>
&lt;li>WebSocket과 유사한 API 구조&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">setupDataChannel&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">dataChannel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createDataChannel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;chatChannel&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataChannel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onopen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;데이터 채널이 열렸습니다.&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dataChannel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onmessage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">event&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;메시지 수신:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>WebRTC의 연결 수립 과정&lt;/h3>&lt;ol>
&lt;li>
&lt;p>시그널링(Signaling):&lt;br>
WebRTC 연결을 설정하기 위한 초기 정보 교환 과정.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">SignalingService&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">exchangeSignalingInfo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">offer&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 시그널링 서버로 오퍼 전송
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">fetch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/signaling&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">method&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">offer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 응답 처리
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">answer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">response&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">answer&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>ICE(Interactive Connectivity Establishment):&lt;br>
네트워크 연결을 위한 최적의 경로를 찾는 과정.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">handleICECandidate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">candidate&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ICE 후보를 상대방에게 전송
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">sendToSignalingServer&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;candidate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">candidate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">candidate&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>실제 활용 예시&lt;/h3>&lt;ol>
&lt;li>
&lt;p>화상 채팅 애플리케이션:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">VideoChat&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">remoteStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">RTCPeerConnection&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">async&lt;/span> &lt;span class="nx">startChat&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 로컬 미디어 스트림 획득
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mediaDevices&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getUserMedia&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">video&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">audio&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 스트림을 피어 커넥션에 추가
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStream&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getTracks&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">forEach&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">track&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">peerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addTrack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">track&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStream&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 비디오 엘리먼트에 연결
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">localVideo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">srcObject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">localStream&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>파일 공유 애플리케이션:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">class&lt;/span> &lt;span class="nx">FileShare&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">constructor&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataChannel&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fileReader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">FileReader&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">sendFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fileReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onload&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dataChannel&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fileReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 파일을 청크로 나누어 전송
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">chunkSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">16384&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">chunks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ceil&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">size&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nx">chunkSize&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">chunks&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">chunkSize&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">size&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">chunkSize&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">chunk&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">end&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fileReader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readAsArrayBuffer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>WebRTC의 보안 특징&lt;/h3>&lt;ol>
&lt;li>
&lt;p>암호화:&lt;br>
모든 WebRTC 통신은 자동으로 암호화.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>권한 관리:&lt;br>
사용자의 명시적인 허가가 필요.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">requestPermissions&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 사용자에게 권한 요청
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">permissions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;camera&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">permissions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;microphone&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;권한 요청 실패:&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3>참고 및 출처&lt;/h3></description></item><item><title>GraphQL API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/graphql-api/</link><pubDate>Thu, 03 Oct 2024 03:22:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/graphql-api/</guid><description>
&lt;h2>GraphQL API&lt;/h2>&lt;p>GraphQL은 API를 위한 쿼리 언어이자 서버 측 런타임으로, 클라이언트가 필요한 데이터를 정확하게 요청하고 받을 수 있게 해주는 강력한 도구.&lt;br>
2012년 Facebook에서 개발되어 2015년 공개된 GraphQL은 REST API의 한계를 극복하고자 설계되었습니다.&lt;/p>
&lt;h3>GraphQL의 주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>선언적 데이터 fetching&lt;/strong>: 클라이언트가 필요한 데이터의 구조를 정확히 명시할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>단일 엔드포인트&lt;/strong>: 모든 요청이 하나의 엔드포인트로 전송됩니다.&lt;/li>
&lt;li>&lt;strong>강력한 타입 시스템&lt;/strong>: 스키마를 통해 데이터 구조를 명확히 정의합니다.&lt;/li>
&lt;li>&lt;strong>실시간 업데이트&lt;/strong>: Subscription을 통해 실시간 데이터 업데이트를 지원합니다.&lt;/li>
&lt;li>&lt;strong>효율적인 데이터 전송&lt;/strong>: Over-fetching과 Under-fetching 문제를 해결합니다.&lt;/li>
&lt;/ol>
&lt;h3>GraphQL의 주요 구성 요소&lt;/h3>&lt;ol>
&lt;li>
&lt;p>스키마 (Schema)&lt;br>
GraphQL API의 타입 시스템을 정의합니다.&lt;br>
사용 가능한 쿼리, 뮤테이션, 구독 및 사용자 정의 타입을 명시합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">User&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">ID&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 느낌표(!)는 필수 필드를 의미&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">posts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nc">Post&lt;/span>&lt;span class="p">!]!&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Post 배열을 의미&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>쿼리 (Query)&lt;br>
데이터를 읽는 작업을 수행합니다.&lt;br>
REST API의 GET 요청과 유사합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 쿼리 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;123&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">name&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">email&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">posts&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">title&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">likes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>뮤테이션 (Mutation)&lt;br>
데이터를 생성, 수정, 삭제하는 작업을 수행합니다.&lt;br>
REST API의 POST, PUT, DELETE 요청과 유사합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 뮤테이션 예시&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">mutation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">createPost&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">input&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;GraphQL 소개&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">content&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;GraphQL은 혁신적인 API 기술입니다.&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nc">title&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="py">likes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>구독 (Subscription)&lt;br>
실시간 데이터 업데이트를 위한 기능을 제공합니다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>리졸버 (Resolver)&lt;br>
각 필드의 데이터를 어떻게 가져올지 정의하는 함수입니다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2>GraphQL의 장점&lt;/h2>&lt;ol>
&lt;li>&lt;strong>유연성&lt;/strong>: 클라이언트가 필요한 데이터만 요청할 수 있어 효율적입니다.&lt;/li>
&lt;li>&lt;strong>성능 향상&lt;/strong>: 한 번의 요청으로 여러 리소스의 데이터를 가져올 수 있습니다.&lt;/li>
&lt;li>&lt;strong>강력한 개발자 도구&lt;/strong>: GraphiQL과 같은 도구를 통해 API를 쉽게 탐색하고 테스트할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>버전 관리 용이성&lt;/strong>: 필드를 추가하거나 제거할 때 기존 쿼리에 영향을 주지 않습니다.&lt;/li>
&lt;li>&lt;strong>타입 안정성&lt;/strong>: 강력한 타입 시스템으로 런타임 오류를 줄일 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h2>GraphQL 구현 예시 (Node.js)&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">graphqlHTTP&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express-graphql&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">buildSchema&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;graphql&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 스키마 정의
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">schema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">buildSchema&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> type Query {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> hello: String
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> user(id: Int!): User
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> type User {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> id: Int
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> name: String
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> age: Int
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 리졸버 함수
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">root&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hello&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="s1">&amp;#39;Hello, GraphQL!&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 실제로는 데이터베이스에서 조회하는 로직이 들어갑니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">age&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">use&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/graphql&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">graphqlHTTP&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">schema&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">schema&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">rootValue&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">root&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">graphiql&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4000&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;GraphQL 서버가 http://localhost:4000/graphql 에서 실행 중입니다.&amp;#39;&lt;/span>&lt;span class="p">));&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 예시에서는 Express.js와 express-graphql을 사용하여 간단한 GraphQL 서버를 구현했습니다. 실제 프로덕션 환경에서는 Apollo Server와 같은 더 강력한 도구를 사용하는 것이 일반적입니다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>gRPC API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/grpc-api/</link><pubDate>Thu, 03 Oct 2024 03:22:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/grpc-api/</guid><description>
&lt;h2>gRPC API&lt;/h2>&lt;p> gRPC(gRPC Remote Procedure Call)는 Google에서 개발한 오픈소스 원격 프로시저 호출(RPC) 시스템.&lt;br>
 이 시스템은 효율적이고 빠른 서비스 간 통신을 제공하며, 다양한 프로그래밍 언어와 플랫폼에서 사용할 수 있다.&lt;/p>
&lt;p>gRPC는 특히 다음과 같은 상황에서 유용하다:&lt;/p>
&lt;ol>
&lt;li>마이크로서비스 아키텍처
&lt;ul>
&lt;li>서비스 간 효율적인 통신&lt;/li>
&lt;li>강력한 타입 안정성&lt;/li>
&lt;li>뛰어난 성능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>실시간 통신이 필요한 시스템
&lt;ul>
&lt;li>채팅 애플리케이션&lt;/li>
&lt;li>실시간 모니터링&lt;/li>
&lt;li>게임 서버&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>모바일 애플리케이션
&lt;ul>
&lt;li>효율적인 데이터 전송&lt;/li>
&lt;li>배터리 사용량 최적화&lt;/li>
&lt;li>네트워크 대역폭 절약&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>gRPC의 주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Protocol Buffers 사용&lt;/strong>: gRPC는 데이터 직렬화를 위해 Protocol Buffers를 사용합니다. 이는 JSON이나 XML보다 더 작고 빠른 데이터 포맷을 제공합니다.&lt;/li>
&lt;li>&lt;strong>HTTP/2 기반&lt;/strong>: HTTP/2 프로토콜을 사용하여 높은 성능과 낮은 지연 시간을 제공합니다.&lt;/li>
&lt;li>&lt;strong>양방향 스트리밍&lt;/strong>: 클라이언트와 서버 간의 양방향 스트리밍을 지원하여 실시간 데이터 교환이 가능합니다.&lt;/li>
&lt;li>&lt;strong>다양한 언어 지원&lt;/strong>: Java, Python, Go, C++, Ruby 등 다양한 프로그래밍 언어를 지원합니다.&lt;/li>
&lt;li>&lt;strong>강력한 타입 시스템&lt;/strong>: Protocol Buffers를 통해 강력한 타입 시스템을 제공하여 타입 안정성을 보장합니다.&lt;/li>
&lt;/ol>
&lt;h3>gRPC 작동 방식&lt;/h3>&lt;ol>
&lt;li>&lt;strong>서비스 정의&lt;/strong>:.proto 파일에 서비스와 메시지 구조를 정의합니다.&lt;/li>
&lt;li>&lt;strong>코드 생성&lt;/strong>: Protocol Buffer 컴파일러를 사용하여 서버와 클라이언트 코드를 자동으로 생성합니다.&lt;/li>
&lt;li>&lt;strong>서버 구현&lt;/strong>: 생성된 코드를 기반으로 서버 비즈니스 로직을 구현합니다.&lt;/li>
&lt;li>&lt;strong>클라이언트 구현&lt;/strong>: 생성된 클라이언트 코드를 사용하여 서버와 통신합니다.&lt;/li>
&lt;/ol>
&lt;h3>gRPC의 통신 유형&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Unary RPC&lt;/strong>: 클라이언트가 단일 요청을 보내고 서버가 단일 응답을 반환합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">GetUser&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Server Streaming RPC&lt;/strong>: 클라이언트가 요청을 보내고 서버가 스트림으로 응답합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">StreamUserActivity&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">UserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">UserActivity&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Client Streaming RPC&lt;/strong>: 클라이언트가 스트림으로 요청을 보내고 서버가 단일 응답을 반환합니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">BulkUpdateUsers&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">UpdateUserRequest&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">BulkUpdateResponse&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Bidirectional Streaming RPC&lt;/strong>: 클라이언트와 서버가 양방향으로 스트림을 주고받습니다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span class="line">&lt;span class="cl">&lt;span class="k">rpc&lt;/span> &lt;span class="n">ChatSession&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">ChatMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">returns&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stream&lt;/span> &lt;span class="n">ChatMessage&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>gRPC의 장점&lt;/h3>&lt;ol>
&lt;li>&lt;strong>높은 성능&lt;/strong>: Protocol Buffers와 HTTP/2를 사용하여 빠른 데이터 전송을 제공합니다.&lt;/li>
&lt;li>&lt;strong>언어 중립성&lt;/strong>: 다양한 프로그래밍 언어를 지원하여 다중 언어 환경에서 사용이 용이합니다.&lt;/li>
&lt;li>&lt;strong>강력한 타입 안정성&lt;/strong>: Protocol Buffers를 통해 데이터 구조를 명확히 정의할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>효율적인 네트워크 사용&lt;/strong>: 이진 직렬화를 통해 네트워크 대역폭을 효율적으로 사용합니다.&lt;/li>
&lt;li>&lt;strong>실시간 통신&lt;/strong>: 양방향 스트리밍을 통해 실시간 데이터 교환이 가능합니다[5].&lt;/li>
&lt;/ol>
&lt;h3>도입할 때 고려해야 할 사항&lt;/h3>&lt;ol>
&lt;li>
&lt;p>브라우저 지원 제한&lt;/p>
&lt;ul>
&lt;li>웹 클라이언트의 경우 gRPC-Web 사용 필요&lt;/li>
&lt;li>프록시 서버 설정 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>학습 곡선&lt;/p>
&lt;ul>
&lt;li>Protocol Buffers 학습 필요&lt;/li>
&lt;li>새로운 도구와 패턴 적응&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>디버깅 복잡성&lt;/p>
&lt;ul>
&lt;li>바이너리 형식으로 인한 가독성 제한&lt;/li>
&lt;li>특수한 디버깅 도구 필요&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>RESTful API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/restful-api/</link><pubDate>Thu, 03 Oct 2024 03:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/restful-api/</guid><description>
&lt;h2>RESTful API(Representational State Transfer API)&lt;/h2>&lt;p>웹 서비스를 설계하고 구현하기 위한 아키텍처 스타일&lt;br>
RESTful API는 HTTP 프로토콜을 기반으로 하며, 클라이언트와 서버 간의 통신을 위한 표준화된 방식을 제공한다.&lt;/p>
&lt;h3>RESTful API의 주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>자원 중심 구조&lt;/strong>: URI를 통해 자원을 명확하게 표현합니다.&lt;/li>
&lt;li>&lt;strong>HTTP 메서드 활용&lt;/strong>: GET, POST, PUT, DELETE 등의 HTTP 메서드를 사용하여 자원에 대한 CRUD 작업을 수행합니다.&lt;/li>
&lt;li>&lt;strong>무상태성(Stateless)&lt;/strong>: 각 요청은 독립적이며, 서버는 클라이언트의 상태를 저장하지 않습니다.&lt;/li>
&lt;li>&lt;strong>균일한 인터페이스&lt;/strong>: 일관된 방식으로 자원에 접근할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>설계 원칙&lt;/h3>&lt;ol>
&lt;li>&lt;strong>자원 식별&lt;/strong>: URI를 통해 자원을 명확하게 식별합니다.&lt;/li>
&lt;li>&lt;strong>HTTP 메서드 사용&lt;/strong>: 적절한 HTTP 메서드를 사용하여 자원에 대한 작업을 수행합니다.&lt;/li>
&lt;li>&lt;strong>자체 설명적 메시지&lt;/strong>: 요청과 응답은 자체적으로 이해할 수 있어야 합니다.&lt;/li>
&lt;li>&lt;strong>HATEOAS(Hypermedia as the Engine of Application State)&lt;/strong>: 응답에 관련 리소스의 링크를 포함합니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 제약 조건&lt;/h3>&lt;ol>
&lt;li>&lt;strong>클라이언트-서버 구조를 통해 관심사를 분리합니다&lt;/strong>. 이는 클라이언트와 서버가 독립적으로 발전할 수 있게 해줍니다. 예를 들어, 서버는 데이터 저장 방식을 변경할 수 있고, 클라이언트는 사용자 인터페이스를 개선할 수 있습니다.&lt;/li>
&lt;li>&lt;strong>무상태성(Stateless)을 유지합니다&lt;/strong>. 각 요청은 이전 요청과 독립적이며, 서버는 클라이언트의 상태를 저장하지 않습니다. 이는 시스템의 확장성을 높여주지만, 매 요청마다 필요한 모든 정보를 포함해야 한다는 의미이기도 합니다.&lt;/li>
&lt;li>&lt;strong>캐시 가능성을 제공합니다&lt;/strong>. HTTP의 캐싱 메커니즘을 활용하여 성능을 개선할 수 있습니다. 예를 들어, 자주 변경되지 않는 사용자 프로필 이미지는 클라이언트에서 캐시할 수 있습니다.&lt;/li>
&lt;/ol>
&lt;h3>RESTful API 구현 예시&lt;/h3>&lt;p>다음은 Node.js와 Express.js를 사용한 간단한 RESTful API 예제입니다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">express&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;express&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">express&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">port&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 사용자 데이터 (예시)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">users&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;John Doe&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Jane Smith&amp;#39;&lt;/span> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 모든 사용자 조회
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">users&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 특정 사용자 조회
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/users/:id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">parseInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">userId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 새로운 사용자 생성
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">post&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/users&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">newUser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">newUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">201&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">newUser&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 사용자 정보 업데이트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/users/:id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">parseInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">userId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 사용자 삭제
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/users/:id&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">res&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">parseInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">userIndex&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">findIndex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">user&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="nx">userId&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">userIndex&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">users&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">userIndex&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sendStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">204&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">res&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">404&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">json&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">error&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;User not found&amp;#39;&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">listen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`Server is running on http://localhost:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>이 예제는 사용자 정보를 관리하는 간단한 RESTful API를 구현한 것입니다. 각 엔드포인트는 특정 HTTP 메서드와 연결되어 있으며, 자원(사용자)에 대한 CRUD 작업을 수행합니다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>SOAP API</title><link>https://buenhyden.github.io/posts/networking-and-communications/apis/soap-api/</link><pubDate>Thu, 03 Oct 2024 03:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/apis/soap-api/</guid><description>
&lt;h2>SOAP API&lt;/h2>&lt;p>SOAP(Simple Object Access Protocol) API는 XML 기반의 메시지 교환 프로토콜.&lt;br>
분산 환경에서 데이터를 교환하기 위해 설계된 웹 서비스 통신 방식.&lt;/p>
&lt;h3>SOAP API의 주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>XML 기반&lt;/strong>: 모든 SOAP 메시지는 XML 형식으로 구성됩니다.&lt;/li>
&lt;li>&lt;strong>프로토콜 독립성&lt;/strong>: HTTP, SMTP 등 다양한 프로토콜을 통해 전송될 수 있습니다.&lt;/li>
&lt;li>&lt;strong>표준화&lt;/strong>: 잘 정의된 표준을 따르며, 이는 다양한 플랫폼과 언어 간의 호환성을 보장합니다.&lt;/li>
&lt;li>&lt;strong>보안성&lt;/strong>: WS-Security와 같은 웹 서비스 보안 표준을 지원합니다.&lt;/li>
&lt;/ol>
&lt;h3>SOAP 메시지 구조&lt;/h3>&lt;p>SOAP 메시지는 다음과 같은 요소로 구성됩니다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Envelope&lt;/strong>: 메시지의 시작과 끝을 정의합니다.&lt;/li>
&lt;li>&lt;strong>Header&lt;/strong>: 선택적 요소로, 인증, 트랜잭션 관리 등의 메타데이터를 포함합니다.&lt;/li>
&lt;li>&lt;strong>Body&lt;/strong>: 실제 데이터를 포함하는 필수 요소입니다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ul>
&lt;li>높은 보안성과 신뢰성&lt;/li>
&lt;li>복잡한 비즈니스 로직 처리에 적합&lt;/li>
&lt;li>엄격한 데이터 타입 검사&lt;/li>
&lt;/ul>
&lt;h3>단점&lt;/h3>&lt;ul>
&lt;li>메시지 크기가 크고 처리 속도가 상대적으로 느림&lt;/li>
&lt;li>구현이 복잡하고 학습 곡선이 높음&lt;/li>
&lt;/ul>
&lt;h3>SOAP API 동작 방식&lt;/h3>&lt;ol>
&lt;li>서비스 제공자가 WSDL(Web Services Description Language)을 통해 서비스를 정의하고 UDDI에 등록합니다.&lt;/li>
&lt;li>서비스 사용자는 UDDI에서 원하는 서비스를 검색하고 WSDL을 다운로드합니다.&lt;/li>
&lt;li>WSDL을 기반으로 SOAP 메시지를 작성하여 HTTP 등을 통해 서비스를 요청합니다.&lt;/li>
&lt;li>서비스 제공자는 요청을 처리하고 결과를 SOAP 메시지로 반환합니다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Media Access Control Address (MAC Address)</title><link>https://buenhyden.github.io/posts/networking-and-communications/media-access-control-address/</link><pubDate>Wed, 02 Oct 2024 12:19:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/media-access-control-address/</guid><description>
&lt;h2>Media Access Control Address(MAC Address)&lt;/h2>&lt;p>네트워크 장비를 식별하기 위한 고유한 하드웨어 주소.&lt;/p>
&lt;h3>구조&lt;/h3>&lt;p>48비트(6바이트) 길이의 주소로, 16진수 형식으로 표현된다.&lt;br>
주로 6개의 2자리 16진수 그룹으로 표시되며, 콜론(:), 하이픈(-), 또는 점(.)으로 구분된다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">MACAddress&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">address&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># MAC 주소 예시: &amp;#34;00:1A:2B:3C:4D:5E&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">oui&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">address&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># 조직 고유 식별자 (앞 3바이트)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nic&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">address&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">:]&lt;/span> &lt;span class="c1"># 네트워크 인터페이스 식별자 (뒤 3바이트)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>MAC 주소의 첫 24비트(3바이트)는 OUI(Organizationally Unique Identifier)로, IEEE에서 제조업체에 할당하는 고유 번호&lt;/li>
&lt;li>나머지 24비트는 제조업체가 각 장치에 할당하는 고유 번호.&lt;/li>
&lt;/ul>
&lt;h3>용도&lt;/h3>&lt;ul>
&lt;li>로컬 네트워크 내에서 장치를 고유하게 식별한다.&lt;/li>
&lt;li>데이터 링크 계층(OSI 모델의 2계층)에서 사용된다.&lt;/li>
&lt;li>네트워크 통신에서 데이터 패킷의 송신자와 수신자를 식별한다.&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>제조업체에 의해 할당되며, 전 세계적으로 고유하다.&lt;/li>
&lt;li>하드웨어에 고정되어 있어 일반적으로 변경할 수 없다.&lt;/li>
&lt;li>LAN 환경에서 장치 간 통신에 사용된다.&lt;/li>
&lt;/ul>
&lt;h3>IP 주소와의 차이&lt;/h3>&lt;ul>
&lt;li>MAC 주소는 물리적 주소로, 로컬 네트워크 내에서만 사용된다.&lt;/li>
&lt;li>IP 주소는 논리적 주소로, 인터넷 상에서 전역적으로 사용된다.&lt;/li>
&lt;/ul>
&lt;h3>기능&lt;/h3>&lt;ul>
&lt;li>네트워크 진단 및 문제 해결에 사용된다.&lt;/li>
&lt;li>네트워크 보안(MAC 주소 필터링 등)에 활용될 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>MAC 주소의 종류&lt;/h3>&lt;h4>유니캐스트 주소&lt;/h4>&lt;p>특정 단일 장치를 위한 주소.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">send_unicast&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 특정 장치로만 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">target_mac&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;00:1A:2B:3C:4D:5E&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">send_to_specific_device&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">target_mac&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>멀티캐스트 주소&lt;/h4>&lt;p>특정 그룹의 장치들을 위한 주소.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">send_multicast&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 첫 번째 옥텟의 최하위 비트가 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">multicast_mac&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;01:00:5E:00:00:01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">send_to_group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">multicast_mac&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>브로드캐스트 주소&lt;/h4>&lt;p>네트워크의 모든 장치를 위한 주소.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">send_broadcast&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 모든 비트가 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">broadcast_mac&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;FF:FF:FF:FF:FF:FF&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">send_to_all&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">broadcast_mac&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>MAC 주소의 실제 활용&lt;/h3>&lt;ol>
&lt;li>
&lt;p>네트워크 스위칭:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">switch_operation&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># MAC 주소 테이블 관리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mac_table&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">learn_mac_address&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mac&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mac_table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mac&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">port&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">forward_frame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dest_mac&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">dest_mac&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">mac_table&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">mac_table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">dest_mac&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;flood&amp;#34;&lt;/span> &lt;span class="c1"># 모든 포트로 전송&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>보안 필터링:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">mac_filtering&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">allowed_macs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;00:1A:2B:3C:4D:5E&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;AA:BB:CC:DD:EE:FF&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">check_access&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mac&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">mac&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">allowed_macs&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>MAC 주소와 관련된 주요 개념&lt;/h3>&lt;ol>
&lt;li>
&lt;p>MAC 주소 테이블:&lt;br>
네트워크 스위치가 유지하는 MAC 주소와 포트 매핑 정보.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ARP(Address Resolution Protocol):&lt;br>
IP 주소를 MAC 주소로 변환하는 프로토콜.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">arp_process&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># IP 주소로 MAC 주소 찾기&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">get_mac_by_ip&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">ip_in_arp_table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">arp_table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">send_arp_request&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ip_address&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">wait_for_arp_reply&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>MAC 주소의 한계와 해결방안&lt;/h3>&lt;ol>
&lt;li>
&lt;p>규모 확장성:&lt;br>
MAC 주소는 평면적인 주소 체계로, 대규모 네트워크에서는 비효율적일 수 있다.&lt;br>
이를 해결하기 위해 계층적인 IP 주소 체계와 함께 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>보안 문제:&lt;br>
MAC 주소는 위조가 가능하므로, 추가적인 보안 메커니즘이 필요하다:&lt;br>
- 802.1X 인증&lt;br>
- MAC 주소 필터링&lt;br>
- 포트 보안&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>MAC 주소는 현대 네트워크의 기초가 되는 중요한 요소이다.&lt;br>
특히 로컬 네트워크에서 장치들을 식별하고 통신하는데 핵심적인 역할을 한다.&lt;/p>
&lt;h3>MAC Address의 유일성&lt;/h3>&lt;p>MAC 주소의 유일성은 다음과 같은 방식으로 보장된다:&lt;/p>
&lt;ol>
&lt;li>IEEE(Institute of Electrical and Electronics Engineers)에서 제조업체에 MAC 주소 범위를 할당한다. 각 제조업체는 자사 제품에 고유한 MAC 주소를 부여할 수 있다.&lt;/li>
&lt;li>MAC 주소는 48비트로 구성되며, 앞 24비트는 제조업체 식별자(OUI), 뒤 24비트는 제조업체가 할당한 고유 식별자이다.&lt;/li>
&lt;li>제조업체는 할당받은 범위 내에서 각 장치에 고유한 MAC 주소를 부여한다.&lt;/li>
&lt;li>하지만 완벽한 유일성은 보장되지 않습니다. 제조업체의 실수나 의도적인 재사용으로 인해 중복된 MAC 주소가 존재할 수 있다.&lt;/li>
&lt;li>실제로는 지리적으로 멀리 떨어진 곳에 같은 MAC 주소를 가진 장치를 배포하여 충돌 가능성을 최소화한다.&lt;/li>
&lt;li>로컬 네트워크에서 MAC 주소 충돌이 발생하면 통신에 문제가 생기므로, 네트워크 관리자가 이를 해결해야 한다.&lt;/li>
&lt;/ol>
&lt;p>따라서 MAC 주소의 유일성은 IEEE의 할당 체계와 제조업체의 관리를 통해 높은 수준으로 유지되지만, 완벽한 유일성을 보장하지는 않다.&lt;/p>
&lt;h3>MAC 주소가 데이터 전송에 중요한 이유&lt;/h3>&lt;ol>
&lt;li>고유한 장치 식별: MAC 주소는 각 네트워크 장치를 고유하게 식별한다. 이를 통해 로컬 네트워크 내에서 정확한 데이터 전송이 가능해진다.&lt;/li>
&lt;li>로컬 네트워크 통신: MAC 주소는 로컬 영역 네트워크(LAN) 내에서 장치 간 직접적인 통신을 가능하게 한다.&lt;/li>
&lt;li>데이터 패킷 주소 지정: 데이터 링크 계층에서 MAC 주소를 사용하여 데이터 패킷의 출발지와 목적지를 지정한다.&lt;/li>
&lt;li>홉 간 전달: MAC 주소는 네트워크에서 다음 홉으로 데이터를 전달하는 데 사용된다. 이는 IP 주소가 처리하는 종단 간 전달과 구별된다.&lt;/li>
&lt;li>ARP 프로토콜 사용: Address Resolution Protocol(ARP)은 IP 주소를 MAC 주소로 변환하여 로컬 네트워크에서의 통신을 가능하게 한다.&lt;/li>
&lt;/ol>
&lt;p>MAC 주소는 로컬 네트워크 내에서 데이터가 정확한 장치에 도달할 수 있도록 보장하는 중요한 역할을 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>TCP</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/tcp/</link><pubDate>Wed, 02 Oct 2024 04:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/tcp/</guid><description>
&lt;h2>TCP (Transmission Control Protocol)&lt;/h2>&lt;p>인터넷 프로토콜 스위트의 핵심 프로토콜 중 하나로, IP(Internet Protocol)와 함께 TCP/IP로 널리 알려져 있다.&lt;br>
TCP는 연결 지향적이며, 신뢰성 있는 데이터 전송을 보장하는 전송 계층 프로토콜이다.&lt;/p>
&lt;p>OSI 7계층에서 TCP는 전송 계층(Transport Layer)인 4계층에 위치하며,&lt;br>
TCP/IP 4계층 모델에서도 마찬가지로 전송 계층에 해당한다.&lt;br>
이 위치에서 TCP는 데이터의 신뢰성 있는 전송을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>TCP의 가장 중요한 특징은 연결 지향성과 신뢰성이다.&lt;br>
연결 지향성이란 데이터를 주고받기 전에 먼저 연결을 설정하는 것을 의미하는데, 이는 3-way handshaking이라는 과정을 통해 이루어진다.&lt;br>
신뢰성은 데이터가 손실없이 순서대로 전달되는 것을 보장한다는 의미이다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>신뢰성 보장&lt;/strong>: TCP는 데이터가 정확하게, 순서대로, 그리고 오류 없이 전달되도록 보장한다.&lt;/li>
&lt;li>&lt;strong>연결 지향적&lt;/strong>: 데이터 전송 전에 연결을 설정하고, 전송 후에는 연결을 종료한다.&lt;/li>
&lt;li>&lt;strong>흐름 제어&lt;/strong>: 수신자의 처리 능력에 맞춰 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>&lt;strong>혼잡 제어&lt;/strong>: 네트워크의 혼잡 상태를 감지하고 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>&lt;strong>전이중(Full-Duplex) 통신&lt;/strong>: 양방향으로 동시에 데이터 전송이 가능하다.&lt;/li>
&lt;li>&lt;strong>점대점(Point to Point) 통신&lt;/strong>: 정확히 2개의 종단점을 가진다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Window Size:&lt;br>
한 번에 전송할 수 있는 데이터의 양을 조절하는 값.&lt;br>
이는 흐름제어와 직접적인 관련이 있으며, 수신측의 처리 능력에 따라 동적으로 조절된다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>MSS(Maximum Segment Size):&lt;br>
TCP가 한 번에 전송할 수 있는 최대 세그먼트 크기를 의미한다.&lt;br>
이는 네트워크의 특성을 고려하여 설정된다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>타임아웃과 재전송:&lt;br>
일정 시간 내에 ACK를 받지 못하면 패킷 손실로 간주하고 재전송을 수행한다.&lt;br>
이는 데이터의 신뢰성을 보장하는 중요한 메커니즘이다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Slow Start:&lt;br>
네트워크 혼잡을 방지하기 위해 처음에는 적은 양의 데이터부터 전송을 시작한다.&lt;/p>
&lt;/blockquote>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>신뢰성 있는 데이터 전송&lt;/li>
&lt;li>순서 보장&lt;/li>
&lt;li>오류 검출 및 복구&lt;/li>
&lt;li>흐름 제어를 통한 효율적인 네트워크 사용&lt;/li>
&lt;li>다양한 애플리케이션 지원 (웹 브라우징, 이메일, 파일 전송 등)&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;/h3>&lt;pre class="mermaid hx-mt-6">%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '12px'}, 'flowchart': {'width': 400, 'height': 250, 'diagramPadding': 8}}}%%
sequenceDiagram
participant Client
participant Server
Note over Client,Server: 3-way Handshake (연결 수립)
Client->>Server: SYN (Seq = x)
Server-->>Client: SYN + ACK (Seq = y, Ack = x+1)
Client->>Server: ACK (Seq = x+1, Ack = y+1)
Note over Client,Server: 데이터 전송
Note over Client,Server: 4-way Handshake (연결 종료)
Client->>Server: FIN
Server-->>Client: ACK
Note right of Server: CLOSE_WAIT 상태
Server->>Client: FIN
Note left of Client: TIME_WAIT 상태
Client-->>Server: ACK&lt;/pre>&lt;ol start="2">
&lt;li>
&lt;p>데이터 전송:&lt;/p>
&lt;ul>
&lt;li>순차번호(Sequence Number)를 사용하여 패킷의 순서를 보장한다.&lt;/li>
&lt;li>확인응답(ACK)을 통해 패킷의 수신을 확인한다.&lt;/li>
&lt;li>흐름제어와 혼잡제어를 통해 네트워크의 효율성을 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>연결 종료 (4-way handshaking):&lt;/p>
&lt;ul>
&lt;li>FIN과 ACK 패킷을 주고받으며 연결을 종료한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>연결 설정: 3-way Handshake&lt;br>
목적: 클라이언트와 서버 간의 연결을 설정하고 초기 시퀀스 번호를 동기화&lt;br>
과정&lt;/p>
&lt;ol>
&lt;li>SYN (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 연결을 시작하려고 SYN 패킷을 보낸다.&lt;/li>
&lt;li>SYN 플래그가 1로 설정된다.&lt;/li>
&lt;li>초기 시퀀스 번호(ISN)를 포함한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SYN-ACK (서버 → 클라이언트)
&lt;ul>
&lt;li>서버가 SYN을 받고 응답한다.&lt;/li>
&lt;li>SYN과 ACK 플래그가 모두 1로 설정된다.&lt;/li>
&lt;li>서버의 ISN을 포함합니다.&lt;/li>
&lt;li>확인 응답 번호는 클라이언트의 ISN + 1입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 서버의 응답을 확인합니다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정됩니다.&lt;/li>
&lt;li>확인 응답 번호는 서버의 ISN + 1입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이 과정이 완료되면 연결이 설정되고 데이터 전송이 시작될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 전송&lt;br>
연결이 설정된 후, TCP는 다음과 같은 방식으로 데이터를 전송한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>세그먼트 분할&lt;/strong>: 큰 데이터를 작은 조각(세그먼트)으로 나눈다.&lt;/li>
&lt;li>&lt;strong>순서 번호 부여&lt;/strong>: 각 세그먼트에 번호를 매겨 순서를 보장한다.&lt;/li>
&lt;li>&lt;strong>확인 응답&lt;/strong>: 수신자는 받은 데이터에 대해 확인 응답을 보낸다.&lt;/li>
&lt;li>&lt;strong>재전송&lt;/strong>: 손실된 데이터는 자동으로 재전송된다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>연결 종료: 4-way Handshake&lt;br>
목적: 클라이언트와 서버 간의 연결을 안전하게 종료한다.&lt;br>
과정&lt;/p>
&lt;ol>
&lt;li>FIN (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 연결 종료를 요청한다.&lt;/li>
&lt;li>FIN 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (서버 → 클라이언트)
&lt;ul>
&lt;li>서버가 FIN을 받았음을 확인한다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정된다.&lt;/li>
&lt;li>이 시점에서 클라이언트→서버 방향의 연결이 닫힌다.&lt;br>
3.FIN (서버 → 클라이언트)&lt;/li>
&lt;li>서버가 모든 데이터 전송을 완료하고 연결 종료를 요청한다.&lt;/li>
&lt;li>FIN 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 서버의 FIN을 확인한다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이 과정이 완료되면 연결이 완전히 종료된다.&lt;/li>
&lt;li>클라이언트는 마지막 ACK 전송 후 일정 시간 (일반적으로 2MSL) 동안 TIME_WAIT 상태를 유지하여 지연된 패킷을 처리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>데이터를 세그먼트로 나누는 이유&lt;/h3>&lt;ol>
&lt;li>네트워크 제한 사항 준수
&lt;ol>
&lt;li>MTU(Maximum Transmission Unit) 제한: 네트워크 계층 프로토콜마다 MTU가 다르며, TCP는 이를 초과하지 않도록 데이터를 분할한다.&lt;/li>
&lt;li>효율적인 전송: 큰 데이터 스트림을 작은 세그먼트로 나누어 네트워크 패킷에 맞게 전송한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>신뢰성 향상
&lt;ol>
&lt;li>오류 처리: 작은 세그먼트로 나누면 오류 발생 시 해당 세그먼트만 재전송할 수 있어 효율적이다.&lt;/li>
&lt;li>순서 보장: 각 세그먼트에 시퀀스 번호를 할당하여 수신 측에서 올바른 순서로 재조립할 수 있다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>흐름 제어 및 혼잡 제어
&lt;ol>
&lt;li>수신자 처리 능력 고려: 세그먼트 단위로 전송함으로써 수신자의 처리 능력에 맞춰 데이터 전송 속도를 조절할 수 있다.&lt;/li>
&lt;li>네트워크 상태 대응: 세그먼트 단위로 전송하면 네트워크 혼잡 상황에 더 유연하게 대응할 수 있다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h4>세그먼트로 나누는 데이터가 에러를 감지하는 방법&lt;/h4>&lt;p>TCP는 세그먼트로 나눈 데이터의 에러를 감지하기 위해 다음과 같은 방법들을 사용한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>체크섬(Checksum)&lt;/p>
&lt;ul>
&lt;li>각 세그먼트에는 16비트 체크섬 필드가 포함된다.&lt;/li>
&lt;li>송신자는 데이터를 기반으로 체크섬을 계산하여 세그먼트에 포함시킨다.&lt;/li>
&lt;li>수신자는 받은 세그먼트의 체크섬을 다시 계산하여 송신자의 체크섬과 비교한다.&lt;/li>
&lt;li>두 체크섬이 일치하지 않으면 해당 세그먼트는 손상된 것으로 간주하고 폐기한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>시퀀스 번호(Sequence Numbers)&lt;/p>
&lt;ul>
&lt;li>TCP는 각 데이터 세그먼트에 고유한 시퀀스 번호를 할당한다.&lt;/li>
&lt;li>이를 통해 수신자는 데이터의 순서를 확인하고 누락된 세그먼트를 감지할 수 있다.&lt;/li>
&lt;li>순서가 맞지 않는 세그먼트를 받으면 에러로 간주한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>확인 응답(Acknowledgements)&lt;/p>
&lt;ul>
&lt;li>수신자는 성공적으로 받은 데이터에 대해 확인 응답(ACK)을 보낸다.&lt;/li>
&lt;li>송신자는 일정 시간 내에 ACK를 받지 못하면 해당 세그먼트가 손실되었다고 판단한다.&lt;/li>
&lt;li>중복된 ACK를 연속으로 받으면 특정 세그먼트의 손실을 감지할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>UDP</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/udp/</link><pubDate>Wed, 02 Oct 2024 04:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/udp/</guid><description>
&lt;h2>UDP (User Datagram Protocol)&lt;/h2>&lt;p>인터넷 프로토콜 스위트의 핵심 전송 계층 프로토콜 중 하나로, 비연결형 통신 방식을 통해 데이터를 빠르고 효율적으로 전송한다.&lt;br>
TCP와 달리 연결 설정 과정 없이 데이터그램 단위로 전송하며, 신뢰성보다는 속도와 실시간 처리가 중요한 애플리케이션에서 주로 사용한다.&lt;/p>
&lt;p>OSI 7계층의 전송 계층(4계층)에 속하며, TCP/IP 4계층에서도 전송 계층에 속한다.&lt;/p>
&lt;p>추가적으로 알아야 할 내용:&lt;/p>
&lt;ol>
&lt;li>포트 번호: UDP도 TCP와 마찬가지로 16비트 포트 번호를 사용하여 애플리케이션을 구분합니다.&lt;/li>
&lt;li>체크섬: UDP는 선택적으로 체크섬을 사용하여 데이터 무결성을 확인할 수 있습니다.&lt;/li>
&lt;li>MTU(Maximum Transmission Unit): UDP 데이터그램의 크기가 네트워크의 MTU를 초과하면 IP 계층에서 단편화가 발생할 수 있습니다.&lt;/li>
&lt;li>애플리케이션 레벨 신뢰성: UDP를 사용하는 애플리케이션은 필요한 경우 자체적으로 신뢰성 메커니즘을 구현해야 합니다.&lt;/li>
&lt;li>NAT 통과: UDP는 TCP에 비해 NAT(Network Address Translation) 통과가 더 쉬울 수 있습니다.&lt;/li>
&lt;li>실시간 애플리케이션: 음성 통화, 비디오 스트리밍, 온라인 게임 등 실시간 애플리케이션에서 자주 사용됩니다.&lt;/li>
&lt;li>DNS: 도메인 네임 시스템(DNS)은 주로 UDP를 사용하여 쿼리를 처리합니다.&lt;/li>
&lt;li>QUIC(Quick UDP Internet Connections): Google이 개발한 프로토콜로, UDP 위에서 동작하며 TCP의 일부 특성을 구현합니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>&lt;strong>비연결성&lt;/strong>: UDP는 연결을 설정하지 않고 바로 데이터를 전송한다.&lt;br>
TCP의 3-way handshake와 같은 연결 설정 과정이 없다.&lt;/li>
&lt;li>&lt;strong>신속성&lt;/strong>: 연결 설정 과정이 없어 TCP보다 빠른 전송이 가능하다.&lt;/li>
&lt;li>&lt;strong>비신뢰성&lt;/strong>: 데이터 전달의 보증이나 순서를 보장하지 않는다. 패킷 손실이 발생할 수 있다.&lt;/li>
&lt;li>&lt;strong>효율성&lt;/strong>: 헤더가 단순하여 오버헤드가 적고, 네트워크 부하가 적다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;/h3>&lt;ol>
&lt;li>빠른 데이터 전송&lt;/li>
&lt;li>적은 지연 시간&lt;/li>
&lt;li>간단한 구현&lt;/li>
&lt;li>작은 헤더 크기로 인한 효율적인 대역폭 사용&lt;/li>
&lt;li>브로드캐스트 및 멀티캐스트에 적합&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;/h3>&lt;ol>
&lt;li>애플리케이션이 데이터를 UDP에 전달&lt;/li>
&lt;li>UDP가 데이터를 데이터그램으로 패키징&lt;/li>
&lt;li>IP 계층을 통해 데이터그램 전송&lt;/li>
&lt;li>수신측 UDP가 데이터그램을 받아 애플리케이션에 전달&lt;/li>
&lt;/ol>
&lt;h4>데이터그램&lt;/h4>&lt;p>UDP는 데이터를 데이터그램이라는 단위로 전송한다.&lt;br>
데이터그램은 독립적인 관계를 지니는 패킷을 의미한다.&lt;/p>
&lt;p>특징:&lt;/p>
&lt;ol>
&lt;li>독립성: 각 데이터그램은 독립적으로 처리되며, 다른 데이터그램과의 관계나 순서에 상관없이 전송된다.&lt;/li>
&lt;li>비연결성: 데이터그램은 연결 설정 없이 바로 전송됩니다. 이는 TCP의 연결 지향적 특성과 대조된다.&lt;/li>
&lt;li>신뢰성 부족: UDP는 데이터그램의 전달을 보장하지 않으며, 수신 여부를 확인하지 않는다.&lt;/li>
&lt;li>순서 보장 없음: 데이터그램의 전송 순서가 바뀔 수 있으며, UDP는 이를 재정렬하지 않는다.&lt;/li>
&lt;/ol>
&lt;p>구조:&lt;br>
UDP 데이터그램은 헤더와 데이터 부분으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>UDP 헤더 (8바이트):
&lt;ul>
&lt;li>송신지 포트 번호 (2바이트)&lt;/li>
&lt;li>목적지 포트 번호 (2바이트)&lt;/li>
&lt;li>데이터그램 길이 (2바이트)&lt;/li>
&lt;li>체크섬 (2바이트)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 부분:
&lt;ul>
&lt;li>실제 전송할 애플리케이션 데이터&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>특성:&lt;/p>
&lt;ol>
&lt;li>크기 제한: UDP 데이터그램의 최대 크기는 65,535바이트(헤더 포함)이다.&lt;/li>
&lt;li>효율성: 헤더가 작아(8바이트) TCP에 비해 오버헤드가 적고 통신 효율이 높다.&lt;/li>
&lt;li>분할 기능 없음: UDP는 큰 데이터를 자동으로 분할하지 않는다. 필요한 경우 애플리케이션에서 데이터를 적절한 크기로 나눠야 한다.&lt;/li>
&lt;/ol>
&lt;h3>UDP의 사용 사례&lt;/h3>&lt;p>UDP는 다음과 같은 상황에서 주로 사용된다.:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>실시간 스트리밍&lt;/strong>: 영상 통화, 온라인 게임 등&lt;/li>
&lt;li>&lt;strong>DNS(Domain Name System)&lt;/strong>: 도메인 이름을 IP 주소로 변환&lt;/li>
&lt;li>&lt;strong>SNMP(Simple Network Management Protocol)&lt;/strong>: 네트워크 관리&lt;/li>
&lt;/ol>
&lt;h3>UDP를 실제 개발에 활용할 때의 코드 예시&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UDP 서버 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">udp_server&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># UDP 소켓 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_DGRAM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 수신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Received message: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> from &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s2">&amp;#34;Message received&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UDP 클라이언트 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">udp_client&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client_socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_DGRAM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, UDP Server!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 수신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Server response: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Network and Communication Devices</title><link>https://buenhyden.github.io/posts/networking-and-communications/network-and-communication-devices/</link><pubDate>Wed, 02 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/network-and-communication-devices/</guid><description>
&lt;h2>Network and Communication Devices&lt;/h2>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Common-Types-of-Network-Devices-1.png"
alt="Common Types of Network Devices"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.geeksforgeeks.org/network-devices-hub-repeater-bridge-switch-router-gateways/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/network-devices-hub-repeater-bridge-switch-router-gateways/&lt;/a> _&lt;/p>
&lt;ul>
&lt;li>네트워크 및 통신 장치들은 각각 고유한 기능과 특성을 가지고 있으며, 네트워크의 다양한 요구사항을 충족시키기 위해 사용된다.
&lt;ul>
&lt;li>&lt;strong>물리적 연결과 신호 전송&lt;/strong>: 리피터, 허브, NIC 등은 물리적 연결과 신호 전송을 담당.&lt;/li>
&lt;li>&lt;strong>데이터 전송 최적화&lt;/strong>: 스위치와 브리지는 네트워크 세그먼트 간의 효율적인 데이터 전송을 지원.&lt;/li>
&lt;li>&lt;strong>네트워크 간 연결&lt;/strong>: 라우터와 게이트웨이는 서로 다른 네트워크를 연결하고 데이터를 라우팅.&lt;/li>
&lt;li>&lt;strong>보안&lt;/strong>: 방화벽은 네트워크 보안을 담당.&lt;/li>
&lt;li>&lt;strong>무선 연결&lt;/strong>: 액세스 포인트는 무선 네트워크 연결을 제공.&lt;/li>
&lt;li>&lt;strong>신호 변환&lt;/strong>: 모뎀은 디지털 신호와 아날로그 신호 간의 변환을 수행.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장치들은 네트워크의 규모, 복잡성, 요구사항에 따라 적절히 선택되어 사용된다.&lt;/li>
&lt;li>장치들의 특성을 이해하고, 네트워크의 요구사항에 맞게 적절히 선택, 구성, 관리해야 한다.&lt;/li>
&lt;/ul>
&lt;h3>중요성&lt;/h3>&lt;ul>
&lt;li>네트워크의 효율성과 성능 향상&lt;/li>
&lt;li>데이터의 안전한 전송 보장&lt;/li>
&lt;li>다양한 네트워크 토폴로지 구현 가능&lt;/li>
&lt;li>네트워크 확장성 제공&lt;/li>
&lt;/ul>
&lt;h3>Devices&lt;/h3>&lt;h4>모듈레이터 (Modulator) / 디모듈레이터 (Demodulator)&lt;/h4>&lt;ul>
&lt;li>모듈레이터 (Modulator): 디지털 신호를 아날로그 신호로 변환&lt;/li>
&lt;li>디모듈레이터 디모듈레이터: 아날로그 신호를 디지털 신호로 변환&lt;/li>
&lt;/ul>
&lt;h4>네트워크 및 통신 장비&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>장비&lt;/th>
&lt;th>동작 계층&lt;/th>
&lt;th>주요 기능&lt;/th>
&lt;th>작동 방식&lt;/th>
&lt;th>장점&lt;/th>
&lt;th>단점&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Bridge (브릿지)&lt;/strong>&lt;/td>
&lt;td>데이터 링크 계층 (L2)&lt;/td>
&lt;td>• 두 개의 네트워크 세그먼트 연결 &lt;br>• MAC 주소 기반 필터링 &lt;br>• 충돌 도메인 분리&lt;/td>
&lt;td>• MAC 주소 테이블 유지 &lt;br>• 프레임 포워딩/필터링 &lt;br>• Store-and-forward 방식&lt;/td>
&lt;td>• 네트워크 세그먼트 확장 &lt;br>• 트래픽 필터링 &lt;br>• 간단한 구성&lt;/td>
&lt;td>• 확장성 제한 &lt;br>• 대규모 네트워크에 부적합 &lt;br>• 라우팅 불가&lt;/td>
&lt;td>• 소규모 네트워크 연결 &lt;br>• 부서별 네트워크 분리 &lt;br>• 네트워크 확장&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Gateway (게이트웨이)&lt;/strong>&lt;/td>
&lt;td>응용 계층 (L7)&lt;/td>
&lt;td>• 서로 다른 네트워크 프로토콜 변환 &lt;br>• 데이터 형식 변환 &lt;br>• 보안 기능&lt;/td>
&lt;td>• 프로토콜 변환 &lt;br>• 데이터 재포장 &lt;br>• 양방향 변환&lt;/td>
&lt;td>• 이기종 네트워크 연결 &lt;br>• 높은 보안성 &lt;br>• 프로토콜 유연성&lt;/td>
&lt;td>• 높은 복잡도 &lt;br>• 성능 오버헤드 &lt;br>• 고비용&lt;/td>
&lt;td>• 기업 네트워크 연동 &lt;br>• 클라우드 연결 &lt;br>• 보안 게이트웨이&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Router (라우터)&lt;/strong>&lt;/td>
&lt;td>네트워크 계층 (L3)&lt;/td>
&lt;td>• 네트워크 간 패킷 라우팅 &lt;br>• 최적 경로 선택 &lt;br>• 트래픽 제어&lt;/td>
&lt;td>• 라우팅 테이블 관리 &lt;br>• 패킷 검사 및 전달 &lt;br>• 동적 라우팅&lt;/td>
&lt;td>• 확장성 우수 &lt;br>• 지능적 라우팅 &lt;br>• 네트워크 분리&lt;/td>
&lt;td>• 높은 비용 &lt;br>• 구성 복잡성 &lt;br>• 관리 필요성&lt;/td>
&lt;td>• 인터넷 연결 &lt;br>• WAN 구축 &lt;br>• 네트워크 분할&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Switch (스위치)&lt;/strong>&lt;/td>
&lt;td>데이터 링크 계층 (L2)&lt;/td>
&lt;td>• 장치 간 데이터 전송 &lt;br>• 포트 기반 필터링 &lt;br>• VLAN 지원&lt;/td>
&lt;td>• MAC 주소 학습 &lt;br>• 프레임 스위칭 &lt;br>• 포트 기반 전송&lt;/td>
&lt;td>• 고성능 &lt;br>• 낮은 지연 &lt;br>• 포트별 제어&lt;/td>
&lt;td>• L3 기능 제한 &lt;br>• 관리 복잡성 &lt;br>• 초기 비용&lt;/td>
&lt;td>• LAN 구축 &lt;br>• 데이터센터 &lt;br>• 기업 네트워크&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Wireless Access Point&lt;/strong>&lt;/td>
&lt;td>데이터 링크 계층 (L2)&lt;/td>
&lt;td>• 무선 네트워크 접속점 제공 &lt;br>• 무선-유선 변환 &lt;br>• 보안 관리&lt;/td>
&lt;td>• 무선 신호 송수신 &lt;br>• 인증 및 암호화 &lt;br>• 채널 관리&lt;/td>
&lt;td>• 이동성 지원 &lt;br>• 설치 용이 &lt;br>• 유연한 확장&lt;/td>
&lt;td>• 신호 간섭 &lt;br>• 보안 취약성 &lt;br>• 거리 제한&lt;/td>
&lt;td>• 무선 네트워크 구축 &lt;br>• 사무실 Wi-Fi &lt;br>• 공공 핫스팟&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Amplifier (증폭기)&lt;/strong>&lt;/td>
&lt;td>물리 계층 (L1)&lt;/td>
&lt;td>• 신호 강화 &lt;br>• 거리 확장 &lt;br>• 노이즈 제거&lt;/td>
&lt;td>• 신호 증폭 &lt;br>• 임피던스 매칭 &lt;br>• 필터링&lt;/td>
&lt;td>• 신호 품질 향상 &lt;br>• 거리 확장 &lt;br>• 간단한 구성&lt;/td>
&lt;td>• 노이즈 증폭 &lt;br>• 전력 소비 &lt;br>• 비용 증가&lt;/td>
&lt;td>• 장거리 통신 &lt;br>• 케이블 TV &lt;br>• 광통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Hub (허브)&lt;/strong>&lt;/td>
&lt;td>물리 계층 (L1)&lt;/td>
&lt;td>• 물리적 연결 제공 &lt;br>• 신호 재생성 &lt;br>• 포트 확장&lt;/td>
&lt;td>• 브로드캐스트 방식 &lt;br>• 단순 신호 전달 &lt;br>• 포트별 복제&lt;/td>
&lt;td>• 저비용 &lt;br>• 간단한 구성 &lt;br>• 쉬운 설치&lt;/td>
&lt;td>• 낮은 효율성 &lt;br>• 대역폭 공유 &lt;br>• 보안 취약&lt;/td>
&lt;td>• 소규모 네트워크 &lt;br>• 임시 연결 &lt;br>• 테스트 환경&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Load Balancer&lt;/strong>&lt;/td>
&lt;td>다양한 계층&lt;/td>
&lt;td>• 트래픽 분산 &lt;br>• 서버 부하 분산 &lt;br>• 가용성 보장&lt;/td>
&lt;td>• 부하 모니터링 &lt;br>• 트래픽 분배 &lt;br>• 헬스 체크&lt;/td>
&lt;td>• 고가용성 &lt;br>• 확장성 &lt;br>• 성능 최적화&lt;/td>
&lt;td>• 구성 복잡성 &lt;br>• 고비용 &lt;br>• 단일 실패점&lt;/td>
&lt;td>• 웹 서버 부하분산 &lt;br>• 클라우드 서비스 &lt;br>• 대규모 애플리케이션&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Modem (모뎀)&lt;/strong>&lt;/td>
&lt;td>물리 계층 (L1)&lt;/td>
&lt;td>• 디지털-아날로그 변환 &lt;br>• 신호 변조/복조 &lt;br>• 프로토콜 변환&lt;/td>
&lt;td>• 신호 변환 &lt;br>• 에러 검출/정정 &lt;br>• 속도 조절&lt;/td>
&lt;td>• 다양한 매체 지원 &lt;br>• 호환성 &lt;br>• 설치 용이&lt;/td>
&lt;td>• 속도 제한 &lt;br>• 지연 발생 &lt;br>• 신호 감쇠&lt;/td>
&lt;td>• 인터넷 연결 &lt;br>• 원격 통신 &lt;br>• 데이터 전송&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Repeater (리피터)&lt;/strong>&lt;/td>
&lt;td>물리 계층 (L1)&lt;/td>
&lt;td>• 신호 재생성 &lt;br>• 거리 확장 &lt;br>• 노이즈 제거&lt;/td>
&lt;td>• 신호 증폭 &lt;br>• 타이밍 복원 &lt;br>• 파형 정형&lt;/td>
&lt;td>• 거리 확장 &lt;br>• 신호 품질 향상 &lt;br>• 간단한 구성&lt;/td>
&lt;td>• 지연 발생 &lt;br>• 제한된 기능 &lt;br>• 캐스케이드 제한&lt;/td>
&lt;td>• 장거리 네트워크 &lt;br>• 신호 강화 &lt;br>• 케이블 확장&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>각 장비의 특징적인 활용 시나리오:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>보안 중심&lt;/strong>: Gateway, Router&lt;/li>
&lt;li>&lt;strong>성능 중심&lt;/strong>: Switch, Load Balancer&lt;/li>
&lt;li>&lt;strong>확장성 중심&lt;/strong>: Router, Switch, Load Balancer&lt;/li>
&lt;li>&lt;strong>비용 효율성&lt;/strong>: Hub, Bridge&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: Wireless Access Point, Gateway&lt;/li>
&lt;/ol>
&lt;p>네트워크 설계 시 고려사항:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>네트워크 규모&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>소규모: Hub, Bridge&lt;/li>
&lt;li>중규모: Switch, Router&lt;/li>
&lt;li>대규모: Load Balancer, Gateway&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>성능 요구사항&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>고성능: Switch, Load Balancer&lt;/li>
&lt;li>중간 성능: Router, Gateway&lt;/li>
&lt;li>기본 성능: Hub, Repeater&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>보안 요구사항&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>높은 보안: Gateway, Router&lt;/li>
&lt;li>중간 보안: Switch&lt;/li>
&lt;li>기본 보안: Hub, Repeater&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 네트워크 장비들은 각각의 특성과 장단점을 가지고 있으며, 네트워크의 요구사항과 목적에 따라 적절히 선택하여 사용해야 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>라우터 (Router)&lt;/h3>&lt;p>&lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/what-is-a-router/" target="_blank" rel="noopener">라우터란?&lt;/a>&lt;/p>
&lt;h3>라우팅 (Routing)&lt;/h3>&lt;p>&lt;a href="https://ko.wikipedia.org/wiki/%EB%9D%BC%EC%9A%B0%ED%8C%85" target="_blank" rel="noopener">라우팅&lt;/a>&lt;/p>
&lt;h3>ARP (Address Resolution Protocol, 주소 결정 프로토콜)&lt;/h3>&lt;p>&lt;a href="https://www.splunk.com/en_us/blog/learn/address-resolution-protocol-arp.html" target="_blank" rel="noopener">https://www.splunk.com/en_us/blog/learn/address-resolution-protocol-arp.html&lt;/a>&lt;br>
&lt;a href="https://www.techtarget.com/searchnetworking/definition/Address-Resolution-Protocol-ARP" target="_blank" rel="noopener">https://www.techtarget.com/searchnetworking/definition/Address-Resolution-Protocol-ARP&lt;/a>&lt;br>
&lt;a href="https://www.okta.com/identity-101/address-resolution-protocol-arp/" target="_blank" rel="noopener">https://www.okta.com/identity-101/address-resolution-protocol-arp/&lt;/a>&lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Address_Resolution_Protocol" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Address_Resolution_Protocol&lt;/a>&lt;/p>
&lt;h3>DHCP (Dynamic Host Configuration Protocol, 동적 호스트 구성 프로토콜)&lt;/h3>&lt;p>&lt;a href="https://www.techtarget.com/searchnetworking/definition/DHCP" target="_blank" rel="noopener">https://www.techtarget.com/searchnetworking/definition/DHCP&lt;/a>&lt;br>
&lt;a href="https://www.manageengine.com/dns-dhcp-ipam/what-is-dhcp.html" target="_blank" rel="noopener">https://www.manageengine.com/dns-dhcp-ipam/what-is-dhcp.html&lt;/a>&lt;/p>
&lt;h3>BGP(Border Gateway Protocol, 경계 게이트웨이 프로토콜)&lt;/h3>&lt;p>&lt;a href="https://www.techtarget.com/searchnetworking/definition/BGP-Border-Gateway-Protocol" target="_blank" rel="noopener">https://www.techtarget.com/searchnetworking/definition/BGP-Border-Gateway-Protocol&lt;/a>&lt;br>
&lt;a href="https://aws.amazon.com/what-is/border-gateway-protocol/" target="_blank" rel="noopener">https://aws.amazon.com/what-is/border-gateway-protocol/&lt;/a>&lt;/p>
&lt;h3>SDN&lt;/h3>&lt;p>&lt;a href="https://www.juniper.net/kr/ko/research-topics/what-is-sdn.html" target="_blank" rel="noopener">https://www.juniper.net/kr/ko/research-topics/what-is-sdn.html&lt;/a>&lt;br>
&lt;a href="https://www.redhat.com/ko/topics/hyperconverged-infrastructure/what-is-software-defined-networking" target="_blank" rel="noopener">https://www.redhat.com/ko/topics/hyperconverged-infrastructure/what-is-software-defined-networking&lt;/a>&lt;br>
&lt;a href="https://romyismycat.tistory.com/entry/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A0%95%EC%9D%98-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%ACSDN%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80" target="_blank" rel="noopener">https://romyismycat.tistory.com/entry/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%A0%95%EC%9D%98-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%ACSDN%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80&lt;/a>&lt;br>
&lt;a href="https://www.nutanix.com/kr/info/software-defined-networking" target="_blank" rel="noopener">https://www.nutanix.com/kr/info/software-defined-networking&lt;/a>&lt;br>
&lt;a href="https://webcodur.tistory.com/69" target="_blank" rel="noopener">https://webcodur.tistory.com/69&lt;/a>&lt;br>
&lt;a href="https://www.purestorage.com/kr/knowledge/what-is-software-defined-networking.html" target="_blank" rel="noopener">https://www.purestorage.com/kr/knowledge/what-is-software-defined-networking.html&lt;/a>&lt;/p>
&lt;h3>OPEX 와 CAPEX&lt;/h3>&lt;p>&lt;a href="https://hko96spm.tistory.com/m/111" target="_blank" rel="noopener">https://hko96spm.tistory.com/m/111&lt;/a>&lt;br>
&lt;a href="https://founders.company/blog/cap-ex/" target="_blank" rel="noopener">https://founders.company/blog/cap-ex/&lt;/a>&lt;br>
&lt;a href="https://fastercapital.com/ko/content/%EC%9E%90%EB%B3%B8-%EC%A7%80%EC%B6%9C--CAPEX--CAPEX-%EB%8C%80--OPEX--%EC%A3%BC%EC%9A%94-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EB%B0%8F-%EC%9D%98%EC%82%AC-%EA%B2%B0%EC%A0%95.html" target="_blank" rel="noopener">https://fastercapital.com/ko/content/%EC%9E%90%EB%B3%B8-%EC%A7%80%EC%B6%9C--CAPEX--CAPEX-%EB%8C%80--OPEX--%EC%A3%BC%EC%9A%94-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EB%B0%8F-%EC%9D%98%EC%82%AC-%EA%B2%B0%EC%A0%95.html&lt;/a>&lt;br>
&lt;a href="https://blog.mstacc.com/columns/financial-statements/2945" target="_blank" rel="noopener">https://blog.mstacc.com/columns/financial-statements/2945&lt;/a>&lt;br>
&lt;a href="https://newsandtrend.tistory.com/entry/CAPEX-OPEX-%EB%9C%BB-%EC%B0%A8%EC%9D%B4" target="_blank" rel="noopener">https://newsandtrend.tistory.com/entry/CAPEX-OPEX-%EB%9C%BB-%EC%B0%A8%EC%9D%B4&lt;/a>&lt;br>
&lt;a href="https://blog.naver.com/kissingyou99/221651873954" target="_blank" rel="noopener">https://blog.naver.com/kissingyou99/221651873954&lt;/a>&lt;br>
&lt;a href="https://www.techtarget.com/searchnetworking/definition/Address-Resolution-Protocol-ARP" target="_blank" rel="noopener">https://www.techtarget.com/searchnetworking/definition/Address-Resolution-Protocol-ARP&lt;/a>&lt;/p>
&lt;h3>Li-Fi&lt;/h3>&lt;p>&lt;a href="https://www.lifi.eng.ed.ac.uk/" target="_blank" rel="noopener">Li-Fi Research&lt;/a>&lt;br>
&lt;a href="https://lifi.co/ko/lifi%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94/" target="_blank" rel="noopener">Li-Fi&lt;/a>&lt;/p>
&lt;h3>Wi-Fi&lt;/h3>&lt;p>&lt;a href="https://www.wi-fi.org/" target="_blank" rel="noopener">Wi-Fi Alliance&lt;/a>&lt;br>
&lt;a href="https://www.tp-link.com/kr/blog/1140/wifi-7%EC%9D%98-%EB%A9%80%ED%8B%B0-%EB%A7%81%ED%81%AC-%EB%8F%99%EC%9E%91-mlo-%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94-/" target="_blank" rel="noopener">Wi-Fi&lt;/a>&lt;/p>
&lt;h3>리피터&lt;/h3>&lt;p>&lt;a href="https://ko.fmuser.net/wap/content/" target="_blank" rel="noopener">리피터&lt;/a>&lt;/p>
&lt;h3>허브&lt;/h3>&lt;p>&lt;a href="https://ccusean.tistory.com/entry/%ED%97%88%EB%B8%8C-Hub" target="_blank" rel="noopener">허브&lt;/a>&lt;/p>
&lt;h3>브리지&lt;/h3>&lt;p>&lt;a href="https://ko.wikipedia.org/wiki/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC_%EB%B8%8C%EB%A6%AC%EC%A7%80" target="_blank" rel="noopener">브리지&lt;/a>&lt;/p>
&lt;h3>네트워크 장비 일반&lt;/h3>&lt;p>&lt;a href="https://bruders.tistory.com/115" target="_blank" rel="noopener">네트워크 장비 일반&lt;/a>&lt;br>
&lt;a href="https://standards.ieee.org/ieee/802.11/7028/" target="_blank" rel="noopener">IEEE 802.11 Standards&lt;/a>&lt;br>
&lt;a href="https://www.cisco.com/c/en/us/solutions/enterprise-networks/networking-basics.html" target="_blank" rel="noopener">Cisco Networking&lt;/a>&lt;br>
&lt;a href="https://www.networkworld.com/" target="_blank" rel="noopener">Network World&lt;/a>&lt;br>
&lt;a href="https://www.rfc-editor.org/" target="_blank" rel="noopener">RFC Editor&lt;/a>&lt;br>
&lt;a href="https://www.comsoc.org/" target="_blank" rel="noopener">IEEE Communications&lt;/a>&lt;br>
&lt;a href="https://www.ietf.org/" target="_blank" rel="noopener">IETF&lt;/a>&lt;br>
&lt;a href="https://www.techtarget.com/searchnetworking/" target="_blank" rel="noopener">TechTarget&lt;/a>&lt;br>
&lt;a href="https://www.juniper.net/documentation/" target="_blank" rel="noopener">Juniper Networks&lt;/a>&lt;/p></description></item><item><title>Network</title><link>https://buenhyden.github.io/posts/networking-and-communications/</link><pubDate>Sun, 22 Sep 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/</guid><description>
&lt;h2>Network&lt;/h2>&lt;ul>
&lt;li>연결하는 선이나 장치 같은 물리적인 측면부터 데이터를 주고받는 데에 필요한 메시지나 규약과 같은 비물리적인 측면까지 모두 포함한 &lt;strong>통신 과정 전체&lt;/strong>를 아우르는 개념.&lt;/li>
&lt;li>리소스와 정보를 공유하는 상호 연결된 장치의 모음.&lt;/li>
&lt;/ul>
&lt;h3>영역별 컴퓨터 네트워크 종류&lt;/h3>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/Data_Networks_classification_by_spatial_scope.svg"
alt="Data Networks classification by spatial scope|400"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%93%A8%ED%84%B0_%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC" target="_blank" rel="noopener">https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%93%A8%ED%84%B0_%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC&lt;/a> _&lt;/p>
&lt;h4>Nano Network - 나노 네트워크&lt;/h4>&lt;ul>
&lt;li>컴퓨팅, 데이터 저장, 감지 및 작동과 같은 매우 간단한 작업만 수행할 수 있는 상호 연결된 나노머신 (최대 크기가 수백 나노미터 또는 수 마이크로미터인 장치) 의 집합.&lt;/li>
&lt;li>IEEE P1906.1 에 정의.&lt;/li>
&lt;/ul>
&lt;h4>BAN (Body Area Network) - 인체 통신망, 인체 영역 통신망&lt;/h4>&lt;ul>
&lt;li>착용식 컴퓨팅 장치의 무선 네트워크.&lt;/li>
&lt;/ul>
&lt;h4>PAN (Personal Area Network) - 개인 통신망&lt;/h4>&lt;ul>
&lt;li>개인의 작업 공간을 중심으로 장치들을 서로 연결하기 위한 컴퓨터 네트워크.&lt;/li>
&lt;li>원론적으로 개인 통신망은 개인의 주위를 커버하는 컴퓨터 통신망을 의미하므로 데스크톱 환경에서의 주변기기 연결까지도 개인 통신망으로 포함이 가능하지만, 보통의 경우 모바일 컴퓨팅 (Mobile Computing) 이나 웨어러블 컴퓨팅 (Wearable Computing) 적인 성격이 강하고, Bluetooth 나 UWB 등의 기술을 이용하여 개인 휴대 기기 사이에서 구성된 무선 연결망을 의미한다.&lt;/li>
&lt;/ul>
&lt;h4>LAN (Local Area Network) - 근거리 통신망, 로컬 영역 네트워크&lt;/h4>&lt;ul>
&lt;li>네트워크 매체를 이용하여 집, 사무실, 학교 등의 건물과 같은 가까운 지역을 한데 묶는 네트워크.&lt;/li>
&lt;li>표준화 기구인 미국 전기전자 기술자협회 (IEEE) 와 국제 표준화 기구 (ISO) 에서는 다음과 같이 정의한다.
&lt;ul>
&lt;li>한정된 지역에서 컴퓨터를 기본으로 하는 여러 가지 전자기기 사이의 자유로운 정보교환.&lt;/li>
&lt;li>구축한 사용자가 직접 관리, 운영함.&lt;/li>
&lt;li>서로 다른 밴더의 기기 간에도 통신 가능.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>CAN (Campus Area Network) - 캠퍼스 통신망&lt;/h4>&lt;ul>
&lt;li>근거리 통신망 간의 데이터 전송을 위해서 구성된 제한된 지역 내의 통신망.&lt;/li>
&lt;/ul>
&lt;h4>MAN (Metropolitan Area Network) - 도시권 통신망&lt;/h4>&lt;ul>
&lt;li>큰 도시 또는 캠퍼스에 퍼져 있는 컴퓨터 네트워크.&lt;/li>
&lt;li>DSL 전화망, 케이블 TV 네트워크를 통한 인터넷 서비스 제공이 대표적인 예.&lt;/li>
&lt;/ul>
&lt;h4>RAN (Radio Access Network) - 무선접속망&lt;/h4>&lt;ul>
&lt;li>스마트폰과 같은 최종 사용자 기기를 클라우드에 연결하는 모바일 네트워크의 일종.&lt;/li>
&lt;/ul>
&lt;h4>WAN (Wide Area Network) - 광역 통신망&lt;/h4>&lt;ul>
&lt;li>드넓은 지리적 거리/장소를 넘나드는 통신 네트워크 또는 컴퓨터 네트워크.&lt;/li>
&lt;li>지역, 국가, 세상 범위까지 구성된 컴퓨터 네트워크로 근거리 통신망 유저들이 다른 지역에 있는 근거리 통신망 사용자들과 데이터 통신을 할 수 있도록 해 준다.&lt;/li>
&lt;/ul>
&lt;h4>SAN (Storage Area Network) - 스토리지 영역 네트워크&lt;/h4>&lt;ul>
&lt;li>블록 수준의 스토리지 공유 네트워크 또는 클라우드 스토리지에 대한 액세스를 제공하는 특수 네트워크.&lt;/li>
&lt;li>사용자에게는 컴퓨터에 물리적으로 연결된 스토리지 드라이브처럼 보이고 작동한다.&lt;/li>
&lt;/ul>
&lt;h4>VPN (Virtual Private Network) - 가상 사설망&lt;/h4>&lt;ul>
&lt;li>두 개의 네트워크 엔드포인트를 연결하는 안전한 지점간 연결.&lt;/li>
&lt;li>사용자의 신원 및 액세스 자격 증명은 물론 전송되는 모든 데이터를 해커가 액세스할 수 없도록 암호화 채널을 설정한다.&lt;/li>
&lt;/ul>
&lt;h3>Network Topology&lt;/h3>&lt;ul>
&lt;li>네트워크를 배치하는 방식으로, 링크와 노드들이 어떤 식으로 배치되어 서로 연결되는지를 물리적으로 혹은 논리적으로 설명한다.&lt;/li>
&lt;li>네트워크가 배치되는 방식은 수없이 많으며, 모두 나름의 장단점이 있고, 특정 상황에 더 유용한 배치 방식이 존재한다. 그러므로 적합한 네트워크 토폴로지를 만들고 관리하기 위한 핵심사항은 목표와 필요조건을 확실히 파악해야 한다.&lt;/li>
&lt;li>네트워크 토폴로지의 두가지 범부
&lt;ul>
&lt;li>물리적 네트워크 토폴로지&lt;br>
- 네트워크가 전선, 케이블 등으로 실제 연결되어 배치된 것을 나타낸다.&lt;br>
- 네트워크 설정, 관리, 권한 설정 작업을 하기 위해서는 물리적 네트워크 토폴로지를 알아야할 필요가 있다.&lt;/li>
&lt;li>논리적 네트워크 토폴로지&lt;br>
- 네트워크 설정 방식에 관한 고차원의 개념으로, 어떤 노드가 어떤 방식으로 다른 노드들과 서로 연결되어 있는지, 또한 데이터가 네트워크를 통해 어떻게 전송되는지 등에 의해 결정된다.&lt;br>
- 모든 가상 리소스와 클라우드 리소스가 포함된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Node (노드)&lt;/p>
&lt;ul>
&lt;li>데이터를 수신, 전송, 생성 또는 저장할 수 있는 네트워크 내부의 연결 지점.&lt;/li>
&lt;li>각 노드에서 액세스를 받으려면 IP 주소와 같은 식별 정보를 제공해야 한다.&lt;/li>
&lt;li>노드의 예로는 컴퓨터, 프린터, 모뎀, 브리지 및 스위치 등이 있다.&lt;/li>
&lt;li>기본적으로 노드는 정보를 인식하고 처리하며 다른 네트워크 노드로 전송할 수 있는 네트워크 디바이스&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Link (링크)&lt;/p>
&lt;ul>
&lt;li>데이터 (신호) 전달을 위한 물리적 매체를 말한다.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4>Network Topology 가 필요한 이유?&lt;/h4>&lt;ul>
&lt;li>네트워크가 어떻게 또 얼마나 잘 기능하느냐는 문제에서 핵심적 역할을 맡고 있다.&lt;/li>
&lt;li>시스템의 운영 모델에 적합한 토폴로지를 선택하면
&lt;ul>
&lt;li>잘못된 부분을 찾아 문제를 해결하기 쉬워지고&lt;/li>
&lt;li>네트워크 전체에 효율적으로 자원을 분배하기가 쉬워져 최적의 네트워크 안정성을 보장할 수 있게 된다.&lt;/li>
&lt;li>적절하게 관리하면 에너지 효율성과 데이터 효율성이 높아져 결과적으로 운영비와 관리비를 줄이는데 도움이 된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>네트워크의 배치 방식에 따라 네트워크의 기능성, 연결성이 살아나기도 하고 혹은 망쳐지기도 한다.&lt;/li>
&lt;li>네트워크의 시스템이 중단되는 다운 타임 역시 네트워크의 배치 방식에 의해 좌우된다.&lt;/li>
&lt;/ul>
&lt;h4>Type of Network Topologies&lt;/h4>&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/NetworkTopologies.svg"
alt="Diagram of different network topologies"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://en.wikipedia.org/wiki/Network_topology" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Network_topology&lt;/a> _&lt;/p>
&lt;h5>Common Network Topology&lt;/h5>&lt;h6>Bus Topology (Linear &amp;amp; Distributed)&lt;/h6>&lt;ul>
&lt;li>모든 장치가 단일 케이블 또는 백본에 연결되는 네트워크 구성.&lt;/li>
&lt;li>각 장치가 버스 (Bus) 라고 불리는 공통 통신 매체에 연결된다.
&lt;ul>
&lt;li>모든 장치가 동일한 신호를 동시에 받을 수 있도록 하는 공유 통신 라인 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>양 방향으로 데이터를 전송하여, 데이터가 수신자에게 도달할 수 있도록 한다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/1708424814phpKzfwtZ.jpeg"
alt="How Does Bus Topology in Computer Network Work?"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.shiksha.com/online-courses/articles/what-is-a-bus-topology-blogId-156107" target="_blank" rel="noopener">https://www.shiksha.com/online-courses/articles/what-is-a-bus-topology-blogId-156107&lt;/a> _&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ul>
&lt;li>Bus (버스): 네트워크의 주 케이블로, 모든 장치가 이 케이블에 연결된다.&lt;/li>
&lt;li>Terminator (종단기): 버스 케이블의 양 끝에 위치한 장치로, 신호 반사를 방지하는 역할을 한다. 신호가 버스의 끝에 도달하면, 종단기가 이를 흡수하여 다시 케이블을 따라 반사되지 않도록 한다. 이를 통해 데이터 전송 오류를 줄이고 네트워크 성능을 유지할 수 있다.&lt;/li>
&lt;li>Dropline (드롭라인): 네트워크 장치와 메인 케이블 (버스) 를 연결하는 선. 각 장치는 dropline 을 통해 버스에 연결되며, 이를 통해 데이터를 송수신할 수 있다.&lt;/li>
&lt;li>Tap (탭): 드롭라인을 메인 케이블에 연결하는 커넥터.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>작동 방식?
&lt;ul>
&lt;li>중앙 케이블 (버스) 이 모든 네트워크 장치의 공유 통신 매체로 사용된다. 각 장치는 탭 또는 커넥터를 통해 이 케이블에 연결된다. 케이블의 양 끝에는 종단기가 있어 신호가 끝에 도달하면 이를 흡수하여 신호 반사를 방지한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 전송 방식?
&lt;ul>
&lt;li>데이터를 케이블에 방송하면, 목적지 주소와 일치하는 장치만 데이터를 처리하고 다른 장치는 데이터를 무시한다.&lt;/li>
&lt;li>CSMA/CD(Carrier Sence Multiple with Collision Detection) 프로토콜을 사용하여 데이터 전송을 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장단점
&lt;ul>
&lt;li>장점&lt;br>
- 설정이 간단하고 비용이 저렴하다.&lt;br>
- 케이블 길이가 짧아 소규모 네트워크에 적합하다.&lt;/li>
&lt;li>단점&lt;br>
- 네트워크가 다운되면 문제를 식별하기 어렵고, 확장성이 떨어져 대규모 네트워크에는 적합하지 않다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h6>Star Topology (Extended &amp;amp; Distributed)&lt;/h6>&lt;ul>
&lt;li>
&lt;p>모든 장치가 중앙 노드 (허브, 스위치 또는 라우터) 에 물리적으로 연결되는 네트워크 구성이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>중앙 노드는 서버 역할을 하고, 연결된 장치들은 클라이언트 역할을 한다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/1708935977php5BpS2J.jpeg"
alt="What is star topology?"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.shiksha.com/online-courses/articles/what-is-star-topology-blogId-156653" target="_blank" rel="noopener">https://www.shiksha.com/online-courses/articles/what-is-star-topology-blogId-156653&lt;/a> _&lt;/p>
&lt;/li>
&lt;li>
&lt;p>작동방식&lt;/p>
&lt;ul>
&lt;li>중앙 장치가 네트워크 내의 노드 간 데이터 전송을 담당한다.&lt;/li>
&lt;li>데이터가 전송될 때, 먼저 중앙 노드로 보내지고, 중앙 노드는 데이터를 네트워크의 모든 장치로 전달한다.&lt;/li>
&lt;li>각 노드는 데이터를 수신한 후 목적지 주소를 확인하고, 주소일치하면 데이터를 처리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>유형&lt;/p>
&lt;ul>
&lt;li>Active Star Topology: 중심 허브 (Hub) 에서 신호의 재생, 진단 등을 함. (능동적 역할)&lt;/li>
&lt;li>Passive Star Topology: 모든 회선연결 구성이 하나의 박스 (노드) 에서 이루어짐. (수동적 역할)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>장단점&lt;/p>
&lt;ul>
&lt;li>장점&lt;br>
- 네트워크 관리가 용이하고, 고장 격리가 가능하며 확장성이 뛰어나다.&lt;/li>
&lt;li>단점&lt;br>
- 중앙 허브가 고장 나면 전체 네트워크 다운될 수 있으며, 설치 비용이 높을 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h6>Mesh Topology (Fully &amp;amp; Partially connected)&lt;/h6>&lt;ul>
&lt;li>
&lt;p>네트워크의 장치들이 여러 다른 장치들과 상호 연결되어 메쉬 구조를 형성하는 네트워크 구성. 각 장치가 가능한 한 많은 다른 장치들과 동적으로, 직접적으로, 비계층적으로 연결된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터 전송 경로가 여러 개 생성되어 장애 허용성과 중복성이 향상된다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/iota-full_vs_partial_mesh_networks-f.png"
alt="Full vs. Partial Mesh Networks"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.techtarget.com/iotagenda/definition/mesh-network-topology-mesh-network" target="_blank" rel="noopener">https://www.techtarget.com/iotagenda/definition/mesh-network-topology-mesh-network&lt;/a> _&lt;/p>
&lt;/li>
&lt;li>
&lt;p>유형&lt;/p>
&lt;ul>
&lt;li>Full Mesh (완전 메시): 네트워크의 모든 노드가 다른 모든 노드와 연결된다.&lt;/li>
&lt;li>Partial Mesh (부분 메시): 네트워크의 모든 노드가 다른 모든 노드와 연결되지 않는다. 기본적인 중복성을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 전송 방식&lt;/p>
&lt;ul>
&lt;li>데이터가 여러 경로를 통해 전송될 수 있다.&lt;/li>
&lt;li>데이터 전송 경로는 거리, 트래픽 혼잡, 링크 품질 등에 따라 달라질 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>장단점&lt;/p>
&lt;ul>
&lt;li>장점&lt;br>
- 높은 신뢰성과 장애 허용성, 확장성&lt;/li>
&lt;li>단점&lt;br>
- 설치 및 유지보수 비용이 높을 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h6>Ring Topology (Bidirectional Link)&lt;/h6>&lt;ul>
&lt;li>
&lt;p>네트워크의 모든 장치가 원형 구조로 연결된 폐쇄형 네트워크.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>각 장치는 양쪽에 있는 두 개의 다른 장치와 연결되어 단일 연속 경로를 형성한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>데이터는 한 장치에서 다른 장치로 순차적으로 전송된다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/1708507714phpxYdEyN.jpeg"
alt="What is Ring topology?"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.shiksha.com/online-courses/articles/what-is-ring-topology-blogId-156219" target="_blank" rel="noopener">https://www.shiksha.com/online-courses/articles/what-is-ring-topology-blogId-156219&lt;/a> _&lt;/p>
&lt;/li>
&lt;li>
&lt;p>작동방식&lt;/p>
&lt;ul>
&lt;li>데이터가 순차적으로 한 노드에서 다음 노드로 이동한다.&lt;/li>
&lt;li>데이터 충돌을 방지하기 위해 토큰 패싱 제어 메커니즘을 사용한다.&lt;/li>
&lt;li>토큰을 가진 노드만 데이터 전송 권한을 가지며, 데이터 전송 후 토큰을 다음 노드 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 전송 방식&lt;/p>
&lt;ul>
&lt;li>각 패킷은 목적지 주소와 데이터를 포함하며, 각 노드는 패킷이 순활할 때 목적지 주소를 확인한다. 주소가 일치하면 패킷을 처리하고, 그렇지 않으면 다음 노드로 전달한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>장단점&lt;/p>
&lt;ul>
&lt;li>장점&lt;br>
- 데이터 충돌 가능성이 적고, 네트워크 부하가 많을 때도 안정적으로 작동한다.&lt;/li>
&lt;li>단점&lt;br>
- 한 장치가 고장 나면 전체 네트워크에 영향을 미칠 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h6>Tree Topology&lt;/h6>&lt;ul>
&lt;li>
&lt;p>네트워크의 장치들이 계층적으로 연결되는 구조로, 나무의 가지처럼 보이는 네트워크 구성이다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Star Topology 와 Bus Topology 가 결합한 형태로, 중앙 노드 (Root) 에서 여러 계층의 자식 노드로 연결된다.&lt;br>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Networking%20and%20Communications/1708679217phpSH3SVs.jpeg"
alt="What is Tree Topology?"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.shiksha.com/online-courses/articles/what-is-tree-topology-blogId-156467" target="_blank" rel="noopener">https://www.shiksha.com/online-courses/articles/what-is-tree-topology-blogId-156467&lt;/a> _&lt;/p>
&lt;/li>
&lt;li>
&lt;p>작동방식&lt;/p>
&lt;ul>
&lt;li>중앙 노드 (Root) 에서 시작하여 여러 계층의 자식 노드로 확장된다. 각 노드는 더 작은 하위 노드들과 연결되며, 이러한 계층적 구조는 데이터 전송 경로를 체계적으로 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>특징&lt;/p>
&lt;ul>
&lt;li>&lt;strong>계층적 구조&lt;/strong>: 중앙 노드 (Root) 에서 시작하여 여러 계층의 자식 노드로 확장된다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 네트워크를 쉽게 확장할 수 있어 대규모 네트워크에 적합하다.&lt;/li>
&lt;li>&lt;strong>유연성&lt;/strong>: 다양한 네트워크 요구사항에 맞게 구성할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>장단점&lt;/p>
&lt;ul>
&lt;li>장점&lt;br>
- 네트워크 관리가 용이하고 확장성이 뛰어나다. 고장 격리가 가능하여 네트워크 안정성이 높다.&lt;/li>
&lt;li>단점&lt;br>
- 설치 및 유지보수 비용이 높을 수 있으며, 중앙 노드에 문제가 발생하면 전체 네트워크에 영향을 미칠 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>Advanced Network Topology&lt;/h5>&lt;ul>
&lt;li>3D Multi-mesh&lt;/li>
&lt;li>Arc node and also Polygon topology&lt;/li>
&lt;li>Region and route topology&lt;/li>
&lt;li>Scale-free&lt;/li>
&lt;li>Flattened and three-layer butterfly&lt;/li>
&lt;li>Hexagon and Dragonfly&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;h3>Network&lt;/h3>&lt;p>&lt;a href="https://velog.io/@ppmyor/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-01.-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80" target="_blank" rel="noopener">[네트워크] 01. 네트워크란 무엇인가?&lt;/a>&lt;br>
&lt;a href="https://hannut91.github.io/blogs/network/network" target="_blank" rel="noopener">네트워크란 무엇인가?&lt;/a>&lt;br>
&lt;a href="https://wiki.hash.kr/index.php/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC" target="_blank" rel="noopener">네트워크&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1875/" target="_blank" rel="noopener">주니어 개발자를 위한 엄청 쉬운 네트워크 이야기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1982/" target="_blank" rel="noopener">주니어 웹 개발자가 알아야 할 &amp;lsquo;비동기 통신&amp;rsquo;&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/2055/" target="_blank" rel="noopener">주니어 개발자를 위한 , &amp;lsquo;웹&amp;rsquo;으로 알아보는 네트워크&lt;/a>&lt;br>
&lt;a href="https://bbogle2.tistory.com/entry/Network-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B8%B0%EC%B4%88-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">[Network] 네트워크 기초 개념 정리&lt;/a>&lt;br>
&lt;a href="https://velog.io/@dev_0livia/Network-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%8B%A8%EC%9C%84-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">Network 데이터 단위 정리&lt;/a>&lt;br>
&lt;a href="https://velog.io/@dev_0livia/Network-01" target="_blank" rel="noopener">Network # 01&lt;/a>&lt;br>
&lt;a href="https://www.itworld.co.kr/news/268533" target="_blank" rel="noopener">네트워크 엔지니어를 위한 &amp;lsquo;무료&amp;rsquo; 필수 툴 12가지&lt;/a>&lt;br>
&lt;a href="https://tech.kakaopay.com/post/make-http-client-design-flexible/" target="_blank" rel="noopener">MSA 환경에서의 유연한 HTTP 클라이언트 설계 전략&lt;/a>&lt;br>
&lt;a href="https://nginxstore.com/blog/nginx/%ec%9d%b4%ec%a0%9c%eb%8a%94-%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac-%ec%9e%90%eb%8f%99%ed%99%94-%ec%84%b8%ea%b3%84%ec%9e%85%eb%8b%88%eb%8b%a4/" target="_blank" rel="noopener">이제는 네트워크 자동화 세계입니다.&lt;/a>&lt;/p>
&lt;h3>Type of Network&lt;/h3>&lt;p>&lt;a href="https://www.ibm.com/kr-ko/topics/networking" target="_blank" rel="noopener">네트워킹이란 무엇인가요?&lt;/a>&lt;br>
&lt;a href="https://sangbeomkim.tistory.com/110" target="_blank" rel="noopener">네트워크 정복하기 2. 네트워크의 종류 3가지&lt;/a>&lt;br>
&lt;a href="https://www.redhat.com/ko/topics/5g-networks/what-is-radio-access-network" target="_blank" rel="noopener">무선 액세스 네트워크(RAN)란?&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/558/" target="_blank" rel="noopener">VPN이란 무엇인가?&lt;/a>&lt;/p>
&lt;h3>Network Topology&lt;/h3>&lt;p>&lt;a href="https://www.edrawsoft.com/kr/for-beginners/what-is-network-topology.html" target="_blank" rel="noopener">네트워크 토폴로지 정의: 5가지 유형 길라잡이!&lt;/a>&lt;br>
&lt;a href="https://www.techtarget.com/iotagenda/definition/mesh-network-topology-mesh-network" target="_blank" rel="noopener"># mesh network topology (mesh network)&lt;/a>&lt;br>
&lt;a href="https://networksimulationtools.com/network-topology-projects/" target="_blank" rel="noopener">Network Topology Projects&lt;/a>&lt;br>
&lt;a href="https://www.shiksha.com/online-courses/articles/what-is-a-bus-topology-blogId-156107" target="_blank" rel="noopener">What is a Bus Topology?&lt;/a>&lt;br>
&lt;a href="https://www.shiksha.com/online-courses/articles/what-is-star-topology-blogId-156653" target="_blank" rel="noopener">What is star topology?&lt;/a>&lt;br>
&lt;a href="https://www.shiksha.com/online-courses/articles/what-is-tree-topology-blogId-156467" target="_blank" rel="noopener">What is Tree Topology?&lt;/a>&lt;br>
&lt;a href="https://www.shiksha.com/online-courses/articles/what-is-ring-topology-blogId-156219" target="_blank" rel="noopener">What is Ring topology?&lt;/a>&lt;br>
&lt;a href="https://devowen.com/332" target="_blank" rel="noopener">\[네트워크\] 토폴로지, 네트워크 구현, 장치들&lt;/a>&lt;/p></description></item></channel></rss>