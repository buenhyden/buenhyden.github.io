<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>System Components on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/system-components/</link>
    <description>Recent content in System Components on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 25 Jul 2025 05:56:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/system-components/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Server</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/web-server/</link>
      <pubDate>Mon, 21 Oct 2024 05:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/web-server/</guid>
      <description>웹 서버 (Web Server) 는 HTTP 프로토콜을 통해 클라이언트의 요청을 받아 정적 또는 동적 웹 콘텐츠를 제공하는 서버 소프트웨어이다. 요청 - 응답 아키텍처를 기반으로 HTML, CSS, JavaScript 등의 웹 리소스를 전달하며, 현대 웹 애플리케이션의 핵심 인프라로 활용된다.</description>
    </item>
    <item>
      <title>Web Application Server</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/web-application-servers/</link>
      <pubDate>Mon, 21 Oct 2024 15:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/web-application-servers/</guid>
      <description>웹 애플리케이션 서버(Web Application Server, WAS)는 웹 애플리케이션의 실행 환경을 제공하고, 동적인 콘텐츠를 처리하며, 데이터베이스와의 연동을 지원하는 소프트웨어 프레임워크이다.</description>
    </item>
    <item>
      <title>Search Engines</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/</link>
      <pubDate>Mon, 21 Oct 2024 05:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/search-engines/</guid>
      <description>방대한 양의 정보에서 필요한 데이터를 효율적으로 찾아내는 특화된 시스템이다. 단순한 키워드 매칭을 넘어서, 오늘날의 검색 엔진은 복잡한 데이터 분석과 실시간 처리를 위한 고도화된 기술을 구현하고 있다.</description>
    </item>
    <item>
      <title>Platform and Execution Infrastructure</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/platform-and-execution-infrastructure/</link>
      <pubDate>Fri, 25 Jul 2025 05:56:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/platform-and-execution-infrastructure/</guid>
      <description></description>
    </item>
    <item>
      <title>Cross-Cutting Concerns</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/cross-cutting-concerns/</link>
      <pubDate>Wed, 23 Jul 2025 14:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/cross-cutting-concerns/</guid>
      <description></description>
    </item>
    <item>
      <title>Data and State Management</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/data-and-state-management/</link>
      <pubDate>Wed, 23 Jul 2025 14:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/data-and-state-management/</guid>
      <description></description>
    </item>
    <item>
      <title>Observability and Operations</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/observability-and-operations/</link>
      <pubDate>Wed, 23 Jul 2025 14:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/observability-and-operations/</guid>
      <description></description>
    </item>
    <item>
      <title>Traffic Control and Routing</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/</link>
      <pubDate>Wed, 23 Jul 2025 14:45:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/</guid>
      <description></description>
    </item>
    <item>
      <title>Access and Network Entry</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/</link>
      <pubDate>Wed, 23 Jul 2025 14:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/</guid>
      <description></description>
    </item>
    <item>
      <title>Application and Execution Core</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/</link>
      <pubDate>Wed, 23 Jul 2025 14:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/</guid>
      <description></description>
    </item>
    <item>
      <title>Messaging Systems</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/</link>
      <pubDate>Tue, 22 Apr 2025 13:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/application-and-execution-core/messaging-systems/</guid>
      <description>메시징 시스템은 분산 애플리케이션의 구성 요소 간 비동기 통신을 지원하여 결합도를 낮추고, 신뢰성·확장성·유연성을 제공합니다. 메시지 큐, 이벤트 스트리밍, 태스크 큐 등 다양한 형태가 존재하며, 실시간 데이터 처리, 작업 분산, 장애 복원력 등 다양한 요구에 대응한다.</description>
    </item>
    <item>
      <title>Domain Name System</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/domain-name-system/</link>
      <pubDate>Tue, 01 Apr 2025 02:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/domain-name-system/</guid>
      <description>Domain Name System(도메인 네임 시스템, DNS) 은 사용자가 기억하기 쉬운 도메인 명을 실제 IP 주소로 변환해주는 핵심 인터넷 인프라 서비스이다. DNS 를 통해 네트워크상의 다양한 자원에 쉽고 신뢰성 있게 접근할 수 있으며, 분산된 아키텍처와 계층적 구조로 빠르고 안정적인 네임 해석을 제공한다.</description>
    </item>
    <item>
      <title>Load Balancer</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/load-balancer/</link>
      <pubDate>Mon, 17 Feb 2025 04:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/load-balancer/</guid>
      <description>로드 밸런서 (Load Balancer) 는 복수의 서버에 트래픽을 효율적으로 분산하여 시스템 부하를 균등하게 분배하고, 장애 발생 시에도 서비스 연속성을 보장하는 장치 또는 기술이다. 다양한 알고리즘과 유형을 활용하여 확장성과 고가용성, 탄력성을 제공하는 시스템 핵심 구성 요소이다.</description>
    </item>
    <item>
      <title>Content Delivery Networks</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/content-delivery-networks/</link>
      <pubDate>Mon, 17 Feb 2025 04:55:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/content-delivery-networks/</guid>
      <description>콘텐츠 전송 네트워크 (CDN) 는 전 세계에 분산된 서버 네트워크를 통해 웹 콘텐츠를 사용자와 지리적으로 가까운 위치에서 제공함으로써 로딩 시간을 단축하고 대역폭 비용을 절감하는 기술이다. 정적/동적 콘텐츠 캐싱, 로드 밸런싱, 보안 기능을 제공하며, 엣지 컴퓨팅과 결합하여 더욱 발전하고 있다.</description>
    </item>
    <item>
      <title>Service Mesh</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/</link>
      <pubDate>Wed, 13 Nov 2024 09:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/service-mesh/</guid>
      <description>서비스 메시는 **마이크로서비스 간 통신을 Sidecar 프록시 기반 Data Plane**으로 추상화하고, **Control Plane**에서 정책·보안·관찰 기능을 외부화하는 인프라 계층이다.  이를 통해 서비스 간 보안 (mTLS), 로드밸런싱, 리트라이, 트래픽 제어, 모니터링 등을 코드 수정 없이 적용할 수 있다.</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/</link>
      <pubDate>Sun, 20 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/traffic-control-and-routing/api-gateway/</guid>
      <description>API Gateway 는 마이크로서비스 아키텍처에서 핵심 라우터이자 진입점 역할을 수행한다. 요청의 인증, 라우팅, 로드 밸런싱, 변환, 모니터링 등을 통합적으로 처리하여 클라이언트와 백엔드 서비스 간의 결합도를 낮추고 보안/운영 효율성을 높인다.</description>
    </item>
    <item>
      <title>프록시(Proxy)</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/proxy/</link>
      <pubDate>Sat, 19 Oct 2024 08:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/access-and-network-entry/proxy/</guid>
      <description>프록시 (Proxy) 는 클라이언트와 서버 사이에서 중개자 역할을 수행하는 서버로, 요청을 대신 처리하고 응답을 전달한다.  포워드 프록시 (Forward Proxy) 는 클라이언트를 보호하고, 리버스 프록시 (Reverse Proxy) 는 서버를 보호하며, 로드 밸런싱, 캐싱, 보안, SSL 종료 등의 기능을 제공한다.</description>
    </item>
    <item>
      <title>캐시 (Cache)</title>
      <link>https://buenhyden.github.io/posts/system-design/system-components/data-and-state-management/cache/</link>
      <pubDate>Mon, 30 Sep 2024 13:25:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/system-design/system-components/data-and-state-management/cache/</guid>
      <description>캐시 (Cache) 는 자주 접근하는 데이터를 빠른 저장소에 임시 보관하여 시스템 성능을 향상시키는 하드웨어 또는 소프트웨어 구성 요소이다. CPU 캐시부터 웹 캐시까지 다양한 계층에서 활용되며, 지역성 원리를 기반으로 데이터 접근 속도를 대폭 개선한다.</description>
    </item>
  </channel>
</rss>
