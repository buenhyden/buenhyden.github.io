<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Operating Systems on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/categories/operating-systems/</link>
    <description>Recent content in Operating Systems on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.147.9</generator>
    <language>en</language>
    <lastBuildDate>Sat, 05 Oct 2024 08:24:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/categories/operating-systems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paging vs Segmentation</title>
      <link>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/paging-vs-segmentation/</link>
      <pubDate>Sat, 05 Oct 2024 08:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/paging-vs-segmentation/</guid>
      <description>Paging과 Segmentation은 운영체제의 메모리 관리 기법이다.</description>
    </item>
    <item>
      <title>프로세스 간 통신 (Inter-Process Communication, IPC)</title>
      <link>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/process-management/ipc/__index/</link>
      <pubDate>Wed, 02 Oct 2024 06:20:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/process-management/ipc/__index/</guid>
      <description>서로 독립적으로 실행되는 프로세스들이 데이터를 교환하고 상호작용하기 위한 메커니즘</description>
    </item>
    <item>
      <title>Memory Management</title>
      <link>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/</link>
      <pubDate>Tue, 01 Oct 2024 17:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/</guid>
      <description>메모리 관리는 운영체제가 컴퓨터의 주 메모리 (RAM) 를 효율적으로 할당, 추적, 해제하는 과정이다. 이를 통해 여러 프로세스가 동시에 실행될 수 있도록 하며, 페이징, 세그먼테이션, 가상 메모리와 같은 기법을 사용하여 물리적 메모리 제약을 극복한다. 효과적인 메모리 관리는 시스템 성능, 안정성, 보안을 향상시키며 현대 컴퓨팅의 기반이 된다.</description>
    </item>
    <item>
      <title>세그먼테이션 (Segmentation)</title>
      <link>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/segmentation/</link>
      <pubDate>Tue, 01 Oct 2024 13:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/segmentation/</guid>
      <description>세그먼테이션(Segmentation)은 운영체제의 메모리 관리 기법 중 하나로, 프로세스를 논리적 단위인 세그먼트로 나누어 관리하는 방식이다.</description>
    </item>
    <item>
      <title>페이징 (Paging)</title>
      <link>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/paging/</link>
      <pubDate>Tue, 01 Oct 2024 13:37:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/systems-and-infrastructure/operating-systems/memory-management/paging/</guid>
      <description>페이징(Paging)은 운영체제의 메모리 관리 기법 중 하나로, 프로세스를 고정 크기의 페이지로 나누고 물리적 메모리를 같은 크기의 프레임으로 나누어 관리하는 방식이다.</description>
    </item>
  </channel>
</rss>
