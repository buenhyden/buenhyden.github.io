<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming Paradigm :: hyunyoun's Blog</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/</link><description>코드를 효율적이고 유지보수가 용이하게 작성하기 위한 다양한 접근 방식</description><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Mon, 25 Nov 2024 23:42:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/index.xml" rel="self" type="application/rss+xml"/><item><title>동시성 프로그래밍 (Concurrency Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/concurrency-programming/</link><pubDate>Mon, 25 Nov 2024 23:42:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/concurrency-programming/</guid><description>여러 작업을 동시에 수행할 수 있도록 프로그램을 설계하는 기법</description></item><item><title>객체 지향 프로그래밍 (Object-Oriented Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/oop/</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/oop/</guid><description>현실 세계의 개체를 소프트웨어 객체로 모델링하는 프로그래밍 방식으로 데이터(속성)와 그 데이터를 처리하는 메서드(행동)를 하나의 단위인 객체로 묶는다.</description></item><item><title>구조적 프로그래밍 (Structured Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/structured-programming/</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/structured-programming/</guid><description>구조적 프로그래밍은 1960년대에 등장한 프로그래밍 패러다임으로, 프로그램을 순차, 선택, 반복의 세 가지 기본 제어 구조로 구성하여 코드의 흐름을 체계적으로 관리하는 방식</description></item><item><title>절차적 프로그래밍 (Procedural Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/procedural-programming/</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/procedural-programming/</guid><description>프로그램의 실행 흐름을 일련의 절차나 함수로 구성하는 프로그래밍 패러다임</description></item><item><title>제약 프로그래밍 (Constraint programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/constraint-programming/</link><pubDate>Wed, 09 Oct 2024 09:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/constraint-programming/</guid><description>문제를 변수와 이들 변수에 대한 제약 조건의 형태로 표현하는 프로그래밍 방식</description></item><item><title>논리 프로그래밍 (Logic Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/logic-programming/</link><pubDate>Wed, 09 Oct 2024 09:05:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/logic-programming/</guid><description>형식 논리에 기반한 프로그래밍 패러다임</description></item><item><title>함수형 프로그래밍 (Functional Programming)</title><link>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/functional-programming/</link><pubDate>Wed, 09 Oct 2024 09:05:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-design-and-architecture/programming-paradigms/functional-programming/</guid><description>프로그램을 순수 함수들의 조합으로 구성하는 방식</description></item></channel></rss>