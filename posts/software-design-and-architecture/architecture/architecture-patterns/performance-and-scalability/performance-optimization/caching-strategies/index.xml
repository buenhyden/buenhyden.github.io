<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cache Strategy on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/performance-and-scalability/performance-optimization/caching-strategies/</link>
    <description>Recent content in Cache Strategy on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Sep 2024 14:14:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/performance-and-scalability/performance-optimization/caching-strategies/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Caching</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/performance-and-scalability/performance-optimization/caching-strategies/caching/</link>
      <pubDate>Mon, 30 Sep 2024 14:14:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/architecture/architecture-patterns/performance-and-scalability/performance-optimization/caching-strategies/caching/</guid>
      <description>캐싱 (Caching) 은 데이터/결과/요청을 임시로 저장함으로써 반복적인 연산, 입출력, 네트워크 요청에 필요한 시간과 비용을 대폭 줄여주는 핵심 시스템 설계 기법이다. 메모리, 디스크, 분산 환경 등 다양한 계층에서 적용되며, 성능 개선과 응답속도 향상, 시스템 부하 분산에 매우 효과적이다.</description>
    </item>
  </channel>
</rss>
