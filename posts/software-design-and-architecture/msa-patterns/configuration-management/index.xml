<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Configuration Management Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/</link>
    <description>Recent content in Configuration Management Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.141.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Dec 2024 04:00:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configuration-as-Code Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/configuration-as-code-pattern/</link>
      <pubDate>Mon, 30 Dec 2024 04:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/configuration-as-code-pattern/</guid>
      <description>Configuration-as-Code는 시스템의 구성을 버전 관리가 가능한 소스 코드 형태로 정의하고 관리하는 방식이다.</description>
    </item>
    <item>
      <title>Dynamic Configuration Pattern</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/dynamic-configuration-pattern/</link>
      <pubDate>Mon, 30 Dec 2024 04:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/dynamic-configuration-pattern/</guid>
      <description>Dynamic Configuration Pattern은 애플리케이션의 동작을 재배포 없이 실시간으로 변경할 수 있게 해주는 패턴</description>
    </item>
    <item>
      <title>외부 구성 저장소 패턴(External Configuration Store Pattern)</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/external-configuration-store/</link>
      <pubDate>Mon, 30 Dec 2024 01:58:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/configuration-management/external-configuration-store/</guid>
      <description>외부 구성 저장소 패턴(External Configuration Store Pattern)은 마이크로서비스 아키텍처(MSA)에서 구성 관리 패턴 중 하나로 애플리케이션의 구성 정보를 외부 저장소로 분리하여 관리하는 방식을 제안한다.</description>
    </item>
  </channel>
</rss>
