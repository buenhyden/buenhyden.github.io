<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cross-Cutting Concern Patterns on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/</link>
    <description>Recent content in Cross-Cutting Concern Patterns on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Sep 2024 11:10:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Externalized configuration</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/externalized-configuration/</link>
      <pubDate>Mon, 30 Sep 2024 11:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/externalized-configuration/</guid>
      <description>이 패턴은 애플리케이션의 구성 정보를 코드와 분리하여 외부에서 관리하는 방식을 말한다.</description>
    </item>
    <item>
      <title>Microservice Chassis</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/microservice-chassis/</link>
      <pubDate>Mon, 30 Sep 2024 11:10:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/microservice-chassis/</guid>
      <description>&lt;h2 id=&#34;microservice-chassis&#34;&gt;Microservice Chassis&lt;/h2&gt;
&lt;p&gt;Microservice Chassis는 마이크로서비스 아키텍처(MSA)에서 Cross-Cutting Concern을 효과적으로 관리하기 위한 패턴이다.&lt;br&gt;
이 패턴은 여러 마이크로서비스에서 공통적으로 필요한 기능들을 재사용 가능한 프레임워크나 라이브러리 형태로 제공한다.&lt;/p&gt;
&lt;p&gt;Microservice Chassis는 마이크로서비스 개발에 필요한 공통 기능을 제공하는 기본 프레임워크이다.&lt;br&gt;
이는 각 서비스의 개발자가 비즈니스 로직에 집중할 수 있도록 인프라 관련 문제를 추상화한다.&lt;/p&gt;
&lt;h3 id=&#34;주요-특징&#34;&gt;주요 특징&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;공통 기능의 추상화:&lt;/strong&gt; 인증 및 권한 부여, 로깅, 설정 관리, 헬스 체크, 메트릭 수집, 분산 추적 등 여러 서비스에 걸쳐 공통적으로 필요한 기능들을 섀시에서 제공하여 코드 중복을 최소화한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;일관된 빌드 및 배포 프로세스:&lt;/strong&gt; 빌드 로직과 배포 설정을 섀시에서 관리하여, 모든 서비스가 일관된 방식으로 빌드되고 배포될 수 있도록 지원한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;확장성:&lt;/strong&gt; 새로운 서비스 개발 시 섀시를 기반으로 빠르게 시작할 수 있으며, 공통 기능의 변경이 필요할 경우 섀시를 업데이트하여 모든 서비스에 적용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;주요-기능&#34;&gt;주요 기능&lt;/h3&gt;
&lt;p&gt;Microservice Chassis는 다음과 같은 Cross-Cutting Concern을 처리한다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Service Template</title>
      <link>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/service-template/</link>
      <pubDate>Mon, 30 Sep 2024 11:09:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-design-and-architecture/msa-patterns/cross-cutting-concern/service-template/</guid>
      <description>&lt;h2 id=&#34;service-template&#34;&gt;Service Template&lt;/h2&gt;
&lt;p&gt;Service Template 패턴은 마이크로서비스 아키텍처(MSA)에서 Cross-Cutting Concern을 효과적으로 관리하기 위한 중요한 패턴이다.&lt;br&gt;
이 패턴은 여러 마이크로서비스에서 공통적으로 필요한 기능들을 재사용 가능한 템플릿 형태로 제공한다.&lt;/p&gt;
&lt;p&gt;Service Template은 마이크로서비스 개발에 필요한 공통 기능과 구조를 제공하는 기본 템플릿이다.&lt;br&gt;
이는 각 서비스의 개발자가 비즈니스 로직에 집중할 수 있도록 인프라 관련 문제를 추상화한다.&lt;/p&gt;
&lt;h3 id=&#34;주요-특징&#34;&gt;주요 특징&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;재사용 가능한 코드 기반:&lt;/strong&gt; 서비스 템플릿은 빌드 로직, 공통 설정, 크로스커팅 관심사(예: 로깅, 보안, 설정 관리 등)를 포함한 실행 가능한 간단한 서비스를 제공한다. 이를 통해 새로운 서비스를 시작할 때 필요한 기본 구조를 빠르게 구축할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;일관성 유지:&lt;/strong&gt; 모든 서비스가 동일한 템플릿을 기반으로 생성되므로, 코드 구조와 설정이 일관되어 유지보수성과 가독성이 향상된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;주요-기능&#34;&gt;주요 기능&lt;/h3&gt;
&lt;p&gt;Service Template은 다음과 같은 Cross-Cutting Concern을 처리한다:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
