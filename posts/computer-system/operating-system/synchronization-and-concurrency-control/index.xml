<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Synchronization and Concurrency Control on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/</link>
    <description>Recent content in Synchronization and Concurrency Control on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 19 Oct 2024 10:54:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>잠금 (Lock)</title>
      <link>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/lock/</link>
      <pubDate>Sat, 19 Oct 2024 10:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/lock/</guid>
      <description>여러 스레드가 공유 자원에 동시에 접근하는 것을 방지하는 동기화 기본 요소이다. 임계 영역을 보호하고 한 번에 하나의 스레드만 접근할 수 있도록 한다.</description>
    </item>
    <item>
      <title>상호 배제 (Mutual Exclusion)</title>
      <link>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/mutual-exclusion/</link>
      <pubDate>Sat, 19 Oct 2024 07:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/mutual-exclusion/</guid>
      <description>여러 프로세스나 스레드가 공유 자원에 동시에 접근하는 것을 방지하는 동기화 메커니즘</description>
    </item>
    <item>
      <title>동기화 (Synchronization)</title>
      <link>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/synchronization/</link>
      <pubDate>Sat, 19 Oct 2024 07:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/synchronization/</guid>
      <description>여러 프로세스나 스레드가 공유 자원에 접근할 때 데이터의 일관성과 무결성을 보장하기 위한 메커니즘</description>
    </item>
    <item>
      <title>동시성 제어 (Concurrency Control)</title>
      <link>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/concurrency-control/</link>
      <pubDate>Sat, 19 Oct 2024 02:47:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-system/operating-system/synchronization-and-concurrency-control/concurrency-control/</guid>
      <description>동시성 제어는 여러 프로세스나 스레드가 동시에 공유 자원에 접근할 때, 데이터의 일관성과 무결성을 보장하기 위한 제어 메커니즘</description>
    </item>
  </channel>
</rss>
