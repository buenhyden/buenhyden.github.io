<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Kernel</title><link>https://buenhyden.github.io/posts/computer-system/operating-system/kernel/</link><description>Recent content in Kernel on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 15 Dec 2024 16:06:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/computer-system/operating-system/kernel/index.xml" rel="self" type="application/rss+xml"/><item><title>System Call Interface</title><link>https://buenhyden.github.io/posts/computer-system/operating-system/kernel/system-call-interface/</link><pubDate>Wed, 18 Dec 2024 03:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/computer-system/operating-system/kernel/system-call-interface/</guid><description>
&lt;h2>System Call Interface&lt;/h2>&lt;p>System Call Interface는 사용자 공간의 프로그램과 운영 체제 커널 사이의 중간 계층으로, 프로그램이 운영 체제의 서비스를 요청할 수 있게 해주는 인터페이스이다.&lt;/p>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Computer%20System/Operating%20System/Kernel/intro_system_call.webp"
alt="System Call Interface"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://www.scaler.com/topics/operating-system/system-calls-in-operating-system/" target="_blank" rel="noopener">https://www.scaler.com/topics/operating-system/system-calls-in-operating-system/&lt;/a> _&lt;/p>
&lt;h3>역할&lt;/h3>&lt;ul>
&lt;li>사용자 프로그램과 커널 사이의 추상화 계층 제공&lt;/li>
&lt;li>API 함수 호출을 시스템 콜로 변환&lt;/li>
&lt;li>사용자 모드에서 커널 모드로의 전환 관리&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure class="image-figure">
&lt;img src="https://buenhyden.github.io/posts/Computer%20System/Operating%20System/Kernel/Simplified_Structure_of_the_Linux_Kernel.svg.png"
alt="Simplified illustration of the structure of the Linux kernel"
loading="lazy" />
&lt;/figure>&lt;br>
_Source: &lt;a href="https://ko.m.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC:Simplified_Structure_of_the_Linux_Kernel.svg" target="_blank" rel="noopener">https://ko.m.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC:Simplified_Structure_of_the_Linux_Kernel.svg&lt;/a> _&lt;/p>
&lt;h3>주요 유형&lt;/h3>&lt;p>시스템 콜은 기능에 따라 여러 카테고리로 분류된다:&lt;/p>
&lt;ul>
&lt;li>프로세스 제어 (생성, 종료, 일시 중지 등)&lt;/li>
&lt;li>파일 관리 (열기, 읽기, 쓰기, 닫기 등)&lt;/li>
&lt;li>장치 관리 (입출력 작업)&lt;/li>
&lt;li>정보 유지 (시간, 날짜, 시스템 데이터 등)&lt;/li>
&lt;li>통신 (프로세스 간 통신)&lt;/li>
&lt;/ul>
&lt;h3>작동 방식&lt;/h3>&lt;p>시스템 콜 인터페이스의 작동 방식은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>사용자 프로그램이 API 함수를 호출한다.&lt;/li>
&lt;li>시스템 콜 인터페이스가 이 API 함수 호출을 가로채고, 적절한 시스템 콜로 변환한다.&lt;/li>
&lt;li>소프트웨어 인터럽트나 특별한 명령어를 사용하여 사용자 모드에서 커널 모드로 전환한다.&lt;/li>
&lt;li>시스템 콜 번호와 매개변수를 이용해 해당하는 커널 함수를 식별하고 호출한다.&lt;/li>
&lt;li>커널이 요청된 서비스를 수행한다.&lt;/li>
&lt;li>작업이 완료되면 결과값을 준비하고, 사용자 모드로 다시 전환한다.&lt;/li>
&lt;li>시스템 콜 인터페이스가 결과를 사용자 프로그램에 반환한다.&lt;/li>
&lt;/ol>
&lt;p>이 과정을 통해 시스템 콜 인터페이스는 사용자 프로그램과 운영 체제 커널 사이의 안전하고 제어된 상호작용을 가능하게 합니다.&lt;/p>
&lt;h3>보안&lt;/h3>&lt;ul>
&lt;li>사용자 공간과 커널 공간 사이의 보안 경계 역할&lt;/li>
&lt;li>권한 검사 및 접근 제어 수행&lt;/li>
&lt;/ul>
&lt;h3>성능&lt;/h3>&lt;ul>
&lt;li>컨텍스트 스위칭 발생으로 인한 오버헤드 존재&lt;/li>
&lt;li>효율적인 설계로 성능 최적화 필요&lt;/li>
&lt;/ul>
&lt;h3>System Call Interface와 API 차이&lt;/h3>&lt;p>시스템 콜 인터페이스와 API의 주요 차이점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>추상화 수준:&lt;/p>
&lt;ul>
&lt;li>API는 더 높은 수준의 추상화를 제공하며, 개발자가 사용하기 쉬운 인터페이스를 제공한다.&lt;/li>
&lt;li>시스템 콜 인터페이스는 더 낮은 수준으로, 운영 체제 커널과 직접 상호 작용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>기능:&lt;/p>
&lt;ul>
&lt;li>API는 다양한 기능을 제공하며, 여러 시스템 콜을 조합하여 복잡한 작업을 수행할 수 있다.&lt;/li>
&lt;li>시스템 콜 인터페이스는 운영 체제의 기본적인 서비스에 대한 직접적인 접근을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현:&lt;/p>
&lt;ul>
&lt;li>API는 일반적으로 라이브러리 함수로 구현된다.&lt;/li>
&lt;li>시스템 콜 인터페이스는 운영 체제 커널의 일부로 구현된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>호출 방식:&lt;/p>
&lt;ul>
&lt;li>API 함수는 일반적인 함수 호출 방식으로 사용된다.&lt;/li>
&lt;li>시스템 콜은 소프트웨어 인터럽트나 특별한 명령어를 통해 호출된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>실행 모드:&lt;/p>
&lt;ul>
&lt;li>API 함수는 사용자 모드에서 실행된다.&lt;/li>
&lt;li>시스템 콜은 커널 모드로의 전환을 필요로 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>범위:&lt;/p>
&lt;ul>
&lt;li>API는 시스템 콜뿐만 아니라 다른 기능도 포함할 수 있다.&lt;/li>
&lt;li>시스템 콜 인터페이스는 오직 운영 체제 서비스에 대한 접근만을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>