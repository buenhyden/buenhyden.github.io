<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Data Structure and Algorithm</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/</link><description>Recent content in Data Structure and Algorithm on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://buenhyden.github.io/posts/data-structure-and-algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Data Structure</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/data-structure/</link><pubDate>Sun, 27 Oct 2024 06:25:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/data-structure/</guid><description>
&lt;h2>Data Structure&lt;span class="hx-absolute -hx-mt-20" id="data-structure">&lt;/span>
&lt;a href="#data-structure" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>데이터를 체계적으로 구성하고 저장하며, 효율적으로 처리하기 위한 방법을 제공한다.&lt;br>
 프로그래밍에서 데이터를 다루는 기본적인 도구로, 효율적인 알고리즘 설계와 문제 해결의 핵심 요소이다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>효율성&lt;/strong>: 데이터를 효율적으로 저장하고 검색하여 프로그램의 성능을 향상시킨다.&lt;/li>
&lt;li>&lt;strong>확장성&lt;/strong>: 데이터 양이 증가해도 적절히 설계된 데이터 구조는 확장성을 제공한다.&lt;/li>
&lt;li>&lt;strong>유지보수성&lt;/strong>: 체계적인 데이터 구조는 코드 유지보수와 이해를 용이하게 만든다.&lt;/li>
&lt;li>&lt;strong>추상화&lt;/strong>: 데이터 구조는 추상 데이터 타입(ADT)을 구현하여 내부 동작을 숨기고, 사용자는 인터페이스만 활용한다.&lt;/li>
&lt;/ol>
&lt;h3>데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="데이터-구조">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="e1aca977880d4dce83f295c00.svg" alt="Types of Data Structure" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.designgurus.io/course-play/grokking-data-structures-for-coding-interviews/doc/types-of-data-structures" target="_blank" rel="noopener">https://www.designgurus.io/course-play/grokking-data-structures-for-coding-interviews/doc/types-of-data-structures&lt;/a> _&lt;/p>
&lt;h4>기본 데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="기본-데이터-구조">&lt;/span>
&lt;a href="#%ea%b8%b0%eb%b3%b8-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>선형 데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="선형-데이터-구조">&lt;/span>
&lt;a href="#%ec%84%a0%ed%98%95-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 구조&lt;/th>
&lt;th>접근&lt;/th>
&lt;th>삽입&lt;/th>
&lt;th>삭제&lt;/th>
&lt;th>검색&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>배열 (Array)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• 연속된 메모리 공간&lt;br>• 인덱스로 직접 접근&lt;br>• 고정된 크기&lt;br>• 캐시 지역성 우수&lt;/td>
&lt;td>• 순차적 데이터 저장&lt;br>• 빈번한 읽기 작업&lt;br>• 크기가 고정된 데이터&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동적 배열 (Dynamic Array)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1) 평균&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• 크기 자동 조정&lt;br>• 여유 공간 유지&lt;br>• 재할당 비용 발생&lt;br>• 배열의 장점 유지&lt;/td>
&lt;td>• 가변 크기 데이터&lt;br>• 스택 구현&lt;br>• 버퍼 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 리스트 (Linked List)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• 동적 메모리 할당&lt;br>• 불연속 메모리&lt;br>• 포인터로 연결&lt;br>• 유연한 크기 조정&lt;/td>
&lt;td>• 빈번한 삽입/삭제&lt;br>• 메모리 효율성 중요&lt;br>• 스택/큐 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>스택 (Stack)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• LIFO 구조&lt;br>• 제한된 접근&lt;br>• 간단한 구현&lt;br>• 함수 호출 관리&lt;/td>
&lt;td>• 함수 호출 스택&lt;br>• 실행 취소&lt;br>• 괄호 검사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>큐 (Queue)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• FIFO 구조&lt;br>• 순차적 처리&lt;br>• 대기열 관리&lt;br>• 버퍼링 지원&lt;/td>
&lt;td>• 작업 스케줄링&lt;br>• 버퍼 관리&lt;br>• BFS 구현&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>비선형 데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="비선형-데이터-구조">&lt;/span>
&lt;a href="#%eb%b9%84%ec%84%a0%ed%98%95-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 구조&lt;/th>
&lt;th>접근&lt;/th>
&lt;th>삽입&lt;/th>
&lt;th>삭제&lt;/th>
&lt;th>검색&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>이진 트리 (Binary Tree)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• 계층적 구조&lt;br>• 최대 2개 자식&lt;br>• 재귀적 속성&lt;br>• 트리 순회 용이&lt;/td>
&lt;td>• 계층 데이터&lt;br>• 수식 표현&lt;br>• 결정 트리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>이진 검색 트리 (BST)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>• 정렬된 트리&lt;br>• 중위 순회로 정렬&lt;br>• 불균형 가능&lt;br>• 검색 최적화&lt;/td>
&lt;td>• 정렬된 데이터&lt;br>• 범위 검색&lt;br>• 데이터베이스 인덱스&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>힙 (Heap)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>• 완전 이진 트리&lt;br>• 우선순위 관리&lt;br>• 부모-자식 관계&lt;br>• 효율적인 최댓값/최솟값&lt;/td>
&lt;td>• 우선순위 큐&lt;br>• 힙 정렬&lt;br>• 작업 스케줄링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>고급 데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="고급-데이터-구조">&lt;/span>
&lt;a href="#%ea%b3%a0%ea%b8%89-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>해시 기반 구조&lt;span class="hx-absolute -hx-mt-20" id="해시-기반-구조">&lt;/span>
&lt;a href="#%ed%95%b4%ec%8b%9c-%ea%b8%b0%eb%b0%98-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 구조&lt;/th>
&lt;th>접근&lt;/th>
&lt;th>삽입&lt;/th>
&lt;th>삭제&lt;/th>
&lt;th>검색&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>해시 테이블&lt;/td>
&lt;td>O(1) 평균&lt;/td>
&lt;td>O(1) 평균&lt;/td>
&lt;td>O(1) 평균&lt;/td>
&lt;td>O(1) 평균&lt;/td>
&lt;td>• 키-값 쌍&lt;br>• 해시 함수 사용&lt;br>• 충돌 해결 필요&lt;br>• 동적 크기 조정&lt;/td>
&lt;td>• 캐싱&lt;br>• 데이터베이스 인덱싱&lt;br>• 심볼 테이블&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>블룸 필터&lt;/td>
&lt;td>-&lt;/td>
&lt;td>O(k)&lt;/td>
&lt;td>-&lt;/td>
&lt;td>O(k)&lt;/td>
&lt;td>• 확률적 자료구조&lt;br>• 공간 효율적&lt;br>• 거짓 양성 가능&lt;br>• 삭제 불가&lt;/td>
&lt;td>• 중복 검사&lt;br>• 캐시 필터링&lt;br>• 스펠링 체크&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>균형 트리&lt;span class="hx-absolute -hx-mt-20" id="균형-트리">&lt;/span>
&lt;a href="#%ea%b7%a0%ed%98%95-%ed%8a%b8%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 구조&lt;/th>
&lt;th>접근&lt;/th>
&lt;th>삽입&lt;/th>
&lt;th>삭제&lt;/th>
&lt;th>검색&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AVL 트리&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>• 엄격한 균형&lt;br>• 자동 재조정&lt;br>• 높이 차이 ≤1&lt;br>• 빈번한 회전&lt;/td>
&lt;td>• 안정적 성능 필요&lt;br>• 데이터베이스&lt;br>• 메모리 관리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>레드-블랙 트리&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>• 느슨한 균형&lt;br>• 컬러 속성&lt;br>• 적은 회전&lt;br>• 실용적 성능&lt;/td>
&lt;td>• 파일 시스템&lt;br>• 프로세스 스케줄링&lt;br>• STL 구현&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>B-트리&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>• 다중 경로&lt;br>• 디스크 최적화&lt;br>• 노드당 많은 키&lt;br>• 높이 균형&lt;/td>
&lt;td>• 데이터베이스&lt;br>• 파일 시스템&lt;br>• 외부 메모리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>특수 목적 구조&lt;span class="hx-absolute -hx-mt-20" id="특수-목적-구조">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%88%98-%eb%aa%a9%ec%a0%81-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 구조&lt;/th>
&lt;th>접근&lt;/th>
&lt;th>삽입&lt;/th>
&lt;th>삭제&lt;/th>
&lt;th>검색&lt;/th>
&lt;th>특징&lt;/th>
&lt;th>주요 사용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>트라이 (Trie)&lt;/td>
&lt;td>O(m)&lt;/td>
&lt;td>O(m)&lt;/td>
&lt;td>O(m)&lt;/td>
&lt;td>O(m)&lt;/td>
&lt;td>• 문자열 특화&lt;br>• 접두사 검색&lt;br>• 공간 집약적&lt;br>• 효율적 검색&lt;/td>
&lt;td>• 자동 완성&lt;br>• 사전&lt;br>• 라우팅 테이블&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>그래프&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>O(V+E)&lt;/td>
&lt;td>• 노드와 엣지&lt;br>• 다양한 표현&lt;br>• 복잡한 관계&lt;br>• 순환 가능&lt;/td>
&lt;td>• 소셜 네트워크&lt;br>• 네비게이션&lt;br>• 네트워크 토폴로지&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>디스조인트 셋&lt;/td>
&lt;td>O(α(n))&lt;/td>
&lt;td>O(α(n))&lt;/td>
&lt;td>-&lt;/td>
&lt;td>O(α(n))&lt;/td>
&lt;td>• 집합 관리&lt;br>• 경로 압축&lt;br>• 유니온-파인드&lt;br>• 거의 상수 시간&lt;/td>
&lt;td>• 크루스칼 알고리즘&lt;br>• 연결성 확인&lt;br>• 클러스터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>[m: 문자열 길이, V: 정점 수, E: 간선 수, α(n): 애커만 함수의 역함수]&lt;/p>
&lt;h3>데이터 구조의 선택 기준&lt;span class="hx-absolute -hx-mt-20" id="데이터-구조의-선택-기준">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0%ec%9d%98-%ec%84%a0%ed%83%9d-%ea%b8%b0%ec%a4%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>다음과 같은 요소들을 고려하여 결정된다.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>데이터 접근 패턴&lt;/p>
&lt;ul>
&lt;li>배열은 인덱스를 통한 빠른 접근이 가능하지만 삽입과 삭제가 어렵다.&lt;/li>
&lt;li>링크드 리스트는 삽입과 삭제가 용이하지만 데이터 접근 속도가 느릴 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>시간 복잡도와 공간 복잡도&lt;/p>
&lt;ul>
&lt;li>해시 테이블은 평균적으로 O(1)의 시간 복잡도를 가지지만, 최악의 경우 O(n)이 될 수 있다.&lt;/li>
&lt;li>이진 검색 트리는 평균적으로 O(log n)의 검색, 삽입, 삭제 시간이 소요된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터의 크기와 형태&lt;/p>
&lt;ul>
&lt;li>대용량 데이터를 처리해야 하는 경우, 배열과 같은 연속된 메모리 공간을 요구하는 자료 구조는 부적합할 수 있다.&lt;/li>
&lt;li>트리나 그래프는 복잡한 데이터 구조를 나타내는 데 유리하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>특정 연산의 빈도&lt;/p>
&lt;ul>
&lt;li>큐나 스택은 삽입과 삭제가 빈번한 경우에 적합하다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>동시성 제어&lt;/p>
&lt;ul>
&lt;li>멀티스레드 환경에서는 스레드 안전성을 제공하는 자료 구조를 선택해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>사용 용이성 및 유지보수&lt;/p>
&lt;ul>
&lt;li>간단한 자료 구조를 선호하는 것이 유지 보수 측면에서 유리할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>응용 프로그램의 요구 사항&lt;/p>
&lt;ul>
&lt;li>각 응용 프로그램의 고유한 요구 사항과 제약 조건에 맞는 최적의 자료 구조를 선택해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>자료의 처리 시간과 활용 빈도&lt;/p>
&lt;ul>
&lt;li>자료의 처리 시간, 크기, 활용 빈도, 갱신 정도를 고려해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>알고리즘과의 조화&lt;/p>
&lt;ul>
&lt;li>특정 자료 구조를 사용하는 것이 특정 알고리즘을 구현하기에 적합한 경우가 있으므로, 이 두 가지를 조화롭게 고려해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>이러한 기준들을 종합적으로 고려하여 문제 해결에 가장 적합한 데이터 구조를 선택해야 한다.&lt;br>
효율적인 데이터 구조 선택은 알고리즘의 성능을 최적화하고 전반적인 프로그램의 효율성을 높이는 데 중요한 역할을 한다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>계산 복잡도 (Computational Complexity)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/computational-complexity/</link><pubDate>Sat, 26 Oct 2024 01:46:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/computational-complexity/</guid><description>
&lt;h2>계산 복잡도 (Computational Complexity)&lt;span class="hx-absolute -hx-mt-20" id="계산-복잡도-computational-complexity">&lt;/span>
&lt;a href="#%ea%b3%84%ec%82%b0-%eb%b3%b5%ec%9e%a1%eb%8f%84-computational-complexity" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>계산 복잡도 이론은 컴퓨터 과학의 중요한 분야로, 알고리즘과 문제의 효율성을 분석하고 분류하는 데 사용된다. 이는 알고리즘이나 문제를 해결하는 데 필요한 자원의 양을 측정하는 것으로, 주로 시간 복잡도(Time Complexity)와 공간 복잡도(Space Complexity)로 나누어 분석한다.&lt;/p>
&lt;p>계산 복잡도 이론은 다음과 같은 주요 특징을 가진다:&lt;/p>
&lt;ol>
&lt;li>문제 해결에 필요한 자원의 양을 정량화한다.&lt;/li>
&lt;li>알고리즘의 효율성을 평가하고 비교한다.&lt;/li>
&lt;li>문제를 복잡도 클래스로 분류한다.&lt;/li>
&lt;li>주로 최악의 경우 시나리오를 고려한다.&lt;/li>
&lt;/ol>
&lt;h3>시간복잡도와 공간복잡도 (Time Complexity and Space Complexity)&lt;span class="hx-absolute -hx-mt-20" id="시간복잡도와-공간복잡도-time-complexity-and-space-complexity">&lt;/span>
&lt;a href="#%ec%8b%9c%ea%b0%84%eb%b3%b5%ec%9e%a1%eb%8f%84%ec%99%80-%ea%b3%b5%ea%b0%84%eb%b3%b5%ec%9e%a1%eb%8f%84-time-complexity-and-space-complexity" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시간복잡도와 공간복잡도는 알고리즘의 효율성을 평가하는 중요한 개념으로, 이를 이해하고 최적화하는 것은 효율적인 알고리즘 설계의 핵심이다. 알고리즘의 효율성을 개선하기 위해서는 다양한 알고리즘 설계 기법을 이해하고 적용할 필요가 있으며, 이를 통해 더 나은 알고리즘을 개발할 수 있다.&lt;/p>
&lt;h3>시간복잡도 (Time Complexity)&lt;span class="hx-absolute -hx-mt-20" id="시간복잡도-time-complexity">&lt;/span>
&lt;a href="#%ec%8b%9c%ea%b0%84%eb%b3%b5%ec%9e%a1%eb%8f%84-time-complexity" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시간 복잡도는 알고리즘이 실행되는 데 걸리는 시간을 측정한다:&lt;/p>
&lt;ul>
&lt;li>입력 크기에 따른 연산 횟수로 표현된다.&lt;/li>
&lt;li>주로 빅오(Big O) 표기법을 사용합니다.&lt;/li>
&lt;li>예: O(1), O(log n), O(n), O(n log n), O(n²), O(2ⁿ)&lt;br>
시간 복잡도는 알고리즘의 실행 속도를 나타내며, 주로 반복문의 수행 횟수에 큰 영향을 받는다.&lt;/li>
&lt;/ul>
&lt;h4>주요 종류 (Big O 표기법)&lt;span class="hx-absolute -hx-mt-20" id="주요-종류-big-o-표기법">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ec%a2%85%eb%a5%98-big-o-%ed%91%9c%ea%b8%b0%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>O(1) - 상수 시간&lt;span class="hx-absolute -hx-mt-20" id="o1---상수-시간">&lt;/span>
&lt;a href="#o1---%ec%83%81%ec%88%98-%ec%8b%9c%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기와 관계없이 항상 같은 시간이 걸린다.&lt;/li>
&lt;li>가장 효율적인 시간복잡도&lt;/li>
&lt;li>예: 배열의 첫 번째 요소 접근, 스택의 push/pop 연산&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">constant_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;배열의 첫 번째 요소를 반환하는 함수&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>O(log n) - 로그 시간&lt;span class="hx-absolute -hx-mt-20" id="olog-n---로그-시간">&lt;/span>
&lt;a href="#olog-n---%eb%a1%9c%ea%b7%b8-%ec%8b%9c%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기가 증가할 때마다 처리 시간이 로그만큼만 증가&lt;/li>
&lt;li>매우 효율적이며, 큰 데이터셋에서도 좋은 성능을 보인다.&lt;/li>
&lt;li>예: 이진 탐색, 균형 이진 트리에서의 검색&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">binary_search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;정렬된 배열에서 이진 검색 수행&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">left&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">left&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">left&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">mid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">left&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">right&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>O(n) - 선형 시간&lt;span class="hx-absolute -hx-mt-20" id="on---선형-시간">&lt;/span>
&lt;a href="#on---%ec%84%a0%ed%98%95-%ec%8b%9c%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기에 비례하여 실행 시간이 증가합니다.&lt;/li>
&lt;li>적절한 효율성을 가지며, 많은 기본 알고리즘의 시간복잡도.&lt;/li>
&lt;li>예: 배열의 모든 요소 순회, 선형 탐색&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">linear_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;배열의 모든 요소를 순회하며 합계를 계산&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">num&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="c1"># n번 반복&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">total&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">total&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>O(n Log n) - 선형 로그 시간&lt;span class="hx-absolute -hx-mt-20" id="on-log-n---선형-로그-시간">&lt;/span>
&lt;a href="#on-log-n---%ec%84%a0%ed%98%95-%eb%a1%9c%ea%b7%b8-%ec%8b%9c%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>선형-로그 시간으로, 효율적인 정렬 알고리즘의 시간복잡도.&lt;/li>
&lt;li>대규모 데이터 정렬에 적합&lt;/li>
&lt;li>예: 퀵 정렬, 병합 정렬&lt;/li>
&lt;/ul>
&lt;h5>O(n^2) - 이차 시간&lt;span class="hx-absolute -hx-mt-20" id="on2---이차-시간">&lt;/span>
&lt;a href="#on2---%ec%9d%b4%ec%b0%a8-%ec%8b%9c%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기의 제곱에 비례하여 실행 시간이 증가한다.&lt;/li>
&lt;li>작은 입력에는 괜찮지만, 큰 데이터셋에서는 비효율적&lt;/li>
&lt;li>예: 버블 정렬, 선택 정렬&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">quadratic_time&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;모든 가능한 숫자 쌍의 합을 계산&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)):&lt;/span> &lt;span class="c1"># n번 반복&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)):&lt;/span> &lt;span class="c1"># 각각에 대해 n번 반복&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">results&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>O(2^n) - 지수 시간&lt;span class="hx-absolute -hx-mt-20" id="o2n---지수-시간">&lt;/span>
&lt;a href="#o2n---%ec%a7%80%ec%88%98-%ec%8b%9c%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>가장 비효율적인 시간복잡도&lt;/li>
&lt;li>입력이 하나 증가할 때마다 실행 시간이 두 배로 증가하는 알고리즘&lt;/li>
&lt;li>재귀적인 문제나 백트래킹 문제에서 발생&lt;/li>
&lt;li>예시: 피보나치 수열을 계산하는 단순 재귀 알고리즘.&lt;/li>
&lt;/ul>
&lt;h5>O(n!) - 팩토리얼 시간 복잡도&lt;span class="hx-absolute -hx-mt-20" id="on---팩토리얼-시간-복잡도">&lt;/span>
&lt;a href="#on---%ed%8c%a9%ed%86%a0%eb%a6%ac%ec%96%bc-%ec%8b%9c%ea%b0%84-%eb%b3%b5%ec%9e%a1%eb%8f%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>매우 비효율적인 시간복잡도&lt;/li>
&lt;li>데이터의 모든 가능한 순열을 확인해야 하는 경우&lt;/li>
&lt;li>예시: 순열을 전부 확인하는 완전 탐색 알고리즘&lt;/li>
&lt;/ul>
&lt;h3>공간복잡도 (Space Complexity)&lt;span class="hx-absolute -hx-mt-20" id="공간복잡도-space-complexity">&lt;/span>
&lt;a href="#%ea%b3%b5%ea%b0%84%eb%b3%b5%ec%9e%a1%eb%8f%84-space-complexity" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>공간 복잡도는 알고리즘이 실행되는 동안 사용하는 메모리의 양을 측정한다:&lt;/p>
&lt;ul>
&lt;li>고정 공간: 입력 크기와 무관한 공간 (변수, 상수 등)&lt;/li>
&lt;li>가변 공간: 입력 크기에 따라 변하는 공간 (동적 할당 메모리, 재귀 호출 스택 등)&lt;br>
공간 복잡도는 S(P) = c + Sp(n) 형태로 표현되며, c는 고정 공간, Sp(n)은 가변 공간을 나타낸다.&lt;/li>
&lt;/ul>
&lt;h4>주요 종류&lt;span class="hx-absolute -hx-mt-20" id="주요-종류">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>O(1) - 상수 공간&lt;span class="hx-absolute -hx-mt-20" id="o1---상수-공간">&lt;/span>
&lt;a href="#o1---%ec%83%81%ec%88%98-%ea%b3%b5%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기와 관계없이 일정한 추가 공간만 사용한다.&lt;/li>
&lt;li>메모리 효율이 가장 좋다.&lt;/li>
&lt;li>예시: 간단한 변수 몇 개만 사용하는 경우&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">space_constant&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;입력 크기와 관계없이 일정한 추가 공간만 사용&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">result&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">result&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>O(n) - 선형 공간&lt;span class="hx-absolute -hx-mt-20" id="on---선형-공간">&lt;/span>
&lt;a href="#on---%ec%84%a0%ed%98%95-%ea%b3%b5%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기에 비례하는 추가 공간이 필요하다.&lt;/li>
&lt;li>많은 알고리즘의 일반적인 공간복잡도.&lt;/li>
&lt;li>예시: 입력 크기만큼의 새로운 배열을 생성하는 경우&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">space_linear&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;입력 크기에 비례하는 추가 공간 사용&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span> &lt;span class="c1"># 크기 n의 새로운 배열 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">results&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">results&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>O(n^2) - 이차 공간&lt;span class="hx-absolute -hx-mt-20" id="on2---이차-공간">&lt;/span>
&lt;a href="#on2---%ec%9d%b4%ec%b0%a8-%ea%b3%b5%ea%b0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>입력 크기의 제곱에 비례하는 공간이 필요.&lt;/li>
&lt;li>큰 입력에 대해 많은 메모리가 필요.&lt;/li>
&lt;li>예시: n×n 크기의 2차원 행렬을 생성하는 경우&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">space_quadratic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;2차원 행렬 생성&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">matrix&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">row&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">row&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">matrix&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">row&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">matrix&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>시간 복잡도와 공간 복잡도의 관계&lt;span class="hx-absolute -hx-mt-20" id="시간-복잡도와-공간-복잡도의-관계">&lt;/span>
&lt;a href="#%ec%8b%9c%ea%b0%84-%eb%b3%b5%ec%9e%a1%eb%8f%84%ec%99%80-%ea%b3%b5%ea%b0%84-%eb%b3%b5%ec%9e%a1%eb%8f%84%ec%9d%98-%ea%b4%80%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시간 복잡도와 공간 복잡도는 종종 상호 관련이 있지만, 항상 반비례 관계에 있는 것은 아니다:&lt;/p>
&lt;ol>
&lt;li>일반적으로 시간을 절약하기 위해 더 많은 공간을 사용하거나, 공간을 절약하기 위해 더 많은 시간을 소비하는 경향이 있다.&lt;/li>
&lt;li>현대 컴퓨팅에서는 메모리가 상대적으로 풍부해져 시간 복잡도에 더 중점을 두는 경향이 있다.&lt;/li>
&lt;/ol>
&lt;h3>계산 복잡도의 중요성&lt;span class="hx-absolute -hx-mt-20" id="계산-복잡도의-중요성">&lt;/span>
&lt;a href="#%ea%b3%84%ec%82%b0-%eb%b3%b5%ec%9e%a1%eb%8f%84%ec%9d%98-%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>알고리즘 효율성 평가: 다양한 알고리즘의 성능을 객관적으로 비교할 수 있다.&lt;/li>
&lt;li>자원 사용 예측: 대규모 데이터 처리 시 필요한 시간과 메모리를 예측할 수 있다.&lt;/li>
&lt;li>알고리즘 설계: 효율적인 알고리즘을 개발하는 데 지침을 제공한다.&lt;/li>
&lt;li>문제 분류: NP-완전 문제와 같은 복잡도 클래스를 통해 문제의 난이도를 분류한다.&lt;/li>
&lt;/ol>
&lt;h3>최적화하는 방법&lt;span class="hx-absolute -hx-mt-20" id="최적화하는-방법">&lt;/span>
&lt;a href="#%ec%b5%9c%ec%a0%81%ed%99%94%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>시간 복잡도와 공간 복잡도 사이에는 종종 트레이드오프 관계가 있으므로, 상황에 따라 적절한 균형을 찾는 것이 중요하다. 또한 실제 성능 측정을 통해 최적화의 효과를 확인하고, 필요한 수준의 성능과 자원 사용을 고려하여 균형을 맞추는 것이 중요하다.&lt;/p>
&lt;blockquote>
&lt;p>트레이드 오프(Trade-off)&lt;br>
두 개의 대안이 있을 때, 어느 하나를 선택하면 다른 하나의 성과가 줄어드는 상황.&lt;br>
즉, 한 쪽을 추구하면 다른 쪽을 희생해야 하는 관계를 의미한다.&lt;/p>
&lt;/blockquote>
&lt;p>시간 복잡도와 공간 복잡도를 최적화하는 방법은 다음과 같다:&lt;/p>
&lt;h4>시간 복잡도 최적화&lt;span class="hx-absolute -hx-mt-20" id="시간-복잡도-최적화">&lt;/span>
&lt;a href="#%ec%8b%9c%ea%b0%84-%eb%b3%b5%ec%9e%a1%eb%8f%84-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>효율적인 알고리즘 선택&lt;/p>
&lt;ul>
&lt;li>정렬이 필요한 경우 O(n log n) 시간 복잡도를 가진 퀵 정렬이나 병합 정렬 사용&lt;/li>
&lt;li>탐색 시 이진 탐색 등의 O(log n) 알고리즘 활용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>반복문 최적화&lt;/p>
&lt;ul>
&lt;li>중첩 반복문 줄이기&lt;/li>
&lt;li>불필요한 반복 제거&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>적절한 자료구조 사용&lt;/p>
&lt;ul>
&lt;li>해시 테이블을 이용한 O(1) 시간 복잡도의 검색 구현&lt;/li>
&lt;li>균형 이진 트리를 이용한 O(log n) 시간 복잡도의 삽입/삭제/검색 구현&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>캐싱과 메모이제이션&lt;/p>
&lt;ul>
&lt;li>이미 계산된 결과를 저장하여 재사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>동적 프로그래밍&lt;/p>
&lt;ul>
&lt;li>큰 문제를 작은 부분 문제로 나누어 해결&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>공간 복잡도 최적화&lt;span class="hx-absolute -hx-mt-20" id="공간-복잡도-최적화">&lt;/span>
&lt;a href="#%ea%b3%b5%ea%b0%84-%eb%b3%b5%ec%9e%a1%eb%8f%84-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>인플레이스(In-place) 알고리즘 사용&lt;/p>
&lt;ul>
&lt;li>추가 메모리 사용을 최소화하는 알고리즘 선택&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>메모리 재사용&lt;/p>
&lt;ul>
&lt;li>불필요한 변수 제거 및 변수 재사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>적절한 자료구조 선택&lt;/p>
&lt;ul>
&lt;li>상황에 맞는 효율적인 자료구조 사용 (예: 연결 리스트 대신 배열)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>재귀 대신 반복문 사용&lt;/p>
&lt;ul>
&lt;li>재귀 호출로 인한 스택 메모리 사용 줄이기&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>비트 연산 활용&lt;/p>
&lt;ul>
&lt;li>정수형 변수를 비트 마스크로 활용하여 메모리 사용 줄이기&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>메모리 풀링&lt;/p>
&lt;ul>
&lt;li>객체 재사용을 통한 메모리 할당/해제 최소화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>알고리즘 설계 (Algorithm Design)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm-design/</link><pubDate>Mon, 28 Oct 2024 05:15:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm-design/</guid><description>
&lt;h2>알고리즘 설계 (Algorithm Design)&lt;span class="hx-absolute -hx-mt-20" id="알고리즘-설계-algorithm-design">&lt;/span>
&lt;a href="#%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ec%84%a4%ea%b3%84-algorithm-design" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>알고리즘 설계는 주어진 문제를 효율적으로 해결하기 위한 체계적인 과정이다.&lt;/p>
&lt;p>알고리즘 설계의 주요 단계와 각 단계별 특징은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>문제 정의 및 분석&lt;br>
이 단계에서는 해결해야 할 문제를 명확하게 이해하고 정의한다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>목적&lt;/strong>: 문제의 본질을 파악하고 요구사항을 명확히 한다.&lt;/li>
&lt;li>&lt;strong>주요 활동&lt;/strong>:
&lt;ul>
&lt;li>문제의 입력과 출력을 구체적으로 분석한다.&lt;/li>
&lt;li>문제의 제약 조건과 범위를 파악한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>특징&lt;/strong>: 이 단계는 알고리즘 설계의 기초가 되며, 문제를 정확히 이해하지 못하면 잘못된 해결책을 도출할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>알고리즘 설계&lt;br>
문제 해결을 위한 구체적인 단계와 절차를 개발하는 단계이다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>목적&lt;/strong>: 문제를 해결하기 위한 효율적이고 체계적인 방법을 고안합니다.&lt;/li>
&lt;li>&lt;strong>주요 활동&lt;/strong>:
&lt;ul>
&lt;li>문제를 더 작은 하위 문제로 분해한다.&lt;/li>
&lt;li>문제 해결을 위한 논리적 단계를 구성한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>특징&lt;/strong>: 이 단계에서는 다양한 알고리즘 설계 기법(분할 정복, 동적 프로그래밍, 탐욕 알고리즘 등)을 활용할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>알고리즘 표현&lt;br>
설계한 알고리즘을 명확하게 표현하는 단계이다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>목적&lt;/strong>: 알고리즘을 다른 사람이 이해할 수 있도록 명확하게 기술한다.&lt;/li>
&lt;li>&lt;strong>주요 활동&lt;/strong>:
&lt;ul>
&lt;li>의사코드(pseudocode) 작성&lt;/li>
&lt;li>순서도(flowchart) 작성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>특징&lt;/strong>: 알고리즘은 명확하고 모호하지 않아야 하며, 각 단계가 실행 가능해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>알고리즘 검증 및 분석&lt;br>
알고리즘의 정확성과 효율성을 평가하는 단계이다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>목적&lt;/strong>: 알고리즘이 모든 가능한 입력에 대해 올바른 결과를 도출하는지 확인하고, 성능을 분석한다.&lt;/li>
&lt;li>&lt;strong>주요 활동&lt;/strong>:
&lt;ul>
&lt;li>알고리즘의 정확성 검증&lt;/li>
&lt;li>시간 복잡도와 공간 복잡도 분석&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>특징&lt;/strong>: 이 단계에서는 알고리즘의 효율성을 평가하여 개선이 필요한 부분을 식별한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현&lt;br>
알고리즘을 실제 프로그래밍 언어로 구현하는 단계이다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>목적&lt;/strong>: 설계한 알고리즘을 컴퓨터가 실행할 수 있는 형태로 변환한다.&lt;/li>
&lt;li>&lt;strong>주요 활동&lt;/strong>:
&lt;ul>
&lt;li>프로그래밍 언어 선택&lt;/li>
&lt;li>코드 작성 및 디버깅&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>특징&lt;/strong>: 구현 단계에서는 선택한 프로그래밍 언어의 특성을 고려하여 알고리즘을 최적화할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>테스트 및 유지보수&lt;br>
구현된 알고리즘을 테스트하고 필요에 따라 개선하는 단계이다.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>목적&lt;/strong>: 알고리즘의 실제 성능을 확인하고 문제점을 해결한다.&lt;/li>
&lt;li>&lt;strong>주요 활동&lt;/strong>:
&lt;ul>
&lt;li>다양한 입력 데이터로 테스트 수행&lt;/li>
&lt;li>버그 수정 및 성능 최적화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>특징&lt;/strong>: 이 단계는 지속적으로 이루어지며, 알고리즘의 품질을 향상시키는 데 중요한 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>알고리즘 설계는 반복적인 과정이며, 각 단계에서 발견된 문제점이나 개선사항을 바탕으로 이전 단계로 돌아가 수정하는 것이 일반적이다.&lt;br>
효과적인 알고리즘 설계를 위해서는 문제에 대한 깊은 이해와 다양한 알고리즘 기법에 대한 지식, 그리고 체계적인 접근 방식이 필요하다.&lt;/p>
&lt;h3>문제알고리즘 설계의 단계별 예시&lt;span class="hx-absolute -hx-mt-20" id="문제알고리즘-설계의-단계별-예시">&lt;/span>
&lt;a href="#%eb%ac%b8%ec%a0%9c%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ec%84%a4%ea%b3%84%ec%9d%98-%eb%8b%a8%ea%b3%84%eb%b3%84-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>스마트 주차장 관리 시스템의 알고리즘 설계 과정을 단계별로 상세히 살펴보자.&lt;/p>
&lt;h4>1. 문제 정의 및 분석&lt;span class="hx-absolute -hx-mt-20" id="1-문제-정의-및-분석">&lt;/span>
&lt;a href="#1-%eb%ac%b8%ec%a0%9c-%ec%a0%95%ec%9d%98-%eb%b0%8f-%eb%b6%84%ec%84%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>스마트 주차장 관리 시스템은 주차장의 효율적인 운영과 사용자 편의성을 향상시키기 위한 자동화된 시스템.&lt;/p>
&lt;h5>입력 데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="입력-데이터-구조">&lt;/span>
&lt;a href="#%ec%9e%85%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>차량 정보&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>차량 번호&lt;/td>
&lt;td>차량 식별을 위한 고유 번호&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>차량 크기&lt;/td>
&lt;td>소형/중형/대형으로 구분&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>입차 시간&lt;/td>
&lt;td>주차장 진입 시점 기록&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장애인 차량 여부&lt;/td>
&lt;td>장애인 전용 구역 사용 자격 확인&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>정기 주차권 보유 여부&lt;/td>
&lt;td>정기권 사용자 우선 배정 확인&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>주차장 정보&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>전체 주차 공간 수&lt;/td>
&lt;td>주차장의 총 수용 가능 차량 수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주차 공간 상태&lt;/td>
&lt;td>각 공간의 사용 가능 여부(빈 공간/사용 중)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>장애인 전용 구역 위치&lt;/td>
&lt;td>장애인 차량 전용 주차 구역 정보&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>구역별 센서 데이터&lt;/td>
&lt;td>각 주차 공간의 실시간 상태 모니터링 정보&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>요금 정보&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>기본 요금&lt;/td>
&lt;td>최초 주차 시 적용되는 기본 요금&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>추가 시간당 요금&lt;/td>
&lt;td>기본 시간 초과 시 적용되는 시간당 요금&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>정기권 종류별 요금&lt;/td>
&lt;td>다양한 정기권의 종류와 각각의 요금 체계&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>출력 데이터 구조&lt;span class="hx-absolute -hx-mt-20" id="출력-데이터-구조">&lt;/span>
&lt;a href="#%ec%b6%9c%eb%a0%a5-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>주차 관련 정보&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>최적 주차 공간 위치&lt;/td>
&lt;td>차량 특성에 맞는 최적의 주차 공간 안내&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>현재 주차 가능 공간 수&lt;/td>
&lt;td>실시간 이용 가능한 주차 공간의 수&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주차장 점유율&lt;/td>
&lt;td>전체 주차 공간 대비 사용 중인 공간의 비율&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>요금 관련 정보&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>주차 요금 계산 결과&lt;/td>
&lt;td>주차 시간에 따른 최종 요금 계산&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>정기권 잔여 기간&lt;/td>
&lt;td>정기권 사용자의 남은 사용 기간 정보&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>상태 정보&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>데이터 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>실시간 주차장 상태&lt;/td>
&lt;td>전체 주차장의 현재 운영 상태&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>차량별 주차 위치&lt;/td>
&lt;td>각 차량의 현재 주차 위치 정보&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>경보 및 알림&lt;/td>
&lt;td>비상 상황 또는 주요 이벤트 알림&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>제약조건&lt;span class="hx-absolute -hx-mt-20" id="제약조건">&lt;/span>
&lt;a href="#%ec%a0%9c%ec%95%bd%ec%a1%b0%ea%b1%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>시스템 제약&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>제약 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>실시간 처리&lt;/td>
&lt;td>모든 데이터는 실시간으로 처리되어야 함&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>동시 다중 사용자 지원&lt;/td>
&lt;td>여러 사용자의 동시 접속 및 처리 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>센서 데이터 처리 지연 최소화&lt;/td>
&lt;td>센서 데이터의 신속한 처리 및 반영&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>비즈니스 제약&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>제약 항목&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>장애인 구역 제한&lt;/td>
&lt;td>장애인 전용 구역은 해당 차량만 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>차량 크기별 공간 배정&lt;/td>
&lt;td>차량 크기에 적합한 주차 공간만 배정&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>정기권 사용자 우선 배정&lt;/td>
&lt;td>정기권 보유 차량에 대한 우선 주차 공간 배정&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>2. 알고리즘 설계&lt;span class="hx-absolute -hx-mt-20" id="2-알고리즘-설계">&lt;/span>
&lt;a href="#2-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ec%84%a4%ea%b3%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>이 시스템에서는 여러 알고리즘이 필요하며, 각각의 목적과 선택 이유를 정리한다.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>최적 주차 공간 배정 알고리즘&lt;/p>
&lt;ul>
&lt;li>알고리즘: 가중 그래프 최단 경로 (Dijkstra&amp;rsquo;s Algorithm)&lt;/li>
&lt;li>목적: 차량 특성과 현재 위치에 기반한 최적 주차 공간 선택&lt;/li>
&lt;li>선택 이유: 다양한 조건(거리, 크기, 접근성)을 가중치로 반영 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>실시간 모니터링 알고리즘&lt;/p>
&lt;ul>
&lt;li>알고리즘: 이벤트 기반 상태 관리&lt;/li>
&lt;li>목적: 센서 데이터 실시간 처리 및 상태 업데이트&lt;/li>
&lt;li>선택 이유: 비동기 처리로 시스템 반응성 향상&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>요금 계산 알고리즘&lt;/p>
&lt;ul>
&lt;li>알고리즘: 동적 프로그래밍&lt;/li>
&lt;li>목적: 다양한 요금제와 할인 적용&lt;/li>
&lt;li>선택 이유: 복잡한 요금 규칙을 효율적으로 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>3. 알고리즘 표현&lt;span class="hx-absolute -hx-mt-20" id="3-알고리즘-표현">&lt;/span>
&lt;a href="#3-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ed%91%9c%ed%98%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>여기서는 최적 주차 공간 배정 알고리즘을 자세히 살펴보자.&lt;/p>
&lt;h5>의사코드&lt;span class="hx-absolute -hx-mt-20" id="의사코드">&lt;/span>
&lt;a href="#%ec%9d%98%ec%82%ac%ec%bd%94%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>FUNCTION findOptimalParkingSpace(vehicleInfo, parkingLot):
// 초기화
availableSpaces = []
weightedGraph = createWeightedGraph(parkingLot)
// 적합한 주차 공간 필터링
FOR EACH space in parkingLot.spaces:
IF isSpaceSuitable(space, vehicleInfo):
availableSpaces.append(space)
// 각 공간에 대한 최적성 점수 계산
bestSpace = NULL
bestScore = INFINITY
FOR EACH space in availableSpaces:
score = calculateSpaceScore(space, vehicleInfo)
IF score &amp;lt; bestScore:
bestScore = score
bestSpace = space
RETURN bestSpace
FUNCTION calculateSpaceScore(space, vehicleInfo):
score = 0
// 거리 가중치
score &amp;#43;= getDistance(entrance, space) * DISTANCE_WEIGHT
// 크기 적합성 가중치
score &amp;#43;= getSizeFitScore(space, vehicleInfo) * SIZE_WEIGHT
// 특별 조건 가중치 (장애인 구역 등)
score &amp;#43;= getSpecialConditionScore(space, vehicleInfo) * SPECIAL_WEIGHT
RETURN score&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>순서도&lt;span class="hx-absolute -hx-mt-20" id="순서도">&lt;/span>
&lt;a href="#%ec%88%9c%ec%84%9c%eb%8f%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;pre class="mermaid hx-mt-6">flowchart TD
A([시작]) --> B[/차량정보 입력/]
B --> C[주차장 상태 조회]
C --> D[가용 공간 필터링]
D --> E{가용 공간 존재?}
E -->|No| F[/주차 불가 응답/]
E -->|Yes| G[공간별 점수 계산]
G --> H{특별 조건 차량?}
H -->|Yes| I[특별 구역 우선 점수 적용]
H -->|No| J[일반 점수 계산]
I --> K[최적 공간 선택]
J --> K
K --> L[/최적 주차 공간 안내/]
L --> M([종료])
F --> M&lt;/pre>&lt;h4>4. 구현&lt;span class="hx-absolute -hx-mt-20" id="4-구현">&lt;/span>
&lt;a href="#4-%ea%b5%ac%ed%98%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">dataclasses&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">typing&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Optional&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">heapq&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Vehicle&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;차량 정보를 저장하는 클래스&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plate_number&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span> &lt;span class="c1"># &amp;#39;small&amp;#39;, &amp;#39;medium&amp;#39;, &amp;#39;large&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_disabled&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">has_subscription&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">entry_time&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@dataclass&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">ParkingSpace&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;주차 공간 정보를 저장하는 클래스&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">id&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">location&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">tuple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_disabled_only&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">is_occupied&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensor_status&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SmartParkingSystem&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="fm">__init__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">total_spaces&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">]):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 스마트 주차 시스템 초기화
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Args:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> total_spaces: 전체 주차 공간 리스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">spaces&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">total_spaces&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">occupied_spaces&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span> &lt;span class="c1"># 차량별 주차 위치 추적&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">entrance_location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># 주차장 입구 위치&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">find_optimal_space&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">Optional&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 최적의 주차 공간을 찾는 메인 함수
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Args:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> vehicle: 입차하는 차량 정보
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 최적의 주차 공간 또는 None (가용 공간 없을 경우)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 가용 공간 필터링&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">available_spaces&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">space&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">spaces&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_is_space_suitable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">available_spaces&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 최적 공간 선택&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_select_best_space&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">available_spaces&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_is_space_suitable&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 주차 공간이 해당 차량에 적합한지 확인
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Args:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> space: 검사할 주차 공간
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> vehicle: 차량 정보
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 적합 여부
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_occupied&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_disabled_only&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_disabled&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 차량 크기 체크&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size_order&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;small&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;medium&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;large&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">size_order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">vehicle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">size_order&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_select_best_space&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">available_spaces&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">List&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 가용 공간 중 최적의 공간 선택
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Args:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> available_spaces: 가용 주차 공간 리스트
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> vehicle: 차량 정보
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 최적의 주차 공간
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">best_space&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">best_score&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;inf&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">available_spaces&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">score&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_calculate_space_score&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">score&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">best_score&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">best_score&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">score&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">best_space&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">space&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">best_space&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_calculate_space_score&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">space&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 주차 공간의 최적성 점수 계산
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Args:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> space: 평가할 주차 공간
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> vehicle: 차량 정보
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 최적성 점수 (낮을수록 좋음)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DISTANCE_WEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SIZE_FIT_WEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">2.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SPECIAL_CONDITION_WEIGHT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">3.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">score&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 거리 점수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">distance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_calculate_distance&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">entrance_location&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">location&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">score&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">distance&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">DISTANCE_WEIGHT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 크기 적합성 점수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size_fit_score&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_calculate_size_fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">score&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">size_fit_score&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">SIZE_FIT_WEIGHT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 특별 조건 점수&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">vehicle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_disabled&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_disabled_only&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">score&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="mi">50&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">SPECIAL_CONDITION_WEIGHT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">score&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_calculate_distance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">point1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">point2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">tuple&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 두 지점 간의 맨해튼 거리 계산
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">point1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">point2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">point1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">point2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_calculate_size_fit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">space&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">vehicle&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> 주차 공간과 차량 크기의 적합성 점수 계산
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">size_values&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;small&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;medium&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;large&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">abs&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size_values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">size_values&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">vehicle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">])&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>5. 테스트&lt;span class="hx-absolute -hx-mt-20" id="5-테스트">&lt;/span>
&lt;a href="#5-%ed%85%8c%ec%8a%a4%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_smart_parking_system&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;스마트 주차 시스템 테스트&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트용 주차 공간 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_spaces&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;A1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s2">&amp;#34;large&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;normal&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;A2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s2">&amp;#34;medium&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;normal&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;B1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s2">&amp;#34;small&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;normal&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ParkingSpace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;B2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s2">&amp;#34;medium&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;normal&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 시스템 초기화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">parking_system&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SmartParkingSystem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_spaces&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 케이스 정의&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_cases&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 일반 차량&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;123가4567&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;medium&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 장애인 차량&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;234가5678&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;small&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 대형 차량&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Vehicle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;345가6789&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;large&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">datetime&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 테스트 실행&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">vehicle&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">test_cases&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">테스트 차량: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">vehicle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plate_number&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">space&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">parking_system&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">find_optimal_space&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vehicle&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">space&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;배정된 주차 공간: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;가용 주차 공간 없음&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_smart_parking_system&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>6. 분석 및 개선사항&lt;span class="hx-absolute -hx-mt-20" id="6-분석-및-개선사항">&lt;/span>
&lt;a href="#6-%eb%b6%84%ec%84%9d-%eb%b0%8f-%ea%b0%9c%ec%84%a0%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>성능 분석&lt;/p>
&lt;ul>
&lt;li>시간 복잡도: O(n) (n: 주차 공간 수)&lt;/li>
&lt;li>공간 복잡도: O(m) (m: 현재 주차된 차량 수)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>개선 필요 사항&lt;/p>
&lt;ul>
&lt;li>동시성 제어 메커니즘 추가&lt;/li>
&lt;li>센서 데이터 실시간 업데이트 처리&lt;/li>
&lt;li>예약 시스템 통합&lt;/li>
&lt;li>결제 시스템 연동&lt;/li>
&lt;li>비상 상황 처리 로직 추가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>확장 가능한 기능&lt;/p>
&lt;ul>
&lt;li>모바일 앱 연동&lt;/li>
&lt;li>차량 번호판 인식 시스템 통합&lt;/li>
&lt;li>통계 분석 기능 추가&lt;/li>
&lt;li>예측 모델 도입&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3></description></item><item><title>Algorithm</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/</link><pubDate>Tue, 29 Oct 2024 08:33:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/</guid><description>
&lt;h2>Algorithm&lt;span class="hx-absolute -hx-mt-20" id="algorithm">&lt;/span>
&lt;a href="#algorithm" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>알고리즘은 주어진 문제를 해결하기 위한 명확하고 순차적인 단계들의 집합이다.&lt;br>
우리의 일상생활에 비유하자면, 요리 레시피나 조립 설명서와 같은 것이라고 할 수 있다.&lt;br>
레시피가 음식을 만드는 정확한 순서와 방법을 알려주는 것처럼, 알고리즘은 컴퓨터가 특정 문제를 해결하기 위해 따라야 할 정확한 지침을 제공한다.&lt;/p>
&lt;p>&lt;img src="What-is-Algorithm_-1024x631.jpg" alt="What is Algorithm?" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.geeksforgeeks.org/fundamentals-of-algorithms/" target="_blank" rel="noopener">https://www.geeksforgeeks.org/fundamentals-of-algorithms/&lt;/a> _&lt;/p>
&lt;h3>특성&lt;span class="hx-absolute -hx-mt-20" id="특성">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>입력(Input)&lt;/strong>: 문제를 해결하기 위한 초기 데이터나 조건이 주어져야 한다.&lt;/li>
&lt;li>&lt;strong>출력(Output)&lt;/strong>: 알고리즘은 반드시 결과를 생성해야 한다.&lt;/li>
&lt;li>&lt;strong>명확성(Definiteness)&lt;/strong>: 각 단계는 모호하지 않고 정확해야 한다.&lt;/li>
&lt;li>&lt;strong>유한성(Finiteness)&lt;/strong>: 알고리즘은 반드시 유한한 단계 후에 종료되어야 한다.&lt;/li>
&lt;li>&lt;strong>효과성(Effectiveness)&lt;/strong>: 각 단계는 실제로 실행 가능해야 한다.&lt;/li>
&lt;/ol>
&lt;h3>필요한 이유&lt;span class="hx-absolute -hx-mt-20" id="필요한-이유">&lt;/span>
&lt;a href="#%ed%95%84%ec%9a%94%ed%95%9c-%ec%9d%b4%ec%9c%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>프로그래밍에서 알고리즘이 필요한 이유는 여러 가지가 있다.&lt;br>
가장 중요한 것은 효율성이다.&lt;br>
같은 문제를 해결하더라도 어떤 알고리즘을 사용하느냐에 따라 실행 시간과 메모리 사용량이 크게 달라질 수 있다.&lt;/p>
&lt;p>예를 들어, 1부터 100까지의 합을 구하는 문제를 생각해보자.&lt;br>
단순히 반복문을 사용하여 더하는 방법도 있지만, 가우스의 덧셈 공식을 사용하면 단 한 번의 계산으로 결과를 얻을 수 있다.&lt;br>
이처럼 효율적인 알고리즘은 시간과 자원을 절약하게 해준다.&lt;/p>
&lt;h3>평가 기준&lt;span class="hx-absolute -hx-mt-20" id="평가-기준">&lt;/span>
&lt;a href="#%ed%8f%89%ea%b0%80-%ea%b8%b0%ec%a4%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>알고리즘을 평가할 때는 주로 시간 복잡도와 공간 복잡도를 고려한다.&lt;br>
시간 복잡도는 알고리즘이 실행되는 데 걸리는 시간을 의미하며, 공간 복잡도는 필요한 메모리의 양을 의미한다.&lt;br>
이러한 복잡도는 보통 빅오(Big-O) 표기법을 사용하여 나타낸다.&lt;br>
예를 들어, O(n)은 입력 크기에 비례하여 시간이 증가함을 의미하고, O(log n)은 입력 크기가 커져도 시간이 로그함수처럼 완만하게 증가함을 의미한다.&lt;/p>
&lt;h3>중요성&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>효율성 향상: 효율적인 알고리즘은 프로그램의 실행 속도를 높이고 시스템 자원 사용을 최소화한다.&lt;/li>
&lt;li>문제 해결 능력 개발: 알고리즘 학습은 논리적 사고력과 문제 해결 능력을 향상시킨다.&lt;/li>
&lt;li>복잡한 문제 해결: 알고리즘은 복잡한 문제를 체계적으로 분석하고 해결하는 데 도움을 준다.&lt;/li>
&lt;li>프로그래밍 역량 강화: 알고리즘에 대한 이해는 효율적인 코드 작성과 프로그램 최적화에 필수적이다.&lt;/li>
&lt;li>다양한 분야 응용: 알고리즘은 빅데이터 분석, 인공지능, 네트워크 통신 등 다양한 기술 분야에서 핵심적인 역할을 한다.&lt;/li>
&lt;/ol>
&lt;h3>알고리즘 설계의 기본 원칙&lt;span class="hx-absolute -hx-mt-20" id="알고리즘-설계의-기본-원칙">&lt;/span>
&lt;a href="#%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-%ec%84%a4%ea%b3%84%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ec%9b%90%ec%b9%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>좋은 알고리즘을 설계하기 위해서는 몇 가지 원칙을 고려해야 한다.&lt;br>
정확성이 가장 기본이 되어야 하며, 효율성을 고려해야 한다.&lt;br>
또한 알고리즘은 가능한 한 단순하고 이해하기 쉬워야 하며, 확장성이 있어야 한다.&lt;br>
문제를 작은 단위로 나누어 해결하는 분할 정복 방법이나, 최적의 해결책을 찾아가는 그리디 방법 등 다양한 설계 기법이 있다.&lt;/p>
&lt;h3>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>각 카테고리의 알고리즘들은 서로 다른 문제 영역에 특화되어 있으며, 실제 응용에서는 여러 알고리즘을 조합하여 사용하는 경우가 많다.&lt;br>
효율적인 프로그램 개발을 위해서는 각 알고리즘의 특성과 적용 가능한 상황을 잘 이해하고 있어야 한다.&lt;/p>
&lt;h4>정렬 알고리즘 (Sorting Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="정렬-알고리즘-sorting-algorithms">&lt;/span>
&lt;a href="#%ec%a0%95%eb%a0%ac-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-sorting-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>공간 복잡도&lt;/th>
&lt;th>안정성&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>비교 기반 정렬&lt;/td>
&lt;td>O(n log n) ~ O(n²)&lt;/td>
&lt;td>O(1) ~ O(n)&lt;/td>
&lt;td>변동적&lt;/td>
&lt;td>• 요소 간 비교를 통한 정렬&lt;br>• 범용적 사용 가능&lt;/td>
&lt;td>• 퀵 정렬&lt;br>• 병합 정렬&lt;br>• 힙 정렬&lt;/td>
&lt;td>• 데이터베이스 정렬&lt;br>• 파일 시스템&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>분산 정렬&lt;/td>
&lt;td>O(n + k)&lt;/td>
&lt;td>O(n + k)&lt;/td>
&lt;td>대부분 안정적&lt;/td>
&lt;td>• 키 값의 분포를 이용&lt;br>• 특정 조건에서 매우 효율적&lt;/td>
&lt;td>• 기수 정렬&lt;br>• 계수 정렬&lt;/td>
&lt;td>• 정수 데이터 정렬&lt;br>• 문자열 정렬&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>검색 알고리즘 (Search Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="검색-알고리즘-search-algorithms">&lt;/span>
&lt;a href="#%ea%b2%80%ec%83%89-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-search-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>공간 복잡도&lt;/th>
&lt;th>전제 조건&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정렬 기반 검색&lt;/td>
&lt;td>O(log n)&lt;/td>
&lt;td>O(1)&lt;/td>
&lt;td>정렬된 데이터&lt;/td>
&lt;td>• 분할 정복 방식&lt;br>• 효율적인 검색&lt;/td>
&lt;td>• 이진 검색&lt;br>• 보간 검색&lt;/td>
&lt;td>• 데이터베이스 검색&lt;br>• 사전 검색&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>해시 기반 검색&lt;/td>
&lt;td>O(1) 평균&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>해시 함수 필요&lt;/td>
&lt;td>• 직접 접근&lt;br>• 충돌 해결 필요&lt;/td>
&lt;td>• 해시 테이블 검색&lt;br>• 블룸 필터&lt;/td>
&lt;td>• 캐시 시스템&lt;br>• 데이터베이스 인덱싱&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>그래프 알고리즘 (Graph Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="그래프-알고리즘-graph-algorithms">&lt;/span>
&lt;a href="#%ea%b7%b8%eb%9e%98%ed%94%84-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-graph-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>공간 복잡도&lt;/th>
&lt;th>해결 문제&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>최단 경로&lt;/td>
&lt;td>O(V log V + E)&lt;/td>
&lt;td>O(V)&lt;/td>
&lt;td>경로 최적화&lt;/td>
&lt;td>• 가중치 고려&lt;br>• 다양한 최적화 가능&lt;/td>
&lt;td>• 다익스트라&lt;br>• 벨만-포드&lt;/td>
&lt;td>• 네비게이션&lt;br>• 네트워크 라우팅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>순회&lt;/td>
&lt;td>O(V + E)&lt;/td>
&lt;td>O(V)&lt;/td>
&lt;td>그래프 탐색&lt;/td>
&lt;td>• 전체 노드 방문&lt;br>• 연결성 확인&lt;/td>
&lt;td>• DFS&lt;br>• BFS&lt;/td>
&lt;td>• 웹 크롤링&lt;br>• 소셜 네트워크 분석&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>문자열 알고리즘 (String Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="문자열-알고리즘-string-algorithms">&lt;/span>
&lt;a href="#%eb%ac%b8%ec%9e%90%ec%97%b4-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-string-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>공간 복잡도&lt;/th>
&lt;th>주요 기능&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>패턴 매칭&lt;/td>
&lt;td>O(n + m)&lt;/td>
&lt;td>O(m)&lt;/td>
&lt;td>문자열 검색&lt;/td>
&lt;td>• 패턴 찾기&lt;br>• 효율적인 매칭&lt;/td>
&lt;td>• KMP&lt;br>• Boyer-Moore&lt;/td>
&lt;td>• 텍스트 편집기&lt;br>• DNA 서열 분석&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>문자열 처리&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>O(1) ~ O(n)&lt;/td>
&lt;td>문자열 변환&lt;/td>
&lt;td>• 문자열 조작&lt;br>• 인코딩 처리&lt;/td>
&lt;td>• 라빈-카프&lt;br>• 매나처&lt;/td>
&lt;td>• 데이터 압축&lt;br>• 자연어 처리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>기하 알고리즘 (Geometric Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="기하-알고리즘-geometric-algorithms">&lt;/span>
&lt;a href="#%ea%b8%b0%ed%95%98-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-geometric-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>공간 복잡도&lt;/th>
&lt;th>처리 대상&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>컨벡스 헐&lt;/td>
&lt;td>O(n log n)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>점집합&lt;/td>
&lt;td>• 외곽선 찾기&lt;br>• 기하학적 최적화&lt;/td>
&lt;td>• Graham Scan&lt;br>• Jarvis March&lt;/td>
&lt;td>• 컴퓨터 그래픽스&lt;br>• 패턴 인식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>근접점 쌍&lt;/td>
&lt;td>O(n log n)&lt;/td>
&lt;td>O(n)&lt;/td>
&lt;td>점집합&lt;/td>
&lt;td>• 최근접 점 찾기&lt;br>• 공간 분할&lt;/td>
&lt;td>• 분할 정복&lt;br>• 평면 스위핑&lt;/td>
&lt;td>• 충돌 감지&lt;br>• 클러스터링&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>수치 알고리즘 (Numerical Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="수치-알고리즘-numerical-algorithms">&lt;/span>
&lt;a href="#%ec%88%98%ec%b9%98-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-numerical-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>정확도&lt;/th>
&lt;th>적용 분야&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>근사해 찾기&lt;/td>
&lt;td>변동적&lt;/td>
&lt;td>조절 가능&lt;/td>
&lt;td>수치 해석&lt;/td>
&lt;td>• 반복적 개선&lt;br>• 오차 최소화&lt;/td>
&lt;td>• 뉴턴-랩슨&lt;br>• 이분법&lt;/td>
&lt;td>• 공학 계산&lt;br>• 금융 모델링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>행렬 연산&lt;/td>
&lt;td>O(n³)&lt;/td>
&lt;td>정확함&lt;/td>
&lt;td>선형대수&lt;/td>
&lt;td>• 행렬 분해&lt;br>• 연립방정식 해결&lt;/td>
&lt;td>• 가우스 소거법&lt;br>• LU 분해&lt;/td>
&lt;td>• 3D 그래픽스&lt;br>• 신호 처리&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>최적화 알고리즘 (Optimization Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="최적화-알고리즘-optimization-algorithms">&lt;/span>
&lt;a href="#%ec%b5%9c%ec%a0%81%ed%99%94-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-optimization-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>최적성&lt;/th>
&lt;th>적용 분야&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>전역 최적화&lt;/td>
&lt;td>변동적&lt;/td>
&lt;td>보장 가능&lt;/td>
&lt;td>조합 최적화&lt;/td>
&lt;td>• 전체 해 탐색&lt;br>• 최적해 보장&lt;/td>
&lt;td>• 분기 한정법&lt;br>• 동적 계획법&lt;/td>
&lt;td>• 물류 최적화&lt;br>• 자원 할당&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>근사 최적화&lt;/td>
&lt;td>다항시간&lt;/td>
&lt;td>근사해&lt;/td>
&lt;td>실시간 최적화&lt;/td>
&lt;td>• 빠른 해 도출&lt;br>• 실용적 해결책&lt;/td>
&lt;td>• 유전 알고리즘&lt;br>• 시뮬레이티드 어닐링&lt;/td>
&lt;td>• 스케줄링&lt;br>• 네트워크 설계&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>암호화 알고리즘 (Cryptographic Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="암호화-알고리즘-cryptographic-algorithms">&lt;/span>
&lt;a href="#%ec%95%94%ed%98%b8%ed%99%94-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-cryptographic-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>보안 강도&lt;/th>
&lt;th>속도&lt;/th>
&lt;th>용도&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>대칭키 암호화&lt;/td>
&lt;td>중간&lt;/td>
&lt;td>빠름&lt;/td>
&lt;td>데이터 보안&lt;/td>
&lt;td>• 같은 키로 암/복호화&lt;br>• 빠른 처리&lt;/td>
&lt;td>• AES&lt;br>• DES&lt;/td>
&lt;td>• 파일 암호화&lt;br>• 통신 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>공개키 암호화&lt;/td>
&lt;td>높음&lt;/td>
&lt;td>느림&lt;/td>
&lt;td>키 교환/인증&lt;/td>
&lt;td>• 공개키/개인키 쌍&lt;br>• 수학적 기반&lt;/td>
&lt;td>• RSA&lt;br>• ECC&lt;/td>
&lt;td>• 디지털 서명&lt;br>• SSL/TLS&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>머신러닝 알고리즘 (Machine Learning Algorithms)&lt;span class="hx-absolute -hx-mt-20" id="머신러닝-알고리즘-machine-learning-algorithms">&lt;/span>
&lt;a href="#%eb%a8%b8%ec%8b%a0%eb%9f%ac%eb%8b%9d-%ec%95%8c%ea%b3%a0%eb%a6%ac%ec%a6%98-machine-learning-algorithms" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>학습 방식&lt;/th>
&lt;th>데이터 요구량&lt;/th>
&lt;th>적용 분야&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 알고리즘&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>지도 학습&lt;/td>
&lt;td>레이블 필요&lt;/td>
&lt;td>많음&lt;/td>
&lt;td>예측/분류&lt;/td>
&lt;td>• 입출력 쌍 학습&lt;br>• 패턴 인식&lt;/td>
&lt;td>• 신경망&lt;br>• SVM&lt;/td>
&lt;td>• 이미지 인식&lt;br>• 스팸 필터링&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비지도 학습&lt;/td>
&lt;td>레이블 불필요&lt;/td>
&lt;td>매우 많음&lt;/td>
&lt;td>패턴 발견&lt;/td>
&lt;td>• 데이터 구조 파악&lt;br>• 군집화&lt;/td>
&lt;td>• K-means&lt;br>• PCA&lt;/td>
&lt;td>• 추천 시스템&lt;br>• 이상 탐지&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>동적 프로그래밍 (Dynamic Programming)&lt;span class="hx-absolute -hx-mt-20" id="동적-프로그래밍-dynamic-programming">&lt;/span>
&lt;a href="#%eb%8f%99%ec%a0%81-%ed%94%84%eb%a1%9c%ea%b7%b8%eb%9e%98%eb%b0%8d-dynamic-programming" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>알고리즘 유형&lt;/th>
&lt;th>시간 복잡도&lt;/th>
&lt;th>공간 복잡도&lt;/th>
&lt;th>문제 특성&lt;/th>
&lt;th>주요 특징&lt;/th>
&lt;th>대표적 예제&lt;/th>
&lt;th>실제 응용 사례&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Top-Down&lt;/td>
&lt;td>O(상태 수 × 상태당 계산)&lt;/td>
&lt;td>O(상태 수)&lt;/td>
&lt;td>최적 부분 구조&lt;/td>
&lt;td>• 메모이제이션&lt;br>• 재귀적 구현&lt;/td>
&lt;td>• 피보나치 수열&lt;br>• 최장 공통 부분수열&lt;/td>
&lt;td>• 경로 계획&lt;br>• 리소스 할당&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bottom-Up&lt;/td>
&lt;td>O(상태 수 × 상태당 계산)&lt;/td>
&lt;td>O(상태 수)&lt;/td>
&lt;td>중복 부분 문제&lt;/td>
&lt;td>• 테이블화&lt;br>• 반복적 구현&lt;/td>
&lt;td>• 배낭 문제&lt;br>• 최단 경로&lt;/td>
&lt;td>• 순서 최적화&lt;br>• 게임 전략&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>