<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>검색 알고리즘 (Searching Algorithms) on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/</link>
    <description>Recent content in 검색 알고리즘 (Searching Algorithms) on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.143.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Oct 2024 12:33:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>보간 검색 (Interpolation Search)</title>
      <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/interpolation-search/</link>
      <pubDate>Tue, 15 Oct 2024 12:33:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/interpolation-search/</guid>
      <description>&lt;h2 id=&#34;보간-검색-interpolation-search&#34;&gt;보간 검색 (Interpolation Search)&lt;/h2&gt;
&lt;p&gt;보간 검색(Interpolation Search)은 정렬된 배열에서 특정 값을 효율적으로 찾기 위한 탐색 알고리즘이다.&lt;br&gt;
이진 탐색(Binary Search)과 유사하지만, &lt;strong&gt;데이터 분포를 고려해 탐색 위치를 예측&lt;/strong&gt;함으로써 평균적으로 더 빠른 성능을 보인다. 특히 &lt;strong&gt;균등한 데이터 분포&lt;/strong&gt;에서 효과적이다.&lt;/p&gt;
&lt;p&gt;보간 검색은 &lt;strong&gt;데이터 특성에 민감&lt;/strong&gt;하므로, 균등 분포가 보장되지 않으면 이진 탐색을 권장한다.&lt;br&gt;
알고리즘 선택 시 데이터의 분포와 크기를 고려하는 것이 중요하다.&lt;/p&gt;
&lt;h3 id=&#34;핵심-개념&#34;&gt;핵심 개념&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;데이터 균등성 가정&lt;/strong&gt;: 배열의 값이 &lt;strong&gt;선형적으로 분포&lt;/strong&gt;되어 있다고 가정한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;예측 위치 계산&lt;/strong&gt;: 탐색 위치를 다음 공식으로 계산한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>깊이 우선 탐색 (Depth-First Search)</title>
      <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/depth-first-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/depth-first-search/</guid>
      <description>그래프나 트리 구조에서 하나의 경로를 끝까지 탐색한 후 다음 경로를 탐색하는 알고리즘.</description>
    </item>
    <item>
      <title>너비 우선 탐색 (Breadth-First Search)</title>
      <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/breadth-first-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/breadth-first-search/</guid>
      <description>BFS는 그래프나 트리 구조에서 가까운 노드부터 탐색하는 알고리즘</description>
    </item>
    <item>
      <title>이진 검색 (Binary Search)</title>
      <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/binary-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/binary-search/</guid>
      <description>리스트의 중간 값을 선택하고, 찾고자 하는 값과 비교하여 탐색 범위를 반으로 줄여가며 검색을 수행한다</description>
    </item>
    <item>
      <title>해시 검색 (Hash Search)</title>
      <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/hash-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/hash-search/</guid>
      <description>해시 검색은 키(key)를 해시 함수(hash function)에 통과시켜 얻은 해시 값(hash value)을 인덱스로 사용하여 데이터에 직접 접근하는 방식.</description>
    </item>
    <item>
      <title>순차 검색 (Sequential Search)</title>
      <link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/sequential-search/</link>
      <pubDate>Tue, 15 Oct 2024 05:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/sequential-search/</guid>
      <description>순차 검색은 데이터 집합을 처음부터 끝까지 차례대로 하나씩 검색하는 방법으로 선형 검색(Linear Search)으로도 불리며, 리스트에서 순차적으로 탐색하면서 원하는 값을 찾아내는 알고리즘.</description>
    </item>
  </channel>
</rss>
