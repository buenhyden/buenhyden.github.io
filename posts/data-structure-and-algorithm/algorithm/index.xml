<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algorithm :: hyunyoun's Blog</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm.html</link><description>문제를 해결하거나 특정 작업을 수행하기 위한 명확하고 단계적인 절차</description><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Fri, 08 Nov 2024 07:21:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>머신러닝 알고리즘 (Machine Learning Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/machine-learning-algorithms/machine-learning-algorithms.html</link><pubDate>Fri, 08 Nov 2024 07:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/machine-learning-algorithms/machine-learning-algorithms.html</guid><description>컴퓨터가 명시적인 프로그래밍 없이 데이터로부터 패턴을 학습하고 예측이나 의사결정을 수행할 수 있게 하는 알고리즘</description></item><item><title>최적화 알고리즘 (Optimization Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/optimization-algorithms/optimization-algorithms.html</link><pubDate>Wed, 06 Nov 2024 06:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/optimization-algorithms/optimization-algorithms.html</guid><description>주어진 문제에 대해 가장 효율적이거나 최적의 해결책을 찾기 위해 사용되는 방법론</description></item><item><title>암호화 알고리즘 (Encryption Algorithm)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/encryption-algorithms/encryption-algorithm.html</link><pubDate>Tue, 05 Nov 2024 15:29:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/encryption-algorithms/encryption-algorithm.html</guid><description>데이터를 안전하게 보호하기 위해 사용되는 수학적 방법</description></item><item><title>기하 알고리즘 (Geometric Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/geometric-algorithms/geometric-algorithms.html</link><pubDate>Tue, 05 Nov 2024 06:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/geometric-algorithms/geometric-algorithms.html</guid><description>2차원, 3차원 또는 더 높은 차원의 공간에 존재하는 점, 선, 다각형, 원 등의 기하학적 객체를 다루는 알고리즘</description></item><item><title>문자열 알고리즘 (String Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/string-algorithms/string-algorithms.html</link><pubDate>Tue, 05 Nov 2024 06:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/string-algorithms/string-algorithms.html</guid><description>문자열 알고리즘은 텍스트 데이터를 처리하고 분석하는 알고리즘의 집합</description></item><item><title>그리디 알고리즘 (Greedy Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/greedy-algorithms/greedy-algorithms.html</link><pubDate>Tue, 05 Nov 2024 02:01:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/greedy-algorithms/greedy-algorithms.html</guid><description>"탐욕적" 또는 "욕심쟁이" 알고리즘이라고도 불리며, 현재 상황에서 가장 최적의 선택을 하는 방식으로 문제를 해결하는 알고리즘</description></item><item><title>그래프 알고리즘 (Graph Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/graph-algorithms/graph-algorithms.html</link><pubDate>Tue, 05 Nov 2024 01:27:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/graph-algorithms/graph-algorithms.html</guid><description>네트워크, 경로 찾기, 최적화 등 다양한 실제 문제를 해결하는 데 사용되는 중요한 알고리즘</description></item><item><title>수치 알고리즘 (Numerical Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/numerical-algorithms/numerical-algorithms.html</link><pubDate>Mon, 04 Nov 2024 06:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/numerical-algorithms/numerical-algorithms.html</guid><description>수치해석학의 일부로, 복잡한 수학적 문제를 컴퓨터를 이용해 수치적으로 근사해서 해결하는 알고리즘</description></item><item><title>버블 정렬 (Bubble Sort)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/bubble-sort.html</link><pubDate>Sat, 02 Nov 2024 08:38:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/bubble-sort.html</guid><description>버블 정렬 (Bubble Sort) 참고 및 출처</description></item><item><title>병합 정렬 (Merge Sort)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/merge-sort.html</link><pubDate>Sat, 02 Nov 2024 08:38:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/merge-sort.html</guid><description>병합 정렬 (Merge Sort) 참고 및 출처</description></item><item><title>삽입 정렬 (Insertion Sort)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/insertion-sort.html</link><pubDate>Sat, 02 Nov 2024 08:38:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/insertion-sort.html</guid><description>삽입 정렬 (Insertion Sort) 참고 및 출처</description></item><item><title>선택 정렬 (Selection Sort)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/selection-sort.html</link><pubDate>Sat, 02 Nov 2024 08:38:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/selection-sort.html</guid><description>선택 정렬 (Selection Sort) 참고 및 출처</description></item><item><title>퀵 정렬 (Quick Sort)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/quick-sort.html</link><pubDate>Sat, 02 Nov 2024 08:38:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/quick-sort.html</guid><description>퀵 정렬 (Quick Sort) 참고 및 출처</description></item><item><title>힙 정렬 (Heap Sort)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/heap-sort.html</link><pubDate>Sat, 02 Nov 2024 08:38:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/heap-sort.html</guid><description>힙 정렬 (Heap Sort) 참고 및 출처</description></item><item><title>정렬 알고리즘 (Sorting Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/sorting-algorithms.html</link><pubDate>Sat, 02 Nov 2024 01:26:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/sorting-algorithms/sorting-algorithms.html</guid><description>정렬 알고리즘은 데이터를 특정 순서로 배열하는 알고리즘으로, 컴퓨터 과학에서 매우 중요한 역할을 한다.</description></item><item><title>보간 검색 (Interpolation Search)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/interpolation-search.html</link><pubDate>Wed, 30 Oct 2024 12:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/interpolation-search.html</guid><description>보간 검색 (Interpolation Search) 참고 및 출처</description></item><item><title>깊이 우선 탐색 (Depth-First Search)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/depth-first-search.html</link><pubDate>Wed, 30 Oct 2024 05:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/depth-first-search.html</guid><description>그래프나 트리 구조에서 하나의 경로를 끝까지 탐색한 후 다음 경로를 탐색하는 알고리즘.</description></item><item><title>너비 우선 탐색 (Breadth-First Search)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/breadth-first-search.html</link><pubDate>Wed, 30 Oct 2024 05:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/breadth-first-search.html</guid><description>BFS는 그래프나 트리 구조에서 가까운 노드부터 탐색하는 알고리즘</description></item><item><title>이진 검색 (Binary Search)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/binary-search.html</link><pubDate>Wed, 30 Oct 2024 05:40:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/binary-search.html</guid><description>리스트의 중간 값을 선택하고, 찾고자 하는 값과 비교하여 탐색 범위를 반으로 줄여가며 검색을 수행한다</description></item><item><title>해시 검색 (Hash Search)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/hash-search.html</link><pubDate>Wed, 30 Oct 2024 05:40:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/hash-search.html</guid><description>해시 검색은 키(key)를 해시 함수(hash function)에 통과시켜 얻은 해시 값(hash value)을 인덱스로 사용하여 데이터에 직접 접근하는 방식.</description></item><item><title>순차 검색 (Sequential Search)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/sequential-search.html</link><pubDate>Wed, 30 Oct 2024 05:31:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/sequential-search.html</guid><description>순차 검색은 데이터 집합을 처음부터 끝까지 차례대로 하나씩 검색하는 방법으로 선형 검색(Linear Search)으로도 불리며, 리스트에서 순차적으로 탐색하면서 원하는 값을 찾아내는 알고리즘.</description></item><item><title>검색 알고리즘 (Searching Algorithms)</title><link>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/searching-algorithms.html</link><pubDate>Wed, 30 Oct 2024 01:27:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/data-structure-and-algorithm/algorithm/searching-algorithms/searching-algorithms.html</guid><description>데이터 집합에서 특정 항목을 찾는 방법을 정의하는 알고리즘</description></item></channel></rss>