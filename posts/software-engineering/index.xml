<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Software Engineering on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/software-engineering/</link>
    <description>Recent content in Software Engineering on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Feb 2025 02:50:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pagination</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/request-response-handling/pagination/</link>
      <pubDate>Thu, 27 Feb 2025 02:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/request-response-handling/pagination/</guid>
      <description>페이지네이션을 통해 서버는 데이터를 작은 &amp;#34;페이지&amp;#34; 단위로 나누어 전달하여 성능, 사용자 경험, 리소스 사용을 모두 최적화할 수 있다.</description>
    </item>
    <item>
      <title>URI Design</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/endpoint-implementation/uri-design/</link>
      <pubDate>Thu, 27 Feb 2025 02:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/endpoint-implementation/uri-design/</guid>
      <description>잘 설계된 URI는 API의 직관성을 높이고, 학습 곡선을 완화하며, 리소스의 구조와 관계를 명확히 보여준다.</description>
    </item>
    <item>
      <title>Monitoring</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-deployment-and-operations/api-monitoring-implementation/api-monitoring/</link>
      <pubDate>Fri, 14 Feb 2025 01:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-deployment-and-operations/api-monitoring-implementation/api-monitoring/</guid>
      <description>API 모니터링은 단순한 로그 수집을 넘어서, API 시스템의 건강 상태를 종합적으로 관찰하고 평가하는 프로세스이다.</description>
    </item>
    <item>
      <title>Profiling</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-deployment-and-operations/api-analytics/api-profiling/</link>
      <pubDate>Fri, 14 Feb 2025 01:28:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-deployment-and-operations/api-analytics/api-profiling/</guid>
      <description>API 프로파일링은 API의 성능, 행동, 리소스 사용 특성을 체계적으로 분석하는 프로세스로, 최적화 기회를 발견하고 성능 문제를 해결하는 데 필수적인 접근법이다</description>
    </item>
    <item>
      <title>Error Handling and Retries</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/error-handling-implementation/error-handling-and-retries/</link>
      <pubDate>Thu, 13 Feb 2025 01:31:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/error-handling-implementation/error-handling-and-retries/</guid>
      <description>효과적인 오류 처리와 재시도 메커니즘은 안정적인 API 설계의 핵심 요소이다.</description>
    </item>
    <item>
      <title>Optimize API Response</title>
      <link>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/request-response-handling/optimize-api-response/</link>
      <pubDate>Wed, 12 Feb 2025 01:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/software-engineering/software-development/api-development-and-implementation/api-implementation-fundamentals/request-response-handling/optimize-api-response/</guid>
      <description>API 응답 최적화는 현대 웹 애플리케이션의 성능, 사용자 경험 및 자원 효율성을 크게 향상시키는 핵심 요소이다.</description>
    </item>
  </channel>
</rss>
