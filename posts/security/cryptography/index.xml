<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – cryptography</title><link>https://buenhyden.github.io/posts/security/cryptography/</link><description>Recent content in cryptography on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://buenhyden.github.io/posts/security/cryptography/index.xml" rel="self" type="application/rss+xml"/><item><title>Nonce</title><link>https://buenhyden.github.io/posts/security/cryptography/nonce/</link><pubDate>Mon, 04 Nov 2024 15:31:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/security/cryptography/nonce/</guid><description>
&lt;h2>Nonce&lt;span class="hx-absolute -hx-mt-20" id="nonce">&lt;/span>
&lt;a href="#nonce" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>암호학에서 사용되는 중요한 개념으로, &amp;ldquo;Number used Once&amp;quot;의 약자로 단 한 번만 사용되는 임의의 숫자를 의미한다.&lt;br>
일상적인 예시로 이해해보면, 은행에서 일회용 인증번호(OTP)를 보내는 것과 비슷하다. 매번 새로운 번호가 생성되고, 한 번 사용하고 나면 그 번호는 더 이상 유효하지 않다.&lt;/p>
&lt;h3>목적&lt;span class="hx-absolute -hx-mt-20" id="목적">&lt;/span>
&lt;a href="#%eb%aa%a9%ec%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>재전송 공격 방지 같은 메시지가 반복해서 전송되는 것을 막기 위해 사용됩니다. 예를 들어, 누군가가 암호화된 통신을 가로채서 그대로 재전송하는 공격을 시도할 때, Nonce가 다르기 때문에 이전 메시지는 무효화됩니다.&lt;/li>
&lt;li>초기화 벡터(IV)로서의 역할 암호화 과정에서 같은 평문이라도 매번 다른 암호문이 생성되도록 합니다. 이는 패턴 분석을 통한 공격을 어렵게 만듭니다.&lt;/li>
&lt;li>해시 함수에서의 활용 예를 들어, 비트코인 채굴에서는 특정 조건을 만족하는 해시값을 찾기 위해 Nonce를 계속 변경해가며 시도합니다. 이것이 작업 증명(Proof of Work)의 핵심 메커니즘입니다.&lt;/li>
&lt;/ul>
&lt;h3>고려해야 할 사항&lt;span class="hx-absolute -hx-mt-20" id="고려해야-할-사항">&lt;/span>
&lt;a href="#%ea%b3%a0%eb%a0%a4%ed%95%b4%ec%95%bc-%ed%95%a0-%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>예측 불가능성: Nonce는 무작위성이 보장되어야 합니다. 순차적인 번호는 예측이 가능하므로 보안에 취약할 수 있습니다.&lt;/li>
&lt;li>충분한 길이: Nonce의 길이가 너무 짧으면 중복될 가능성이 높아집니다. 보통 64비트 이상을 권장합니다.&lt;/li>
&lt;li>저장과 검증: 사용된 Nonce를 일정 기간 저장하고 중복 사용을 검사해야 합니다.&lt;/li>
&lt;/ul>
&lt;h3>사용 사례&lt;span class="hx-absolute -hx-mt-20" id="사용-사례">&lt;/span>
&lt;a href="#%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>인증 프로토콜 OAuth나 JWT와 같은 인증 시스템에서 요청의 유효성을 검증하는데 사용됩니다.&lt;/li>
&lt;li>암호화 통신 TLS/SSL 프로토콜에서 &amp;lsquo;Client Nonce&amp;rsquo;와 &amp;lsquo;Server Nonce&amp;rsquo;를 교환하여 세션 키를 생성합니다.&lt;/li>
&lt;li>블록체인 채굴 과정에서 블록의 해시값을 조정하는데 사용됩니다.&lt;/li>
&lt;li>데이터베이스 보안 같은 데이터의 중복 저장을 방지하거나, 데이터의 무결성을 검증하는데 활용됩니다.&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Nonce는 재사용되어서는 안 됩니다. 한 번 사용된 Nonce는 반드시 폐기해야 합니다.&lt;/li>
&lt;li>암호학적으로 안전한 난수 생성기(CSPRNG)를 사용해야 합니다.&lt;/li>
&lt;li>Nonce의 유효 기간을 적절히 설정하고 관리해야 합니다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>Message Authentication Code</title><link>https://buenhyden.github.io/posts/security/cryptography/message-authentication-code/</link><pubDate>Mon, 04 Nov 2024 13:10:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/security/cryptography/message-authentication-code/</guid><description>
&lt;h2>Message Authentication Code&lt;span class="hx-absolute -hx-mt-20" id="message-authentication-code">&lt;/span>
&lt;a href="#message-authentication-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Message Authentication Code는 메시지의 무결성(integrity)과 출처 인증(authentication)을 동시에 보장하기 위한 암호학적 도구로, 메시지와 비밀키를 입력으로 받아 고정된 길이의 값을 생성하며, 이 값은 메시지에 대한 일종의 디지털 지문 역할을 한다.&lt;/p>
&lt;p>예를 들어, Alice가 Bob에게 메시지를 보낼 때를 생각해보자.&lt;br>
Alice는 메시지와 함께 MAC 값을 전송하고, Bob은 수신한 메시지로부터 동일한 비밀키를 사용하여 MAC 값을 계산한다. 두 MAC 값이 일치한다면, Bob은 메시지가 변조되지 않았으며 실제로 Alice가 보낸 것임을 확신할 수 있다.&lt;/p>
&lt;h3>MAC의 동작 원리와 프로세스&lt;span class="hx-absolute -hx-mt-20" id="mac의-동작-원리와-프로세스">&lt;/span>
&lt;a href="#mac%ec%9d%98-%eb%8f%99%ec%9e%91-%ec%9b%90%eb%a6%ac%ec%99%80-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>MAC의 동작은 다음과 같은 세 가지 주요 알고리즘으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>키 생성 (Key Generation):&lt;/p>
&lt;ul>
&lt;li>충분한 엔트로피를 가진 암호학적으로 안전한 난수 생성기를 사용&lt;/li>
&lt;li>생성된 키는 송신자와 수신자가 안전하게 공유&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>MAC 생성 (Tag Generation):&lt;/p>
&lt;ul>
&lt;li>입력: 메시지(M)와 비밀키(K)&lt;/li>
&lt;li>출력: MAC 태그(T)&lt;/li>
&lt;li>T = MAC(K, M)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>MAC 검증 (Tag Verification):&lt;/p>
&lt;ul>
&lt;li>입력: 메시지(M), 비밀키(K), 수신된 MAC 태그(T)&lt;/li>
&lt;li>출력: 검증 결과(유효/무효)&lt;/li>
&lt;li>수신된 태그와 계산된 태그를 비교&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>MAC의 주요 종류와 구현 방식&lt;span class="hx-absolute -hx-mt-20" id="mac의-주요-종류와-구현-방식">&lt;/span>
&lt;a href="#mac%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%a2%85%eb%a5%98%ec%99%80-%ea%b5%ac%ed%98%84-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>HMAC (Hash-based MAC):&lt;br>
가장 널리 사용되는 MAC 구현 방식으로, 암호학적 해시 함수를 기반으로 한다.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">HMAC&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">M&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">H&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">K&lt;/span>&lt;span class="s1">&amp;#39; ⊕ opad) || H((K&amp;#39;&lt;/span> &lt;span class="err">⊕&lt;/span> &lt;span class="n">ipad&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">M&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>여기서:&lt;/p>
&lt;ul>
&lt;li>H는 해시 함수 (예: SHA-256)&lt;/li>
&lt;li>K&amp;rsquo;은 해시 함수의 블록 크기에 맞게 조정된 키&lt;/li>
&lt;li>opad와 ipad는 서로 다른 상수 값&lt;/li>
&lt;li>||는 연접(concatenation) 연산&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>CMAC (Cipher-based MAC):&lt;br>
블록 암호를 기반으로 하는 MAC. 주로 AES와 같은 블록 암호를 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>PMAC (Parallelizable MAC):&lt;br>
병렬 처리가 가능한 MAC으로, 대용량 메시지 처리에 효율적이다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>MAC의 보안 특성과 요구사항&lt;span class="hx-absolute -hx-mt-20" id="mac의-보안-특성과-요구사항">&lt;/span>
&lt;a href="#mac%ec%9d%98-%eb%b3%b4%ec%95%88-%ed%8a%b9%ec%84%b1%ea%b3%bc-%ec%9a%94%ea%b5%ac%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>불변성(Unforgeability):&lt;br>
비밀키를 모르는 공격자는 유효한 MAC 태그를 생성할 수 없어야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>충돌 저항성(Collision Resistance):&lt;br>
서로 다른 메시지에 대해 동일한 MAC 값이 생성될 확률이 무시할 만큼 작아야 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>강한 키 의존성:&lt;br>
키가 조금만 바뀌어도 완전히 다른 MAC 값이 생성되어야 한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>실제 응용 분야와 사례&lt;span class="hx-absolute -hx-mt-20" id="실제-응용-분야와-사례">&lt;/span>
&lt;a href="#%ec%8b%a4%ec%a0%9c-%ec%9d%91%ec%9a%a9-%eb%b6%84%ec%95%bc%ec%99%80-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>통신 보안:&lt;/p>
&lt;ul>
&lt;li>TLS/SSL 프로토콜에서의 메시지 무결성 검증&lt;/li>
&lt;li>네트워크 패킷의 인증&lt;/li>
&lt;li>VPN 통신의 보안&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>금융 거래:&lt;/p>
&lt;ul>
&lt;li>전자 금융 거래의 무결성 보장&lt;/li>
&lt;li>신용카드 거래 인증&lt;/li>
&lt;li>디지털 서명 시스템의 보조 수단&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 저장:&lt;/p>
&lt;ul>
&lt;li>저장된 데이터의 무결성 검증&lt;/li>
&lt;li>백업 데이터의 유효성 확인&lt;/li>
&lt;li>소프트웨어 패키지의 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>MAC과 다른 보안 메커니즘의 비교&lt;span class="hx-absolute -hx-mt-20" id="mac과-다른-보안-메커니즘의-비교">&lt;/span>
&lt;a href="#mac%ea%b3%bc-%eb%8b%a4%eb%a5%b8-%eb%b3%b4%ec%95%88-%eb%a9%94%ec%bb%a4%eb%8b%88%ec%a6%98%ec%9d%98-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>MAC vs 디지털 서명:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>MAC: 대칭키 사용, 빠른 처리 속도, 송수신자 간 키 공유 필요&lt;/li>
&lt;li>디지털 서명: 공개키 사용, 느린 처리 속도, 부인 방지 기능 제공&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>MAC vs 해시 함수:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>MAC: 키를 사용하여 인증 제공&lt;/li>
&lt;li>해시 함수: 키를 사용하지 않음, 무결성만 제공&lt;/li>
&lt;/ul>
&lt;h3>구현 시 고려사항과 모범 사례&lt;span class="hx-absolute -hx-mt-20" id="구현-시-고려사항과-모범-사례">&lt;/span>
&lt;a href="#%ea%b5%ac%ed%98%84-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad%ea%b3%bc-%eb%aa%a8%eb%b2%94-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>키 관리:&lt;/p>
&lt;ul>
&lt;li>안전한 키 생성과 분배&lt;/li>
&lt;li>정기적인 키 교체&lt;/li>
&lt;li>안전한 키 저장&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>구현 보안:&lt;/p>
&lt;ul>
&lt;li>타이밍 공격 방지&lt;/li>
&lt;li>적절한 난수 생성기 사용&lt;/li>
&lt;li>상수 시간 비교 연산 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화:&lt;/p>
&lt;ul>
&lt;li>적절한 MAC 알고리즘 선택&lt;/li>
&lt;li>캐싱 전략 수립&lt;/li>
&lt;li>병렬 처리 활용 검토&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>