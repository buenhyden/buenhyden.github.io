.
├── Data and Intelligence
│   ├── AI and Machine Learning
│   │   ├── AI Engineering
│   │   │   ├── AI Agents
│   │   │   └── _index.md
│   │   ├── AI-ML Fundamentals
│   │   │   ├── AI-Engineer-vs-ML-Engineer.md
│   │   │   └── AI-vs-AGI.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Big Data Technologies
│   │   ├── Overview
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Data Engineering
│   │   ├── Data Pipeline
│   │   │   ├── Data Pipeline Design
│   │   │   └── Data Pipeline Tools
│   │   ├── Data Processing
│   │   │   └── Data Processing Tools
│   │   ├── ETL vs ELT
│   │   │   └── _index.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Data Science
│   │   ├── Overview
│   │   │   └── _index.md
│   │   └── _index.md
│   └── Overview
├── Emerging Technologies
│   ├── Blockchain and Distributed Ledger
│   │   └── Blockchain
│   │       ├── Distributed-Ledger-Technology.md
│   │       ├── Semantic-Web.md
│   │       └── _index.md
│   ├── Extended Reality
│   ├── IoT
│   │   └── _index.md
│   ├── Overview
│   │   └── _index.md
│   ├── Quantum Computing
│   └── _index.md
├── Overview
│   └── _index.md
├── Programming and Development
│   ├── Frontend and Mobile Development
│   │   ├── Frontend Development
│   │   │   ├── Advanced Architecture
│   │   │   ├── Frameworks
│   │   │   ├── Overview
│   │   │   ├── Styling and Design Systems
│   │   │   ├── UX and Accessibility
│   │   │   ├── Web Fundamentals
│   │   │   ├── WebAssembly
│   │   │   └── _index.md
│   │   ├── Mobile Development
│   │   │   ├── Overview
│   │   │   └── _index.md
│   │   └── Overview
│   ├── Programming Languages
│   │   ├── Go
│   │   ├── Java
│   │   │   ├── Ecosystem and Frameworks
│   │   │   ├── Fundamentals
│   │   │   ├── Language and Platform
│   │   │   ├── Testing
│   │   │   └── _index.md
│   │   ├── JavaScript Family
│   │   │   ├── JavaScript
│   │   │   ├── Runtime
│   │   │   ├── Tooling and Ecosystem
│   │   │   ├── TypeScript
│   │   │   ├── _index.md
│   │   │   └── typescript-vs-javascript.md
│   │   ├── Overview
│   │   │   ├── Language Landscape
│   │   │   ├── _index.md
│   │   │   └── python-vs-javascript-vs-typescript-vs-java.md
│   │   ├── Programming Fundamentals
│   │   │   ├── Basic Concepts
│   │   │   ├── Code Organization
│   │   │   ├── Development Environment
│   │   │   ├── Language-Syntax.md
│   │   │   ├── Problem Solving Approaches
│   │   │   ├── Synchronous vs Asynchronous
│   │   │   └── _index.md
│   │   ├── Programming Paradigms
│   │   │   ├── Concurrency Paradigms
│   │   │   ├── Declarative Paradigms
│   │   │   ├── Imperative Paradigms
│   │   │   ├── Paradigm Fundamentals
│   │   │   ├── Reactive Paradigms
│   │   │   ├── Specialized Paradigms
│   │   │   └── _index.md
│   │   ├── Python
│   │   │   ├── Advanced
│   │   │   ├── Basic Syntax
│   │   │   ├── Fundamentals
│   │   │   ├── Library
│   │   │   ├── PEP
│   │   │   ├── Web Framework
│   │   │   └── _index.md
│   │   └── _index.md
│   └── Software Development and Engineering
│       ├── API Development and Implementation
│       │   ├── API Communication Patterns
│       │   ├── API Deployment and Operations
│       │   ├── API Design Principles
│       │   ├── API Design and Architecture
│       │   ├── API Implementation Fundamentals
│       │   ├── API Integration
│       │   ├── API Lifecycle Management
│       │   ├── API Quality and Performance
│       │   ├── API Security Implementation
│       │   ├── API Specification and Documentation
│       │   ├── API Styles
│       │   ├── API Technologies
│       │   └── API Testing
│       ├── Backend Development
│       │   ├── Backend Performance
│       │   └── _index.md
│       ├── Overview
│       │   └── _index.md
│       └── Software Development Fundamentals
│           ├── Clean Code
│           ├── Migration-Strategies.md
│           ├── Software Licenses
│           ├── _index.md
│           └── secure-coding.md
├── Software Engineering
│   ├── DevOps and Platform Engineering
│   │   ├── CI-CD
│   │   │   ├── CI-CD Automation
│   │   │   ├── CI-CD Fundamentals
│   │   │   ├── CI-CD Platforms
│   │   │   ├── Cloud-Native CI-CD
│   │   │   ├── Deployment and Operations
│   │   │   ├── Pipeline Design
│   │   │   ├── Testing in CI-CD
│   │   │   └── _index.md
│   │   ├── DevOps and Operational Excellence
│   │   │   ├── DevOps
│   │   │   ├── DevSecOps
│   │   │   ├── FinOps
│   │   │   ├── GitOps
│   │   │   ├── Operations-Frameworks.md
│   │   │   ├── Platform Engineering
│   │   │   ├── Site Reliability Engineering
│   │   │   └── _index.md
│   │   ├── Monitoring and Observability
│   │   │   ├── Fundamentals
│   │   │   ├── Monitoring
│   │   │   ├── Observability
│   │   │   ├── Observability Architecture
│   │   │   ├── Observability and Monitoring Tools
│   │   │   ├── Observability and Operations
│   │   │   ├── Observability-vs-Monitoring.md
│   │   │   └── _index.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   ├── Platform Technologies
│   │   │   ├── DPDK
│   │   │   ├── WebAssembly
│   │   │   ├── eBPF
│   │   │   └── io_uring
│   │   ├── Terminal Knowledge
│   │   │   ├── Networking Tools
│   │   │   ├── Performance Monitoring
│   │   │   ├── Process Monitoring
│   │   │   ├── Scripting
│   │   │   ├── Text Manipulation
│   │   │   └── _index.md
│   │   ├── Version Control Systems
│   │   │   ├── Advanced Topics
│   │   │   ├── Collaboration
│   │   │   ├── Enterprise Usage
│   │   │   ├── Git Workflow
│   │   │   ├── Repo Hosting Services
│   │   │   ├── Security and Governance
│   │   │   ├── VCS Theory
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Overview
│   │   └── _index.md
│   ├── Quality Assurance and Testing
│   │   ├── Foundations
│   │   │   ├── Principles and Glossary
│   │   │   ├── Static vs Dynamic Testing
│   │   │   └── Test Double
│   │   ├── Overview
│   │   │   └── _index.md
│   │   ├── Quality Metrics
│   │   │   ├── Code Quality Metrics
│   │   │   ├── Product Quality Characteristics
│   │   │   ├── Test and Process Metrics
│   │   │   └── _index.md
│   │   ├── Test Management
│   │   │   ├── Reporting and Traceability
│   │   │   ├── Test Cases and Scenarios
│   │   │   └── Test Planning and Strategy
│   │   ├── Test Patterns and Strategies
│   │   │   ├── Contract Testing
│   │   │   ├── End-to-End Strategy
│   │   │   └── Service Component Testing
│   │   ├── Testing Fundamentals
│   │   │   ├── Test Design Techniques
│   │   │   ├── Testing Levels
│   │   │   └── Testing Types
│   │   ├── Testing Tools and Frameworks
│   │   │   ├── Browser Testing
│   │   │   ├── Component Testing
│   │   │   ├── E2E Testing
│   │   │   ├── Headless Testing
│   │   │   └── Unit Testing Tools
│   │   ├── Verification and Validation
│   │   │   ├── Dynamic Analysis and Profiling
│   │   │   ├── Formal Methods
│   │   │   ├── Reviews
│   │   │   ├── Static Analysis
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Requirements Engineering
│   │   ├── Elicitation
│   │   ├── Foundations and Concepts
│   │   ├── Functional vs Non-Functional Requirements
│   │   │   └── _index.md
│   │   ├── Requirements Management
│   │   ├── Specification
│   │   │   ├── Executable Specifications
│   │   │   └── _index.md
│   │   ├── Stakeholders and Context
│   │   ├── User Stories and Use Cases
│   │   │   ├── Prioritization and Roadmapping
│   │   │   ├── Use Cases
│   │   │   ├── User Stories
│   │   │   └── _index.md
│   │   ├── Validation and Verification
│   │   └── _index.md
│   ├── Software Design and Architecture
│   │   ├── Architecture
│   │   │   ├── Architectural Quality Attributes
│   │   │   ├── Architecture Documentation
│   │   │   ├── Architecture Governance
│   │   │   ├── Architecture Governance and Evolution
│   │   │   ├── Architecture Principles
│   │   │   ├── Architecture Styles
│   │   │   ├── Architecture Styles and Patterns
│   │   │   ├── Distributed Architectures
│   │   │   ├── Modeling and Documentation
│   │   │   ├── Quality Attributes
│   │   │   └── _index.md
│   │   ├── Architecture Patterns
│   │   │   ├── Application Architecture Patterns
│   │   │   ├── Data Access Patterns
│   │   │   ├── Enterprise Data Platform Patterns
│   │   │   ├── Performance and Scalability
│   │   │   ├── Resilience and Reliability
│   │   │   └── _index.md
│   │   ├── Cloud-Native Architecture
│   │   │   ├── Cloud Architecture Principles
│   │   │   ├── Container Architecture
│   │   │   ├── Edge Computing
│   │   │   ├── Multi-Cloud Architecture
│   │   │   ├── Serverless Architecture
│   │   │   └── _index.md
│   │   ├── Component Principles
│   │   │   └── _index.md
│   │   ├── Data Architecture
│   │   │   ├── Data-Centric Architecture
│   │   │   └── Data-Flow Architecture
│   │   ├── Database Architecture
│   │   │   ├── Data Storage Patterns
│   │   │   └── Database Design Patterns
│   │   ├── Design Methodology
│   │   │   ├── Concurrent-Engineering-Model.md
│   │   │   ├── Domain-Driven Design
│   │   │   ├── Model-Driven Design
│   │   │   ├── Object-Oriented Design
│   │   │   ├── Service-Oriented Design
│   │   │   └── _index.md
│   │   ├── Design Patterns and Integration
│   │   │   ├── Communication Patterns
│   │   │   ├── Configuration Patterns
│   │   │   └── Integration Patterns
│   │   ├── Design Principles
│   │   │   ├── Composition Over Inheritance
│   │   │   ├── Convention over Configuration
│   │   │   ├── Dry
│   │   │   ├── Encapsulate What Varies
│   │   │   ├── GRASP
│   │   │   ├── Inversion of Control
│   │   │   ├── Kiss
│   │   │   ├── Law of Demeter
│   │   │   ├── Program Against Abstractions
│   │   │   ├── SOLID Principles
│   │   │   ├── Yagni
│   │   │   └── _index.md
│   │   ├── Messaging-Oriented Architecture
│   │   │   ├── Enterprise Integration Patterns
│   │   │   ├── Event-Driven Architecture
│   │   │   ├── Message-Driven Architecture
│   │   │   ├── Publish-Subscribe Architecture
│   │   │   ├── _index.md
│   │   │   └── message-driven-vs-event-driven-architecture.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   ├── Service Decomposition
│   │   │   ├── Business Capability Decomposition
│   │   │   ├── Data-Driven Decomposition
│   │   │   ├── Decompose-by-Business-Capability-vs-Decompose-by-Subdomain.md
│   │   │   ├── Decompose-by-Business-Capability.md
│   │   │   ├── Decompose-by-Subdomain.md
│   │   │   ├── Domain-Driven Decomposition
│   │   │   ├── Self-contained-Service.md
│   │   │   └── Service-per-team.md
│   │   ├── Software Design Patterns
│   │   │   ├── Classic Design Patterns
│   │   │   ├── Enterprise Patterns
│   │   │   ├── Modern Design Patterns
│   │   │   ├── Performance Optimization Patterns
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Software Development Lifecycle
│   │   ├── 1-Planning.md
│   │   ├── 2-Requirements-Gathering-and-Analysis.md
│   │   ├── 3-Design.md
│   │   ├── 4-Implementation.md
│   │   ├── 5-Testing.md
│   │   ├── 6-Deployment.md
│   │   ├── 7-Maintenance.md
│   │   └── _index.md
│   ├── Software Development Methodology
│   │   ├── Agile
│   │   │   ├── Agile Unified Process
│   │   │   ├── Crystal
│   │   │   ├── Feature-Driven Development
│   │   │   ├── Kanban
│   │   │   ├── Lean Software Development
│   │   │   ├── Scrum
│   │   │   ├── XP
│   │   │   └── _index.md
│   │   ├── Hybrid and Scaled
│   │   │   ├── Rapid-Application-Development.md
│   │   │   └── _index.md
│   │   ├── Traditional
│   │   │   ├── Incremental-Model.md
│   │   │   ├── Iterative-Model.md
│   │   │   ├── Prototyping-Model.md
│   │   │   ├── Spiral-Model.md
│   │   │   ├── V-Model.md
│   │   │   └── Waterfall-Model.md
│   │   └── _index.md
│   └── _index.md
├── Systems and Infrastructure
│   ├── Cybersecurity and Information Security
│   │   ├── Application and Software Security
│   │   │   ├── API Security
│   │   │   ├── Code Protection
│   │   │   ├── Mobile Application Security
│   │   │   └── Web Security
│   │   ├── Cryptography
│   │   │   ├── Authentication
│   │   │   ├── Cryptography Fundamentals
│   │   │   ├── Encryption
│   │   │   ├── Hashing
│   │   │   ├── Key Management and PKI
│   │   │   ├── PQC and Zero-Knowledge Proofs
│   │   │   ├── _index.md
│   │   │   └── quantum cryptography
│   │   ├── Governance and Management
│   │   │   ├── Compliance and Regulations
│   │   │   └── Standards and Policies
│   │   ├── Identity and Access Management
│   │   │   ├── Accounting and Audit
│   │   │   ├── Authentication
│   │   │   ├── Authorization
│   │   │   ├── Identification and Identity Stores
│   │   │   └── _index.md
│   │   ├── Infrastructure and Cloud Security
│   │   │   ├── Cloud Security
│   │   │   ├── Container and Orchestrator Security
│   │   │   ├── Network Security
│   │   │   └── Secret Management
│   │   ├── Overview
│   │   │   └── _index.md
│   │   ├── Security Attacks
│   │   │   ├── Common Attacks
│   │   │   ├── Kill Chain and ATT&CK Mapping
│   │   │   └── _index.md
│   │   ├── Security Fundamentals
│   │   │   ├── PII and Privacy Basics
│   │   │   ├── Security Principles
│   │   │   └── Threat Modeling
│   │   ├── Security Operations
│   │   │   ├── Incident Response and Recovery
│   │   │   ├── Monitoring and ISCM
│   │   │   ├── Pentesting
│   │   │   ├── Red–Blue–Purple Team
│   │   │   ├── Threat Intel
│   │   │   ├── Vulnerability and Patch Management
│   │   │   └── _index.md
│   │   ├── Vulnerability Management
│   │   │   ├── Discovery and Triage
│   │   │   ├── Frameworks and Identifiers
│   │   │   └── Security Vulnerability
│   │   └── _index.md
│   ├── Networking and Communication
│   │   ├── Fundamentals
│   │   │   ├── Cloud-Networking.md
│   │   │   ├── Communication Methods
│   │   │   ├── Data Transmission
│   │   │   ├── Internet
│   │   │   ├── Network Devices
│   │   │   ├── Network Traffic
│   │   │   ├── Network Types
│   │   │   ├── RDMA.md
│   │   │   ├── Real-time Communication
│   │   │   ├── Streaming
│   │   │   ├── Web
│   │   │   └── _index.md
│   │   ├── Layered Network Models
│   │   │   ├── Complementary Concepts
│   │   │   ├── Cross-Layer Functions
│   │   │   ├── Emerging Network Paradigms
│   │   │   ├── Evolved Architectures
│   │   │   ├── Implementations
│   │   │   ├── OSI 7Layers
│   │   │   ├── OSI vs. TCP-IP
│   │   │   ├── TCP IP 4Layers
│   │   │   └── _index.md
│   │   ├── Network Protocols
│   │   │   ├── Application Layer
│   │   │   ├── Network Layer
│   │   │   ├── Physical-Link
│   │   │   ├── Transport Layer
│   │   │   └── _index.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Overview
│   └── System Design
│       ├── Cloud Computing
│       │   ├── Cloud Providers
│       │   ├── Cloud-Native
│       │   ├── Multi Cloud Strategy
│       │   ├── Serverless Computing
│       │   └── _index.md
│       ├── Database Systems
│       │   ├── Concurrency Control
│       │   ├── Data Modeling
│       │   ├── Database Fundamentals
│       │   ├── Database Optimization
│       │   ├── Database Quality and Problems
│       │   ├── Database Scaling and Performance
│       │   ├── Database Types
│       │   ├── Query Processing
│       │   ├── Recovery Systems
│       │   ├── Storage and Indexing
│       │   ├── Transaction
│       │   └── _index.md
│       ├── Distributed Systems
│       │   ├── Clustering
│       │   ├── Distributed Concurrency
│       │   ├── Distributed Coordination
│       │   ├── Distributed System Theorems
│       │   ├── Distributed transactions
│       │   ├── Workflow Management
│       │   └── _index.md
│       ├── IO Systems
│       │   └── IO Models
│       ├── Message-Oriented Systems
│       │   ├── Message Brokers
│       │   ├── Message Processing Systems
│       │   ├── Messaging Fundamentals
│       │   ├── Messaging Infrastructure
│       │   └── _index.md
│       ├── Overview
│       │   └── _index.md
│       ├── Performance Antipatterns
│       │   ├── Busy Database
│       │   ├── Busy Frontend
│       │   ├── Chatty I and O
│       │   ├── Extraneous Fetching
│       │   ├── Improper Instantiation
│       │   ├── Monolithic Persistence
│       │   ├── No Caching
│       │   ├── Noisy Neighbor
│       │   ├── Retry Storm
│       │   └── Synchronous I and O
│       ├── Resource Orchestration
│       │   ├── Execution Topologies
│       │   └── Service Deployment Patterns
│       ├── System Components
│       │   ├── Access and Network Entry
│       │   ├── Application and Execution Core
│       │   ├── Cross-Cutting Concerns
│       │   ├── Data and State Management
│       │   ├── Overview
│       │   ├── Platform and Execution Infrastructure
│       │   ├── Traffic Control and Routing
│       │   └── _index.md
│       ├── System Design Fundamentals
│       │   ├── Data Exchange
│       │   ├── Execution Models
│       │   ├── Infrastructure
│       │   ├── Middlewares
│       │   ├── Multi-tenancy
│       │   ├── System-Design-and-Architecture.md
│       │   └── _index.md
│       ├── Use Cases
│       │   ├── Industry Patterns
│       │   ├── Integration Patterns
│       │   ├── Reference Architectures
│       │   └── _index.md
│       └── _index.md
├── Theoretical Foundations
│   ├── Computer Science Fundamentals
│   │   ├── Binary Representation
│   │   │   ├── Bitwise Operations
│   │   │   ├── Endianness
│   │   │   ├── Floating Point
│   │   │   └── Number Systems
│   │   ├── Computer Architecture
│   │   │   ├── Bus and I-O Systems
│   │   │   ├── Computer Organization
│   │   │   ├── Memory Architectures
│   │   │   ├── Parallel Architectures
│   │   │   ├── Processor Architecture
│   │   │   ├── Types
│   │   │   └── _index.md
│   │   ├── Concurrency and Parallelism
│   │   │   ├── Classical Algorithms
│   │   │   ├── Concurrency Implementation Techniques
│   │   │   ├── Concurrency Models
│   │   │   ├── Concurrency Problems
│   │   │   ├── Condition Synchronization
│   │   │   ├── Fundamental Concepts
│   │   │   ├── Lock
│   │   │   ├── Parallelism Models
│   │   │   ├── Synchronization Primitives
│   │   │   └── _index.md
│   │   ├── Encoding and Decoding
│   │   │   ├── Binary-to-Text
│   │   │   ├── Character Encoding
│   │   │   ├── Multimedia Encoding
│   │   │   ├── URL Percent-encoding
│   │   │   └── _index.md
│   │   ├── Operating systems
│   │   │   ├── IO Systems
│   │   │   ├── Memory Management
│   │   │   ├── OS Fundamentals
│   │   │   ├── OS Types
│   │   │   ├── Popular OS
│   │   │   ├── Process Management
│   │   │   ├── Storage and File Systems
│   │   │   ├── System Architecture
│   │   │   ├── Thread Management
│   │   │   └── _index.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   ├── Performance and Optimization
│   │   │   ├── Amdahls Law vs Gustafsons Law
│   │   │   ├── Performance Fundamentals
│   │   │   ├── Profiling and Microbenchmarking
│   │   │   └── _index.md
│   │   ├── Runtime Systems
│   │   │   ├── ABI-FFI
│   │   │   ├── Exceptions and Stack Unwinding
│   │   │   ├── JIT Compilation
│   │   │   ├── Memory Management in Runtimes
│   │   │   ├── Runtime
│   │   │   └── Scheduling
│   │   ├── Theoretical Foundations
│   │   │   ├── Computability and Turing Machine
│   │   │   ├── Computational Complexity
│   │   │   ├── Mathematical Foundations
│   │   │   ├── Non-determinism.md
│   │   │   └── _index.md
│   │   └── _index.md
│   ├── Data Structures and Algorithms
│   │   ├── Algorithms
│   │   │   ├── Graph
│   │   │   ├── Optimization
│   │   │   ├── Searching
│   │   │   ├── Sorting
│   │   │   ├── String Algorithms
│   │   │   └── _index.md
│   │   ├── Data Structures
│   │   │   ├── Concurrent Data Structures
│   │   │   ├── Hash Table
│   │   │   ├── Linear
│   │   │   ├── Linear-Data-Structure-vs-Non-Linear-Data-Structure.md
│   │   │   ├── Non-Linear
│   │   │   ├── Primitive
│   │   │   ├── Primitive-data-structure-vs-Non-Primitive-data-structure.md
│   │   │   └── _index.md
│   │   ├── Fundamentals
│   │   │   ├── Basic Concepts
│   │   │   ├── Computational Theory
│   │   │   └── _index.md
│   │   ├── Overview
│   │   │   └── _index.md
│   │   ├── Problem Solving Techniques
│   │   │   ├── Approximation Techniques
│   │   │   ├── Back Tracking
│   │   │   ├── Basic Techniques
│   │   │   ├── Branch and Bound
│   │   │   ├── Divide and Conquer
│   │   │   ├── Dynamic Programming
│   │   │   ├── Greedy Algorithm
│   │   │   ├── Hashing
│   │   │   ├── Metaheuristic
│   │   │   └── _index.md
│   │   └── _index.md
│   └── Programming Language Theory
│       ├── Compilers vs Interpreters
│       │   ├── Assembler
│       │   ├── Compiler
│       │   ├── Interpreter
│       │   ├── aot-vs-jit-vs-interpreter.md
│       │   └── compiler-vs-interpreter-vs-assembler.md
│       ├── Garbage Collection
│       │   └── _index.md
│       ├── Type Systems
│       │   ├── Static vs Dynamic Typing
│       │   ├── Strong vs Weak Typing
│       │   └── Type Inference
│       └── _index.md
├── _index.md
└── v.txt

496 directories, 136 files
