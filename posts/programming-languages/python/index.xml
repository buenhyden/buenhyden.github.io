<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python :: hyunyoun's Blog</title><link>https://buenhyden.github.io/posts/programming-languages/python/</link><description>다양한 특징을 가진 강력하고 유연한 프로그래밍 언어</description><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Wed, 15 Jan 2025 06:41:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/programming-languages/python/index.xml" rel="self" type="application/rss+xml"/><item><title>setup.cfg vs pyproject.toml</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg-vs-pyproject.toml/</link><pubDate>Mon, 21 Oct 2024 14:29:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg-vs-pyproject.toml/</guid><description>Python 프로젝트의 구성과 메타데이터를 정의하는 파일 형식이다.</description></item><item><title>Poetry vs uv vs Rye</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry-vs-uv-vs-rye/</link><pubDate>Wed, 15 Jan 2025 06:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry-vs-uv-vs-rye/</guid><description>파이썬 프로젝트 관리와 패키지 설치를 위한 도구들</description></item><item><title>Greenlet and Gevent</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/concurrency/greenlet-and-gevent/</link><pubDate>Wed, 15 Jan 2025 05:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/concurrency/greenlet-and-gevent/</guid><description>Greenlet과 Gevent는 Python에서 동시성 프로그래밍을 위한 라이브러리이다.</description></item><item><title>Rye</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/rye/</link><pubDate>Wed, 15 Jan 2025 04:19:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/rye/</guid><description>Rye는 파이썬 프로젝트와 패키지 관리를 위한 통합 솔루션으로, 2022년 11월에 Pynecone이라는 이름으로 처음 공개되었으나, 2023년 6월에 Rye로 이름이 변경되었다.</description></item><item><title>uv</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/uv/</link><pubDate>Wed, 15 Jan 2025 04:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/uv/</guid><description>Rust로 작성된 UV는 기존의 pip, pip-tools, virtualenv 등을 대체할 수 있는 초고속 파이썬 패키지 설치 및 의존성 해결 도구이다.</description></item><item><title>Python Super</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-super/</link><pubDate>Sat, 21 Dec 2024 02:00:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-super/</guid><description>super()는 상속 관계에서 부모 클래스의 메서드를 호출하는 데 사용되는 중요한 도구.</description></item><item><title>Python Web Application Server</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/python-web-application-server/</link><pubDate>Sun, 17 Nov 2024 14:06:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/python-web-application-server/</guid><description>gunicorn, uwsgi, daphne, uvicorn은 모두 Python 웹 애플리케이션을 실행하고 서비스하기 위한 서버 프로그램들이다.</description></item><item><title>daphne</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/daphne/</link><pubDate>Sat, 16 Nov 2024 08:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/daphne/</guid><description>Daphne는 Django Channels를 위해 개발된 HTTP, HTTP2 및 WebSocket 프로토콜 서버이다.</description></item><item><title>uvicorn</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uvicorn/</link><pubDate>Sat, 16 Nov 2024 08:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uvicorn/</guid><description>Uvicorn은 Python용 ASGI(Asynchronous Server Gateway Interface) 웹 서버 구현체이다.</description></item><item><title>gunicorn</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/gunicorn/</link><pubDate>Sat, 16 Nov 2024 03:37:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/gunicorn/</guid><description>Gunicorn(Green Unicorn)은 Python WSGI(Web Server Gateway Interface) HTTP 서버로, 파이썬 웹 애플리케이션을 위한 강력하고 효율적인 서버 솔루션이다.</description></item><item><title>UWSGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uwsgi/</link><pubDate>Sat, 16 Nov 2024 03:36:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/web-application-server/uwsgi/</guid><description>파이썬 웹 애플리케이션을 위한 강력하고 유연한 애플리케이션 서버</description></item><item><title>ASGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/asgi/</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/asgi/</guid><description>Python 웹 애플리케이션과 웹 서버 간의 비동기 통신을 위한 표준 인터페이스</description></item><item><title>CGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/cgi/</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/cgi/</guid><description>웹 서버와 외부 프로그램 간의 통신을 위한 표준 인터페이스</description></item><item><title>WSGI</title><link>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/wsgi/</link><pubDate>Sat, 16 Nov 2024 03:02:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/gateway-interface/wsgi/</guid><description>파이썬 웹 애플리케이션과 웹 서버 간의 표준 인터페이스를 정의하는 규약</description></item><item><title>Python Lambda</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-lambda/</link><pubDate>Fri, 15 Nov 2024 11:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-lambda/</guid><description>익명 함수를 생성하는 강력한 도구</description></item><item><title>Modin</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/modin/</link><pubDate>Fri, 15 Nov 2024 07:13:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/modin/</guid><description>pandas를 대체할 수 있는 고성능 데이터프레임 라이브러리</description></item><item><title>Dask</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/dask/</link><pubDate>Fri, 15 Nov 2024 07:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/dask/</guid><description>파이썬을 위한 유연한 병렬 컴퓨팅 라이브러리</description></item><item><title>Polars</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/polars/</link><pubDate>Fri, 15 Nov 2024 07:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/polars/</guid><description>고성능 데이터 처리를 위해 설계된 파이썬 DataFrame 라이브러리</description></item><item><title>Numpy</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/numpy/</link><pubDate>Fri, 15 Nov 2024 07:08:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/numpy/</guid><description>파이썬에서 과학 계산을 위한 핵심 라이브러리.</description></item><item><title>pandas</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/pandas/</link><pubDate>Fri, 15 Nov 2024 05:56:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-analysis/pandas/</guid><description>데이터를 다루기 위한 강력한 도구로, 엑셀의 스프레드시트와 비슷한 형태로 데이터를 처리할 수 있게 해준다.</description></item><item><title>pydantic</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/data-validation/pydantic/</link><pubDate>Fri, 15 Nov 2024 03:01:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/data-validation/pydantic/</guid><description>데이터 검증과 설정 관리를 위한 라이브러리</description></item><item><title>Python Testing</title><link>https://buenhyden.github.io/posts/programming-languages/python/testing/</link><pubDate>Thu, 14 Nov 2024 14:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/testing/</guid><description>Python에서 활용할 수 있는 다양한 테스팅 도구</description></item><item><title>Python Linter와 Formatter</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/python-linter%EC%99%80-formatter/</link><pubDate>Wed, 13 Nov 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/python-linter%EC%99%80-formatter/</guid><description>Python에서 활용할 수 있는 소스 코드에서 문법 오류나 스타일 문제, 잠재적인 버그를 자동으로 검사해주는 도구</description></item><item><title>Python Keywords</title><link>https://buenhyden.github.io/posts/programming-languages/python/keywords/python-keywords/</link><pubDate>Wed, 13 Nov 2024 10:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/keywords/python-keywords/</guid><description>파이썬에서 이미 예약되어있는 문자열</description></item><item><title>ruff</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/ruff/</link><pubDate>Wed, 13 Nov 2024 08:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/ruff/</guid><description>Python 코드 품질을 개선하기 위한 린터</description></item><item><title>autopep8</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/autopep8/</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/autopep8/</guid><description>Python 코드를 PEP 8 스타일 가이드라인에 맞게 자동으로 포맷팅해주는 도구</description></item><item><title>Black</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/black/</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/black/</guid><description>파이썬을 위한 강력하고 엄격한 코드 포매터</description></item><item><title>Flake8</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/flake8/</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/flake8/</guid><description>파이썬 코드를 위한 강력한 린팅(linting) 도구</description></item><item><title>YAPF(Yet Another Python Formatter)</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/yapf/</link><pubDate>Wed, 13 Nov 2024 03:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/yapf/</guid><description>Google에서 개발한 파이썬 코드 포매터.</description></item><item><title>Pylint</title><link>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/pylint/</link><pubDate>Wed, 13 Nov 2024 03:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/linter-and-formatter/pylint/</guid><description>파이썬 코드의 품질을 검사하고 개선하는데 도움을 주는 강력한 정적 코드 분석 도구</description></item><item><title>Python Web Framework</title><link>https://buenhyden.github.io/posts/programming-languages/python/web-framework/</link><pubDate>Thu, 07 Nov 2024 04:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/web-framework/</guid><description>동적 웹사이트, 웹 서비스 및 웹 애플리케이션의 개발을 지원하기 위해 만들어진 소프트웨어 프레임워크</description></item><item><title>SQLAlchemy</title><link>https://buenhyden.github.io/posts/programming-languages/python/library/orm/sqlalchemy/</link><pubDate>Wed, 06 Nov 2024 09:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/library/orm/sqlalchemy/</guid><description>파이썬에서 사용되는 강력하고 유연한 SQL 툴킷 및 객체 관계 매핑(ORM) 라이브러리</description></item><item><title>Docstring</title><link>https://buenhyden.github.io/posts/programming-languages/python/docstring/</link><pubDate>Tue, 29 Oct 2024 03:07:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/docstring/</guid><description>python에서 함수, 클래스, 모듈에 대한 문서화를 위해 사용되는 문자열</description></item><item><title>Python - Decorators</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-decorators/</link><pubDate>Fri, 25 Oct 2024 17:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-decorators/</guid><description>함수나 메서드를 수정하지 않고 기능을 확장하거나 변경할 수 있는 강력한 도구</description></item><item><title>Python - Iterators</title><link>https://buenhyden.github.io/posts/programming-languages/python/objects/python-iterators/</link><pubDate>Fri, 25 Oct 2024 17:52:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/objects/python-iterators/</guid><description>데이터 컬렉션의 요소들을 순차적으로 접근할 수 있게 해주는 객체</description></item><item><title>classmethod and staticmethod</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/classmethod-and-staticmethod/</link><pubDate>Fri, 25 Oct 2024 12:39:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/classmethod-and-staticmethod/</guid><description>Python의 클래스에서 사용되는 두 가지 다른 종류의 메서드 데코레이터</description></item><item><title>Python - Generators</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-generators/</link><pubDate>Fri, 25 Oct 2024 08:29:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-generators/</guid><description>반복 가능한 객체를 생성하는 강력한 도구</description></item><item><title>내장 데코레이터 (Built-in Decorators)</title><link>https://buenhyden.github.io/posts/programming-languages/python/function/python-%EB%82%B4%EC%9E%A5-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0/</link><pubDate>Fri, 25 Oct 2024 07:49:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/function/python-%EB%82%B4%EC%9E%A5-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0/</guid><description>파이썬에는 다양한 내장 데코레이터가 있으며, 이들은 코드를 최적화하고 기능을 확장하는 데 중요한 역할을 한다.</description></item><item><title>Python-Special Methods</title><link>https://buenhyden.github.io/posts/programming-languages/python/objects/python-special-methods/</link><pubDate>Thu, 24 Oct 2024 23:41:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/objects/python-special-methods/</guid><description>클래스에 특별한 기능을 부여하는 특수한 메소드</description></item><item><title>Generator and Iterator</title><link>https://buenhyden.github.io/posts/programming-languages/python/generator-and-iterator/</link><pubDate>Thu, 24 Oct 2024 10:43:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/generator-and-iterator/</guid><description>제너레이터와 이터레이터의 주요 차이점</description></item><item><title>Method Resolution Order (MRO)</title><link>https://buenhyden.github.io/posts/programming-languages/python/method-resolution-order/</link><pubDate>Thu, 24 Oct 2024 01:40:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/method-resolution-order/</guid><description>파이썬에서 클래스의 상속 관계에서 메서드를 찾는 순서를 정의하는 규칙</description></item><item><title>Python 연산자</title><link>https://buenhyden.github.io/posts/programming-languages/python/operators/python-%EC%97%B0%EC%82%B0%EC%9E%90/</link><pubDate>Thu, 24 Oct 2024 00:21:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/operators/python-%EC%97%B0%EC%82%B0%EC%9E%90/</guid><description>연산자는 프로그래밍의 기본적인 구성 요소로, 데이터를 조작하고 계산하는 데 사용된다.</description></item><item><title>PEP</title><link>https://buenhyden.github.io/posts/programming-languages/python/pep/</link><pubDate>Wed, 23 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/pep/</guid><description>Python Enhancement Proposal의 약자로 파이썬 커뮤니티에 새로운 기능을 알리거나 설명하는 설계 문서.</description></item><item><title>Poetry</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/</guid><description>Python 프로젝트의 의존성 관리와 패키징을 위한 도구---</description></item><item><title>Poetry Configuration</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-configuration/</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-configuration/</guid><description>`config` 명령어나 `config.toml` 파일을 통해 설정할 수 있다.</description></item><item><title>Poetry Libraries</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-libraries/</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-libraries/</guid><description>Poetry는 파이썬 라이브러리를 효율적으로 관리하고 배포할 수 있도록 지원하는 도구로 라이브러리를 설치 가능하게 만들기 위해 다음과 같은 절차를 따를 수 있다.</description></item><item><title>Poetry Managing dependencies</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-managing-dependencies/</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-managing-dependencies/</guid><description>Poetry는 의존성을 효율적으로 관리하기 위해 다양한 기능을 제공한다.</description></item><item><title>Poetry Usage</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-usage/</link><pubDate>Tue, 22 Oct 2024 13:46:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/poetry/poetry-usage/</guid><description>Python 프로젝트의 의존성 관리와 패키징을 위한 도구</description></item><item><title>setup.cfg</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg/</link><pubDate>Mon, 21 Oct 2024 14:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/setup.cfg/</guid><description>파이썬 프로젝트의 설정을 관리하는 구성 파일</description></item><item><title>Python GIL</title><link>https://buenhyden.github.io/posts/programming-languages/python/python-gil/</link><pubDate>Mon, 21 Oct 2024 08:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/python-gil/</guid><description>Python 객체에 대한 접근을 제어하는 뮤텍스(mutex)로, 한 번에 하나의 스레드만 Python 바이트코드를 실행할 수 있도록 보장</description></item><item><title>The pyproject.toml file</title><link>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/the-pyproject.toml-file/</link><pubDate>Mon, 21 Oct 2024 06:54:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/programming-languages/python/package-and-project-management/configuration/the-pyproject.toml-file/</guid><description>Python 프로젝트의 구성 정보와 빌드 시스템 요구 사항을 정의하는 표준화된 구성 파일</description></item></channel></rss>