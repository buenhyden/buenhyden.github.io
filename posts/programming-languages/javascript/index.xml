<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Javascript on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/programming-languages/javascript/</link>
    <description>Recent content in Javascript on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Mar 2025 09:46:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/programming-languages/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ECMAScript</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/ecmascript/</link>
      <pubDate>Wed, 04 Dec 2024 17:43:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/ecmascript/</guid>
      <description>ECMAScript는 자바스크립트의 표준 규격으로, **Ecma International**이 ECMA-262 기술 규격을 통해 정의한 스크립트 프로그래밍 언어이다.</description>
    </item>
    <item>
      <title>Javascript vs. Python</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-vs-python/</link>
      <pubDate>Sun, 22 Dec 2024 04:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-vs-python/</guid>
      <description>&lt;h2 id=&#34;javascript-vs-python&#34;&gt;Javascript vs. Python&lt;/h2&gt;
&lt;p&gt;JavaScript와 Python은 현대 프로그래밍 세계에서 가장 인기 있는 두 언어이다.&lt;br&gt;
두 언어 모두 높은 수준의 프로그래밍 언어이지만, 설계 철학, 사용 사례, 문법 등에서 중요한 차이점이 있다.&lt;/p&gt;
&lt;p&gt;JavaScript와 Python은 각각 고유한 강점과 약점을 가진 강력한 프로그래밍 언어이다.&lt;br&gt;
JavaScript는 웹 개발에서 독보적인 위치를 차지하고 있으며, 비동기 프로그래밍 모델과 빠른 실행 속도가 특징이다. Python은 가독성이 뛰어나고 데이터 과학, 기계 학습, 자동화 분야에서 뛰어난 라이브러리 지원을 제공한다.&lt;/p&gt;
&lt;h3 id=&#34;역사와-배경&#34;&gt;역사와 배경&lt;/h3&gt;
&lt;h4 id=&#34;javascript&#34;&gt;JavaScript&lt;/h4&gt;
&lt;p&gt;JavaScript는 1995년 Netscape의 Brendan Eich에 의해 웹 브라우저용 스크립팅 언어로 개발되었다.&lt;br&gt;
처음에는 &amp;lsquo;Mocha&amp;rsquo;라고 불렸으며, 나중에 &amp;lsquo;LiveScript&amp;rsquo;로 이름이 바뀌었고, 마지막으로 마케팅 목적으로 &amp;lsquo;JavaScript&amp;rsquo;라는 이름이 되었다 (Java와의 관련성은 거의 없다).&lt;br&gt;
JavaScript는 웹 페이지에 상호작용성을 추가하기 위해 만들어졌으며, 시간이 지남에 따라 Node.js와 같은 플랫폼 덕분에 서버 측 개발로 확장되었다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Javascript Engines</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-engines/</link>
      <pubDate>Wed, 05 Mar 2025 09:46:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/javascript-engines/</guid>
      <description>&lt;h2 id=&#34;javascript-engines&#34;&gt;Javascript Engines&lt;/h2&gt;
&lt;p&gt;JavaScript 엔진은 JavaScript 코드를 이해하고 실행하는 프로그램이다.&lt;br&gt;
웹 브라우저나 Node.js와 같은 환경에서 JavaScript 코드를 해석하고 실행하는 핵심 요소이다.&lt;br&gt;
JavaScript는 원래 인터프리터 언어로 설계되었지만, 현대의 JavaScript 엔진들은 성능 향상을 위해 다양한 최적화 기술을 사용한다.&lt;/p&gt;
&lt;p&gt;JavaScript 엔진의 주요 역할:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JavaScript 코드를 읽고 구문 분석(파싱)&lt;/li&gt;
&lt;li&gt;코드를 기계어 또는 중간 표현으로 변환&lt;/li&gt;
&lt;li&gt;코드 실행&lt;/li&gt;
&lt;li&gt;메모리 관리 (가비지 컬렉션 포함)&lt;/li&gt;
&lt;li&gt;최적화 수행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JavaScript 엔진은 현대 웹의 핵심 구성 요소로, 웹 브라우저와 서버 측 애플리케이션 모두에서 JavaScript 코드를 실행하는 데 필수적이다. Google의 V8, Mozilla의 SpiderMonkey, Apple의 JavaScriptCore와 같은 주요 엔진들은 계속해서 발전하며, 성능을 향상시키고 새로운 언어 기능을 지원하고 있다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
