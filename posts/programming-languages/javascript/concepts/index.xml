<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Javascript&#39;s Concepts on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/</link>
    <description>Recent content in Javascript&#39;s Concepts on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.143.0</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Nov 2024 14:54:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/programming-languages/javascript/concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>프로미스(Promise)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/promise/</link>
      <pubDate>Thu, 21 Nov 2024 14:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/promise/</guid>
      <description>자바스크립트에서 비동기 처리를 위해 사용되는 객체</description>
    </item>
    <item>
      <title>Event Loop</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/event-loop/</link>
      <pubDate>Thu, 21 Nov 2024 12:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/event-loop/</guid>
      <description>이벤트 루프(Event Loop)는 자바스크립트의 비동기 작업을 관리하고 실행하는 핵심 메커니즘으로, 싱글 스레드 언어인 자바스크립트가 비동기적으로 동작할 수 있게 해주는 중요한 요소이다.</description>
    </item>
    <item>
      <title>jsdoc</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/jsdoc/</link>
      <pubDate>Thu, 21 Nov 2024 11:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/jsdoc/</guid>
      <description>JSDoc은 JavaScript 소스 코드에 대한 API 문서를 생성하기 위한 마크업 언어.</description>
    </item>
    <item>
      <title>Keywords</title>
      <link>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/keywords/</link>
      <pubDate>Thu, 21 Nov 2024 03:18:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/javascript/concepts/keywords/</guid>
      <description>&lt;h2 id=&#34;keywords&#34;&gt;Keywords&lt;/h2&gt;
&lt;p&gt;키워드들은 JavaScript 프로그래밍의 기본 구성 요소이며, ECMAScript 표준의 일부이다.&lt;br&gt;
각 키워드는 특정한 프로그래밍 목적을 위해 설계되었으며, 이들을 올바르게 이해하고 사용하는 것이 효과적인 JavaScript 프로그래밍의 기초가 된다.&lt;/p&gt;
&lt;h3 id=&#34;선언-관련-키워드&#34;&gt;선언 관련 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;var&lt;/td&gt;
          &lt;td&gt;변수 선언 (함수 스코프)&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;var name = &amp;quot;John&amp;quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;let&lt;/td&gt;
          &lt;td&gt;변수 선언 (블록 스코프)&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let age = 25;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;const&lt;/td&gt;
          &lt;td&gt;상수 선언 (재할당 불가)&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;const PI = 3.14;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;function&lt;/td&gt;
          &lt;td&gt;함수 선언&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;function add(a, b) { return a + b; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;class&lt;/td&gt;
          &lt;td&gt;클래스 선언&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;class Person { constructor() {} }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;조건문-및-반복문-키워드&#34;&gt;조건문 및 반복문 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;if&lt;/td&gt;
          &lt;td&gt;조건문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;if (age &amp;gt; 18) { console.log(&amp;quot;Adult&amp;quot;); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;else&lt;/td&gt;
          &lt;td&gt;if문의 대안 조건&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;else { console.log(&amp;quot;Minor&amp;quot;); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;switch&lt;/td&gt;
          &lt;td&gt;다중 분기 조건문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;switch (value) { case 1: break; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;case&lt;/td&gt;
          &lt;td&gt;switch문의 각 경우&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;case &amp;quot;A&amp;quot;: return &amp;quot;Excellent&amp;quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;default&lt;/td&gt;
          &lt;td&gt;switch문의 기본 경우&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;default: return &amp;quot;Invalid&amp;quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;for&lt;/td&gt;
          &lt;td&gt;반복문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;for (let i = 0; i &amp;lt; 5; i++) {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;while&lt;/td&gt;
          &lt;td&gt;조건기반 반복문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;while (count &amp;lt; 10) {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;do&lt;/td&gt;
          &lt;td&gt;최소 한번 실행되는 반복문&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;do { count++; } while (count &amp;lt; 5);&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;제어-흐름-키워드&#34;&gt;제어 흐름 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;break&lt;/td&gt;
          &lt;td&gt;반복문/switch문 탈출&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;break;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;continue&lt;/td&gt;
          &lt;td&gt;현재 반복 건너뛰기&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;continue;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;return&lt;/td&gt;
          &lt;td&gt;함수에서 값 반환&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;return result;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;throw&lt;/td&gt;
          &lt;td&gt;예외 발생&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;throw new Error(&amp;quot;Invalid input&amp;quot;);&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;try&lt;/td&gt;
          &lt;td&gt;예외처리 시도 블록&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;try { riskyOperation(); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;catch&lt;/td&gt;
          &lt;td&gt;예외처리 블록&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;catch (error) { handleError(error); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;finally&lt;/td&gt;
          &lt;td&gt;예외 발생 여부와 관계없이 실행&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;finally { cleanup(); }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;객체-지향-프로그래밍-키워드&#34;&gt;객체 지향 프로그래밍 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;this&lt;/td&gt;
          &lt;td&gt;현재 객체 참조&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;this.name = name;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;super&lt;/td&gt;
          &lt;td&gt;부모 클래스 참조&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;super(name);&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;new&lt;/td&gt;
          &lt;td&gt;객체 생성&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;new Date();&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;extends&lt;/td&gt;
          &lt;td&gt;클래스 상속&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;class Student extends Person {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;static&lt;/td&gt;
          &lt;td&gt;클래스 레벨 멤버 정의&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;static count = 0;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;get&lt;/td&gt;
          &lt;td&gt;getter 메서드 정의&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;get name() { return this._name; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;set&lt;/td&gt;
          &lt;td&gt;setter 메서드 정의&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;set name(value) { this._name = value; }&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;모듈-및-패키지-키워드&#34;&gt;모듈 및 패키지 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;import&lt;/td&gt;
          &lt;td&gt;모듈 가져오기&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;import { useState } from &#39;react&#39;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;export&lt;/td&gt;
          &lt;td&gt;모듈 내보내기&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;export default class MyComponent {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;from&lt;/td&gt;
          &lt;td&gt;모듈 출처 지정&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;import React from &#39;react&#39;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;as&lt;/td&gt;
          &lt;td&gt;모듈 별칭 지정&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;import * as utils from &#39;./utils&#39;;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;기타-키워드&#34;&gt;기타 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;typeof&lt;/td&gt;
          &lt;td&gt;데이터 타입 확인&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;typeof value === &amp;quot;string&amp;quot;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;instanceof&lt;/td&gt;
          &lt;td&gt;객체 타입 확인&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;obj instanceof Array&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;void&lt;/td&gt;
          &lt;td&gt;undefined 값 반환&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;void function() {}&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;delete&lt;/td&gt;
          &lt;td&gt;객체 프로퍼티 삭제&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;delete object.property&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;in&lt;/td&gt;
          &lt;td&gt;프로퍼티 존재 확인&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;name&amp;quot; in object&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;debugger&lt;/td&gt;
          &lt;td&gt;디버깅 중단점&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;debugger;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;예약된-리터럴&#34;&gt;예약된 리터럴&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;true&lt;/td&gt;
          &lt;td&gt;논리 참 값&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let isActive = true;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;false&lt;/td&gt;
          &lt;td&gt;논리 거짓 값&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let isDisabled = false;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;null&lt;/td&gt;
          &lt;td&gt;값이 없음을 나타내는 객체&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let value = null;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;undefined&lt;/td&gt;
          &lt;td&gt;정의되지 않은 값&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;let value = undefined;&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;엄격-모드-키워드&#34;&gt;엄격 모드 키워드&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;키워드&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
          &lt;th&gt;예시&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;ldquo;use strict&amp;rdquo;&lt;/td&gt;
          &lt;td&gt;엄격 모드 선언&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;&amp;quot;use strict&amp;quot;; // 코드의 시작 부분&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참고-및-출처&#34;&gt;참고 및 출처&lt;/h2&gt;</description>
    </item>
  </channel>
</rss>
