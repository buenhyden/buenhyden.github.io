<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Concepts on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/programming-languages/concepts/</link>
    <description>Recent content in Concepts on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Oct 2024 15:08:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/programming-languages/concepts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exception Handling</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/exception-handling/</link>
      <pubDate>Sun, 06 Oct 2024 15:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/exception-handling/</guid>
      <description>예외 처리(Exception Handling)는 프로그램 실행 중 발생할 수 있는 예기치 못한 상황을 관리하는 중요한 프로그래밍 개념이다.</description>
    </item>
    <item>
      <title>조건문 (Conditional Statements)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/conditional-statements/</link>
      <pubDate>Sun, 06 Oct 2024 15:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/conditional-statements/</guid>
      <description>조건문(Conditional Statements)은 프로그램의 흐름을 제어하는 중요한 구조이다.</description>
    </item>
    <item>
      <title>반복문(Iteration)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/iteration/</link>
      <pubDate>Sun, 06 Oct 2024 15:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/iteration/</guid>
      <description>특정 코드 블록을 여러 번 실행하는 제어 구조이다.</description>
    </item>
    <item>
      <title>재귀 (Recursion)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/recursion/</link>
      <pubDate>Sun, 06 Oct 2024 15:05:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/recursion/</guid>
      <description>재귀(Recursion)는 컴퓨터 프로그래밍에서 함수가 자기 자신을 호출하여 문제를 해결하는 방식으로, 큰 문제를 동일한 형태의 작은 문제로 나누어 해결하는 방법이다.</description>
    </item>
    <item>
      <title>가비지 컬렉션 (Garbage Collection, GC)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/garbage-collection/</link>
      <pubDate>Sun, 06 Oct 2024 10:19:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/garbage-collection/</guid>
      <description>프로그래밍 언어의 메모리 관리 기법 중 하나로, 프로그램이 동적으로 할당했던 메모리 영역 중에서 더 이상 사용하지 않는 영역을 자동으로 찾아내어 해제하는 기능</description>
    </item>
    <item>
      <title>인터프리터(Interpreter)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/interpreter/</link>
      <pubDate>Sun, 06 Oct 2024 05:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/interpreter/</guid>
      <description>프로그래밍 언어의 소스 코드를 직접 실행하는 프로그램 또는 환경</description>
    </item>
    <item>
      <title>컴파일러(Compiler)</title>
      <link>https://buenhyden.github.io/posts/programming-languages/concepts/compiler/</link>
      <pubDate>Sun, 06 Oct 2024 05:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/programming-languages/concepts/compiler/</guid>
      <description>우리가 작성한 프로그래밍 언어(고급 언어)를 컴퓨터가 이해할 수 있는 기계어(저급 언어)로 번역해주는 특별한 프로그램</description>
    </item>
  </channel>
</rss>
