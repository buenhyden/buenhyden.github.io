<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – OSI 7 Layers - 3. Network Layer</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/</link><description>Recent content in OSI 7 Layers - 3. Network Layer on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 25 Sep 2024 07:17:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/index.xml" rel="self" type="application/rss+xml"/><item><title>Network Hop</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/network-hop/</link><pubDate>Tue, 14 Jan 2025 09:19:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/network-hop/</guid><description>
&lt;h2>Network Hop&lt;/h2>&lt;p>네트워크 홉(Network Hop)은 데이터 패킷이 출발지에서 목적지로 이동하는 과정에서 거치는 네트워크 장비(주로 라우터)의 횟수를 의미한다.&lt;/p>
&lt;p>홉은 데이터 패킷이 한 네트워크 지점에서 다음 지점으로 이동할 때마다 발생합니다.&lt;/p>
&lt;p>각 홉은 패킷이 목적지에 도달하기 위해 거치는 중간 단계를 나타낸다.
주요 역할은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>경로 결정: 각 홉에서 라우터는 패킷의 다음 목적지를 결정한다.&lt;/li>
&lt;li>네트워크 성능 측정: 홉 수는 네트워크의 복잡성과 데이터 전송 경로의 길이를 나타낸다.&lt;/li>
&lt;li>패킷 전달: 각 홉은 패킷을 다음 네트워크 장비로 전달하는 역할을 한다.&lt;/li>
&lt;/ol>
&lt;h3>홉 카운트(Hop Count)&lt;/h3>&lt;p>홉 카운트는 패킷이 출발지에서 목적지까지 거치는 홉의 총 개수를 의미한다.
이는 네트워크 경로의 길이를 측정하는 중요한 지표이다.&lt;/p>
&lt;ol>
&lt;li>TTL(Time to Live): IPv4에서 사용되며, 패킷이 네트워크에서 무한히 순환하는 것을 방지한다.&lt;/li>
&lt;li>Hop Limit: IPv6에서 TTL과 동일한 역할을 한다.&lt;/li>
&lt;/ol>
&lt;h3>홉과 네트워크 성능&lt;/h3>&lt;p>홉 수는 네트워크 성능에 직접적인 영향을 미친다:&lt;/p>
&lt;ol>
&lt;li>지연 시간: 홉 수가 증가할수록 일반적으로 지연 시간도 증가한다.&lt;/li>
&lt;li>패킷 손실: 홉 수가 많을수록 패킷 손실의 가능성이 높아진다.&lt;/li>
&lt;li>대역폭: 각 홉에서 대역폭이 다를 수 있어, 전체 경로의 대역폭에 영향을 준다.&lt;/li>
&lt;/ol>
&lt;h3>홉 분석 도구&lt;/h3>&lt;p>네트워크 관리자들은 다음과 같은 도구를 사용하여 홉을 분석한다:&lt;/p>
&lt;ol>
&lt;li>traceroute(Linux/macOS) 또는 tracert(Windows): 패킷이 목적지까지 거치는 경로와 각 홉의 응답 시간을 보여준다.&lt;/li>
&lt;li>ping: 특정 목적지까지의 왕복 시간을 측정한다.&lt;/li>
&lt;/ol>
&lt;h3>홉 최적화 전략&lt;/h3>&lt;p>네트워크 성능을 향상시키기 위해 다음과 같은 전략을 사용한다:&lt;/p>
&lt;ol>
&lt;li>경로 최적화: 라우팅 프로토콜을 통해 최적의 경로를 선택한다.&lt;/li>
&lt;li>콘텐츠 전송 네트워크(CDN) 사용: 사용자와 가까운 서버에 콘텐츠를 캐싱하여 홉 수를 줄인다.&lt;/li>
&lt;li>네트워크 토폴로지 개선: 효율적인 네트워크 구조를 설계하여 불필요한 홉을 줄인다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>프래그먼테이션 (Fragmentation)</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/fragmentation/</link><pubDate>Sun, 05 Jan 2025 02:40:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/fragmentation/</guid><description>
&lt;h2>프래그먼테이션 (Fragmentation)&lt;/h2>&lt;p>Fragmentation은 큰 데이터 패킷을 네트워크의 최대 전송 단위(Maximum Transmission Unit, MTU)보다 작은 조각으로 나누는 과정이다.&lt;/p>
&lt;p>이는 다음과 같은 목적을 가진다:&lt;/p>
&lt;ol>
&lt;li>다양한 MTU를 가진 네트워크 간의 통신 가능&lt;/li>
&lt;li>네트워크 성능 향상&lt;/li>
&lt;li>대역폭 활용도 개선&lt;/li>
&lt;/ol>
&lt;h3>프래그먼테이션이 필요한 이유&lt;/h3>&lt;p>네트워크마다 처리할 수 있는 최대 패킷 크기가 다르다.&lt;br>
이를 MTU(Maximum Transmission Unit)라고 한다.&lt;br>
예를 들어:&lt;/p>
&lt;ul>
&lt;li>이더넷의 MTU: 1500 바이트&lt;/li>
&lt;li>PPP의 MTU: 576 바이트&lt;/li>
&lt;li>Wi-Fi의 MTU: 2304 바이트&lt;br>
만약 4000 바이트 크기의 데이터를 MTU가 1500 바이트인 이더넷 네트워크로 전송하려면, 이 데이터는 반드시 더 작은 조각들로 나뉘어야 한다.&lt;/li>
&lt;/ul>
&lt;h3>Fragmentation의 작동 방식&lt;/h3>&lt;ol>
&lt;li>
&lt;p>프래그먼트 생성 원본 패킷은 여러 개의 작은 프래그먼트로 나뉜다.&lt;br>
각 프래그먼트는:&lt;/p>
&lt;ul>
&lt;li>원본 패킷의 헤더 정보를 포함&lt;/li>
&lt;li>고유한 프래그먼트 오프셋 값을 가짐&lt;/li>
&lt;li>More Fragments(MF) 플래그로 추가 프래그먼트 여부를 표시&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>프래그먼트 전송 각 프래그먼트는 독립적으로 목적지로 전송된다.&lt;br>
이때:&lt;/p>
&lt;ul>
&lt;li>각각 다른 경로로 전송될 수 있음&lt;/li>
&lt;li>순서가 뒤바뀔 수 있음&lt;/li>
&lt;li>일부가 손실될 수 있음&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>재조립 과정 목적지에서는 다음과 같은 방식으로 프래그먼트들을 재조립한다:&lt;/p>
&lt;ul>
&lt;li>프래그먼트 오프셋을 이용해 올바른 순서 확인&lt;/li>
&lt;li>MF 플래그로 모든 프래그먼트 수신 여부 확인&lt;/li>
&lt;li>타임아웃을 통해 손실된 프래그먼트 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h4>구체적인 예시를 통한 이해&lt;/h4>&lt;p>4000 바이트 크기의 데이터 패킷이 1500 바이트 MTU 네트워크를 통과해야 하는 경우:&lt;/p>
&lt;ul>
&lt;li>1번 프래그먼트:
&lt;ul>
&lt;li>크기: 1500 바이트&lt;/li>
&lt;li>오프셋: 0&lt;/li>
&lt;li>MF 플래그: 1 (더 있음)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>2번 프래그먼트:
&lt;ul>
&lt;li>크기: 1500 바이트&lt;/li>
&lt;li>오프셋: 1480&lt;/li>
&lt;li>MF 플래그: 1 (더 있음)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>3번 프래그먼트:
&lt;ul>
&lt;li>크기: 1000 바이트&lt;/li>
&lt;li>오프셋: 2960&lt;/li>
&lt;li>MF 플래그: 0 (마지막)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>Fragmentation의 주요 구성 요소&lt;/h3>&lt;ol>
&lt;li>Identification Field (16 비트): 같은 원본 패킷의 조각들을 식별한다.&lt;/li>
&lt;li>Fragment Offset Field (13 비트): 조각의 순서를 나타낸다.&lt;/li>
&lt;li>More Fragments Field (MF): 더 많은 조각이 있는지 표시한다.&lt;/li>
&lt;li>Don&amp;rsquo;t Fragment Field (DF): 패킷의 분할을 금지할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>Fragmentation의 장단점&lt;/h3>&lt;p>장점:&lt;/p>
&lt;ul>
&lt;li>다양한 네트워크 환경에서의 통신 가능&lt;/li>
&lt;li>네트워크 리소스의 효율적 사용&lt;/li>
&lt;/ul>
&lt;p>단점:&lt;/p>
&lt;ul>
&lt;li>재조립 과정에서의 복잡성 증가&lt;/li>
&lt;li>패킷 손실 시 전체 데이터의 재전송 필요&lt;/li>
&lt;li>보안 문제 발생 가능성 (일부 방화벽에서 문제 발생)&lt;/li>
&lt;/ul>
&lt;h3>IPv6에서의 프래그먼테이션&lt;/h3>&lt;p>IPv6에서는 중간 라우터에서의 프래그먼테이션을 금지하고, 대신:&lt;/p>
&lt;ul>
&lt;li>Path MTU Discovery를 통해 적절한 패킷 크기 결정&lt;/li>
&lt;li>출발지에서만 프래그먼테이션 수행&lt;/li>
&lt;li>더 효율적인 전송 보장&lt;/li>
&lt;/ul>
&lt;h3>Fragmentation 회피 기술&lt;/h3>&lt;ol>
&lt;li>Path MTU Discovery: 경로상의 최소 MTU를 찾아 패킷 크기를 조절한다.&lt;/li>
&lt;li>TCP MSS (Maximum Segment Size) 조정: TCP 세그먼트 크기를 MTU에 맞게 조절한다.&lt;/li>
&lt;/ol>
&lt;h3>실제 응용 사례&lt;/h3>&lt;p>파일 전송을 예로 들어보면:&lt;br>
10MB 크기의 파일을 전송할 경우:&lt;/p>
&lt;ol>
&lt;li>응용 프로그램 계층: 파일을 세그먼트로 분할&lt;/li>
&lt;li>IP 계층: 필요한 경우 추가 프래그먼테이션 수행&lt;/li>
&lt;li>네트워크: MTU에 맞는 크기로 전송&lt;/li>
&lt;li>수신측: 순차적 재조립 후 파일 복원&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>hop</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/hop/</link><pubDate>Fri, 06 Dec 2024 10:26:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/hop/</guid><description>
&lt;h2>Hop&lt;/h2>&lt;p>네트워크 계층에서 hop은 데이터 패킷이 출발지에서 목적지로 이동하는 과정에서 거치는 각각의 네트워크 장치를 의미한다.&lt;br>
Hop은 데이터 패킷이 한 네트워크 세그먼트에서 다음 세그먼트로 이동하는 것을 나타내며, 주로 라우터나 게이트웨이와 같은 네트워크 장치를 통과할 때 발생한다.&lt;/p>
&lt;p>Hop의 개념은 네트워크 통신의 효율성과 성능을 이해하는 데 중요한 역할을 하며, 특히 실시간 애플리케이션에서는 hop 수를 최소화하여 지연시간을 줄이는 것이 중요하다.&lt;/p>
&lt;h3>역할&lt;/h3>&lt;ul>
&lt;li>데이터 패킷의 경로를 결정하고 다음 목적지로 전달한다.&lt;/li>
&lt;li>네트워크 간 통신을 가능하게 하는 중요한 요소이다.&lt;/li>
&lt;/ul>
&lt;h3>Hop Count&lt;/h3>&lt;ul>
&lt;li>출발지에서 목적지까지 패킷이 거치는 hop의 수를 나타낸다.&lt;/li>
&lt;li>네트워크 거리를 측정하는 기본적인 방법이다.&lt;/li>
&lt;li>일부 라우팅 프로토콜(예: RIP)에서는 hop count를 유일한 메트릭으로 사용한다.&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;/h3>&lt;ul>
&lt;li>각 hop마다 지연시간이 발생하므로, hop 수가 많을수록 실시간 성능이 저하될 수 있다.&lt;/li>
&lt;li>TTL(Time To Live) 필드를 통해 패킷의 무한 루프를 방지한다.&lt;/li>
&lt;/ul>
&lt;h3>유형&lt;/h3>&lt;ul>
&lt;li>라우터 hop: 서로 다른 네트워크 간의 이동&lt;/li>
&lt;li>스위치 hop: 같은 네트워크 내에서의 이동&lt;/li>
&lt;li>가상 hop: 가상 네트워크에서의 이동&lt;/li>
&lt;/ul>
&lt;h3>진단&lt;/h3>&lt;ul>
&lt;li>ping이나 traceroute 명령어를 사용하여 목적지까지의 hop 수를 확인할 수 있다.&lt;/li>
&lt;li>네트워크 문제 진단이나 라우팅 정확성 확인에 유용하다.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2>&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Packet</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/packet/</link><pubDate>Fri, 06 Dec 2024 10:18:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/packet/</guid><description>
&lt;h2>Packet (패킷, 네트워크 패킷)&lt;/h2>&lt;p>패킷은 네트워크에서 데이터를 주고받을 때 사용되는 형식화된 데이터 블록이다.&lt;/p>
&lt;p>주요 목적은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>효율적인 데이터 전송&lt;/li>
&lt;li>네트워크 대역폭의 효율적 사용&lt;/li>
&lt;li>오류 검출 및 복구 용이성&lt;/li>
&lt;li>네트워크 혼잡 방지&lt;/li>
&lt;/ol>
&lt;h3>패킷을 사용하는 이유는?&lt;/h3>&lt;ul>
&lt;li>패킷이 모두 대상에 도착하는 한 동일한 대상에 대해 서로 다른 네트워크 경로를 사용할 수 있음을 의미한다.
&lt;ul>
&lt;li>특정 프로토콜에서 패킷은 각 패킷이 다른 경로를 사용하여 도착하더라도 올바른 순서로 최종 목적지에 도착해야 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>여러 컴퓨터의 패킷이 기본적으로 임의의 순서로 동일한 선로를 통해 이동할 수 있다.&lt;/li>
&lt;li>동일한 네트워킹 장비를 통해 동시에 여러 연결을 수행할 수 있다. 그 결과로 수십억 개의 장치가 인터넷에서 동시에 데이터를 교환할 수 있다.&lt;/li>
&lt;/ul>
&lt;h3>패킷의 구조&lt;/h3>&lt;p>패킷은 일반적으로 세 부분으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>헤더(Header): 패킷에 대한 제어 정보를 포함
&lt;ul>
&lt;li>출발지 및 목적지 IP 주소&lt;/li>
&lt;li>프로토콜 유형&lt;/li>
&lt;li>패킷 번호&lt;/li>
&lt;li>TTL (Time To Live, 패킷의 수명)&lt;/li>
&lt;li>체크섬 (오류 검출용)&lt;/li>
&lt;li>기타 라우팅 정보&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>페이로드(Payload): 실제 전송되는 데이터&lt;/li>
&lt;li>트레일러(Trailer): 패킷의 끝을 나타내며, 오류 검출 코드 포함&lt;/li>
&lt;/ol>
&lt;h3>패킷의 크기&lt;/h3>&lt;p>일반적인 패킷의 최대 크기는 네트워크의 MTU(Maximum Transmission Unit)에 따라 결정된다.&lt;/p>
&lt;h3>패킷 전송 과정&lt;/h3>&lt;ol>
&lt;li>데이터 분할: 큰 데이터를 작은 패킷으로 나눈다.&lt;/li>
&lt;li>헤더 추가: 각 패킷에 헤더 정보를 추가한다.&lt;/li>
&lt;li>전송: 패킷들이 네트워크를 통해 전송된다.&lt;/li>
&lt;li>라우팅: 각 패킷은 최적의 경로를 통해 목적지로 전송된다.&lt;/li>
&lt;li>수신 및 재조립: 목적지에서 패킷을 수신하고 원래의 데이터로 재조립한다.&lt;/li>
&lt;/ol>
&lt;h4>패킷 전송의 예시&lt;/h4>&lt;p>1GB 크기의 파일을 전송하는 경우:&lt;/p>
&lt;ol>
&lt;li>파일이 수많은 패킷으로 분할됨&lt;/li>
&lt;li>각 패킷은 최대 1500바이트(이더넷 기준)&lt;/li>
&lt;li>약 700,000개의 패킷이 생성됨&lt;/li>
&lt;li>각 패킷이 독립적으로 전송&lt;/li>
&lt;li>목적지에서 재조립&lt;/li>
&lt;/ol>
&lt;h3>패킷 교환 방식&lt;/h3>&lt;ol>
&lt;li>가상 회선 방식: 패킷 전송 전에 논리적 경로를 설정하는 연결형 방식&lt;/li>
&lt;li>데이터그램 방식: 각 패킷이 독립적으로 전송되는 비연결형 방식&lt;/li>
&lt;/ol>
&lt;h3>패킷의 장단점&lt;/h3>&lt;p>패킷의 장점:&lt;/p>
&lt;ol>
&lt;li>효율적인 네트워크 사용
&lt;ul>
&lt;li>여러 사용자가 동시에 네트워크를 공유할 수 있음&lt;/li>
&lt;li>대역폭을 효율적으로 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>신뢰성 향상
&lt;ul>
&lt;li>패킷 손실 시 해당 패킷만 재전송&lt;/li>
&lt;li>오류 검출과 수정이 용이&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>유연한 라우팅
&lt;ul>
&lt;li>각 패킷이 최적의 경로로 전송 가능&lt;/li>
&lt;li>네트워크 혼잡을 피할 수 있음&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>단점:&lt;/p>
&lt;ul>
&lt;li>패킷 순서 보장 필요&lt;/li>
&lt;li>헤더로 인한 오버헤드 발생&lt;/li>
&lt;li>복잡한 프로토콜 구현 필요&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item><item><title>Routing</title><link>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/routing/</link><pubDate>Mon, 14 Oct 2024 10:18:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/osi-7-layers/network-layer/routing/</guid><description>
&lt;h2>Routing&lt;/h2>&lt;p>데이터 패킷이 출발지에서 목적지까지 가장 효율적인 경로로 전달되도록 하는 과정.&lt;br>
네트워크 계층(3계층)에서 이루어지는 핵심 기능으로, 라우터가 패킷의 목적지 IP 주소를 확인하고 최적의 경로를 결정한다.&lt;/p>
&lt;h3>주요 특징&lt;/h3>&lt;ol>
&lt;li>경로 결정: 라우팅 테이블을 참조하여 최적의 경로를 선택한다.&lt;/li>
&lt;li>네트워크 연결: 서로 다른 네트워크를 연결하여 통신을 가능하게 한다.&lt;/li>
&lt;li>패킷 전달: 선택된 경로를 통해 패킷을 다음 홉으로 전달한다.&lt;/li>
&lt;/ol>
&lt;h3>중요성&lt;/h3>&lt;ul>
&lt;li>효율적인 데이터 전송을 가능하게 한다.&lt;/li>
&lt;li>네트워크의 안정성과 확장성을 향상시킨다.&lt;/li>
&lt;li>트래픽 관리와 로드 밸런싱에 기여한다.&lt;/li>
&lt;/ul>
&lt;h3>라우팅 방식&lt;/h3>&lt;ol>
&lt;li>
&lt;p>정적 라우팅: 관리자가 수동으로 라우팅 테이블을 구성한다.&lt;/p>
&lt;ul>
&lt;li>장점: 간단하고 보안성이 높음&lt;/li>
&lt;li>단점: 네트워크 변화에 대응이 어려움&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>동적 라우팅: 라우팅 프로토콜을 사용하여 자동으로 경로를 업데이트한다.&lt;/p>
&lt;ul>
&lt;li>장점: 네트워크 변화에 유연하게 대응&lt;/li>
&lt;li>단점: 라우터에 부하를 줄 수 있음&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>라우팅의 핵심 요소들&lt;/h3>&lt;ol>
&lt;li>
&lt;p>라우팅 테이블&lt;br>
라우터가 보유한 경로 정보 데이터베이스.&lt;br>
다음과 같은 정보를 포함한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>목적지 네트워크 | 다음 홉(Next Hop) | 인터페이스 | 메트릭(비용)
192.168.1.0/24 | 10.0.0.1 | eth0 | 10
172.16.0.0/16 | 10.0.0.2 | eth1 | 20&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>라우팅 프로토콜&lt;br>
라우터들이 서로 경로 정보를 교환하는 방식을 정의한다.&lt;br>
주요 프로토콜은 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>내부 게이트웨이 프로토콜(IGP):&lt;/li>
&lt;li>RIP (Routing Information Protocol)
&lt;ul>
&lt;li>홉 카운트 기반의 간단한 프로토콜&lt;/li>
&lt;li>최대 15홉까지만 지원&lt;/li>
&lt;li>소규모 네트워크에 적합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OSPF (Open Shortest Path First)
&lt;ul>
&lt;li>링크 상태 기반 프로토콜&lt;/li>
&lt;li>Dijkstra 알고리즘 사용&lt;/li>
&lt;li>대규모 네트워크에 적합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>외부 게이트웨이 프로토콜(EGP):
&lt;ul>
&lt;li>BGP (Border Gateway Protocol)
&lt;ul>
&lt;li>인터넷의 기반이 되는 프로토콜&lt;/li>
&lt;li>자율 시스템(AS) 간의 라우팅&lt;/li>
&lt;li>정책 기반 라우팅 지원&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>라우팅 알고리즘의 작동 방식&lt;/h3>&lt;ol>
&lt;li>
&lt;p>거리 벡터 알고리즘&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">distance_vector_update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">neighbors&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">destination&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">all_networks&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">min_cost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;inf&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">best_next_hop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">neighbor&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">neighbors&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">neighbor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">distance_to&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">destination&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">link_cost&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">neighbor&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">cost&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">min_cost&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">min_cost&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cost&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">best_next_hop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">neighbor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">routing_table&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">destination&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">best_next_hop&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">min_cost&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>링크 상태 알고리즘&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">dijkstra_shortest_path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">graph&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">distances&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;inf&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">graph&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">distances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pq&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">source&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">previous&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">None&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">graph&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">pq&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_distance&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">current_node&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">heapq&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">heappop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pq&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">current_distance&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">distances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">current_node&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">neighbor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">weight&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">graph&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">current_node&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">items&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">distance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">current_distance&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">weight&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">distance&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">distances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">neighbor&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">distances&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">neighbor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">distance&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">previous&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">neighbor&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">current_node&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">heapq&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">heappush&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pq&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">distance&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">neighbor&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">distances&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">previous&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>라우팅의 고급 개념들&lt;/h3>&lt;ol>
&lt;li>
&lt;p>정책 기반 라우팅&lt;br>
특정 조건에 따라 다른 라우팅 결정을 내리는 방식:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">policy_based_routing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">policies&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">policy&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">policies&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">matches_policy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">policy&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">policy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_route&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">default_route&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>QoS 라우팅&lt;br>
서비스 품질을 고려한 라우팅:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">qos_routing&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">network_state&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">packet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">is_realtime&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">find_lowest_latency_path&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">packet&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">requires_bandwidth&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">find_highest_bandwidth_path&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">find_default_path&lt;/span>&lt;span class="p">()&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>라우팅의 실제 구현 사례&lt;/h3>&lt;ol>
&lt;li>
&lt;p>엔터프라이즈 네트워크&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># OSPF 구성 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span> &lt;span class="n">ospf&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network&lt;/span> &lt;span class="mf">192.168.1.0&lt;/span> &lt;span class="mf">0.0.0.255&lt;/span> &lt;span class="n">area&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">network&lt;/span> &lt;span class="mf">172.16.0.0&lt;/span> &lt;span class="mf">0.0.255.255&lt;/span> &lt;span class="n">area&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">default&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">information&lt;/span> &lt;span class="n">originate&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>인터넷 서비스 제공자(ISP)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># BGP 구성 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">router&lt;/span> &lt;span class="n">bgp&lt;/span> &lt;span class="mi">65000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">neighbor&lt;/span> &lt;span class="mf">200.1.1.1&lt;/span> &lt;span class="n">remote&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">as&lt;/span> &lt;span class="mi">65001&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">neighbor&lt;/span> &lt;span class="mf">200.1.1.1&lt;/span> &lt;span class="n">prefix&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">list&lt;/span> &lt;span class="n">CUSTOMER&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">IN&lt;/span> &lt;span class="ow">in&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">neighbor&lt;/span> &lt;span class="mf">200.1.1.1&lt;/span> &lt;span class="n">prefix&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nb">list&lt;/span> &lt;span class="n">CUSTOMER&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">OUT&lt;/span> &lt;span class="n">out&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>최신 라우팅 트렌드&lt;/h3>&lt;ol>
&lt;li>
&lt;p>SDN(Software-Defined Networking)&lt;br>
중앙 집중식 컨트롤러를 통한 라우팅 제어:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">SDNController&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">update_flow_table&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">switch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">flow_rules&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">rule&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">flow_rules&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add_flow_rule&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rule&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">optimize_network_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">current_state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_network_state&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">optimal_paths&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">calculate_optimal_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_state&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">update_network_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">optimal_paths&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>세그먼트 라우팅&lt;br>
MPLS와 IPv6을 결합한 새로운 라우팅 패러다임:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">segment_routing_encapsulation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">segment_list&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">segment&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">reversed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">segment_list&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">packet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">add_segment_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">packet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">segment&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">packet&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>라우팅 문제 해결과 최적화&lt;/h3>&lt;ol>
&lt;li>
&lt;p>루프 방지&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">prevent_routing_loops&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Split Horizon&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">advertise_routes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">interface&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">routes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_routes&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">r&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">routes&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">r&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">learned_from&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">interface&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Poison Reverse&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">poison_reverse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">router&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bad_route&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">advertise_route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bad_route&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metric&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">INFINITY&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>경로 최적화&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">optimize_routing_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 토폴로지 분석&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">topology&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">analyze_network_topology&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 부하 분산&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">load_balance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculate_load_distribution&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topology&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 경로 최적화&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">optimal_paths&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">calculate_optimal_paths&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">topology&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">load_balance&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">optimal_paths&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;/h2></description></item></channel></rss>