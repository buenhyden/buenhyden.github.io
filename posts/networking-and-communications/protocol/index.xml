<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hyunyoun's Blog – Network Protocol</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/</link><description>Recent content in Network Protocol on hyunyoun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 02 Oct 2024 02:03:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/networking-and-communications/protocol/index.xml" rel="self" type="application/rss+xml"/><item><title>SSH (Secure Shell)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssh/</link><pubDate>Mon, 23 Dec 2024 12:35:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssh/</guid><description>
&lt;h2>SSH (Secure Shell)&lt;span class="hx-absolute -hx-mt-20" id="ssh-secure-shell">&lt;/span>
&lt;a href="#ssh-secure-shell" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>SSH는 네트워크 상의 다른 컴퓨터에 안전하게 접속하기 위한 암호화 네트워크 프로토콜.&lt;br>
1995년 핀란드 헬싱키 공과대학의 타투 일로넨(Tatu Ylönen)이 개발했으며, 당시 빈번하게 발생하던 비밀번호 스니핑 공격에 대응하기 위해 만들어졌다.&lt;br>
기존의 텔넷(Telnet)이나 rsh(Remote Shell)와 같은 비보안 프로토콜을 대체하기 위해 설계되었다.&lt;/p>
&lt;h3>SSH의 주요 특징과 장점&lt;span class="hx-absolute -hx-mt-20" id="ssh의-주요-특징과-장점">&lt;/span>
&lt;a href="#ssh%ec%9d%98-%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95%ea%b3%bc-%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH는 다음과 같은 중요한 특징을 가지고 있다:&lt;/p>
&lt;ol>
&lt;li>강력한 암호화: 통신 내용을 암호화하여 데이터의 기밀성을 보장한다. 현재 SSH-2 버전에서는 AES, 3DES 등의 강력한 암호화 알고리즘을 사용한다.&lt;/li>
&lt;li>인증 메커니즘: 서버와 클라이언트 간의 상호 인증을 제공한다. 비밀번호 기반 인증뿐만 아니라, 공개키 기반의 인증도 지원하여 보다 안전한 인증이 가능하다.&lt;/li>
&lt;li>데이터 무결성: 통신 과정에서 데이터가 변조되지 않았음을 보장한다. MAC(Message Authentication Code)을 사용하여 데이터의 무결성을 검증한다.&lt;/li>
&lt;li>포트 포워딩: 로컬 포트 포워딩과 리모트 포트 포워딩을 통해 다른 프로토콜의 트래픽도 SSH 터널을 통해 안전하게 전송할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>SSH의 동작 방식&lt;span class="hx-absolute -hx-mt-20" id="ssh의-동작-방식">&lt;/span>
&lt;a href="#ssh%ec%9d%98-%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH의 동작 과정은 다음과 같은 단계로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>TCP 연결 수립&lt;br>
먼저 클라이언트와 서버 간에 TCP 연결이 수립된다.&lt;br>
기본적으로 22번 포트를 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프로토콜 버전 교환&lt;br>
클라이언트와 서버가 지원하는 SSH 프로토콜 버전을 교환한다.&lt;br>
현재는 대부분 SSH-2 버전을 사용한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>키 교환&lt;br>
서버와 클라이언트는 세션 키를 생성하기 위한 키 교환 과정을 수행한다.&lt;br>
Diffie-Hellman 키 교환 알고리즘이 주로 사용된다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>인증&lt;br>
사용자 인증이 이루어진다.&lt;br>
다음과 같은 인증 방식이 지원된다:&lt;/p>
&lt;ul>
&lt;li>패스워드 인증&lt;/li>
&lt;li>공개키 인증&lt;/li>
&lt;li>키보드 인터랙티브 인증&lt;/li>
&lt;li>GSSAPI 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>세션 설정&lt;br>
인증이 완료되면 암호화된 채널이 설정되고, 실제 데이터 통신이 시작된다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>SSH의 주요 용도와 활용&lt;span class="hx-absolute -hx-mt-20" id="ssh의-주요-용도와-활용">&lt;/span>
&lt;a href="#ssh%ec%9d%98-%ec%a3%bc%ec%9a%94-%ec%9a%a9%eb%8f%84%ec%99%80-%ed%99%9c%ec%9a%a9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH는 다양한 목적으로 활용된다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>원격 시스템 관리:&lt;/p>
&lt;ul>
&lt;li>서버 원격 접속 및 관리&lt;/li>
&lt;li>시스템 설정 변경&lt;/li>
&lt;li>소프트웨어 설치 및 업데이트&lt;/li>
&lt;li>로그 확인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>파일 전송:&lt;/p>
&lt;ul>
&lt;li>SFTP(SSH File Transfer Protocol)를 통한 안전한 파일 전송&lt;/li>
&lt;li>SCP(Secure Copy)를 이용한 파일 복사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>터널링과 포트 포워딩:&lt;/p>
&lt;ul>
&lt;li>다른 프로토콜의 암호화된 통신&lt;/li>
&lt;li>방화벽 우회&lt;/li>
&lt;li>VPN 대체&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>자동화된 작업:&lt;/p>
&lt;ul>
&lt;li>스크립트를 통한 자동화된 시스템 관리&lt;/li>
&lt;li>배치 작업 실행&lt;/li>
&lt;li>지속적 통합/배포(CI/CD) 파이프라인&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>SSH 보안 강화 방안&lt;span class="hx-absolute -hx-mt-20" id="ssh-보안-강화-방안">&lt;/span>
&lt;a href="#ssh-%eb%b3%b4%ec%95%88-%ea%b0%95%ed%99%94-%eb%b0%a9%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH를 더욱 안전하게 사용하기 위한 주요 보안 설정:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>인증 관련:&lt;/p>
&lt;ul>
&lt;li>공개키 인증 사용 권장&lt;/li>
&lt;li>루트 로그인 비활성화&lt;/li>
&lt;li>강력한 비밀번호 정책 적용&lt;/li>
&lt;li>허용된 사용자만 접속 가능하도록 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>설정 관련:&lt;/p>
&lt;ul>
&lt;li>기본 포트 변경&lt;/li>
&lt;li>프로토콜 버전 2만 허용&lt;/li>
&lt;li>유휴 세션 타임아웃 설정&lt;/li>
&lt;li>로그인 시도 제한&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>암호화 관련:&lt;/p>
&lt;ul>
&lt;li>강력한 암호화 알고리즘 사용&lt;/li>
&lt;li>취약한 암호화 알고리즘 비활성화&lt;/li>
&lt;li>정기적인 키 교체&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>모니터링:&lt;/p>
&lt;ul>
&lt;li>로그 모니터링 강화&lt;/li>
&lt;li>비정상 접속 시도 감시&lt;/li>
&lt;li>정기적인 보안 감사&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>최신 트렌드와 발전 방향&lt;span class="hx-absolute -hx-mt-20" id="최신-트렌드와-발전-방향">&lt;/span>
&lt;a href="#%ec%b5%9c%ec%8b%a0-%ed%8a%b8%eb%a0%8c%eb%93%9c%ec%99%80-%eb%b0%9c%ec%a0%84-%eb%b0%a9%ed%96%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSH는 계속해서 발전하고 있으며, 다음과 같은 트렌드가 있다:&lt;/p>
&lt;ul>
&lt;li>양자 내성 암호화 알고리즘 도입 준비&lt;/li>
&lt;li>클라우드 환경에서의 SSH 관리 자동화&lt;/li>
&lt;li>제로 트러스트 아키텍처와의 통합&lt;/li>
&lt;li>생체 인증 등 새로운 인증 방식 도입&lt;/li>
&lt;li>컨테이너와 마이크로서비스 환경에서의 SSH 활용&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>WebSocket</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/websocket/</link><pubDate>Tue, 08 Oct 2024 04:24:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/websocket/</guid><description>
&lt;h2>WebSocket&lt;span class="hx-absolute -hx-mt-20" id="websocket">&lt;/span>
&lt;a href="#websocket" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;/p>
&lt;p>WebSocket은 HTTP를 기반으로 한 통신 프로토콜이지만, 연결이 수립된 후에는 HTTP와는 독립적으로 동작한다.&lt;br>
HTTP가 단방향 통신만을 지원하는 것과 달리, WebSocket은 전이중(Full-duplex) 통신을 지원한다.&lt;br>
이는 전화 통화처럼 양쪽에서 동시에 데이터를 주고받을 수 있다는 의미이다.&lt;br>
즉, 클라이언트와 서버 간의 지속적인 연결을 통해 양방향, 실시간 통신을 가능하게 하는 컴퓨터 통신 프로토콜이다.&lt;/p>
&lt;p>
&lt;img src="../web-socket.png" alt="Web Socket" loading="lazy" /> _Source: &lt;a href="https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96" target="_blank" rel="noopener">https://blog.stackademic.com/api-101-introduction-imp-of-api-paradigms-8d8e0e463f96&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>전이중 통신: 클라이언트와 서버가 동시에 데이터를 주고받을 수 있습니다.&lt;/li>
&lt;li>지속적 연결: 한 번 연결이 수립되면 계속 유지됩니다.&lt;/li>
&lt;li>실시간 데이터 전송: 서버에서 클라이언트로 요청 없이도 데이터를 전송할 수 있습니다.&lt;/li>
&lt;li>낮은 지연 시간: 연결이 유지되므로 데이터 전송 시 지연이 적습니다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>실시간 통신: 채팅, 게임, 실시간 협업 도구 등에 적합하다.&lt;/li>
&lt;li>효율성: HTTP에 비해 오버헤드가 적어 네트워크 리소스를 효율적으로 사용한다.&lt;/li>
&lt;li>양방향 통신: 서버에서 클라이언트로의 푸시 알림이 가능하다.&lt;/li>
&lt;/ol>
&lt;h3>단점&lt;span class="hx-absolute -hx-mt-20" id="단점">&lt;/span>
&lt;a href="#%eb%8b%a8%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>복잡성: 연결 관리, 오류 처리 등 구현이 복잡할 수 있다.&lt;/li>
&lt;li>브라우저 지원: 일부 구형 브라우저에서는 지원되지 않을 수 있다.&lt;/li>
&lt;li>서버 부하: 많은 동시 연결을 유지해야 하므로 서버 리소스 사용이 증가할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>핸드셰이크:&lt;br>
웹소켓 연결은 HTTP를 통해 시작된다.&lt;br>
클라이언트가 &amp;ldquo;Upgrade: websocket&amp;rdquo; 헤더를 포함한 요청을 보내면, 서버는 이를 수락하여 웹소켓 연결로 전환한다.&lt;/li>
&lt;li>데이터 전송:&lt;br>
연결이 수립된 후, 클라이언트와 서버는 웹소켓 프로토콜을 사용하여 데이터를 주고받는다.&lt;br>
데이터는 프레임 단위로 전송된다.&lt;/li>
&lt;li>연결 종료:&lt;br>
클라이언트나 서버 중 어느 한 쪽이 연결을 종료할 수 있다.&lt;/li>
&lt;/ol>
&lt;h4>연결 수립 과정 (Handshake)&lt;span class="hx-absolute -hx-mt-20" id="연결-수립-과정-handshake">&lt;/span>
&lt;a href="#%ec%97%b0%ea%b2%b0-%ec%88%98%eb%a6%bd-%ea%b3%bc%ec%a0%95-handshake" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>연결 수립 과정(Handshake)에 대해서 조금더 자세히 알아보도록 하자.&lt;/p>
&lt;p>먼저 클라이언트는 특별한 HTTP 요청을 서버에 보낸다. 이를 &amp;ldquo;WebSocket Handshake Request&amp;quot;라고 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-http" data-lang="http">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">GET&lt;/span> &lt;span class="nn">/chat&lt;/span> &lt;span class="kr">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Host&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">server.example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Upgrade&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">websocket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">Upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">dGhlIHNhbXBsZSBub25jZQ==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Origin&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">http://example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Protocol&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">chat, superchat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">13&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>여기서 중요한 헤더들의 의미를 살펴보면:&lt;/p>
&lt;ul>
&lt;li>Upgrade와 Connection 헤더는 HTTP 연결을 WebSocket 연결로 업그레이드하겠다는 의미이다.&lt;/li>
&lt;li>Sec-WebSocket-Key는 연결의 보안을 위한 임의의 키값.&lt;/li>
&lt;li>Sec-WebSocket-Protocol은 클라이언트가 지원하는 서브프로토콜 목록.&lt;/li>
&lt;/ul>
&lt;p>서버는 이 요청에 대해 다음과 같은 응답을 보낸다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-http" data-lang="http">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">HTTP&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="m">1.1&lt;/span> &lt;span class="m">101&lt;/span> &lt;span class="ne">Switching Protocols&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Upgrade&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">websocket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">Upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Accept&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">s3pPLMBiTxaQ9kYGzzhZRbK+xOo=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Sec-WebSocket-Protocol&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="l">chat&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>연결이 수립된 후의 데이터 전송 방식도 주목할 만한 특징이 있다.&lt;br>
WebSocket은 데이터를 &amp;lsquo;프레임(Frame)&amp;lsquo;이라는 단위로 전송한다.&lt;br>
프레임의 구조는 다음과 같다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code> 0 1 2 3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-------&amp;#43;-&amp;#43;-------------&amp;#43;-------------------------------&amp;#43;
|F|R|R|R| opcode|M| Payload len | Extended payload length |
|I|S|S|S| (4) |A| (7) | (16/64) |
|N|V|V|V| |S| | (if payload len==126/127) |
| |1|2|3| |K| | |
&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-&amp;#43;-------&amp;#43;-&amp;#43;-------------&amp;#43;-------------------------------&amp;#43;
| Extended payload length continued, if payload len == 127 |
&amp;#43;-------------------------------&amp;#43;-------------------------------&amp;#43;
| |Masking-key, if MASK set to 1 |
&amp;#43;-------------------------------&amp;#43;-------------------------------&amp;#43;
| Masking-key (continued) | Payload Data |
&amp;#43;-------------------------------- - - - - - - - - - - - - - - -&amp;#43;
: Payload Data continued ... :
&amp;#43; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &amp;#43;
| Payload Data continued ... |
&amp;#43;---------------------------------------------------------------&amp;#43;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>프레임의 각 필드가 하는 역할을 이해하는 것이 중요하다:&lt;/p>
&lt;ul>
&lt;li>FIN: 메시지의 마지막 프레임임을 나타낸다.&lt;/li>
&lt;li>RSV1-3: 확장을 위해 예약된 비트이다.&lt;/li>
&lt;li>Opcode: 프레임의 종류를 나타낸다(텍스트, 바이너리, 연결 종료 등).&lt;/li>
&lt;li>MASK: 페이로드가 마스킹되었는지를 나타낸다.&lt;/li>
&lt;li>Payload length: 페이로드의 길이를 나타낸다.&lt;/li>
&lt;/ul>
&lt;h3>WebSocket Protocol의 다양한 기능&lt;span class="hx-absolute -hx-mt-20" id="websocket-protocol의-다양한-기능">&lt;/span>
&lt;a href="#websocket-protocol%ec%9d%98-%eb%8b%a4%ec%96%91%ed%95%9c-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>Ping/Pong 프레임:&lt;br>
연결이 여전히 살아있는지 확인하기 위해 사용된다.&lt;br>
서버나 클라이언트는 Ping 프레임을 보낼 수 있으며, 받는 쪽은 반드시 Pong으로 응답해야 한다.&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// WebSocket에서 Ping/Pong 처리 예시
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">socket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">onping&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Ping received&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Pong은 자동으로 전송됩니다
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>
&lt;p>Close 프레임:&lt;br>
연결을 정상적으로 종료할 때 사용된다.&lt;br>
상태 코드와 종료 이유를 포함할 수 있다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>프래그먼테이션(Fragmentation):&lt;br>
대용량 메시지를 여러 프레임으로 나누어 전송할 수 있다.&lt;br>
이는 네트워크 효율성을 높이고 메모리 사용을 최적화한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>WebSocket Protocol의 보안&lt;span class="hx-absolute -hx-mt-20" id="websocket-protocol의-보안">&lt;/span>
&lt;a href="#websocket-protocol%ec%9d%98-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>wss:// (WebSocket Secure):&lt;br>
TLS/SSL을 통한 암호화된 연결을 제공한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Origin 검사:&lt;br>
브라우저는 WebSocket 연결 시 Origin 헤더를 포함시켜, 서버가 신뢰할 수 있는 출처의 연결만을 수락할 수 있게 한다.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>마스킹:&lt;br>
클라이언트에서 서버로 전송되는 모든 프레임은 반드시 마스킹되어야 한다.&lt;br>
이는 캐시 포이즈닝과 같은 보안 공격을 방지한다.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>주의사항&lt;span class="hx-absolute -hx-mt-20" id="주의사항">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>연결 관리&lt;/p>
&lt;ul>
&lt;li>연결이 끊어졌을 때의 재연결 로직 구현&lt;/li>
&lt;li>주기적인 연결 상태 확인 (heartbeat)&lt;/li>
&lt;li>적절한 에러 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>보안&lt;/p>
&lt;ul>
&lt;li>wss:// (WebSocket Secure) 프로토콜 사용&lt;/li>
&lt;li>메시지 검증&lt;/li>
&lt;li>사용자 인증&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>성능 최적화&lt;/p>
&lt;ul>
&lt;li>적절한 메시지 크기 관리&lt;/li>
&lt;li>연결 수 제한&lt;/li>
&lt;li>효율적인 데이터 구조 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>DNS(Domain Name System)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/</link><pubDate>Sun, 06 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/dns/</guid><description>
&lt;h2>DNS(Domain Name System)&lt;span class="hx-absolute -hx-mt-20" id="dnsdomain-name-system">&lt;/span>
&lt;a href="#dnsdomain-name-system" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷에서 도메인 이름을 IP 주소로 변환하는 분산형 데이터베이스 시스템이다.&lt;/p>
&lt;p>&lt;img src="ddos-dns.svg" alt="IP 주소란 무엇이고 IP 주소는 왜 중요할까요?" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/dns/glossary/what-is-my-ip-address/&lt;/a> _&lt;/p>
&lt;p>&lt;strong>인터넷 전화전화부&lt;/strong>로 비유되며 특정 컴퓨터 (또는 네트워크로 연결된 임의의 장치) 의 주소를 찾기 위해, 사람이 이해하기 쉬운 호스트 이름 (예: &amp;lt;www.example.com&amp;gt;) 을 실제 네트워크 상에서 사용하는 IP 주소 (예: 192.168.1.1) 로 변환하고 해당 IP 주소로 접속하는 일련의 시스템을 DNS(Domain Name System) 이라고 한다.&lt;/p>
&lt;p>DNS 는 전세계적으로 약속된 규칙을 공유한다.&lt;br>
웹 브라우저는 DNS 확인이 &lt;strong>막후에서&lt;/strong> 발생하며 최초의 사용자 요청 외에 사용자 컴퓨터와의 추가적인 대화는 필요하지 않다.&lt;/p>
&lt;h3>역할과 기능&lt;span class="hx-absolute -hx-mt-20" id="역할과-기능">&lt;/span>
&lt;a href="#%ec%97%ad%ed%95%a0%ea%b3%bc-%ea%b8%b0%eb%8a%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>도메인 이름을 IP 주소로 변환 (정방향 조회)&lt;/li>
&lt;li>IP 주소를 도메인 이름으로 변환 (역방향 조회)&lt;/li>
&lt;li>이메일 라우팅을 위한 메일 서버 정보 제공&lt;/li>
&lt;li>도메인에 대한 서비스 정보 제공&lt;/li>
&lt;/ul>
&lt;h3>특징&lt;span class="hx-absolute -hx-mt-20" id="특징">&lt;/span>
&lt;a href="#%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>계층적 구조로 분산 관리&lt;/li>
&lt;li>캐싱을 통한 빠른 응답 제공&lt;/li>
&lt;li>전 세계적으로 표준화된 시스템&lt;/li>
&lt;/ul>
&lt;h3>DNS 조회는 어떻게 작동하는가?&lt;span class="hx-absolute -hx-mt-20" id="dns-조회는-어떻게-작동하는가">&lt;/span>
&lt;a href="#dns-%ec%a1%b0%ed%9a%8c%eb%8a%94-%ec%96%b4%eb%96%bb%ea%b2%8c-%ec%9e%91%eb%8f%99%ed%95%98%eb%8a%94%ea%b0%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="3607857746_b4372ba3ba_o.png" alt="Verisign Domain Name Industry Brief, June 2007 (PDF)" loading="lazy" />&lt;br>
_Source: &lt;a href="http://www.verisign.com/static/DNIB_09_0529web.pdf" target="_blank" rel="noopener">http://www.verisign.com/static/DNIB_09_0529web.pdf&lt;/a> _&lt;/p>
&lt;ol>
&lt;li>&lt;strong>사용자 요청&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>사용자가 브라우저에 도메인 이름 (예: www.example.com/) 입력한다.&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>&lt;strong>로컬 DNS 캐시 확인&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>브라우저는 먼저 로컬 캐시를 확인하여 이미 저장된 IP 주소가 있는지 확인한다.&lt;/li>
&lt;li>특정 DNS 서버가 관여하지 않는다.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>&lt;strong>재귀적 DNS 리졸버&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>로컬 캐시에 IP 주소가 없으면, 요청은 재귀적 DNS 리졸버로 전달된다.&lt;/li>
&lt;li>일반적으로 ISP 에서 제공하며, DNS 조회 과정을 대신 수행한다&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>&lt;strong>루트 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 먼저 루트 네임서버에 쿼리를 보낸다.&lt;/li>
&lt;li>루트 서버는 최상위 도메인 (TLD) 서버의 위치를 알려준다.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>&lt;strong>TLD 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 TLD 서버 (.com,.org 등) 에 쿼리를 보내 해당 도메인의 권한 있는 네임서버의 위치를 확인한다.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>&lt;strong>권한 있는 네임서버 쿼리&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>마지막으로, 리졸버는 권한 있는 네임서버에 쿼리를 보내 최종적으로 도메인에 대한 정확한 IP 주소를 얻는다.&lt;/li>
&lt;li>이는 도메인 등록 기관이나 호스팅 제공업체의 DNS 서버이다.&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>&lt;strong>응답 및 캐싱&lt;/strong>:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>리졸버는 얻은 IP 주소를 사용자의 브라우저에 반환하고, 향후 요청을 위해 이 정보를 캐시에 저장한다.&lt;/li>
&lt;/ul>
&lt;h3>DNS 서버 유형&lt;span class="hx-absolute -hx-mt-20" id="dns-서버-유형">&lt;/span>
&lt;a href="#dns-%ec%84%9c%eb%b2%84-%ec%9c%a0%ed%98%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>웹페이지 로드와 관련된 DNS 서버&lt;/li>
&lt;/ul>
&lt;h4>DNS Recursive Resolver(DNS 재귀적 리졸버)&lt;span class="hx-absolute -hx-mt-20" id="dns-recursive-resolverdns-재귀적-리졸버">&lt;/span>
&lt;a href="#dns-recursive-resolverdns-%ec%9e%ac%ea%b7%80%ec%a0%81-%eb%a6%ac%ec%a1%b8%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>별칭: DNS 리커서, 캐싱 네임 서버&lt;/li>
&lt;li>역할: 클라이언트의 DNS 쿼리를 받아 처리하는 첫 번째 중간자.&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>클라이언트의 요청을 받아 다른 DNS 서버에 추가 쿼리를 보내 응답을 얻음.&lt;/li>
&lt;li>얻은 정보를 캐시하여 향후 쿼리 처리 속도를 높임.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관리 주체: 인터넷 서비스 공급자 (ISP), 대기업, 또는 타사 DNS 서비스 공급자가 운영한다.&lt;/li>
&lt;/ul>
&lt;h4>DNS Root Nameserver(루트 이름 서버)&lt;span class="hx-absolute -hx-mt-20" id="dns-root-nameserver루트-이름-서버">&lt;/span>
&lt;a href="#dns-root-nameserver%eb%a3%a8%ed%8a%b8-%ec%9d%b4%eb%a6%84-%ec%84%9c%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>역할: DNS 계층 구조의 최상위에 위치하며, 전 세계적으로 13 개의 DNS Root Nameserver(루트 이름 서버) 가 있으나 수백 개의 미러 서버가 운영되고 있다.&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>TLD 네임서버의 IP 주소 정보를 제공한다.&lt;/li>
&lt;li>DNS 리졸버의 쿼리 해결 과정의 시작점.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>DNS TLD Nameserver (TLD 이름 서버)&lt;span class="hx-absolute -hx-mt-20" id="dns-tld-nameserver-tld-이름-서버">&lt;/span>
&lt;a href="#dns-tld-nameserver-tld-%ec%9d%b4%eb%a6%84-%ec%84%9c%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>역할: 특정 TLD (.com,.org,.net 등) 에 대한 정보를 관리&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>해당 TLD 내의 권한있는 네임 서버 정보를 제공.&lt;/li>
&lt;li>예:.com TLD 서버는 example.com 의 권한 있는 네임서버 정보를 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>관리: ICANN 이 관리하며, 각 TLD 별로 다른 조직에 위임.&lt;/li>
&lt;/ul>
&lt;h4>Authoritative Nameserver (권한 있는 이름 서버)&lt;span class="hx-absolute -hx-mt-20" id="authoritative-nameserver-권한-있는-이름-서버">&lt;/span>
&lt;a href="#authoritative-nameserver-%ea%b6%8c%ed%95%9c-%ec%9e%88%eb%8a%94-%ec%9d%b4%eb%a6%84-%ec%84%9c%eb%b2%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>역할: 특정 도메인에 대한 최종적이고 공식적인 DNS 정보를 제공.&lt;/li>
&lt;li>유형:
&lt;ul>
&lt;li>Primary (마스터) 서버: 도메인의 원본 레코드를 유지 관리&lt;/li>
&lt;li>Secondary (슬레이브) 서버: Primary 서버의 데이터를 복제하여 로드 분산과 중복성 제공&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>기능:
&lt;ul>
&lt;li>도메인의 A, AAAA, MX, CNAME 등 모든 DNS 레코드 정보를 저장 및 제공&lt;/li>
&lt;li>도메인 소유자가 직접 관리하거나 DNS 호스팅 서비스를 통해 관리됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>Local DNS 캐시&lt;span class="hx-absolute -hx-mt-20" id="local-dns-캐시">&lt;/span>
&lt;a href="#local-dns-%ec%ba%90%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>사용자의 개별 컴퓨터나 디바이스에 임시로 저장되는 DNS 조회 결과 모음.&lt;/li>
&lt;li>목적:
&lt;ul>
&lt;li>DNS 쿼리의 응답 시간을 단축시켜 웹 브라우징의 속도를 향상시킨다.&lt;/li>
&lt;li>네트워크 트래픽을 줄여 대역폭을 절약한다.&lt;/li>
&lt;li>DNS 서버의 부하를 감소시킨다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>작동 방식:
&lt;ul>
&lt;li>사용자가 웹 사이트에 처음 접속할 때, OS 는 DNS 조회 결과를 로컬 캐시에 저장한다.&lt;/li>
&lt;li>이후 같은 도메인에 접속할 때, OS 는 로컬 캐시를 확인한다.&lt;/li>
&lt;li>캐시에 정보가 있으면 즉시 사용하고, 없으면 일반적인 DNS 조회 과정을 시작한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>저장 위치:
&lt;ul>
&lt;li>Windows: DNS Client 서비스에 의해 관리된다.&lt;/li>
&lt;li>macOS / Linux: nscd (Name Service Cache Daemon) 또는 시스템 수준의 캐시 메커니즘에 의해 관리된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TTL (Time To Live):
&lt;ul>
&lt;li>각 DNS 레코드는 TTL 값을 가지며, 이는 캐시에 해당 정보를 얼마나 오래 보관할지 결정한다.&lt;/li>
&lt;li>TTL 이 만료되면 해당 정보는 캐시에서 제거되고, 다음 요청시 새로운 DNS 조회가 수행된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점:
&lt;ul>
&lt;li>빠른 웹 페이지 로딩&lt;/li>
&lt;li>네트워크 효율성&lt;/li>
&lt;li>오프라인 상태에서도 이전에 방문한 사이트의 IP 주소 제공 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>단점:
&lt;ul>
&lt;li>오래된 정보를 제공할 수 있다. (특히 TTL 이 긴 경우)&lt;/li>
&lt;li>DNS 변경사항이 즉시 반영되지 않을 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>주의 사항:
&lt;ul>
&lt;li>DNS 캐시 중독: 악의적인 공격자가 캐시를 조작하여 사용자를 가짜 웹사이트로 유도할 수 있다.&lt;/li>
&lt;li>오래된 정보: 웹사이트의 IP 주소가 변경되었을 때 캐시된 정보가 최신 상태가 아닐 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3>DNS 보안 위협 및 보호 기술&lt;span class="hx-absolute -hx-mt-20" id="dns-보안-위협-및-보호-기술">&lt;/span>
&lt;a href="#dns-%eb%b3%b4%ec%95%88-%ec%9c%84%ed%98%91-%eb%b0%8f-%eb%b3%b4%ed%98%b8-%ea%b8%b0%ec%88%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>DNS 보안 위협&lt;span class="hx-absolute -hx-mt-20" id="dns-보안-위협">&lt;/span>
&lt;a href="#dns-%eb%b3%b4%ec%95%88-%ec%9c%84%ed%98%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>DNS 스푸핑 (DNS Spoofing)&lt;span class="hx-absolute -hx-mt-20" id="dns-스푸핑-dns-spoofing">&lt;/span>
&lt;a href="#dns-%ec%8a%a4%ed%91%b8%ed%95%91-dns-spoofing" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: 공격자가 DNS 응답을 가로채고 조작하여 사용자를 의도하지 않은 사이트로 유도하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>중간자 공격의 일종.&lt;/li>
&lt;li>사용자가 정상적인 웹사이트에 접속하고 있다고 믿게 만듦.&lt;/li>
&lt;li>피싱이나 악성코드 배포에 주로 사용됨.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 캐시 포이즈닝 (DNS Cache Poisoning)&lt;span class="hx-absolute -hx-mt-20" id="dns-캐시-포이즈닝-dns-cache-poisoning">&lt;/span>
&lt;a href="#dns-%ec%ba%90%ec%8b%9c-%ed%8f%ac%ec%9d%b4%ec%a6%88%eb%8b%9d-dns-cache-poisoning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 리졸버의 캐시에 거짓 정보를 삽입하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 리졸버가 잘못된 IP 주소를 캐시에 저장하게 됨.&lt;/li>
&lt;li>공격 효과가 캐시 TTL 동안 지속됨.&lt;/li>
&lt;li>다수의 사용자에게 영향을 미칠 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 하이재킹 (DNS Hijacking)&lt;span class="hx-absolute -hx-mt-20" id="dns-하이재킹-dns-hijacking">&lt;/span>
&lt;a href="#dns-%ed%95%98%ec%9d%b4%ec%9e%ac%ed%82%b9-dns-hijacking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 설정을 변경하여 트래픽을 공격자가 제어하는 서버로 리디렉션 (Redirection) 하는 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 서버 자체를 대상으로 하는 경우가 많음.&lt;/li>
&lt;li>사용자 디바이스의 DNS 설정을 변경하기도 함.&lt;/li>
&lt;li>광범위한 영향을 미칠 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 증폭 공격 (DNS Amplification Attack)&lt;span class="hx-absolute -hx-mt-20" id="dns-증폭-공격-dns-amplification-attack">&lt;/span>
&lt;a href="#dns-%ec%a6%9d%ed%8f%ad-%ea%b3%b5%ea%b2%a9-dns-amplification-attack" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 서버를 이용해 대량의 트래픽을 생성하여 대상 시스템을 마비시키는 DDos 공격.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>작은 쿼리로 큰 응답을 유발하여 트래픽을 증폭시킴.&lt;/li>
&lt;li>공개 DNS 리졸버를 악용함.&lt;/li>
&lt;li>네트워크 대역폭을 소진시켜 서비스 중단을 유발.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS 터널링 (DNS Tunneling)&lt;span class="hx-absolute -hx-mt-20" id="dns-터널링-dns-tunneling">&lt;/span>
&lt;a href="#dns-%ed%84%b0%eb%84%90%eb%a7%81-dns-tunneling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 프로토콜을 악용하여 다른 프로토콜의 데이터를 DNS 쿼리와 응답에 숨겨 전송하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>방화벽 우회, 데이터 유출 등에 사용될 수 있음.&lt;/li>
&lt;li>정상적인 DNS 트래픽으로 위장하여 탐지가 어려움.&lt;/li>
&lt;li>네트워크 성능 저하를 유발할 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4>DNS 보호 기술&lt;span class="hx-absolute -hx-mt-20" id="dns-보호-기술">&lt;/span>
&lt;a href="#dns-%eb%b3%b4%ed%98%b8-%ea%b8%b0%ec%88%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>DNSSEC (Domain Name System Security Extensions)&lt;span class="hx-absolute -hx-mt-20" id="dnssec-domain-name-system-security-extensions">&lt;/span>
&lt;a href="#dnssec-domain-name-system-security-extensions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 응답의 무결성과 출처를 암호화 방식으로 검증하는 보장 확장 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>디지털 서명을 사용하여 DNS 데이터의 신뢰성 보장.&lt;/li>
&lt;li>DNS 스푸핑과 DNS 캐시 포이즈닝 공격 방지.&lt;/li>
&lt;li>점진적으로 도입 가능하나, 전체 DNS 체인의 참여가 필요함.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS over HTTPS (DoH)&lt;span class="hx-absolute -hx-mt-20" id="dns-over-https-doh">&lt;/span>
&lt;a href="#dns-over-https-doh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 쿼리를 HTTPS 프로토콜을 통해 암호화하여 전송하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 쿼리의 프라이버시 보호.&lt;/li>
&lt;li>중간자 공격 방지.&lt;/li>
&lt;li>기존 방화벽 정책과 충돌할 수 있음.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DNS over TLS (DoT)&lt;span class="hx-absolute -hx-mt-20" id="dns-over-tls-dot">&lt;/span>
&lt;a href="#dns-over-tls-dot" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 쿼리를 TLS 프로토콜을 통해 암호화하여 전송하는 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNS 쿼리의 기밀성 보장.&lt;/li>
&lt;li>전용 포트 (853) 를 사용하여 트래픽 식별이 용이.&lt;/li>
&lt;li>DoH 에 비해 네트워크 관리가 쉬움.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h5>DANE (DNS-based Authentication of Named Entities)&lt;span class="hx-absolute -hx-mt-20" id="dane-dns-based-authentication-of-named-entities">&lt;/span>
&lt;a href="#dane-dns-based-authentication-of-named-entities" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>정의: DNS 를 사용하여 TLS 인증서의 유효성을 검증하는 기술&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>DNSSEC 과 연계하여 사용.&lt;/li>
&lt;li>인증기관 (CA) 의존도 감소.&lt;/li>
&lt;li>자체 서명 인증서의 안전한 사용 가능.&lt;br>
RPZ (Response POLICY Zones)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>정의: DNS 서버 레벨에서 악성 도메인에 대한 접근을 차단하는 기술.&lt;/li>
&lt;li>특징:
&lt;ul>
&lt;li>중앙 집중식 보안 정책 적용 가능.&lt;/li>
&lt;li>실시간 업데이트 지원.&lt;/li>
&lt;li>유연한 정책 설정 가능 (차단, 리다이렉션 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>DNS&lt;span class="hx-absolute -hx-mt-20" id="dns">&lt;/span>
&lt;a href="#dns" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://ko.wikipedia.org/wiki/%EB%8F%84%EB%A9%94%EC%9D%B8_%EB%84%A4%EC%9E%84_%EC%8B%9C%EC%8A%A4%ED%85%9C" target="_blank" rel="noopener">도메인 네임 시스템&lt;/a>&lt;br>
&lt;a href="https://hanamon.kr/dns%EB%9E%80-%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%84%A4%EC%9E%84-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B0%9C%EB%85%90%EB%B6%80%ED%84%B0-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D%EA%B9%8C%EC%A7%80/" target="_blank" rel="noopener">DNS란? (도메인 네임 시스템 개념부터 작동 방식까지)&lt;/a>&lt;br>
&lt;a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;amp;blogId=gaegurijump&amp;amp;logNo=110186376474" target="_blank" rel="noopener">DNS(Domain Name System)란?&lt;/a>&lt;br>
&lt;a href="https://gentlysallim.com/dns%EB%9E%80-%EB%AD%90%EA%B3%A0-%EB%84%A4%EC%9E%84%EC%84%9C%EB%B2%84%EB%9E%80-%EB%AD%94%EC%A7%80-%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC/" target="_blank" rel="noopener">DNS란 뭐고, 네임서버란 뭔지 개념정리&lt;/a>&lt;br>
&lt;a href="https://ko.wikipedia.org/wiki/%EB%A3%A8%ED%8A%B8_%EB%84%A4%EC%9E%84_%EC%84%9C%EB%B2%84" target="_blank" rel="noopener">루트 네임 서버&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/search/techBoardDetail.do?ID=164603&amp;amp;boardType=" target="_blank" rel="noopener">개발자가 알아야할 DNS 동작&lt;/a>&lt;br>
&lt;a href="https://www.ibm.com/kr-ko/topics/dns" target="_blank" rel="noopener">도메인 이름 시스템(DNS)이란 무엇인가요?&lt;/a>&lt;/p>
&lt;h3>DNS 레코드&lt;span class="hx-absolute -hx-mt-20" id="dns-레코드">&lt;/span>
&lt;a href="#dns-%eb%a0%88%ec%bd%94%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://inpa.tistory.com/entry/WEB-%F0%9F%8C%90-DNS-%EB%A0%88%EC%BD%94%EB%93%9C-%EC%A2%85%EB%A5%98-%E2%98%85-%EC%95%8C%EA%B8%B0-%EC%89%BD%EA%B2%8C-%EC%A0%95%EB%A6%AC" target="_blank" rel="noopener">DNS 레코드 종류 ★ 완벽 정리&lt;/a>&lt;/p>
&lt;h3>TLD&lt;span class="hx-absolute -hx-mt-20" id="tld">&lt;/span>
&lt;a href="#tld" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://developer.mozilla.org/ko/docs/Glossary/TLD" target="_blank" rel="noopener">최상위 도메인 (top-level domain, TLD)&lt;/a>&lt;br>
&lt;a href="https://www.cloudflare.com/ko-kr/learning/dns/top-level-domain/" target="_blank" rel="noopener">최상위 도메인이란?&lt;/a>&lt;/p></description></item><item><title>SSL and TLS</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssl-and-tls/</link><pubDate>Sat, 05 Oct 2024 08:48:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ssl-and-tls/</guid><description>
&lt;h2>SSL(Secure Sockets Layer)과 TLS(Transport Layer Security)&lt;span class="hx-absolute -hx-mt-20" id="sslsecure-sockets-layer과-tlstransport-layer-security">&lt;/span>
&lt;a href="#sslsecure-sockets-layer%ea%b3%bc-tlstransport-layer-security" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 상에서 데이터를 안전하게 전송하기 위한 암호화 프로토콜.&lt;br>
TLS는 SSL의 후속 버전으로, 보안성과 성능이 향상되었다.&lt;/p>
&lt;h3>SSL의 역사와 개념&lt;span class="hx-absolute -hx-mt-20" id="ssl의-역사와-개념">&lt;/span>
&lt;a href="#ssl%ec%9d%98-%ec%97%ad%ec%82%ac%ec%99%80-%ea%b0%9c%eb%85%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSL은 1995년 Netscape에 의해 개발되었다.&lt;br>
주요 목적은 웹 브라우징 시 데이터의 기밀성과 무결성을 보장하는 것.&lt;br>
SSL은 다음과 같은 버전으로 발전했다:&lt;/p>
&lt;ol>
&lt;li>SSL 1.0 (내부적으로만 사용)&lt;/li>
&lt;li>SSL 2.0 (1995년 공개)&lt;/li>
&lt;li>SSL 3.0 (1996년 공개)&lt;/li>
&lt;/ol>
&lt;h3>TLS의 등장과 발전&lt;span class="hx-absolute -hx-mt-20" id="tls의-등장과-발전">&lt;/span>
&lt;a href="#tls%ec%9d%98-%eb%93%b1%ec%9e%a5%ea%b3%bc-%eb%b0%9c%ec%a0%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>TLS는 SSL 3.0을 기반으로 1999년 IETF(Internet Engineering Task Force)에 의해 개발되었다.&lt;br>
TLS는 SSL의 보안 취약점을 개선하고 더 강력한 암호화 알고리즘을 도입했다.&lt;br>
TLS의 주요 버전은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>TLS 1.0 (1999년)&lt;/li>
&lt;li>TLS 1.1 (2006년)&lt;/li>
&lt;li>TLS 1.2 (2008년)&lt;/li>
&lt;li>TLS 1.3 (2018년)&lt;/li>
&lt;/ol>
&lt;h3>OSI 7계층과 TCP/IP 모델에서의 위치&lt;span class="hx-absolute -hx-mt-20" id="osi-7계층과-tcpip-모델에서의-위치">&lt;/span>
&lt;a href="#osi-7%ea%b3%84%ec%b8%b5%ea%b3%bc-tcpip-%eb%aa%a8%eb%8d%b8%ec%97%90%ec%84%9c%ec%9d%98-%ec%9c%84%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>OSI 7계층:&lt;br>
전송 계층(4계층)과 응용 계층(7계층) 사이에서 동작&lt;/li>
&lt;li>TCP/IP 모델:&lt;br>
전송 계층과 응용 계층 사이에서 동작&lt;/li>
&lt;/ul>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>공개키 암호화와 대칭키 암호화를 모두 사용한다.&lt;/li>
&lt;li>디지털 인증서를 통해 서버의 신원을 확인한다.&lt;/li>
&lt;li>다양한 암호화 알고리즘과 프로토콜 버전을 지원한다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>데이터 전송의 보안성 강화&lt;/li>
&lt;li>서버 인증을 통한 신뢰성 확보&lt;/li>
&lt;li>검색 엔진 최적화(SEO) 향상&lt;/li>
&lt;li>규정 준수 지원 (예: PCI DSS)&lt;/li>
&lt;li>사용자 신뢰도 증가&lt;/li>
&lt;/ol>
&lt;h3>SSL과 TLS의 차이점&lt;span class="hx-absolute -hx-mt-20" id="ssl과-tls의-차이점">&lt;/span>
&lt;a href="#ssl%ea%b3%bc-tls%ec%9d%98-%ec%b0%a8%ec%9d%b4%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>버전:
&lt;ul>
&lt;li>SSL은 1.0, 2.0, 3.0 버전이 있으며 모두 취약점이 발견되어 더 이상 사용되지 않는다.&lt;/li>
&lt;li>TLS는 1.0, 1.1, 1.2, 1.3 버전이 있으며, 현재는 1.2와 1.3이 주로 사용된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>보안성:
&lt;ul>
&lt;li>TLS가 SSL보다 더 강력한 암호화 알고리즘과 보안 기능을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>핸드셰이크 과정:
&lt;ul>
&lt;li>TLS는 SSL보다 더 효율적이고 빠른 핸드셰이크 과정을 가진다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>암호 스위트:
&lt;ul>
&lt;li>TLS는 더 다양하고 안전한 암호 스위트를 지원한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>메시지 인증:
&lt;ul>
&lt;li>SSL은 MAC(Message Authentication Code)를 사용하지만, TLS는 HMAC(Hash-based Message Authentication Code)를 사용한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>핸드셰이크(handshake) 과정:
&lt;ol>
&lt;li>&lt;strong>클라이언트 헬로&lt;/strong>: 클라이언트가 지원하는 암호화 방식 등을 서버에 전송한다.&lt;/li>
&lt;li>&lt;strong>서버 헬로&lt;/strong>: 서버가 선택한 암호화 방식과 인증서를 클라이언트에 전송한다.&lt;/li>
&lt;li>&lt;strong>인증서 검증&lt;/strong>: 클라이언트가 서버의 인증서를 검증한다.&lt;/li>
&lt;li>&lt;strong>키 교환&lt;/strong>: 안전한 통신을 위한 대칭 키를 교환한다.&lt;/li>
&lt;li>&lt;strong>암호화 통신 시작&lt;/strong>: 협상된 암호화 방식으로 데이터를 암호화하여 통신한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>데이터 전송: 생성된 세션 키를 사용하여 데이터를 암호화하고 전송한다.&lt;/li>
&lt;li>연결 종료: 통신이 완료되면 세션을 종료하고 세션 키를 폐기한다.&lt;/li>
&lt;/ol>
&lt;p>SSL(Secure Sockets Layer)과 TLS(Transport Layer Security)는 네트워크 통신을 안전하게 암호화하기 위한 프로토콜입니다. 두 프로토콜의 주요 차이점과 관련 개념들에 대해 설명하겠습니다.&lt;/p>
&lt;h3>인증서 체인&lt;span class="hx-absolute -hx-mt-20" id="인증서-체인">&lt;/span>
&lt;a href="#%ec%9d%b8%ec%a6%9d%ec%84%9c-%ec%b2%b4%ec%9d%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>인증서 체인은 디지털 인증서의 신뢰성을 확립하는 계층적 구조이다.&lt;br>
일반적으로 다음과 같은 구조로 이루어진다:&lt;/p>
&lt;ol>
&lt;li>루트 인증서: 최상위 신뢰 기관의 자체 서명 인증서&lt;/li>
&lt;li>중간 인증서: 루트 인증 기관이 서명한 인증서&lt;/li>
&lt;li>최종 사용자 인증서: 웹사이트나 서비스에 발급된 인증서&lt;br>
완전한 인증서 체인을 제공하는 것이 중요하며, 이를 통해 브라우저는 인증서의 유효성을 검증할 수 있다.&lt;/li>
&lt;/ol>
&lt;h3>암호 스위트&lt;span class="hx-absolute -hx-mt-20" id="암호-스위트">&lt;/span>
&lt;a href="#%ec%95%94%ed%98%b8-%ec%8a%a4%ec%9c%84%ed%8a%b8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>암호 스위트는 SSL/TLS 연결에서 사용되는 암호화 알고리즘의 조합.&lt;br>
주요 구성 요소는 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>키 교환 알고리즘 (예: RSA, ECDHE)&lt;/li>
&lt;li>인증 알고리즘 (예: RSA, ECDSA)&lt;/li>
&lt;li>대칭 암호화 알고리즘 (예: AES, ChaCha20)&lt;/li>
&lt;li>메시지 인증 코드 알고리즘 (예: SHA-256, POLY1305)&lt;br>
최신 TLS 버전에서는 보안성이 높은 암호 스위트를 우선적으로 사용한다.&lt;/li>
&lt;/ol>
&lt;h3>전방 비밀성&lt;span class="hx-absolute -hx-mt-20" id="전방-비밀성">&lt;/span>
&lt;a href="#%ec%a0%84%eb%b0%a9-%eb%b9%84%eb%b0%80%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>전방 비밀성(Forward Secrecy)은 현재 세션의 키가 노출되더라도 과거 세션의 통신 내용을 해독할 수 없도록 하는 보안 속성이다.&lt;br>
ECDHE나 DHE와 같은 키 교환 방식을 사용하여 구현된다.&lt;/p>
&lt;h3>HTTPS&lt;span class="hx-absolute -hx-mt-20" id="https">&lt;/span>
&lt;a href="#https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS는 HTTP 프로토콜에 SSL/TLS를 적용한 것이다.&lt;br>
웹 브라우저와 서버 간의 모든 통신을 암호화하여 데이터의 기밀성과 무결성을 보장한다.&lt;/p>
&lt;h3>성능 최적화&lt;span class="hx-absolute -hx-mt-20" id="성능-최적화">&lt;/span>
&lt;a href="#%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>SSL/TLS 성능 최적화를 위한 주요 방법들:&lt;/p>
&lt;ol>
&lt;li>세션 재개: 이전 연결의 정보를 재사용하여 핸드셰이크 과정을 단축한다.&lt;/li>
&lt;li>OCSP Stapling: 인증서 상태 확인 과정을 최적화한다.&lt;/li>
&lt;li>HTTP/2 지원: 연결 다중화를 통해 성능을 향상시킨다.&lt;/li>
&lt;li>적절한 암호 스위트 선택: 보안과 성능의 균형을 고려한다.&lt;/li>
&lt;li>하드웨어 가속: 암호화 작업을 전용 하드웨어로 처리하여 성능을 개선한다.&lt;/li>
&lt;/ol>
&lt;p>추가적으로 알아야 할 내용:&lt;/p>
&lt;ol>
&lt;li>SSL과 TLS의 차이: TLS는 SSL의 후속 버전으로, 더 강화된 보안 기능을 제공합니다.&lt;/li>
&lt;li>인증서 체인: 루트 인증서, 중간 인증서, 최종 엔티티 인증서로 구성된 체인을 통해 신뢰성을 확보합니다.&lt;/li>
&lt;li>암호 스위트: 다양한 암호화 알고리즘의 조합을 지원하며, 클라이언트와 서버가 협상하여 사용할 암호 스위트를 결정합니다.&lt;/li>
&lt;li>전방 비밀성: 세션 키가 노출되더라도 과거의 통신 내용을 해독할 수 없도록 하는 기능을 제공합니다.&lt;/li>
&lt;li>HTTPS: SSL/TLS는 HTTPS 프로토콜의 기반이 되며, 웹 브라우징 보안에 필수적입니다.&lt;/li>
&lt;li>성능 최적화: TLS 1.3에서는 핸드셰이크 과정을 간소화하여 연결 속도를 개선했습니다.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/</link><pubDate>Sat, 05 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/http/</guid><description>
&lt;h2>HTTP (HyperText Transfer Protocol) / HTTPS (HyperText Transfer Protocol Secure)&lt;span class="hx-absolute -hx-mt-20" id="http-hypertext-transfer-protocol--https-hypertext-transfer-protocol-secure">&lt;/span>
&lt;a href="#http-hypertext-transfer-protocol--https-hypertext-transfer-protocol-secure" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>HTTP는 OSI 7계층에서 응용 계층(7계층)에 위치하며, TCP/IP 4계층에서는 응용 계층에 해당한다.&lt;br>
HTTP는 웹 브라우저와 웹 서버 간의 통신을 위한 프로토콜로, 클라이언트-서버 모델을 기반으로 작동한다.&lt;/p>
&lt;h3>HTTP의 특징&lt;span class="hx-absolute -hx-mt-20" id="http의-특징">&lt;/span>
&lt;a href="#http%ec%9d%98-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>클라이언트-서버 모델 기반&lt;/li>
&lt;li>상태를 유지하지 않는 (Stateless) 프로토콜&lt;/li>
&lt;li>연결을 유지하지 않는 (Connectionless) 프로토콜&lt;/li>
&lt;li>요청(Request)과 응답(Response) 구조로 통신&lt;/li>
&lt;li>TCP/IP 기반으로 동작&lt;/li>
&lt;li>80번 포트를 기본으로 사용&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Stateless vs Stateful&lt;br>
Stateless (무상태)&lt;/p>
&lt;ul>
&lt;li>서버가 클라이언트의 이전 요청에 대한 정보를 저장하지 않는다.&lt;/li>
&lt;li>매번 필요한 모든 정보를 함께 전달해야 한다.&lt;/li>
&lt;li>서버 확장성이 높다. 여러 서버를 쉽게 추가할 수 있어 대규모 트래픽 처리에 유리하다.&lt;/li>
&lt;li>클라이언트가 매번 모든 정보를 전송해야 해서 데이터량이 증가할 수 있다.&lt;br>
Stateful (상태 유지)&lt;/li>
&lt;li>서버가 클라이언트의 이전 요청 정보를 기억하는 방식&lt;/li>
&lt;li>예를 들어, 온라인 쇼핑 카트나 로그인 세션 등이 이에 해당&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Connectionless (비연결성)&lt;br>
클라이언트가 서버에 요청을 보내고 서버가 응답한 후에는 연결을 즉시 종료한다.&lt;br>
서버 자원을 효율적으로 사용할 수 있다. 많은 사용자가 동시에 서비스를 이용해도 실제로 서버가 처리하는 요청은 상대적으로 적을 수 있다.&lt;br>
매 요청마다 새로운 연결을 설정해야 해서 약간의 시간이 소요될 수 있다.&lt;/p>
&lt;/blockquote>
&lt;h3>HTTP 요청과 응답의 구조&lt;span class="hx-absolute -hx-mt-20" id="http-요청과-응답의-구조">&lt;/span>
&lt;a href="#http-%ec%9a%94%ec%b2%ad%ea%b3%bc-%ec%9d%91%eb%8b%b5%ec%9d%98-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>HTTP 요청 구조&lt;span class="hx-absolute -hx-mt-20" id="http-요청-구조">&lt;/span>
&lt;a href="#http-%ec%9a%94%ec%b2%ad-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>시작 줄 (Request Line)&lt;/p>
&lt;ul>
&lt;li>HTTP 메서드 (GET, POST 등)&lt;/li>
&lt;li>요청 대상 (URL 또는 경로)&lt;/li>
&lt;li>HTTP 버전&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>헤더&lt;/p>
&lt;ul>
&lt;li>요청에 대한 추가 정보 (예: Host, Content-Type, Accept 등)&lt;/li>
&lt;li>각 헤더는 대소문자를 구분하지 않는 문자열, 콜론(:), 값으로 구성&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>빈 줄&lt;/p>
&lt;ul>
&lt;li>헤더의 끝을 나타냄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>본문 (선택적)&lt;/p>
&lt;ul>
&lt;li>POST, PUT, PATCH 등의 요청에서 서버로 전송할 데이터 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">POST /users HTTP/1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Host: example.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: application/x-www-form-urlencoded
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: 50
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name=FirstName%20LastName&amp;amp;email=bsmth%40example.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>HTTP 응답 구조&lt;span class="hx-absolute -hx-mt-20" id="http-응답-구조">&lt;/span>
&lt;a href="#http-%ec%9d%91%eb%8b%b5-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>
&lt;p>상태 줄 (Status Line)&lt;/p>
&lt;ul>
&lt;li>HTTP 버전&lt;/li>
&lt;li>상태 코드 (예: 200, 404 등)&lt;/li>
&lt;li>상태 메시지&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>헤더&lt;/p>
&lt;ul>
&lt;li>응답에 대한 추가 정보 (예: Content-Type, Content-Length 등)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>빈 줄&lt;/p>
&lt;ul>
&lt;li>헤더의 끝을 나타냄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>본문 (선택적)&lt;/p>
&lt;ul>
&lt;li>요청된 리소스 또는 오류 메시지 등 포함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>예시:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">HTTP/1.1 200 OK
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Type: text/html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Content-Length: 138
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;title&amp;gt;Example Page&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;h1&amp;gt;Welcome to the Example Page&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;p&amp;gt;This is an example of an HTML response body.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/html&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTP Versions&lt;span class="hx-absolute -hx-mt-20" id="http-versions">&lt;/span>
&lt;a href="#http-versions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>특성&lt;/th>
&lt;th>HTTP/0.9 (1991)&lt;/th>
&lt;th>HTTP/1.0 (1996)&lt;/th>
&lt;th>HTTP/1.1 (1997)&lt;/th>
&lt;th>HTTP/2 (2015)&lt;/th>
&lt;th>HTTP/3 (2022)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>프로토콜 형식&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>텍스트&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;td>바이너리&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>지원 메서드&lt;/td>
&lt;td>GET만 지원&lt;/td>
&lt;td>GET, POST 등 추가&lt;/td>
&lt;td>다양한 메서드 지원&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>연결 방식&lt;/td>
&lt;td>요청마다 새 연결&lt;/td>
&lt;td>요청마다 새 연결&lt;/td>
&lt;td>연결 재사용 (keep-alive)&lt;/td>
&lt;td>멀티플렉싱&lt;/td>
&lt;td>QUIC 기반 멀티플렉싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>도입&lt;/td>
&lt;td>개선&lt;/td>
&lt;td>압축&lt;/td>
&lt;td>HTTP/2와 유사&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>상태 코드&lt;/td>
&lt;td>없음&lt;/td>
&lt;td>도입&lt;/td>
&lt;td>개선&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>캐싱&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>기본 지원&lt;/td>
&lt;td>개선된 메커니즘&lt;/td>
&lt;td>HTTP/1.1과 동일&lt;/td>
&lt;td>HTTP/2와 동일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>파이프라이닝&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>멀티플렉싱으로 대체&lt;/td>
&lt;td>멀티플렉싱&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>서버 푸시&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;td>지원&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>전송 계층&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP (QUIC)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>미지원&lt;/td>
&lt;td>선택적 (SSL)&lt;/td>
&lt;td>선택적 (TLS)&lt;/td>
&lt;td>권장 (TLS)&lt;/td>
&lt;td>의무화 (TLS 1.3)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>멀티플렉싱 (Multiplexing)&lt;/p>
&lt;ul>
&lt;li>기본 개념
&lt;ul>
&lt;li>하나의 연결(Connection)을 통해 여러 개의 요청과 응답을 동시에 주고받을 수 있는 기술&lt;/li>
&lt;li>HTTP/2에서 도입된 핵심 기능&lt;/li>
&lt;li>단일 연결을 통해 여러 요청과 응답을 동시에 처리&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>장점
&lt;ol>
&lt;li>성능 향상
&lt;ul>
&lt;li>여러 요청을 동시에 처리&lt;/li>
&lt;li>대기 시간 감소&lt;/li>
&lt;li>전체 로딩 시간 단축&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>효율성
&lt;ul>
&lt;li>하나의 연결로 여러 작업 처리&lt;/li>
&lt;li>서버 자원 절약&lt;/li>
&lt;li>네트워크 사용 효율 증가&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>사용자 경험
&lt;ul>
&lt;li>웹페이지 로딩 속도 향상&lt;/li>
&lt;li>끊김 없는 서비스 제공&lt;/li>
&lt;li>반응성 개선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>예시
&lt;ul>
&lt;li>쇼핑몰 웹페이지 로딩 상황:
&lt;ul>
&lt;li>HTTP/1.1 (순차적 처리)
&lt;ol>
&lt;li>메인 페이지 로딩&lt;/li>
&lt;li>스타일시트 다운로드&lt;/li>
&lt;li>자바스크립트 파일 다운로드&lt;/li>
&lt;li>상품 이미지들 다운로드 → 모든 과정이 순차적으로 진행되어 전체 로딩 시간이 김&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>HTTP/2 (멀티플렉싱)
&lt;ul>
&lt;li>모든 리소스를 동시에 요청하고 받을 수 있음&lt;/li>
&lt;li>이미지, 스타일, 스크립트 등을 병렬로 처리&lt;/li>
&lt;li>전체 로딩 시간이 크게 단축됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">웹페이지 로딩 시나리오:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/1.1 순차적 처리 (HOL Blocking 발생):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html (200ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">style.css (150ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">script.js (180ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image1.jpg (300ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">총 소요시간: 830ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HTTP/2 (멀티플렉싱):
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">index.html (200ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">style.css (150ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">script.js (180ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">image1.jpg (300ms) ------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">총 소요시간: 300ms (가장 긴 요청 시간)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/blockquote>
&lt;h3>HTTP 헤더&lt;span class="hx-absolute -hx-mt-20" id="http-헤더">&lt;/span>
&lt;a href="#http-%ed%97%a4%eb%8d%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Content-Type: 리소스의 미디어 타입을 지정&lt;br>
Authorization: 인증 정보를 전달&lt;br>
Cache-Control: 캐싱 동작을 제어&lt;br>
Cookie/Set-Cookie: 쿠키 정보를 처리&lt;br>
CORS 관련 헤더: 교차 출처 리소스 공유를 제어&lt;/p>
&lt;h3>HTTP 메시지 구조&lt;span class="hx-absolute -hx-mt-20" id="http-메시지-구조">&lt;/span>
&lt;a href="#http-%eb%a9%94%ec%8b%9c%ec%a7%80-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTP 메시지는 다음과 같은 구조로 이루어져 있다:&lt;/p>
&lt;ol>
&lt;li>시작 라인 (요청 라인 또는 상태 라인)&lt;/li>
&lt;li>헤더&lt;/li>
&lt;li>빈 라인&lt;/li>
&lt;li>본문 (선택적)&lt;/li>
&lt;/ol>
&lt;h3>HTTP 메서드&lt;span class="hx-absolute -hx-mt-20" id="http-메서드">&lt;/span>
&lt;a href="#http-%eb%a9%94%ec%84%9c%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>주요 HTTP 메서드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>GET: 리소스 조회&lt;/li>
&lt;li>POST: 리소스 생성&lt;/li>
&lt;li>PUT: 리소스 수정&lt;/li>
&lt;li>DELETE: 리소스 삭제&lt;/li>
&lt;li>PATCH: 리소스 부분 수정&lt;/li>
&lt;/ul>
&lt;h3>HTTP 상태 코드&lt;span class="hx-absolute -hx-mt-20" id="http-상태-코드">&lt;/span>
&lt;a href="#http-%ec%83%81%ed%83%9c-%ec%bd%94%eb%93%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTP 응답 상태 코드는 다음과 같이 분류된다:&lt;/p>
&lt;ul>
&lt;li>1xx: 정보 제공&lt;/li>
&lt;li>2xx: 성공&lt;/li>
&lt;li>3xx: 리다이렉션&lt;/li>
&lt;li>4xx: 클라이언트 오류&lt;/li>
&lt;li>5xx: 서버 오류&lt;/li>
&lt;/ul>
&lt;h3>HTTPS와 보안&lt;span class="hx-absolute -hx-mt-20" id="https와-보안">&lt;/span>
&lt;a href="#https%ec%99%80-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS는 HTTP에 보안 계층을 추가한 프로토콜이다.&lt;br>
주요 특징은 다음과 같다.&lt;/p>
&lt;ol>
&lt;li>SSL/TLS를 통해 다음과 같은 보안 기능을 제공한다:
&lt;ol>
&lt;li>데이터 암호화: 통신 내용을 제3자가 읽을 수 없게 한다.&lt;/li>
&lt;li>무결성 보장: 데이터가 전송 중에 변조되지 않았음을 보장한다.&lt;/li>
&lt;li>인증: 통신 상대방이 신뢰할 수 있는 서버임을 증명한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>443번 포트를 기본으로 사용&lt;/li>
&lt;li>데이터의 기밀성과 무결성 보장&lt;/li>
&lt;li>웹사이트의 신뢰성 증가&lt;/li>
&lt;li>SEO에 긍정적 영향&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># HTTPS 서버 예시 (Python Flask)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Flask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Flask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="vm">__name__&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">app&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ssl_context&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cert.pem&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;key.pem&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTPS의 동작 원리&lt;span class="hx-absolute -hx-mt-20" id="https의-동작-원리">&lt;/span>
&lt;a href="#https%ec%9d%98-%eb%8f%99%ec%9e%91-%ec%9b%90%eb%a6%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS는 다음과 같은 과정으로 동작한다.&lt;/p>
&lt;ol>
&lt;li>SSL/TLS 핸드셰이크를 통한 연결 설정&lt;/li>
&lt;li>대칭키와 비대칭키 암호화 방식을 결합하여 사용&lt;/li>
&lt;li>인증서를 통한 서버 신원 확인&lt;/li>
&lt;/ol>
&lt;h3>HTTPS 도입 시 고려사항&lt;span class="hx-absolute -hx-mt-20" id="https-도입-시-고려사항">&lt;/span>
&lt;a href="#https-%eb%8f%84%ec%9e%85-%ec%8b%9c-%ea%b3%a0%eb%a0%a4%ec%82%ac%ed%95%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS를 도입할 때 다음 사항들을 고려해야 한다.&lt;/p>
&lt;ol>
&lt;li>적절한 SSL/TLS 인증서 선택&lt;/li>
&lt;li>서버 구성 및 최적화&lt;/li>
&lt;li>리디렉션 설정 (HTTP에서 HTTPS로)&lt;/li>
&lt;li>혼합 콘텐츠 문제 해결&lt;/li>
&lt;li>성능 영향 고려&lt;/li>
&lt;/ol>
&lt;h3>보안 강화를 위한 추가 조치&lt;span class="hx-absolute -hx-mt-20" id="보안-강화를-위한-추가-조치">&lt;/span>
&lt;a href="#%eb%b3%b4%ec%95%88-%ea%b0%95%ed%99%94%eb%a5%bc-%ec%9c%84%ed%95%9c-%ec%b6%94%ea%b0%80-%ec%a1%b0%ec%b9%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTPS 외에도 다음과 같은 보안 조치를 취해야 한다.&lt;/p>
&lt;ol>
&lt;li>콘텐츠 보안 정책(CSP) 설정&lt;/li>
&lt;li>XSS, CSRF 등 웹 취약점 방지&lt;/li>
&lt;li>데이터 입력 검증&lt;/li>
&lt;li>SQL 인젝션 방지&lt;/li>
&lt;li>HSTS(HTTP Strict Transport Security) 헤더 설정&lt;/li>
&lt;li>Referrer-Policy 헤더 설정&lt;/li>
&lt;/ol>
&lt;p>XSS(Cross-Site Scripting) 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 데이터 이스케이프 처리&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">markupsafe&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">escape&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/user/&amp;lt;name&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">user_profile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;Hello, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">escape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1">!&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>CSRF(Cross-Site Request Forgery) 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_wtf.csrf&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">CSRFProtect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">csrf&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">CSRFProtect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>SQL 인젝션 방지:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 파라미터화된 쿼리 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cursor&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;SELECT * FROM users WHERE id = ?&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user_id&lt;/span>&lt;span class="p">,))&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>성능 최적화&lt;span class="hx-absolute -hx-mt-20" id="성능-최적화">&lt;/span>
&lt;a href="#%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>HTTP 성능 최적화를 위한 주요 기술들:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>캐싱 전략&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/api/data&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_data&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">make_response&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">jsonify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Cache-Control&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;public, max-age=300&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">response&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>압축&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask_compress&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Compress&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">compress&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Compress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Keep-Alive 연결&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">response&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">headers&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Connection&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;keep-alive&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h3>세션과 쿠키&lt;span class="hx-absolute -hx-mt-20" id="세션과-쿠키">&lt;/span>
&lt;a href="#%ec%84%b8%ec%85%98%ea%b3%bc-%ec%bf%a0%ed%82%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>상태 관리를 위한 메커니즘을 이해해야 한다:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 세션 관리 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">flask&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@app.route&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/login&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">methods&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;POST&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">login&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">authenticate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">form&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;user_id&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/dashboard&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>HTTP/2와 HTTP/3&lt;span class="hx-absolute -hx-mt-20" id="http2와-http3">&lt;/span>
&lt;a href="#http2%ec%99%80-http3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>최신 버전의 HTTP 프로토콜에 대해서도 이해가 필요하다:&lt;/p>
&lt;ol>
&lt;li>HTTP/2: 멀티플렉싱, 헤더 압축 등을 통한 성능 개선&lt;/li>
&lt;li>HTTP/3: QUIC 프로토콜 기반, 더 빠른 연결 설정과 향상된 성능&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>HTTP(S)&lt;span class="hx-absolute -hx-mt-20" id="https">&lt;/span>
&lt;a href="#https" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://yozm.wishket.com/magazine/detail/1686/" target="_blank" rel="noopener">웹 개발자라면 알고 있어야 할 HTTP의 진화 과정&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/experts/techBoardDetail.do?ID=163937&amp;amp;boardType=experts" target="_blank" rel="noopener">[네트워크] Low Level HTTP 통신&lt;/a>&lt;br>
&lt;a href="https://devocean.sk.com/experts/techBoardDetail.do?ID=165318&amp;amp;boardType=experts" target="_blank" rel="noopener">[네트워크] Raw HTTP Message 확인하기&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/130/" target="_blank" rel="noopener">HTTP vs HTTPS 차이, 알면 사이트의 레벨이 보인다.&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/694/" target="_blank" rel="noopener">HTTP의 새로운 메서드, 서치(SEARCH)에 대하여&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/471/" target="_blank" rel="noopener">HTTP, 그리고 HTTPS의 이해&lt;/a>&lt;br>
&lt;a href="https://brunch.co.kr/@swimjiy/47" target="_blank" rel="noopener">그림으로 쉽게 보는 HTTPS, SSL, TLS&lt;/a>&lt;br>
&lt;a href="https://wormwlrm.github.io/2022/09/02/Evolution-of-HTTP.html" target="_blank" rel="noopener">웹 개발자라면 알고 있어야 할 HTTP의 진화 과정&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1852/" target="_blank" rel="noopener">안전한 웹을 위해 HTTPS 이해하기: 1. HTTPS의 작동 원리&lt;/a>&lt;br>
&lt;a href="https://yozm.wishket.com/magazine/detail/1862/" target="_blank" rel="noopener">안전한 웹을 위해 HTTPS 이해하기: 2. HTTPS를 강제하는 HSTS 기술&lt;/a>&lt;br>
&lt;a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Status" target="_blank" rel="noopener">HTTP status Code&lt;/a>&lt;br>
&lt;a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Methods" target="_blank" rel="noopener">HTTP 요청 메서드&lt;/a>&lt;/p></description></item><item><title>IP(Internet Protocol)</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</link><pubDate>Fri, 04 Oct 2024 02:03:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/ip/</guid><description>
&lt;h2>IP (Internet Protocol)&lt;span class="hx-absolute -hx-mt-20" id="ip-internet-protocol">&lt;/span>
&lt;a href="#ip-internet-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>데이터 패킷이 네트워크를 통해 이동하고 올바른 대상에 도착할 수 있도록 데이터 패킷을 라우팅하고 주소를 지정하기 위한 프로토콜 또는 규칙의 집합이다.&lt;/p>
&lt;p>OSI 7계층에서 네트워크 계층(3계층)에 위치하며, TCP/IP 4계층에서는 인터넷 계층에 해당한다.&lt;br>
이 위치에서 IP는 데이터 패킷의 주소지정과 라우팅을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>IP 정보는 각 패킷에 첨부되며, 이 정보는 라우터가 패킷을 올바른 위치로 보내는 데 도움이 된다.&lt;br>
인터넷에 연결하는 모든 장치나 도메인에는 IP 주소가 할당되며, 패킷이 연결된 IP 주소로 전달되면 데이터가 필요한 곳에 도착한다.&lt;br>
패킷이 목적지에 도착하면 IP 와 함께 어떤 전송 프로토콜이 사용되는지에 따라 다르게 처리된다.&lt;br>
모든 IP 데이터 패킷은 특정 정보를 특정 순서로 표시해야 하며 모든 IP 주소는 표준화된 형식을 따른다.&lt;/p>
&lt;p>&lt;img src="internet_protocol_ip_address_diagram.svg" alt="Internet Protocol(IP) Address Diagram" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/" target="_blank" rel="noopener">https://www.cloudflare.com/ko-kr/learning/network-layer/internet-protocol/&lt;/a> _&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>비연결성: 데이터 전송 전 연결 설정 과정이 없다.&lt;/li>
&lt;li>비신뢰성: 데이터 전송의 신뢰성을 보장하지 않는다.&lt;/li>
&lt;li>단편화(Fragmentation): 큰 패킷을 작은 단위로 나누어 전송할 수 있다&lt;/li>
&lt;li>라우팅(Routing): 목적지까지의 경로를 결정하여 패킷을 전달한다&lt;/li>
&lt;/ol>
&lt;h3>IP 패킷 구조&lt;span class="hx-absolute -hx-mt-20" id="ip-패킷-구조">&lt;/span>
&lt;a href="#ip-%ed%8c%a8%ed%82%b7-%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 패킷은 헤더와 데이터로 구성된다.&lt;br>
주요 헤더 필드는 다음과 같다:&lt;/p>
&lt;ul>
&lt;li>버전&lt;/li>
&lt;li>헤더 길이&lt;/li>
&lt;li>서비스 유형&lt;/li>
&lt;li>전체 길이&lt;/li>
&lt;li>식별자&lt;/li>
&lt;li>플래그&lt;/li>
&lt;li>프래그먼트 오프셋&lt;/li>
&lt;li>TTL (Time To Live)&lt;/li>
&lt;li>프로토콜&lt;/li>
&lt;li>헤더 체크섬&lt;/li>
&lt;li>출발지 IP 주소&lt;/li>
&lt;li>목적지 IP 주소&lt;/li>
&lt;/ul>
&lt;h3>IP의 한계와 보완&lt;span class="hx-absolute -hx-mt-20" id="ip의-한계와-보완">&lt;/span>
&lt;a href="#ip%ec%9d%98-%ed%95%9c%ea%b3%84%ec%99%80-%eb%b3%b4%ec%99%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP의 주요 한계점은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>신뢰성 부족: 패킷 손실, 중복, 순서 뒤바뀜 등의 문제가 발생할 수 있다.&lt;/li>
&lt;li>흐름 제어 부재: 수신자의 처리 능력을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;li>혼잡 제어 부재: 네트워크 상황을 고려하지 않고 데이터를 전송한다.&lt;/li>
&lt;/ol>
&lt;p>이러한 한계는 상위 계층 프로토콜인 TCP에 의해 보완된다.&lt;/p>
&lt;h3>IP 라우팅&lt;span class="hx-absolute -hx-mt-20" id="ip-라우팅">&lt;/span>
&lt;a href="#ip-%eb%9d%bc%ec%9a%b0%ed%8c%85" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 라우팅은 패킷이 목적지까지 도달하는 경로를 결정하는 과정.&lt;br>
주요 개념은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>라우팅 테이블: 목적지 네트워크와 다음 홉 정보를 저장한다.&lt;/li>
&lt;li>최단 경로 알고리즘: 최적의 경로를 결정하는 데 사용된다.&lt;/li>
&lt;li>BGP (Border Gateway Protocol): 자율 시스템 간의 라우팅에 사용된다.&lt;/li>
&lt;/ol>
&lt;h3>IP와 관련된 주요 프로토콜&lt;span class="hx-absolute -hx-mt-20" id="ip와-관련된-주요-프로토콜">&lt;/span>
&lt;a href="#ip%ec%99%80-%ea%b4%80%eb%a0%a8%eb%90%9c-%ec%a3%bc%ec%9a%94-%ed%94%84%eb%a1%9c%ed%86%a0%ec%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>ARP (Address Resolution Protocol): IP 주소를 MAC 주소로 변환한다.&lt;/li>
&lt;li>ICMP (Internet Control Message Protocol): 네트워크 상태 및 오류 보고에 사용된다.&lt;/li>
&lt;li>DHCP (Dynamic Host Configuration Protocol): IP 주소를 동적으로 할당한다.&lt;/li>
&lt;/ol>
&lt;h3>IP 보안&lt;span class="hx-absolute -hx-mt-20" id="ip-보안">&lt;/span>
&lt;a href="#ip-%eb%b3%b4%ec%95%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IPSec (Internet Protocol Security)는 IP 계층에서 보안을 제공하는 프로토콜 집합이다.&lt;br>
주요 기능은 다음과 같다:&lt;/p>
&lt;ol>
&lt;li>데이터 무결성&lt;/li>
&lt;li>데이터 기밀성&lt;/li>
&lt;li>인증&lt;/li>
&lt;/ol>
&lt;p>주요 특징:&lt;/p>
&lt;ol>
&lt;li>데이터의 기밀성, 무결성, 인증을 제공한다.&lt;/li>
&lt;li>두 가지 주요 프로토콜(AH, ESP)을 사용한다.&lt;/li>
&lt;li>두 가지 동작 모드(전송 모드, 터널 모드)를 지원한다.&lt;/li>
&lt;li>키 관리 및 보안 연관(SA) 협상을 위해 IKE 프로토콜을 사용한다.&lt;/li>
&lt;/ol>
&lt;p>장점:&lt;/p>
&lt;ol>
&lt;li>강력한 보안: 암호화와 인증을 통해 데이터를 보호한다.&lt;/li>
&lt;li>유연성: 다양한 네트워크 환경에서 사용 가능하다다.&lt;/li>
&lt;li>투명성: 상위 계층 애플리케이션에 영향을 주지 않고 적용 가능하다.&lt;/li>
&lt;li>VPN 구현에 적합: 안전한 원격 접속을 제공한다.&lt;/li>
&lt;li>표준화: 다양한 벤더 간 상호 운용성을 제공한다.&lt;/li>
&lt;/ol>
&lt;p>동작 방식:&lt;/p>
&lt;ol>
&lt;li>트래픽 식별: IPSec 정책에 따라 보호가 필요한 트래픽을 식별한다.&lt;/li>
&lt;li>SA(Security Association) 협상: IKE 프로토콜을 사용하여 통신 당사자 간 보안 매개변수를 협상한다.&lt;/li>
&lt;li>데이터 처리:
&lt;ul>
&lt;li>AH(Authentication Header): 데이터 무결성과 인증을 제공한다.&lt;/li>
&lt;li>ESP(Encapsulating Security Payload): 암호화, 무결성, 인증을 제공한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패킷 전송: 암호화 및 인증된 패킷을 목적지로 전송한다.&lt;/li>
&lt;li>수신 및 처리: 수신 측에서 패킷을 복호화하고 인증한다.&lt;/li>
&lt;/ol>
&lt;p>IPSec의 주요 프로토콜:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>AH (Authentication Header)&lt;/p>
&lt;ul>
&lt;li>데이터 무결성, 데이터 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 헤더와 페이로드를 인증합니다.&lt;/li>
&lt;li>암호화는 제공하지 않습니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ESP (Encapsulating Security Payload)&lt;/p>
&lt;ul>
&lt;li>데이터 기밀성(암호화), 무결성, 출처 인증, 재전송 방지 기능을 제공한다.&lt;/li>
&lt;li>IP 데이터그램 부분만 인증합니다.&lt;/li>
&lt;li>암호화 기능을 제공합니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>IKE (Internet Key Exchange)&lt;/p>
&lt;ul>
&lt;li>SA(Security Association) 협상과 키 교환을 위한 프로토콜이다.&lt;/li>
&lt;li>AH와 ESP에서 사용할 암호화 알고리즘, 키 등의 보안 매개변수를 설정한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>IP Address(IP 주소)&lt;span class="hx-absolute -hx-mt-20" id="ip-addressip-주소">&lt;/span>
&lt;a href="#ip-addressip-%ec%a3%bc%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>IP 주소(IP Address)는 인터넷 프로토콜(Internet Protocol)에서 컴퓨터 네트워크에 연결된 장치들을 식별하기 위해 사용되는 고유한 주소이다.&lt;br>
네트워크 상의 장치를 고유하게 식별하는 숫자 체계로 데이터 패킷의 출발지와 목적지를 지정하는 데 사용된다.&lt;/p>
&lt;p>네트워크에 연결된 장치가 라우터이든, 일반 서버이든, 모든 기계는 이 특수한 번호를 가지고 있어야 한다. 이 번호를 이용하여 발신자를 대신하여 메시지가 전송되고 수신자를 향하여 예정된 목적지로 전달된다. 각 IP 패킷에는 패킷을 보내는 장치 또는 도메인의 IP 주소와 대상 수신자의 IP 주소가 모두 포함된다. IP Address 는 IPv4 와 IPv6 중 어떤 프로토콜을 사용하는지에 따라 형식이 다르다.&lt;/p>
&lt;p>IP 주소는 인터넷과 네트워크 통신의 근간을 이루는 중요한 요소로, 효율적인 데이터 전송과 네트워크 관리를 가능하게 한다.&lt;/p>
&lt;h4>IPv4 와 IPv6&lt;span class="hx-absolute -hx-mt-20" id="ipv4-와-ipv6">&lt;/span>
&lt;a href="#ipv4-%ec%99%80-ipv6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>인터넷 프로토콜 (IP) 주소 지정 시스템의 두 가지 버전이다.&lt;br>
IPv6 는 IPv4 와의 하위 호환성을 제공하지 않아, 웹사이트가 IPv4 에서 실행되고 있지만 장치와 ISP 가 최신 프로토콜을 사용하는 경우 웹사이트에 접속할 수 없다.&lt;br>
두 버전은 동시에 실행할 수 있지만, IPv4 와 IPv6 장치 간의 통신을 용이하게 하기 위해서는 특별한 조치를 구현해야 한다. Network Address Translation(NAT) 과 같은 다른 주소 지정 시스템을 계층화하여 추상화는 것이 있다.&lt;br>
IPv4 인터넷 주소 중 약 5 억 8800 만 개는 예약된 주소이며 나머지는 공개적으로 사용할 수 있다.&lt;/p>
&lt;h5>IPv4 주소의 구성&lt;span class="hx-absolute -hx-mt-20" id="ipv4-주소의-구성">&lt;/span>
&lt;a href="#ipv4-%ec%a3%bc%ec%86%8c%ec%9d%98-%ea%b5%ac%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>호스트가 속한 네트워크 주소인 Network Address, 호스트의 주소인 Host Address 로 구성된다.
&lt;ul>
&lt;li>Network Address 는 어떤 네트워크인지를 나타내 다른 네트워크와 구분하는 역할을 한다.&lt;/li>
&lt;li>Host Address 는 해당 네트워크의 어느 호스트인지를 나타내 다른 호스트와 구분하는 역할을 한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Network Address 가 다르다는 것은 서로 다른 네트워크라는 의미이고, 라우터를 통하지 않고는 통신이 불가능하다는 의미이다.&lt;/li>
&lt;li>서로 다른 네트워크가 라우터를 통해 통신이 가능한 것은 라우터가 IP 주소의 Network Address 를 보고 라우팅하여 데이터를 전송하기 때문이다.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="anatomy-of-ipv4-address.webp" alt="Anatomy of IPv4 Address" loading="lazy" />&lt;br>
_Source: &lt;a href="https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/" target="_blank" rel="noopener">https://thecybersecurityman.com/2017/12/29/ip-addresses-version-4/&lt;/a> _&lt;/p>
&lt;h5>IPv6 주소의 구성&lt;span class="hx-absolute -hx-mt-20" id="ipv6-주소의-구성">&lt;/span>
&lt;a href="#ipv6-%ec%a3%bc%ec%86%8c%ec%9d%98-%ea%b5%ac%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>앞 64 비트를 Network Address 로, 뒤 64 비트를 네트워크에 연결된 랜카드 장비 등에 할당하는 Interface Address 로 활용한다. (RFC 2373 에 의거)&lt;/li>
&lt;li>Network Address 부분인 64 비트 내에서 앞 48 비트는 상위 네트워크 주소로 뒤 16 비트는 하위 네트워크 주소로 활용한다. (RIR(Regional Internet Registry) 간 협의에 기초)&lt;br>
&lt;img src="whatis-ipv6_address-h.png" alt="An example of the different segments of an IPv6 address" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.techtarget.com/iotagenda/definition/IPv6-address" target="_blank" rel="noopener">https://www.techtarget.com/iotagenda/definition/IPv6-address&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>주소 체계&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 크기&lt;/td>
&lt;td>32비트 (4바이트)&lt;/td>
&lt;td>128비트 (16바이트)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 공간&lt;/td>
&lt;td>약 43억개 (2^32)&lt;/td>
&lt;td>약 340간(2^128)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 표기법&lt;/td>
&lt;td>점분할 10진수 (예: 192.168.0.1)&lt;/td>
&lt;td>16진수 콜론 표기법 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>루프백 주소&lt;/td>
&lt;td>127.0.0.1&lt;/td>
&lt;td>::1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>주소 관리 및 설정&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 구성 방식&lt;/td>
&lt;td>수동 구성, DHCP&lt;/td>
&lt;td>자동 구성(SLAAC), DHCPv6, 수동 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변환 필요성&lt;/td>
&lt;td>NAT 필요 (주소 부족)&lt;/td>
&lt;td>NAT 불필요 (주소 충분)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>개인정보 보호&lt;/td>
&lt;td>제한적&lt;/td>
&lt;td>임시 주소 할당으로 향상된 보안&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>프로토콜 특성&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>코어 프로토콜&lt;/td>
&lt;td>IPv4&lt;/td>
&lt;td>IPv6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비연결 데이터 전송&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;td>패킷 스위칭 방식&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>통신 유형&lt;/td>
&lt;td>유니캐스트, 브로드캐스트, 멀티캐스트&lt;/td>
&lt;td>유니캐스트, 멀티캐스트, 애니캐스트&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>패킷 처리&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 크기&lt;/td>
&lt;td>20-60바이트 (가변)&lt;/td>
&lt;td>40바이트 (고정)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>헤더 체크섬&lt;/td>
&lt;td>필수&lt;/td>
&lt;td>불필요 (상위 계층에서 처리)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>프래그먼테이션&lt;/td>
&lt;td>라우터와 송신 호스트에서 수행&lt;/td>
&lt;td>송신 호스트에서만 수행&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>네트워크 운영&lt;/strong>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS 해결 방식&lt;/td>
&lt;td>IPv4 주소 레코드(A)&lt;/td>
&lt;td>IPv6 주소 레코드(AAAA)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>라우팅 효율성&lt;/td>
&lt;td>상대적으로 낮음&lt;/td>
&lt;td>단순화된 헤더로 향상된 효율성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>패킷 주소 지정&lt;/td>
&lt;td>복잡한 주소 지정 체계&lt;/td>
&lt;td>단순화된 주소 지정 체계&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>QoS 지원&lt;/td>
&lt;td>Type of Service 필드 사용&lt;/td>
&lt;td>Traffic Class와 Flow Label 필드로 개선된 지원&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h5>IPv4 와 IPv6 의 Header 비교&lt;span class="hx-absolute -hx-mt-20" id="ipv4-와-ipv6-의-header-비교">&lt;/span>
&lt;a href="#ipv4-%ec%99%80-ipv6-%ec%9d%98-header-%eb%b9%84%ea%b5%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ul>
&lt;li>IPv4 와 IPv6 의 패킷은 서로 다르게 구성되어 있다.&lt;br>
&lt;img src="comparing-ipv4-and-ipv6-headers.png" alt="IPv4 Header vs IPv6 Header" loading="lazy" />&lt;br>
_Source: &lt;a href="https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6" target="_blank" rel="noopener">https://www.networkacademy.io/ccna/ipv6/ipv4-vs-ipv6&lt;/a> _&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>필드&lt;/th>
&lt;th>IPv4&lt;/th>
&lt;th>IPv6&lt;/th>
&lt;th>설명&lt;/th>
&lt;th>Bit&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>Version&lt;/td>
&lt;td>IP 프로토콜 버전&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IHL&lt;/td>
&lt;td>IHL&lt;/td>
&lt;td>-&lt;/td>
&lt;td>헤더 길이 (IPv6 에서는 고정 길이로 제거됨)&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type of Service&lt;/td>
&lt;td>Type of Service&lt;/td>
&lt;td>Traffic Class&lt;/td>
&lt;td>패킷 우선순위 또는 서비스 유형 지정 지정&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total Length&lt;/td>
&lt;td>Total Length&lt;/td>
&lt;td>Payload Length&lt;/td>
&lt;td>데이터 페이로드 길이&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identification&lt;/td>
&lt;td>Identification&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flags&lt;/td>
&lt;td>Flags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fragment Offset&lt;/td>
&lt;td>Fragment Offset&lt;/td>
&lt;td>-&lt;/td>
&lt;td>단편화 관련 필드 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>13&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TTL&lt;/td>
&lt;td>TTL&lt;/td>
&lt;td>Hop Limit&lt;/td>
&lt;td>패킷의 최대 홉 수&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protocol&lt;/td>
&lt;td>Protocol&lt;/td>
&lt;td>Next Header&lt;/td>
&lt;td>상위 계층 프로토콜 식별&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Header Checksum&lt;/td>
&lt;td>Header Checksum&lt;/td>
&lt;td>-&lt;/td>
&lt;td>오류 검출 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>Source Address&lt;/td>
&lt;td>송신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>Destination Address&lt;/td>
&lt;td>수신자의 IP 주소&lt;/td>
&lt;td>IPv4: 32&lt;br>IPv6: 128&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Options&lt;/td>
&lt;td>Options&lt;/td>
&lt;td>-&lt;/td>
&lt;td>추가 옵션 (IPv6 에서는 확장 헤더로 대체됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Padding&lt;/td>
&lt;td>Padding&lt;/td>
&lt;td>-&lt;/td>
&lt;td>패딩 (IPv6 에서는 제거됨)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Label&lt;/td>
&lt;td>-&lt;/td>
&lt;td>Flow Label&lt;/td>
&lt;td>플로우 식별을 위한 레이블&lt;/td>
&lt;td>20&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>구조&lt;span class="hx-absolute -hx-mt-20" id="구조">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%a1%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>IPv4: 32비트 주소 체계, 점으로 구분된 4개의 8비트 필드 (예: 192.168.1.1)&lt;/li>
&lt;li>IPv6: 128비트 주소 체계, 16진수로 표현 (예: 2001:0db8:85a3:0000:0000:8a2e:0370:7334)&lt;/li>
&lt;/ul>
&lt;h4>할당 방식&lt;span class="hx-absolute -hx-mt-20" id="할당-방식">&lt;/span>
&lt;a href="#%ed%95%a0%eb%8b%b9-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>정적 IP: 수동으로 할당되는 고정 주소&lt;/li>
&lt;li>동적 IP: DHCP 등을 통해 자동으로 할당되는 주소&lt;/li>
&lt;/ul>
&lt;h4>중요성&lt;span class="hx-absolute -hx-mt-20" id="중요성">&lt;/span>
&lt;a href="#%ec%a4%91%ec%9a%94%ec%84%b1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>인터넷 통신의 기본 요소&lt;/li>
&lt;li>네트워크 장치 식별 및 데이터 라우팅에 필수적&lt;/li>
&lt;/ul>
&lt;h4>구성 요소&lt;span class="hx-absolute -hx-mt-20" id="구성-요소">&lt;/span>
&lt;a href="#%ea%b5%ac%ec%84%b1-%ec%9a%94%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>네트워크 ID: 장치가 속한 네트워크를 식별&lt;/li>
&lt;li>호스트 ID: 해당 네트워크 내의 특정 장치를 식별&lt;/li>
&lt;/ul>
&lt;h4>클래스 체계 (IPv4)&lt;span class="hx-absolute -hx-mt-20" id="클래스-체계-ipv4">&lt;/span>
&lt;a href="#%ed%81%b4%eb%9e%98%ec%8a%a4-%ec%b2%b4%ea%b3%84-ipv4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>IPv4 도입 초기에는 클래스 (Class) 를 기준으로 Network Class 와 Host Address 를 나누는 방식을 사용했지만, 클래스 방식의 비효율성으로 인해 현재는 서브넷 마스크 (Subnet mask) 방식을 사용하고 있다.&lt;/p>
&lt;p>네트워크 클래스 (Network Class)는 IP 주소를 체계적으로 분류하고 할당하기 위해 만들어진 시스템으로, IP주소를 특정 범위로 나누어 분류한 체계이다.&lt;/p>
&lt;p>&lt;img src="visual102-02.jpg" alt="IPv4주소 구성" loading="lazy" />&lt;br>
_Source: &lt;a href="https://xn--3e0bx5euxnjje69i70af08bea817g.xn" target="_blank" rel="noopener">https://xn--3e0bx5euxnjje69i70af08bea817g.xn&lt;/a>&amp;ndash;3e0b707e/jsp/resources/ipv4Info.jsp _&lt;/p>
&lt;p>클래스 기준은 IP 주소를 앞에서 8 비트씩 나눈 그룹을 조합하여 Network Address 와 Host Address 를 정한 것이다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>클래스&lt;/th>
&lt;th>A&lt;/th>
&lt;th>B&lt;/th>
&lt;th>C&lt;/th>
&lt;th>D&lt;/th>
&lt;th>E&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>네트워크 주소&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>호스트 주소&lt;/td>
&lt;td>24비트&lt;/td>
&lt;td>16비트&lt;/td>
&lt;td>8비트&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>범위&lt;/td>
&lt;td>1.0.0.0 ~ 126.255.255.255&lt;/td>
&lt;td>128.0.0.0 ~ 191.255.255.255&lt;/td>
&lt;td>192.0.0.0 ~ 223.255.255.255&lt;/td>
&lt;td>224.0.0.0 ~ 239.255.255.255&lt;/td>
&lt;td>240.0.0.0 ~ 255.255.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>기본 서브넷 마스크&lt;/td>
&lt;td>255.0.0.0&lt;/td>
&lt;td>255.255.0.0&lt;/td>
&lt;td>255.255.255.0&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>사설 IP 주소&lt;/td>
&lt;td>10.0.0.0 ~ 10.255.255.255&lt;/td>
&lt;td>172.16.0.0 ~ 172.31.255.255&lt;/td>
&lt;td>192.168.0.0 ~ 192.168.255.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>브로드캐스트 주소&lt;/td>
&lt;td>x.255.255.255&lt;/td>
&lt;td>x.x.255.255&lt;/td>
&lt;td>x.x.x.255&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>특수 용도&lt;/td>
&lt;td>대규모 네트워크&lt;/td>
&lt;td>중규모 네트워크&lt;/td>
&lt;td>소규모 네트워크&lt;/td>
&lt;td>멀티캐스트용&lt;/td>
&lt;td>예약된 주소로 미래에 사용될 용도로 구분해 놓은 네트워크&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>클래스 A:&lt;/p>
&lt;ul>
&lt;li>IP 주소 32 비트 중 앞 8 비트를 Network Address 로, 다음 24 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>제일 첫번째 비트는 클래스 A 의 식별비트인 &lt;code>0&lt;/code> 이 할당되기 때문에 00000000 ~ 01111111 의 번호가 Network Address 로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 A 의 네트워크 부는 0 ~ 127 번호가 할당&lt;/strong>&lt;/li>
&lt;li>Network Address 의 0 과 127 은 예약된 network ID 로 제외된다.&lt;br>
클래스 B:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 16 비트를 Network Address 로, 다음 16 비트를 Host Address 를 정한 것.&lt;/li>
&lt;li>맨 앞 2 비트는 클래스 B 의 식별 비트인 &lt;code>10&lt;/code> 으로 할당되기 때문에 10000000 ~ 10111111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 B 의 네트워크 부는 128.0 ~ 191.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 172.16~172.31 은 예약된 network ID 로 제외된다.&lt;br>
클래스 C:&lt;/li>
&lt;li>IP 주소 32 비트 중 앞 24 비트를 Network Address 로, 다음 8 비트를 Host Address 를 정한 것&lt;/li>
&lt;li>맨 앞 3 비트는 클래스 C 의 식별 비트인 &amp;lsquo;110&amp;rsquo; 으로 할당되기 때문에 11000000 ~ 11011111 의 번호가 Network Address 의 첫 8 비트로 사용된다.&lt;/li>
&lt;li>&lt;strong>클래스 C 의 네트워크 부는 192.0.0 ~ 255.255.255 번호가 할당&lt;/strong>.&lt;/li>
&lt;li>Network Address 의 192.168.0~192.168.255 은 예약된 network ID 로 제외된다.&lt;/li>
&lt;/ul>
&lt;p>추가 정보:&lt;/p>
&lt;ul>
&lt;li>클래스 A, B, C는 유니캐스트 통신에 사용된다.&lt;/li>
&lt;li>127.0.0.0 ~ 127.255.255.255는 루프백 주소로 사용된다.&lt;/li>
&lt;li>사설 IP 주소는 인터넷에 직접 연결되지 않는 내부 네트워크에서 사용된다.&lt;/li>
&lt;li>현대 네트워크에서는 CIDR(Classless Inter-Domain Routing)을 사용하여 더 유연한 주소 할당이 가능하다.&lt;/li>
&lt;/ul>
&lt;p>주의사항:&lt;/p>
&lt;ul>
&lt;li>클래스 A의 0.0.0.0은 특수 용도로 사용되며, 127.x.x.x는 루프백 주소로 사용된다.&lt;/li>
&lt;li>각 클래스의 네트워크 주소와 브로드캐스트 주소는 호스트 주소로 사용할 수 없다.&lt;/li>
&lt;li>D와 E 클래스는 일반적인 호스트 주소 할당에 사용되지 않는다.&lt;/li>
&lt;/ul>
&lt;h4>종류&lt;span class="hx-absolute -hx-mt-20" id="종류">&lt;/span>
&lt;a href="#%ec%a2%85%eb%a5%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>Public IP&lt;/th>
&lt;th>Private IP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>정의&lt;/td>
&lt;td>인터넷에서 직접 접근 가능한 고유한 주소&lt;/td>
&lt;td>로컬 네트워크 내에서 사용되는 내부 주소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>할당 주체&lt;/td>
&lt;td>ISP(인터넷 서비스 제공자)&lt;/td>
&lt;td>라우터 또는 네트워크 관리자&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>고유성&lt;/td>
&lt;td>인터넷 상에서 전 세계적으로 유일&lt;/td>
&lt;td>로컬 네트워크 내에서만 유일&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>접근성&lt;/td>
&lt;td>내부 및 외부에서 접근 가능&lt;/td>
&lt;td>로컬 네트워크 내부에서만 접근 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 범위&lt;/td>
&lt;td>ISP에 의해 할당된 모든 주소&lt;/td>
&lt;td>클래스 A: 10.0.0.0 - 10.255.255.255&lt;br>클래스 B: 172.16.0.0 - 172.31.255.255&lt;br>클래스 C: 192.168.0.0 - 192.168.255.255&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>인터넷 연결&lt;/td>
&lt;td>직접 인터넷에 연결 가능&lt;/td>
&lt;td>NAT를 통해 인터넷에 연결&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>보안&lt;/td>
&lt;td>외부 공격에 더 취약&lt;/td>
&lt;td>외부로부터 직접 접근 불가능하여 상대적으로 안전&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>비용&lt;/td>
&lt;td>일반적으로 유료&lt;/td>
&lt;td>무료로 사용 가능&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>용도&lt;/td>
&lt;td>서버 호스팅, 원격 접속 등&lt;/td>
&lt;td>가정이나 회사 내부 네트워크 통신&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>주소 변경&lt;/td>
&lt;td>고정 또는 동적으로 변경 가능&lt;/td>
&lt;td>로컬 네트워크 내에서 변경 가능&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Public IP (공인 IP)는 사용자의 전체 네트워크에 적용되기에 동일한 인터넷 연결을 사용하는 장치는 IP 주소를 공유하게 된다. 그리고, 인터넷 업체는 공인 IP 주소의 사용자가 누구인지 파악할 수 있기에 공인 IP 주소를 사용하는 경우 인터넷 활동이 추적되고 모니터링될 수 있다.&lt;/p>
&lt;p>Private IP (사설 IP)는 로컬 네트워크에서 할당되며 다른 네트워크의 IP 주소와 중복될 수 있다. 각자의 내부 네트워크에서 사용되기에 다른 네트워크의 IP 주소와 중복되더라도 문제가 없다. 대신 동일한 로컬 네트워크에 연결된 장치에는 같은 사설 IP 주소를 할당할 수 없다. 전 세계에는 수백만 개의 사설 네트워크가 존재하며 사설 네트워크에 연결된 장치에는 다음 사설 IP 대역 내의 IP 주소가 할당된다.&lt;/p>
&lt;h4>Loopback Address (루프백 주소)&lt;span class="hx-absolute -hx-mt-20" id="loopback-address-루프백-주소">&lt;/span>
&lt;a href="#loopback-address-%eb%a3%a8%ed%94%84%eb%b0%b1-%ec%a3%bc%ec%86%8c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>컴퓨터가 자신을 가리키는 데 사용하는 특수 목적의 IP 주소.&lt;/p>
&lt;p>용도:&lt;/p>
&lt;ul>
&lt;li>로컬 시스템 테스트.&lt;/li>
&lt;li>네트워크 소프트웨어 디버깅&lt;/li>
&lt;li>로컬 서버와의 통신.&lt;/li>
&lt;/ul>
&lt;p>특징:&lt;/p>
&lt;ul>
&lt;li>외부로 라우팅되지 않음.&lt;/li>
&lt;li>물리적 네트워크 인터페이스가 필요 없음.&lt;/li>
&lt;li>항상 사용 가능하며 항상 작동 상태임.&lt;/li>
&lt;/ul>
&lt;p>동작 원리:&lt;br>
Loopback Address (루프백 주소) 로 보내진 데이터는 실제로 네트워크로 나가지 않고, 네트워크 스택 내에서 즉시 &lt;strong>Loopback(루프백)&lt;/strong> 되어 다시 수신된다.&lt;/p>
&lt;p>보안:&lt;br>
외부에서 접근할 수 없어 상대적으로 안전함.&lt;/p>
&lt;p>네트워크 구성:&lt;br>
대부분의 운영 체제에서 루프백 인터페이스는 자동으로 구성되며, 별도의 설정이 필요없다.&lt;/p>
&lt;p>루프백 범위:&lt;br>
IPv4 에서 전체 127.0.0.0/8 네트워크가 루프백을 위해 예약되어 있지만, 일반적으로 127.0.0.1 만 사용된다.&lt;/p>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>TCP</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/tcp/</link><pubDate>Wed, 02 Oct 2024 04:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/tcp/</guid><description>
&lt;h2>TCP (Transmission Control Protocol)&lt;span class="hx-absolute -hx-mt-20" id="tcp-transmission-control-protocol">&lt;/span>
&lt;a href="#tcp-transmission-control-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 프로토콜 스위트의 핵심 프로토콜 중 하나로, IP(Internet Protocol)와 함께 TCP/IP로 널리 알려져 있다.&lt;br>
TCP는 연결 지향적이며, 신뢰성 있는 데이터 전송을 보장하는 전송 계층 프로토콜이다.&lt;/p>
&lt;p>OSI 7계층에서 TCP는 전송 계층(Transport Layer)인 4계층에 위치하며,&lt;br>
TCP/IP 4계층 모델에서도 마찬가지로 전송 계층에 해당한다.&lt;br>
이 위치에서 TCP는 데이터의 신뢰성 있는 전송을 담당하는 핵심적인 역할을 수행한다.&lt;/p>
&lt;p>TCP의 가장 중요한 특징은 연결 지향성과 신뢰성이다.&lt;br>
연결 지향성이란 데이터를 주고받기 전에 먼저 연결을 설정하는 것을 의미하는데, 이는 3-way handshaking이라는 과정을 통해 이루어진다.&lt;br>
신뢰성은 데이터가 손실없이 순서대로 전달되는 것을 보장한다는 의미이다.&lt;/p>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>신뢰성 보장&lt;/strong>: TCP는 데이터가 정확하게, 순서대로, 그리고 오류 없이 전달되도록 보장한다.&lt;/li>
&lt;li>&lt;strong>연결 지향적&lt;/strong>: 데이터 전송 전에 연결을 설정하고, 전송 후에는 연결을 종료한다.&lt;/li>
&lt;li>&lt;strong>흐름 제어&lt;/strong>: 수신자의 처리 능력에 맞춰 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>&lt;strong>혼잡 제어&lt;/strong>: 네트워크의 혼잡 상태를 감지하고 데이터 전송 속도를 조절한다.&lt;/li>
&lt;li>&lt;strong>전이중(Full-Duplex) 통신&lt;/strong>: 양방향으로 동시에 데이터 전송이 가능하다.&lt;/li>
&lt;li>&lt;strong>점대점(Point to Point) 통신&lt;/strong>: 정확히 2개의 종단점을 가진다.&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Window Size:&lt;br>
한 번에 전송할 수 있는 데이터의 양을 조절하는 값.&lt;br>
이는 흐름제어와 직접적인 관련이 있으며, 수신측의 처리 능력에 따라 동적으로 조절된다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>MSS(Maximum Segment Size):&lt;br>
TCP가 한 번에 전송할 수 있는 최대 세그먼트 크기를 의미한다.&lt;br>
이는 네트워크의 특성을 고려하여 설정된다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>타임아웃과 재전송:&lt;br>
일정 시간 내에 ACK를 받지 못하면 패킷 손실로 간주하고 재전송을 수행한다.&lt;br>
이는 데이터의 신뢰성을 보장하는 중요한 메커니즘이다.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Slow Start:&lt;br>
네트워크 혼잡을 방지하기 위해 처음에는 적은 양의 데이터부터 전송을 시작한다.&lt;/p>
&lt;/blockquote>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>신뢰성 있는 데이터 전송&lt;/li>
&lt;li>순서 보장&lt;/li>
&lt;li>오류 검출 및 복구&lt;/li>
&lt;li>흐름 제어를 통한 효율적인 네트워크 사용&lt;/li>
&lt;li>다양한 애플리케이션 지원 (웹 브라우징, 이메일, 파일 전송 등)&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;pre class="mermaid hx-mt-6">%%{init: {'theme': 'default', 'themeVariables': { 'fontSize': '12px'}, 'flowchart': {'width': 400, 'height': 250, 'diagramPadding': 8}}}%%
sequenceDiagram
participant Client
participant Server
Note over Client,Server: 3-way Handshake (연결 수립)
Client->>Server: SYN (Seq = x)
Server-->>Client: SYN + ACK (Seq = y, Ack = x+1)
Client->>Server: ACK (Seq = x+1, Ack = y+1)
Note over Client,Server: 데이터 전송
Note over Client,Server: 4-way Handshake (연결 종료)
Client->>Server: FIN
Server-->>Client: ACK
Note right of Server: CLOSE_WAIT 상태
Server->>Client: FIN
Note left of Client: TIME_WAIT 상태
Client-->>Server: ACK&lt;/pre>&lt;ol start="2">
&lt;li>
&lt;p>데이터 전송:&lt;/p>
&lt;ul>
&lt;li>순차번호(Sequence Number)를 사용하여 패킷의 순서를 보장한다.&lt;/li>
&lt;li>확인응답(ACK)을 통해 패킷의 수신을 확인한다.&lt;/li>
&lt;li>흐름제어와 혼잡제어를 통해 네트워크의 효율성을 관리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>연결 종료 (4-way handshaking):&lt;/p>
&lt;ul>
&lt;li>FIN과 ACK 패킷을 주고받으며 연결을 종료한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>연결 설정: 3-way Handshake&lt;br>
목적: 클라이언트와 서버 간의 연결을 설정하고 초기 시퀀스 번호를 동기화&lt;br>
과정&lt;/p>
&lt;ol>
&lt;li>SYN (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 연결을 시작하려고 SYN 패킷을 보낸다.&lt;/li>
&lt;li>SYN 플래그가 1로 설정된다.&lt;/li>
&lt;li>초기 시퀀스 번호(ISN)를 포함한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SYN-ACK (서버 → 클라이언트)
&lt;ul>
&lt;li>서버가 SYN을 받고 응답한다.&lt;/li>
&lt;li>SYN과 ACK 플래그가 모두 1로 설정된다.&lt;/li>
&lt;li>서버의 ISN을 포함합니다.&lt;/li>
&lt;li>확인 응답 번호는 클라이언트의 ISN + 1입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 서버의 응답을 확인합니다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정됩니다.&lt;/li>
&lt;li>확인 응답 번호는 서버의 ISN + 1입니다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이 과정이 완료되면 연결이 설정되고 데이터 전송이 시작될 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>데이터 전송&lt;br>
연결이 설정된 후, TCP는 다음과 같은 방식으로 데이터를 전송한다:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>세그먼트 분할&lt;/strong>: 큰 데이터를 작은 조각(세그먼트)으로 나눈다.&lt;/li>
&lt;li>&lt;strong>순서 번호 부여&lt;/strong>: 각 세그먼트에 번호를 매겨 순서를 보장한다.&lt;/li>
&lt;li>&lt;strong>확인 응답&lt;/strong>: 수신자는 받은 데이터에 대해 확인 응답을 보낸다.&lt;/li>
&lt;li>&lt;strong>재전송&lt;/strong>: 손실된 데이터는 자동으로 재전송된다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>연결 종료: 4-way Handshake&lt;br>
목적: 클라이언트와 서버 간의 연결을 안전하게 종료한다.&lt;br>
과정&lt;/p>
&lt;ol>
&lt;li>FIN (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 연결 종료를 요청한다.&lt;/li>
&lt;li>FIN 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (서버 → 클라이언트)
&lt;ul>
&lt;li>서버가 FIN을 받았음을 확인한다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정된다.&lt;/li>
&lt;li>이 시점에서 클라이언트→서버 방향의 연결이 닫힌다.&lt;br>
3.FIN (서버 → 클라이언트)&lt;/li>
&lt;li>서버가 모든 데이터 전송을 완료하고 연결 종료를 요청한다.&lt;/li>
&lt;li>FIN 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ACK (클라이언트 → 서버)
&lt;ul>
&lt;li>클라이언트가 서버의 FIN을 확인한다.&lt;/li>
&lt;li>ACK 플래그가 1로 설정된다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>이 과정이 완료되면 연결이 완전히 종료된다.&lt;/li>
&lt;li>클라이언트는 마지막 ACK 전송 후 일정 시간 (일반적으로 2MSL) 동안 TIME_WAIT 상태를 유지하여 지연된 패킷을 처리한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>데이터를 세그먼트로 나누는 이유&lt;span class="hx-absolute -hx-mt-20" id="데이터를-세그먼트로-나누는-이유">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0%eb%a5%bc-%ec%84%b8%ea%b7%b8%eb%a8%bc%ed%8a%b8%eb%a1%9c-%eb%82%98%eb%88%84%eb%8a%94-%ec%9d%b4%ec%9c%a0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>네트워크 제한 사항 준수
&lt;ol>
&lt;li>MTU(Maximum Transmission Unit) 제한: 네트워크 계층 프로토콜마다 MTU가 다르며, TCP는 이를 초과하지 않도록 데이터를 분할한다.&lt;/li>
&lt;li>효율적인 전송: 큰 데이터 스트림을 작은 세그먼트로 나누어 네트워크 패킷에 맞게 전송한다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>신뢰성 향상
&lt;ol>
&lt;li>오류 처리: 작은 세그먼트로 나누면 오류 발생 시 해당 세그먼트만 재전송할 수 있어 효율적이다.&lt;/li>
&lt;li>순서 보장: 각 세그먼트에 시퀀스 번호를 할당하여 수신 측에서 올바른 순서로 재조립할 수 있다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>흐름 제어 및 혼잡 제어
&lt;ol>
&lt;li>수신자 처리 능력 고려: 세그먼트 단위로 전송함으로써 수신자의 처리 능력에 맞춰 데이터 전송 속도를 조절할 수 있다.&lt;/li>
&lt;li>네트워크 상태 대응: 세그먼트 단위로 전송하면 네트워크 혼잡 상황에 더 유연하게 대응할 수 있다.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h4>세그먼트로 나누는 데이터가 에러를 감지하는 방법&lt;span class="hx-absolute -hx-mt-20" id="세그먼트로-나누는-데이터가-에러를-감지하는-방법">&lt;/span>
&lt;a href="#%ec%84%b8%ea%b7%b8%eb%a8%bc%ed%8a%b8%eb%a1%9c-%eb%82%98%eb%88%84%eb%8a%94-%eb%8d%b0%ec%9d%b4%ed%84%b0%ea%b0%80-%ec%97%90%eb%9f%ac%eb%a5%bc-%ea%b0%90%ec%a7%80%ed%95%98%eb%8a%94-%eb%b0%a9%eb%b2%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>TCP는 세그먼트로 나눈 데이터의 에러를 감지하기 위해 다음과 같은 방법들을 사용한다:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>체크섬(Checksum)&lt;/p>
&lt;ul>
&lt;li>각 세그먼트에는 16비트 체크섬 필드가 포함된다.&lt;/li>
&lt;li>송신자는 데이터를 기반으로 체크섬을 계산하여 세그먼트에 포함시킨다.&lt;/li>
&lt;li>수신자는 받은 세그먼트의 체크섬을 다시 계산하여 송신자의 체크섬과 비교한다.&lt;/li>
&lt;li>두 체크섬이 일치하지 않으면 해당 세그먼트는 손상된 것으로 간주하고 폐기한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>시퀀스 번호(Sequence Numbers)&lt;/p>
&lt;ul>
&lt;li>TCP는 각 데이터 세그먼트에 고유한 시퀀스 번호를 할당한다.&lt;/li>
&lt;li>이를 통해 수신자는 데이터의 순서를 확인하고 누락된 세그먼트를 감지할 수 있다.&lt;/li>
&lt;li>순서가 맞지 않는 세그먼트를 받으면 에러로 간주한다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>확인 응답(Acknowledgements)&lt;/p>
&lt;ul>
&lt;li>수신자는 성공적으로 받은 데이터에 대해 확인 응답(ACK)을 보낸다.&lt;/li>
&lt;li>송신자는 일정 시간 내에 ACK를 받지 못하면 해당 세그먼트가 손실되었다고 판단한다.&lt;/li>
&lt;li>중복된 ACK를 연속으로 받으면 특정 세그먼트의 손실을 감지할 수 있다.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>UDP</title><link>https://buenhyden.github.io/posts/networking-and-communications/protocol/udp/</link><pubDate>Wed, 02 Oct 2024 04:21:00 +0000</pubDate><guid>https://buenhyden.github.io/posts/networking-and-communications/protocol/udp/</guid><description>
&lt;h2>UDP (User Datagram Protocol)&lt;span class="hx-absolute -hx-mt-20" id="udp-user-datagram-protocol">&lt;/span>
&lt;a href="#udp-user-datagram-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>인터넷 프로토콜 스위트의 핵심 전송 계층 프로토콜 중 하나로, 비연결형 통신 방식을 통해 데이터를 빠르고 효율적으로 전송한다.&lt;br>
TCP와 달리 연결 설정 과정 없이 데이터그램 단위로 전송하며, 신뢰성보다는 속도와 실시간 처리가 중요한 애플리케이션에서 주로 사용한다.&lt;/p>
&lt;p>OSI 7계층의 전송 계층(4계층)에 속하며, TCP/IP 4계층에서도 전송 계층에 속한다.&lt;/p>
&lt;p>추가적으로 알아야 할 내용:&lt;/p>
&lt;ol>
&lt;li>포트 번호: UDP도 TCP와 마찬가지로 16비트 포트 번호를 사용하여 애플리케이션을 구분합니다.&lt;/li>
&lt;li>체크섬: UDP는 선택적으로 체크섬을 사용하여 데이터 무결성을 확인할 수 있습니다.&lt;/li>
&lt;li>MTU(Maximum Transmission Unit): UDP 데이터그램의 크기가 네트워크의 MTU를 초과하면 IP 계층에서 단편화가 발생할 수 있습니다.&lt;/li>
&lt;li>애플리케이션 레벨 신뢰성: UDP를 사용하는 애플리케이션은 필요한 경우 자체적으로 신뢰성 메커니즘을 구현해야 합니다.&lt;/li>
&lt;li>NAT 통과: UDP는 TCP에 비해 NAT(Network Address Translation) 통과가 더 쉬울 수 있습니다.&lt;/li>
&lt;li>실시간 애플리케이션: 음성 통화, 비디오 스트리밍, 온라인 게임 등 실시간 애플리케이션에서 자주 사용됩니다.&lt;/li>
&lt;li>DNS: 도메인 네임 시스템(DNS)은 주로 UDP를 사용하여 쿼리를 처리합니다.&lt;/li>
&lt;li>QUIC(Quick UDP Internet Connections): Google이 개발한 프로토콜로, UDP 위에서 동작하며 TCP의 일부 특성을 구현합니다.&lt;/li>
&lt;/ol>
&lt;h3>주요 특징&lt;span class="hx-absolute -hx-mt-20" id="주요-특징">&lt;/span>
&lt;a href="#%ec%a3%bc%ec%9a%94-%ed%8a%b9%ec%a7%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>비연결성&lt;/strong>: UDP는 연결을 설정하지 않고 바로 데이터를 전송한다.&lt;br>
TCP의 3-way handshake와 같은 연결 설정 과정이 없다.&lt;/li>
&lt;li>&lt;strong>신속성&lt;/strong>: 연결 설정 과정이 없어 TCP보다 빠른 전송이 가능하다.&lt;/li>
&lt;li>&lt;strong>비신뢰성&lt;/strong>: 데이터 전달의 보증이나 순서를 보장하지 않는다. 패킷 손실이 발생할 수 있다.&lt;/li>
&lt;li>&lt;strong>효율성&lt;/strong>: 헤더가 단순하여 오버헤드가 적고, 네트워크 부하가 적다.&lt;/li>
&lt;/ol>
&lt;h3>장점&lt;span class="hx-absolute -hx-mt-20" id="장점">&lt;/span>
&lt;a href="#%ec%9e%a5%ec%a0%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>빠른 데이터 전송&lt;/li>
&lt;li>적은 지연 시간&lt;/li>
&lt;li>간단한 구현&lt;/li>
&lt;li>작은 헤더 크기로 인한 효율적인 대역폭 사용&lt;/li>
&lt;li>브로드캐스트 및 멀티캐스트에 적합&lt;/li>
&lt;/ol>
&lt;h3>동작 방식&lt;span class="hx-absolute -hx-mt-20" id="동작-방식">&lt;/span>
&lt;a href="#%eb%8f%99%ec%9e%91-%eb%b0%a9%ec%8b%9d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>애플리케이션이 데이터를 UDP에 전달&lt;/li>
&lt;li>UDP가 데이터를 데이터그램으로 패키징&lt;/li>
&lt;li>IP 계층을 통해 데이터그램 전송&lt;/li>
&lt;li>수신측 UDP가 데이터그램을 받아 애플리케이션에 전달&lt;/li>
&lt;/ol>
&lt;h4>데이터그램&lt;span class="hx-absolute -hx-mt-20" id="데이터그램">&lt;/span>
&lt;a href="#%eb%8d%b0%ec%9d%b4%ed%84%b0%ea%b7%b8%eb%9e%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>UDP는 데이터를 데이터그램이라는 단위로 전송한다.&lt;br>
데이터그램은 독립적인 관계를 지니는 패킷을 의미한다.&lt;/p>
&lt;p>특징:&lt;/p>
&lt;ol>
&lt;li>독립성: 각 데이터그램은 독립적으로 처리되며, 다른 데이터그램과의 관계나 순서에 상관없이 전송된다.&lt;/li>
&lt;li>비연결성: 데이터그램은 연결 설정 없이 바로 전송됩니다. 이는 TCP의 연결 지향적 특성과 대조된다.&lt;/li>
&lt;li>신뢰성 부족: UDP는 데이터그램의 전달을 보장하지 않으며, 수신 여부를 확인하지 않는다.&lt;/li>
&lt;li>순서 보장 없음: 데이터그램의 전송 순서가 바뀔 수 있으며, UDP는 이를 재정렬하지 않는다.&lt;/li>
&lt;/ol>
&lt;p>구조:&lt;br>
UDP 데이터그램은 헤더와 데이터 부분으로 구성된다:&lt;/p>
&lt;ol>
&lt;li>UDP 헤더 (8바이트):
&lt;ul>
&lt;li>송신지 포트 번호 (2바이트)&lt;/li>
&lt;li>목적지 포트 번호 (2바이트)&lt;/li>
&lt;li>데이터그램 길이 (2바이트)&lt;/li>
&lt;li>체크섬 (2바이트)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 부분:
&lt;ul>
&lt;li>실제 전송할 애플리케이션 데이터&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>특성:&lt;/p>
&lt;ol>
&lt;li>크기 제한: UDP 데이터그램의 최대 크기는 65,535바이트(헤더 포함)이다.&lt;/li>
&lt;li>효율성: 헤더가 작아(8바이트) TCP에 비해 오버헤드가 적고 통신 효율이 높다.&lt;/li>
&lt;li>분할 기능 없음: UDP는 큰 데이터를 자동으로 분할하지 않는다. 필요한 경우 애플리케이션에서 데이터를 적절한 크기로 나눠야 한다.&lt;/li>
&lt;/ol>
&lt;h3>UDP의 사용 사례&lt;span class="hx-absolute -hx-mt-20" id="udp의-사용-사례">&lt;/span>
&lt;a href="#udp%ec%9d%98-%ec%82%ac%ec%9a%a9-%ec%82%ac%eb%a1%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>UDP는 다음과 같은 상황에서 주로 사용된다.:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>실시간 스트리밍&lt;/strong>: 영상 통화, 온라인 게임 등&lt;/li>
&lt;li>&lt;strong>DNS(Domain Name System)&lt;/strong>: 도메인 이름을 IP 주소로 변환&lt;/li>
&lt;li>&lt;strong>SNMP(Simple Network Management Protocol)&lt;/strong>: 네트워크 관리&lt;/li>
&lt;/ol>
&lt;h3>UDP를 실제 개발에 활용할 때의 코드 예시&lt;span class="hx-absolute -hx-mt-20" id="udp를-실제-개발에-활용할-때의-코드-예시">&lt;/span>
&lt;a href="#udp%eb%a5%bc-%ec%8b%a4%ec%a0%9c-%ea%b0%9c%eb%b0%9c%ec%97%90-%ed%99%9c%ec%9a%a9%ed%95%a0-%eb%95%8c%ec%9d%98-%ec%bd%94%eb%93%9c-%ec%98%88%ec%8b%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">socket&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UDP 서버 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">udp_server&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># UDP 소켓 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_DGRAM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 수신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Received message: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> from &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">server_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">b&lt;/span>&lt;span class="s2">&amp;#34;Message received&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># UDP 클라이언트 예시&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">udp_client&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client_socket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_DGRAM&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 데이터 전송&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;Hello, UDP Server!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sendto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;localhost&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12345&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 응답 수신&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client_socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">recvfrom&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1024&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Server response: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>참고 및 출처&lt;span class="hx-absolute -hx-mt-20" id="참고-및-출처">&lt;/span>
&lt;a href="#%ec%b0%b8%ea%b3%a0-%eb%b0%8f-%ec%b6%9c%ec%b2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item></channel></rss>