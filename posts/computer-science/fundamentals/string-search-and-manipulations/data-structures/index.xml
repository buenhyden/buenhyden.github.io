<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Data Structures for String Search and Manipulations on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/</link>
    <description>Recent content in Data Structures for String Search and Manipulations on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.146.4</generator>
    <language>en</language>
    <lastBuildDate>Sat, 12 Oct 2024 15:40:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Suffix Array vs Suffix Tree vs Trie</title>
      <link>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/suffix-array-vs-suffix-tree-vs-trie/</link>
      <pubDate>Sat, 12 Oct 2024 15:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/suffix-array-vs-suffix-tree-vs-trie/</guid>
      <description>Suffix Array, Suffix Tree, 그리고 Trie는 모두 문자열 처리와 패턴 매칭을 위한 데이터 구조로, 각각 고유한 특성과 용도를 가지고 있다.</description>
    </item>
    <item>
      <title>Rope</title>
      <link>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/rope/</link>
      <pubDate>Fri, 11 Oct 2024 08:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/rope/</guid>
      <description>Rope는 대규모 문자열을 효율적으로 저장하고 조작하기 위해 설계된 트리 기반의 데이터 구조</description>
    </item>
    <item>
      <title>Suffix Tree</title>
      <link>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/suffix-tree/</link>
      <pubDate>Fri, 11 Oct 2024 08:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/suffix-tree/</guid>
      <description>Suffix Tree는 문자열의 모든 접미사를 효율적으로 저장하고 검색하는 특수한 트리 구조로, 문자열 처리와 패턴 매칭을 위해 사용되는 고급 데이터 구조이다.</description>
    </item>
    <item>
      <title>트라이 (Trie)</title>
      <link>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/trie/</link>
      <pubDate>Fri, 11 Oct 2024 08:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/trie/</guid>
      <description>문자열을 효율적으로 저장하고 검색할 수 있는 트리 기반의 자료구조</description>
    </item>
    <item>
      <title>Suffix Array</title>
      <link>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/suffix-array/</link>
      <pubDate>Tue, 08 Oct 2024 13:01:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/computer-science/fundamentals/string-search-and-manipulations/data-structures/suffix-array/</guid>
      <description>Suffix Array는 문자열의 모든 접미사를 효율적으로 저장하고 관리하는 특수한 배열 구조로, 문자열 처리와 패턴 매칭을 위해 사용되는 고급 데이터 구조이다.</description>
    </item>
  </channel>
</rss>
