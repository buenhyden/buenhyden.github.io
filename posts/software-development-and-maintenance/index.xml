<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Development and Maintenance :: hyunyoun's Blog</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Fri, 27 Dec 2024 09:18:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/posts/software-development-and-maintenance/index.xml" rel="self" type="application/rss+xml"/><item><title>소프트웨어 개발 수명주기(Software Development Life Cycle, SDLC)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/</link><pubDate>Tue, 01 Oct 2024 05:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-life-cycle/</guid><description>소프트웨어의 계획, 개발, 테스트, 배포, 유지보수 등 전체 과정을 단계별로 정의한 체계적인 절차</description></item><item><title>소프트웨어 개발 프로세스 (Software Development Process)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-model/</link><pubDate>Sun, 29 Sep 2024 05:12:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/software-development-model/</guid><description>소프트웨어를 계획, 개발, 테스트 및 배포하는 전체 과정을 설명하는 체계적인 프로세스</description></item><item><title>사이트 신뢰성 엔지니어링 (Site Reliability Engineering, SRE)</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/site-reliability-engineering/</link><pubDate>Fri, 27 Dec 2024 09:18:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/site-reliability-engineering/</guid><description>IT 운영에 대한 소프트웨어 엔지니어링 접근 방식</description></item><item><title>DevOps</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/</link><pubDate>Sat, 28 Sep 2024 06:26:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/devops/</guid><description>소프트웨어 개발(Development)과 IT 운영(Operations)을 통합하는 문화, 철학, 방법론</description></item><item><title>Twelve-Factor App methodology</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/twelve-factor-app-methodology/</link><pubDate>Mon, 23 Dec 2024 01:40:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/twelve-factor-app-methodology/</guid><description>클라우드 네이티브 애플리케이션을 구축하기 위한 12가지 모범 사례를 제시</description></item><item><title>Secure Coding</title><link>https://buenhyden.github.io/posts/software-development-and-maintenance/secure-coding/</link><pubDate>Sun, 22 Sep 2024 01:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/posts/software-development-and-maintenance/secure-coding/</guid><description>Secure Coding은 소프트웨어 개발 과정에서 보안 취약점을 최소화하고 안전한 소프트웨어를 만들기 위한 코딩 기법이다.</description></item></channel></rss>