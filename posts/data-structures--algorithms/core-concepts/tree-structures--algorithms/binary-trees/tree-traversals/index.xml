<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tree Traversal on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/tree-structures--algorithms/binary-trees/tree-traversals/</link>
    <description>Recent content in Tree Traversal on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 06 Dec 2024 11:54:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/tree-structures--algorithms/binary-trees/tree-traversals/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Traversal 방법 비교</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/tree-structures--algorithms/binary-trees/tree-traversals/comparison-traversal/</link>
      <pubDate>Fri, 06 Dec 2024 11:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/tree-structures--algorithms/binary-trees/tree-traversals/comparison-traversal/</guid>
      <description>트리 순회(Tree Traversal)는 트리의 노드를 방문하는 방법으로, 트리 구조에서 데이터를 검색하고 처리하는 기본 개념이다.</description>
    </item>
  </channel>
</rss>
