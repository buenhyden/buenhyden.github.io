<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Data Structures and Algorithms on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/posts/data-structures--algorithms/</link>
    <description>Recent content in Data Structures and Algorithms on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.149.1</generator>
    <language>en</language>
    <lastBuildDate>Fri, 06 Dec 2024 10:59:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/posts/data-structures--algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>배열 (Array)</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/linear-structures--algorithms/arrays--lists/array/</link>
      <pubDate>Mon, 07 Oct 2024 05:52:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/linear-structures--algorithms/arrays--lists/array/</guid>
      <description>배열은 동일한 데이터 타입의 요소들을 연속된 메모리 공간에 저장하는 가장 기본적인 데이터 구조.</description>
    </item>
    <item>
      <title>그래프 (Graph)</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/advanced-topics/advanced-trees--graphs/graph-structures--algorithms/graphs/</link>
      <pubDate>Mon, 07 Oct 2024 05:54:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/advanced-topics/advanced-trees--graphs/graph-structures--algorithms/graphs/</guid>
      <description>노드(정점)와 엣지(간선)로 구성된 비선형 데이터 구조</description>
    </item>
    <item>
      <title>Asymptotic Notation</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/foundations/mathematical-foundations/complexity-analysis/asymptotic-analysis/asymptotic-notation/</link>
      <pubDate>Fri, 06 Dec 2024 10:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/foundations/mathematical-foundations/complexity-analysis/asymptotic-analysis/asymptotic-notation/</guid>
      <description>점근적 표기법은 알고리즘의 효율성을 수학적으로 표현하는 방법으로, 입력 크기가 무한히 커질 때 알고리즘의 성능이 어떻게 변화하는지를 나타낸다.</description>
    </item>
    <item>
      <title>Types of Sorting Algorithm</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/comparison-guides/algorithm-comparisons/sorting-algorithm-comparison/comparison--of-sorting-algorithm/</link>
      <pubDate>Tue, 15 Oct 2024 04:16:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/comparison-guides/algorithm-comparisons/sorting-algorithm-comparison/comparison--of-sorting-algorithm/</guid>
      <description>정렬(Sorting) 알고리즘은 데이터를 특정 순서(오름차순/내림차순)로 정렬하는 알고리즘이다.</description>
    </item>
    <item>
      <title>Cuckoo Hash Table</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/hash-based-structures/advanced-hashing/cuckoo-hashing/cuckoo-hash-table/</link>
      <pubDate>Wed, 09 Oct 2024 12:57:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/hash-based-structures/advanced-hashing/cuckoo-hashing/cuckoo-hash-table/</guid>
      <description>Cuckoo Hash Table은 해시 충돌 문제를 해결하기 위해 개발된 해시 테이블의 한 종류로, 두 개 이상의 해시 함수를 사용하여 각 키에 대해 여러 개의 가능한 위치를 제공한다.</description>
    </item>
    <item>
      <title>Circular Queue</title>
      <link>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/linear-structures--algorithms/stack--queue/queue-implementation/circular-queue/</link>
      <pubDate>Tue, 08 Oct 2024 12:59:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/posts/data-structures--algorithms/core-concepts/linear-structures--algorithms/stack--queue/queue-implementation/circular-queue/</guid>
      <description>Circular Queue는 마지막 요소가 첫 번째 요소와 연결되어 원형 구조를 형성하는 큐 데이터 구조이다.</description>
    </item>
  </channel>
</rss>
