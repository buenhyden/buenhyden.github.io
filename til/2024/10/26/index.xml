<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>26 on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/til/2024/10/26/</link>
    <description>Recent content in 26 on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Sat, 26 Oct 2024 17:39:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/til/2024/10/26/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OSI 7 Layers vs TCPIP 4 Layers</title>
      <link>https://buenhyden.github.io/til/2024/10/26/osi-7-layers-vs-tcpip-4-layers/</link>
      <pubDate>Sat, 26 Oct 2024 02:11:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/osi-7-layers-vs-tcpip-4-layers/</guid>
      <description>OSI 7계층은 네트워크 통신의 표준 참조 모델이며, TCP/IP 4계층은 이를 바탕으로 구현된 실제 인터넷 통신의 기반이 된다.</description>
    </item>
    <item>
      <title>Websocket vs WebRTC</title>
      <link>https://buenhyden.github.io/til/2024/10/26/websocket-vs-webrtc/</link>
      <pubDate>Sat, 26 Oct 2024 05:53:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/websocket-vs-webrtc/</guid>
      <description>WebSocket과 WebRTC는 실시간 웹 통신을 위한 중요한 기술</description>
    </item>
    <item>
      <title>Streaming vs Polling</title>
      <link>https://buenhyden.github.io/til/2024/10/26/streaming-vs-polling/</link>
      <pubDate>Sat, 26 Oct 2024 08:44:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/streaming-vs-polling/</guid>
      <description>Streaming과 polling은 실시간 데이터 전송을 위해 사용되는 두 가지 주요 기술</description>
    </item>
    <item>
      <title>RESTful API vs GraphQL API vs Webhook vs Server-sent Events vs Websocket vs WebRTC</title>
      <link>https://buenhyden.github.io/til/2024/10/26/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc/</link>
      <pubDate>Sat, 26 Oct 2024 06:08:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc/</guid>
      <description>API의 여러 유형인 RESTful API, GraphQL API, Webhook, Server-sent Events, WebSocket, WebRTC에 대해 정리하고 비교 분석</description>
    </item>
    <item>
      <title>Webhook vs Server-Sent Events</title>
      <link>https://buenhyden.github.io/til/2024/10/26/webhook-vs-server-sent-events/</link>
      <pubDate>Sat, 26 Oct 2024 06:04:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/webhook-vs-server-sent-events/</guid>
      <description>Webhook과 Server-Sent Events(SSE)는 실시간 데이터 전송을 위한 웹 기술이다.</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://buenhyden.github.io/til/2024/10/26/api-gateway/</link>
      <pubDate>Sat, 26 Oct 2024 09:40:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/api-gateway/</guid>
      <description>클라이언트와 백엔드 서비스 사이에서 중개자 역할을 하는 서버로, 여러 마이크로서비스나 백엔드 시스템에 대한 단일 진입점을 제공하는 중요한 컴포넌트</description>
    </item>
    <item>
      <title>Cloud Networking</title>
      <link>https://buenhyden.github.io/til/2024/10/26/cloud-networking/</link>
      <pubDate>Sat, 26 Oct 2024 17:39:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/cloud-networking/</guid>
      <description>클라우드 네트워킹은 클라우드 컴퓨팅 환경에서 리소스들을 연결하고 통신할 수 있게 해주는 인프라를 의미한다.</description>
    </item>
    <item>
      <title>폴링(Polling)</title>
      <link>https://buenhyden.github.io/til/2024/10/26/polling/</link>
      <pubDate>Sat, 26 Oct 2024 16:50:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/polling/</guid>
      <description>폴링(Polling)은 소프트웨어 개발에서 중요한 통신 기법으로, 클라이언트가 주기적으로 서버에 데이터나 상태 변경을 요청하는 방식이다.</description>
    </item>
    <item>
      <title>Data Transmission</title>
      <link>https://buenhyden.github.io/til/2024/10/26/data-transmission/</link>
      <pubDate>Sat, 26 Oct 2024 09:32:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/data-transmission/</guid>
      <description>데이터 전송 및 처리 방식은 다양한 기준에 따라 분류되며, 각 방식은 특정한 통신 환경과 요구 사항에 맞게 선택된다.</description>
    </item>
    <item>
      <title>스트리밍 (Streaming)</title>
      <link>https://buenhyden.github.io/til/2024/10/26/streaming/</link>
      <pubDate>Sat, 26 Oct 2024 06:48:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/streaming/</guid>
      <description>스트리밍은 인터넷을 통해 오디오, 비디오 및 기타 콘텐츠를 실시간으로 전송하고 재생하는 기술</description>
    </item>
    <item>
      <title>네트워크 기능 가상화(Network Functions Virtualization, NFV)</title>
      <link>https://buenhyden.github.io/til/2024/10/26/network-functions-virtualization/</link>
      <pubDate>Sat, 26 Oct 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/network-functions-virtualization/</guid>
      <description>NFV는 전통적으로 전용 하드웨어 장비에서 실행되던 네트워크 기능들을 가상화하여 소프트웨어로 구현하는 네트워크 아키텍처 개념이다.</description>
    </item>
    <item>
      <title>소프트웨어 정의 네트워킹 (Software-Defined Networking, SDN)</title>
      <link>https://buenhyden.github.io/til/2024/10/26/software-defined-networking/</link>
      <pubDate>Sat, 26 Oct 2024 02:00:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/software-defined-networking/</guid>
      <description>네트워크의 제어 기능을 네트워크 장비에서 분리하여 소프트웨어 기반 컨트롤러로 중앙집중화하는 네트워크 아키텍처.</description>
    </item>
    <item>
      <title>RDMA</title>
      <link>https://buenhyden.github.io/til/2024/10/26/rdma/</link>
      <pubDate>Sat, 26 Oct 2024 01:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/10/26/rdma/</guid>
      <description>네트워크 상의 한 컴퓨터에서 다른 컴퓨터의 메모리에 직접 접근할 수 있게 해주는 기술로, CPU의 개입 없이 데이터를 전송할 수 있는 고성능 네트워크 기술</description>
    </item>
  </channel>
</rss>
