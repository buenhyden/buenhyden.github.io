<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>30 on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/til/2024/09/30/</link>
    <description>Recent content in 30 on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.143.0</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Sep 2024 15:24:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/til/2024/09/30/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cache Strategy vs Cache Policy</title>
      <link>https://buenhyden.github.io/til/2024/09/30/cache-strategy-vs-cache-policy/</link>
      <pubDate>Mon, 30 Sep 2024 15:24:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/09/30/cache-strategy-vs-cache-policy/</guid>
      <description>&lt;h2 id=&#34;cache-strategy-vs-cache-policy&#34;&gt;Cache Strategy Vs Cache Policy&lt;/h2&gt;
&lt;p&gt;캐시 전략(Cache Strategy)과 캐시 정책(Cache Policy)은 컴퓨터 아키텍처에서 캐시 메모리의 효율적 운영을 위한 핵심 개념이다.&lt;br&gt;
이 둘은 상호보완적이지만 명확한 차이가 있다.&lt;/p&gt;
&lt;h3 id=&#34;캐시-전략cache-strategy&#34;&gt;캐시 전략(Cache Strategy)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;캐시 전략&lt;/strong&gt;은 시스템 전체의 캐시 사용 방식을 결정하는 상위 레벨의 설계 접근법을 의미한다.&lt;/p&gt;
&lt;p&gt;주로 다음과 같은 요소를 포함한다:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;계층적 구조&lt;/strong&gt;: L1, L2, L3 캐시로 이어지는 메모리 계층 구조 설계&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;분산 캐시&lt;/strong&gt;: 여러 서버에 캐시를 분산하여 처리 능력 확장&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;데이터 프리페칭&lt;/strong&gt;: 프로세서가 필요로 할 데이터를 미리 예측하여 캐시에 로드&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;클라이언트 측 캐싱&lt;/strong&gt;: 사용자 브라우저에 데이터 저장으로 서버 부하 감소&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예시: 멀티코어 프로세서에서 L3 캐시를 공유하여 코어 간 데이터 일관성 유지&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
