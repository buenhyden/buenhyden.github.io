<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>12 :: hyunyoun's Blog</title><link>https://buenhyden.github.io/til/2024/12.html</link><description/><generator>Hugo</generator><language>en</language><managingEditor>chochyjj@gmail.com (Hyunyoun Jo)</managingEditor><webMaster>chochyjj@gmail.com (Hyunyoun Jo)</webMaster><lastBuildDate>Thu, 16 Jan 2025 08:24:00 +0000</lastBuildDate><atom:link href="https://buenhyden.github.io/til/2024/12/index.xml" rel="self" type="application/rss+xml"/><item><title>Webhook vs Server-Sent Events</title><link>https://buenhyden.github.io/til/2024/12/webhook-vs-server-sent-events.html</link><pubDate>Fri, 20 Dec 2024 06:04:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/webhook-vs-server-sent-events.html</guid><description>Webhook과 Server-Sent Events(SSE)는 실시간 데이터 전송을 위한 웹 기술이다.</description></item><item><title>CCE vs CVE vs CWE</title><link>https://buenhyden.github.io/til/2024/12/cce-vs-cve-vs-cwe.html</link><pubDate>Sun, 22 Dec 2024 07:53:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/cce-vs-cve-vs-cwe.html</guid><description>CCE, CVE, CWE는 모두 컴퓨터 시스템과 소프트웨어의 보안 취약점을 식별하고 분류하기 위한 표준화된 체계이다.</description></item><item><title>QA and QC and Testing</title><link>https://buenhyden.github.io/til/2024/12/quality-assurance-and-quality-control-and-testing.html</link><pubDate>Mon, 30 Dec 2024 07:13:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/quality-assurance-and-quality-control-and-testing.html</guid><description>Quality Assurance (QA)는 제품이나 서비스의 품질을 보장하기 위한 계획적이고 체계적인 활동들의 집합이며, Quality Control (QC)는 개발된 제품이나 서비스가 정해진 품질 기준을 충족하는지 확인하는 활동이고, Testing은 소프트웨어가 예상대로 작동하는지 확인하는 구체적인 실행 활동이다.</description></item><item><title>Paging vs Segmentation</title><link>https://buenhyden.github.io/til/2024/12/paging-vs-segmentation.html</link><pubDate>Thu, 16 Jan 2025 08:24:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/paging-vs-segmentation.html</guid><description>Paging과 Segmentation은 운영체제의 메모리 관리 기법이다.</description></item><item><title>System Test vs End-to-End Test</title><link>https://buenhyden.github.io/til/2024/12/system-test-vs-end-to-end-test.html</link><pubDate>Fri, 27 Dec 2024 02:11:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/system-test-vs-end-to-end-test.html</guid><description>System Testing과 End-to-End Testing은 소프트웨어 테스팅 과정에서 사용되는 두 가지 중요한 테스트 방법이다. 이 두 방법은 소프트웨어의 품질을 보장하기 위해 사용되지만, 그 범위와 목적에 차이가 있다.</description></item><item><title>Monitoring and Observability</title><link>https://buenhyden.github.io/til/2024/12/monitoring-and-observability.html</link><pubDate>Wed, 25 Dec 2024 08:23:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/monitoring-and-observability.html</guid><description>Observability는 시스템의 내부 상태를 외부 출력을 통해 이해하고 추론할 수 있는 능력을 말하고, Monitoring은 시스템의 동작과 성능을 지속적으로 관찰하고 추적하는 활동을 말한다.</description></item><item><title>Deadlock vs Livelock</title><link>https://buenhyden.github.io/til/2024/12/deadlock-vs-livelock.html</link><pubDate>Wed, 25 Dec 2024 07:03:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/deadlock-vs-livelock.html</guid><description>데드락(Deadlock)과 라이브락(Livelock)은 둘 다 동시성 프로그래밍에서 발생할 수 있는 문제 상황으로, 데드락과 라이브락은 모두 시스템의 진행을 방해하는 심각한 문제이다</description></item><item><title>WCS(Warehouse Control System)</title><link>https://buenhyden.github.io/til/2024/12/warehouse-control-system.html</link><pubDate>Tue, 24 Dec 2024 06:57:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/warehouse-control-system.html</guid><description>WCS(Warehouse Control System)는 물류 창고의 자동화 설비를 실시간으로 제어하고 관리하는 시스템</description></item><item><title>물류 운송 관리 시스템 (Transportation Management System, TMS)</title><link>https://buenhyden.github.io/til/2024/12/transportation-management-system.html</link><pubDate>Tue, 24 Dec 2024 06:56:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/transportation-management-system.html</guid><description>물류 운송 관리 시스템으로, 기업의 물류 운송 프로세스를 효율적으로 관리하고 최적화하기 위한 솔루션</description></item><item><title>Cloud and On-Premise</title><link>https://buenhyden.github.io/til/2024/12/cloud-and-on-premise.html</link><pubDate>Sat, 21 Dec 2024 10:33:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/cloud-and-on-premise.html</guid><description>Cloud와 On-Premise는 기업의 IT 인프라를 구축하고 관리하는 두 가지 주요 방식을 설명하는 개념이다.</description></item><item><title>Enterprise Resource Planning</title><link>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning.html</link><pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/enterprise-resource-planning.html</guid><description>ERP(Enterprise Resource Planning)는 기업의 모든 자원을 통합적으로 관리하고 운영하기 위한 시스템</description></item><item><title>Warehouse Management System</title><link>https://buenhyden.github.io/til/2024/12/warehouse-management-system.html</link><pubDate>Sat, 21 Dec 2024 00:01:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/warehouse-management-system.html</guid><description>WMS(Warehouse Management System)는 창고 관리 시스템으로, 창고 내의 물류 프로세스를 최적화하고 효율적으로 관리하기 위한 소프트웨어 애플리케이션을 말한다</description></item><item><title>E-Commerce Service</title><link>https://buenhyden.github.io/til/2024/12/e-commerce-service.html</link><pubDate>Fri, 20 Dec 2024 12:54:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/e-commerce-service.html</guid><description>물품 구매 서비스를 구현하기 위해 필요한 사항들을 정리한다.</description></item><item><title>RESTful API vs GraphQL API vs Webhook vs Server-sent Events vs Websocket vs WebRTC</title><link>https://buenhyden.github.io/til/2024/12/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc.html</link><pubDate>Fri, 20 Dec 2024 06:08:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/restful-api-vs-graphql-api-vs-webhook-vs-server-sent-events-vs-websocket-vs-webrtc.html</guid><description>API의 여러 유형인 RESTful API, GraphQL API, Webhook, Server-sent Events, WebSocket, WebRTC에 대해 정리하고 비교 분석</description></item><item><title>선사용 IT 솔루션</title><link>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98.html</link><pubDate>Fri, 20 Dec 2024 01:43:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/%EC%84%A0%EC%82%AC%EC%9A%A9-it-%EC%86%94%EB%A3%A8%EC%85%98.html</guid><description>해운업계의 디지털 전환 사례와 최신 기술 트렌드를 기반으로 정리</description></item><item><title>Streaming vs Polling</title><link>https://buenhyden.github.io/til/2024/12/streaming-vs-polling.html</link><pubDate>Tue, 17 Dec 2024 08:44:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/streaming-vs-polling.html</guid><description>Streaming과 polling은 실시간 데이터 전송을 위해 사용되는 두 가지 주요 기술</description></item><item><title>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)</title><link>https://buenhyden.github.io/til/2024/12/database-clustering-and-replication.html</link><pubDate>Thu, 05 Dec 2024 15:42:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/database-clustering-and-replication.html</guid><description>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)은 데이터베이스의 가용성과 성능을 향상시키는 전략으로, 각각의 목적과 구현 방식에서 차이가 있다.</description></item><item><title>라이브러리 (Library)와 프레임워크 (Framework)</title><link>https://buenhyden.github.io/til/2024/12/library-and-framework.html</link><pubDate>Tue, 03 Dec 2024 06:47:00 +0000</pubDate><author>chochyjj@gmail.com (Hyunyoun Jo)</author><guid>https://buenhyden.github.io/til/2024/12/library-and-framework.html</guid><description>라이브러리(Library)는 특정 기능을 수행하는 코드의 모음이고, 프레임워크(Framework)는 애플리케이션 개발의 기본 구조를 제공한다.</description></item></channel></rss>