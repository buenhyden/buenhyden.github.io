<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>01 on hyunyoun&#39;s Blog</title>
    <link>https://buenhyden.github.io/til/2024/11/01/</link>
    <description>Recent content in 01 on hyunyoun&#39;s Blog</description>
    <image>
      <title>hyunyoun&#39;s Blog</title>
      <url>https://buenhyden.github.io/images</url>
      <link>https://buenhyden.github.io/images</link>
    </image>
    <generator>Hugo -- 0.142.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Nov 2024 15:42:00 +0000</lastBuildDate>
    <atom:link href="https://buenhyden.github.io/til/2024/11/01/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nginx vs Apache HTTP Server vs Caddy</title>
      <link>https://buenhyden.github.io/til/2024/11/01/nginx-vs-apache-tomcat-vs-caddy/</link>
      <pubDate>Fri, 01 Nov 2024 11:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/nginx-vs-apache-tomcat-vs-caddy/</guid>
      <description>Nginx, Apache HTTP Server, 그리고 Caddy는 모두 웹 서버 소프트웨어이다.</description>
    </item>
    <item>
      <title>Kafka vs RabbitMQ</title>
      <link>https://buenhyden.github.io/til/2024/11/01/kafka-vs-rabbitmq/</link>
      <pubDate>Fri, 01 Nov 2024 11:41:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/kafka-vs-rabbitmq/</guid>
      <description>Kafka와 RabbitMQ는 모두 메시지 브로커 시스템으로, 분산 시스템에서 데이터를 효율적으로 전송하고 처리하는 역할을 한다.</description>
    </item>
    <item>
      <title>Redis와 Valkey</title>
      <link>https://buenhyden.github.io/til/2024/11/01/redis%EC%99%80-valkey/</link>
      <pubDate>Fri, 01 Nov 2024 01:34:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/redis%EC%99%80-valkey/</guid>
      <description>Redis와 Valkey 모두 인메모리 데이터베이스로, 빠른 읽기/쓰기 성능을 제공하나, Redis의 라이선스 정책 변경으로 인해 Valkey가 fork되어 새로운 프로젝트가 되었다.</description>
    </item>
    <item>
      <title>ER(Entity-Relationship) 모델링</title>
      <link>https://buenhyden.github.io/til/2024/11/01/entity-relationship-modeling/</link>
      <pubDate>Fri, 01 Nov 2024 02:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/entity-relationship-modeling/</guid>
      <description>실제 세계의 데이터를 개체(Entity), 관계(Relationship), 속성(Attribute)으로 표현하여 데이터베이스를 설계하는 방법</description>
    </item>
    <item>
      <title>Elasticsearch and Opensearch</title>
      <link>https://buenhyden.github.io/til/2024/11/01/elasticsearch-and-opensearch/</link>
      <pubDate>Fri, 01 Nov 2024 06:06:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/elasticsearch-and-opensearch/</guid>
      <description>Elasticsearch는 Apache Lucene 기반의 오픈소스 검색엔진이며, Opensearch는 Elasticsearch의 포크 버전</description>
    </item>
    <item>
      <title>Web Application Server (WAS) and Web Server</title>
      <link>https://buenhyden.github.io/til/2024/11/01/web-application-server-and-web-server/</link>
      <pubDate>Fri, 01 Nov 2024 07:36:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/web-application-server-and-web-server/</guid>
      <description>Web Application Server와 Web Server 비교 분석한다.</description>
    </item>
    <item>
      <title>Message Queue vs Message Broker vs Event Broker</title>
      <link>https://buenhyden.github.io/til/2024/11/01/message-queue-vs-message-broker-vs-event-broker/</link>
      <pubDate>Fri, 01 Nov 2024 07:27:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/message-queue-vs-message-broker-vs-event-broker/</guid>
      <description>Message Queue의 Event Broker와 Message Broker를 비교한다.</description>
    </item>
    <item>
      <title>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)</title>
      <link>https://buenhyden.github.io/til/2024/11/01/database-clustering-and-replication/</link>
      <pubDate>Fri, 01 Nov 2024 15:42:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/database-clustering-and-replication/</guid>
      <description>데이터베이스 클러스터링 (Clustering)과 레플리케이션(Replication)은 데이터베이스의 가용성과 성능을 향상시키는 전략으로, 각각의 목적과 구현 방식에서 차이가 있다.</description>
    </item>
    <item>
      <title>데이터 불일치 (Data Inconsistency)</title>
      <link>https://buenhyden.github.io/til/2024/11/01/data-inconsistency/</link>
      <pubDate>Fri, 01 Nov 2024 07:22:00 +0000</pubDate>
      <guid>https://buenhyden.github.io/til/2024/11/01/data-inconsistency/</guid>
      <description>동일한 데이터가 데이터베이스 내의 여러 위치에서 서로 다른 형식이나 값으로 존재하는 상황</description>
    </item>
  </channel>
</rss>
